quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"/** \class ProposalFunction; \ingroup Roostats; ProposalFunction is an interface for all proposal functions that would be used; with a Markov Chain Monte Carlo algorithm.; Given a current point in the parameter space it proposes a new point.; Proposal functions may or may not be symmetric, in the sense that the; probability to propose X1 given we are at X2; need not be the same as the probability to propose X2 given that we are at X1.; In this case, the IsSymmetric method; should return false, and the Metropolis algorithm will need to take into account; the proposal density to maintain detailed balance.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalFunction.h:71,interface,interface,71,roofit/roostats/inc/RooStats/ProposalFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalFunction.h,1,['interface'],['interface']
Integrability,"/** \class Queue; * \brief Keeps a queue of tasks for workers and manages the queue process through its event loop; *; * The Queue maintains a set of tasks on the queue process by receiving them; * from the master process. Worker processes can request to pop them off the; * queue. The communication between these processes is handled inside; * 'Queue::loop()', the queue process's event loop that polls the Messenger's; * sockets for incoming messages and handles them when they come.; *; * The reason for this class is to get automatic load balancing between; * workers. By allowing workers to request tasks whenever they are ready to; * do work, we don't need to manually distribute work over workers and they; * will always have something to do until all tasks have been completed.; * The alternative simple strategy of just distributing all tasks evenly over; * workers will be suboptimal when tasks have different or even varying; * runtimes (this simple strategy could be implemented with a PUSH-PULL; * ZeroMQ socket from master to workers, which would distribute tasks in a; * round-robin fashion, which, indeed, does not do load balancing).; */; /// Helper function for 'Queue::loop()'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx:444,message,messages,444,roofit/multiprocess/src/Queue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Queue.cxx,1,['message'],['messages']
Integrability,"/** \class REveBoxSet; \ingroup REve; Collection of 3D primitives (fixed-size boxes, boxes of different; sizes, or arbitrary sexto-epipeds, cones). Each primitive can be assigned; a signal value and a TRef. A collection of 3D-markers. The way how they are defined depends; on the fBoxType data-member.; - kBT_FreeBox arbitrary box: specify 8*(x,y,z) box corners; - kBT_AABox axis-aligned box: specify (x,y,z) and (w, h, d); - kBT_AABoxFixedDim axis-aligned box w/ fixed dimensions: specify (x,y,z); also set fDefWidth, fDefHeight and fDefDepth; - kBT_Cone cone defined with position, axis-vector and radius; - EllipticCone cone with elliptic base (specify another radius and angle in deg). Each primitive can be assigned:. 1. Color or signal value. Thresholds and signal-to-color mapping; can then be set dynamically via the REveRGBAPalette class.; 2. External TObject* (stored as TRef). See also base-class REveDigitSet for more information.; Tutorial: tutorials/eve/boxset_test.C; */; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveBoxSet.cxx:264,depend,depends,264,graf3d/eve7/src/REveBoxSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveBoxSet.cxx,1,['depend'],['depends']
Integrability,"/** \class REveGeoManagerHolder; \ingroup REve; Exception safe wrapper for setting gGeoManager.; Functionality to lock-unlock via setting of a static lock in; TGeoManager should be added (new feature of TGeoManager).; */; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.; /// If n_seg is specified and larger than 2, the new geo-manager's; /// NSegments is set to this value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveUtil.cxx:63,wrap,wrapper,63,graf3d/eve7/src/REveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveUtil.cxx,1,['wrap'],['wrapper']
Integrability,"/** \class REveGeoShape; \ingroup REve; Wrapper for TGeoShape with absolute positioning and color; attributes allowing display of extracted TGeoShape's (without an; active TGeoManager) and simplified geometries (needed for non-linear; projections). TGeoCompositeShapes and TGeoAssemblies are supported. If fNSegments data-member is < 2 (0 by default), the default number of; segments is used for tesselation and special GL objects are; instantiated for selected shapes (spheres, tubes). If fNSegments is > 2,; it gets forwarded to geo-manager and this tesselation detail is; used when creating the buffer passed to GL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoShape.cxx:40,Wrap,Wrapper,40,graf3d/eve7/src/REveGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoShape.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class REveRGBAPalette; \ingroup REve; A generic, speed-optimised mapping from value to RGBA color; supporting different wrapping and range truncation modes. Flag fFixColorRange: specifies how the palette is mapped to signal values:; - true - LowLimit -> HighLimit; - false - MinValue -> MaxValue; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveRGBAPalette.cxx:125,wrap,wrapping,125,graf3d/eve7/src/REveRGBAPalette.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveRGBAPalette.cxx,1,['wrap'],['wrapping']
Integrability,"/** \class REveSecondarySelectable; \ingroup REve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from REveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual std::string REveElement::GetHighlightTooltip() const;; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See EveDigitSet for an example.; */; ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate selected set accordingly.; /*. void REveSecondarySelectable::ProcessGLSelection(TGLSelectRecord& rec); {; if (rec.GetHighlight()); ProcessGLSelectionInternal(rec, fHighlightedSet);; else; ProcessGLSelectionInternal(rec, fSelectedSet);; }. ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate given set accordingly. void REveSecondarySelectable::ProcessGLSelectionInternal(TGLSelectRecord& rec,; SelectionSet_t& sset); {; Int_t id = (rec.GetN() > 1) ? (Int_t) rec.GetItem(1) : -1;. if (sset.empty()); {; if (id >= 0); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kEnteringSelection);; }; }; else; {; if (id >= 0); {; if (rec.GetMultiple()); {; if (sset.find(id) == sset.end()); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; else; {; sset.erase(id);; if (sset.empty()); rec.SetSecSelResult(TGLSelectRecord::kLeavingSelection);; else; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; else; {; if (sset.size() != 1 || sset.find(id) == sset.end()); {; sset.clear();; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; }; else; {; if (!rec.GetMulti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx:65,interface,interface,65,graf3d/eve7/src/REveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx,1,['interface'],['interface']
Integrability,"/** \class RHistStatRuntime; Interface implementing a pure virtual functions `DoFill()`, `DoFillN()`.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx:29,Interface,Interface,29,hist/histv7/inc/ROOT/RHistData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistData.hxx,1,['Interface'],['Interface']
Integrability,/** \class ROOT::Experimental::Internal::RVirtualCanvasPainter; \ingroup GpadROOT7; \brief Abstract interface for painting a canvas.; \author Axel Naumann <axel@cern.ch>; \date 2017-05-31; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx:100,interface,interface,100,graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RVirtualCanvasPainter.hxx,1,['interface'],['interface']
Integrability,"/** \class ROOT::RFileDialog; \ingroup rbrowser; Initial message send to client to configure layout; */; /// function signature for file dialog call-backs; /// argument is selected file name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx:57,message,message,57,gui/browserv7/inc/ROOT/RFileDialog.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx,1,['message'],['message']
Integrability,"/** \class ROOT::RWebDisplayHandle; \ingroup webdisplay. Handle of created web-based display; Depending from type of web display, holds handle of started browser process or other display-specific information; to correctly stop and cleanup display.; */; //////////////////////////////////////////////////////////////////////////////////////////////////; /// Static holder of registered creators of web displays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx:94,Depend,Depending,94,gui/webdisplay/src/RWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx,1,['Depend'],['Depending']
Integrability,"/** \class RRawFileNetXNG RRawFileNetXNG.hxx. The RRawFileNetXNG class provides read-only access to remote files using root/roots protocol. It uses the; XrdCl (XRootD client) library for the transport layer. It instructs the RRawFile base class to buffer in; larger chunks than the default for local files, assuming that remote file access has high(er) latency. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/inc/ROOT/RRawFileNetXNG.hxx:130,protocol,protocol,130,net/netxng/inc/ROOT/RRawFileNetXNG.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/inc/ROOT/RRawFileNetXNG.hxx,1,['protocol'],['protocol']
Integrability,/** \class RWrapper; \ingroup rbrowser; \brief Wrapper for other element - to provide different name; \author Sergey Linev <S.Linev@gsi.de>; \date 2019-11-22; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx:47,Wrap,Wrapper,47,gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class RooJSONFactoryWSTool; \ingroup roofit_dev_docs_hs3. When using \ref Roofitmain, statistical models can be conveniently handled and; stored as a RooWorkspace. However, for the sake of interoperability; with other statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:194,interoperab,interoperability,194,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['interoperab'],['interoperability']
Integrability,"/** \class RooJeffreysPrior; \ingroup Roofit. Implementation of Jeffrey's prior. This class estimates the fisher information matrix by generating; a binned Asimov dataset from the supplied PDFs, fitting it, retrieving the covariance matrix and inverting; it. It returns the square root of the determinant of this matrix.; Numerical integration is used to normalise. Since each integration step requires fits to be run,; evaluating complicated PDFs may take long. Check the tutorial rs302_JeffreysPriorDemo.C for a demonstration with a simple PDF.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx:332,integrat,integration,332,roofit/roofit/src/RooJeffreysPrior.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJeffreysPrior.cxx,2,['integrat'],['integration']
Integrability,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:72,wrap,wraps,72,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx,2,['wrap'],"['wrapper', 'wraps']"
Integrability,"/** \class RooStats::FeldmanCousins; \ingroup Roostats. The FeldmanCousins class (like the Feldman-Cousins technique) is essentially a; specific configuration of the more general NeymanConstruction. It is a concrete; implementation of the IntervalCalculator interface that, which uses the; NeymanConstruction in a particular way. As the name suggests, it returns a; ConfidenceInterval. In particular, it produces a RooStats::PointSetInterval,; which is a concrete implementation of the ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually encoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval. In the case of the Feldman-Cousins approach, the ordering principle is the; likelihood ratio -- motivated by the Neyman-Pearson lemma. When nuisance; parameters are involved, the profile likelihood ratio is the natural; generalization. One may either choose to perform the construction over the full; space of the nuisance parameters, or restrict the nuisance parameters to their; conditional MLE (eg. profiled values). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx:258,interface,interface,258,roofit/roostats/src/FeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,/** \class RooStats::HLFactory; \ingroup Roostats. HLFactory is an High Level model Factory allows you to; describe your models in a configuration file; (_datacards_) acting as an interface with the RooFactoryWSTool.; Moreover it provides tools for the combination of models and datasets. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:180,interface,interface,180,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['interface'],['interface']
Integrability,"/** \class RooStats::TestStatSampler; \ingroup Roostats. TestStatSampler is an interface class for a tools which produce RooStats; SamplingDistributions. Tools that implement this interface are expected to be; used for coverage studies, the Neyman Construction, etc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatSampler.h:79,interface,interface,79,roofit/roostats/inc/RooStats/TestStatSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatSampler.h,2,['interface'],['interface']
Integrability,/** \class RooStats::TestStatistic; \ingroup Roostats. TestStatistic is an interface class to provide a facility for construction test statistics; distributions to the NeymanConstruction class. All the actual samplers inherit from this class.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatistic.h:75,interface,interface,75,roofit/roostats/inc/RooStats/TestStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatistic.h,1,['interface'],['interface']
Integrability,"/** \class TASPngWriter; \ingroup asimage. C++ wrapper over simple writer of PNG files for standard GL memory formats:; LUMINANCE, LUMINANCE_ALPHA, RGB, and RGBA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPngWriter.cxx:47,wrap,wrapper,47,graf2d/asimage/src/TASPngWriter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPngWriter.cxx,1,['wrap'],['wrapper']
Integrability,"/** \class TArrowEditor; \ingroup ged. Implements user interface for editing of arrow attributes:; shape, size, angle.; */; ////////////////////////////////////////////////////////////////////////////////; /// Constructor of arrow GUI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TArrowEditor.cxx:55,interface,interface,55,gui/ged/src/TArrowEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TArrowEditor.cxx,1,['interface'],['interface']
Integrability,/** \class TBrowserObject; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx:53,wrap,wrap,53,core/gui/src/TBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowser.cxx,2,"['inject', 'wrap']","['inject', 'wrap']"
Integrability,"/** \class TBuffer3D; \ingroup Base. Generic 3D primitive description class.; See TBuffer3DTypes for producer classes. ### Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in OpenGL); - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details). \image html base_tbuffer3d.png. The `SectionsValid() / SetSectionsValid / ClearSectionsValid()` methods of; TBuffer3D are used to test/set/clear these section valid flags. The sections found in TBuffer3D (`Core/BoundingBox/Raw Sizes/Raw`) are sufficient; to describe any tessellated shape in a generic fashion. An additional; `ShapeSpecific` section in derived shape specific classes allows a more abstract; shape description (""a sphere of inner radius x, outer radius y""). This; enables a viewer which knows how to draw (tessellate) the shape itself to do so,; which can bring considerable performance and quality benefits, while providing a; generic fallback suitable for all viewers. The rules for client negotiation with the viewer are:. - If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; - Complete the mandatory Core section.; - Complete the ShapeSpecific section if applicable.; - Complete the BoundingBox if you can.; - Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSizes) AddObject(); will return flags indicating which ones, otherwise it returns kNo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:203,interface,interface,203,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['interface'],['interface']
Integrability,"/** \class TButton; \ingroup gpad. A TButton object is a user interface object. A TButton has a name and an associated action.; When the button is clicked with the left mouse button, the corresponding; action is executed. A TButton can be created by direct invocation of the constructors; or via the graphics editor. The action can be set via TButton::SetMethod.; The action can be any command. Examples of actions:; - ""34+78"" When the button is clicked, the result of addition is printed.; - "".x macro.C"" . Clicking the button executes the macro macro.C; The action can be modified at any time via TButton::SetMethod. To modify the layout/size/contents of one or several buttons; in a canvas, you must set the canvas editable via TCanvas::SetEditable.; By default a TCanvas is editable.; By default a TDialogCanvas is not editable.; TButtons are in general placed in a TDialogCanvas. A TButton being a TPad, one can draw graphics primitives in it; when the TCanvas/TDialogCanvas is editable. Example of a macro creating a dialog canvas with buttons:; ~~~ {.cpp}; void but() {; // example of a dialog canvas with a few buttons. TDialogCanvas *dialog = new TDialogCanvas(""dialog"","""",200,300);. // Create first button. Clicking on this button will execute 34+56; TButton *but1 = new TButton(""button1"",""34+56"",.05,.8,.45,.88);; but1->Draw();. // Create second button. Clicking on this button will create a new canvas; TButton *but2 = new TButton(""canvas"",""c2 = new TCanvas(\""c2\"")"",.55,.8,.95,.88);; but2->Draw();. // Create third button. Clicking on this button will invoke the browser; but3 = new TButton(""Browser"",""br = new TBrowser(\""br\"")"",0.25,0.54,0.75,0.64);; but3->SetFillColor(42);; but3->Draw();. // Create last button with no name. Instead a graph is draw inside the button; // Clicking on this button will invoke the macro $ROOTSYS/tutorials/graphs/graph.C; button = new TButton("""","".x tutorials/graphs/graph.C"",0.15,0.15,0.85,0.38);; button->SetFillColor(42);; button->Draw();; button->SetE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TButton.cxx:62,interface,interface,62,graf2d/gpad/src/TButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TButton.cxx,1,['interface'],['interface']
Integrability,"/** \class TCivetweb; \ingroup http. THttpEngine implementation, based on civetweb embedded server. It is default kind of engine, created for THttpServer; Currently v1.15 from https://github.com/civetweb/civetweb is used. Additional options can be specified:. top=foldername - name of top folder, seen in the browser; thrds=N - use N threads to run civetweb server (default 5); auth_file - global authentication file; auth_domain - domain name, used for authentication. Example:. new THttpServer(""http:8080?top=MyApp&thrds=3"");. For the full list of supported options see TCivetweb::Create() documentation. When `auth_file` and `auth_domain` parameters are specified, access; to running http server will be possible only after user; authentication, using so-call digest method. To generate; authentication file, htdigest routine should be used:. [shell] htdigest -c .htdigest domain_name user. When creating server, parameters should be:. auto serv = new THttpServer(""http:8080?auth_file=.htdigets&auth_domain=domain_name"");. */; ////////////////////////////////////////////////////////////////////////////////; /// constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:821,rout,routine,821,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,1,['rout'],['routine']
Integrability,"/** \class TCollectionProxyFactory TCollectionProxyFactory.h; TCollectionProxyFactory; Interface to collection proxy and streamer generator.; Proxy around an arbitrary container, which implements basic; functionality and iteration. The purpose of this implementation; is to shield any generated dictionary implementation from the; underlying streamer/proxy implementation and only expose; the creation functions. In particular this is used to implement splitting and abstract; element access of any container. Access to compiled code is necessary; to implement the abstract iteration sequence and functionality like; size(), clear(), resize(). resize() may be a void operation. \author M.Frank; \version 1.0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h:87,Interface,Interface,87,io/io/inc/TCollectionProxyFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h,1,['Interface'],['Interface']
Integrability,"/** \class TDSet; \ingroup proofkernel. This class implements a data set to be used for PROOF processing.; The TDSet defines the class of which objects will be processed,; the directory in the file where the objects of that type can be; found and the list of files to be processed. The files can be; specified as logical file names (LFN's) or as physical file names; (PFN's). In case of LFN's the resolution to PFN's will be done; according to the currently active GRID interface.; Examples:; TDSet treeset(""TTree"", ""AOD"");; treeset.Add(""lfn:/alien.cern.ch/alice/prod2002/file1"");; ...; treeset.AddFriend(friendset);. or. TDSet objset(""MyEvent"", ""*"", ""/events"");; objset.Add(""root://cms.cern.ch/user/prod2002/hprod_1.root"");; ...; objset.Add(set2003);. Validity of file names will only be checked at processing time; (typically on the PROOF master server), not at creation time. */; ////////////////////////////////////////////////////////////////////////////////; /// Default ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:470,interface,interface,470,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['interface'],['interface']
Integrability,"/** \class TEveBoxSet; \ingroup TEve; Collection of 3D primitives (fixed-size boxes, boxes of different; sizes, or arbitrary sexto-epipeds, cones). Each primitive can be assigned; a signal value and a TRef. A collection of 3D-markers. The way how they are defined depends; on the fBoxType data-member.; - kBT_FreeBox arbitrary box: specify 8*(x,y,z) box corners; - kBT_AABox axis-aligned box: specify (x,y,z) and (w, h, d); - kBT_AABoxFixedDim axis-aligned box w/ fixed dimensions: specify (x,y,z); also set fDefWidth, fDefHeight and fDefDepth; - kBT_Cone cone defined with position, axis-vector and radius; - EllipticCone cone with elliptic base (specify another radius and angle in deg). Each primitive can be assigned:. 1. Color or signal value. Thresholds and signal-to-color mapping; can then be set dynamically via the TEveRGBAPalette class.; 2. External TObject* (stored as TRef). See also base-class TEveDigitSet for more information.; Tutorial: tutorials/eve/boxset_test.C; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBoxSet.cxx:264,depend,depends,264,graf3d/eve/src/TEveBoxSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBoxSet.cxx,1,['depend'],['depends']
Integrability,"/** \class TEveCompositeFrame; \ingroup TEve; Abstract base-class for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx:227,interface,interface,227,graf3d/eve/src/TEveWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindow.cxx,1,['interface'],['interface']
Integrability,/** \class TEveGeoManagerHolder; \ingroup TEve; Exception safe wrapper for setting gGeoManager.; Functionality to lock-unlock via setting of a static lock in; TGeoManager should be added (new feature of TGeoManager).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:63,wrap,wrapper,63,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['wrap'],['wrapper']
Integrability,/** \class TEveGeoNode; \ingroup TEve; Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:39,Wrap,Wrapper,39,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TEveGeoShape; \ingroup TEve; Wrapper for TGeoShape with absolute positioning and color; attributes allowing display of extracted TGeoShape's (without an; active TGeoManager) and simplified geometries (needed for non-linear; projections). TGeoCompositeShapes and TGeoAssemblies are supported. If fNSegments data-member is < 2 (0 by default), the default number of; segments is used for tesselation and special GL objects are; instantiated for selected shapes (spheres, tubes). If fNSegments is > 2,; it gets forwarded to geo-manager and this tesselation detail is; used when creating the buffer passed to GL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoShape.cxx:40,Wrap,Wrapper,40,graf3d/eve/src/TEveGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoShape.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TEveGeoTopNode; \ingroup TEve; A wrapper over a TGeoNode, possibly displaced with a global; trasformation stored in TEveElement. It holds a pointer to TGeoManager and controls for steering of; TGeoPainter, fVisOption, fVisLevel and fMaxVisNodes. They have the; same meaning as in TGeoManager/TGeoPainter.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:44,wrap,wrapper,44,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,1,['wrap'],['wrapper']
Integrability,/** \class TEvePad; \ingroup TEve; This was intended as a TPad wrapper to allow smart updates of; groups of pads. Uses THashList instead of TList for faster removal; of objects from the pad.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePad.cxx:63,wrap,wrapper,63,graf3d/eve/src/TEvePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePad.cxx,1,['wrap'],['wrapper']
Integrability,/** \class TEvePadHolder; \ingroup TEve; Exception safe wrapper for setting gPad.; Optionally calls gPad->Modified()/Update() in destructor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:56,wrap,wrapper,56,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['wrap'],['wrapper']
Integrability,"/** \class TEveRGBAPalette; \ingroup TEve; A generic, speed-optimised mapping from value to RGBA color; supporting different wrapping and range truncation modes. Flag fFixColorRange: specifies how the palette is mapped to signal values:; - true - LowLimit -> HighLimit; - false - MinValue -> MaxValue; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveRGBAPalette.cxx:125,wrap,wrapping,125,graf3d/eve/src/TEveRGBAPalette.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveRGBAPalette.cxx,1,['wrap'],['wrapping']
Integrability,"/** \class TEveSecondarySelectable; \ingroup TEve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from TEveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual TString TEveElement::GetHighlightTooltip();; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See TEveDigitSet for an example.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx:65,interface,interface,65,graf3d/eve/src/TEveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx,1,['interface'],['interface']
Integrability,/** \class TEveTrackPropagatorEditor; \ingroup TEve; GUI editor for TEveTrackPropagator.; It's only a wrapper around a TEveTrackPropagatorSubEditor that holds actual; widgets.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagatorEditor.cxx:102,wrap,wrapper,102,graf3d/eve/src/TEveTrackPropagatorEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagatorEditor.cxx,1,['wrap'],['wrapper']
Integrability,"/** \class TExec; \ingroup Base. TExec is a utility class that can be used to execute a C++ command; when some event happens in a pad.; The command in turn can invoke a C++ macro to paint graphics objects; at positions depending on the histogram or graph contents. ### Case 1:. The TExec object is in the list of pad primitives (after exec.Draw()).; When the pad is drawn, the TExec::Paint function is called. This function; will execute the specified command.; The following example uses the services of the class Aclock created; in `$ROOTSYS/test/Aclock.cxx`.; This examples uses a TTimer to redraw a pad at regular intervals (clock).; When the clock is updated, a string with the current date&time is drawn.; ~~~ {.cpp}; {; gSystem->Load(""$ROOTSYS/test/Aclock"");; Aclock ck(400);; gPad->SetFillColor(5);; TDatime dt;; TText t(.5,.3,""t"");; t.SetTextAlign(22);; t.SetTextSize(.07);; t.SetTextColor(4);; t.Draw();; TExec ex(""ex"",""dt.Set();t.SetTitle(dt.AsString())"");; ex.Draw();; }; ~~~. ### Case 2:. The TExec object may be added to the list of functions of a TH1 or TGraph; object via hist->GetListOfFunctions()->Add(exec).; When the histogram (or graph) is drawn, the TExec will be executed.; If the histogram is made persistent on a file, the TExec object; is also saved with the histogram. When redrawing the histogram in a; new session, the TExec will be executed. Example:. Assume an histogram TH1F *h already filled.; ~~~ {.cpp}; TExec *ex1 = new TExec(""ex1"",""DoSomething()"");; TExec *ex2 = new TExec(""ex2"","".x macro.C"");; h->GetListOfFunctions()->Add(ex1);; h->GetListOfFunctions()->Add(ex2);; h->Draw();; ~~~. When the Paint function for the histogram will be called, the ""DoSomething""; function will be called (interpreted or compiled) and also the macro.C. ### Case 3:. A TExec object is automatically generated when invoking TPad::AddExec.; Each pad contains a TList of TExecs (0, 1 or more). When a mouse event; (motion, click, etc) happens, the pad object executes sequentially; this l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx:219,depend,depending,219,core/base/src/TExec.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx,1,['depend'],['depending']
Integrability,"/** \class TF1Convolution; \ingroup Functions; \brief Class wrapping convolution of two functions. Class wrapping convolution of two functions: evaluation of \f$\int f(x)g(x-t)dx\f$. The convolution is performed by default using FFTW if it is available .; One can pass optionally the range of the convolution (by default the first function range is used).; Note that when using Discrete Fourier Transform (as FFTW), it is a circular transform, so the functions should be; approximately zero at the end of the range. If they are significantly different than zero on one side (e.g. the left side); a spill over will occur on the other side (e.g right side).; If no function range is given by default the function1 range + 10% is used; One should use also a not too small number of points for the DFT (a minimum of 1000). By default 10000 points are used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx:60,wrap,wrapping,60,hist/hist/src/TF1Convolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx,2,['wrap'],['wrapping']
Integrability,/** \class TFoamSampler; class implementing the ROOT::Math::DistSampler interface using FOAM; for sampling arbitrary distributions.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamSampler.cxx:72,interface,interface,72,math/foam/src/TFoamSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamSampler.cxx,1,['interface'],['interface']
Integrability,"/** \class TGLCamera; \ingroup opengl; Abstract base camera class - concrete classes for orthographic and; perspective cameras derive from it. This class maintains values for; the current:; 1. Viewport; 2. Projection, modelview and clip matrices - extracted from GL; 3. The 6 frustum planes; 4. Expanded frustum interest box. It provides methods for various projection, overlap and intersection; tests for viewport and world locations, against the true frustum and; expanded interest box, and for extracting eye position and direction. It also defines the pure virtual manipulation interface methods the; concrete ortho and perspective classes must implement.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:582,interface,interface,582,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['interface'],['interface']
Integrability,"/** \class TGLFont; \ingroup opengl; A wrapper class for FTFont.; Holds pointer to FTFont object and its description: face size, font file; and class ID. It wraps Render and BBox functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx:39,wrap,wrapper,39,graf3d/gl/src/TGLFontManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx,2,['wrap'],"['wrapper', 'wraps']"
Integrability,"/** \class TGLLine3; \ingroup opengl; 3D space, fixed length, line class, with direction / length 'vector',; passing through point 'vertex'. Just wraps a TGLVector3 / TGLVertex3 pair.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:146,wrap,wraps,146,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['wrap'],['wraps']
Integrability,/** \class TGLLockable; \ingroup opengl; Simple locking interface used by viewer and scene.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx:56,interface,interface,56,graf3d/gl/src/TGLLockable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx,1,['interface'],['interface']
Integrability,/** \class TGLOutput; \ingroup opengl; Wrapper class for GL capture & output routines; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOutput.cxx:39,Wrap,Wrapper,39,graf3d/gl/src/TGLOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOutput.cxx,2,"['Wrap', 'rout']","['Wrapper', 'routines']"
Integrability,/** \class TGLPShapeObj; \ingroup opengl; Wrap TGLPysicalShape into TObject so that it can be edited using GED.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObj.cxx:42,Wrap,Wrap,42,graf3d/gl/src/TGLPShapeObj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObj.cxx,1,['Wrap'],['Wrap']
Integrability,/** \class TGLParametricEquationGL; \ingroup opengl; GL-renderer wrapper for TGLParametricEquation.; This allows rendering of parametric-equations in standard GL viewer.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLParametricEquationGL.cxx:65,wrap,wrapper,65,graf3d/gl/src/TGLParametricEquationGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLParametricEquationGL.cxx,1,['wrap'],['wrapper']
Integrability,/** \class TGLQuadric; \ingroup opengl; Wrapper class for GLU quadric shape drawing object. Lazy creation of; internal GLU raw quadric on first call to TGLQuadric::Get(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLQuadric.cxx:40,Wrap,Wrapper,40,graf3d/gl/src/TGLQuadric.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLQuadric.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TGLScene; \ingroup opengl; TGLScene provides management and rendering of ROOT's default 3D; /object representation as logical and physical shapes. A GL scene is the container for all the viewable objects (shapes); loaded into the viewer. It consists of two main stl::maps containing; the TGLLogicalShape and TGLPhysicalShape collections, and interface; functions enabling viewers to manage objects in these. The physical; shapes defined the placement of copies of the logical shapes - see; TGLLogicalShape/TGLPhysicalShape for more information on relationship. The scene can be drawn by owning viewer, passing camera, draw style; & quality (LOD), clipping etc - see Draw(). The scene can also be; drawn for selection in similar fashion - see Select(). The scene; keeps track of a single selected physical - which can be modified by; viewers. The scene maintains a lazy calculated bounding box for the total; scene extents, axis aligned round TGLPhysicalShape shapes. Currently a scene is owned exclusively by one viewer - however it is; intended that it could easily be shared by multiple viewers - for; efficiency and synchronisation reasons. Hence viewer variant objects; camera, clips etc being owned by viewer and passed at draw/select; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:353,interface,interface,353,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['interface'],['interface']
Integrability,"/** \class TGLSceneBase; \ingroup opengl; Scene base-class -- provides basic interface expected by the; TGLViewer or its sub-classes:; - unique scene id; - scene locking; - overall bounding box; - list of viewers displaying the scene (for update propagation); - virtual interface for draw/select/render (?). The standard ROOT OpenGL scene is implemented in direct sub-class TGLScene. Note that while each scene can be shared among several viewers, ALL; of them are obliged to share the same display-list space (this can; be achieved on GL-context creation time; Matevz believes that by; default all GL contexts must use shared display-lists etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:77,interface,interface,77,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,2,['interface'],['interface']
Integrability,/** \class TGLScenePad; \ingroup opengl; Implements VirtualViewer3D interface and fills the base-class; visualization structures from pad contents.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx:68,interface,interface,68,graf3d/gl/src/TGLScenePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx,1,['interface'],['interface']
Integrability,/** \class TGLText; \ingroup opengl; GL Text. To draw a 3D text in a GL window. This class uses uses FTGL to render text.; FTGL is a package making the interface between the Free Type fonts and GL.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLText.cxx:152,interface,interface,152,graf3d/gl/src/TGLText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLText.cxx,1,['interface'],['interface']
Integrability,"/** \class TGLUtil; \ingroup opengl; Wrapper class for various misc static functions - error checking, draw helpers etc.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:37,Wrap,Wrapper,37,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TGLViewerBase; \ingroup opengl; Base class for GL viewers. Provides a basic scene management and a; small set of control variables (camera, LOD, style, clip) that are; used by the scene classes. Renering wrappers are available but; minimal. There is no concept of GL-context here ... we just draw; into whatever is set from outside. Development notes:. Each viewer automatically creates a TGLRnrCtx and passes it down; all render functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx:215,wrap,wrappers,215,graf3d/gl/src/TGLViewerBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx,1,['wrap'],['wrappers']
Integrability,"/** \class TGQuartz; \ingroup cocoa. This is non-GUI part of TVirtualX interface, implemented for; MacOS X, using CoreGraphics (Quartz).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGQuartz.h:71,interface,interface,71,graf2d/cocoa/inc/TGQuartz.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGQuartz.h,1,['interface'],['interface']
Integrability,"/** \class TGSimpleTable; \ingroup guiwidgets. To provide a simple class to visualize an array of doubles, the class; TGSimpleTable is provided. TGSimpleTable creates it's own; TGSimpleTableInterface. For more information, see the documentation of; TGTable. The interface is accesible through the GetInterface() method. */; ////////////////////////////////////////////////////////////////////////////////; /// TGSimpleTable constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTable.cxx:262,interface,interface,262,gui/gui/src/TGSimpleTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTable.cxx,1,['interface'],['interface']
Integrability,"/** \class TGSimpleTableInterface; \ingroup guiwidgets. TGSimpleTableInterface is a very simple implementation of a; TVirtualTableInterface. This interface provides a TGTable with data; from a two dimensional array of doubles in memory. It is mostly; meant as an example implementation for a TVirtualTableInterface. */; ////////////////////////////////////////////////////////////////////////////////; /// TGSimpleTableInterface constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTableInterface.cxx:146,interface,interface,146,gui/gui/src/TGSimpleTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSimpleTableInterface.cxx,1,['interface'],['interface']
Integrability,"/** \class TGTreeTable. TGTreeTable is a TGTable that owns it's own interface.; It can be used to view a TTree. If an expression is given to the; constructor, it will be used to define the columns. A selection can; also be given. This selection is applied to the TTree as a; TEntryList. See the documentation of TGTable for more information. The interface is accesible after the creation through the; GetInterface() method.; */; ////////////////////////////////////////////////////////////////////////////////; /// TGTreeTable constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx:68,interface,interface,68,tree/treeviewer/src/TGTreeTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx,2,['interface'],['interface']
Integrability,"/** \class TGeoArb8; \ingroup Trapezoids. \brief An arbitrary trapezoid with less than 8 vertices standing on two parallel planes perpendicular to Z axis. An `Arb8` is defined by two quadrilaterals sitting on parallel planes,; at `dZ`. These are defined each by 4 vertices having the coordinates; `(Xi,Yi,+/-dZ)`,` i=0`,` 3`. The lateral surface of the `Arb8` is; defined by the 4 pairs of edges corresponding to vertices (`i,i+1`) on; both `-dZ` and `+dZ`. If M and M' are the middles of the segments; `(i,i+1)` at `-dZ` and `+dZ`, a lateral surface is obtained by sweeping; the edge at `-dZ` along MM' so that it will match the corresponding one; at `+dZ`. Since the points defining the edges are arbitrary, the lateral; surfaces are not necessary planes - but twisted planes having a twist; angle linear-dependent on Z. ~~~ {.cpp}; TGeoArb8::TGeoArb8(Double_t dz,Double_t ivert);; ~~~. - `dz:` half-length in Z;; - `ivert = [0,7]`. Vertices have to be defined clockwise in the XY pane, both at `+dz` and; `-dz`. The quadrilateral at `-dz` is defined by indices [0,3], whereas; the one at `+dz` by vertices [4,7]. The vertex with `index=7` has to be; defined last, since it triggers the computation of the bounding box of; the shape. Any two or more vertices in each Z plane can have the same; (X,Y) coordinates. It this case, the top and bottom quadrilaterals; become triangles, segments or points. The lateral surfaces are not; necessary defined by a pair of segments, but by pair segment-point; (making a triangle) or point-point (making a line). Any choice is valid; as long as at one of the end-caps is at least a triangle. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""arb8"", ""poza12"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoArb8 *arb = new TGeoArb8(20);; arb->SetVertex(0,-30,-25);; ar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx:807,depend,dependent,807,geom/geom/src/TGeoArb8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoArb8.cxx,1,['depend'],['dependent']
Integrability,"/** \class TGeoExtension; \ingroup Geometry_classes. ABC for user objects attached to TGeoVolume or TGeoNode.; Provides interface for getting a reference (grab) and; releasing the extension object (release), allowing for; derived classes to implement reference counted sharing.; The user who should attach extensions to logical volumes; or nodes BEFORE applying misalignment information so that; these will be available to all copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx:120,interface,interface,120,geom/geom/src/TGeoExtension.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoExtension.cxx,1,['interface'],['interface']
Integrability,"/** \class TGeoHype; \ingroup Shapes_classes. A hyperboloid is represented as a solid limited by two planes; perpendicular to the Z axis (top and bottom planes) and two hyperbolic; surfaces of revolution about Z axis (inner and outer surfaces). The; class describing hyperboloids is TGeoHype has 5 input parameters:. ~~~ {.cpp}; TGeoHype(Double_t rin,Double_t stin,Double_t rout,; Double_t stout,Double_t dz);; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"", ""c"",0,0,600,600);; new TGeoManager(""hype"", ""hyperboloid"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; TGeoVolume *vol = gGeoManager->MakeHype(""HYPE"",med,10, 45 ,20,45,40);; TGeoHype *hype = (TGeoHype*)vol->GetShape();; top->AddNode(vol,1);; gGeoManager->CloseGeometry();; gGeoManager->SetNsegments(80);; top->Draw();; TView *view = gPad->GetView();; view->ShowAxis();; }; End_Macro. The hyperbolic surface equation is taken in the form:. ~~~{.cpp}; r^2 - z^2 * tan(st)^2 = rmin^2; ~~~. - `r,z:` cylindrical coordinates for a point on the surface; - `st:` stereo angle between the hyperbola asymptotic lines and Z axis; - `rmin:` minimum distance between hyperbola and Z axis (at `z=0`). The input parameters for a hyperboloid represent:. - `rin, stin:` minimum radius and stereo angle in degrees for the inner surface; - `rout, stout:` minimum radius and stereo angle in degrees for the outer surface; - `dz:` half length in Z (bounding planes positions at `+/-dz`). The following conditions are mandatory in order to avoid intersections; between the inner and outer hyperbolic surfaces in the range `+/-dz`:. - `rin < rout`; - `rout > 0`; - `rin^2 + dz^2 * tan(stin)^2 > rout^2 + dz^2 * tan(stout)^2`. Particular cases:. - `rin=0, stin0:` the inner surface is conical; - `stin=0 / stout=0:` cylindrical surface(s). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:374,rout,rout,374,geom/geom/src/TGeoHype.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx,5,['rout'],['rout']
Integrability,"/** \class TGraphDelaunay2D; \ingroup Graphs; TGraphDelaunay2D generates a Delaunay triangulation of a TGraph2D.; The algorithm used for finding the triangles is based on [CDT](https://github.com/artem-ogre/CDT),; a C++ library for generating constraint or conforming Delaunay triangulations. The ROOT::Math::Delaunay2D class provides a wrapper for using; the **CDT** library. This implementation provides large improvements in terms of computational performances; compared to the legacy one available in TGraphDelaunay, and it is by default; used in TGraph2D. The old, legacy implementation can be still used when calling; `TGraph2D::GetHistogram` and `TGraph2D::Draw` with the `old` option. Definition of Delaunay triangulation (After B. Delaunay):; For a set S of points in the Euclidean plane, the unique triangulation DT(S); of S such that no point in S is inside the circumcircle of any triangle in; DT(S). DT(S) is the dual of the Voronoi diagram of S. If n is the number of; points in S, the Voronoi diagram of S is the partitioning of the plane; containing S points into n convex polygons such that each polygon contains; exactly one point and every point in a given polygon is closer to its; central point than to any other. A Voronoi diagram is sometimes also known; as a Dirichlet tessellation. \image html tgraph2d_delaunay.png. [This applet](http://www.cs.cornell.edu/Info/People/chew/Delaunay.html); gives a nice practical view of Delaunay triangulation and Voronoi diagram.; */; /// TGraphDelaunay2D normal constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphDelaunay2D.cxx:337,wrap,wrapper,337,hist/hist/src/TGraphDelaunay2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphDelaunay2D.cxx,1,['wrap'],['wrapper']
Integrability,"/** \class TGraphStruct; \ingroup gviz. The Graph Structure is an interface to the graphviz package. The graphviz package is a graph visualization system. This interface consists in; three classes:. - TGraphStruct: holds the graph structure. It uses the graphviz library to; layout the graphs and the ROOT graphics to paint them.; - TGraphNode: Is a graph node object which can be added in a TGraphStruct.; - TGraphEdge: Is an edge object connecting two nodes which can be added in; a TGraphStruct. Begin_Macro(source); ../../../tutorials/graphs/graphstruct.C; End_Macro. A graph structure can be dumped into a ""dot"" file using DumpAsDotFile.; */; ////////////////////////////////////////////////////////////////////////////////; /// Graph Structure default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gviz/src/TGraphStruct.cxx:66,interface,interface,66,graf2d/gviz/src/TGraphStruct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gviz/src/TGraphStruct.cxx,2,['interface'],['interface']
Integrability,/** \class TH2GL; \ingroup opengl; Rendering of TH2 and derived classes.; Interface to plot-painters also used for gl-in-pad.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TH2GL.cxx:74,Interface,Interface,74,graf3d/gl/src/TH2GL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TH2GL.cxx,1,['Interface'],['Interface']
Integrability,"/** \class THnBase; \ingroup Hist; Multidimensional histogram base.; Defines common functionality and interfaces for THn, THnSparse.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:102,interface,interfaces,102,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['interface'],['interfaces']
Integrability,"/** \class THnChain; A class to chain together multiple histograms. This class allows to chain together any `THnBase`-derived (`THn` or `THnSparse`); histograms from multiple files. Operations on the axes and projections are; supported. The intent is to allow convenient merging merging of projections; of high-dimensional histograms. \code{.cpp}; // `file1.root` and `file2.root` contain a `THnSparse` named `hsparse`.; THnChain hs(""hsparse"");; hs.AddFile(""file1.root"");; hs.AddFile(""file2.root"");. // Project out axis 0, integrate over other axes.; TH1* h0 = hs.Projection(0);. // Project out axis 0, integrate over other axes in their active ranges.; hs.GetAxis(1)->SetRangeUser(0, 0.1); // select a subrange; TH1* h0 = hs.Projection(0);; \endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnChain.h:523,integrat,integrate,523,hist/hist/inc/THnChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnChain.h,2,['integrat'],['integrate']
Integrability,"/** \class THnSparseCoordCompression; THnSparseCoordCompression is a class used by THnSparse internally. It; represents a compacted n-dimensional array of bin coordinates (indices).; As the total number of bins in each dimension is known by THnSparse, bin; indices can be compacted to only use the amount of bins needed by the total; number of bins in each dimension. E.g. for a THnSparse with; {15, 100, 2, 20, 10, 100} bins per dimension, a bin index will only occupy; 28 bits (4+7+1+5+4+7), i.e. less than a 32bit integer. The tricky part is; the fast compression and decompression, the platform-independent storage; (think of endianness: the bits of the number 0x123456 depend on the; platform), and the hashing needed by THnSparseArrayChunk.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:674,depend,depend,674,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['depend'],['depend']
Integrability,/** \class THttpEngine; \ingroup http. Abstract class for implementing http protocol for THttpServer; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpEngine.cxx:76,protocol,protocol,76,net/http/src/THttpEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpEngine.cxx,1,['protocol'],['protocol']
Integrability,"/** \class THttpServer; \ingroup http. Online http server for arbitrary ROOT application. Idea of THttpServer - provide remote http access to running; ROOT application and enable HTML/JavaScript user interface.; Any registered object can be requested and displayed in the browser.; There are many benefits of such approach:. 1. standard http interface to ROOT application; 2. no any temporary ROOT files when access data; 3. user interface running in all browsers. To start http server simply create instance; of the THttpServer class like:. serv = new THttpServer(""http:8080"");. This will starts civetweb-based http server with http port 8080.; Than one should be able to open address ""http://localhost:8080""; in any modern web browser (Firefox, Chrome, Opera, ...) and browse objects,; created in ROOT application. By default, server can access files,; canvases and histograms via `gROOT` pointer. All such objects; can be displayed with JSROOT graphics. At any time one could register other objects with the command:. TGraph* gr = new TGraph(10);; gr->SetName(""gr1"");; serv->Register(""graphs/subfolder"", gr);. If objects content is changing in the application, one could; enable monitoring flag in the browser - than objects view; will be regularly updated. More information: https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:200,interface,interface,200,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,3,['interface'],['interface']
Integrability,"/** \class TImage; \ingroup BasicGraphics. An abstract interface to image processing library. It allows for the reading and writing of images in different formats, several; image manipulations (scaling, tiling, merging, etc.) and displaying in pads. The concrete implementation of this class is done by the TASImage class. The; methods are documented in that class.; */; ////////////////////////////////////////////////////////////////////////////////; /// Create an image.; /// Use ReadImage() or SetImage() to initialize the image.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TImage.cxx:55,interface,interface,55,graf2d/graf/src/TImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TImage.cxx,1,['interface'],['interface']
Integrability,/** \class TInspectorObject; \ingroup gpad. This class is designed to wrap a Foreign object in order to; inject it into the Browse sub-system.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TInspectCanvas.cxx:70,wrap,wrap,70,graf2d/gpad/src/TInspectCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TInspectCanvas.cxx,2,"['inject', 'wrap']","['inject', 'wrap']"
Integrability,"/** \class TLatex; \ingroup BasicGraphics. To draw Mathematical Formula. TLatex's purpose is to write mathematical equations. The syntax is very similar; to the Latex's one. It provides several functionalities:. - [Subscripts and Superscripts](\ref L1); - [Fractions](\ref L2); - [Splitting Lines](\ref L3); - [Roots](\ref L4); - [Mathematical Symbols](\ref L5); - [Delimiters](\ref L6); - [Greek Letters](\ref L7); - [Accents](\ref L8); - [Changing Style](\ref L9); - [Alignment Rules](\ref L10); - [Character Adjustment](\ref L11); - [Italic and Boldface](\ref L12); - [Examples](\ref L13); - [Interface to TMathText](\ref L14). When the font precision (see `TAttText`) is low (0 or 1), TLatex is; painted as a normal TText, the control characters are not interpreted. \anchor L1; ## Subscripts and Superscripts; Subscripts and superscripts are made with the `_` and `^`; commands. These commands can be combined to make complicated subscript and; superscript expressions. You may adjust the display of subscripts and; superscripts by using the two functions `SetIndiceSize(Double_t)`,; which set relative size of subscripts and superscripts, and; `SetLimitIndiceSize(Int_t)`, which set limits for text resizing of; subscripts and superscripts. Examples:. Begin_Macro; {; TCanvas *cl = new TCanvas(""cl"",""cl"",10,10,700,500);; TLatex Tl; Tl.SetTextFont(43); Tl.SetTextSize(20);; Double_t dy = 1./7.;; Tl.DrawText(.1, dy, ""x^{2y} :""); Tl.DrawLatex(.5, dy, ""x^{2y}"");; Tl.DrawText(.1, 2*dy, ""x_{2y} :""); Tl.DrawLatex(.5, 2*dy, ""x_{2y}"");; Tl.DrawText(.1, 3*dy, ""x^{y^{2}} :""); Tl.DrawLatex(.5, 3*dy, ""x^{y^{2}}"");; Tl.DrawText(.1, 4*dy, ""x^{y_{1}} :""); Tl.DrawLatex(.5, 4*dy, ""x^{y_{1}}"");; Tl.DrawText(.1, 5*dy, ""x^{y}_{1} :""); Tl.DrawLatex(.5, 5*dy, ""x^{y}_{1}"");; Tl.DrawText(.1, 6*dy, ""x_{1}^{y} :""); Tl.DrawLatex(.5, 6*dy, ""x_{1}^{y}"");; }; End_Macro. The best way to put the subscripts and superscripts before the character and not; after, is to use an empty character:. Begin_Macro; {; TCanvas *c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx:596,Interface,Interface,596,graf2d/graf/src/TLatex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx,1,['Interface'],['Interface']
Integrability,"/** \class TObjLink; Wrapper around a TObject so it can be stored in a TList.; */; ////////////////////////////////////////////////////////////////////////////////; /// Insert a new link in the chain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:21,Wrap,Wrapper,21,core/cont/src/TList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TPMERegexp. Wrapper for PCRE library (Perl Compatible Regular Expressions).; Based on PME - PCRE Made Easy by Zachary Hansen. Supports main Perl operations using regular expressions (Match,; Substitute and Split). To retrieve the results one can simply use; operator[] returning a TString. See $ROOTSYS/tutorials/regexp_pme.C for examples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:23,Wrap,Wrapper,23,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** \class TProfile2D; \ingroup Histograms; Profile2D histograms are used to display the mean; value of Z and its error for each cell in X,Y.; Profile2D histograms are in many cases an; elegant replacement of three-dimensional histograms : the inter-relation of three; measured quantities X, Y and Z can always be visualized by a three-dimensional; histogram or scatter-plot; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If Z is an unknown (but single-valued); approximate function of X,Y this function is displayed by a profile2D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggeste",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:769,rout,routines,769,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['rout'],['routines']
Integrability,"/** \class TProfile3D; \ingroup Histograms; Profile3D histograms are used to display the mean; value of T and its RMS for each cell in X,Y,Z.; Profile3D histograms are in many cases an; The inter-relation of three measured quantities X, Y, Z and T can always; be visualized by a four-dimensional histogram or scatter-plot;; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If T is an unknown (but single-valued); approximate function of X,Y,Z this function is displayed by a profile3D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell I, J. 2; H(I,J,K) = sum T E(I,J,K) = sum T; l(I,J,K) = sum l L(I,J,K) = sum l; h(I,J,K) = H(I,J,K)/L(I,J,K) s(I,J,K) = sqrt(E(I,J,K)/L(I,J,K)- h(I,J,K)**2); e(I,J,K) = s(I,J,K)/sqrt(L(I,J,K)). In the special case where s(I,J,K) is zero (eg, case of 1 entry only in one cell); e(I,J,K) is computed from the average of the s(I,J,K) for all cells,; if the static function TProfile3D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note that this approximation is not the default behaviour. Example of a profile3D histogram; ~~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof3d = new TProfile3D(""hprof3d"",""Profile of pt versus px, py and pz"",40,-4,4,40,-4,4,40,0,20);; Double_t px, py, pz, pt;; TRandom3 r(0);; for ( Int_t i=0; i<25000; i++) {; r.Rannor(px,py);; pz = px*px + py*py;; pt = r.Landau(0,1);; hprof3d->Fill(px,py,pz,pt,1);; }; hprof3d->Draw();; }; ~~~~; NOTE: A TProfile3D is drawn as it was a simple TH3; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Profile3D histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:719,rout,routines,719,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['rout'],['routines']
Integrability,"/** \class TProfile; \ingroup Histograms; Profile Histogram.; Profile histograms are used to display the mean; value of Y and its error for each bin in X. The displayed error is by default the; standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; Profile histograms are in many cases an; elegant replacement of two-dimensional histograms. The inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter plot, but if Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile histogram with; much better precision than by a scatter plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the avera",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:794,rout,routines,794,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['rout'],['routines']
Integrability,/** \class TRecEvent; \ingroup guirecorder. Abstract class that defines interface for a class storing; information about 1 ROOT event.; Time of event is stored and this event can be replayed.; Classes TRecCmdEvent and TRecGuiEvent implements this interface; for command line and GUI events respectively. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:72,interface,interface,72,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,2,['interface'],['interface']
Integrability,"/** \class TRecorderState; \ingroup guirecorder. Abstract class that defines interface for a state of recorder.; Inherited classes are:; - TRecorderInactive; - TRecorderRecording; - TRecorderReplaying; - TRecorderPaused. See TRecorder for more information about creating, using,; changing and deleting states. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:77,interface,interface,77,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['interface'],['interface']
Integrability,"/** \class TSVG; \ingroup PS. \brief Interface to SVG. [SVG](http://www.w3.org/Graphics/SVG/Overview.htm8); (Scalable Vector Graphics) is a language for describing; two-dimensional graphics in XML. SVG allows high quality vector graphics in; HTML pages. To print a ROOT canvas ""c1"" into an SVG file simply do:; ~~~ {.cpp}; c1->Print(""c1.svg"");; ~~~; The result is the ASCII file `c1.svg`. It can be open directly using a web browser or included in a html document; the following way:; ~~~ {.cpp}; <embed width=""95%"" height=""500"" src=""c1.svg"">; ~~~; It is best viewed with Internet Explorer and you need the; [Adobe SVG Viewer](http://www.adobe.com/svg/viewer/install/main.html). To zoom using the Adobe SVG Viewer, position the mouse over; the area you want to zoom and click the right button. To define the zoom area,; use Control+drag to mark the boundaries of the zoom area. To pan, use Alt+drag.; By clicking with the right mouse button on the SVG graphics you will get; a pop-up menu giving other ways to interact with the image. SVG files can be used directly in compressed mode to minimize the time; transfer over the network. Compressed SVG files should be created using; `gzip` on a normal ASCII SVG file and should then be renamed; using the file extension `.svgz`.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default SVG constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:37,Interface,Interface,37,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['Interface'],['Interface']
Integrability,/** \class TSpiderEditor; The TSpider editor class.; Provides the graphical user interface to the spider plots.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx:81,interface,interface,81,tree/treeviewer/src/TSpiderEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx,1,['interface'],['interface']
Integrability,"/** \class TTeXDump; \ingroup PS. \brief Interface to TeX. This class allow to generate <b>PGF/TikZ</b> vector graphics output; which can be included in TeX and LaTeX documents. PGF is a TeX macro package for generating graphics. It is platform; and format-independent and works together with the most important TeX; backend drivers, including pdftex and dvips. It comes with a; user-friendly syntax layer called TikZ. To generate a such file it is enough to do:; ~~~ {.cpp}; gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; ~~~. Then, the generated file (`hpx.tex`) can be included in a; LaTeX document (`simple.tex`) in the following way:; ~~~ {.cpp}; \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; ~~~. Note the three directives needed at the top of the LaTeX file:; ~~~ {.cpp}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; ~~~. Then including the picture in the document is done with the; `\input` directive. The command `pdflatex simple.tex` will generate the; corresponding pdf file `simple.pdf`.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default TeX constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx:41,Interface,Interface,41,graf2d/postscript/src/TTeXDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx,1,['Interface'],['Interface']
Integrability,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:81,rout,routine,81,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:63,interface,interface,63,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,3,['interface'],['interface']
Integrability,/** \class TViewer3DPad; \ingroup gpad. Provides 3D viewer interface (TVirtualViewer3D) support on a pad.; Will be merged with TView / TView3D eventually.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TViewer3DPad.cxx:59,interface,interface,59,graf2d/gpad/src/TViewer3DPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TViewer3DPad.cxx,1,['interface'],['interface']
Integrability,"/** \class TVirtualGraphPainter; \ingroup Histpainter; Abstract interface to a histogram painter; */; ////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to the current graph painter.; /// If the graph painter does not exist a default painter (singleton) is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx:64,interface,interface,64,hist/hist/src/TVirtualGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualGraphPainter.cxx,1,['interface'],['interface']
Integrability,"/** \class TVirtualHistPainter; \ingroup Histpainter; Abstract interface to a histogram painter; */; ////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to the current histogram painter.; /// The painter will paint the specified obj. If the histogram painter; /// does not exist a default painter is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx:63,interface,interface,63,hist/hist/src/TVirtualHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualHistPainter.cxx,1,['interface'],['interface']
Integrability,"/** \class TVirtualPadPainter; \ingroup Base. To make it possible to use GL for 2D graphic in a TPad/TCanvas.; TVirtualPadPainter interface must be used instead of TVirtualX.; Internally, non-GL implementation _should_ delegate all calls; to gVirtualX, GL implementation will delegate part of calls; to gVirtualX, and has to implement some of the calls from the scratch.; */; ////////////////////////////////////////////////////////////////////////////////; ///Virtual dtor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadPainter.cxx:130,interface,interface,130,core/base/src/TVirtualPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPadPainter.cxx,1,['interface'],['interface']
Integrability,"/** \class ZeroMQPoller; * \brief Wrapper class for polling ZeroMQ sockets; *; * This class simplifies calls to poll or ppoll ZeroMQ sockets. It stores the; * list of sockets to be polled, which means they don't have to be separately; * carried around by the user. It also parses output and returns an easily; * digestible vector of events.; */; /**; * \brief Poll the sockets; *; * \param[in] timeo Timeout in milliseconds. 0 means return immediately. -1 means wait for an event indefinitely.; * \return A vector of pairs of index and flags; index is the index of the registered fd or socket and flags are 0 (no; * events), ZMQ_POLLIN or ZMQ_POLLOUT.; *; * \note This function can throw (from inside zmq::poll), so wrap in try-catch!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp:34,Wrap,Wrapper,34,roofit/roofitZMQ/src/ZeroMQPoller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp,2,"['Wrap', 'wrap']","['Wrapper', 'wrap']"
Integrability,"/** \class ZeroMQSvc; * \brief Wrapper class for basic ZeroMQ context and socket management; *; * This singleton class wraps a couple of basic ZeroMQ tasks:; *; * 1. Creating, storing and eventually closing a ZeroMQ context.; * 2. Creating new sockets in the context.; * 3. Sending, receiving, encoding and decoding messages over sockets.; *; * For convenience, it offers a number of template overloads that automatically; * encode all kinds of data types in ZeroMQ message objects.; */; /**; * \brief Get singleton object of this class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp:31,Wrap,Wrapper,31,roofit/roofitZMQ/src/ZeroMQSvc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp,4,"['Wrap', 'message', 'wrap']","['Wrapper', 'message', 'messages', 'wraps']"
Integrability,"/** \defgroup CINDEX libclang: C Interface to Clang; *; * The C Interface to Clang provides a relatively small API that exposes; * facilities for parsing source code into an abstract syntax tree (AST),; * loading already-parsed ASTs, traversing the AST, associating; * physical source locations with elements within the AST, and other; * facilities that support Clang-based development tools.; *; * This C interface to Clang will never provide all of the information; * representation stored in Clang's C++ AST, nor should it: the intent is to; * maintain an API that is relatively stable from one release to the next,; * providing only the basic functionality needed to support development tools.; *; * To avoid namespace pollution, data types are prefixed with ""CX"" and; * functions are prefixed with ""clang_"".; *; * @{; */; /**; * An ""index"" that consists of a set of translation units that would; * typically be linked together into an executable or library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:33,Interface,Interface,33,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,/** concrete implementation of the MinimumSeedGenerator interface; used within; ModularFunctionMinimizer;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnSeedGenerator.h:56,interface,interface,56,math/minuit2/inc/Minuit2/MnSeedGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnSeedGenerator.h,1,['interface'],['interface']
Integrability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:23,Integrat,Integrator,23,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Integrability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used; This is used by the plug-in manager (need a char * instead of enumerations). @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule (from 1 to 6); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:23,Integrat,Integrator,23,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Integrability,/** constructor of GSL MCIntegrator. VEGAS MC is set as default integration type. @param type type of integration using a char * (required by plug-in manager); @param absTol desired absolute Error; @param relTol desired relative Error; @param calls maximum number of function calls; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:64,integrat,integration,64,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,2,['integrat'],['integration']
Integrability,"/** facade: forward interface of MnUserParameters and MnUserTransformation */; // access to parameters (row-wise)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameterState.h:20,interface,interface,20,math/minuit2/inc/Minuit2/MnUserParameterState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameterState.h,1,['interface'],['interface']
Integrability,/** forwarded interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserTransformation.h:14,interface,interface,14,math/minuit2/inc/Minuit2/MnUserTransformation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserTransformation.h,1,['interface'],['interface']
Integrability,/** return the status of the last integration - 0 in case of success */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:34,integrat,integration,34,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Integrability,"/************ FUNCTIONS' DECLARATIONS *************/; // There are several versions of this function: this is one sends a; // message with a code and no object. The templated versions are used; // to send a code and an object of any non-pointer type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:126,message,message,126,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['message'],['message']
Integrability,"/************ TEMPLATE FUNCTIONS' IMPLEMENTATIONS *******************/; //////////////////////////////////////////////////////////////////////////; /// Send a message with a code and an object to socket s.; /// The number of bytes sent is returned, as per TSocket::SendRaw.; /// This standalone function can be used to send a code and possibly; /// an object on a given socket. This function does not check whether the; /// socket connection is in a valid state. MPRecv() must be used to; /// retrieve the contents of the message.\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent using MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types cannot be sent via MPSend() (with the exception of const char*).; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \param obj the object to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:159,message,message,159,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,2,['message'],['message']
Integrability,"/****************** Begin Escape Sequence Translator *************/; // The next section of code implements routines used to translate; // the '&' escape sequences of SGML to individual characters.; // Examples:; //; // &amp; &; // &lt; <; // &gt; >; // &nbsp; nonbreakable space; //; // Each escape sequence is recorded as an instance of the following; // structure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx:108,rout,routines,108,gui/guihtml/src/TGHtmlParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx,1,['rout'],['routines']
Integrability,"/******************** Other Edge Operations **********************/; /* All these routines can be implemented with the basic edge; * operations above. They are provided for convenience and efficiency.; */; /* __gl_meshAddEdgeVertex( eOrg ) creates a new edge eNew such that; * eNew == eOrg->Lnext, and eNew->Dst is a newly created vertex.; * eOrg and eNew will have the same left face.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c:82,rout,routines,82,graf3d/eve7/glu/mesh.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c,1,['rout'],['routines']
Integrability,/******************** Superseded interface *********************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:33,interface,interface,33,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['interface'],['interface']
Integrability,/********************** XML interface to read binning schemes *************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:28,interface,interface,28,hist/unfold/inc/TUnfoldBinningXML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h,1,['interface'],['interface']
Integrability,"/************************ Utility Routines ************************/; /* MakeEdge creates a new pair of half-edges which form their own loop.; * No vertex or face structures are allocated, but these must be assigned; * before the current edge operation is completed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c:34,Rout,Routines,34,graf3d/eve7/glu/mesh.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c,1,['Rout'],['Routines']
Integrability,/***********************************************************************************/; /* High level interface : 														 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:101,interface,interface,101,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,2,['interface'],['interface']
Integrability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA * *; * *; * Description: *; * *; * Authors: *; * Lorenzo Moneta *; * *; * Copyright (c) 2022: *; * CERN, Switzerland *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RSofieReader.hxx:110,integrat,integrated,110,tmva/tmva/inc/TMVA/RSofieReader.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RSofieReader.hxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * *; * Authors: *; * Jonas Rembser (jonas.rembser@cern.ch) *; * *; * Copyright (c) 2024: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RBDT.cxx:110,integrat,integrated,110,tmva/tmva/src/RBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RBDT.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: ROOT - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * *; * Authors: *; * Stefan Wunsch (stefan.wunsch@cern.ch) *; * Jonas Rembser (jonas.rembser@cern.ch) *; * *; * Copyright (c) 2024: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RBDT.hxx:110,integrat,integrated,110,tmva/tmva/inc/TMVA/RBDT.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RBDT.hxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method *; * *; * Authors (alphabetical): *; * Vladimir Ilievsky <ilievski.vladimir@live.com> - CERN, Switzerland *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.h:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestIm2Col.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method on the GPU *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Concrete instantiation of the generic Im2Col test for //; // CUDA architectures. //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCuda.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling layer in an architecture agnostic manner. *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Max Pooling Layer //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.h:110,integrat,integrated,110,tmva/tmva/test/DNN/CNN/TestPoolingLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BDTEventWrapper *; * *; * *; * Description: *; * *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BDTEventWrapper.cxx:110,integrat,integrated,110,tmva/tmva/src/BDTEventWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BDTEventWrapper.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BDTEventWrapper *; * *; * *; * Description: *; * *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BDTEventWrapper.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/BDTEventWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BDTEventWrapper.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCPruner *; * *; * *; * Description: Cost Complexity Pruning *; *; * Author: Doug Schouten (dschoute@sfu.ca); *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCPruner.cxx:110,integrat,integrated,110,tmva/tmva/src/CCPruner.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCPruner.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCPruner *; * *; * *; * Description: Cost Complexity Pruning *; *; * Author: Doug Schouten (dschoute@sfu.ca); *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////////////////////////////////////////////; // CCPruner - a helper class to prune a decision tree using the Cost Complexity method //; // (see Classification and Regression Trees by Leo Breiman et al) //; // //; // Some definitions: //; // //; // T_max - the initial, usually highly overtrained tree, that is to be pruned back //; // R(T) - quality index (Gini, misclassification rate, or other) of a tree T //; // ~T - set of terminal nodes in T //; // T' - the pruned subtree of T_max that has the best quality index R(T') //; // alpha - the prune strength parameter in Cost Complexity pruning (R_alpha(T) = R(T) + alpha// |~T|) //; // //; // There are two running modes in CCPruner: (i) one may select a prune strength and prune back //; // the tree T_max until the criterion //; // R(T) - R(t) //; // alpha < ---------- //; // |~T_t| - 1 //; // //; // is true for all nodes t in T, or (ii) the algorithm finds the sequence of critical points //; // alpha_k < alpha_k+1 ... < alpha_K such that T_K = root(T_max) and then selects the optimally-pruned //; // subtree, defined to be the subtree with the best quality index for the validation sample. //; ////////////////////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCPruner.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CCPruner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCPruner.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCTreeWrapper *; * *; * *; * Description: a light wrapper of a decision tree, used to perform cost *; * complexity pruning ""in-place"" Cost Complexity Pruning *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CCTreeWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h,2,"['integrat', 'wrap']","['integrated', 'wrapper']"
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CCTreeWrapper *; * *; * *; * Description: a light wrapper of a decision tree, used to perform cost *; * complexity pruning ""in-place"" Cost Complexity Pruning *; * *; * Author: Doug Schouten (dschoute@sfu.ca) *; * *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CCTreeWrapper; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCTreeWrapper.cxx:110,integrat,integrated,110,tmva/tmva/src/CCTreeWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CCTreeWrapper.cxx,2,"['integrat', 'wrap']","['integrated', 'wrapper']"
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Extension of the Interval to ""logarithmic"" intervals *; * *; * *; * *; * Authors (alphabetical): *; * Helge Voss <helge.voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/LogInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LogInterval.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Extension of the Interval to ""logarithmic"" intervals *; * *; * *; * *; * Authors (alphabetical): *; * Helge Voss <helge.voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::LogInterval; \ingroup TMVA. The TMVA::Interval Class. - LogInterval definition, continuous and discrete. - LogInterval(min,max) : a continous interval [min,max]; - LogInterval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:. 1,10,100,1000. 1,2,4,8,16,32,64,128,512,1024. or alike .. ~~~ {.cpp}; Example:; LogInterval(1,10000,5); i=0 --> 1 note: StepSize(ibin=0) = not defined !!; i=1 --> 10 StepSize(ibin=1) = 9; i=2 --> 100 StepSize(ibin=2) = 99; i=3 --> 1000 StepSize(ibin=3) = 999; i=4 --> 10000 StepSize(ibin=4) = 9999. LogInterval(1,1000,11); i=0 --> 1; i=1 --> 1.99526; i=2 --> 3.98107; i=3 --> 7.94328; i=4 --> 15.8489; i=5 --> 31.6228; i=6 --> 63.0957; i=7 --> 125.893; i=8 --> 251.189; i=9 --> 501.187; i=10 --> 1000. LogInterval(1,1024,11); i=0 --> 1; i=1 --> 2; i=2 --> 4; i=3 --> 8; i=4 --> 16; i=5 --> 32; i=6 --> 64; i=7 --> 128; i=8 --> 256; i=9 --> 512; i=10 --> 1024; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LogInterval.cxx:110,integrat,integrated,110,tmva/tmva/src/LogInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LogInterval.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Joseph McKenna <Joseph.McKenna@cern.ch> - Aarhus, Denmark *; * *; * Copyright (c) 2019: *; * Aarhus, Denmark *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TrainingHistory.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/TrainingHistory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TrainingHistory.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : OptimizeConfigParameters *; * *; * *; * Description: The OptimizeConfigParameters takes care of ""scanning/fitting"" *; * different tuning parameters in order to find the best set of *; * tuning paraemters which will be used in the end *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/OptimizeConfigParameters.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/OptimizeConfigParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/OptimizeConfigParameters.h,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : OptimizeConfigParameters *; * *; * *; * Description: The OptimizeConfigParameters takes care of ""scanning/fitting"" *; * different tuning parameters in order to find the best set of *; * tuning paraemters which will be used in the end *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/; /*! \class TMVA::OptimizeConfigParameters; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:110,integrat,integrated,110,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * IPruneTool - a helper interface class to prune a decision tree *; * *; * Authors (alphabetical): *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/IPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CostComplexityPruneTool.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/CostComplexityPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CostComplexityPruneTool.h,2,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::CostComplexityPruneTool; \ingroup TMVA; A class to prune a decision tree using the Cost Complexity method.; (see ""Classification and Regression Trees"" by Leo Breiman et al). ### Some definitions:. - \f$ T_{max} \f$ - the initial, usually highly overtrained tree, that is to be pruned back; - \f$ R(T) \f$ - quality index (Gini, misclassification rate, or other) of a tree \f$ T \f$; - \f$ \sim T \f$ - set of terminal nodes in \f$ T \f$; - \f$ T' \f$ - the pruned subtree of \f$ T_max \f$ that has the best quality index \f$ R(T') \f$; - \f$ \alpha \f$ - the prune strength parameter in Cost Complexity pruning \f$ (R_{\alpha}(T) = R(T) + \alpha*|\sim T|) \f$. There are two running modes in CCPruner: (i) one may select a prune strength and prune back; the tree \f$ T_{max}\f$ until the criterion:; \f[; \alpha < \frac{R(T) - R(t)}{|\sim T_t| - 1}; \f]. is true for all nodes t in \f$ T \f$, or (ii) the algorithm finds the sequence of critical points; \f$ \alpha_k < \alpha_{k+1} ... < \alpha_K \f$ such that \f$ T_K",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:110,integrat,integrated,110,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::ExpectedErrorPruneTool; \ingroup TMVA. A helper class to prune a decision tree using the expected error (C4.5) method. Uses an upper limit on the error made by the classification done by each node.; If the \f$ \frac{S}{S+B} \f$ of the node is \f$ f \f$, then according to the; training sample, the error rate (fraction of misclassified events by this; node) is \f$ (1-f) \f$. Now \f$ f \f$ has a statistical error according to the; binomial distribution hence the error on \f$ f \f$ can be estimated (same error; as the binomial error for efficiency calculations; \f$ (\sigma = \sqrt{\frac{(eff(1-eff)}{nEvts}}) \f$. This tool prunes branches from a tree if the expected error of a node is less; than that of the sum of the error in its descendants. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:110,integrat,integrated,110,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TrainingHistory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Joseph McKenna <Joseph.McKenna@cern.ch> - Aarhus, Denmark *; * *; * Copyright (c) 2019: *; * Aarhus, Denmark *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TrainingHistory; \ingroup TMVA. Tracking data from training. Eg, From deep learning record loss for each Epoch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx:110,integrat,integrated,110,tmva/tmva/src/TrainingHistory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TrainingHistory.cxx,1,['integrat'],['integrated']
Integrability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VarTransformHandler *; * *; * *; * Description: *; * Implementation of unsupervised variable transformation methods *; * *; * Authors (alphabetical): *; * Abhinav Moudgil <abhinav.moudgil@research.iiit.ac.in> - IIIT-H, India *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h:110,integrat,integrated,110,tmva/tmva/inc/TMVA/VarTransformHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h,2,['integrat'],['integrated']
Integrability,"/*******************************************************************************; * Advanced dictionary and prefix API; *; * This API allows dictionaries to be used with ZSTD_compress2(),; * ZSTD_compressStream2(), and ZSTD_decompress(). Dictionaries are sticky, and; * only reset with the context is reset with ZSTD_reset_parameters or; * ZSTD_reset_session_and_parameters. Prefixes are single-use.; ******************************************************************************/; /*! ZSTD_CCtx_loadDictionary() :; * Create an internal CDict from `dict` buffer.; * Decompression will have to use same dictionary.; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special: Loading a NULL (or 0-size) dictionary invalidates previous dictionary,; * meaning ""return to no-dictionary mode"".; * Note 1 : Dictionary is sticky, it will be used for all future compressed frames.; * To return to ""no-dictionary"" situation, load a NULL dictionary (or reset parameters).; * Note 2 : Loading a dictionary involves building tables.; * It's also a CPU consuming operation, with non-negligible impact on latency.; * Tables are dependent on compression parameters, and for this reason,; * compression parameters can no longer be changed after loading a dictionary.; * Note 3 :`dict` content will be copied internally.; * Use experimental ZSTD_CCtx_loadDictionary_byReference() to reference content instead.; * In such a case, dictionary buffer must outlive its users.; * Note 4 : Use ZSTD_CCtx_loadDictionary_advanced(); * to precisely select how dictionary content must be interpreted. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1141,depend,dependent,1141,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['dependent']
Integrability,"/******************************************************************************/; // Color wrapping functions; /******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Prevent further color changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:91,wrap,wrapping,91,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['wrap'],['wrapping']
Integrability,"/******************************************************************************/; // Rendering atoms used by TGLViewer / TGScene.; /******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Set basic draw colors from 4 component 'rgba'; /// Used by other TGLUtil drawing routines; ///; /// Sets basic (unlit) color - glColor; /// and also GL materials (see OpenGL docs) thus:; ///; /// diffuse : rgba; /// ambient : 0.0 0.0 0.0 1.0; /// specular : 0.6 0.6 0.6 1.0; /// emission : rgba/4.0; /// shininess: 60.0; ///; /// emission is set so objects with no lights (but lighting still enabled); /// are partially visible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:380,rout,routines,380,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['rout'],['routines']
Integrability,/******************************************************************************/; // TEveRefCnt base-class (interface); /******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:108,interface,interface,108,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['interface'],['interface']
Integrability,"/******************************************************************************/; // TGLFont interface; /******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Release font in the GL rendering context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx:93,interface,interface,93,graf3d/gl/src/TGLRnrCtx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx,1,['interface'],['interface']
Integrability,/******************************************************************************; * Debugging routine to print the hit ratio - number of times the hash table *; * was tested per operation. This routine was used to test the KeyItem routine *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:93,rout,routine,93,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,3,['rout'],['routine']
Integrability,"/******************************************************************************; * O.K., here are the routines from GIF_LIB file DEV2GIF.C.		 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:102,rout,routines,102,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,"/******************************************************************************; * O.K., here are the routines from GIF_LIB file QPRINTF.C.		 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:102,rout,routines,102,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,"/******************************************************************************; * O.K., here are the routines from GIF_LIB file QUANTIZE.C.		 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:102,rout,routines,102,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,"/******************************************************************************; * O.K., here are the routines one can access in order to decode GIF file: *; * (GIF_LIB file DGIF_LIB.C).						 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:102,rout,routines,102,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,"/******************************************************************************; * O.K., here are the routines one can access in order to encode GIF file: *; * (GIF_LIB file EGIF_LIB.C).						 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:102,rout,routines,102,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,"/******************************************************************************; * Quantize high resolution image into lower one. Input image consists of a *; * 2D array for each of the RGB colors with size Width by Height. There is no *; * Color map for the input. Output is a quantized image with 2D array of *; * indexes into the output color map. *; * Note input image can be 24 bits at the most (8 for red/green/blue) and *; * the output has 256 colors at the most (256 entries in the color map.). *; * ColorMapSize specifies size of color map up to 256 and will be updated to *; * real size before returning. *; * Also non of the parameter are allocated by this routine. *; * This function returns GIF_OK if successful, GIF_ERROR otherwise. *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:668,rout,routine,668,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['rout'],['routine']
Integrability,/******************************************************************************; * Routine called by qsort to compare to entries. *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:83,Rout,Routine,83,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['Rout'],['Routine']
Integrability,/******************************************************************************; * Routine to clear the HashTable to an empty state.			 *; * This part is a little machine depended. Use the commented part otherwise. *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:83,Rout,Routine,83,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,2,"['Rout', 'depend']","['Routine', 'depended']"
Integrability,"/******************************************************************************; * Routine to generate an HKey for the hashtable out of the given unique key. *; * The given Key is assumed to be 20 bits as follows: lower 8 bits are the *; * new postfix character, while the upper 12 bits are the prefix code.	 *; * Because the average hit ratio is only 2 (2 hash references per entry), *; * evaluating more complex keys (such as twin prime keys) does not worth it! *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:83,Rout,Routine,83,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,1,['Rout'],['Routine']
Integrability,/******************************************************************************; * Routine to insert a new Item into the HashTable. The data is assumed to be *; * new one.								 *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:83,Rout,Routine,83,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,1,['Rout'],['Routine']
Integrability,"/******************************************************************************; * Routine to set current GIF version. All files open for write will be *; * using this version until next call to this routine. Version consists of *; * 3 characters as ""87a"" or ""89a"". No test is made to validate the version. *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:83,Rout,Routine,83,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,2,"['Rout', 'rout']","['Routine', 'routine']"
Integrability,"/******************************************************************************; * Routine to subdivide the RGB space recursively using median cut in each *; * axes alternatingly until ColorMapSize different cubes exists. *; * The biggest cube in one dimension is subdivide unless it has only one entry.*; * Returns GIF_ERROR if failed, otherwise GIF_OK. *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c:83,Rout,Routine,83,graf2d/win32gdk/src/gifquantize.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifquantize.c,2,['Rout'],['Routine']
Integrability,"/******************************************************************************; * Routine to test if given Key exists in HashTable and if so returns its code *; * Returns the Code if key was found, -1 if not.				 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c:83,Rout,Routine,83,graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_hash.c,1,['Rout'],['Routine']
Integrability,/******************************************************************************; * This routine should be called before any attemp to dump an image - any *; * call to any of the pixel dump routines.				 *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:88,rout,routine,88,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,2,['rout'],"['routine', 'routines']"
Integrability,"/******************************************************************************; * This routine should be called before any attemp to read an image. *; * Note it is assumed the Image desc. header (',') has been read.	 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:88,rout,routine,88,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['rout'],['routine']
Integrability,/******************************************************************************; * This routine should be called before any attemp to read an image. *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:88,rout,routine,88,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,1,['rout'],['routine']
Integrability,/******************************************************************************; * This routine should be called before any other DGif calls. Note that *; * this routine is called automatically from DGif file open routines.	 *; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c:88,rout,routine,88,graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/dgif_lib.c,3,['rout'],"['routine', 'routines']"
Integrability,"/******************************************************************************; * This routine should be called before any other EGif calls, immediately *; * follows the GIF file openning.					 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:88,rout,routine,88,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['rout'],['routine']
Integrability,"/******************************************************************************; Copyright (c) Microsoft Corporation. Permission to use, copy, modify, and/or distribute this software for any; purpose with or without fee is hereby granted. THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH; REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY; AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,; INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR; OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THIS SOFTWARE.; ***************************************************************************** */; /* global Reflect, Promise */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/svg2pdf.mjs:604,CONTRACT,CONTRACT,604,js/modules/base/svg2pdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/svg2pdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,/******************************************************************************; Get an interesting event and update the user input information. The routine will eventually block waiting for an event if block is 1; and the no events of interest have shown up.; ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:149,rout,routine,149,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['rout'],['routine']
Integrability,/******************************************************************************; Update the scene position information using user input. The routine will eventually block waiting for an event if block is True; and the no events of interest show up due to the call to GetInput(); ******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:141,rout,routine,141,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['rout'],['routine']
Integrability,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:840,integrat,integrated,840,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,2,['integrat'],['integrated']
Integrability,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1165,integrat,integration,1165,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Author: *; * Tristan du Pree, Nikhef, Amsterdam, tdupree@nikhef.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooMultiBinomial; \ingroup Roofit. RooMultiBinomial is an efficiency function which makes all combinations of; efficiencies given as input different efficiency functions for different categories. Given a dataset with a category C that determines if a given; event is accepted (1) or rejected (0) for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters. The combination only 'reject' can be chosen to be visible or not visible; (and hence this efficiency is then equal to zero).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMultiBinomial.cxx:1004,depend,dependents,1004,roofit/roofit/src/RooMultiBinomial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMultiBinomial.cxx,1,['depend'],['dependents']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl *; * *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooMinimizerFcn; /// RooMinimizerFcn is an interface to the ROOT::Math::IBaseFunctionMultiDim,; /// a function that ROOT's minimisers use to carry out minimisations.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:723,interface,interface,723,roofit/roofitcore/src/RooMinimizerFcn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl *; * *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; //; // RooAbsMinimizerFcn is an interface class to the ROOT::Math function; // for minimization. It contains only the ""logistics"" of synchronizing; // between Minuit and RooFit. Its subclasses implement actual interfacing; // to Minuit by subclassing IMultiGenFunction or IMultiGradFunction.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx:701,interface,interface,701,roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMinimizerFcn.cxx,2,"['interface', 'synchroniz']","['interface', 'synchronizing']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:738,wrap,wrapper,738,roofit/roofitcore/src/RooExtendPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx,5,"['depend', 'integrat', 'wrap']","['dependents', 'integration', 'wrapper']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooCustomizer; *; * RooCustomizer is a factory class to produce clones; * of a prototype composite PDF object with the same structure but; * different leaf servers (parameters or dependents).; *; * RooCustomizer supports two kinds of modifications:; *; * - replaceArg(leaf_arg, repl_arg):; * Replaces each occurrence of leaf_arg with repl_arg in the composite pdf.; *; * - splitArg(split_arg):; * Build multiple clones of the same prototype. Each; * occurrence of split_arg is replaced with a clone of split_arg; * named split_arg_[MCstate], where [MCstate] is the name of the; * 'master category state' that indexes the clones to be built.; *; *; * ### Example: Change the decay constant of an exponential for each run; *; * Splitting is particularly useful when building simultaneous fits to; * subsets of the data sample with different background properties.; * In such a case, the user builds a single prototype PDF representing; * the structure of the signal and background and splits the dataset; * into categories with different background properties. Using; * RooCustomizer a PDF for each subfit can be constructed from the; * prototype that has same structure and signal parameters, but; * different instances of the background parameters: e.g.; * ```; * ...; * RooExponential bg(""bg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:888,depend,dependents,888,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['depend'],['dependents']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \class RooCategory; \ingroup Roofitcore. Object to represent discrete states.; States have names and index numbers, and the index numbers can be written into datasets and; used in calculations.; A category is ""fundamental"", i.e., its value doesn't depend on the value of other objects.; (Objects in datasets cannot depend on other objects' values, they need to be self-consistent.). A category object can be used to *e.g.* conduct a simultaneous fit of; the same observable in multiple categories. ### Setting up a category; 1. A category can be set up like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Lepton multiplicity category"", {; {""0Lep"", 0},; {""1Lep"", 1},; {""2Lep"", 2},; {""3Lep"", 3}; });; ~~~; 2. Like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Asymmetry"");; myCat[""left""] = -1;; myCat[""right""] = 1;; ~~~; 3. Or like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Asymmetry"");; myCat.defineType(""left"", -1);; myCat.defineType(""right"", 1);; ~~~; Inspect the pairs of state names and state numbers like this:; ~~~{.cpp}; for (const auto& nameIdx : myCat) {; std::cout << nameIdx.first << "" --> "" << nameIdx.second << std::endl;; }; ~~~. ### Changing category states; Category states can be modified either by using the index state (faster) or state names.; For example:; ~~~{.cpp}; myCat.setI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:948,depend,depend,948,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['depend'],['depend']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAICRegistry.cxx; \class RooAICRegistry; \ingroup Roofitcore. Utility class for operator p.d.f; classes that keeps track of analytical integration codes and; associated normalization and integration sets.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:843,integrat,integration,843,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,2,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsBinning.cxx; \class RooAbsBinning; \ingroup Roofitcore. Abstract base class for RooRealVar binning definitions.; This class defines the interface to retrieve bin boundaries, ranges etc.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsBinning.cxx:848,interface,interface,848,roofit/roofitcore/src/RooAbsBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsBinning.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsData.cxx; \class RooAbsData; \ingroup Roofitcore. Abstract base class for binned and unbinned; datasets. The abstract interface defines plotting and tabulating entry; points for its contents and provides an iterator over its elements; (bins for binned data sets, data points for unbinned datasets). ### Storing global observables in RooFit datasets. RooFit groups model variables into *observables* and *parameters*, depending on; if their values are stored in the dataset. For fits with parameter; constraints, there is a third kind of variables, called *global observables*.; These represent the results of auxiliary measurements that constrain the; nuisance parameters. In the RooFit implementation, a likelihood is generally; the sum of two terms:; - the likelihood of the data given the parameters, where the normalization set; is the set of observables (implemented by RooNLLVar); - the constraint term, where the normalization set is the set of *global; observables* (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the; model/pdf. With this release, a mechanism is added to store a snapshot of; global observables in any RooDataSet or RooDataHist. For toy studies where the; global observables assume a different values fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:830,interface,interface,830,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsFunc.cxx; \class RooAbsFunc; \ingroup Roofitcore. Abstract interface for evaluating a real-valued function of one real variable; and performing numerical algorithms on it. The purpose of this interface is; to decouple RooAbsArg-specific implementations from numerical algorithms that; only need a simple function evaluation interface. The domain of the function; is assumed to be an n-dimensional box with edge coordinates specified by the; the getMinLimit() and getMaxLimit() methods.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx:771,interface,interface,771,roofit/roofitcore/src/RooAbsFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx,3,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsGenContext.cxx; \class RooAbsGenContext; \ingroup Roofitcore. Abstract base class for generator contexts of; RooAbsPdf objects. A generator context is an object that controls; the generation of events from a given p.d.f in one or more sessions.; This class defines the common interface for all such contexts and organizes; storage of common components, such as the observables definition, the; prototype data etc..; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:988,interface,interface,988,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsIntegrator.cxx; \class RooAbsIntegrator; \ingroup Roofitcore. Abstract interface for integrators of real-valued; functions that implement the RooAbsFunc interface.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx:783,interface,interface,783,roofit/roofitcore/src/RooAbsIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx,3,"['integrat', 'interface']","['integrators', 'interface']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsRealLValue.cxx; \class RooAbsRealLValue; \ingroup Roofitcore. Abstract base class for objects that represent a; real value that may appear on the left hand side of an equation ('lvalue').; Each implementation must provide a setVal() member to allow direct modification; of the value. RooAbsRealLValue may be derived, but its functional relation; to other RooAbsArg must be invertible. This class has methods that export the defined range of the lvalue,; but doesn't hold its values because these limits may be derived; from limits of client object. The range serve as integration; range when interpreted as a observable and a boundaries when; interpreted as a parameter.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:1280,integrat,integration,1280,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveGaussKronrodIntegrator1D.cxx; \class RooAdaptiveGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An adaptive Gaussian quadrature method for numerical integration in; which error is estimated based on evaluation at special points; known as the ""Kronrod points"". By suitably picking these points,; abscissas from previous iterations can be reused as part of the new; set of points, whereas usual Gaussian quadrature would require; recomputation of all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a \f$ x \rightarrow 1/x \f$ coordinate; transformation. This class embeds the adaptive Gauss-Kronrod integrator from the; GNU Scientific Library version 1.5 and applies a chosen rule ( 10-,; 21-, 31-, 41, 51- or 61-point). The integration domain is; subdivided and recursively integrated until the required precision; is reached. For integrands with integrable singularities the Wynn epsilon rule; can be selected to speed up the convergence of these integrals.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:841,integrat,integration,841,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,6,['integrat'],"['integrated', 'integration', 'integrator']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveIntegratorND.cxx; \class RooAdaptiveIntegratorND; \ingroup Roofitcore. Adaptive one-dimensional numerical integration algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:823,integrat,integration,823,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooBrentRootFinder.cxx; \class RooBrentRootFinder; \ingroup Roofitcore. Implement the abstract 1-dimensional root finding interface using; the Brent-Decker method. This implementation is based on the one; in the GNU scientific library (v0.99).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBrentRootFinder.cxx:828,interface,interface,828,roofit/roofitcore/src/RooBrentRootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBrentRootFinder.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCacheManager.cxx; \class RooCacheManager; \ingroup Roofitcore. Manages the storage of any type of data indexed on; the choice of normalization and optionally the set of integrated observables.; The purpose of this class is to facilitate storage of intermediate results; in operator p.d.f.s whose value and inner working are often highly dependent; on the user provided choice of normalization in getVal(). For efficiency reasons these normalization set pointer are; dereferenced as little as possible. This class contains a lookup; table for RooArgSet pointer pairs -> normalization lists. Distinct; pointer pairs that represent the same normalization/projection are; recognized and will all point to the same normalization list. Lists; for up to 'maxSize' different normalization/ projection; configurations can be cached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx:878,integrat,integrated,878,roofit/roofitcore/src/RooCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx,2,"['depend', 'integrat']","['dependent', 'integrated']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCmdConfig.cxx; \class RooCmdConfig; \ingroup Roofitcore. Configurable parser for RooCmdArg named; arguments. It maps the contents of named arguments named to integers,; doubles, strings and TObjects that can be retrieved after processing; a set of RooCmdArgs. The parser also has options to enforce syntax; rules such as (conditionally) required arguments, mutually exclusive; arguments and dependencies between arguments.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:1100,depend,dependencies,1100,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['depend'],['dependencies']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCompositeDataStore.cxx; \class RooCompositeDataStore; \ingroup Roofitcore. Combines several disjunct datasets into one. This is useful for simultaneous PDFs; that do not depend on the same observable such as a PDF depending on `x` combined with another one depending; on `y`.; The composite storage will store two different datasets, `{x}` and `{y}`, but they can be passed as a single; dataset to RooFit operations. A category tag will define which dataset has to be passed to which likelihood. When iterated from start to finish, datasets will be traversed in the order of the category index.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx:879,depend,depend,879,roofit/roofitcore/src/RooCompositeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx,3,['depend'],"['depend', 'depending']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooConvCoefVar.cxx; \class RooConvCoefVar; \ingroup Roofitcore. Auxiliary class that represents the coefficient; of a RooAbsAnaConvPdf implementation as a separate RooAbsReal object; to be able to interface these coefficient terms with the generic; RooRealIntegral integration mechanism.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx:903,interface,interface,903,roofit/roofitcore/src/RooConvCoefVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooConvIntegrandBinding.cxx; \class RooConvIntegrandBinding; \ingroup Roofitcore. Implementation of RooAbsFunc that represent the integrand; of a generic (numeric) convolution A (x) B so that it can be; passed to a numeric integrator. This is a utility class for; RooNumConvPdf; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx:929,integrat,integrator,929,roofit/roofitcore/src/RooConvIntegrandBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx,1,['integrat'],['integrator']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEfficiency.cxx; \class RooEfficiency; \ingroup Roofitcore. A PDF helper class to fit efficiencies parameterized; by a supplied function F. Given a dataset with a category C that determines if a given; event is accepted or rejected for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx:1131,depend,dependents,1131,roofit/roofitcore/src/RooEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx,1,['depend'],['dependents']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFunctor.cxx; \class RooFunctor; \ingroup Roofitcore. Lightweight interface adaptor that exports a RooAbsPdf as a functor.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:774,interface,interface,774,roofit/roofitcore/src/RooFunctor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGaussKronrodIntegrator1D.cxx; \class RooGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An Gaussian quadrature method for numerical integration in which; error is estimation based on evaluation at special points known as; ""Kronrod points."" By suitably picking these points, abscissas from; previous iterations can be reused as part of the new set of points,; whereas usual Gaussian quadrature would require recomputation of; all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a x -> 1/x coordinate; transformation. This class embeds the Gauss-Kronrod integrator from the GNU; Scientific Library version 1.5 and applies the 10-, 21-, 43- and; 87-point rule in succession until the required target precision is; reached; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:825,integrat,integration,825,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,4,['integrat'],"['integration', 'integrator']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenProdProj.cxx; \class RooGenProdProj; \ingroup Roofitcore. RooGenProdProj is an auxiliary class for RooProdPdf that calculates; a general normalised projection of a product of non-factorising PDFs, e.g.; \f[; P_{x,xy} = \frac{\int ( P1 * P2 * \ldots) \mathrm{d}x}{\int ( P1 * P2 * \ldots ) \mathrm{d}x \mathrm{d}y}; \f]. Partial integrals, which factorise and can be calculated, are calculated; analytically. Remaining non-factorising observables are integrated numerically.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:1162,integrat,integrated,1162,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integrated']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:977,integrat,integration,977,roofit/roofitcore/src/RooGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:875,integrat,integrating,875,roofit/roofitcore/src/RooHistError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx,1,['integrat'],['integrating']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooImproperIntegrator1D.cxx; \class RooImproperIntegrator1D; \ingroup Roofitcore. Special numeric integrator that can handle integrals over open domains.; To this end the range is cut in up three pieces: [-inf,-1],[-1,+1] and [+1,inf]; and the outer two pieces, if required are calculated using a 1/x transform; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:804,integrat,integrator,804,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrator']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:836,integrat,integration,836,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:799,message,messages,799,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,3,['message'],"['message', 'messages']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:852,integrat,integration,852,roofit/roofitcore/src/RooNormSetCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx,4,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:831,integrat,integrators,831,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,"['integrat', 'interface']","['integrators', 'interface']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:806,integrat,integrators,806,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,6,"['depend', 'integrat']","['depend', 'integrated', 'integration', 'integrator', 'integrators']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:831,integrat,integrators,831,roofit/roofitcore/src/RooNumIntConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx,2,"['integrat', 'interface']","['integrators', 'interface']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:806,integrat,integrators,806,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,6,"['depend', 'integrat']","['depend', 'integrated', 'integration', 'integrator', 'integrators']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:1220,interface,interface,1220,roofit/roofitcore/src/RooObjCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooParamBinning.cxx; \class RooParamBinning; \ingroup Roofitcore. Implementation of RooAbsBinning that constructs; a binning with a range definition that depends on external RooAbsReal objects.; The external RooAbsReal definitions are explicitly allowed to depend on other; observables and parameters, and make it possible to define non-rectangular; range definitions in RooFit. Objects of class RooParamBinning are made; by the RooRealVar::setRange() that takes RooAbsReal references as arguments; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:860,depend,depends,860,roofit/roofitcore/src/RooParamBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx,2,['depend'],"['depend', 'depends']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPlot.cxx; \class RooPlot; \ingroup Roofitcore. Plot frame and a container for graphics objects; within that frame. As a frame, it provides the TH1-style public interface; for setting plot ranges, configuring axes, etc. As a container, it; holds an arbitrary set of objects that might be histograms of data,; curves representing a fit model, or text labels. Use the Draw(); method to draw a frame and the objects it contains. Use the various; add...() methods to add objects to be drawn. In general, the; add...() methods create a private copy of the object you pass them; and return a pointer to this copy. The caller owns the input object; and this class owns the returned object.; All RooAbsReal and RooAbsData derived classes implement plotOn(); functions that facilitate to plot themselves on a given RooPlot, e.g.; ~~~ {.cpp}; RooPlot *frame = x.frame() ;; data.plotOn(frame) ;; pdf.plotOn(frame) ;; ~~~; These high level functions also take care of any projections; or other mappings that need to be made to plot a multi-dimensional; object onto a one-dimensional plot.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:869,interface,interface,869,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPrintable.cxx; \class RooPrintable; \ingroup Roofitcore. A 'mix-in' base class that define the standard RooFit plotting and; printing methods. Each RooPlotable implementation must define methods that; print the objects name, class name, title, value, arguments and extras; to a provided stream. The definition of value is class dependent. The definition; of arguments is also class dependent, but should always be interpreted as; the names (and properties) of any (RooAbsArg) external inputs of a given object.; The extras method can be used to print any properties that does not fit in any; of the other classes. Each object an also override the definitions made; in defaultPrintStyle and defaultPrintContents to determine what is printed; (in terms of contents) and how it is printed (inline,single-line or multiline); given a Print() option string.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:1037,depend,dependent,1037,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,2,['depend'],['dependent']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdGenContext.cxx; \class RooProdGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooProdPdf PDFs. The sim-context owns a list of; component generator contexts that are used to generate the dependents; for each component PDF sequentially.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:948,depend,dependents,948,roofit/roofitcore/src/RooProdGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx,1,['depend'],['dependents']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1018,integrat,integration,1018,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1191,integrat,integration,1191,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,1,['integrat'],['integration']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRandom.cxx; \class RooRandom; \ingroup Roofitcore. This class provides a static interface for generating random numbers.; By default a private copy of TRandom3 is used to generate all random numbers.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx:789,interface,interface,789,roofit/roofitcore/src/RooRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:782,interface,interface,782,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,2,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:881,integrat,integration,881,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,5,['integrat'],"['integrated', 'integration', 'integrations']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:801,integrat,integration,801,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,2,['integrat'],"['integration', 'integrator']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:930,message,messages,930,roofit/roofitcore/src/RooTrace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx,1,['message'],['messages']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsPdf; \ingroup Roofitcore; \brief Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; funct",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:834,interface,interface,834,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsReal. Abstract base class for objects that represent a; real value and implements functionality common to all real-valued objects; such as the ability to plot them, to construct integrals of them, the; ability to advertise (partial) analytical integrals etc. Implementation of RooAbsReal may be derived, thus no interface; is provided to modify the contents. \ingroup Roofitcore; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1104,interface,interface,1104,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:918,integrat,integrate,918,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,2,"['depend', 'integrat']","['dependents', 'integrate']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; ///; /// Class RooRealSumFunc implements a PDF constructed from a sum of; /// functions:; /// ```; /// Sum(i=1,n-1) coef_i * func_i(x) + [ 1 - (Sum(i=1,n-1) coef_i ] * func_n(x); /// pdf(x) = ------------------------------------------------------------------------------; /// Sum(i=1,n-1) coef_i * Int(func_i)dx + [ 1 - (Sum(i=1,n-1) coef_i ] * Int(func_n)dx; ///; /// ```; /// where coef_i and func_i are RooAbsReal objects, and x is the collection of dependents.; /// In the present version coef_i may not depend on x, but this limitation may be removed in the future; ///; /// ### Difference between RooAddPdf / RooRealSum{Func|Pdf}; /// - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; /// - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; /// is computed automatically, unless the PDF is extended (see above).; /// - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:1228,depend,dependents,1228,roofit/roofitcore/src/RooRealSumFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx,2,['depend'],"['depend', 'dependents']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:767,Wrap,Wrapper,767,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,4,"['Wrap', 'interface', 'synchroniz']","['Wrapper', 'interface', 'synchronized']"
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:1342,integrat,integrated,1342,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,1,['integrat'],['integrated']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsCache.cxx; \class RooAbsCache; \ingroup Roofitcore. Abstract base class for data members of RooAbsArgs; that cache other (composite) RooAbsArg expressions. The RooAbsCache; interface defines the interaction between the owning RooAbsArg object; and the cache data member to communicate server redirects, operation; mode changes and constant term optimization management calls.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCache.cxx:871,interface,interface,871,roofit/roofitcore/src/RooAbsCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCache.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsCacheElement.cxx; \class RooAbsCacheElement; \ingroup Roofitcore. Abstract base class for objects to be stored; in RooAbsCache cache manager objects. Each storage element has an; interface to pass on calls for server redirection, operation mode; change calls and constant term optimization management calls; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx:877,interface,interface,877,roofit/roofitcore/src/RooAbsCacheElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx,1,['interface'],['interface']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * AH, Andreas Hoecker, Orsay, hoecker@slac.stanford.edu *; * SL, Sandrine Laplace, Orsay, laplace@slac.stanford.edu *; * JS, Jan Stark, Paris, stark@slac.stanford.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California, *; * IN2P3. All rights reserved. *; * *; * History *; * Nov-2001 WV Created initial version *; * Dec-2001 SL mischarge correction, direct CPV *; * Jan-2002 AH built dedicated generator + code cleaning *; * Mar-2002 JS committed debugged version to CVS *; * Apr-2002 AH allow prompt (ie, non-Pdf) mischarge treatment *; * May-2002 JS Changed the set of CP parameters (mathematically equiv.) *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNonCPEigenDecay; \ingroup Roofit. Time-dependent RooAbsAnaConvPdf for CP violating decays; to Non-CP eigenstates (eg, \f$ B_0 \rightarrow \rho^\pm \pi^\mp\f$).; For a description of the physics model see the; BaBar Physics Book, section 6.5.2.3 .; The set of CP parameters used in this class is equivalent to; the one used in the Physics Book, but it is not exactly the; same. Starting from the set in the BaBar Book, in order to; get the parameters used here you have to change the sign of both; \f$a_c^+\f$ and \f$a_c^-\f$, and then substitute:; \f[; a_s^Q = S + Q \cdot \delta S \\; a_c^Q = C + Q \cdot \delta C; \f]; where Q denotes the charge of the \f$\rho\f$ meson.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:1206,depend,dependent,1206,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['depend'],['dependent']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExponential; \ingroup Roofit. Exponential PDF. It computes; \f[; \mathrm{RooExponential}(x, c) = \mathcal{N} \cdot \exp(c\cdot x),; \f]; where \f$ \mathcal{N} \f$ is a normalisation constant that depends on the; range and values of the arguments.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooExponential.cxx:903,depend,depends,903,roofit/roofit/src/RooExponential.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooExponential.cxx,1,['depend'],['depends']
Integrability,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:1363,depend,depends,1363,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['depend'],['depends']
Integrability,"/**************************************************************************/; // Bounding-boxes; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Update bounding-boxed of all dependent physicals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLogicalShape.cxx:290,depend,dependent,290,graf3d/gl/src/TGLLogicalShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLogicalShape.cxx,1,['depend'],['dependent']
Integrability,"/**************************************************************************/; // SceneInfo update / check; /**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Force rebuild of view-dependent scene-info structures.; ///; /// This should be called before calling render (draw/select) if; /// something that affects camera interest has been changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx:293,depend,dependent,293,graf3d/gl/src/TGLViewerBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx,1,['depend'],['dependent']
Integrability,"/**************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// Name printed on locking info messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:193,message,messages,193,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,1,['message'],['messages']
Integrability,/*************************************************************************. THnBase: Common base class for n-dimensional histogramming.; Defines interfaces and algorithms. *************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnBase.h:145,interface,interfaces,145,hist/hist/inc/THnBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnBase.h,1,['interface'],['interfaces']
Integrability,/*************************************************************************/; /* Below are LLVM-specific wrappers of the functions above. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:104,wrap,wrappers,104,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['wrap'],['wrappers']
Integrability,/*************************************************************************/; /* low level routines ****************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c:90,rout,routines,90,graf2d/asimage/src/libAfterImage/imencdec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.c,1,['rout'],['routines']
Integrability,/*************************************************************************; * High level xpm reading interface ;; *************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xpm.c:101,interface,interface,101,graf2d/asimage/src/libAfterImage/xpm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xpm.c,2,['interface'],['interface']
Integrability,"/***********************************************************************; * *; * Name: GIFencode Date: 02.10.92 *; * Author: E.Chernyaev (IHEP/Protvino) Revised: *; * *; * Function: GIF compression of the image *; * *; * Input: Width - image width (must be >= 8) *; * Height - image height (must be >= 8) *; * Ncol - number of colors *; * R[] - red components *; * G[] - green components *; * B[] - blue components *; * ScLine[] - array for scan line (byte per pixel) *; * get_scline - user routine to read scan line: *; * get_scline(y, Width, ScLine) *; * pb - user routine for ""put_byte"": pb(b) *; * *; * Return: size of GIF *; * *; ***********************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifencode.c:491,rout,routine,491,graf2d/win32gdk/src/gifencode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifencode.c,4,['rout'],['routine']
Integrability,/*********************************************************************; *; * Utility routines; *; *********************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:85,rout,routines,85,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['rout'],['routines']
Integrability,"/************************************************************. Copyright 1989, 1998 The Open Group. Permission to use, copy, modify, distribute, and sell this software and its; documentation for any purpose is hereby granted without fee, provided that; the above copyright notice appear in all copies and that both that; copyright notice and this permission notice appear in supporting; documentation. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of The Open Group shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from The Open Group. ********************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shapeconst.h:846,CONTRACT,CONTRACT,846,graf2d/x11/inc/X11/extensions/shapeconst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shapeconst.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/******************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsArg; \ingroup Roofitcore. Common abstract base class for objects that; represent a value and a ""shape"" in RooFit. Values or shapes usually depend on values; or shapes of other RooAbsArg instances. Connecting several RooAbsArg in; a computation graph models an expression tree that can be evaluated. ### Building a computation graph of RooFit objects; Therefore, RooAbsArg provides functionality to connect objects of type RooAbsArg into; a computation graph to pass values between those objects.; A value can e.g. be a real-valued number, (instances of RooAbsReal), or an integer, that is,; category index (instances of RooAbsCategory). The third subclass of RooAbsArg is RooStringVar,; but it is rarely used. The ""shapes"" that a RooAbsArg can possess can e.g. be the definition; range of an observable, or how many states a category object has. In computations,; values are expected to change often, while shapes remain mostly constant; (unless e.g. a new range is set for an observable). Nodes of a computation graph are connected using instances of RooAbsProxy.; If Node B declares a member `RooTemplateProxy<TypeOfNodeA>`, Node A will be; registered as a server of values to Node B, and Node B will know that it is; a client of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:908,depend,depend,908,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['depend']
Integrability,/***************************************************; * Deprecated Functions; ***************************************************/; /* These functions currently generate deprecation warnings */; /* Wrappers for deprecated compression functions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:198,Wrap,Wrappers,198,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['Wrap'],['Wrappers']
Integrability,"/********/; /****f* libAfterImage/asimage/start_image_decoding(); * NAME; * start_image_decoding() - allocates and initializes decoder structure.; * SYNOPSIS; * ASImageDecoder *start_image_decoding( ASVisual *asv,ASImage *im,; * ASFlagType filter,; * int offset_x, int offset_y,; * unsigned int out_width,; * unsigned int out_height,; * ASImageBevel *bevel );; * INPUTS; * asv - pointer to valid ASVisual structure ( needed mostly; * 			to see if we are in BGR mode or not );; * im - ASImage we are going to decode;; * filter - bitmask where set bits mark channels that has to be; * 			decoded.; * offset_x - left margin inside im, from which we should start; * 			reading pixel data, effectively clipping source image.; * offset_y - top margin inside im, from which we should start; * 			reading scanlines, effectively clipping source image.; * 			Note that when edge of the image is reached,; * 			subsequent requests for scanlines will wrap around to; * 			the top of the image, and not offset_y.; * out_width- width of the scanline needed. If it is larger then; * 			source image - then image data will be tiled in it.; * 			If it is smaller - then image data will be clipped.; * out_height - height of the output drawable. -1 means that same as; * image height. if out_height is greater then image height,; * then image will be tiled.; * bevel - NULL or pointer to valid ASImageBevel structure if; * 			decoded data should be overlayed with bevel at the; * 			time of decoding.; * RETURN VALUE; * start_image_decoding() returns pointer to newly allocated; * ASImageDecoder structure on success, NULL on failure.; * DESCRIPTION; * Normal process of reading image data from ASImage consists of; * 3 steps :; * 1) start decoding by calling start_image_decoding.; * 2) call decode_image_scanline() method of returned structure, for; * each scanline upto desired height of the target image. Decoded data; * will be returned in buffer member of the ASImageDecoder structure.; * 3) finish decoding and d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:939,wrap,wrap,939,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['wrap'],['wrap']
Integrability,/*******/; /****s* libAfterImage/ASImageExportParams; * NAME; * ASImageExportParams - union of structures holding parameters for; * export into different file formats.; * DESCRIPTION; * Treatment of this union depends on what type of export was requested.; * SEE ALSO; * ASImageFileTypes; * SOURCE; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.h:210,depend,depends,210,graf2d/asimage/src/libAfterImage/export.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.h,1,['depend'],['depends']
Integrability,"/****f* libAfterImage/asfont/open_freetype_font(); * NAME; * open_freetype_font(); * SYNOPSIS; * ASFont *open_freetype_font( ASFontManager *fontman,; * const char *font_string,; * int face_no,; * int size, Bool verbose);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, as well as path to; * search fonts in.; * font_string - filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * verbose - if True, extensive error messages will be printed if; * problems encountered.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_freetype_font() will attempt to find font file in any of the; * directories specified in ASFontManager's font_path. If it fails to do; * so - then it will check if filename has alldigit extentions. It will; * then try to interpret that extention as a face number, and try and; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:610,message,messages,610,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['message'],['messages']
Integrability,"/****h* libAfterImage/import.h; * NAME; * import - Image file format autodetection, reading and decoding ; * routines.; * SEE ALSO; * Functions :; * 		file2ASImage(), get_asimage(), file2pixmap(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; ******************/; /****d* libAfterImage/gamma; * NAME; * SCREEN_GAMMA - Defines default value for screen gamma correction.; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h:109,rout,routines,109,graf2d/asimage/src/libAfterImage/import.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h,1,['rout'],['routines']
Integrability,"/**. ASTNodeTraverser traverses the Clang AST for dumping purposes. The `Derived::doGetNodeDelegate()` method is required to be an accessible member; which returns a reference of type `NodeDelegateType &` which implements the; following interface:. struct {; template <typename Fn> void AddChild(Fn DoAddChild);; template <typename Fn> void AddChild(StringRef Label, Fn DoAddChild);. void Visit(const comments::Comment *C, const comments::FullComment *FC);; void Visit(const Attr *A);; void Visit(const TemplateArgument &TA, SourceRange R = {},; const Decl *From = nullptr, StringRef Label = {});; void Visit(const Stmt *Node);; void Visit(const Type *T);; void Visit(QualType T);; void Visit(const Decl *D);; void Visit(const CXXCtorInitializer *Init);; void Visit(const OMPClause *C);; void Visit(const BlockDecl::Capture &C);; void Visit(const GenericSelectionExpr::ConstAssociation &A);; void Visit(const concepts::Requirement *R);; void Visit(const APValue &Value, QualType Ty);; };; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h:237,interface,interface,237,interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,1,['interface'],['interface']
Integrability,/**. Class the member function calculating the Minimum and verifies the result; depending on the strategy. @param fMnFcn the function to be minimized. @param fGradienCalculator not used in Fumili. @param fMinimumSeed the seed generator. @param fMnStrategy the strategy describing the number of function calls; allowed for Gradient calculations. @param maxfcn maximum number of function calls after which the calculation; will be stopped even if it has not yet converged. @param edmval expected vertical distance to the Minimum. @return Returns the function Minimum found. \todo Complete the documentation by understanding what is the reason to; have two Minimum methods. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliBuilder.h:80,depend,depending,80,math/minuit2/inc/Minuit2/FumiliBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliBuilder.h,1,['depend'],['depending']
Integrability,"/**. Computes the spherical (normalized) associated Legendre polynomials,; or spherical harmonic without azimuthal dependence (\f$e^(im\phi)\f$). \f[ Y_l^m(theta,0) = \sqrt{(2l+1)/(4\pi)} \sqrt{(l-m)!/(l+m)!} P_l^m(cos \theta) \f]. for \f$m \geq 0, l \geq m\f$,; where the Condon-Shortley phase \f$(-1)^m\f$ is included in P_l^m(x); This function is consistent with both C++0x and GSL,; even though there is a discrepancy in where to include the phase.; There is no reference in Abramowitz and Stegun. @ingroup SpecFunc. */; // [5.2.1.22] spherical associated Legendre functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h:115,depend,dependence,115,math/mathmore/inc/Math/SpecFuncMathMore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h,1,['depend'],['dependence']
Integrability,/**. NumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting.; It should probably support simple cuts as well. \ingroup Roostats; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NumEventsTestStat.h:71,interface,interface,71,roofit/roostats/inc/RooStats/NumEventsTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NumEventsTestStat.h,1,['interface'],['interface']
Integrability,"/**. \class TLinearFitter. \note An alternative to this class is to use ROOT::Fit::Fitter, calling the LinearFit() method. \ingroup MinuitOld. The Linear Fitter - For fitting functions that are LINEAR IN PARAMETERS. ## The Linear Fitter. Linear fitter is used to fit a set of data points with a linear; combination of specified functions. Note, that ""linear"" in the name; stands only for the model dependency on parameters, the specified; functions can be nonlinear.; The general form of this kind of model is; ~~~~; y(x) = a[0] + a[1]*f[1](x)+...a[n]*f[n](x); ~~~~. Functions f are fixed functions of x. For example, fitting with a; polynomial is linear fitting in this sense. ### Introduction. #### The fitting method. The fit is performed using the Normal Equations method with Cholesky; decomposition. #### Why should it be used?. The linear fitter is considerably faster than general non-linear; fitters and doesn't require to set the initial values of parameters. ### Using the fitter:. ### 1.Adding the data points:. #### 1.1 To store or not to store the input data?; - There are 2 options in the constructor - to store or not; store the input data. The advantages of storing the data; are that you'll be able to reset the fitting model without; adding all the points again, and that for very large sets; of points the chisquare is calculated more precisely.; The obvious disadvantage is the amount of memory used to; keep all the points.; - Before you start adding the points, you can change the; store/not store option by StoreData() method. #### 1.2 The data can be added:; - simply point by point - AddPoint() method; - an array of points at once:; If the data is already stored in some arrays, this data; can be assigned to the linear fitter without physically; coping bytes, thanks to the Use() method of; TVector and TMatrix classes - AssignData() method. ### 2.Setting the formula. #### 2.1 The linear formula syntax:; -Additive parts are separated by 2 plus signs ""++""; --for example """,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:398,depend,dependency,398,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['depend'],['dependency']
Integrability,"/**. \class TUnuran; \ingroup Unuran. TUnuran class.; Interface to the UNU.RAN package for generating non uniform random; numbers. This class wraps the UNU.RAN calls in C++ methods.; It provides methods for initializing Unuran and then to sample the; desired distribution.; It provides support for initializing UNU.RAN in these following way (various signatures; for TUnuran::Init); - with string API via TUnuran::Init passing the distribution type and the method; - using a one-dimensional distribution object defined by TUnuranContDist; - using a multi-dimensional distribution object defined by TUnuranMultiContDist; - using a discrete one-dimensional distribution object defined by TUnuranDiscrDist; - using an empirical distribution defined by TUnuranEmpDist; - using pre-defined distributions. Presently only support for Poisson (TUnuran::InitPoisson); and Binomial (TUnuran::InitBinomial) are provided. Other distributions can however be generated; using the previous methods (in particular via the string API). The sampling is provided via these methods:; - TUnuran::Sample() returns a double for all one-dimensional distribution; - TUnuran::SampleDiscr() returns an integer for one-dimensional discrete distribution; - TUnuran::Sample(double *) sample a multi-dimensional distribution. A pointer to a vector with; size at least equal to the distribution dimension must be passed. In addition is possible to set the random number generator in the constructor of the class, its seed; via the TUnuran::SetSeed() method.; */; //class TUnuranGenerator;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:54,Interface,Interface,54,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,2,"['Interface', 'wrap']","['Interface', 'wraps']"
Integrability,/**. template wrapped class for adapting to FCNBase signature a IGradFunction. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNGradAdapter.h:14,wrap,wrapped,14,math/minuit2/inc/Minuit2/FCNGradAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNGradAdapter.h,1,['wrap'],['wrapped']
Integrability,/**. template wrapped class for adapting to FCNBase signature. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNAdapter.h:14,wrap,wrapped,14,math/minuit2/inc/Minuit2/FCNAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNAdapter.h,1,['wrap'],['wrapped']
Integrability,/**. template wrapped class for adapting to FumiliFCNBase signature. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNAdapter.h:14,wrap,wrapped,14,math/minuit2/inc/Minuit2/FumiliFCNAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNAdapter.h,1,['wrap'],['wrapped']
Integrability,"/**; 	 * Creates a panel that holds controllers.; 	 * @example; 	 * new GUI();; 	 * new GUI( { container: document.getElementById( 'custom' ) } );; 	 *; 	 * @param {object} [options]; 	 * @param {boolean} [options.autoPlace=true]; 	 * Adds the GUI to `document.body` and fixes it to the top right of the page.; 	 *; 	 * @param {HTMLElement} [options.container]; 	 * Adds the GUI to this DOM element. Overrides `autoPlace`.; 	 *; 	 * @param {number} [options.width=245]; 	 * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make; 	 * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`.; 	 *; 	 * @param {string} [options.title=Controls]; 	 * Name to display in the title bar.; 	 *; 	 * @param {boolean} [options.closeFolders=false]; 	 * Pass `true` to close all folders in this GUI by default.; 	 *; 	 * @param {boolean} [options.injectStyles=true]; 	 * Injects the default stylesheet into the page if this is the first GUI.; 	 * Pass `false` to use your own stylesheet.; 	 *; 	 * @param {number} [options.touchStyles=true]; 	 * Makes controllers larger on touch devices. Pass `false` to disable touch styles.; 	 *; 	 * @param {GUI} [options.parent]; 	 * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.; 	 *; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:884,inject,injectStyles,884,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['Inject', 'inject']","['Injects', 'injectStyles']"
Integrability,"/**; * (Optional; inheritable) The field’s value, whose format varies depending on the field type. See the descriptions of individual field types for further information.; *; * @name AcroFormField#value; * @default null; * @type {any}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:70,depend,depending,70,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depending']
Integrability,/**; * @brief Constructs a LineWrapper that wraps its output to fit into; * screen columns @c x1 (incl.) to @c x2 (excl.).; *; * @c x1 gives the indentation LineWrapper uses if it needs to indent.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:44,wrap,wraps,44,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wraps']
Integrability,/**; * @brief Import a function from a JSON string into the workspace.; *; * This function imports a function from the provided JSON string into the workspace.; * The function's information is read from the JSON string and added to the workspace.; *; * @param jsonString The JSON string containing the function information.; * @param importAllDependants A boolean flag indicating whether to import all dependants (servers) of the function.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:402,depend,dependants,402,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['depend'],['dependants']
Integrability,/**; * @brief Import a function from the JSONNode into the workspace.; *; * This function imports a function from the given JSONNode into the workspace.; * The function's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the function to be imported.; * @param importAllDependants A boolean flag indicating whether to import all dependants (servers) of the function.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:385,depend,dependants,385,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['depend'],['dependants']
Integrability,/**; * @brief Import all dependants (servers) of a node into the workspace.; *; * This function imports all the dependants (servers) of the given JSONNode into the workspace.; * The dependants' information is read from the JSONNode and added to the workspace.; *; * @param n The JSONNode representing the node whose dependants are to be imported.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:25,depend,dependants,25,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,4,['depend'],['dependants']
Integrability,"/**; * @brief Number of elements needed for an @c options[] array to be used for; * @ref Parser::parse() ""parsing"" the same argument vectors that were fed; * into this Stats object.; *; * @note; * @li This number is always 1 greater than the actual number needed, to give; * you a sentinel element.; * @li This number depends only on the @c usage, not the argument vectors, because; * the @c options array needs exactly one slot for each possible Descriptor::index.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:318,depend,depends,318,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['depend'],['depends']
Integrability,"/**; * @brief Outputs a nicely formatted usage string with support for multi-column formatting; * and line-wrapping.; *; * printUsage() takes the @c help texts of a Descriptor[] array and formats them into; * a usage message, wrapping lines to achieve the desired output width.; *; * <b>Table formatting:</b>; *; * Aside from plain strings which are simply line-wrapped, the usage may contain tables. Tables; * are used to align elements in the output.; *; * @code; * // Without a table. The explanatory texts are not aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; *; * // With table formatting. The explanatory texts are aligned.; * -c, --create |Creates something.; * -k, --kill |Destroys something.; * @endcode; *; * Table formatting removes the need to pad help texts manually with spaces to achieve; * alignment. To create a table, simply insert \\t (tab) characters to separate the cells; * within a row.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""-k, --kill \tDestroys something."" }, ...; * @endcode; *; * Note that you must include the minimum amount of space desired between cells yourself.; * Table formatting will insert further spaces as needed to achieve alignment.; *; * You can insert line breaks within cells by using \\v (vertical tab).; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c,\v--create \tCreates\vsomething."" },; * {..., ""-k,\v--kill \tDestroys\vsomething."" }, ...; *; * // results in; *; * -c, Creates; * --create something.; * -k, Destroys; * --kill something.; * @endcode; *; * You can mix lines that do not use \\t or \\v with those that do. The plain; * lines will not mess up the table layout. Alignment of the table columns will; * be maintained even across these interjections.; *; * @code; * const option::Descriptor usage[] = {; * {..., ""-c, --create \tCreates something."" },; * {..., ""----------------------------------"" },; * {..., ""-k, --kill ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:107,wrap,wrapping,107,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,4,"['message', 'wrap']","['message', 'wrapped', 'wrapping']"
Integrability,"/**; * @brief Process, wrap and output the next piece of data.; *; * process() will output at least one line of output. This is not necessarily; * the @c data passed in. It may be data queued from a prior call to process().; * If the internal buffer is full, more than 1 line will be output.; *; * process() assumes that the a proper amount of indentation has already been; * output. It won't write any further indentation before the 1st line. If; * more than 1 line is written due to buffer constraints, the lines following; * the first will be indented by this method, though.; *; * No \\n is written by this method after the last line that is written.; *; * @param write where to write the data.; * @param data the new chunk of data to write.; * @param len the length of the chunk of data to write.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:23,wrap,wrap,23,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrap']
Integrability,/**; * @brief Returns a pointer to the next element of the linked list with wrap-around from; * last() to first().; *; * If called on last() this method returns first(). Otherwise it will return the; * option with the same Descriptor::index that follows this option on the command; * line.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:76,wrap,wrap-around,76,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrap-around']
Integrability,/**; * @brief Returns a pointer to the previous element of the linked list with wrap-around from; * first() to last().; *; * If called on first() this method returns last(). Otherwise it will return the; * option with the same Descriptor::index that precedes this option on the command; * line.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:80,wrap,wrap-around,80,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrap-around']
Integrability,"/**; * @brief Signature of functions that check if an argument is valid for a certain type of option.; *; * Every Option has such a function assigned in its Descriptor.; * @code; * Descriptor usage[] = { {UNKNOWN, 0, """", """", Arg::None, """"}, ... };; * @endcode; *; * A CheckArg function has the following signature:; * @code ArgStatus CheckArg(const Option& option, bool msg); @endcode; *; * It is used to check if a potential argument would be acceptable for the option.; * It will even be called if there is no argument. In that case @c option.arg will be @c NULL.; *; * If @c msg is @c true and the function determines that an argument is not acceptable and; * that this is a fatal error, it should output a message to the user before; * returning @ref ARG_ILLEGAL. If @c msg is @c false the function should remain silent (or you; * will get duplicate messages).; *; * See @ref ArgStatus for the meaning of the return values.; *; * While you can provide your own functions,; * often the following pre-defined checks (which never return @ref ARG_ILLEGAL) will suffice:; *; * @li @c Arg::None @copybrief Arg::None; * @li @c Arg::Optional @copybrief Arg::Optional; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:710,message,message,710,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,['message'],"['message', 'messages']"
Integrability,"/**; * @brief The name of the option as used on the command line.; *; * The main purpose of this string is to be presented to the user in messages.; *; * In the case of a long option, this is the actual @c argv pointer, i.e. the first; * character is a '-'. In the case of a short option this points to the option; * character within the @c argv string.; *; * Note that in the case of a short option group or an attached option argument, this; * string will contain additional characters following the actual name. Use @ref namelen; * to filter out the actual option name only.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:138,message,messages,138,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['message'],['messages']
Integrability,"/**; * @brief The usage text associated with the options in this Descriptor.; *; * You can use option::printUsage() to format your usage message based on; * the @c help texts. You can use dummy Descriptors where; * @ref shortopt and @ref longopt are both the empty string to add text to; * the usage that is not related to a specific option.; *; * See option::printUsage() for special formatting characters you can use in; * @c help to get a column layout.; *; * @attention; * Must be UTF-8-encoded. If your compiler supports C++11 you can use the ""u8""; * prefix to make sure string literals are properly encoded.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:137,message,message,137,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['message'],['message']
Integrability,/**; * @brief The width of the column to line wrap.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:46,wrap,wrap,46,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrap']
Integrability,/**; * @brief Writes a warning message to the RooFit message service.; *; * @param str The warning message to be logged.; * @return std::ostream& A reference to the output stream.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:31,message,message,31,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,3,['message'],['message']
Integrability,/**; * @brief Writes an error message to the RooFit message service and throws a runtime_error.; *; * @param s The error message to be logged and thrown.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:30,message,message,30,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,3,['message'],['message']
Integrability,/**; * @class Canvas; * @classdesc A Canvas Wrapper for jsPDF; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:44,Wrap,Wrapper,44,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Wrap'],['Wrapper']
Integrability,"/**; * @defgroup LLVMC LLVM-C: C interface to LLVM; *; * This module exposes parts of the LLVM library as a C API.; *; * @{; */; /**; * @defgroup LLVMCTransforms Transforms; */; /**; * @defgroup LLVMCCore Core; *; * This modules provide an interface to libLLVMCore, which implements; * the LLVM intermediate representation as well as other related types; * and utilities.; *; * Many exotic languages can interoperate with C code but have a harder time; * with C++ due to name mangling. So in addition to C, this interface enables; * tools written in such languages.; *; * @{; */; /**; * @defgroup LLVMCCoreTypes Types and Enumerations; *; * @{; */; /// External users depend on the following values being stable. It is not safe; /// to reorder them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:33,interface,interface,33,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,4,"['depend', 'interface']","['depend', 'interface']"
Integrability,"/**; * @defgroup LLVMCBitReader Bit Reader; * @ingroup LLVMC; *; * @{; */; /* Builds a module from the bitcode in the specified memory buffer, returning a; reference to the module via the OutModule parameter. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. This is deprecated. Use LLVMParseBitcode2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h:274,message,message,274,interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,1,['message'],['message']
Integrability,/**; * @defgroup LLVMCObject Object file reading and writing; * @ingroup LLVMC; *; * @{; */; // Opaque type wrappers,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:108,wrap,wrappers,108,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,1,['wrap'],['wrappers']
Integrability,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:362,interface,interface,362,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,4,"['depend', 'interface', 'message', 'wrap']","['dependencies', 'interface', 'message', 'wrapping']"
Integrability,/**; * @internal; * @brief Interface for Functors that write (part of) a string somewhere.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:27,Interface,Interface,27,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['Interface'],['Interface']
Integrability,/**; * @internal; * @brief Interface for actions Parser::workhorse() should perform for each Option it; * parses.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:27,Interface,Interface,27,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['Interface'],['Interface']
Integrability,"/**; * @internal; * @brief Splits a @c Descriptor[] array into tables, rows, lines and columns and; * iterates over these components.; *; * The top-level organizational unit is the @e table.; * A table begins at a Descriptor with @c help!=NULL and extends up to; * a Descriptor with @c help==NULL.; *; * A table consists of @e rows. Due to line-wrapping and explicit breaks; * a row may take multiple lines on screen. Rows within the table are separated; * by \\n. They never cross Descriptor boundaries. This means a row ends either; * at \\n or the 0 at the end of the help string.; *; * A row consists of columns/cells. Columns/cells within a row are separated by \\t.; * Line breaks within a cell are marked by \\v.; *; * Rows in the same table need not have the same number of columns/cells. The; * extreme case are interjections, which are rows that contain neither \\t nor \\v.; * These are NOT treated specially by LinePartIterator, but they are treated; * specially by printUsage().; *; * LinePartIterator iterates through the usage at 3 levels: table, row and part.; * Tables and rows are as described above. A @e part is a line within a cell.; * LinePartIterator iterates through 1st parts of all cells, then through the 2nd; * parts of all cells (if any),... @n; * Example: The row <code> ""1 \v 3 \t 2 \v 4"" </code> has 2 cells/columns and 4 parts.; * The parts will be returned in the order 1, 2, 3, 4.; *; * It is possible that some cells have fewer parts than others. In this case; * LinePartIterator will ""fill up"" these cells with 0-length parts. IOW, LinePartIterator; * always returns the same number of parts for each column. Note that this is different; * from the way rows and columns are handled. LinePartIterator does @e not guarantee that; * the same number of columns will be returned for each row.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:345,wrap,wrapping,345,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrapping']
Integrability,"/**; * @internal; * @brief Takes input and line wraps it, writing out one line at a time so that; * it can be interleaved with output from other columns.; *; * The LineWrapper is used to handle the last column of each table as well as interjections.; * The LineWrapper is called once for each line of output. If the data given to it fits; * into the designated width of the last column it is simply written out. If there; * is too much data, an appropriate split point is located and only the data up to this; * split point is written out. The rest of the data is queued for the next line.; * That way the last column can be line wrapped and interleaved with data from; * other columns. The following example makes this clearer:; * @code; * Column 1,1 Column 2,1 This is a long text; * Column 1,2 Column 2,2 that does not fit into; * a single line.; * @endcode; *; * The difficulty in producing this output is that the whole string; * ""This is a long text that does not fit into a single line"" is the; * 1st and only part of column 3. In order to produce the above; * output the string must be output piecemeal, interleaved with; * the data from the other columns.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:48,wrap,wraps,48,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,['wrap'],"['wrapped', 'wraps']"
Integrability,"/**; * @license; * (c) Dean McNamee <dean@gmail.com>, 2013.; *; * https://github.com/deanm/omggif; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to; * deal in the Software without restriction, including without limitation the; * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or; * sell copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING; * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS; * IN THE SOFTWARE.; *; * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,; * including animation and compression. It does not rely on any specific; * underlying system, so should run in the browser, Node, or Plask.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1036,CONTRACT,CONTRACT,1036,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF total_pages plugin; * @name total_pages; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1103,CONTRACT,CONTRACT,1103,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com; * 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br; * 2013 Lee Driscoll, https://github.com/lsdriscoll; * 2014 Juan Pablo Gaviria, https://github.com/juanpgaviria; * 2014 James Hall, james@parall.ax; * 2014 Diego Casorran, https://github.com/diegocr; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1351,CONTRACT,CONTRACT,1351,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com; * 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br; * 2013 Lee Driscoll, https://github.com/lsdriscoll; * 2014 Juan Pablo Gaviria, https://github.com/juanpgaviria; * 2014 James Hall, james@parall.ax; * 2014 Diego Casorran, https://github.com/diegocr; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @name cell; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1351,CONTRACT,CONTRACT,1351,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF JavaScript plugin; *; * @name javascript; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1095,CONTRACT,CONTRACT,1095,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; *; * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF PNG PlugIn; * @name png_support; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1027,CONTRACT,CONTRACT,1027,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; *; * Copyright (c) 2021 Antti Palola, https://github.com/Pantura; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF RGBA array PlugIn; * @name rgba_support; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1026,CONTRACT,CONTRACT,1026,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; Copyright (c) 2008, Adobe Systems Incorporated; All rights reserved. Redistribution and use in source and binary forms, with or without ; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright notice, ; this list of conditions and the following disclaimer.; ; * Redistributions in binary form must reproduce the above copyright; notice, this list of conditions and the following disclaimer in the ; documentation and/or other materials provided with the distribution.; ; * Neither the name of Adobe Systems Incorporated nor the names of its ; contributors may be used to endorse or promote products derived from ; this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS; IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR ; CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1365,CONTRACT,CONTRACT,1365,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"/**; * @license; Copyright (c) 2008, Adobe Systems Incorporated; All rights reserved. Redistribution and use in source and binary forms, with or without ; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright notice, ; this list of conditions and the following disclaimer.; ; * Redistributions in binary form must reproduce the above copyright; notice, this list of conditions and the following disclaimer in the ; documentation and/or other materials provided with the distribution.; ; * Neither the name of Adobe Systems Incorporated nor the names of its ; contributors may be used to endorse or promote products derived from ; this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS; IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR ; CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; */; /*; JPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009. Basic GUI blocking jpeg encoder; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1365,CONTRACT,CONTRACT,1365,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,/**; * @summary Abstract interactive control interface for 3D objects; *; * @abstract; * @private; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:45,interface,interface,45,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['interface'],['interface']
Integrability,/**; * @summary Base class to manage multiple document interface for drawings; *; * @private; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:55,interface,interface,55,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['interface'],['interface']
Integrability,/**; * @} // endgoup LLVMCLTO; * @defgroup LLVMCTLTO ThinLTO; * @ingroup LLVMC; *; * @{; */; /**; * Type to wrap a single object returned by ThinLTO.; *; * \since LTO_API_VERSION=18; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:108,wrap,wrap,108,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['wrap'],['wrap']
Integrability,"/**; * @}; */; /**; * @}; */; /**; * @defgroup LLVMCCoreValues Values; *; * The bulk of LLVM's object model consists of values, which comprise a very; * rich type hierarchy.; *; * LLVMValueRef essentially represents llvm::Value. There is a rich; * hierarchy of classes within this type. Depending on the instance; * obtained, not all APIs are available.; *; * Callers can determine the type of an LLVMValueRef by calling the; * LLVMIsA* family of functions (e.g. LLVMIsAArgument()). These; * functions are defined by a macro, so it isn't obvious which are; * available by looking at the Doxygen source code. Instead, look at the; * source definition of LLVM_FOR_EACH_VALUE_SUBCLASS and note the list; * of value names given. These value names also correspond to classes in; * the llvm::Value hierarchy.; *; * @{; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:287,Depend,Depending,287,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['Depend'],['Depending']
Integrability,/**; * @}; */; /**; * @}; */; /**; * @}; */; /**; * @defgroup LLVMCCoreInstructionBuilder Instruction Builders; *; * An instruction builder represents a point within a basic block and is; * the exclusive means of building instructions using the C interface.; *; * @{; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:247,interface,interface,247,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['interface'],['interface']
Integrability,"/**; * @}; */; /**; * \defgroup CINDEX_CODE_COMPLET Code completion; *; * Code completion involves taking an (incomplete) source file, along with; * knowledge of where the user is actively editing that file, and suggesting; * syntactically- and semantically-valid constructs that the user might want to; * use at that particular point in the source code. These data structures and; * routines provide support for code completion.; *; * @{; */; /**; * A semantic string that describes a code-completion result.; *; * A semantic string that describes the formatting of a code-completion; * result as a single ""template"" of text that should be inserted into the; * source buffer when a particular code-completion result is selected.; * Each semantic string is made up of some number of ""chunks"", each of which; * contains some text along with a description of what that text means, e.g.,; * the name of the entity being referenced, whether the text chunk is part of; * the template, or whether it is a ""placeholder"" that the user should replace; * with actual code,of a specific kind. See \c CXCompletionChunkKind for a; * description of the different kinds of chunks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:384,rout,routines,384,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,/**; * @}; */; /**; * \defgroup CINDEX_CPP C++ AST introspection; *; * The routines in this group provide access information in the ASTs specific; * to C++ language features.; *; * @{; */; /**; * Determine if a C++ constructor is a converting constructor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:75,rout,routines,75,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * @}; */; /**; * \defgroup CINDEX_CURSOR_SOURCE Mapping between cursors and source code; *; * Cursors represent a location within the Abstract Syntax Tree (AST). These; * routines help map between cursors and the physical locations where the; * described entities occur in the source code. The mapping is provided in; * both directions, so one can map from source code to the AST and back.; *; * @{; */; /**; * Map a source location to the cursor that describes the entity at that; * location in the source code.; *; * clang_getCursor() maps an arbitrary source location within a translation; * unit down to the most specific cursor that describes the entity at that; * location. For example, given an expression \c x + y, invoking; * clang_getCursor() with a source location pointing to ""x"" will return the; * cursor for ""x""; similarly for ""y"". If the cursor points anywhere between; * ""x"" or ""y"" (e.g., on the + or the whitespace around it), clang_getCursor(); * will return a cursor referring to the ""+"" expression.; *; * \returns a cursor representing the entity at the given source location, or; * a NULL cursor if no such entity can be found.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:176,rout,routines,176,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,/**; * @}; */; /**; * \defgroup CINDEX_CURSOR_TRAVERSAL Traversing the AST with cursors; *; * These routines provide the ability to traverse the abstract syntax tree; * using cursors.; *; * @{; */; /**; * Describes how the traversal of the children of a particular; * cursor should proceed after visiting a particular child cursor.; *; * A value of this enumeration type should be returned by each; * \c CXCursorVisitor to indicate how clang_visitChildren() proceed.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:100,rout,routines,100,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * @}; */; /**; * \defgroup CINDEX_CURSOR_XREF Cross-referencing in the AST; *; * These routines provide the ability to determine references within and; * across translation units, by providing the names of the entities referenced; * by cursors, follow reference cursors to the declarations they reference,; * and associate declarations with their definitions.; *; * @{; */; /**; * Retrieve a Unified Symbol Resolution (USR) for the entity referenced; * by the given cursor.; *; * A Unified Symbol Resolution (USR) is a string that identifies a particular; * entity (function, class, variable, etc.) within a program. USRs can be; * compared across translation units to determine, e.g., when references in; * one translation refer to an entity defined in another translation unit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:92,rout,routines,92,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * @}; */; /**; * \defgroup CINDEX_DEBUG Debugging facilities; *; * These routines are used for testing and debugging, only, and should not; * be relied upon.; *; * @{; */; /* for debug/testing */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:78,rout,routines,78,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * @}; */; /**; * \defgroup CINDEX_LEX Token extraction and manipulation; *; * The routines in this group provide access to the tokens within a; * translation unit, along with a semantic mapping of those tokens to; * their corresponding cursors.; *; * @{; */; /**; * Describes a kind of token.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:87,rout,routines,87,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,/**; * A MaterializationUnit materialize callback.; *; * Ownership of the Ctx and MR arguments passes to the callback which must; * adhere to the LLVMOrcMaterializationResponsibilityRef contract (see comment; * for that type).; *; * If this callback is called then the LLVMOrcMaterializationUnitDestroy; * callback will NOT be called.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:186,contract,contract,186,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['contract'],['contract']
Integrability,"/**; * A command that has zero or more word-like arguments (number of; * word-like arguments depends on command name) and a paragraph as an; * argument. Block command is block content.; *; * Paragraph argument is also a child of the block command.; *; * For example: \has 0 word-like arguments and a paragraph argument.; *; * AST nodes of special kinds that parser knows about (e. g., \\param; * command) have their own node kinds.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h:93,depend,depends,93,interpreter/llvm-project/clang/include/clang-c/Documentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h,1,['depend'],['depends']
Integrability,"/**; * A reference to a set of overloaded functions or function templates; * that has not yet been resolved to a specific function or function template.; *; * An overloaded declaration reference cursor occurs in C++ templates where; * a dependent name refers to a function. For example:; *; * \code; * template<typename T> void swap(T&, T&);; *; * struct X { ... };; * void swap(X&, X&);; *; * template<typename T>; * void reverse(T* first, T* last) {; * while (first < last - 1) {; * swap(*first, *--last);; * ++first;; * }; * }; *; * struct Y { };; * void swap(Y&, Y&);; * \endcode; *; * Here, the identifier ""swap"" is associated with an overloaded declaration; * reference. In the template definition, ""swap"" refers to either of the two; * ""swap"" functions declared above, so both results will be available. At; * instantiation time, ""swap"" may also refer to other functions found via; * argument-dependent lookup (e.g., the ""swap"" function at the end of the; * example).; *; * The functions \c clang_getNumOverloadedDecls() and; * \c clang_getOverloadedDecl() can be used to retrieve the definitions; * referenced by this cursor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:237,depend,dependent,237,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['depend'],['dependent']
Integrability,"/**; * A statement whose specific kind is not exposed via this; * interface.; *; * Unexposed statements have the same operations as any other kind of; * statement; one can extract their location information, spelling,; * children, etc. However, the specific kind of the statement is not; * reported.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:66,interface,interface,66,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,/**; * A type whose specific kind is not exposed via this; * interface.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:61,interface,interface,61,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,/**; * Add a target-dependent attribute to a function; * @see llvm::AttrBuilder::addAttribute(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:20,depend,dependent,20,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['depend'],['dependent']
Integrability,"/**; * Adds dependencies to a symbol that the MaterializationResponsibility is; * responsible for.; *; * This function takes ownership of Dependencies struct. The Names; * array have been retained for this function. This allows the following; * pattern...; *; * LLVMOrcSymbolStringPoolEntryRef Names[] = {...};; * LLVMOrcCDependenceMapPair Dependence = {JD, {Names, sizeof(Names)}}; * LLVMOrcMaterializationResponsibilityAddDependencies(JD, Name, &Dependence,; * 1);; *; * ... without requiring cleanup of the elements of the Names array afterwards.; *; * The client is still responsible for deleting the Dependencies.Names array; * itself.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:12,depend,dependencies,12,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,5,"['Depend', 'depend']","['Dependence', 'Dependencies', 'dependencies']"
Integrability,/**; * Adds dependencies to all symbols that the MaterializationResponsibility is; * responsible for. See LLVMOrcMaterializationResponsibilityAddDependencies for; * notes about memory responsibility.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:12,depend,dependencies,12,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['depend'],['dependencies']
Integrability,/**; * An RAII wrapper around an open temporary file on disk. It cleans up the guarded file when the wrapper object; * goes out of scope.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/test/io_test.hxx:15,wrap,wrapper,15,io/io/test/io_test.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/test/io_test.hxx,4,['wrap'],['wrapper']
Integrability,/**; * An RAII wrapper around an open temporary file on disk. It cleans up the; * guarded file when the wrapper object goes out of scope.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/ntupleutil_test.hxx:15,wrap,wrapper,15,tree/ntupleutil/v7/test/ntupleutil_test.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/test/ntupleutil_test.hxx,2,['wrap'],['wrapper']
Integrability,/**; * An attribute whose specific kind is not exposed via this; * interface.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:67,interface,interface,67,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,"/**; * An expression whose specific kind is not exposed via this; * interface.; *; * Unexposed expressions have the same operations as any other kind; * of expression; one can extract their location information,; * spelling, children, etc. However, the specific kind of the; * expression is not reported.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:68,interface,interface,68,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,"/**; * An optional message to provide to a user of this API, e.g., to; * suggest replacement APIs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:19,message,message,19,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,"/**; * Annotate the given set of tokens by providing cursors for each token; * that can be mapped to a specific entity within the abstract syntax tree.; *; * This token-annotation routine is equivalent to invoking; * clang_getCursor() for the source locations of each of the; * tokens. The cursors provided are filtered, so that only those; * cursors that have a direct correspondence to the token are; * accepted. For example, given a function call \c f(x),; * clang_getCursor() would provide the following cursors:; *; * * when the cursor is over the 'f', a DeclRefExpr cursor referring to 'f'.; * * when the cursor is over the '(' or the ')', a CallExpr referring to 'f'.; * * when the cursor is over the 'x', a DeclRefExpr cursor referring to 'x'.; *; * Only the first and last of these cursors will occur within the; * annotate, since the tokens ""f"" and ""x' directly refer to a function; * and a variable, respectively, but the parentheses are just a small; * part of the full syntax of the function call expression, which is; * not provided as an annotation.; *; * \param TU the translation unit that owns the given tokens.; *; * \param Tokens the set of tokens to annotate.; *; * \param NumTokens the number of tokens in \p Tokens.; *; * \param Cursors an array of \p NumTokens cursors, whose contents will be; * replaced with the cursors corresponding to each token.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:180,rout,routine,180,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routine']
Integrability,"/**; * Base class for all the fit data types:; * Stores the coordinates and the DataOptions. @ingroup FitData; */; /**; class holding the fit data points. It is template on the type of point,; which can be for example a binned or unbinned point.; It is basically a wrapper on an std::vector. @ingroup FitData. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h:265,wrap,wrapper,265,math/mathcore/inc/Fit/FitData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h,1,['wrap'],['wrapper']
Integrability,/**; * Below are the routines for unzipping (inflating) buffers.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:21,rout,routines,21,core/zip/src/RZip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx,1,['rout'],['routines']
Integrability,/**; * COVER_best_t is used for two purposes:; * 1. Synchronizing threads.; * 2. Saving the best parameters and dictionary.; *; * All of the methods except COVER_best_init() are thread safe if zstd is; * compiled with multithreaded support.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h:52,Synchroniz,Synchronizing,52,builtins/zstd/dictBuilder/cover.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.h,1,['Synchroniz'],['Synchronizing']
Integrability,/**; * Completions for Objective-C class messages should be included in; * the results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:41,message,messages,41,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['messages']
Integrability,/**; * Completions for Objective-C instance messages should be included; * in the results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:44,message,messages,44,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['messages']
Integrability,/**; * Completions for Objective-C interfaces (classes) should be included; * in the results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:35,interface,interfaces,35,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interfaces']
Integrability,/**; * Completions for Objective-C protocols should be included in; * the results.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:35,protocol,protocols,35,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocols']
Integrability,/**; * Construct a USR for a specified Objective-C protocol.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:51,protocol,protocol,51,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocol']
Integrability,"/**; * Contains the results of a search in the compilation database; *; * When searching for the compile command for a file, the compilation db can; * return several commands, as the file may have been compiled with; * different options in different places of the project. This choice of compile; * commands is wrapped in this opaque data structure. It must be freed by; * \c clang_CompileCommands_dispose.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h:311,wrap,wrapped,311,interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,1,['wrap'],['wrapped']
Integrability,"/**; * Conversion functions between full- and half-precision floats. The code used here is taken (with some modifications); * from the `half` C++ library (https://half.sourceforge.net/index.html), distributed under the MIT license.; *; * Original license:; *; * The MIT License; *; * Copyright (c) 2012-2021 Christian Rau; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx:1260,CONTRACT,CONTRACT,1260,core/base/v7/inc/ROOT/RFloat16.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/v7/inc/ROOT/RFloat16.hxx,1,['CONTRACT'],['CONTRACT']
Integrability,"/**; * Convert an UTF8 StringRef to UTF8, UTF16, or UTF32 depending on; * WideCharWidth. The converted data is written to ResultPtr, which needs to; * point to at least WideCharWidth * (Source.Size() + 1) bytes. On success,; * ResultPtr will point one after the end of the copied string. On failure,; * ResultPtr will not be changed, and ErrorPtr will be set to the location of; * the first character which could not be converted.; * \return true on success.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:58,depend,depending,58,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['depend'],['depending']
Integrability,"/**; * Copyright (c) 2016 Tino Reichardt; * All rights reserved.; *; * You can contact the author at:; * - zstdmt source repository: https://github.com/mcmilk/zstdmt; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /**; * This file will hold wrapper for systems, which do not support pthreads; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.c:496,wrap,wrapper,496,builtins/zstd/common/threading.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.c,1,['wrap'],['wrapper']
Integrability,/**; * Create a ThreadSafeModule wrapper around the given LLVM module. This takes; * ownership of the M argument which should not be disposed of or referenced; * after this function returns.; *; * Ownership of the ThreadSafeModule is unique: If it is transferred to the JIT; * (e.g. by LLVMOrcLLJITAddLLVMIRModule) then the client is no longer; * responsible for it. If it is not transferred to the JIT then the client; * should call LLVMOrcDisposeThreadSafeModule to dispose of it.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:33,wrap,wrapper,33,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['wrap'],['wrapper']
Integrability,"/**; * Create a binary file from the given memory buffer.; *; * The exact type of the binary file will be inferred automatically, and the; * appropriate implementation selected. The context may be NULL except if; * the resulting file is an LLVM IR file.; *; * The memory buffer is not consumed by this function. It is the responsibilty; * of the caller to free it with \c LLVMDisposeMemoryBuffer.; *; * If NULL is returned, the \p ErrorMessage parameter is populated with the; * error's description. It is then the caller's responsibility to free this; * message by calling \c LLVMDisposeMessage.; *; * @see llvm::object::createBinary; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:555,message,message,555,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,1,['message'],['message']
Integrability,"/**; * Determine the availability of the entity that this cursor refers to; * on any platforms for which availability information is known.; *; * \param cursor The cursor to query.; *; * \param always_deprecated If non-NULL, will be set to indicate whether the; * entity is deprecated on all platforms.; *; * \param deprecated_message If non-NULL, will be set to the message text; * provided along with the unconditional deprecation of this entity. The client; * is responsible for deallocating this string.; *; * \param always_unavailable If non-NULL, will be set to indicate whether the; * entity is unavailable on all platforms.; *; * \param unavailable_message If non-NULL, will be set to the message text; * provided along with the unconditional unavailability of this entity. The; * client is responsible for deallocating this string.; *; * \param availability If non-NULL, an array of CXPlatformAvailability instances; * that will be populated with platform availability information, up to either; * the number of platforms for which availability information is available (as; * returned by this function) or \c availability_size, whichever is smaller.; *; * \param availability_size The number of elements available in the; * \c availability array.; *; * \returns The number of platforms (N) for which availability information is; * available (which is unrelated to \c availability_size).; *; * Note that the client is responsible for calling; * \c clang_disposeCXPlatformAvailability to free each of the; * platform-availability structures returned. There are; * \c min(N, availability_size) such structures.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:367,message,message,367,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['message'],['message']
Integrability,"/**; * Determine the set of methods that are overridden by the given; * method.; *; * In both Objective-C and C++, a method (aka virtual member function,; * in C++) can override a virtual method in a base class. For; * Objective-C, a method is said to override any method in the class's; * base class, its protocols, or its categories' protocols, that has the same; * selector and is of the same kind (class or instance).; * If no such method exists, the search continues to the class's superclass,; * its protocols, and its categories, and so on. A method from an Objective-C; * implementation is considered to override the same methods as its; * corresponding method in the interface.; *; * For C++, a virtual member function overrides any virtual member; * function with the same signature that occurs in its base; * classes. With multiple inheritance, a virtual member function can; * override several virtual member functions coming from different; * base classes.; *; * In all cases, this function determines the immediate overridden; * method, rather than all of the overridden methods. For example, if; * a method is originally declared in a class A, then overridden in B; * (which in inherits from A) and also in C (which inherited from B),; * then the only overridden method returned from this function when; * invoked on C's method will be B's method. The client may then; * invoke this function again, given the previously-found overridden; * methods, to map out the complete method-override set.; *; * \param cursor A cursor representing an Objective-C or C++; * method. This routine will compute the set of methods that this; * method overrides.; *; * \param overridden A pointer whose pointee will be replaced with a; * pointer to an array of cursors, representing the set of overridden; * methods. If there are no overridden methods, the pointee will be; * set to NULL. The pointee must be freed via a call to; * \c clang_disposeOverriddenCursors().; *; * \param num_overridden A point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:306,protocol,protocols,306,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,4,"['interface', 'protocol']","['interface', 'protocols']"
Integrability,/**; * Determine whether an instruction is a terminator. This routine is named to; * be compatible with historical functions that did this by querying the; * underlying C++ type.; *; * @see llvm::Instruction::isTerminator(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:62,rout,routine,62,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['rout'],['routine']
Integrability,/**; * Dispose of the given error message.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:34,message,message,34,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['message'],['message']
Integrability,"/**; * Error codes returned by libclang routines.; *; * Zero (\c CXError_Success) is the only error code indicating success. Other; * error codes, including not yet assigned non-zero values, indicate errors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:40,rout,routines,40,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,1,['rout'],['routines']
Integrability,/**; * FTBitmapGlyph is a specialisation of FTGlyph for creating bitmaps.; *; * It provides the interface between Freetype glyphs and their openGL; * Renderable counterparts. This is an abstract class and derived classes; * must implement the <code>Render</code> function.; *; * @see FTGlyphContainer; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTBitmapGlyph.h:96,interface,interface,96,graf3d/ftgl/inc/FTBitmapGlyph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTBitmapGlyph.h,1,['interface'],['interface']
Integrability,/**; * FTFont is the public interface for the FTGL library.; *; * Specific font classes are derived from this class. It uses the helper; * classes FTFace and FTSize to access the Freetype library. This class; * is abstract and deriving classes must implement the protected; * <code>MakeGlyph</code> function to create glyphs of the; * appropriate type.; *; * It is good practice after using these functions to test the error; * code returned. <code>FT_Error Error()</code>. Check the freetype file fterrdef.h; * for error definitions.; *; * @see FTFace; * @see FTSize; * @see FTGlyphContainer; * @see FTGlyph; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h:28,interface,interface,28,graf3d/ftgl/inc/FTFont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTFont.h,1,['interface'],['interface']
Integrability,/**; * FTGlyph is the base class for FTGL glyphs.; *; * It provides the interface between Freetype glyphs and their openGL; * renderable counterparts. This is an abstract class and derived classes; * must implement the <code>render</code> function.; *; * @see FTGlyphContainer; * @see FTBBox; * @see FTPoint; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGlyph.h:72,interface,interface,72,graf3d/ftgl/inc/FTGlyph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/ftgl/inc/FTGlyph.h,1,['interface'],['interface']
Integrability,"/**; * Find register[s] that can be used in function prologue and epilogue; *; * Find register[s] that can be use as scratch register[s] in function; * prologue and epilogue to save various registers (Link Register, Base; * Pointer, etc.). Prefer R0/R12, if available. Otherwise choose whatever; * register[s] are available.; *; * This method will return true if it is able to find enough unique scratch; * registers (1 or 2 depending on the requirement). If it is unable to find; * enough available registers in the block, it will return false and set; * any passed output parameter that corresponds to a required unique register; * to PPC::NoRegister.; *; * \param[in] MBB The machine basic block to find an available register for; * \param[in] UseAtEnd Specify whether the scratch register will be used at; * the end of the basic block (i.e., will the scratch; * register kill a register defined in the basic block); * \param[in] TwoUniqueRegsRequired Specify whether this basic block will; * require two unique scratch registers.; * \param[out] SR1 The scratch register to use; * \param[out] SR2 The second scratch register. If this pointer is not null; * the function will attempt to set it to an available; * register regardless of whether there is a hard requirement; * for two unique scratch registers.; * \return true if the required number of registers was found.; * false if the required number of scratch register weren't available.; * If either output parameter refers to a required scratch register; * that isn't available, it will be set to an invalid value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:425,depend,depending,425,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['depend'],['depending']
Integrability,"/**; * Format the given diagnostic in a manner that is suitable for display.; *; * This routine will format the given diagnostic to a string, rendering; * the diagnostic according to the various options given. The; * \c clang_defaultDiagnosticDisplayOptions() function returns the set of; * options that most closely mimics the behavior of the clang compiler.; *; * \param Diagnostic The diagnostic to print.; *; * \param Options A set of options that control the diagnostic display,; * created by combining \c CXDiagnosticDisplayOptions values.; *; * \returns A new string containing for formatted diagnostic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:88,rout,routine,88,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['rout'],['routine']
Integrability,/**; * Get a reference to the wrapped LLVMContext.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:30,wrap,wrapped,30,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['wrap'],['wrapped']
Integrability,"/**; * Given a cursor pointing to a C++ method call or an Objective-C; * message, returns non-zero if the method/message is ""dynamic"", meaning:; *; * For a C++ method: the call is virtual.; * For an Objective-C message: the receiver is an object instance, not 'super'; * or a specific class.; *; * If the method/message is ""static"" or the cursor does not point to a; * method/message, it will return zero.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:73,message,message,73,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,5,['message'],['message']
Integrability,"/**; * Given a cursor pointing to an Objective-C message or property; * reference, or C++ method call, returns the CXType of the receiver.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:49,message,message,49,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,"/**; * Given a cursor that may represent a specialization or instantiation; * of a template, retrieve the cursor that represents the template that it; * specializes or from which it was instantiated.; *; * This routine determines the template involved both for explicit; * specializations of templates and for implicit instantiations of the template,; * both of which are referred to as ""specializations"". For a class template; * specialization (e.g., \c std::vector<bool>), this routine will return; * either the primary template (\c std::vector) or, if the specialization was; * instantiated from a class template partial specialization, the class template; * partial specialization. For a class template partial specialization and a; * function template specialization (including instantiations), this; * this routine will return the specialized template.; *; * For members of a class template (e.g., member functions, member classes, or; * static data members), returns the specialized or instantiated member.; * Although not strictly ""templates"" in the C++ language, members of class; * templates have the same notions of specializations and instantiations that; * templates do, so this routine treats them similarly.; *; * \param C A cursor that may be a specialization of a template or a member; * of a template.; *; * \returns If the given cursor is a specialization or instantiation of a; * template or a member thereof, the template or member that it specializes or; * from which it was instantiated. Otherwise, returns a NULL cursor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:211,rout,routine,211,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,4,['rout'],['routine']
Integrability,"/**; * Given a cursor that represents a template, determine; * the cursor kind of the specializations would be generated by instantiating; * the template.; *; * This routine can be used to determine what flavor of function template,; * class template, or class template partial specialization is stored in the; * cursor. For example, it can describe whether a class template cursor is; * declared with ""struct"", ""class"" or ""union"".; *; * \param C The cursor to query. This cursor should represent a template; * declaration.; *; * \returns The cursor kind of the specializations that would be generated; * by instantiating the template \p C. If \p C is not a template, returns; * \c CXCursor_NoDeclFound.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:166,rout,routine,166,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routine']
Integrability,"/**; * If the cursor points to a selector identifier in an Objective-C; * method or message expression, this returns the selector index.; *; * After getting a cursor with #clang_getCursor, this can be called to; * determine if the location points to a selector identifier.; *; * \returns The selector index if the cursor is an Objective-C method or message; * expression and the cursor is pointing to a selector identifier, or -1; * otherwise.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:84,message,message,84,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['message'],['message']
Integrability,/**; * Installs error handler that prints error message to stderr and calls abort().; * Replaces currently installed error handler (if any).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:48,message,message,48,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,1,['message'],['message']
Integrability,"/**; * Interface used to provide a module to JIT or interpreter.; * This is now just a synonym for llvm::Module, but we have to keep using the; * different type to keep binary compatibility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h:7,Interface,Interface,7,interpreter/llvm-project/llvm/include/llvm-c/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h,1,['Interface'],['Interface']
Integrability,"/**; * Legacy API to retrieve the file, line, column, and offset represented; * by the given source location.; *; * This interface has been replaced by the newer interface; * #clang_getExpansionLocation(). See that interface's documentation for; * details.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h:121,interface,interface,121,interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h,3,['interface'],['interface']
Integrability,"/**; * Look up symbols in an execution session.; *; * This is a wrapper around the general ExecutionSession::lookup function.; *; * The SearchOrder argument contains a list of (JITDylibs, JITDylibSearchFlags); * pairs that describe the search order. The JITDylibs will be searched in the; * given order to try to find the symbols in the Symbols argument.; *; * The Symbols argument should contain a null-terminated array of; * (SymbolStringPtr, SymbolLookupFlags) pairs describing the symbols to be; * searched for. This function takes ownership of the elements of the Symbols; * array. The Name fields of the Symbols elements are taken to have been; * retained by the client for this function. The client should *not* release the; * Name fields, but are still responsible for destroying the array itself.; *; * The HandleResult function will be called once all searched for symbols have; * been found, or an error occurs. The HandleResult function will be passed an; * LLVMErrorRef indicating success or failure, and (on success) a; * null-terminated LLVMOrcCSymbolMapPairs array containing the function result,; * and the Ctx value passed to the lookup function.; *; * The client is fully responsible for managing the lifetime of the Ctx object.; * A common idiom is to allocate the context prior to the lookup and deallocate; * it in the handler.; *; * THIS API IS EXPERIMENTAL AND LIKELY TO CHANGE IN THE NEAR FUTURE!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:64,wrap,wrapper,64,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['wrap'],['wrapper']
Integrability,"/**; * Namespace for dispatching RooFit computations to various backends.; *; * This namespace contains an interface for providing high-performance computation functions for use in; * RooAbsReal::doEval(), see RooBatchComputeInterface.; *; * Furthermore, several implementations of this interface can be created, which reside in RooBatchCompute::RF_ARCH,; * where RF_ARCH may be replaced by the architecture that this implementation targets, e.g. SSE, AVX, etc.; *; * Using the pointer RooBatchCompute::dispatch, a computation request can be dispatched to the fastest backend that is; * available on a specific platform.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:107,interface,interface,107,roofit/batchcompute/res/RooBatchCompute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h,2,['interface'],['interface']
Integrability,/**; * Notifies the target JITDylib (and any pending queries on that JITDylib); * that all symbols covered by this MaterializationResponsibility instance; * have been emitted.; *; * This method will return an error if any symbols being resolved have been; * moved to the error state due to the failure of a dependency. If this; * method returns an error then clients should log it and call; * LLVMOrcMaterializationResponsibilityFailMaterialization.; * If no dependencies have been registered for the symbols covered by this; * MaterializationResponsibility then this method is guaranteed to return; * LLVMErrorSuccess.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:307,depend,dependency,307,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,['depend'],"['dependencies', 'dependency']"
Integrability,"/**; * Notifies the target JITDylib that the given symbols have been resolved.; * This will update the given symbols' addresses in the JITDylib, and notify; * any pending queries on the given symbols of their resolution. The given; * symbols must be ones covered by this MaterializationResponsibility; * instance. Individual calls to this method may resolve a subset of the; * symbols, but all symbols must have been resolved prior to calling emit.; *; * This method will return an error if any symbols being resolved have been; * moved to the error state due to the failure of a dependency. If this; * method returns an error then clients should log it and call; * LLVMOrcMaterializationResponsibilityFailMaterialization. If no dependencies; * have been registered for the symbols covered by this; * MaterializationResponsibility then this method is guaranteed to return; * LLVMErrorSuccess.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:580,depend,dependency,580,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,2,['depend'],"['dependencies', 'dependency']"
Integrability,/**; * Obtain the next parameter to a function.; *; * This takes an LLVMValueRef obtained from LLVMGetFirstParam() (which is; * actually a wrapped iterator) and obtains the next parameter from the; * underlying iterator.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:139,wrap,wrapped,139,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['wrap'],['wrapped']
Integrability,"/**; * Parse the given source file and the translation unit corresponding; * to that file.; *; * This routine is the main entry point for the Clang C API, providing the; * ability to parse a source file into a translation unit that can then be; * queried by other functions in the API. This routine accepts a set of; * command-line arguments so that the compilation can be configured in the same; * way that the compiler is configured on the command line.; *; * \param CIdx The index object with which the translation unit will be; * associated.; *; * \param source_filename The name of the source file to load, or NULL if the; * source file is included in \c command_line_args.; *; * \param command_line_args The command-line arguments that would be; * passed to the \c clang executable if it were being invoked out-of-process.; * These command-line options will be parsed and will affect how the translation; * unit is parsed. Note that the following options are ignored: '-c',; * '-emit-ast', '-fsyntax-only' (which is the default), and '-o \<output file>'.; *; * \param num_command_line_args The number of command-line arguments in; * \c command_line_args.; *; * \param unsaved_files the files that have not yet been saved to disk; * but may be required for parsing, including the contents of; * those files. The contents and name of these files (as specified by; * CXUnsavedFile) are copied when necessary, so the client only needs to; * guarantee their validity until the call to this function returns.; *; * \param num_unsaved_files the number of unsaved file entries in \p; * unsaved_files.; *; * \param options A bitmask of options that affects how the translation unit; * is managed but not its compilation. This should be a bitwise OR of the; * CXTranslationUnit_XXX flags.; *; * \param[out] out_TU A non-NULL pointer to store the created; * \c CXTranslationUnit, describing the parsed code and containing any; * diagnostics produced by the compiler.; *; * \returns Zero on success, otherwi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:102,rout,routine,102,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['rout'],['routine']
Integrability,/**; * Prepare a context for dictionary building.; * The context is only dependent on the parameter `d` and can used multiple; * times.; * Returns 0 on success or error code on error.; * The context must be destroyed with `COVER_ctx_destroy()`.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:73,depend,dependent,73,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['depend'],['dependent']
Integrability,/**; * Prepare a context for dictionary building.; * The context is only dependent on the parameter `d` and can used multiple; * times.; * Returns 0 on success or error code on error.; * The context must be destroyed with `FASTCOVER_ctx_destroy()`.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c:73,depend,dependent,73,builtins/zstd/dictBuilder/fastcover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c,1,['depend'],['dependent']
Integrability,"/**; * Removes currently installed error handler (if any).; * If no error handler is intalled, the default strategy is to print error; * message to stderr and call exit(1).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h:137,message,message,137,interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/FatalErrorHandler.h,1,['message'],['message']
Integrability,"/**; * Reparse the source files that produced this translation unit.; *; * This routine can be used to re-parse the source files that originally; * created the given translation unit, for example because those source files; * have changed (either on disk or as passed via \p unsaved_files). The; * source code will be reparsed with the same command-line options as it; * was originally parsed.; *; * Reparsing a translation unit invalidates all cursors and source locations; * that refer into that translation unit. This makes reparsing a translation; * unit semantically equivalent to destroying the translation unit and then; * creating a new translation unit with the same command-line arguments.; * However, it may be more efficient to reparse a translation; * unit using this routine.; *; * \param TU The translation unit whose contents will be re-parsed. The; * translation unit must originally have been built with; * \c clang_createTranslationUnitFromSourceFile().; *; * \param num_unsaved_files The number of unsaved file entries in \p; * unsaved_files.; *; * \param unsaved_files The files that have not yet been saved to disk; * but may be required for parsing, including the contents of; * those files. The contents and name of these files (as specified by; * CXUnsavedFile) are copied when necessary, so the client only needs to; * guarantee their validity until the call to this function returns.; *; * \param options A bitset of options composed of the flags in CXReparse_Flags.; * The function \c clang_defaultReparseOptions() produces a default set of; * options recommended for most uses, based on the translation unit.; *; * \returns 0 if the sources could be reparsed. A non-zero error code will be; * returned if reparsing was impossible, such that the translation unit is; * invalid. In such cases, the only valid call for \c TU is; * \c clang_disposeTranslationUnit(TU). The error codes returned by this; * routine are described by the \c CXErrorCode enum.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:80,rout,routine,80,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,3,['rout'],['routine']
Integrability,"/**; * Retrieve a range for a piece that forms the cursors spelling name.; * Most of the times there is only one range for the complete spelling but for; * Objective-C methods and Objective-C message expressions, there are multiple; * pieces for each selector identifier.; *; * \param pieceIndex the index of the spelling name piece. If this is greater; * than the actual number of pieces, it will return a NULL (invalid) range.; *; * \param options Reserved.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:192,message,message,192,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,/**; * Retrieve the CXStrings representing the mangled symbols of the ObjC; * class interface or implementation at the cursor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:84,interface,interface,84,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,"/**; * Retrieve the bit width of a bit-field declaration as an integer.; *; * If the cursor does not reference a bit-field, or if the bit-field's width; * expression cannot be evaluated, -1 is returned.; *; * For example:; * \code; * if (clang_Cursor_isBitField(Cursor)) {; * int Width = clang_getFieldDeclBitWidth(Cursor);; * if (Width != -1) {; * // The bit-field width is not value-dependent.; * }; * }; * \endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:385,depend,dependent,385,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,"/**; * Retrieve the category number for this diagnostic.; *; * Diagnostics can be categorized into groups along with other, related; * diagnostics (e.g., diagnostics under the same warning flag). This routine; * retrieves the category number for the given diagnostic.; *; * \returns The number of the category that contains this diagnostic, or zero; * if this diagnostic is uncategorized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:201,rout,routine,201,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['rout'],['routine']
Integrability,"/**; * Retrieve the decl for a protocol reference for an ObjC object/id.; *; * If the type is not an ObjC object or there are not enough protocol; * references, an invalid cursor is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:31,protocol,protocol,31,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['protocol'],['protocol']
Integrability,"/**; * Retrieve the number of protocol references associated with an ObjC object/id.; *; * If the type is not an ObjC object, 0 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:30,protocol,protocol,30,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocol']
Integrability,"/**; * Retrieve the parent context of the given completion string.; *; * The parent context of a completion string is the semantic parent of; * the declaration (if any) that the code completion represents. For example,; * a code completion for an Objective-C method would have the method's class; * or protocol as its context.; *; * \param completion_string The code completion string whose parent is; * being queried.; *; * \param kind DEPRECATED: always set to CXCursor_NotImplemented if non-NULL.; *; * \returns The name of the completion parent, e.g., ""NSObject"" if; * the completion string represents a method in the NSObject class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:302,protocol,protocol,302,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocol']
Integrability,"/**; * Return the alignment of a type in bytes as per C++[expr.alignof]; * standard.; *; * If the type declaration is invalid, CXTypeLayoutError_Invalid is returned.; * If the type declaration is an incomplete type, CXTypeLayoutError_Incomplete; * is returned.; * If the type declaration is a dependent type, CXTypeLayoutError_Dependent is; * returned.; * If the type declaration is not a constant size type,; * CXTypeLayoutError_NotConstantSize is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:293,depend,dependent,293,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,"/**; * Return the offset of a field named S in a record of type T in bits; * as it would be returned by __offsetof__ as per C++11[18.2p4]; *; * If the cursor is not a record field declaration, CXTypeLayoutError_Invalid; * is returned.; * If the field's type declaration is an incomplete type,; * CXTypeLayoutError_Incomplete is returned.; * If the field's type declaration is a dependent type,; * CXTypeLayoutError_Dependent is returned.; * If the field's name S is not found,; * CXTypeLayoutError_InvalidFieldName is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:378,depend,dependent,378,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,"/**; * Return the offset of the field represented by the Cursor.; *; * If the cursor is not a field declaration, -1 is returned.; * If the cursor semantic parent is not a record field declaration,; * CXTypeLayoutError_Invalid is returned.; * If the field's type declaration is an incomplete type,; * CXTypeLayoutError_Incomplete is returned.; * If the field's type declaration is a dependent type,; * CXTypeLayoutError_Dependent is returned.; * If the field's name S is not found,; * CXTypeLayoutError_InvalidFieldName is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:382,depend,dependent,382,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,"/**; * Return the size of a type in bytes as per C++[expr.sizeof] standard.; *; * If the type declaration is invalid, CXTypeLayoutError_Invalid is returned.; * If the type declaration is an incomplete type, CXTypeLayoutError_Incomplete; * is returned.; * If the type declaration is a dependent type, CXTypeLayoutError_Dependent is; * returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:284,depend,dependent,284,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,"/**; * Return the specified error if the condition evaluates to true.; *; * In debug modes, prints additional information.; * In order to do that (particularly, printing the conditional that failed),; * this can't just wrap RETURN_ERROR().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:219,wrap,wrap,219,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['wrap'],['wrap']
Integrability,"/**; * Returns a null-terminated string containing an error message.; *; * In case of no error, the result is `NULL`.; *; * The memory of the string is bound to the lifetime of \p Parser. If; * LLVMRemarkParserDispose() is called, the memory of the string will be; * released.; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:60,message,message,60,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['message'],['message']
Integrability,"/**; * Returns the currently-entered selector for an Objective-C message; * send, formatted like ""initWithFoo:bar:"". Only guaranteed to return a; * non-empty string for CXCompletionContext_ObjCInstanceMessage and; * CXCompletionContext_ObjCClassMessage.; *; * \param Results the code completion results to query; *; * \returns the selector (or partial selector) that has been entered thus far; * for an Objective-C message send.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:65,message,message,65,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['message'],['message']
Integrability,"/**; * Returns the cursor kind for the container for the current code; * completion context. The container is only guaranteed to be set for; * contexts where a container exists (i.e. member accesses or Objective-C; * message sends); if there is not a container, this function will return; * CXCursor_InvalidCode.; *; * \param Results the code completion results to query; *; * \param IsIncomplete on return, this value will be false if Clang has complete; * information about the container. If Clang does not have complete; * information, this value will be true.; *; * \returns the container kind, or CXCursor_InvalidCode if there is not a; * container; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:217,message,message,217,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,"/**; * Returns the given string's error message. This operation consumes the error,; * and the given LLVMErrorRef value is not usable once this call returns.; * The caller is responsible for disposing of the string by calling; * LLVMDisposeErrorMessage.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:40,message,message,40,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,1,['message'],['message']
Integrability,/**; * Returns the ith dependent library specifier; * for the given LTO input file. The returned; * string is not null-terminated.; *; * \since LTO_API_VERSION=24; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:23,depend,dependent,23,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['depend'],['dependent']
Integrability,"/**; * Returns the next remark in the file.; *; * The value pointed to by the return value needs to be disposed using a call to; * LLVMRemarkEntryDispose().; *; * All the entries in the returned value that are of LLVMRemarkStringRef type; * will become invalidated once a call to LLVMRemarkParserDispose is made.; *; * If the parser reaches the end of the buffer, the return value will be `NULL`.; *; * In the case of an error, the return value will be `NULL`, and:; *; * 1) LLVMRemarkParserHasError() will return `1`.; *; * 2) LLVMRemarkParserGetErrorMessage() will return a descriptive error; * message.; *; * An error may occur if:; *; * 1) An argument is invalid.; *; * 2) There is a parsing error. This can occur on things like malformed YAML.; *; * 3) There is a Remark semantic error. This can occur on well-formed files with; * missing or extra fields.; *; * Here is a quick example of the usage:; *; * ```; * LLVMRemarkParserRef Parser = LLVMRemarkParserCreateYAML(Buf, Size);; * LLVMRemarkEntryRef Remark = NULL;; * while ((Remark = LLVMRemarkParserGetNext(Parser))) {; * // use Remark; * LLVMRemarkEntryDispose(Remark); // Release memory.; * }; * bool HasError = LLVMRemarkParserHasError(Parser);; * LLVMRemarkParserDispose(Parser);; * ```; *; * \since REMARKS_API_VERSION=0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:597,message,message,597,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,1,['message'],['message']
Integrability,/**; * Returns the number of dependent library specifiers; * for the given LTO input file.; *; * \since LTO_API_VERSION=24; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:29,depend,dependent,29,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,1,['depend'],['dependent']
Integrability,"/**; * Returns the set of flags that is suitable for parsing a translation; * unit that is being edited.; *; * The set of flags returned provide options for \c clang_parseTranslationUnit(); * to indicate that the translation unit is likely to be reparsed many times,; * either explicitly (via \c clang_reparseTranslationUnit()) or implicitly; * (e.g., by code completion (\c clang_codeCompletionAt())). The returned flag; * set contains an unspecified set of optimizations (e.g., the precompiled; * preamble) geared toward improving the performance of these routines. The; * set of optimizations enabled may change from one version to the next.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:558,rout,routines,558,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * Same as \c clang_createTranslationUnit2, but returns; * the \c CXTranslationUnit instead of an error code. In case of an error this; * routine returns a \c NULL \c CXTranslationUnit, without further detailed; * error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:142,rout,routine,142,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routine']
Integrability,"/**; * Same as \c clang_parseTranslationUnit2, but returns; * the \c CXTranslationUnit instead of an error code. In case of an error this; * routine returns a \c NULL \c CXTranslationUnit, without further detailed; * error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:141,rout,routine,141,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routine']
Integrability,"/**; * Searches through the input for a synchronization point. If one is found, we; * will instruct the caller to flush, and return the number of bytes to load.; * Otherwise, we will load as many bytes as possible and instruct the caller; * to continue as normal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:40,synchroniz,synchronization,40,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['synchroniz'],['synchronization']
Integrability,"/**; * Sets the fill color for upcoming elements.; *; * Depending on the number of arguments given, Gray, RGB, or CMYK; * color space is implied.; *; * When only ch1 is given, ""Gray"" color space is implied and it; * must be a value in the range from 0.00 (solid black) to to 1.00 (white); * if values are communicated as String types, or in range from 0 (black); * to 255 (white) if communicated as Number type.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When only ch1,ch2,ch3 are given, ""RGB"" color space is implied and each; * value must be in the range from 0.00 (minimum intensity) to to 1.00; * (max intensity) if values are communicated as String types, or; * from 0 (min intensity) to to 255 (max intensity) if values are communicated; * as Number types.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When ch1,ch2,ch3,ch4 are given, ""CMYK"" color space is implied and each; * value must be a in the range from 0.00 (0% concentration) to to; * 1.00 (100% concentration); *; * Because JavaScript treats fixed point numbers badly (rounds to; * floating point nearest to binary representation) it is highly advised to; * communicate the fractional numbers as String types, not JavaScript Number type.; *; * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.; * @param {Number} ch2 Color channel value.; * @param {Number} ch3 Color channel value.; * @param {Number} ch4 Color channel value.; *; * @function; * @instance; * @returns {jsPDF}; * @memberof jsPDF#; * @name setFillColor; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:56,Depend,Depending,56,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Depend'],['Depending']
Integrability,"/**; * Sets the stroke color for upcoming elements.; *; * Depending on the number of arguments given, Gray, RGB, or CMYK; * color space is implied.; *; * When only ch1 is given, ""Gray"" color space is implied and it; * must be a value in the range from 0.00 (solid black) to to 1.00 (white); * if values are communicated as String types, or in range from 0 (black); * to 255 (white) if communicated as Number type.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When only ch1,ch2,ch3 are given, ""RGB"" color space is implied and each; * value must be in the range from 0.00 (minimum intensity) to to 1.00; * (max intensity) if values are communicated as String types, or; * from 0 (min intensity) to to 255 (max intensity) if values are communicated; * as Number types.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When ch1,ch2,ch3,ch4 are given, ""CMYK"" color space is implied and each; * value must be a in the range from 0.00 (0% concentration) to to; * 1.00 (100% concentration); *; * Because JavaScript treats fixed point numbers badly (rounds to; * floating point nearest to binary representation) it is highly advised to; * communicate the fractional numbers as String types, not JavaScript Number type.; *; * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.; * @param {Number} ch2 Color channel value.; * @param {Number} ch3 Color channel value.; * @param {Number} ch4 Color channel value.; *; * @function; * @instance; * @returns {jsPDF}; * @memberof jsPDF#; * @name setDrawColor; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:58,Depend,Depending,58,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Depend'],['Depending']
Integrability,"/**; * Sets the text color for upcoming elements.; *; * Depending on the number of arguments given, Gray, RGB, or CMYK; * color space is implied.; *; * When only ch1 is given, ""Gray"" color space is implied and it; * must be a value in the range from 0.00 (solid black) to to 1.00 (white); * if values are communicated as String types, or in range from 0 (black); * to 255 (white) if communicated as Number type.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When only ch1,ch2,ch3 are given, ""RGB"" color space is implied and each; * value must be in the range from 0.00 (minimum intensity) to to 1.00; * (max intensity) if values are communicated as String types, or; * from 0 (min intensity) to to 255 (max intensity) if values are communicated; * as Number types.; * The RGB-like 0-255 range is provided for backward compatibility.; *; * When ch1,ch2,ch3,ch4 are given, ""CMYK"" color space is implied and each; * value must be a in the range from 0.00 (0% concentration) to to; * 1.00 (100% concentration); *; * Because JavaScript treats fixed point numbers badly (rounds to; * floating point nearest to binary representation) it is highly advised to; * communicate the fractional numbers as String types, not JavaScript Number type.; *; * @param {Number|String} ch1 Color channel value or {string} ch1 color value in hexadecimal, example: '#FFFFFF'.; * @param {Number} ch2 Color channel value.; * @param {Number} ch3 Color channel value.; * @param {Number} ch4 Color channel value.; *; * @function; * @instance; * @returns {jsPDF}; * @memberof jsPDF#; * @name setTextColor; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:56,Depend,Depending,56,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Depend'],['Depending']
Integrability,/**; * Tests supplied object to determine if it implements the ArrayBufferView (TypedArray) interface; *; * @name isArrayBufferView; * @function; * @param {Object} object an Object; * @returns {boolean}; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:92,interface,interface,92,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['interface'],['interface']
Integrability,"/**; * Text that describes the current parameter when code-completion is; * referring to function call, message send, or template specialization.; *; * A ""current parameter"" chunk occurs when code-completion is providing; * information about a parameter corresponding to the argument at the; * code-completion point. For example, given a function; *; * \code; * int add(int x, int y);; * \endcode; *; * and the source code \c add(, where the code-completion point is after the; * ""("", the code-completion string will contain a ""current parameter"" chunk; * for ""int x"", indicating that the current argument will initialize that; * parameter. After typing further, to \c add(17, (where the code-completion; * point is after the "",""), the code-completion string will contain a; * ""current parameter"" chunk to ""int y"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:104,message,message,104,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,"/**; * The MIT License (MIT); *; * Copyright (c) 2015-2023 yWorks GmbH; * Copyright (c) 2013-2015 by Vitaly Puzrin; *; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in all; * copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/svg2pdf.mjs:1056,CONTRACT,CONTRACT,1056,js/modules/svg2pdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/svg2pdf.mjs,2,['CONTRACT'],['CONTRACT']
Integrability,/**; * The function detected that the arguments violate the function; * contract.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h:72,contract,contract,72,interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXErrorCode.h,1,['contract'],['contract']
Integrability,"/**; * The minimum workspace size for the `workSpace` used in; * HUF_readDTableX1_wksp() and HUF_readDTableX2_wksp().; *; * The space used depends on HUF_TABLELOG_MAX, ranging from ~1500 bytes when; * HUF_TABLE_LOG_MAX=12 to ~1850 bytes when HUF_TABLE_LOG_MAX=15.; * Buffer overflow errors may potentially occur if code modifications result in; * a required workspace size greater than that specified in the following; * macro.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:139,depend,depends,139,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['depend'],['depends']
Integrability,/**; * The type is a dependent Type.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,depend,dependent,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['dependent']
Integrability,/**; * These are definitions of various free functions for the C-style compression routines in ROOT.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/RZip.h:83,rout,routines,83,core/zip/inc/RZip.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/inc/RZip.h,1,['rout'],['routines']
Integrability,"/**; * This is the Deep Neural Network Designer: it produces an interactive interface, where we can build easily the; * deep network. This script can transform the graphical representation of the network to an option string.; * By using IPython JavaScript API, this script is able to communicate with the python kernel and book the method,; * and print out the kernel response.; * Used libraries/plugins:; * - jquery; * - jquery-ui; * - jquery.connections; * - jquery-timing; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 8/3/2016; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js:76,interface,interface,76,etc/notebook/JsMVA/js/NetworkDesigner.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js,1,['interface'],['interface']
Integrability,"/**; * This is the JsMVA object, the JavaScript part of JPyInterface module. This is a bridge,; * python code always produce an output, where one of this module's function will be called. These function calls; * will redirect the date for specific visualization scripts.; * It uses the following libraries:; * - JsROOT; * - d3js; * - jquery; * It uses the following submodules:; * - NeuralNetwork; * - DecisionTree; * - NetworkDesigner; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 5/14/16; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/JsMVA.js:87,bridg,bridge,87,etc/notebook/JsMVA/js/JsMVA.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/JsMVA.js,1,['bridg'],['bridge']
Integrability,/**; * Use the default value of an option that may depend on the process; * environment.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:51,depend,depend,51,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['depend']
Integrability,"/**; * Windows minimalist Pthread Wrapper, based on :; * http://www.cse.wustl.edu/~schmidt/win32-cv-1.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h:34,Wrap,Wrapper,34,builtins/zstd/common/threading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h,1,['Wrap'],['Wrapper']
Integrability,"/**; * Windows minimalist Pthread Wrapper, based on :; * http://www.cse.wustl.edu/~schmidt/win32-cv-1.html; */; /* === Dependencies === */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.c:34,Wrap,Wrapper,34,builtins/zstd/common/threading.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.c,2,"['Depend', 'Wrap']","['Dependencies', 'Wrapper']"
Integrability,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1096,Wrap,Wrapper,1096,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,3,"['Wrap', 'interface']","['Wrapper', 'Wrappers', 'interfaces']"
Integrability,"/**; * \brief Poll the sockets with ppoll; *; * By polling with ppoll instead of poll, one can pass along a signal mask to; * handle POSIX signals properly. See the zmq_ppoll documentation for examples; * of when this is useful: http://api.zeromq.org/; *; * \param[in] timeo Timeout in milliseconds. 0 means return immediately. -1 means wait for an event indefinitely.; * \param[in] sigmask A non-nullptr pointer to a signal mask must be constructed and passed to 'sigmask'. See the man page; * of sigprocmask(2) for more details on this. \return A vector of pairs of index and flags; index is the index of the; * registered fd or socket and flags are 0 (no events), ZMQ_POLLIN or ZMQ_POLLOUT.; *; * \note This function can throw (from inside ZMQ::ppoll), so wrap in try-catch!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp:759,wrap,wrap,759,roofit/roofitZMQ/src/ZeroMQPoller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQPoller.cpp,1,['wrap'],['wrap']
Integrability,"/**; * \brief Split the dataset into subsets based on the channels of a RooSimultaneous.; *; * Returns a list of sub-datasets, which each dataset named after the; * applicable state name of the RooSimultaneous index category. The index; * category itself is no longer present in the sub-datasets. The sub-datasets; * only contain variables that the pdf for the corresponding channel depends; * on.; *; * \param simPdf The simultaneous pdf used for splitting the dataset.; * \param createEmptyDataSets Flag indicating whether to create empty datasets; * for missing categories (`false` by default).; *; * \return An owning pointer to a TList of subsets of the dataset.; * Returns `nullptr` if an error occurs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:383,depend,depends,383,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['depend'],['depends']
Integrability,/**; * \brief Struct to wrap the call to a function with a guaranteed order of; * execution of its arguments.; * \tparam F Type of the callable.; * \tparam Args Variadic types of the arguments to the callable.; *; * The execution order is guaranteed by calling the function in the constructor; * thus enabling the exploitation of the list-initialization sequenced-before; * feature (See rule 9 at https://en.cppreference.com/w/cpp/language/eval_order).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx:24,wrap,wrap,24,tree/dataframe/inc/ROOT/RDF/Utils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx,1,['wrap'],['wrap']
Integrability,"/**; * \brief implementation of FilterAvailable and FilterMissing operations; *; * The filter evaluates if the entry is missing a value for the input column.; * Depending on which function was called by the user, the entry with the; * missing value:; * - will be discarded in case the user called FilterAvailable; * - will be kept in case the user called FilterMissing; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RFilterWithMissingValues.hxx:161,Depend,Depending,161,tree/dataframe/inc/ROOT/RDF/RFilterWithMissingValues.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RFilterWithMissingValues.hxx,1,['Depend'],['Depending']
Integrability,"/**; * \class ROOT::TIOFeatures; * \ingroup tree; *; * `TIOFeatures` provides the end-user with the ability to change the IO behavior; * of data written via a `TTree`. This class allows access to experimental and non-default; * features.; *; * When one of these features are activated, forward compatibility breaks may occur.; * That is, older versions of ROOT may not be able to read files written by this version; * of ROOT that have enabled these non-default features.; *; * To utilize `TIOFeatures`, create the object, set the desired feature flags, then attach; * it to a `TTree`. All subsequently created branches (and their baskets) will be serialized; * using those particular features.; *; * Example usage:; * ~~~{.cpp}; * ROOT::TIOFeatures features;; * features.Set(ROOT::Experimental::EIOFeatures::kGenerateOffsetMap);; * ttree_ref.SetIOFeatures(features);; * ~~~; *; * The method `TTree::SetIOFeatures` creates a copy of the feature set; subsequent changes; * to the `TIOFeatures` object do not propagate to the `TTree`.; */; ////////////////////////////////////////////////////////////////////////////; /// \brief Clear a specific IO feature from this set.; /// \param[in] input_bits The specific feature to disable.; ///; /// Removes a feature from the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:1304,message,message,1304,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,1,['message'],['message']
Integrability,/**; * \class ROOT::TNumSlots; * \brief Defines the number of threads in some of ROOT's interfaces.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx:88,interface,interfaces,88,core/thread/inc/ROOT/TThreadedObject.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TThreadedObject.hxx,1,['interface'],['interfaces']
Integrability,"/**; * \class ROOT::TSpinMutex; * \brief A spin mutex class which respects the STL interface for mutexes.; * \ingroup Parallelism; * This class allows to acquire spin locks also in combination with templates in the STL such as; * <a href=""http://en.cppreference.com/w/cpp/thread/unique_lock"">std::unique_lock</a> or; * <a href=""http://en.cppreference.com/w/cpp/thread/condition_variable_any"">std::condition_variable_any</a>.; * For example:; * ; * ~~~ {.cpp}; * ROOT::TSpinMutex m;; * std::condition_variable cv;; * bool ready = false;; *; * void worker_thread(); * {; * // Wait until main() sends data; * std::unique_lock<ROOT::TSpinMutex> lk(m);; * cv.wait(lk, []{return ready;});; * [...]; * }; * ~~~ {.cpp}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TSpinMutex.hxx:83,interface,interface,83,core/thread/inc/ROOT/TSpinMutex.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TSpinMutex.hxx,1,['interface'],['interface']
Integrability,"/**; * \class RRawFile RRawFile.hxx; * \ingroup IO; *; * The RRawFile provides read-only access to local and remote files. Data can be read either byte-wise or line-wise.; * The RRawFile base class provides line-wise access and buffering for byte-wise access. Derived classes provide the; * low-level read operations, e.g. from a local file system or from a web server. The RRawFile is used for non-ROOT; * RDataSource implementations and for RNTuple.; *; * Files are addressed by URL consisting of a transport protocol part and a location, like file:///path/to/data; * If the transport protocol part and the :// separator are missing, the default protocol is local file. Files are; * opened when required (on reading, getting file size) and closed on object destruction.; *; * RRawFiles manage system resources and are therefore made non-copyable. They can be explicitly cloned though.; *; * RRawFile objects are conditionally thread safe. See the user manual for further details:; * https://root.cern/manual/thread_safety/; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFile.hxx:511,protocol,protocol,511,io/io/inc/ROOT/RRawFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFile.hxx,3,['protocol'],['protocol']
Integrability,"/**; * \class RRawFileTFile RRawFileTFile.hxx; * \ingroup IO; *; * The RRawFileTFile wraps an open TFile, but does not take ownership.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFileTFile.hxx:85,wrap,wraps,85,io/io/inc/ROOT/RRawFileTFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFileTFile.hxx,1,['wrap'],['wraps']
Integrability,"/**; * \class RooBatchComputeInterface; * \ingroup roofit_dev_docs_batchcompute; * \brief The interface which should be implemented to provide optimised computation functions for implementations of; * RooAbsReal::doEval().; *; * The class RooBatchComputeInterface provides the mechanism for external modules (like RooFit) to call; * functions from the library. The power lies in the virtual functions that can resolve to different; * implementations for the functionality; for example, calling a function through dispatchCuda; * will resolve to efficient CUDA implementations.; *; * This interface contains the signatures of the compute functions of every PDF that has an optimised implementation; * available. These are the functions that perform the actual computations in batches.; *; * Several implementations of this interface may be provided, e.g. SSE, AVX, AVX2 etc. At run time, the fastest; * implementation of this interface is selected, and using a virtual call, the computation is dispatched to the best; * backend.; *; * \see RooBatchCompute::dispatch, RooBatchComputeClass, RF_ARCH; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h:94,interface,interface,94,roofit/batchcompute/res/RooBatchCompute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/res/RooBatchCompute.h,4,['interface'],['interface']
Integrability,/**; * \class RooNormalizedPdf; *; * A RooNormalizedPdf wraps a pdf divided by its integral for a given; * normalization set into a new self-normalized pdf.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx:56,wrap,wraps,56,roofit/roofitcore/src/RooNormalizedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx,1,['wrap'],['wraps']
Integrability,/**; * \defgroup CINDEX_COMMENT Comment introspection; *; * The routines in this group provide access to information in documentation; * comments. These facilities are distinct from the core and may be subject to; * their own schedule of stability and deprecation.; *; * @{; */; /**; * A parsed comment.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h:64,rout,routines,64,interpreter/llvm-project/clang/include/clang-c/Documentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h,1,['rout'],['routines']
Integrability,/**; * \defgroup CINDEX_FILES File manipulation routines; *; * @{; */; /**; * A particular source file that is part of a translation unit.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h:48,rout,routines,48,interpreter/llvm-project/clang/include/clang-c/CXFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h,1,['rout'],['routines']
Integrability,"/**; * \defgroup CINDEX_STRING String manipulation routines; * \ingroup CINDEX; *; * @{; */; /**; * A character string.; *; * The \c CXString type is used to return strings from the interface when; * the ownership of that string might differ from one call to the next.; * Use \c clang_getCString() to retrieve the string data and, once finished; * with the string data, call \c clang_disposeString() to free the string.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXString.h:51,rout,routines,51,interpreter/llvm-project/clang/include/clang-c/CXString.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXString.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/**; * \defgroup CINDEX_TRANSLATION_UNIT Translation unit manipulation; *; * The routines in this group provide the ability to create and destroy; * translation units from files, either by parsing the contents of the files or; * by reading in a serialized representation of a translation unit.; *; * @{; */; /**; * Get the original translation unit source file name.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:81,rout,routines,81,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routines']
Integrability,"/**; * \fn bool ZeroMQSvc::send(zmq::socket_t &socket, const char *item, zmq::send_flags flags) const; * \brief Send message over a socket; *; * \param[in] socket Socket.; * \param[in] item Message to send over.; * \param[in] flags Flags to send. See http://api.zeromq.org/master:zmq-send for possible flags and the cppzmq API for; * the type-safe equivalents in the zmq::send_flags enum class.; * \return An optional of type zmq::send_result_t that contains the number of bytes sent if successful, and is empty if; * EAGAIN was received, which probably means you should try again.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp:117,message,message,117,roofit/roofitZMQ/src/ZeroMQSvc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp,2,"['Message', 'message']","['Message', 'message']"
Integrability,/**; * \fn zmq::message_t ZeroMQSvc::encode(const char *item) const; * \brief Encode string as a ZeroMQ message object; *; * \param[in] item String.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp:104,message,message,104,roofit/roofitZMQ/src/ZeroMQSvc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitZMQ/src/ZeroMQSvc.cpp,1,['message'],['message']
Integrability,/**; * add here more wrappers as required; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h:21,wrap,wrappers,21,builtins/zstd/common/threading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h,1,['wrap'],['wrappers']
Integrability,"/**; * class for wrapping ROOT Engines in gsl_rng types which can be used as extra; * GSL random number generators; * For this we need to implement functions which will be called by gsl_rng.; * The functions (Seed, Rndm, IntRndm) are passed in the gsl_rng_type and used to build a gsl_rng object.; * When gsl_rng is alloacated, only the memory state is allocated using calloc(1,size), which gives a memory ; * block of the given bytes and it initializes to zero. Therefore no constructor of GSLRngROOTWrapper can be called ; * and also we cannot call non-static member function of the class. ; * The underlined ROOT engine is then built and deleted using the functions CreateEngine() and FreeEngine(), ; * called by the specific GSLRandomEngine class that instantiates for the the generator (e.g. GSLRngMixMax); *; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRngROOTWrapper.h:17,wrap,wrapping,17,math/mathmore/src/GSLRngROOTWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRngROOTWrapper.h,1,['wrap'],['wrapping']
Integrability,"/**; * g_error_new:; * @domain: error domain ; * @code: error code; * @format: printf()-style format for error message; * @Varargs: parameters for message format; * ; * Creates a new #GError with the given @domain and @code,; * and a message formatted with @format.; * ; * Return value: a new #GError; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:111,message,message,111,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,3,['message'],['message']
Integrability,"/**; * g_error_new_literal:; * @domain: error domain; * @code: error code; * @message: error message; * ; * Creates a new #GError; unlike g_error_new(), @message is not; * a printf()-style format string. Use this function if @message; * contains text you don't have control over, that could include; * printf() escape sequences.; * ; * Return value: a new #GError; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c:78,message,message,78,graf2d/win32gdk/gdk/src/glib/gerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gerror.c,4,['message'],['message']
Integrability,"/**; * g_iconv:; * @converter: conversion descriptor from g_iconv_open(); * @inbuf: bytes to convert; * @inbytes_left: inout parameter, bytes remaining to convert in @inbuf; * @outbuf: converted output bytes; * @outbytes_left: inout parameter, bytes available to fill in @outbuf; * ; * Same as the standard UNIX routine iconv(), but; * may be implemented via libiconv on UNIX flavors that lack; * a native implementation.; *; * GLib provides g_convert() and g_locale_to_utf8() which are likely; * more convenient than the raw iconv wrappers.; * ; * Return value: count of non-reversible conversions, or -1 on error; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:312,rout,routine,312,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,2,"['rout', 'wrap']","['routine', 'wrappers']"
Integrability,"/**; * g_iconv_close:; * @converter: a conversion descriptor from g_iconv_open(); *; * Same as the standard UNIX routine iconv_close(), but; * may be implemented via libiconv on UNIX flavors that lack; * a native implementation. Should be called to clean up; * the conversion descriptor from iconv_open() when; * you are done converting things.; *; * GLib provides g_convert() and g_locale_to_utf8() which are likely; * more convenient than the raw iconv wrappers.; * ; * Return value: -1 on error, 0 on success; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:113,rout,routine,113,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,2,"['rout', 'wrap']","['routine', 'wrappers']"
Integrability,"/**; * g_iconv_open:; * @to_codeset: destination codeset; * @from_codeset: source codeset; * ; * Same as the standard UNIX routine iconv_open(), but; * may be implemented via libiconv on UNIX flavors that lack; * a native implementation.; * ; * GLib provides g_convert() and g_locale_to_utf8() which are likely; * more convenient than the raw iconv wrappers.; * ; * Return value: a ""conversion descriptor""; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:123,rout,routine,123,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,2,"['rout', 'wrap']","['routine', 'wrappers']"
Integrability,/**; * g_io_channel_get_buffer_condition:; * @channel: A #GIOChannel; *; * This function returns a #GIOCondition depending on whether there; * is data to be read/space to write data in the; * internal buffers in the #GIOChannel. Only the flags %G_IO_IN and; * %G_IO_OUT may be set.; *; * Return value: A #GIOCondition; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:113,depend,depending,113,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['depend'],['depending']
Integrability,"/**; * g_markup_parse_context_get_position:; * @context: a #GMarkupParseContext; * @line_number: return location for a line number, or %NULL; * @char_number: return location for a char-on-line number, or %NULL; *; * Retrieves the current line number and the number of the character on; * that line. Intended for use in error messages; there are no strict; * semantics for what constitutes the ""current"" line number other than; * ""the best number we could come up with for error messages.""; * ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:325,message,messages,325,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,2,['message'],['messages']
Integrability,"/**; * g_spawn_sync:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @standard_output: return location for child output ; * @standard_error: return location for child error messages; * @exit_status: child exit status, as returned by waitpid(); * @error: return location for error; *; * Executes a child synchronously (waits for the child to exit before returning).; * All output from the child is stored in @standard_output and @standard_error,; * if those parameters are non-NULL. If @exit_status is non-NULL, the exit status; * of the child is stored there as it would be by waitpid(); standard UNIX; * macros such as WIFEXITED() and WEXITSTATUS() must be used to evaluate the; * exit status. If an error occurs, no data is returned in @standard_output,; * @standard_error, or @exit_status.; * ; * This function calls g_spawn_async_with_pipes() internally; see that function; * for full details on the other parameters.; * ; * Return value: TRUE on success, FALSE if an error was set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:449,message,messages,449,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['message'],['messages']
Integrability,"/**; * g_thread_pool_free:; * @pool: a #GThreadPool; * @immediate: should @pool shut down immediately?; * @wait: should the function wait for all tasks to be finished?; *; * Frees all resources allocated for @pool.; *; * If @immediate is #TRUE, no new task is processed for; * @pool. Otherwise @pool is not freed before the last task is; * processed. Note however, that no thread of this pool is; * interrupted, while processing a task. Instead at least all still; * running threads can finish their tasks before the @pool is freed.; *; * If @wait is #TRUE, the functions does not return before all tasks; * to be processed (dependent on @immediate, whether all or only the; * currently running) are ready. Otherwise the function returns immediately.; *; * After calling this function @pool must not be used anymore. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:625,depend,dependent,625,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,1,['depend'],['dependent']
Integrability,"/**; * g_utf8_strdown:; * @str: a UTF-8 encoded string; * @len: length of @str, in bytes, or -1 if @str is nul-terminated.; * ; * Converts all Unicode characters in the string that have a case; * to lowercase. The exact manner that this is done depends; * on the current locale, and may result in the number of; * characters in the string changing.; * ; * Return value: a newly allocated string, with all characters; * converted to lowercase. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:245,depend,depends,245,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,1,['depend'],['depends']
Integrability,"/**; * g_utf8_strup:; * @str: a UTF-8 encoded string; * @len: length of @str, in bytes, or -1 if @str is nul-terminated.; * ; * Converts all Unicode characters in the string that have a case; * to uppercase. The exact manner that this is done depends; * on the current locale, and may result in the number of; * characters in the string increasing. (For instance, the; * German ess-zet will be changed to SS.); * ; * Return value: a newly allocated string, with all characters; * converted to uppercase. ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:243,depend,depends,243,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,1,['depend'],['depends']
Integrability,"/**; * g_utf8_validate:; * @str: a pointer to character data; * @max_len: max bytes to validate, or -1 to go until nul; * @end: return location for end of valid data; * ; * Validates UTF-8 encoded text. @str is the text to validate;; * if @str is nul-terminated, then @max_len can be -1, otherwise; * @max_len should be the number of bytes to validate.; * If @end is non-%NULL, then the end of the valid range; * will be stored there (i.e. the address of the first invalid byte; * if some bytes were invalid, or the end of the text being validated; * otherwise).; *; * Returns %TRUE if all of @str was valid. Many GLib and GTK+; * routines <emphasis>require</emphasis> valid UTF-8 as input;; * so data read from a file or the network should be checked; * with g_utf8_validate() before doing anything else with it.; * ; * Return value: %TRUE if the text was valid UTF-8; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c:631,rout,routines,631,graf2d/win32gdk/gdk/src/glib/gutf8.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutf8.c,1,['rout'],['routines']
Integrability,"/**; * g_win32_error_message:; * @error: error code; *; * Translate a Win32 error code (as returned by GetLastError()) into; * the corresponding message. The message is either language neutral,; * or in the thread's language, or the user's language, the system's; * langauge, or US English (see docs for FormatMessage). The returned; * string should be deallocated with g_free().; *; * Returns: allocated error message; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:145,message,message,145,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,3,['message'],['message']
Integrability,/**; * initializer routines to set the corresponding pointers right; * The vectors must NOT be resized after this initialization; * without setting the corresponding pointers in the; * same moment ( has to be an atomic operation in case; * of multithreading ).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h:19,rout,routines,19,math/mathcore/inc/Fit/FitData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitData.h,1,['rout'],['routines']
Integrability,"/**; @defgroup CppFunctions Function Classes and Interfaces. Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods; for describing function classes. They define function and gradient evaluation and as well the; functionality for dealing with parameters in the case of parametric functions which are used for; fitting and data modeling.; Included are also adapter classes, such as functors, to wrap generic callable C++ objects; in the desired interface. @ingroup MathCore; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:49,Interface,Interfaces,49,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,5,"['Interface', 'adapter', 'interface', 'wrap']","['Interfaces', 'adapter', 'interface', 'wrap']"
Integrability,"/**; @defgroup GenFunc Generic Function Evaluation Interfaces; Interface classes for evaluation of function object classes in one or multi-dimensions.; @ingroup CppFunctions; */; //___________________________________________________________________________________; /**; Documentation for the abstract class IBaseFunctionMultiDim.; Interface (abstract class) for generic functions objects of multi-dimension; Provides a method to evaluate the function given a vector of coordinate values,; by implementing operator() (const double *).; In addition it defines the interface for copying functions via the pure virtual method Clone(); and the interface for getting the function dimension via the NDim() method.; Derived classes must implement the pure private virtual method DoEval(const double *) for the; function evaluation in addition to NDim() and Clone(). @ingroup GenFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:51,Interface,Interfaces,51,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,5,"['Interface', 'interface']","['Interface', 'Interfaces', 'interface']"
Integrability,"/**; @defgroup GoFClasses Goodness of Fit Tests; Classical one-dimensional goodness of git tests for unbinned data.; ROOT provides 1 sample goodness of fit test (comparison of data with a theoretical distribution) and; 2-sample test (comparison of two data sets) through the class ROOT::Math::GoFTest; The algorithms provided are the Kolmogorov-Smirnov and Anderson-Darling.; These tests could be applied approximately also to binned data, assuming the bin size is much smaller than the intrinsic; data variations. It is assumed than a bin is like many data at the same bin center value.; For these binned version tests look at `TH1::KolmogorovTest` and `TH1::AndersonDarlingTest`; @ingroup MathCore; */; /**; * GoFTest class implementing the 1 sample and 2 sample goodness of fit tests; * for uni-variate distributions and data.; * The class implements the AndersonDarling and the KolmogorovSmirnov tests; *; * In the case of the 1-sample test the user needs to provide:; * - input data; * - theoretical distribution. The distribution can be provided as a function object (functor) or an object implementing; * the `ROOT::Math::IGenFunction` interface. One can provide either the PDF (default) of the CDF (cumulative distribution); * One can also provide a pre-defined function. In that case one needs to give also the distribution parameters otherwise the default values will be used.; * The pre-defined distributions are:; * - kGaussian with default parameter mean=0, sigma=1; * - kExponential with default parameter rate=1; * - kLogNormal with default parameter meanlog=0, sigmalog=1; *; * Note that one should not use data computed distribution parameters, otherwise the test will be biased.; * The 1-sample KS test using data computed quantities is called Lilliefors test (see https://en.wikipedia.org/wiki/Lilliefors_test); *; * @ingroup GoFClasses; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GoFTest.h:1143,interface,interface,1143,math/mathcore/inc/Math/GoFTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GoFTest.h,1,['interface'],['interface']
Integrability,"/**; @defgroup MCIntegration Numerical Monte Carlo Integration Classes; Classes implementing method for Monte Carlo Integration.; @ingroup Integration. Class for performing numerical integration of a multidimensional function.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges. <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. It implements also the interface ROOT::Math::VirtualIntegratorMultiDim so it can be; instantiate using the plugin manager (plugin name is ""GSLMCIntegrator""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:51,Integrat,Integration,51,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,9,"['Integrat', 'integrat', 'interface']","['Integration', 'integration', 'interface']"
Integrability,"/**; @defgroup MultiMin Multi-dimensional Minimization; @ingroup NumAlgo. Classes implementing algorithms for multi-dimensional minimization; */; //_______________________________________________________________________________; /**; Abstract Minimizer class, defining the interface for the various minimizer; (like Minuit2, Minuit, GSL, etc..) in ROOT.; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library; using the static function ROOT::Math::Factory::CreateMinimizer. Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; The name shown below can be used to create them. More documentation can be found in the respective class. - Minuit (class TMinuitMinimizer); - Migrad (default); - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Mi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:273,interface,interface,273,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability,"/**; @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore; @ingroup MathMore. */; /**. @defgroup Integration Numerical Integration. Classes for numerical integration of functions.; These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; ROOT::Math::IntegratorMultiDimOptions classes. @ingroup NumAlgo. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:182,Integrat,Integration,182,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,12,"['Integrat', 'integrat', 'interface']","['Integration', 'IntegratorMultiDim', 'IntegratorMultiDimOptions', 'IntegratorOneDim', 'IntegratorOneDimOptions', 'integration', 'interface']"
Integrability,/**; @defgroup ParamFunc Parametric Function Evaluation Interfaces.; Interfaces classes for evaluation of parametric functions; @ingroup CppFunctions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:56,Interface,Interfaces,56,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,2,['Interface'],['Interfaces']
Integrability,"/**; @defgroup Random Interface classes for Random number generation. Pseudo-random numbers generator classes and for generation of random number distributions.; These classes implement several pseudo-random number generators and method for generation of random numbers; according to arbitrary distributions. @ingroup MathCore. */; /**; Interface class for generic sampling of a distribution,; i.e. generating random numbers according to arbitrary distributions. @ingroup Random; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/DistSampler.h:22,Interface,Interface,22,math/mathcore/inc/Math/DistSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/DistSampler.h,2,['Interface'],['Interface']
Integrability,/**; @defgroup Random Interface classes for Random number generation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Random.h:22,Interface,Interface,22,math/mathcore/inc/Math/Random.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Random.h,1,['Interface'],['Interface']
Integrability,/**; @defgroup RootFinders One-dimensional Root-Finding; Classes implementing algorithms for finding the roots of a one-dimensional function.; Various implementations exist in MathCore and MathMore; The user interacts with a proxy class ROOT::Math::RootFinder which creates behind; the chosen algorithms which are implemented using the ROOT::Math::IRootFinderMethod interface. @ingroup NumAlgo; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:366,interface,interface,366,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,1,['interface'],['interface']
Integrability,/**; @ingroup Random; Class to wrap engines from the C++ standard random library in; the ROOT Random interface.; These cases are then used by the generic TRandomGen class; to provide TRandom interrace generators for the C++ random generators. See for examples the TRandomMT64 and TRandomRanlux48 generators; which are typede's to TRandomGen instantiated with some; random engine from the C++ standard library. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/StdEngine.h:31,wrap,wrap,31,math/mathcore/inc/Math/StdEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/StdEngine.h,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,/**; @namespace ROOT::R; namespace associated R package for ROOT.; @defgroup R R Interface for Statistical Computing; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:81,Interface,Interface,81,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['Interface'],['Interface']
Integrability,"/**; A diagnostic that can be emitted by the RLogManager.; One can construct a RLogEntry through RLogBuilder, including streaming into; the diagnostic message and automatic emission.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:151,message,message,151,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['message'],['message']
Integrability,"/**; Class for adapting any multi-dimension C++ functor class to C function pointers used by; GSL MonteCarlo integration algorithms.; The templated C++ function class must implement:. <em> double operator( const double * x)</em>. This class defines static methods with will be used to fill the; \a gsl_monte_function used by GSL.; See for examples the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Monte-Carlo-Interface.html"">GSL online manual</A>. @ingroup MCIntegration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:109,integrat,integration,109,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,2,"['Interface', 'integrat']","['Interface', 'integration']"
Integrability,"/**; Class to Wrap a ROOT Function class (like TF1) in a IParamFunction interface; of one dimensions to be used in the ROOT::Math numerical algorithms; The wrapper does not own bby default the TF1 pointer, so it assumes it exists during the wrapper lifetime. The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are; stored in the TF1 class. @ingroup CppFunctions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h:14,Wrap,Wrap,14,hist/hist/inc/Math/WrappedTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h,4,"['Wrap', 'interface', 'wrap']","['Wrap', 'interface', 'wrapper']"
Integrability,"/**; Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface; of multi-dimensions to be used in the ROOT::Math numerical algorithm.; This wrapper class does not own the TF1 pointer, so it assumes it exists during the wrapper lifetime.; The class copy the TF1 pointer only when it owns it. The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are; stored in the TF1 class. @ingroup CppFunctions; */; //LM note: are there any issues when cloning the class for the parameters that are not copied anymore ??",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h:14,Wrap,Wrap,14,hist/hist/inc/Math/WrappedMultiTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h,4,"['Wrap', 'interface', 'wrap']","['Wrap', 'interface', 'wrapper']"
Integrability,/**; Compatibility interface with multi-dimensional functions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:19,interface,interface,19,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,"/**; Compute the integral of the series and return a pointer to a new Chebyshev series with the; integral coefficients. The lower limit of the integration is the left range value a.; The returned pointer must be managed by the user; */; //TO DO: implement copying to return by value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h:143,integrat,integration,143,math/mathmore/inc/Math/ChebyshevApprox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ChebyshevApprox.h,1,['integrat'],['integration']
Integrability,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:460,message,messages,460,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,2,['message'],['messages']
Integrability,"/**; Construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The integration will stop when the absolute error is less than the absolute tolerance OR when the relative error is less; than the relative tolerance. The absolute tolerance by default is not used (it is equal to zero).; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than; \f$ (2n + 3) (1 + maxpts/(2^n + 2n(n + 1) + 1))/2) \f$.; For smaller value passed, the minimum allowed will be used; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:151,integrat,integration,151,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Integrability,/**; Construct using a ROOT::Math::IGenFunction interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:48,interface,interface,48,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['interface'],['interface']
Integrability,"/**; Constructor a wrapped function from a pointer to a callable object, the function dimension and number of parameters; which are set to zero by default; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:19,wrap,wrapped,19,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['wrap'],['wrapped']
Integrability,"/**; Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became; parameters in the new API; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:19,wrap,wrapped,19,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['wrap'],['wrapped']
Integrability,/**; Constructor as before but from a generic function object interface for multi-dim functions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h:62,interface,interface,62,math/unuran/inc/TUnuranMultiContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h,1,['interface'],['interface']
Integrability,/**; Constructor as before but from a generic function object interface for one-dim functions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:62,interface,interface,62,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['interface'],['interface']
Integrability,/**; Constructor as before from pointers to generic function object interface for one-dim functions; which can be use for all algorithms including those requiring only the Cdf; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:68,interface,interface,68,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['interface'],['interface']
Integrability,/**; Constructor from a IMultiGenFunction interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MultiNumGradFunction.h:42,interface,interface,42,math/mathmore/inc/Math/MultiNumGradFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MultiNumGradFunction.h,1,['interface'],['interface']
Integrability,"/**; Constructor from a IMultiGradFunction interface that is externally managed; vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h:43,interface,interface,43,math/mathcore/inc/Math/MinimTransformFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h,1,['interface'],['interface']
Integrability,"/**; Constructor from a TF1 objects specifying the pdf and optionally from another function; representing the derivative of the pdf. The flag isLogPdf can be used to pass instead of the pdf; (and its derivative) the log (and the derivative of the log) of the pdf.; By default the distribution has not domain set (it is defined between [-inf,+inf], no mode, no pdf area and no; cdf explicitly defined. UnuRan, if needed, can compute some of this quantities, but the user if they know them can; set them in order to speed up the algorithm. For example in case of the Cdf, if the user has not set it, a numerical; integration algorithm is used to estimate the Cdf from the Pdf.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:611,integrat,integration,611,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['integrat'],['integration']
Integrability,/**; Constructor from a param one dim function interface from a const reference; Copy and manage the own function pointer; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:47,interface,interface,47,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['interface'],['interface']
Integrability,/**; Constructor from a param one dim function interface from a non const reference; Do not own the function pointer in this case; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:47,interface,interface,47,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['interface'],['interface']
Integrability,/**; Constructor from a parametric one dim function interface from a const reference; Own the function in this case; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:52,interface,interface,52,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['interface'],['interface']
Integrability,/**; Constructor from a parametric one dim function interface from a non-const reference; Do not own the function in this case; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:52,interface,interface,52,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,1,['interface'],['interface']
Integrability,"/**; Constructor of one dimensional Integrator passing a function interface. @param f integration function (1D interface). It is copied inside; @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:36,Integrat,Integrator,36,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,7,"['Integrat', 'integrat', 'interface']","['Integrator', 'IntegratorOneDimOptions', 'integration', 'interface']"
Integrability,"/**; Constructor with STL iterator interface. The data will be copied into the matrix; \param begin start iterator position; \param end end iterator position; \param triang if true only the triangular lower/upper part of the matrix is filled from the iterators; \param lower if true the lower triangular part is filled. Size of the matrix must match size of the iterators, if triang is false, otherwise the size of the; triangular block. In the case of symmetric matrices triang is considered always to be true; (what-ever the user specifies) and the size of the iterators must be equal to the size of the; triangular block, which is the number of independent elements of a symmetric matrix: N*(N+1)/2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:35,interface,interface,35,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['interface'],['interface']
Integrability,/**; Constructor with STL iterator interface. The data will be copied into the matrix; \param begin start iterator position; \param size iterator size; \param triang if true only the triangular lower/upper part of the matrix is filled from the iterators; \param lower if true the lower triangular part is filled. Size of the iterators must not be larger than the size of the matrix representation.; In the case of symmetric matrices the size is N*(N+1)/2. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:35,interface,interface,35,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,2,['interface'],['interface']
Integrability,/**; Constructor with STL iterator interface. The data will be copied into the vector; The iterator size must be equal to the vector size; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h:35,interface,interface,35,math/smatrix/inc/Math/SVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h,1,['interface'],['interface']
Integrability,/**; Constructor with STL iterator interface. The data will be copied into the vector; The size must be <= vector size; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h:35,interface,interface,35,math/smatrix/inc/Math/SVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h,1,['interface'],['interface']
Integrability,/**; Documentation for class Functor class.; It is used to wrap in a very simple and convenient way multi-dimensional function objects.; It can wrap all the following types:; <ul>; <li> any C++ callable object implementation double operator()( const double * ); <li> a free C function of type double ()(const double * ); <li> an std::function of type std::function<double (double const *)>; <li> a member function with the correct signature like Foo::Eval(const double * ).; In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); </ul>; The function dimension is required when constructing the functor. @ingroup GenFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:59,wrap,wrap,59,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,2,['wrap'],['wrap']
Integrability,/**; Evaluate all derivatives using cached parameter values (multi-dim like interface); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:76,interface,interface,76,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,/**; Evaluate partial derivative using cached parameter values (multi-dim like interface); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:79,interface,interface,79,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,/**; Evaluation of the function (required by interface); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Chi2FCN.h:45,interface,interface,45,math/mathcore/inc/Fit/Chi2FCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Chi2FCN.h,3,['interface'],['interface']
Integrability,/**; Expression wrapper class for Matrix objects. @ingroup Expression; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Expression.h:16,wrap,wrapper,16,math/smatrix/inc/Math/Expression.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Expression.h,1,['wrap'],['wrapper']
Integrability,/**; Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:275,interface,interface,275,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,4,['interface'],['interface']
Integrability,"/**; Fit using a FitMethodFunction interface. Same as method above, but now extra information; can be taken from the function class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:35,interface,interface,35,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Fit using a FitMethodGradFunction interface. Same as method above, but now extra information; can be taken from the function class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:39,interface,interface,39,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Fit using the given FCN function represented by a multi-dimensional function interface; (ROOT::Math::IMultiGenFunction).; Give optionally the initial parameter values, data size to have the fit Ndf correctly; set in the FitResult and flag specifying the type of fit. The fitType can be:; 0 undefined, 1 least square fit, 2 unbinned likelihood fit, 3 binned likelihood fit; Note that if the parameters values are not given (params=0) the; current parameter settings are used. The parameter settings can be created before; by using the FitConfig::SetParamsSetting. If they have not been created they are created; automatically when the params pointer is not zero.; Note that passing a params != 0 will set the parameter settings to the new value AND also the; step sizes to some pre-defined value (stepsize = 0.3 * abs(parameter_value) ); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:82,interface,interface,82,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Free functions adapter needed by UNURAN for multidimensional cont distribution; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapter,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapter'],['adapter']
Integrability,/**; Free functions adapter needed by UNURAN for one-dimensional discrete distribution; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapter,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapter'],['adapter']
Integrability,/**; Free functions adapter needed by UNURAN for onedimensional continuous distributions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapter,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapter'],['adapter']
Integrability,/**; Functor1D class for one-dimensional functions.; It is used to wrap in a very simple and convenient way:; <ul>; <li> any C++ callable object implementation double operator()( double ); <li> a free C function of type double ()(double ); <li> a member function with the correct signature like Foo::Eval(double ).; In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); </ul>. @ingroup GenFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:67,wrap,wrap,67,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,1,['wrap'],['wrap']
Integrability,/**; GSLQRngWrapper class to wrap gsl_qrng structure; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQRngWrapper.h:29,wrap,wrap,29,math/mathmore/src/GSLQRngWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQRngWrapper.h,1,['wrap'],['wrap']
Integrability,/**; GSLRngWrapper class to wrap gsl_rng structure; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRngWrapper.h:28,wrap,wrap,28,math/mathmore/src/GSLRngWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLRngWrapper.h,1,['wrap'],['wrap']
Integrability,"/**; Generate an integer number between [0,max-1] (including 0 and max-1); if max is larger than available range of algorithm; an error message is printed and zero is returned; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:136,message,message,136,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,1,['message'],['message']
Integrability,"/**; Generate an integer number between [0,max_generator-1] (including 0 and max-1); if max is larger than available range of algorithm; an error message is printed and zero is returned; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:146,message,message,146,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,1,['message'],['message']
Integrability,"/**; GradFunctor class for Multidimensional gradient functions.; It is used to wrap in a very C++ callable object to make gradient functions.; It can be constructed in three different way:; <ol>; <li> from an object implementing both; double operator()( const double * ) for the function evaluation and; double Derivative(const double *, int icoord) for the partial derivatives; <li>from an object implementing any member function like Foo::XXX(const double *) for the function evaluation; and any member function like Foo::XXX(const double *, int icoord) for the partial derivatives; <li>from two function objects implementing; double operator()( const double * ) for the function evaluation and another function object implementing; double operator() (const double *, int icoord) for the partial derivatives; <li>from two function objects; </ol>; The function dimension is required when constructing the functor. @ingroup GenFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:79,wrap,wrap,79,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,1,['wrap'],['wrap']
Integrability,/**; Implement the ROOT::Math::IBaseFunctionMultiDim interface DoEval(x) using the cached parameter values; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:53,interface,interface,53,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,/**; Implement the ROOT::Math::IBaseFunctionOneDim interface DoEval(x) using the cached parameter values; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:51,interface,interface,51,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,"/**; Implementation class for the RandomFunction for all the engined that derives from; TRandomEngine class, which defines an interface which has TRandomEngine::Rndm(); In this way we can have a common implementation for the RandomFunctions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RandomFunctions.h:126,interface,interface,126,math/mathcore/inc/Math/RandomFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RandomFunctions.h,1,['interface'],['interface']
Integrability,"/**; Initialize with Unuran string API interface.; See https://statmath.wu.ac.at/unuran/doc/unuran.html#StringAPI. @param distr : UNU.RAN distribution string; @param method : UNU.RAN method string. Here is an example using the string API:; ```; Tunuran unr;; unr.Init(""normal(3.,0.75); domain = (0,inf)"", ""method = tdr; c = 0"");; ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:39,interface,interface,39,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['interface'],['interface']
Integrability,"/**; Integration surrogate method. Return integral of passed function in interval [a,b]; Derived class (like GaussLegendreIntegrator) can re-implement this method to modify to use; an improved algorithm; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:5,Integrat,Integration,5,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Integrat'],['Integration']
Integrability,"/**; Integration surrogate method. Return integral of passed function in interval [a,b]; Reimplement method of GaussIntegrator using CalcGaussLegendreSamplingPoints; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:5,Integrat,Integration,5,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['Integrat'],['Integration']
Integrability,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:778,depend,depends,778,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['depends']
Integrability,/**; Likelihood fit given a data set (Binned or Un-binned) using any generic model function.; This interface copies the input data and the model function object; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:99,interface,interface,99,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Matrix Inverter class; Class to specialize calls to Dinv. Dinv computes the inverse of a square; matrix if dimension idim and order n. The content of the matrix will be; replaced by its inverse. In case the inversion fails, the matrix content is; destroyed. Invert specializes Dinv by the matrix order. E.g. if the order; of the matrix is two, the routine Inverter<2> is called which implements; Cramers rule. @author T. Glebe; */; //==============================================================================; // Inverter class; //==============================================================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dinv.h:353,rout,routine,353,math/smatrix/inc/Math/Dinv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dinv.h,1,['rout'],['routine']
Integrability,/**; MultiDimParamFunctionAdapter class to wrap a one-dimensional parametric function in; a multi dimensional parametric function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim function in a multi-dim interface one can use simply a; ROOT::Math::WrappedFunction<ROOT::Math::IGenFunction> or ROOT::Math::Functor; and ROOT::Math::GradFunctor for gradient functions. This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:43,wrap,wrap,43,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,8,"['Wrap', 'adapter', 'interface', 'wrap']","['WrappedFunction', 'WrappedParamFunction', 'adapter', 'interface', 'wrap']"
Integrability,/**; MultiDimParamGradFunctionAdapter class to wrap a one-dimensional parametric gradient function in; a multi dimensional parametric gradient function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim gradient function in a multi-dim interface one can use simply a; a ROOT::Math::GradFunctor. The parameters are not stored in the adapter class and by default the pointer to the 1D function is owned.; This means that deleting the class deletes also the 1D function and copying the class copies also the; 1D function; This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:47,wrap,wrap,47,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,8,"['Wrap', 'adapter', 'interface', 'wrap']","['WrappedParamFunction', 'adapter', 'interface', 'wrap']"
Integrability,/**; MultiNumGradFunction class to wrap a normal function in a; gradient function using numerical gradient calculation; provided by the class Derivator (based on GSL numerical derivation). @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MultiNumGradFunction.h:35,wrap,wrap,35,math/mathmore/inc/Math/MultiNumGradFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MultiNumGradFunction.h,1,['wrap'],['wrap']
Integrability,/**; Number of dimension (parameters) . From IGenMultiFunction interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h:63,interface,interface,63,math/mathcore/inc/Math/FitMethodFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h,1,['interface'],['interface']
Integrability,"/**; OneDimMultiFunctionAdapter class to wrap a multidimensional function in; one dimensional one.; Given a f(x1,x2,x3,....xn) transforms in a f( x_i) given the coordinate intex i and the vector x[]; of the coordinates.; It provides the possibility to copy and own the data array of the coordinates or to maintain internally a pointer to an external array; for being more efficient. In this last case the user must guarantee the life of the given passed pointer. @ingroup GenFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h:41,wrap,wrap,41,math/mathcore/inc/Math/OneDimFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h,1,['wrap'],['wrap']
Integrability,"/**; OneDimParamFunctionAdapter class to wrap a multi-dim parametric function in; one dimensional one.; Given a f(x[],p1,...pn) transforms in a f( p_i) given the param index i and the vectors x[] and p[]; of the coordinates and parameters; It has to be used carefully, since for efficiency reason it does not copy the parameter object; but re-uses the given pointer for the p[] vector.; The ParamFuncType reference by default is not const because the operator()(x,p) is not a const method. @ingroup GenFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h:41,wrap,wrap,41,math/mathcore/inc/Math/OneDimFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h,1,['wrap'],['wrap']
Integrability,/**; Optimized method to evaluate at the same time the function value and derivative at a point x.; Implement the interface specified by ROOT::Math::IGradientOneDim.; In the case of polynomial there is no advantage to compute both at the same time; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h:114,interface,interface,114,math/mathmore/inc/Math/Polynomial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h,1,['interface'],['interface']
Integrability,"/**; Param Functor class for Multidimensional functions.; It is used to wrap in a very simple and convenient way; any other C++ callable object (implementation double operator( const double *, const double * ) ); or a member function with the correct signature,; like Foo::EvalPar(const double *, const double *). @ingroup ParamFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h:72,wrap,wrap,72,math/mathcore/inc/Math/ParamFunctor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h,1,['wrap'],['wrap']
Integrability,/**; ParamFunctor Handler class is responsible for wrapping any other functor and pointer to; free C functions.; It can be created from any function implementing the correct signature; corresponding to the requested type. @ingroup ParamFunctor_int. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h:51,wrap,wrapping,51,math/mathcore/inc/Math/ParamFunctor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h,1,['wrap'],['wrapping']
Integrability,/**; ParamFunctor Handler to Wrap pointers to member functions. @ingroup ParamFunctor_int; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h:29,Wrap,Wrap,29,math/mathcore/inc/Math/ParamFunctor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/ParamFunctor.h,1,['Wrap'],['Wrap']
Integrability,/**; Partial derivative with respect a parameter; Compatibility interface with multi-dimensional functions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:64,interface,interface,64,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,/**; Pre-processor macro to report messages; which can be configured to use ROOT error or; simply an std::iostream in case of stan-alone builds; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h:35,message,messages,35,math/mathcore/inc/Math/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h,1,['message'],['messages']
Integrability,/**; Retrieve a wrapper to the result of the action that knows how to merge; with others of the same type.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RAction.hxx:16,wrap,wrapper,16,tree/dataframe/inc/ROOT/RDF/RAction.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RAction.hxx,3,['wrap'],['wrapper']
Integrability,/**; Return a pointer to the error (or the inverse error) on the value for a given point; depending on the type of data.; - If the data contains only value error (e.g. from histograms) returns a pointer to; the inverse of the errors.; - If the data contains errors in coordinates and value (e.g from TGraphErrors) returns a; pointer to the corresponding value error (NOT the inverse).; - If the data contains asymmetric errors return a pointer to the average error (NOT the inverse):; 0.5(eu + el).; - If the data does not contain errors return a nullptr.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:90,depend,depending,90,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['depend'],['depending']
Integrability,/**; Set integration function from a multi-dim function type.; Can be used in case of having 1D function implementing the generic interface; @param f integration function; @param icoord index of coordinate on which the integration is performed; @param x array of the passed variables values. In case of dim=1 a 0 can be passed; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:9,integrat,integration,9,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; Set matrix elements with STL iterator interface. The data will be copied into the matrix; \param begin start iterator position; \param end end iterator position; \param triang if true only the triangular lower/upper part of the matrix is filled from the iterators; \param lower if true the lower triangular part is filled. Size of the matrix must match size of the iterators, if triang is false, otherwise the size of the; triangular block. In the case of symmetric matrices triang is considered always to be true; (what-ever the user specifies) and the size of the iterators must be equal to the size of the; triangular block, which is the number of independent elements of a symmetric matrix: N*(N+1)/2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:43,interface,interface,43,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['interface'],['interface']
Integrability,/**; Set the FCN function represented by a multi-dimensional function interface; (ROOT::Math::IMultiGenFunction) and optionally the initial parameters; See also note above for the initial parameters for FitFCN; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:70,interface,interface,70,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Set the FCN function represented by a multi-dimensional function interface; (ROOT::Math::IMultiGenFunction) and optionally the initial parameters; See also note above for the initial parameters for FitFCN; With this interface we pass in addition a ModelFunction that will be attached to the FitResult and; used to compute confidence interval of the fit; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:70,interface,interface,70,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,2,['interface'],['interface']
Integrability,/**; Set the fitted function (model function) from a parametric function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:73,interface,interface,73,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Set the fitted function (model function) from a parametric gradient function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:82,interface,interface,82,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Set the fitted function (model function) from a vectorized parametric function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:84,interface,interface,84,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Set the fitted function from 1D gradient parametric function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:66,interface,interface,66,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; Set the fitted function from a parametric 1D function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:59,interface,interface,59,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Set the objective function (FCN) using a FitMethodFunction interface.; Same as method above, but now extra information can be taken from the function class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:64,interface,interface,64,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Set the objective function (FCN) using a FitMethodGradFunction interface.; Same as method above, but now extra information can be taken from the function class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:68,interface,interface,68,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you unwrap those datatypes encapsulate into this TRObject.; \note If the current TRObject is not a valid object it will return and empty object and it will print an error message; \return template return with the require datatype; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:42,wrap,wrapped,42,bindings/r/inc/TRObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h,2,"['message', 'wrap']","['message', 'wrapped']"
Integrability,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you wrap those datatypes; \param obj template object to be wrapped; \return TRObject reference of wrapped object; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:42,wrap,wrapped,42,bindings/r/inc/TRObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h,4,['wrap'],"['wrap', 'wrapped']"
Integrability,/**; Structure collecting parameters; for MISER multidimensional integration. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h:65,integrat,integration,65,math/mathmore/inc/Math/MCParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h,1,['integrat'],['integration']
Integrability,/**; Structures collecting parameters; for VEGAS multidimensional integration; For implementation of default parameters see file; mathmore/src/GSLMCIntegrationWorkspace.h. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h:66,integrat,integration,66,math/mathmore/inc/Math/MCParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/MCParameters.h,1,['integrat'],['integration']
Integrability,/**; TRFunctionExport template constructor that supports a lot of function's prototypes; \param fun supported function to be wrapped by Rcpp; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:125,wrap,wrapped,125,bindings/r/inc/TRFunctionExport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h,1,['wrap'],['wrapped']
Integrability,"/**; Template Constructor of one dimensional Integrator passing a generic function object. @param f integration function (any C++ callable object implementing operator()(double x); @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:45,Integrat,Integrator,45,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,"['Integrat', 'integrat']","['Integrator', 'IntegratorOneDimOptions', 'integration']"
Integrability,/**; Template class to wrap any C++ callable object which takes one argument; i.e. implementing operator() (double x) in a One-dimensional function interface.; It provides a ROOT::Math::IGenFunction-like signature. Note: If you want to wrap just the reference (to avoid copying) you need to use; Func& or const Func & as template parameter. The former should be used when the; operator() is not a const method of Func. @ingroup GenFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedFunction.h:23,wrap,wrap,23,math/mathcore/inc/Math/WrappedFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedFunction.h,3,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,/**; Template method to assign C++ variables into R environment; \param var any R wrappable datatype; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:82,wrap,wrappable,82,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['wrap'],['wrappable']
Integrability,"/**; Type: unsafe but fast interface filling the arrays x and w (static method). Given the number of sampling points this routine fills the arrays x and w; of length num, containing the abscissa and weight of the Gauss-Legendre; n-point quadrature formula. Gauss-Legendre: W(x)=1 -1<x<1; (j+1)P_{j+1} = (2j+1)xP_j-jP_{j-1}. num is the number of sampling points (>0); x and w are arrays of size num; eps is the relative precision. If num<=0 or eps<=0 no action is done. Reference: Numerical Recipes in C, Second Edition; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:27,interface,interface,27,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,/**; UnuranRng class for interface ROOT random generators to Unuran; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranRng.h:25,interface,interface,25,math/unuran/src/UnuranRng.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranRng.h,1,['interface'],['interface']
Integrability,"/**; WrappedParamFunction class to wrap any multi-dimensional function object; implementing the operator()(const double * x, const double * p); in an interface-like IParamFunction with a vector storing and caching internally the; parameter values. @ingroup ParamFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:5,Wrap,WrappedParamFunction,5,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,3,"['Wrap', 'interface', 'wrap']","['WrappedParamFunction', 'interface-like', 'wrap']"
Integrability,"/**; WrappedParamGenFunction class to wrap any multi-dimensional function; implementing the operator()(const double * ); in an interface-like IParamFunction, by fixing some of the variables and define them as; parameters.; i.e. transform any multi-dim function in a parametric function. @ingroup ParamFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:5,Wrap,WrappedParamGenFunction,5,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,3,"['Wrap', 'interface', 'wrap']","['WrappedParamGenFunction', 'interface-like', 'wrap']"
Integrability,"/**; Wrapper class to FCNBase interface used internally by Minuit.; Apply conversion from calling the function from a Minuit Vector (MnAlgebraicVector) to a std::vector for; the function coordinates.; The class counts also the number of function calls. By default counter start from zero, but a different value; might be given if the class is instantiated later on, for example for a set of different minimizaitons; Normally the derived class MnUserFCN should be instantiated with performs in addition the transformatiopn; internal-> external parameters; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnFcn.h:5,Wrap,Wrapper,5,math/minuit2/inc/Minuit2/MnFcn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnFcn.h,2,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,/**; Wrapper class to the gsl_function C structure.; This class to fill the GSL C structure gsl_function with; the C++ function objcet.; Use the class ROOT::Math::GSLFunctionAdapter to adapt the; C++ function object to the right signature (function pointer type); requested by GSL; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h:5,Wrap,Wrapper,5,math/mathmore/src/GSLFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h,1,['Wrap'],['Wrapper']
Integrability,/**; Wrapper for a multi-dimensional function with derivatives used in GSL multidim; minimization algorithm. @ingroup MultiMin. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionWrapper.h:5,Wrap,Wrapper,5,math/mathmore/src/GSLMultiMinFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionWrapper.h,1,['Wrap'],['Wrapper']
Integrability,/**; Wrapper used by Minuit of FCN interface; containing a reference to the transformation object; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserFcn.h:5,Wrap,Wrapper,5,math/minuit2/inc/Minuit2/MnUserFcn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserFcn.h,2,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,"/**; \class RHistConcurrentFillManager; Manages the synchronization of calls to FillN(). The HIST template can be a RHist instance. This class hands out; RHistConcurrentFiller objects that can concurrently fill the histogram. They; buffer calls to Fill() until the buffer is full, and then swap the buffer; with that of the RHistConcurrentFillManager. The manager than fills the; histogram.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx:52,synchroniz,synchronization,52,hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistConcurrentFill.hxx,1,['synchroniz'],['synchronization']
Integrability,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:27,Interface,Interface,27,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['Interface'],['Interface']
Integrability,"/**; \class RHistImplPrecisionAgnosticBase; Base class for `RHistImplBase` that abstracts out the histogram's `PRECISION`. For operations such as painting a histogram, the `PRECISION` (type of the bin; content) is not relevant; painting will cast the underlying bin type to double.; To facilitate this, `RHistImplBase` itself inherits from the; `RHistImplPrecisionAgnosticBase` interface.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:378,interface,interface,378,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['interface'],['interface']
Integrability,"/**; \class ROOT::Experimental::RNTupleParallelWriter; \ingroup NTuple; \brief A writer to fill an RNTuple from multiple contexts. Compared to the sequential RNTupleWriter, a parallel writer enables the creation of multiple RNTupleFillContext (see; RNTupleParallelWriter::CreateFillContext). Each fill context prepares independent clusters that are appended to the; common ntuple with internal synchronization. Before destruction, all fill contexts must have flushed their data and; been destroyed (or data could be lost!). For user convenience, RNTupleParallelWriter::CreateFillContext is thread-safe and may be called from multiple threads; in parallel at any time, also after some data has already been written. Internally, the original model is cloned and; ownership is passed to a newly created RNTupleFillContext. For that reason, it is recommended to use; RNTupleModel::CreateBare when creating the model for parallel writing and avoid the allocation of a useless default; REntry per context. Note that the sequence of independently prepared clusters is indeterminate and therefore entries are only partially; ordered: Entries from one context are totally ordered as they were filled. However, there is no orderering with other; contexts and the entries may be appended to the ntuple either before or after other entries written in parallel into; other contexts. In addition, two consecutive entries in one fill context can end up separated in the final ntuple, if; they happen to fall onto a cluster boundary and other contexts append more entries before the next cluster is full. At the moment, the parallel writer does not (yet) support incremental updates of the underlying model. Please refer to; RNTupleWriter::CreateModelUpdater if required for your use case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx:394,synchroniz,synchronization,394,tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleParallelWriter.hxx,1,['synchroniz'],['synchronization']
Integrability,/**; \class RooTable; \ingroup Roofitcore. Abstract interface for table objects.; Table objects are the category equivalent of RooPlot objects; (which are used for real-valued objects); **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTable.h:52,interface,interface,52,roofit/roofitcore/inc/RooTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTable.h,1,['interface'],['interface']
Integrability,"/**; \class TRFunctionExport. This is a class to pass functions from ROOT to R; <center><h2>TRFunctionExport class</h2></center>; <p>; The TRFunctionExport class lets you pass ROOT's functions to R's environment<br>; </p>; <p>; The next example was based in <br>; <a href=""https://root.cern/doc/master/NumericalMinimization_8C.html"">; https://root.cern/doc/master/NumericalMinimization_8C.html; </a><br>; <a href=""http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html"">; http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html</a><br>. </p>. Let \f$ f(x,y)=(x-1)^{2} + 100(y-x^{2})^{2} \f$ , which is called the Rosenbrock; function. It's known that this function has a minimum when \f$ y = x^{2}\f$ , and \f$ x = 1.\f$; Let's get the minimum using R's optim package through ROOTR's interface.; In the code this function was called ""Double_t RosenBrock(const TVectorD xx )"", because for; optim, the input in your function definition must be a single vector. The Gradient is formed by. \f$ \frac{\partial f}{\partial x} = -400x(y - x^{2}) - 2(1 - x) \f$. \f$ \frac{\partial f}{\partial y} = 200(y - x^{2}); \f$. The ""TVectorD RosenBrockGrad(const TVectorD xx )"" function; must have a single vector as the argument a it will return a single vetor. \code{.cpp}; #include<TRInterface.h>. //in the next function the pointer *double must be changed by TVectorD, because the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExpo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:807,interface,interface,807,bindings/r/inc/TRFunctionExport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h,1,['interface'],['interface']
Integrability,/**; \class TVirtualArray; \ingroup IO; Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h:40,Wrap,Wrapper,40,core/meta/inc/TVirtualArray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualArray.h,1,['Wrap'],['Wrapper']
Integrability,/**; \class TVirtualObject; \ingroup IO. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h:41,Wrap,Wrapper,41,core/meta/inc/TVirtualObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualObject.h,1,['Wrap'],['Wrapper']
Integrability,/**; \file RooAbsProxy.cxx; \class RooAbsProxy; \ingroup Roofitcore. Abstract interface for proxy classes.; Proxy classes hold pointers to other Roofit objects; and process serverRedirect changes so that the proxied; pointers are updated accordingly on a clone or copy of; of the owning class; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsProxy.cxx:78,interface,interface,78,roofit/roofitcore/src/RooAbsProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsProxy.cxx,1,['interface'],['interface']
Integrability,"/**; \file RooAbsSelfCachedReal.h; \class RooAbsSelfCached; \ingroup Roofitcore. Abstract base class for functions whose; output is cached in terms of a histogram in all observables between; getVal() and evaluate(). For certain p.d.f.s that are very; expensive to calculate it may be beneficial to implement them as a; RooAbsSelfCached rather than a RooAbsReal/Pdf. Class; RooAbsSelfCached is designed to have its interface identical to; that of RooAbsReal/Pdf, so any p.d.f can make use of its caching; functionality by merely switching its base class. Existing; RooAbsReal/Pdf objects can also be cached a posteriori with the; RooCachedReal/Pdf wrapper function that takes any RooAbsReal/Pdf object as; input.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsSelfCachedReal.h:414,interface,interface,414,roofit/roofitcore/inc/RooAbsSelfCachedReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsSelfCachedReal.h,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,/**; \file RooArgProxy.cxx; \class RooArgProxy; \ingroup Roofitcore. Abstract interface for RooAbsArg proxy classes.; A RooArgProxy is the general mechanism to store references; to other RooAbsArgs inside a RooAbsArg. Creating a RooArgProxy adds the proxied object to the proxy owners; server list (thus receiving value/shape dirty flags from it) and; registers itself with the owning class. The latter allows the; owning class to change the proxied pointer when the server it; points to gets redirected (e.g. in a copy or clone operation).; **/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx:78,interface,interface,78,roofit/roofitcore/src/RooArgProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx,1,['interface'],['interface']
Integrability,/**; add interface to set dynamically a new error definition; Re-implement this function if needed.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:9,interface,interface,9,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,1,['interface'],['interface']
Integrability,/**; class to wrap a gsl_function_fdf (with derivatives); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h:14,wrap,wrap,14,math/mathmore/src/GSLFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h,1,['wrap'],['wrap']
Integrability,/**; construct from an interface of a multi-dimensional function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h:23,interface,interface,23,math/mathmore/inc/Math/GSLSimAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h,1,['interface'],['interface']
Integrability,/**; construct from an interface of a multi-dimensional function; Use optionally a scale factor (for each coordinate) which can be used to scale the step sizes; (this is used for example by the minimization algorithm); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h:23,interface,interface,23,math/mathmore/inc/Math/GSLSimAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h,1,['interface'],['interface']
Integrability,"/**; destructor, delete pointer to internal data or external data wrapper; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h:66,wrap,wrapper,66,math/mathcore/inc/Fit/UnBinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h,1,['wrap'],['wrapper']
Integrability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b) with a singularity at c; @param f integration function. The function type must be a C++ callable object implementing operator()(double x); @param a lower value of the integration interval; @param b upper value of the integration interval; @param c position of singularity. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:139,integrat,integration,139,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,['integrat'],['integration']
Integrability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b) with a singularity at c; @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval; @param b upper value of the integration interval; @param c position of singularity. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:139,integrat,integration,139,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Cauchy principal value of the integral of a function f over the defined interval (a,b); with a singularity at c; @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower interval value; @param b lower interval value; @param c singular value of f; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:140,integrat,integration,140,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral of a function f over the defined interval (a,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:85,integrat,integration,85,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral of a function f over the infinite interval (-inf,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:92,integrat,integration,92,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) using the function previously set with GSLIntegrator::SetFunction method.; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:196,integrat,integration,196,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Integrability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) using the function previously set with Integrator::SetFunction method.; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:132,Integrat,Integrator,132,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Integrability,"/**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:103,integrat,integration,103,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf) using the function previously set with GSLIntegrator::SetFunction method.; @param a lower value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:187,integrat,integration,187,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Integrability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf) using the function previously set with Integrator::SetFunction method.; @param a lower value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:123,Integrat,Integrator,123,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Integrability,"/**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:94,integrat,integration,94,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral of a function f with known singular points over the defined Integral (a,b); @param f integration function. The function type must be a C++ callable object implementing operator()(double x); @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integration']
Integrability,"/**; evaluate the Integral of a function f with known singular points over the defined Integral (a,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,6,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/**; evaluate the Integral over the defined interval (a,b) using the function previously set with GSLIntegrator::SetFunction method. The function has known singular points.; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:340,integrat,integration,340,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['integrat'],['integration']
Integrability,"/**; evaluate the Integral over the defined interval (a,b) using the function previously set with Integrator::SetFunction method. The function has known singular points.; @param pts vector containing both the function singular points and the lower/upper edges of the interval. The vector must have as first element the lower edge of the integration Integral ( \a a) and last element the upper value. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:98,Integrat,Integrator,98,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['Integrat', 'integrat']","['Integrator', 'integration']"
Integrability,"/**; evaluate the Integral over the infinite interval (-inf,+inf) using the function previously set with Integrator::SetFunction method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:105,Integrat,Integrator,105,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['Integrat'],['Integrator']
Integrability,/**; fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface.; Note that both the input data and the function object are copied by the Fitter.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:279,interface,interface,279,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; fit using user provided FCN with Minuit-like interface; If npar = 0 it is assumed that the parameters are specified in the parameter settings created before; For the options same consideration as in the previous method; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:50,interface,interface,50,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,"/**; function to assign function to export,; template method that supports a lot of function's prototypes; \param fun supported function to be wrapped by Rcpp; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:143,wrap,wrapped,143,bindings/r/inc/TRFunctionExport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h,1,['wrap'],['wrapped']
Integrability,/**; generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:33,Integrat,Integrator,33,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,5,"['Integrat', 'integrat']","['Integration', 'Integrator', 'integration']"
Integrability,"/**; generic constructors from four scalar values.; The association between values and coordinate depends on the; coordinate system. For PxPyPzE4D,; \param a scalar value (Px); \param b scalar value (Py); \param c scalar value (Pz); \param d scalar value (E); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h:98,depend,depends,98,math/genvector/inc/Math/GenVector/LorentzVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h,1,['depend'],['depends']
Integrability,/**; get the option used for the integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:33,integrat,integration,33,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,/**; implement the required IParamFunction interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:43,interface,interface,43,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['interface'],['interface']
Integrability,/**; interface class for gradient calculators; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/GradientCalculator.h:5,interface,interface,5,math/minuit2/inc/Minuit2/GradientCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/GradientCalculator.h,1,['interface'],['interface']
Integrability,/**; multidim-like interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:19,interface,interface,19,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,/**; return a pointer to integrator object; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:25,integrat,integrator,25,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['integrat'],['integrator']
Integrability,/**; return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:204,interface,interface,204,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['interface'],['interface']
Integrability,/**; return number of function evaluations in calculating the integral; (if integrator do not implement this function returns -1); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:76,integrat,integrator,76,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,['integrat'],['integrator']
Integrability,/**; set cdf distribution from a generic function interface. If a method requires it; and is not set it is estimated numerically; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranDiscrDist.h:50,interface,interface,50,math/unuran/inc/TUnuranDiscrDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranDiscrDist.h,1,['interface'],['interface']
Integrability,/**; set cdf distribution using a generic function interface; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:51,interface,interface,51,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['interface'],['interface']
Integrability,/**; set cdf distribution. If a method requires it; and is not set it is then estimated using numerical; integration from the pdf; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:105,integrat,integration,105,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['integrat'],['integration']
Integrability,/**; set integration function using a generic function implementing the operator()(double *x); The dimension of the function is in this case required; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:9,integrat,integration,9,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integration']
Integrability,/**; set integration method using a name instead of an enumeration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,/**; set integration method; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,/**; set integration mode for VEGAS method; The possible MODE are :; MCIntegration::kIMPORTANCE (default) : VEGAS will use importance sampling; MCIntegration::kSTRATIFIED : VEGAS will use stratified sampling if certain condition are satisfied; MCIntegration::kIMPORTANCE_ONLY : VEGAS will always use importance sampling; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:9,integrat,integration,9,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,/**; set objective function using user provided FCN with Minuit-like interface; If npar = 0 it is assumed that the parameters are specified in the parameter settings created before; For the options same consideration as in the previous method; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:69,interface,interface,69,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['interface'],['interface']
Integrability,/**; set one dimensional function for 1D integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:41,integrat,integration,41,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['integrat'],['integration']
Integrability,/**; set the integration options; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:13,integrat,integration,13,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,/**; set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:13,integrat,integration,13,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,4,"['Integrat', 'integrat']","['Integration', 'integration', 'integrations']"
Integrability,/**; template method for operator assignation; \param var any R wrappable datatype; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:64,wrap,wrappable,64,bindings/r/inc/TRDataFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h,1,['wrap'],['wrappable']
Integrability,/**; wrapper class for C struct gsl_cheb_series; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLChebSeries.h:5,wrap,wrapper,5,math/mathmore/src/GSLChebSeries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLChebSeries.h,1,['wrap'],['wrapper']
Integrability,/**; wrapper class for gsl_min_fminimizer structure; @ingroup Min1D; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSL1DMinimizerWrapper.h:5,wrap,wrapper,5,math/mathmore/src/GSL1DMinimizerWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSL1DMinimizerWrapper.h,1,['wrap'],['wrapper']
Integrability,/**; wrapper to a multi-dim function with derivatives for multi roots; algorithm. @ingroup MultiRoot; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h:5,wrap,wrapper,5,math/mathmore/src/GSLMultiRootFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h,1,['wrap'],['wrapper']
Integrability,/**; wrapper to a multi-dim function without derivatives for multi roots; algorithm; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h:5,wrap,wrapper,5,math/mathmore/src/GSLMultiRootFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionWrapper.h,1,['wrap'],['wrapper']
Integrability,/**; wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional; integration algorithm. @ingroup MCIntegration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h:5,wrap,wrapper,5,math/mathmore/src/GSLMonteFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionWrapper.h,2,"['integrat', 'wrap']","['integration', 'wrapper']"
Integrability,/**; wrapper to a multi-dim function withtout derivatives for multi-dimensional; minimization algorithm. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionWrapper.h:5,wrap,wrapper,5,math/mathmore/src/GSLMultiFitFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionWrapper.h,2,['wrap'],['wrapper']
Integrability,/*- Dependencies -*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:4,Depend,Dependencies,4,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,1,['Depend'],['Dependencies']
Integrability,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:705,depend,depend,705,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['depend']
Integrability,"/*-**************************************************************; * Memory I/O Implementation; *****************************************************************/; /* MEM_FORCE_MEMORY_ACCESS :; * By default, access to unaligned memory is controlled by `memcpy()`, which is safe and portable.; * Unfortunately, on some target/compiler combinations, the generated assembly is sub-optimal.; * The below switch allow to select different access method for improved performance.; * Method 0 (default) : use `memcpy()`. Safe and portable.; * Method 1 : `__packed` statement. It depends on compiler extension (i.e., not portable).; * This method is safe if your compiler supports it, and *generally* as fast or faster than `memcpy`.; * Method 2 : direct access. This method is portable but violate C standard.; * It can generate buggy code on targets depending on alignment.; * In some circumstances, it's the only known way to get the most performance (i.e. GCC + ARMv6); * See http://fastcompression.blogspot.fr/2015/08/accessing-unaligned-memory.html for details.; * Prefer these methods in priority order (0 > 1 > 2); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h:571,depend,depends,571,builtins/zstd/common/mem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h,2,['depend'],"['depending', 'depends']"
Integrability,/*-*******************************************************; * Dependencies; *********************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.h:62,Depend,Dependencies,62,builtins/zstd/decompress/zstd_ddict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.h,4,['Depend'],['Dependencies']
Integrability,/*-*******************************************************; * Interface; *********************************************************/; /* note: several prototypes are already published in `zstd.h` :; * ZSTD_createDDict(); * ZSTD_createDDict_byReference(); * ZSTD_createDDict_advanced(); * ZSTD_freeDDict(); * ZSTD_initStaticDDict(); * ZSTD_sizeof_DDict(); * ZSTD_estimateDDictSize(); * ZSTD_getDictID_fromDict(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.h:62,Interface,Interface,62,builtins/zstd/decompress/zstd_ddict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.h,1,['Interface'],['Interface']
Integrability,/*-*****************************************; * Dependencies; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:48,Depend,Dependencies,48,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['Depend'],['Dependencies']
Integrability,/*-****************************************; * Dependencies; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h:47,Depend,Dependencies,47,builtins/zstd/common/mem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h,1,['Depend'],['Dependencies']
Integrability,/*-*************************************; * Dependencies; ***************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.h:44,Depend,Dependencies,44,builtins/zstd/compress/zstd_compress_superblock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.h,3,['Depend'],['Dependencies']
Integrability,"/*-************************************; * Memory routines; **************************************/; /*; * User may redirect invocations of; * malloc(), calloc() and free(); * towards another library or solution of their choice; * by modifying below section.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:50,rout,routines,50,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['rout'],['routines']
Integrability,/*-------------------------------------------------------------------------*/; /* UTILITIES FOR FORTRAN TO CALL C ROUTINES */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:114,ROUT,ROUTINES,114,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['ROUT'],['ROUTINES']
Integrability,"/*---------------------------------------------------------------------------*/; /* implementation of the incomplete beta function */; /**; * DESCRIPTION:; *; * Returns incomplete beta integral of the arguments, evaluated; * from zero to x. The function is defined as; *; * x; * - -; * | (a+b) | | a-1 b-1; * ----------- | t (1-t) dt.; * - - | |; * | (a) | (b) -; * 0; *; * The domain of definition is 0 <= x <= 1. In this; * implementation a and b are restricted to positive values.; * The integral from x to 1 may be obtained by the symmetry; * relation; *; * 1 - incbet( a, b, x ) = incbet( b, a, 1-x ).; *; * The integral is evaluated by a continued fraction expansion; * or, when b*x is small, by a power series.; *; * ACCURACY:; *; * Tested at uniformly distributed random points (a,b,x) with a and b; * in ""domain"" and x between 0 and 1.; * Relative error; * arithmetic domain # trials peak rms; * IEEE 0,5 10000 6.9e-15 4.5e-16; * IEEE 0,85 250000 2.2e-13 1.7e-14; * IEEE 0,1000 30000 5.3e-12 6.3e-13; * IEEE 0,10000 250000 9.3e-11 7.1e-12; * IEEE 0,100000 10000 8.7e-10 4.8e-11; * Outputs smaller than the IEEE gradual underflow threshold; * were excluded from these statistics.; *; * ERROR MESSAGES:; * message condition value returned; * incbet domain x<0, x>1 0.0; * incbet underflow 0.0; *; * Cephes Math Library, Release 2.8: June, 2000; * Copyright 1984, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx:1200,MESSAGE,MESSAGES,1200,math/mathcore/src/SpecFuncCephes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.cxx,2,"['MESSAGE', 'message']","['MESSAGES', 'message']"
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992 Henry Spencer.; * Copyright (c) 1992, 1993; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer of the University of Toronto.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regex.h	8.1 (Berkeley) 6/2/93; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex_impl.h:1622,CONTRACT,CONTRACT,1622,interpreter/llvm-project/llvm/lib/Support/regex_impl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex_impl.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regcomp.c	8.5 (Berkeley) 3/20/94; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regerror.c	8.4 (Berkeley) 3/20/94; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regex2.h	8.4 (Berkeley) 3/20/94; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regex2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regex2.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regfree.c	8.3 (Berkeley) 3/20/94; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regfree.c:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regfree.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regfree.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*-; * This code is derived from OpenBSD's libc/regex, original license follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)utils.h	8.3 (Berkeley) 3/20/94; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regutils.h:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regutils.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * ""Large"" objects are treated the same as ""small"" ones.; * NB: although we include FAR keywords in the routine declarations,; * this file won't actually work in 80x86 small/medium model; at least,; * you probably won't be able to process useful-size images in only 64KB.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:107,rout,routine,107,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['rout'],['routine']
Integrability,/*; * $Header$; * $Log$; *; * The graphical user interface for the Neutron Cross section database; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSGui.cxx:49,interface,interface,49,test/periodic/XSGui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSGui.cxx,1,['interface'],['interface']
Integrability,"/*; * $Header$; * $Log$; *; * Various routines, and global variables; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx:38,rout,routines,38,test/periodic/XSVarious.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx,2,['rout'],['routines']
Integrability,"/*; * $XFree86: xc/include/extensions/render.h,v 1.10 2002/11/06 22:47:49 keithp Exp $; *; * Copyright © 2000 SuSE, Inc.; *; * Permission to use, copy, modify, distribute, and sell this software and its; * documentation for any purpose is hereby granted without fee, provided that; * the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of SuSE not be used in advertising or; * publicity pertaining to distribution of the software without specific,; * written prior permission. SuSE makes no representations about the; * suitability of this software for any purpose. It is provided ""as is""; * without express or implied warranty.; *; * SuSE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL SuSE; * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION; * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN; * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; *; * Author: Keith Packard, SuSE, Inc.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h:1070,CONTRACT,CONTRACT,1070,graf2d/x11/inc/X11/extensions/render.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * About virtual array management:; *; * The above ""normal"" array routines are only used to allocate strip buffers; * (as wide as the image, but just a few rows high). Full-image-sized buffers; * are handled as ""virtual"" arrays. The array is still accessed a strip at a; * time, but the memory manager must save the whole array for repeated; * accesses. The intended implementation is that there is a strip buffer in; * memory (as high as is possible given the desired memory limit), plus a; * backing file that holds the rest of the array.; *; * The request_virt_array routines are told the total size of the image and; * the maximum number of rows that will be accessed at once. The in-memory; * buffer must be at least as large as the maxaccess value.; *; * The request routines create control blocks but not the in-memory buffers.; * That is postponed until realize_virt_arrays is called. At that time the; * total amount of space needed is known (approximately, anyway), so free; * memory can be divided up fairly.; *; * The access_virt_array routines are responsible for making a specific strip; * area accessible (after reading or writing the backing file, if necessary).; * Note that the access routines are told whether the caller intends to modify; * the accessed strip; during a read-only pass this saves having to rewrite; * data to disk. The access routines are also responsible for pre-zeroing; * any newly accessed rows, if pre-zeroing was requested.; *; * In current usage, the access requests are usually for nonoverlapping; * strips; that is, successive access start_row numbers differ by exactly; * num_rows = maxaccess. This means we can get good performance with simple; * buffer dump/reload logic, by making the in-memory buffer be a multiple; * of the access height; then there will never be accesses across bufferload; * boundaries. The code will still work with overlapping access requests,; * but it doesn't handle bufferload overlaps very efficiently.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:69,rout,routines,69,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,6,['rout'],['routines']
Integrability,"/*; * Actual output of an error or trace message.; * Applications may override this method to send JPEG messages somewhere; * other than stderr.; *; * On Windows, printing to stderr is generally completely useless,; * so we provide optional code to produce an error-dialog popup.; * Most Windows applications will still prefer to override this routine,; * but if they don't, it'll do something at least marginally useful.; *; * NOTE: to use the library in an environment that doesn't support the; * C stdio library, you may have to delete the call to fprintf() entirely,; * not just not use this routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:41,message,message,41,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,4,"['message', 'rout']","['message', 'messages', 'routine']"
Integrability,"/*; * Allocation of ""large"" objects.; *; * The external semantics of these are the same as ""small"" objects,; * except that FAR pointers are used on 80x86. However the pool; * management heuristics are quite different. We assume that each; * request is large enough that it may as well be passed directly to; * jpeg_get_large; the pool management just links everything together; * so that we can free it all on demand.; * Note: the major use of ""large"" objects is in JSAMPARRAY and JBLOCKARRAY; * structures. The routines that create these structures (see below); * deliberately bunch rows together to ensure a large request size.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:512,rout,routines,512,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['rout'],['routines']
Integrability,"/*; * An inverse DCT routine is given a pointer to the input JBLOCK and a pointer; * to an output sample array. The routine must dequantize the input data as; * well as perform the IDCT; for dequantization, it uses the multiplier table; * pointed to by compptr->dct_table. The output data is to be placed into the; * sample array starting at a specified column. (Any row offset needed will; * be applied to the array pointer before it is passed to the IDCT code.); * Note that the number of samples emitted by the IDCT routine is; * DCT_h_scaled_size * DCT_v_scaled_size.; */; /* typedef inverse_DCT_method_ptr is declared in jpegint.h */; /*; * Each IDCT routine has its own ideas about the best dct_table element type.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:21,rout,routine,21,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,4,['rout'],['routine']
Integrability,"/*; * Arithmetic MCU decoding.; * Each of these routines decodes and returns one MCU's worth of; * arithmetic-compressed coefficients.; * The coefficients are reordered from zigzag order into natural array order,; * but are not dequantized.; *; * The i'th block of the MCU is stored into the block pointed to by; * MCU_data[i]. WE ASSUME THIS AREA IS INITIALLY ZEROED BY THE CALLER.; */; /*; * MCU decoding for DC initial scan (either spectral selection,; * or first pass of successive approximation).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:48,rout,routines,48,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['rout'],['routines']
Integrability,"/*; * Basic output routines.; *; * Note that we do not support suspension while writing a marker.; * Therefore, an application using suspension must ensure that there is; * enough buffer space for the initial markers (typ. 600-700 bytes) before; * calling jpeg_start_compress, and enough space to write the trailing EOI; * (a few bytes) before calling jpeg_finish_compress. Multipass compression; * modes are not supported at all with suspension, so those two are the only; * points where markers will be written.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:19,rout,routines,19,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['rout'],['routines']
Integrability,/*; * Both XXH3_64bits_update and XXH3_128bits_update use this routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:63,rout,routine,63,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['rout'],['routine']
Integrability,"/*; * C++ interface around CUDA functionality.; *; * Generally, if the call to the underlying CUDA function does not return; * `cudaSuccess`, a `std::runtime_error` is thrown.; *; * \ingroup RooFitCuda; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:10,interface,interface,10,roofit/batchcompute/src/CudaInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h,1,['interface'],['interface']
Integrability,"/*; * Calculates a 32-bit to 64-bit long multiply.; *; * Wraps __emulu on MSVC x86 because it tends to call __allmul when it doesn't; * need to (but it shouldn't need to anyways, it is about 7 instructions to do; * a 64x64 multiply...). Since we know that this will _always_ emit MULL, we; * use that instead of the normal method.; *; * If you are compiling for platforms like Thumb-1 and don't have a better option,; * you may also want to write your own long multiply routine here.; *; * XXH_FORCE_INLINE xxh_u64 XXH_mult32to64(xxh_u64 x, xxh_u64 y); * {; * return (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF);; * }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:57,Wrap,Wraps,57,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,"['Wrap', 'rout']","['Wraps', 'routine']"
Integrability,"/*; * Check the upper and lower edge of ""regUp"", to make sure that the; * eUp->Dst is above eLo, or eLo->Dst is below eUp (depending on which; * destination is rightmost).; *; * Theoretically, this should always be true. However, splitting an edge; * into two pieces can change the results of previous tests. For example,; * suppose at one point we checked eUp and eLo, and decided that eUp->Dst; * is barely above eLo. Then later, we split eLo into two edges (eg. from; * a splice operation like this one). This can change the result of; * the test so that now eUp->Dst is incident to eLo, or barely below it.; * We must correct this condition to maintain the dictionary invariants; * (otherwise new edges might get inserted in the wrong place in the; * dictionary, and bad stuff will happen).; *; * We fix the problem by just splicing the offending vertex into the; * other edge.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:123,depend,depending,123,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['depend'],['depending']
Integrability,"/*; * Check the upper and lower edge of ""regUp"", to make sure that the; * eUp->Org is above eLo, or eLo->Org is below eUp (depending on which; * origin is leftmost).; *; * The main purpose is to splice right-going edges with the same; * dest vertex and nearly identical slopes (ie. we can't distinguish; * the slopes numerically). However the splicing can also help us; * to recover from numerical errors. For example, suppose at one; * point we checked eUp and eLo, and decided that eUp->Org is barely; * above eLo. Then later, we split eLo into two edges (eg. from; * a splice operation like this one). This can change the result of; * our test so that now eUp->Org is incident to eLo, or barely below it.; * We must correct this condition to maintain the dictionary invariants.; *; * One possibility is to check these edges for intersection again; * (ie. CheckForIntersect). This is what we do if possible. However; * CheckForIntersect requires that tess->event lies between eUp and eLo,; * so that it has something to fall back on when the intersection; * calculation gives us an unusable answer. So, for those cases where; * we can't check for intersection, this routine fixes the problem; * by just splicing the offending vertex into the other edge.; * This is a guaranteed solution, no matter how degenerate things get.; * Basically this is a combinatorial solution to a numerical problem.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:123,depend,depending,123,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"/*; * Compression initialization for writing raw-coefficient data.; * Before calling this, all parameters and a data destination must be set up.; * Call jpeg_finish_compress() to actually write the data.; *; * The number of passed virtual arrays must match cinfo->num_components.; * Note that the virtual arrays need not be filled or even realized at; * the time write_coefficients is called; indeed, if the virtual arrays; * were requested from this compression object's memory manager, they; * typically will be realized during this routine and filled afterwards.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c:535,rout,routine,535,graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,1,['rout'],['routine']
Integrability,/*; * Compute the derived values for a Huffman table.; * This routine also performs some validation checks on the table.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:62,rout,routine,62,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,2,['rout'],['routine']
Integrability,"/*; * Consider all system dependent encodings, for any system,; * and the extra encodings.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c:26,depend,dependent,26,graf2d/win32gdk/gdk/src/iconv/iconv.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c,1,['depend'],['dependent']
Integrability,/*; * Consider those system dependent encodings that are needed for the; * current system.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c:28,depend,dependent,28,graf2d/win32gdk/gdk/src/iconv/iconv.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c,1,['depend'],['dependent']
Integrability,"/*; * Consume data in advance of what the decompressor requires.; * This can be called at any time once the decompressor object has; * been created and a data source has been set up.; *; * This routine is essentially a state machine that handles a couple; * of critical state-transition actions, namely initial setup and; * transition from header scanning to ready-for-start_decompress.; * All the actual input is done via the input controller's consume_input; * method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:194,rout,routine,194,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,1,['rout'],['routine']
Integrability,"/*; * Control routine to do upsampling (and color conversion).; *; * In this version we upsample each component independently.; * We upsample one row group into the conversion buffer, then apply; * color conversion a row at a time.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['rout'],['routine']
Integrability,/*; * Control routine to do upsampling (and color conversion).; *; * The control routine just handles the row buffering considerations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,2,['rout'],['routine']
Integrability,/*; * Convenience routines for allocating quantization and Huffman tables.; * (Would jutils.c be a more reasonable place to put these?); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c:18,rout,routines,18,graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,1,['rout'],['routines']
Integrability,"/*; * Copyright (C) 1999-2000 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * UCS-4-INTERNAL = UCS-4 with machine dependent endianness and alignment; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/ucs4internal.h:967,depend,dependent,967,graf2d/win32gdk/gdk/src/iconv/ucs4internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/ucs4internal.h,1,['depend'],['dependent']
Integrability,"/*; * Copyright (C) 1999-2001 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * UCS-2-INTERNAL = UCS-2 with machine dependent endianness and alignment; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/ucs2internal.h:967,depend,dependent,967,graf2d/win32gdk/gdk/src/iconv/ucs2internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/ucs2internal.h,1,['depend'],['dependent']
Integrability,"/*; * Copyright (c) 2016-2020, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* This file provides common libc dependencies that zstd requires.; * The purpose is to allow replacing this file with a custom implementation; * to compile zstd without libc support.; */; /* Need:; * NULL; * INT_MAX; * UINT_MAX; * ZSTD_memcpy(); * ZSTD_memset(); * ZSTD_memmove(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_deps.h:407,depend,dependencies,407,builtins/zstd/common/zstd_deps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_deps.h,1,['depend'],['dependencies']
Integrability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* *****************************************************************************; * Constructs a dictionary using a heuristic based on the following paper:; *; * Liao, Petri, Moffat, Wirth; * Effective Construction of Relative Lempel-Ziv Dictionaries; * Published in WWW 2016.; *; * Adapted from code originally written by @ot (Giuseppe Ottaviano).; ******************************************************************************/; /*-*************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:861,Depend,Dependencies,861,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['Depend'],['Dependencies']
Integrability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* ====== Dependencies ======= */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:396,Depend,Dependencies,396,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['Depend'],['Dependencies']
Integrability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* zstd_ddict.c :; * concentrates all logic that needs to know the internals of ZSTD_DDict object */; /*-*******************************************************; * Dependencies; *********************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c:550,Depend,Dependencies,550,builtins/zstd/decompress/zstd_ddict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c,1,['Depend'],['Dependencies']
Integrability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* zstd_decompress_block :; * this module takes care of decompressing _compressed_ block */; /*-*******************************************************; * Dependencies; *********************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c:541,Depend,Dependencies,541,builtins/zstd/decompress/zstd_decompress_block.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress_block.c,1,['Depend'],['Dependencies']
Integrability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /*-*************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c:430,Depend,Dependencies,430,builtins/zstd/common/zstd_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_common.c,5,['Depend'],['Dependencies']
Integrability,"/*; * Copyright (c) 2018-2020, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /*-*************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c:417,Depend,Dependencies,417,builtins/zstd/dictBuilder/fastcover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/fastcover.c,1,['Depend'],['Dependencies']
Integrability,/*; * Create the message string table.; * We do this from the master message list in jerror.h by re-reading; * jerror.h with a suitable definition for macro JMESSAGE.; * The message table is made an external symbol just in case any applications; * want to refer to it directly.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:17,message,message,17,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,3,['message'],['message']
Integrability,/*; * Create the wrapped-around downsampling input buffer needed for context mode.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:17,wrap,wrapped-around,17,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['wrap'],['wrapped-around']
Integrability,"/*; * Creation of 2-D sample arrays.; * The pointers are in near heap, the samples themselves in FAR heap.; *; * To minimize allocation overhead and to allow I/O of large contiguous; * blocks, we allocate the sample rows in groups of as many rows as possible; * without exceeding MAX_ALLOC_CHUNK total bytes per allocation request.; * NB: the virtual array control routines, later in this file, know about; * this chunking of rows. The rowsperchunk value is left in the mem manager; * object so that it can be saved away if this sarray is the workspace for; * a virtual array.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:365,rout,routines,365,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['rout'],['routines']
Integrability,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:40,depend,dependent,40,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['dependent']
Integrability,"/*; * Decide whether to emit a trace or warning message.; * msg_level is one of:; * -1: recoverable corrupt-data warning, may want to abort.; * 0: important advisory messages (always display to user).; * 1: first level of tracing detail.; * 2,3,...: successively more detailed tracing messages.; * An application might override this method if it wanted to abort on warnings; * or change the policy about which messages to display.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:48,message,message,48,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,4,['message'],"['message', 'messages']"
Integrability,"/*; * Decompression startup: read start of JPEG datastream to see what's there.; * Need only initialize JPEG object and supply a data source before calling.; *; * This routine will read as far as the first SOS marker (ie, actual start of; * compressed data), and will save all tables and parameters in the JPEG; * object. It will also initialize the decompression parameters to default; * values, and finally return JPEG_HEADER_OK. On return, the application may; * adjust the decompression parameters and then call jpeg_start_decompress.; * (Or, if the application only wanted to determine the image parameters,; * the data need not be decompressed. In that case, call jpeg_abort or; * jpeg_destroy to release any temporary space.); * If an abbreviated (tables only) datastream is presented, the routine will; * return JPEG_HEADER_TABLES_ONLY upon reaching EOI. The application may then; * re-use the JPEG object to read the abbreviated image datastream(s).; * It is unnecessary (but OK) to call jpeg_abort in this case.; * The JPEG_SUSPENDED return code only occurs if the data source module; * requests suspension of the decompressor. In this case the application; * should load more source data and then re-call jpeg_read_header to resume; * processing.; * If a non-suspending data source is used and require_image is TRUE, then the; * return code need not be inspected since only JPEG_HEADER_OK is possible.; *; * This routine is now just a front end to jpeg_consume_input, with some; * extra error checking.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:168,rout,routine,168,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,3,['rout'],['routine']
Integrability,"/*; * Default parameter setup for compression.; *; * Applications that don't choose to use this routine must do their; * own setup of all these parameters. Alternately, you can call this; * to establish defaults and then alter parameters selectively. This; * is the recommended approach since, if we add any new parameters,; * your code will still work (they'll be set to reasonable defaults).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:96,rout,routine,96,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routine']
Integrability,"/*; * Delete any degenerate faces with only two edges. WalkDirtyRegions(); * will catch almost all of these, but it won't catch degenerate faces; * produced by splice operations on already-processed edges.; * The two places this can happen are in FinishLeftRegions(), when; * we splice in a ""temporary"" edge produced by ConnectRightVertex(),; * and in CheckForLeftSplice(), where we splice already-processed; * edges to ensure that our dictionary invariants are not violated; * by numerical errors.; *; * In both these cases it is *very* dangerous to delete the offending; * edge at the time, since one of the routines further up the stack; * will sometimes be keeping a pointer to that edge.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:610,rout,routines,610,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['rout'],['routines']
Integrability,/*; * Dummy consume-input routine for single-pass operation.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:26,rout,routine,26,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['rout'],['routine']
Integrability,"/*; * Error exit handler: must not return to caller.; *; * Applications may override this if they want to get control back after; * an error. Typically one would longjmp somewhere instead of exiting.; * The setjmp buffer can be made a private field within an expanded error; * handler object. Note that the info needed to generate an error message; * is stored in the error object, so you can generate the message now or; * later, at your convenience.; * You should make sure that the JPEG object is cleaned up (with jpeg_abort; * or jpeg_destroy) at some point.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:340,message,message,340,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,2,['message'],['message']
Integrability,"/*; * Fill the input buffer --- called whenever buffer is emptied.; *; * In typical applications, this should read fresh data into the buffer; * (ignoring the current state of next_input_byte & bytes_in_buffer),; * reset the pointer & count to the start of the buffer, and return TRUE; * indicating that the buffer has been reloaded. It is not necessary to; * fill the buffer entirely, only to obtain at least one more byte.; *; * There is no such thing as an EOF return. If the end of the file has been; * reached, the routine has a choice of ERREXIT() or inserting fake data into; * the buffer. In most cases, generating a warning message and inserting a; * fake EOI marker is the best course of action --- this will allow the; * decompressor to output however much of the image is there. However,; * the resulting error message is misleading if the real problem is an empty; * input file, so we handle that case specially.; *; * In applications that need to be able to suspend compression due to input; * not being available yet, a FALSE return indicates that no more data can be; * obtained right now, but more may be forthcoming later. In this situation,; * the decompressor will return to its caller (with an indication of the; * number of scanlines it has read, if any). The application should resume; * decompression after it has loaded more data into the input buffer. Note; * that there are substantial restrictions on the use of suspension --- see; * the documentation.; *; * When suspending, the decompressor will back up to a convenient restart point; * (typically the start of the current MCU). next_input_byte & bytes_in_buffer; * indicate where the restart point will be if the current call returns FALSE.; * Data beyond this point must be rescanned after resumption, so move it to; * the front of the buffer rather than discarding it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:520,rout,routine,520,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,3,"['message', 'rout']","['message', 'routine']"
Integrability,"/*; * First we have the histogram data structure and routines for creating it.; *; * The number of bits of precision can be adjusted by changing these symbols.; * We recommend keeping 6 bits for G and 5 each for R and B.; * If you have plenty of memory and cycles, 6 bits all around gives marginally; * better results; if you are short of memory, 5 bits all around will save; * some space but degrade the results.; * To maintain a fully accurate histogram, we'd need to allocate a ""long""; * (preferably unsigned long) for each cell. In practice this is overkill;; * we can get by with 16 bits per cell. Few of the cell counts will overflow,; * and clamping those that do overflow to the maximum value will give close-; * enough results. This reduces the recommended histogram size from 256Kb; * to 128Kb, which is a useful savings on PC-class machines.; * (In the second pass the histogram space is re-used for pixel mapping data;; * in that capacity, each cell must be able to store zero to the number of; * desired colors. 16 bits/cell is plenty for that too.); * Since the JPEG code is intended to run in small memory model on 80x86; * machines, we can't just allocate the histogram in one chunk. Instead; * of a true 3-D array, we use a row of pointers to 2-D arrays. Each; * pointer corresponds to a C0 value (typically 2^5 = 32 pointers) and; * each 2-D array has 2^6*2^5 = 2048 or 2^6*2^6 = 4096 entries. Note that; * on 80x86 machines, the pointer row is in near memory but the actual; * arrays are in far memory (same arrangement as we use for image arrays).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:53,rout,routines,53,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['rout'],['routines']
Integrability,"/*; * For a Mach-O universal binary file, retrieves the object file corresponding; * to the given architecture if it is present as a slice.; *; * If NULL is returned, the \p ErrorMessage parameter is populated with the; * error's description. It is then the caller's responsibility to free this; * message by calling \c LLVMDisposeMessage.; *; * It is the responsiblity of the caller to free the returned object file by; * calling \c LLVMDisposeBinary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:298,message,message,298,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,1,['message'],['message']
Integrability,"/*; * For the simple (no-context-row) case, we just need to buffer one; * row group's worth of pixels for the downsampling step. At the bottom of; * the image, we pad to a full row group by replicating the last pixel row.; * The downsampler's last output row is then replicated if needed to pad; * out to a full iMCU row.; *; * When providing context rows, we must buffer three row groups' worth of; * pixels. Three row groups are physically allocated, but the row pointer; * arrays are made five row groups high, with the extra pointers above and; * below ""wrapping around"" to point to the last and first real row groups.; * This allows the downsampler to access the proper context rows.; * At the top and bottom of the image, we create dummy context rows by; * copying the first or last real pixel row. This copying could be avoided; * by pointer hacking as is done in jdmainct.c, but it doesn't seem worth the; * trouble on the compression side.; */; /* Private buffer controller object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:558,wrap,wrapping,558,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['wrap'],['wrapping']
Integrability,"/*; * Forcibly suppress or un-suppress all quantization and Huffman tables.; * Marks all currently defined tables as already written (if suppress); * or not written (if !suppress). This will control whether they get emitted; * by a subsequent jpeg_start_compress call.; *; * This routine is exported for use by applications that want to produce; * abbreviated JPEG datastreams. It logically belongs in jcparam.c, but; * since it is called by jpeg_start_compress, we put it here --- otherwise; * jcparam.o would be linked whether the application used it or not.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:280,rout,routine,280,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,1,['rout'],['routine']
Integrability,"/*; * Format a message string for the most recent JPEG error or message.; * The message is stored into buffer, which should be at least JMSG_LENGTH_MAX; * characters. Note that no '\n' character is added to the string.; * Few applications should need to override this method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:15,message,message,15,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,3,['message'],['message']
Integrability,"/*; * Future possibility: a second group type indicating a set of library; * directories that are mutually _dependent_ rather than mutually exclusive:; * if you include one you must include them all.; *; * It might also be useful to allow groups to be members of other groups, so; * that a mutually exclusive group could contain a mutually dependent set of; * library directories, or vice versa.; *; * These additional features would need changes in the implementation, but; * the YAML schema is set up so they can be added without requiring changes; * in existing users' multilib.yaml files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Multilib.cpp:340,depend,dependent,340,interpreter/llvm-project/clang/lib/Driver/Multilib.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Multilib.cpp,1,['depend'],['dependent']
Integrability,"/*; * Huffman MCU decoding.; * Each of these routines decodes and returns one MCU's worth of; * Huffman-compressed coefficients. ; * The coefficients are reordered from zigzag order into natural array order,; * but are not dequantized.; *; * The i'th block of the MCU is stored into the block pointed to by; * MCU_data[i]. WE ASSUME THIS AREA IS INITIALLY ZEROED BY THE CALLER.; * (Wholesale zeroing is usually a little faster than retail...); *; * We return FALSE if data source requested suspension. In that case no; * changes have been made to permanent state. (Exception: some output; * coefficients may already have been assigned. This is harmless for; * spectral selection, since we'll just re-assign them on the next call.; * Successive approximation AC refinement has to be more careful, however.); */; /*; * MCU decoding for DC initial scan (either spectral selection,; * or first pass of successive approximation).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:45,rout,routines,45,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['rout'],['routines']
Integrability,/*; * Huffman table setup routines; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:26,rout,routines,26,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routines']
Integrability,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:123,contract,contract,123,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['contract'],['contract']
Integrability,"/*; * If an action is to be taken if `secret` conditions are not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:122,contract,contract,122,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['contract'],['contract']
Integrability,"/*; * In case of a read-only mapping, we need to call this routine to; * keep the mapping in sync with the mapping of the writer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:59,rout,routine,59,core/clib/src/mmapsup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c,1,['rout'],['routine']
Integrability,"/*; * Initial opening of a backing-store object. This must fill in the; * read/write/close pointers in the object. The read/write routines; * may take an error exit if the specified maximum file size is exceeded.; * (If jpeg_mem_available always returns a large value, this routine can; * just take an error exit.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:130,rout,routines,130,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,2,['rout'],"['routine', 'routines']"
Integrability,"/*; * LZ4 - Fast LZ compression algorithm; * Header File; * Copyright (C) 2011-present, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - LZ4 homepage : http://www.lz4.org; - LZ4 source repository : https://github.com/lz4/lz4; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1247,CONTRACT,CONTRACT,1247,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * Lossless image transformation routines. These routines work on DCT; * coefficient arrays and thus do not require any lossy decompression; * or recompression of the image.; * Thanks to Guido Vollbeding for the initial design and code of this feature,; * and to Ben Jackson for introducing the cropping feature.; *; * Horizontal flipping is done in-place, using a single top-to-bottom; * pass through the virtual source array. It will thus be much the; * fastest option for images larger than main memory.; *; * The other routines require a set of destination virtual arrays, so they; * need twice as much memory as jpegtran normally does. The destination; * arrays are always written in normal scan order (top to bottom) because; * the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:36,rout,routines,36,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,3,['rout'],['routines']
Integrability,/*; * Memory allocation and freeing are controlled by the regular library; * routines malloc() and free().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:77,rout,routines,77,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['rout'],['routines']
Integrability,/*; * Module initialization routine for 1-pass color quantization.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for 2-pass color quantization.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for Huffman entropy decoding.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for Huffman entropy encoding.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for arithmetic entropy decoding.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for arithmetic entropy encoding.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for input colorspace conversion.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for merged upsampling/color conversion.; *; * NB: this is called under the conditions determined by use_merged_upsample(); * in jdmaster.c. That routine MUST correspond to the actual capabilities; * of this module; no safety checks are made here.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,2,['rout'],['routine']
Integrability,/*; * Module initialization routine for output colorspace conversion.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for progressive Huffman entropy encoding.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,1,['rout'],['routine']
Integrability,/*; * Module initialization routine for upsampling.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['rout'],['routine']
Integrability,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:675,interface,interfaces,675,hist/histv7/inc/ROOT/RHistView.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx,1,['interface'],['interfaces']
Integrability,"/*; * Next we have the really interesting routines: selection of a colormap; * given the completed histogram.; * These routines work with a list of ""boxes"", each representing a rectangular; * subset of the input color space (to histogram precision).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:42,rout,routines,42,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['rout'],['routines']
Integrability,"/*; * Once the bits are split out into bytes of UTF-8, this is a mask OR-ed; * into the first byte, depending on how many bytes follow. There are; * as many entries in this table as there are UTF-8 sequence types.; * (I.e., one byte sequence, two byte... etc.). Remember that sequencs; * for *legal* UTF-8 will be 4 or fewer bytes total.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:100,depend,depending,100,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['depend'],['depending']
Integrability,"/*; * Perform dequantization and inverse DCT on one block of coefficients,; * producing a reduced-size 1x1 output block.; *; * We hardly need an inverse DCT routine for this: just take the; * average pixel value, which is one-eighth of the DC coefficient.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:157,rout,routine,157,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['rout'],['routine']
Integrability,"/*; * Policy-making subroutines for create_colormap and create_colorindex.; * These routines determine the colormap to be used. The rest of the module; * only assumes that the colormap is orthogonal.; *; * * select_ncolors decides how to divvy up the available colors; * among the components.; * * output_value defines the set of representative values for a component.; * * largest_input_value defines the mapping from input values to; * representative values for a component.; * Note that the latter two routines may impose different policies for; * different components, though this is not currently done.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:84,rout,routines,84,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['rout'],['routines']
Integrability,/*; * Prepare for an output pass.; * Here we select the proper IDCT routine for each component and build; * a matching multiplier table.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:68,rout,routine,68,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,1,['rout'],['routine']
Integrability,"/*; * Process some data in the first pass of a multi-pass case.; * We process the equivalent of one fully interleaved MCU row (""iMCU"" row); * per call, ie, v_samp_factor block rows for each component in the image.; * This amount of data is read from the source buffer, DCT'd and quantized,; * and saved into the virtual arrays. We also generate suitable dummy blocks; * as needed at the right and lower edges. (The dummy blocks are constructed; * in the virtual arrays, which have been padded appropriately.) This makes; * it possible for subsequent passes not to worry about real vs. dummy blocks.; *; * We must also emit the data to the entropy encoder. This is conveniently; * done by calling compress_output() after we've loaded the current strip; * of the virtual arrays.; *; * NB: input_buf contains a plane for each component in image. All; * components are DCT'd and loaded into the virtual arrays in this pass.; * However, it may be that only a subset of the components are emitted to; * the entropy encoder during this first pass; be careful about looking; * at the scan-dependent variables (MCU dimensions, etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c:1081,depend,dependent,1081,graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,1,['depend'],['dependent']
Integrability,/*; * Process some data.; * This routine handles all of the modes that use a full-size buffer.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:33,rout,routine,33,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,1,['rout'],['routine']
Integrability,"/*; * Process some data.; * This routine handles the simple pass-through mode,; * where we have only a strip buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c:33,rout,routine,33,graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmainct.c,1,['rout'],['routine']
Integrability,"/*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Evaluator.cxx; \class RooFit::Evaluator; \ingroup Roofitcore. Evaluates a RooAbsReal object in other ways than recursive graph; traversal. Currently, it is being used for evaluating a RooAbsReal object and; supplying the value to the minimizer, during a fit. The class scans the; dependencies and schedules the computations in a secure and efficient way. The; computations take place in the RooBatchCompute library and can be carried off; by either the CPU or a CUDA-supporting GPU. The Evaluator class takes care; of data transfers. An instance of this class is created every time; RooAbsPdf::fitTo() is called and gets destroyed when the fitting ends.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:617,depend,dependencies,617,roofit/roofitcore/src/RooFit/Evaluator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx,1,['depend'],['dependencies']
Integrability,"/*; * Project: RooFit; * Authors:; * Robin Syring, CERN 2024; *; * Copyright (c) 2024, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooPyBind; \ingroup Roofit; \brief A RooFit class for wrapping python functions. This clsss provides the functionality to wrap arbitrary python functions in; RooFit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h:354,wrap,wrapping,354,roofit/roofit/inc/RooPyBind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooPyBind.h,2,['wrap'],"['wrap', 'wrapping']"
Integrability,"/*; * Project: xRooFit; * Author:; * Will Buttinger, RAL 2022; *; * Copyright (c) 2022, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class ROOT::Experimental::XRooFit::xRooNode; \ingroup xroofit. The xRooNode class is designed to wrap over a TObject and provide functionality to aid with interacting with that; object, particularly in the case where the object is a RooFit class instance. It is a smart pointer to the object, so; you have access to all the methods of the object too. xRooNode is designed to work in both python and C++, but examples below are given in python because that is imagined; be the most common way to use the xRooFit API. -# [Exploring workspaces](\ref exploring-workspaces). \anchor exploring-workspaces; ## Exploring workspaces. An existing workspace file (either a ROOT file containing a RooWorkspace, or a json HS3 file) can be opened using; xRooNode like this:. \code{.py}; from ROOT.Experimental import XRooFit; w = XRooFit.xRooNode(""workspace.root"") # or can use workspace.json for HS3; \endcode. You can explore the content of the workspace somewhat like you would a file system: each node contains sub-nodes,; which you can interact with to explore ever deeper. The most relevant methods for navigating the workspace and; exploring the content are:. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:392,wrap,wrap,392,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['wrap'],['wrap']
Integrability,/*; * Protocol requests constants and alignment values; * These would really be in SHAPE's X.h and Xproto.h equivalents; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shapeconst.h:6,Protocol,Protocol,6,graf2d/x11/inc/X11/extensions/shapeconst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shapeconst.h,1,['Protocol'],['Protocol']
Integrability,/*; * Quantization table setup routines; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:31,rout,routines,31,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routines']
Integrability,"/*; * Read JPEG markers before, between, or after compressed-data scans.; * Change state as necessary when a new scan is reached.; * Return value is JPEG_SUSPENDED, JPEG_REACHED_SOS, or JPEG_REACHED_EOI.; *; * The consume_input method pointer points either here or to the; * coefficient controller's consume_data routine, depending on whether; * we are reading a compressed data segment or inter-segment markers.; *; * Note: This function should NOT return a pseudo SOS marker (with zero; * component number) to the caller. A pseudo marker received by; * read_markers is processed and then skipped for other markers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:313,rout,routine,313,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"/*; * Routines for processing APPn and COM markers.; * These are either saved in memory or discarded, per application request.; * APP0 and APP14 are specially checked to see if they are; * JFIF and Adobe markers, respectively.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:6,Rout,Routines,6,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Rout'],['Routines']
Integrability,/*; * Routines to calculate various quantities related to the size of the image.; */; /*; * Compute output image dimensions and related values.; * NOTE: this is exported for possible use by application.; * Hence it mustn't do anything that can't be done twice.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:6,Rout,Routines,6,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,1,['Rout'],['Routines']
Integrability,"/*; * Routines to process JPEG markers.; *; * Entry condition: JPEG marker itself has been read and its code saved; * in cinfo->unread_marker; input restart point is just after the marker.; *; * Exit: if return TRUE, have read and processed any parameters, and have; * updated the restart point to point after the parameters.; * If return FALSE, was forced to suspend before reaching end of; * marker parameters; restart point has not been moved. Same routine; * will be called again after application supplies more input data.; *; * This approach to suspension assumes that all of a marker's parameters; * can fit into a single input bufferload. This should hold for ""normal""; * markers. Some COM/APPn markers might have large parameter segments; * that might not fit. If we are simply dropping such a marker, we use; * skip_input_data to get past it, and thereby put the problem on the; * source manager's shoulders. If we are saving the marker's contents; * into memory, we use a slightly different convention: when forced to; * suspend, the marker processor updates the restart point to the end of; * what it's consumed (ie, the end of the buffer) before returning FALSE.; * On resumption, cinfo->unread_marker still contains the marker code,; * but the data source will point to the next chunk of marker data.; * The marker processor must retain internal state to deal with this.; *; * Note that we don't bother to avoid duplicate trace messages if a; * suspension occurs within marker parameters. Other side effects; * require more care.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:6,Rout,Routines,6,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,3,"['Rout', 'message', 'rout']","['Routines', 'messages', 'routine']"
Integrability,/*; * Routines to write specific marker types.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:6,Rout,Routines,6,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['Rout'],['Routines']
Integrability,"/*; * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008); * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice including the dates of first publication and; * either this permission notice or a reference to; * http://oss.sgi.com/projects/FreeB/; * shall be included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF; * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; *; * Except as contained in this notice, the name of Silicon Graphics, Inc.; * shall not be used in advertising or otherwise to promote the sale, use or; * other dealings in this Software without prior written authorization from; * Silicon Graphics, Inc.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/GL_glu.h:1170,CONTRACT,CONTRACT,1170,graf3d/eve7/glu/GL_glu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/GL_glu.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008); * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice including the dates of first publication and; * either this permission notice or a reference to; * http://oss.sgi.com/projects/FreeB/; * shall be included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF; * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; *; * Except as contained in this notice, the name of Silicon Graphics, Inc.; * shall not be used in advertising or otherwise to promote the sale, use or; * other dealings in this Software without prior written authorization from; * Silicon Graphics, Inc.; */; /*; ** Author: Eric Veach, July 1994.; **; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/dict-list.h:1170,CONTRACT,CONTRACT,1170,graf3d/eve7/glu/dict-list.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/dict-list.h,24,['CONTRACT'],['CONTRACT']
Integrability,"/*; * Set the JPEG colorspace, and choose colorspace-dependent default values.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:53,depend,dependent,53,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['depend'],['dependent']
Integrability,"/*; * Several decompression processes need to range-limit values to the range; * 0..MAXJSAMPLE; the input value may fall somewhat outside this range; * due to noise introduced by quantization, roundoff error, etc. These; * processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:596,rout,routine,596,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['rout'],['routine']
Integrability,/*; * Simple error-printing.; *; * Note that gBitsVerbose defaults to 0 and is a compilation-time change one; * must do to get an error message back.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:136,message,message,136,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['message'],['message']
Integrability,"/*; * Some important notes:; * The allocation routines provided here must never return NULL.; * They should exit to error_exit if unsuccessful.; *; * It's not a good idea to try to merge the sarray and barray routines,; * even though they are textually almost the same, because samples are; * usually stored as bytes while coefficients are shorts or ints. Thus,; * in machines where byte pointers have a different representation from; * word pointers, the resulting machine code could not be the same.; */; /*; * Many machines require storage alignment: longs must start on 4-byte; * boundaries, doubles on 8-byte boundaries, etc. On such machines, malloc(); * always returns pointers that are multiples of the worst-case alignment; * requirement, and we had better do so too.; * There isn't any really portable way to determine the worst-case alignment; * requirement. This module assumes that the alignment requirement is; * multiples of sizeof(ALIGN_TYPE).; * By default, we define ALIGN_TYPE as double. This is necessary on some; * workstations (where doubles really do need 8-byte alignment) and will work; * fine on nearly everything. If your machine has lesser alignment needs,; * you can save a few bytes by making ALIGN_TYPE smaller.; * The only place I know of where this will NOT work is certain Macintosh; * 680x0 compilers that define double as a 10-byte IEEE extended float.; * Doing 10-byte alignment is counterproductive because longwords won't be; * aligned well. Put ""#define ALIGN_TYPE long"" in jconfig.h if you have; * such a compiler.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:46,rout,routines,46,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['rout'],['routines']
Integrability,"/*; * Special start-of-pass hook.; * This is called by jpeg_write_scanlines if call_pass_startup is TRUE.; * In single-pass processing, we need this hook because we don't want to; * write frame/scan headers during jpeg_start_compress; we want to let the; * application write COM markers etc. between jpeg_start_compress and the; * jpeg_write_scanlines loop.; * In multi-pass processing, this routine is not used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:392,rout,routine,392,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['rout'],['routine']
Integrability,/*; * Support routines that do various essential calculations.; */; /*; * Compute JPEG image dimensions and related values.; * NOTE: this is exported for possible use by application.; * Hence it mustn't do anything that can't be done twice.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:14,rout,routines,14,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['rout'],['routines']
Integrability,/*; * System dependent alias lookup function.; * Defines; * const struct alias * aliases2_lookup (const char *str);; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c:13,depend,dependent,13,graf2d/win32gdk/gdk/src/iconv/iconv.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.c,1,['depend'],['dependent']
Integrability,"/*; * The control blocks for virtual arrays.; * Note that these blocks are allocated in the ""small"" pool area.; * System-dependent info for the associated backing store (if any) is hidden; * inside the backing_store_info struct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:121,depend,dependent,121,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['depend'],['dependent']
Integrability,"/*; * The core arithmetic decoding routine (common in JPEG and JBIG).; * This needs to go as fast as possible.; * Machine-dependent optimization facilities; * are not utilized in this portable implementation.; * However, this code should be fairly efficient and; * may be a good base for further optimizations anyway.; *; * Return value is 0 or 1 (binary decision).; *; * Note: I've changed the handling of the code base & bit; * buffer register C compared to other implementations; * based on the standards layout & procedures.; * While it also contains both the actual base of the; * coding interval (16 bits) and the next-bits buffer,; * the cut-point between these two parts is floating; * (instead of fixed) with the bit shift counter CT.; * Thus, we also need only one (variable instead of; * fixed size) shift for the LPS/MPS decision, and; * we can get away with any renormalization update; * of C (except for new data insertion, of course).; *; * I've also introduced a new scheme for accessing; * the probability estimation state machine table,; * derived from Markus Kuhn's JBIG implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:35,rout,routine,35,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,"/*; * The core arithmetic encoding routine (common in JPEG and JBIG).; * This needs to go as fast as possible.; * Machine-dependent optimization facilities; * are not utilized in this portable implementation.; * However, this code should be fairly efficient and; * may be a good base for further optimizations anyway.; *; * Parameter 'val' to be encoded may be 0 or 1 (binary decision).; *; * Note: I've added full ""Pacman"" termination support to the; * byte output routines, which is equivalent to the optional; * Discard_final_zeros procedure (Figure D.15) in the spec.; * Thus, we always produce the shortest possible output; * stream compliant to the spec (no trailing zero bytes,; * except for FF stuffing).; *; * I've also introduced a new scheme for accessing; * the probability estimation state machine table,; * derived from Markus Kuhn's JBIG implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:35,rout,routine,35,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,3,"['depend', 'rout']","['dependent', 'routine', 'routines']"
Integrability,"/*; * The decompressor input side (jdinput.c) saves away the appropriate; * quantization table for each component at the start of the first scan; * involving that component. (This is necessary in order to correctly; * decode files that reuse Q-table slots.); * When we are ready to make an output pass, the saved Q-table is converted; * to a multiplier table that will actually be used by the IDCT routine.; * The multiplier table contents are IDCT-method-dependent. To support; * application changes in IDCT method between scans, we can remake the; * multiplier tables if necessary.; * In buffered-image mode, the first output pass may occur before any data; * has been seen for some components, and thus before their Q-tables have; * been saved away. To handle this case, multiplier tables are preset; * to zeroes; the result of the IDCT will be a neutral gray level.; */; /* Private subobject for this module */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:398,rout,routine,398,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,/*; * The following function adds a global filter for all client; * messages of type message_type; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h:68,message,messages,68,graf2d/win32gdk/gdk/src/gdk/gdkevents.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkevents.h,1,['message'],['messages']
Integrability,"/*; * The next three routines implement inverse colormap filling. They could; * all be folded into one big routine, but splitting them up this way saves; * some stack space (the mindist[] and bestdist[] arrays need not coexist); * and may allow some compilers to produce better code by registerizing more; * inner-loop variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:21,rout,routines,21,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['rout'],"['routine', 'routines']"
Integrability,"/*; * These are the routines invoked by sep_upsample to upsample pixel values; * of a single component. One row group is processed per call.; */; /*; * For full-size components, we just make color_buf[ci] point at the; * input buffer, and thus avoid copying any data. Note that this is; * safe only because sep_upsample doesn't declare the input row group; * ""consumed"" until we are done color converting and emitting it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:20,rout,routines,20,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['rout'],['routines']
Integrability,"/*; * These are the routines invoked by the control routines to do; * the actual upsampling/conversion. One row group is processed per call.; *; * Note: since we may be writing directly into application-supplied buffers,; * we have to be honest about the output width; we can't assume the buffer; * has been rounded up to an even width.; */; /*; * Upsample and color convert for the case of 2:1 horizontal and 1:1 vertical.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c:20,rout,routines,20,graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,2,['rout'],['routines']
Integrability,/*; * These routines allow writing an arbitrary marker with parameters.; * The only intended use is to emit COM or APPn markers after calling; * write_file_header and before calling write_frame_header.; * Other uses are not guaranteed to produce desirable results.; * Counting the parameter bytes properly is the caller's responsibility.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:12,rout,routines,12,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['rout'],['routines']
Integrability,"/*; * These routines are concerned with the time-critical task of mapping input; * colors to the nearest color in the selected colormap.; *; * We re-use the histogram space as an ""inverse color map"", essentially a; * cache for the results of nearest-color searches. All colors within a; * histogram cell will be mapped to the same colormap entry, namely the one; * closest to the cell's center. This may not be quite the closest entry to; * the actual input color, but it's almost as good. A zero in the cache; * indicates we haven't found the nearest color for that cell yet; the array; * is cleared to zeroes before starting the mapping pass. When we find the; * nearest color for a cell, its colormap index plus one is recorded in the; * cache for future use. The pass2 scanning routines call fill_inverse_cmap; * when they need to use an unfilled entry in the cache.; *; * Our method of efficiently finding nearest colors is based on the ""locally; * sorted search"" idea described by Heckbert and on the incremental distance; * calculation described by Spencer W. Thomas in chapter III.1 of Graphics; * Gems II (James Arvo, ed. Academic Press, 1991). Thomas points out that; * the distances from a given colormap entry to each cell of the histogram can; * be computed quickly using an incremental method: the differences between; * distances to adjacent cells themselves differ by a constant. This allows a; * fairly fast implementation of the ""brute force"" approach of computing the; * distance from every colormap entry to every histogram cell. Unfortunately,; * it needs a work array to hold the best-distance-so-far for each histogram; * cell (because the inner loop has to be over cells, not colormap entries).; * The work array elements have to be INT32s, so the work array would need; * 256Kb at our recommended precision. This is not feasible in DOS machines.; *; * To get around these problems, we apply Thomas' method to compute the; * nearest colors for only the cells within a small sub",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:12,rout,routines,12,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['rout'],['routines']
Integrability,"/*; * These routines take care of any system-dependent initialization and; * cleanup required. Here, there isn't any.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:12,rout,routines,12,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"/*; * These routines take care of any system-dependent initialization and; * cleanup required. jpeg_mem_init will be called before anything is; * allocated (and, therefore, nothing in cinfo is of use except the error; * manager pointer). It should return a suitable default value for; * max_memory_to_use; this may subsequently be overridden by the surrounding; * application. (Note that max_memory_to_use is only important if; * jpeg_mem_available chooses to consult it ... no one else will.); * jpeg_mem_term may assume that all requested memory has been freed and that; * all opened backing-store objects have been closed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:12,rout,routines,12,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"/*; * These two functions are used to allocate and release large chunks of; * memory (up to the total free space designated by jpeg_mem_available).; * The interface is the same as above, except that on an 80x86 machine,; * far pointers are used. On most other machines these are identical to; * the jpeg_get/free_small routines; but we keep them separate anyway,; * in case a different allocation strategy is desirable for large chunks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:155,interface,interface,155,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * This API consists of small unitary functions, which must be inlined for best performance.; * Since link-time-optimization is not available for all compilers,; * these functions are defined into a .h to be included.; */; /*-****************************************; * Dependencies; ******************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:273,Depend,Dependencies,273,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['Depend'],['Dependencies']
Integrability,"/*; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * (This is a heavily cut-down ""BSD license"".); *; * This differs from Colin Plumb's older public domain implementation in that; * no exactly 32-bit integer data type is required (any 32-bit or wider; * unsigned integer data type will do), there's no compile-time endianness; * configuration, and the function prototypes match OpenSSL's. No code from; * Colin Plumb's implementation has been reused; this comment merely compares; * the properties of the two independent implementations.; *; * The primary goals of this implementation are portability and ease of use.; * It is meant to be fast, but not as fast as possible. Some known; * optimizations are not included to reduce source code size and avoid; * compile-time configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp:149,Message,Message-Digest,149,interpreter/llvm-project/llvm/lib/Support/MD5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp,1,['Message'],['Message-Digest']
Integrability,"/*; * This code is derived from OpenBSD's libc, original license follows:; *; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regstrlcpy.c:743,CONTRACT,CONTRACT,743,interpreter/llvm-project/llvm/lib/Support/regstrlcpy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regstrlcpy.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * This is the default resync_to_restart method for data source managers; * to use if they don't have any better approach. Some data source managers; * may be able to back up, or may have additional knowledge about the data; * which permits a more intelligent recovery strategy; such managers would; * presumably supply their own resync method.; *; * read_restart_marker calls resync_to_restart if it finds a marker other than; * the restart marker it was expecting. (This code is *not* used unless; * a nonzero restart interval has been declared.) cinfo->unread_marker is; * the marker code actually found (might be anything, except 0 or FF).; * The desired restart marker number (0..7) is passed as a parameter.; * This routine is supposed to apply whatever error recovery strategy seems; * appropriate in order to position the input stream to the next data segment.; * Note that cinfo->unread_marker is treated as a marker appearing before; * the current data-source input point; usually it should be reset to zero; * before returning.; * Returns FALSE if suspension is required.; *; * This implementation is substantially constrained by wanting to treat the; * input as a data stream; this means we can't back up. Therefore, we have; * only the following actions to work with:; * 1. Simply discard the marker and let the entropy decoder resume at next; * byte of file.; * 2. Read forward until we find another marker, discarding intervening; * data. (In theory we could look ahead within the current bufferload,; * without having to discard data if we don't find the desired marker.; * This idea is not implemented here, in part because it makes behavior; * dependent on buffer size and chance buffer-boundary positions.); * 3. Leave the marker unread (by failing to zero cinfo->unread_marker).; * This will cause the entropy decoder to process an empty data segment,; * inserting dummy zeroes, and then we will reprocess the marker.; *; * #2 is appropriate if we think the desired marker lies ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:725,rout,routine,725,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['rout'],['routine']
Integrability,/*; * This routine allows you to merge (ie ADD) child shapes to your; * own window's shape keeping its current shape and ADDING the child; * shapes to it.; * ; * - Raster; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h:11,rout,routine,11,graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,1,['rout'],['routine']
Integrability,/*; * This routine allows you to quickly take the shapes of all the child windows; * of a window and use their shapes as the shape mask for this window - useful; * for container windows that dont want to look like a big box; * ; * - Raster; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h:11,rout,routine,11,graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkwindow.h,1,['rout'],['routine']
Integrability,"/*; * This routine computes the total memory space available for allocation.; * Here we always say, ""we got all you want bud!""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:11,rout,routine,11,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['rout'],['routine']
Integrability,"/*; * This routine computes the total space still available for allocation by; * jpeg_get_large. If more space than this is needed, backing store will be; * used. NOTE: any memory already allocated must not be counted.; *; * There is a minimum space requirement, corresponding to the minimum; * feasible buffer sizes; jmemmgr.c will request that much space even if; * jpeg_mem_available returns zero. The maximum space needed, enough to hold; * all working storage in memory, is also passed in case it is useful.; * Finally, the total space already allocated is passed. If no better; * method is available, cinfo->mem->max_memory_to_use - already_allocated; * is often a suitable calculation.; *; * It is OK for jpeg_mem_available to underestimate the space available; * (that'll just lead to more backing-store access than is really necessary).; * However, an overestimate will lead to failure. Hence it's wise to subtract; * a slop factor from the true available space. 5% should be enough.; *; * On machines with lots of virtual memory, any large constant may be returned.; * Conversely, zero may be returned to always use the minimum amount of memory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:11,rout,routine,11,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['rout'],['routine']
Integrability,/*; * This structure holds whatever state is needed to access a single; * backing-store object. The read/write/close method pointers are called; * by jmemmgr.c to manipulate the backing-store object; all other fields; * are private to the system-dependent backing store routines.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:246,depend,dependent,246,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"/*; * This test reproduces a particular issue happening in analysis logic; * including both systematic variations and filters, with the order; *; * 1. Some call to Vary; * 2. Filter depending on the first Vary; * 3. Another Vary that depends on the Filter; *; * The logic that reproduces the problem is shown in the above function; * `dataframe_cloning_vary_with_filters_analysis`. In particular, the; * lambda used in the Vary call (3) calls ROOT::VecOps::Take(vec, 4),; * thus only works if `vec` has at least size `4`.; *; * In a previous implementation of cloning `RVariedAction`, the cloned action; * was connected to the wrong upstream filter (in fact, it was using a varied; * filter from the original action as if it was the nominal filter). This would; * then pass to the lambda used in the downstream Vary call (3) a vector; * `jet_pt` from which only 3 entries pass `jet_pt_mask`, eventually producing; * an error when reaching the `Take(jet_pt[jet_pt_mask], 4)` call.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx:182,depend,depending,182,tree/dataframe/test/dataframe_cloning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/test/dataframe_cloning.cxx,2,['depend'],"['depending', 'depends']"
Integrability,"/*; * UGLY HACK:; * GCC usually generates the best code with -O3 for xxHash.; *; * However, when targeting AVX2, it is overzealous in its unrolling resulting; * in code roughly 3/4 the speed of Clang.; *; * There are other issues, such as GCC splitting _mm256_loadu_si256 into; * _mm_loadu_si128 + _mm256_inserti128_si256. This is an optimization which; * only applies to Sandy and Ivy Bridge... which don't even support AVX2.; *; * That is why when compiling the AVX2 version, it is recommended to use either; * -O2 -mavx2 -march=haswell; * or; * -O2 -mavx2 -mno-avx256-split-unaligned-load; * for decent performance, or to use Clang instead.; *; * Fortunately, we can control the first one with a pragma that forces GCC into; * -O2, but the other one we can't control without ""failed to inline always; * inline function due to target mismatch"" warnings.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:386,Bridg,Bridge,386,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Bridg'],['Bridge']
Integrability,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:667,Bridg,Bridge,667,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Bridg'],['Bridge']
Integrability,"/*; * VDT headers for RooFit. Since RooFit cannot directly depend on VDT (it might not be available),; * this layer can be used to switch between different implementations.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h:59,depend,depend,59,roofit/batchcompute/src/RooVDTHeaders.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooVDTHeaders.h,1,['depend'],['depend']
Integrability,"/*; * When the upper or lower edge of any region changes, the region is; * marked ""dirty"". This routine walks through all the dirty regions; * and makes sure that the dictionary invariants are satisfied; * (see the comments at the beginning of this file). Of course; * new dirty regions can be created as we make changes to restore; * the invariants.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c:96,rout,routine,96,graf3d/eve7/glu/sweep.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.c,1,['rout'],['routine']
Integrability,/*; * Wrapper around cudaStream_t.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h:6,Wrap,Wrapper,6,roofit/batchcompute/src/CudaInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/CudaInterface.h,1,['Wrap'],['Wrapper']
Integrability,"/*; * XXH3_64bits_reset_withSecret():; * `secret` is referenced, it _must outlive_ the hash streaming session.; * Similar to one-shot API, `secretSize` must be >= `XXH3_SECRET_SIZE_MIN`,; * and the quality of produced hash values depends on secret's entropy; * (secret's content should look like a bunch of random bytes).; * When in doubt about the randomness of a candidate `secret`,; * consider employing `XXH3_generateSecret()` instead (see below).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:230,depend,depends,230,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['depends']
Integrability,"/*; * XXH3_64bits_withSecret():; * It's possible to provide any blob of bytes as a ""secret"" to generate the hash.; * This makes it more difficult for an external actor to prepare an intentional collision.; * The main condition is that secretSize *must* be large enough (>= XXH3_SECRET_SIZE_MIN).; * However, the quality of produced hash values depends on secret's entropy.; * Technically, the secret must look like a bunch of random bytes.; * Avoid ""trivial"" or structured data such as repeated sequences or a text document.; * Whenever unsure about the ""randomness"" of the blob of bytes,; * consider relabelling it as a ""custom seed"" instead,; * and employ ""XXH3_generateSecret()"" (see below); * to generate a high entropy secret derived from the custom seed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:344,depend,depends,344,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['depends']
Integrability,"/*; * \brief Extract a collection of subsidiary likelihoods from a pdf; *; * \param[in] pdf Raw pointer to the pdf; * \param[in] data Raw pointer to the dataset; * \param[in] constrained_parameters Set of parameters that are constrained. Pdf components dependent on these alone are; * added to the subsidiary likelihood.; * \param[in] external_constraints Set of external constraint pdfs, i.e. constraints; * not necessarily in the pdf itself. These are always added to the subsidiary likelihood.; * \param[in] global_observables; * Observables that have a constant value, independent of the dataset events. Pdf components dependent on these alone; * are added to the subsidiary likelihood. \note Overrides all other likelihood parameters (like those in \p; * constrained_parameters) if present.; * \param[in] global_observables_tag String that can be set as attribute in pdf; * components to indicate that it is a global observable. Can be used instead of or in addition to \p; * global_observables.; * \return A unique pointer to a RooSubsidiaryL that contains all terms in the pdf that can be; * calculated separately from the other components in the full likelihood.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:253,depend,dependent,253,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,2,['depend'],['dependent']
Integrability,"/*; * bits.c by Jean-loup Gailly and Kai Uwe Rommel.; *; * This is a new version of im_bits.c originally written by Richard B. Wales; *; * PURPOSE; *; * Output variable-length bit strings. Compression can be done; * to a file or to memory.; *; * DISCUSSION; *; * The PKZIP ""deflate"" file format interprets compressed file data; * as a sequence of bits. Multi-bit strings in the file may cross; * byte boundaries without restriction.; *; * The first bit of each byte is the low-order bit.; *; * The routines in this file allow a variable-length bit value to; * be output right-to-left (useful for literal values). For; * left-to-right output (useful for code strings from the tree routines),; * the bits must have been reversed first with R__bi_reverse().; *; * For in-memory compression, the compressed bit stream goes directly; * into the requested output buffer. The input data is read in blocks; * by the R__mem_read() function. The buffer is limited to 64K on 16 bit; * machines.; *; * INTERFACE; *; * void R__bi_init (bits_internal_state *state); * Initialize the bit string routines.; *; * void R__send_bits (int value, int length); * Write out a bit string, taking the source bits right to; * left.; *; * int R__bi_reverse (int value, int length); * Reverse the bits of a bit string, taking the source bits left to; * right and emitting them right to left.; *; * void R__bi_windup (void); * Write out any remaining bits in an incomplete byte.; *; * void R__copy_block(char far *buf, unsigned len, int header); * Copy a stored block to the zip file, storing first the length and; * its one's complement if requested.; *; * int R__seekable(void); * Return true if the zip file can be seeked.; *; * ulg R__memcompress (char *tgt, ulg tgtsize, char *src, ulg srcsize);; * Compress the source buffer src into the target buffer tgt.; */; // Global value of the compression level for the old compression algorithm.; // NOTE: Not thread-safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:498,rout,routines,498,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,4,"['INTERFACE', 'rout']","['INTERFACE', 'routines']"
Integrability,"/*; * deflate.c by Jean-loup Gailly.; *; * PURPOSE; *; * Identify new text as repetitions of old text within a fixed-; * length sliding window trailing behind the new text.; *; * DISCUSSION; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:220,depend,depends,220,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['depend'],['depends']
Integrability,"/*; * divsufsort.c for libdivsufsort-lite; * Copyright (c) 2003-2008 Yuta Mori All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person; * obtaining a copy of this software and associated documentation; * files (the ""Software""), to deal in the Software without; * restriction, including without limitation the rights to use,; * copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following; * conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES; * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT; * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING; * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR; * OTHER DEALINGS IN THE SOFTWARE.; */; /*- Compiler specifics -*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c:1047,CONTRACT,CONTRACT,1047,builtins/zstd/dictBuilder/divsufsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * divsufsort.h for libdivsufsort-lite; * Copyright (c) 2003-2008 Yuta Mori All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person; * obtaining a copy of this software and associated documentation; * files (the ""Software""), to deal in the Software without; * restriction, including without limitation the rights to use,; * copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following; * conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES; * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT; * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING; * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR; * OTHER DEALINGS IN THE SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h:1047,CONTRACT,CONTRACT,1047,builtins/zstd/dictBuilder/divsufsort.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/divsufsort.h,1,['CONTRACT'],['CONTRACT']
Integrability,/*; * iterator interfaces; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx:15,interface,interfaces,15,core/foundation/inc/ROOT/span.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/span.hxx,1,['interface'],['interfaces']
Integrability,"/*; * jaricom.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains probability estimation tables for common use in; * arithmetic entropy encoding and decoding routines.; *; * This data represents Table D.2 in the JPEG spec (ISO/IEC IS 10918-1; * and CCITT Recommendation ITU-T T.81) and Table 24 in the JBIG spec; * (ISO/IEC IS 11544 and CCITT Recommendation ITU-T T.82).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c:320,rout,routines,320,graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jaricom.c,1,['rout'],['routines']
Integrability,"/*; * jcapimin.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2003-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the compression half; * of the JPEG library. These are the ""minimum"" API routines that may be; * needed in either the normal full-compression case or the transcoding-only; * case.; *; * Most of the routines intended to be called directly by an application; * are in this file or in jcapistd.c. But also see jcparam.c for; * parameter-setup helper routines, jcomapi.c for routines shared by; * compression and decompression, and jctrans.c for the transcoding case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:284,interface,interface,284,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,5,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * jcapistd.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the compression half; * of the JPEG library. These are the ""standard"" API routines that are; * used in the normal full-compression case. They are not used by a; * transcoding-only application. Note that if an application links in; * jpeg_start_compress, it will end up linking in the entire compressor.; * We thus must separate this file from jcapimin.c to avoid linking the; * whole compression library into a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c:241,interface,interface,241,graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapistd.c,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * jcarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy encoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:265,rout,routines,265,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['rout'],['routines']
Integrability,"/*; * jccolor.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains input colorspace conversion routines.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c:256,rout,routines,256,graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccolor.c,1,['rout'],['routines']
Integrability,"/*; * jchuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy encoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting output suspension.; * If the data destination module demands suspension, we want to be able to; * back up to the start of the current MCU. To do this, we copy state; * variables into local working storage, and update them back to the; * permanent JPEG objects only upon successful completion of an MCU.; *; * We do not support output suspension for the progressive JPEG mode, since; * the library currently does not allow multiple-scan files to be written; * with output suspension.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:295,rout,routines,295,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['rout'],['routines']
Integrability,"/*; * jchuff.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains declarations for Huffman entropy encoding routines; * that are shared between the sequential encoder (jchuff.c) and the; * progressive encoder (jcphuff.c). No other modules need to see these.; */; /* The legal range of a DCT coefficient is; * -1024 .. +1023 for 8-bit data;; * -16384 .. +16383 for 12-bit data.; * Hence the magnitude should always fit in 10 or 14 bits respectively.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.h:269,rout,routines,269,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.h,1,['rout'],['routines']
Integrability,"/*; * jcinit.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains initialization logic for the JPEG compressor.; * This routine is in charge of selecting the modules to be executed and; * making an initialization call to each one.; *; * Logically, this code belongs in jcmaster.c. It's split out because; * linking this routine implies linking the entire compression library.; * For a transcoding-only application, we want to be able to use jcmaster.c; * without linking in the whole library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcinit.c:281,rout,routine,281,graf2d/asimage/src/libAfterImage/libjpeg/jcinit.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcinit.c,2,['rout'],['routine']
Integrability,"/*; * jcmarker.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains routines to write JPEG datastream markers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:272,rout,routines,272,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['rout'],['routines']
Integrability,"/*; * jcmaster.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2003-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains master control logic for the JPEG compressor.; * These routines are concerned with parameter validation, initial setup,; * and inter-pass control (determining the number of passes and the work ; * to be done in each pass).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:327,rout,routines,327,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['rout'],['routines']
Integrability,"/*; * jcomapi.c; *; * Copyright (C) 1994-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface routines that are used for both; * compression and decompression.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c:240,interface,interface,240,graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcomapi.c,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * jcphuff.c; *; * Copyright (C) 1995-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy encoding routines for progressive JPEG.; *; * We do not support output suspension in this module, since the library; * currently does not allow multiple-scan files to be written with output; * suspension.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c:253,rout,routines,253,graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,1,['rout'],['routines']
Integrability,"/*; * jcsample.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains downsampling routines.; *; * Downsampling input data is counted in ""row groups"". A row group; * is defined to be max_v_samp_factor pixel rows of each component,; * from which the downsampler produces v_samp_factor sample rows.; * A single row group is processed in each call to the downsampler module.; *; * The downsampler is responsible for edge-expansion of its output data; * to fill an integral number of DCT blocks horizontally. The source buffer; * may be modified if it is helpful for this purpose (the source buffer is; * allocated wide enough to correspond to the desired output width).; * The caller (the prep controller) is responsible for vertical padding.; *; * The downsampler may request ""context rows"" by setting need_context_rows; * during startup. In this case, the input arrays will contain at least; * one row group's worth of pixels above and below the passed-in data;; * the caller will create dummy rows at image top and bottom by replicating; * the first or last real pixel row.; *; * An excellent reference for image resampling is; * Digital Image Warping, George Wolberg, 1990.; * Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.; *; * The downsampling algorithm used here is a simple average of the source; * pixels covered by the output pixel. The hi-falutin sampling literature; * refers to this as a ""box filter"". In general the characteristics of a box; * filter are not very good, but for the specific cases we normally use (1:1; * and 2:1 ratios) the box is equivalent to a ""triangle filter"" which is not; * nearly so bad. If you intend to use other sampling ratios, you'd be well; * advised to improve this code.; *; * A simple input-smoothing capability is provided. This is mainly intended; * for cleaning up ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:242,rout,routines,242,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['rout'],['routines']
Integrability,"/*; * jctrans.c; *; * Copyright (C) 1995-1998, Thomas G. Lane.; * Modified 2000-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains library routines for transcoding compression,; * that is, writing raw DCT coefficient arrays to an output JPEG file.; * The routines in jcapimin.c will also be needed by a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c:279,rout,routines,279,graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,2,['rout'],['routines']
Integrability,"/*; * jdapimin.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the decompression half; * of the JPEG library. These are the ""minimum"" API routines that may be; * needed in either the normal full-decompression case or the; * transcoding-only case.; *; * Most of the routines intended to be called directly by an application; * are in this file or in jdapistd.c. But also see jcomapi.c for routines; * shared by compression and decompression, and jdtrans.c for the transcoding; * case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c:279,interface,interface,279,graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapimin.c,4,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * jdapistd.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains application interface code for the decompression half; * of the JPEG library. These are the ""standard"" API routines that are; * used in the normal full-decompression case. They are not used by a; * transcoding-only application. Note that if an application links in; * jpeg_start_decompress, it will end up linking in the entire decompressor.; * We thus must separate this file from jdapimin.c to avoid linking the; * whole decompression library into a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c:241,interface,interface,241,graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdapistd.c,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"/*; * jdarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy decoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:265,rout,routines,265,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['rout'],['routines']
Integrability,"/*; * jdatadst.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains compression data destination routines for the case of; * emitting JPEG data to memory or to a file (or any stdio stream).; * While these routines are sufficient for most applications,; * some will want to use a different destination manager.; * IMPORTANT: we assume that fwrite() will correctly transcribe an array of; * JOCTETs into 8-bit-wide elements on external storage. If char is wider; * than 8 bits on your machine, you may need to do some tweaking.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:296,rout,routines,296,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,2,['rout'],['routines']
Integrability,"/*; * jdatasrc.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2009-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains decompression data source routines for the case of; * reading JPEG data from memory or from a file (or any stdio stream).; * While these routines are sufficient for most applications,; * some will want to use a different source manager.; * IMPORTANT: we assume that fread() will correctly transcribe an array of; * JOCTETs from 8-bit-wide elements on external storage. If char is wider; * than 8 bits on your machine, you may need to do some tweaking.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:298,rout,routines,298,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,2,['rout'],['routines']
Integrability,"/*; * jdcoefct.c; *; * Copyright (C) 1994-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the coefficient buffer controller for decompression.; * This controller is the top level of the JPEG decompressor proper.; * The coefficient buffer lies between entropy decoding and inverse-DCT steps.; *; * In buffered-image mode, this controller is the interface between; * input-oriented processing and output-oriented processing.; * Also, the input side (only) is used when reading a file for transcoding.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:483,interface,interface,483,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['interface'],['interface']
Integrability,"/*; * jdcolor.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains output colorspace conversion routines.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c:257,rout,routines,257,graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcolor.c,1,['rout'],['routines']
Integrability,"/*; * jdct.h; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This include file contains common declarations for the forward and; * inverse DCT modules. These declarations are private to the DCT managers; * (jcdctmgr.c, jddctmgr.c) and the individual DCT algorithms.; * The individual DCT algorithms are kept in separate files to ease ; * machine-dependent tuning (e.g., assembly coding).; */; /*; * A forward DCT routine is given a pointer to an input sample array and; * a pointer to a work area of type DCTELEM[]; the DCT is to be performed; * in-place in that buffer. Type DCTELEM is int for 8-bit samples, INT32; * for 12-bit samples. (NOTE: Floating-point DCT implementations use an; * array of type FAST_FLOAT, instead.); * The input data is to be fetched from the sample array starting at a; * specified column. (Any row offset needed will be applied to the array; * pointer before it is passed to the FDCT code.); * Note that the number of samples fetched by the FDCT routine is; * DCT_h_scaled_size * DCT_v_scaled_size.; * The DCT outputs are returned scaled up by a factor of 8; they therefore; * have a range of +-8K for 8-bit data, +-128K for 12-bit data. This; * convention improves accuracy in integer implementations and saves some; * work in floating-point ones.; * Quantization of the output coefficients is done by jcdctmgr.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:491,depend,dependent,491,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,3,"['depend', 'rout']","['dependent', 'routine']"
Integrability,"/*; * jddctmgr.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2002-2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the inverse-DCT management logic.; * This code selects a particular IDCT implementation to be used,; * and it performs related housekeeping chores. No code in this file; * is executed per IDCT step, only during output pass setup.; *; * Note that the IDCT routines are responsible for performing coefficient; * dequantization as well as the IDCT proper. This module sets up the; * dequantization multiplier table needed by the IDCT routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:527,rout,routines,527,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,2,['rout'],"['routine', 'routines']"
Integrability,"/*; * jdhuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy decoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting input suspension.; * If the data source module demands suspension, we want to be able to back; * up to the start of the current MCU. To do this, we copy state variables; * into local working storage, and update them back to the permanent; * storage only upon successful completion of an MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:295,rout,routines,295,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['rout'],['routines']
Integrability,"/*; * jdhuff.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains declarations for Huffman entropy decoding routines; * that are shared between the sequential decoder (jdhuff.c) and the; * progressive decoder (jdphuff.c). No other modules need to see these.; */; /* Short forms of external names for systems with brain-damaged linkers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.h:269,rout,routines,269,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.h,1,['rout'],['routines']
Integrability,"/*; * jdinput.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains input control logic for the JPEG decompressor.; * These routines are concerned with controlling the decompressor's input; * processing (marker reading and coefficient decoding). The actual input; * reading is done in jdmarker.c, jdhuff.c, and jdarith.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:327,rout,routines,327,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,1,['rout'],['routines']
Integrability,"/*; * jdmarker.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains routines to decode JPEG datastream markers.; * Most of the complexity arises from our desire to support input; * suspension: if not all of the data for a marker is available,; * we must exit back to the application. On resumption, we reprocess; * the marker.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:267,rout,routines,267,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['rout'],['routines']
Integrability,"/*; * jdmaster.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains master control logic for the JPEG decompressor.; * These routines are concerned with selecting the modules to be executed; * and with determining the number of passes and the work to be done in each; * pass.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:329,rout,routines,329,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['rout'],['routines']
Integrability,"/*; * jdpostct.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the decompression postprocessing controller.; * This controller manages the upsampling, color conversion, and color; * quantization/reduction steps; specifically, it controls the buffering; * between upsample/color conversion and color quantization/reduction.; *; * If no color quantization/reduction is required, then this module has no; * work to do, and it just hands off to the upsample/color conversion code.; * An integrated upsample/convert/quantize process would replace this module; * entirely.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c:649,integrat,integrated,649,graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,1,['integrat'],['integrated']
Integrability,"/*; * jdsample.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modified 2002-2008 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains upsampling routines.; *; * Upsampling input data is counted in ""row groups"". A row group; * is defined to be (v_samp_factor * DCT_v_scaled_size / min_DCT_v_scaled_size); * sample rows of each component. Upsampling will normally produce; * max_v_samp_factor pixel rows from each row group (but this could vary; * if the upsampler is applying a scale factor of its own).; *; * An excellent reference for image resampling is; * Digital Image Warping, George Wolberg, 1990.; * Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:283,rout,routines,283,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['rout'],['routines']
Integrability,"/*; * jdtrans.c; *; * Copyright (C) 1995-1997, Thomas G. Lane.; * Modified 2000-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains library routines for transcoding decompression,; * that is, reading raw DCT coefficient arrays from an input JPEG file.; * The routines in jdapimin.c will also be needed by a transcoder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c:279,rout,routines,279,graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdtrans.c,2,['rout'],['routines']
Integrability,"/*; * jerror.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains simple error-reporting and trace-message routines.; * These are suitable for Unix-like systems and others where writing to; * stderr is the right thing to do. Many applications will want to replace; * some or all of these routines.; *; * If you define USE_WINDOWS_MESSAGEBOX in jconfig.h or in the makefile,; * you get a Windows-specific hack to display error messages in a dialog box.; * It ain't much, but it beats dropping error messages into the bit bucket,; * which is what happens to output to stderr under most Windows C compilers.; *; * These routines are used by both the compression and decompression code.; */; /* this is not a core library module, so it doesn't define JPEG_INTERNALS */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:260,message,message,260,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,6,"['message', 'rout']","['message', 'messages', 'routines']"
Integrability,"/*; * jerror.h; *; * Copyright (C) 1994-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the error and message codes for the JPEG library.; * Edit this file to add new codes, or to translate the message strings to; * some other language.; * A set of error-reporting macros are defined too. Some applications using; * the JPEG library may wish to include this file to get the error codes; * and/or the macros.; */; /*; * To define the enum list of message codes, include this file without; * defining macro JMESSAGE. To create a message string table, include it; * again with a suitable JMESSAGE definition (see jerror.c for an example).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:283,message,message,283,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,4,['message'],['message']
Integrability,"/*; * jfdctflt.c; *; * Copyright (C) 1994-1996, Thomas G. Lane.; * Modified 2003-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * forward DCT (Discrete Cosine Transform).; *; * This implementation should be more accurate than either of the integer; * DCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c:573,depend,depend,573,graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctflt.c,1,['depend'],['depend']
Integrability,"/*; * jidctflt.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * Modified 2010 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a floating-point implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * This implementation should be more accurate than either of the integer; * IDCT implementations. However, it may not give the same results on all; * machines because of differences in roundoff behavior. Speed will depend; * on the hardware's floating point capacity.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with a fixed-point; * implementation, accuracy is lost due to imprecise representation of the; * scaled quantization values. However, that problem does not arise if; * we use floating point arithmetic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c:372,rout,routine,372,graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctflt.c,2,"['depend', 'rout']","['depend', 'routine']"
Integrability,"/*; * jidctfst.c; *; * Copyright (C) 1994-1998, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a fast, not so accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on Arai, Agui, and Nakajima's algorithm for; * scaled DCT. Their original paper (Trans. IEICE E-71(11):1095) is in; * Japanese, but the algorithm is described in the Pennebaker & Mitchell; * JPEG textbook (see REFERENCES section in file README). The following code; * is based directly on figure 4-8 in P&M.; * While an 8-point DCT cannot be done in less than 11 multiplies, it is; * possible to arrange the computation so that many of the multiplies are; * simple scalings of the final outputs. These multiplies can then be; * folded into the multiplications or divisions by the JPEG quantization; * table entries. The AA&N method leaves only 5 multiplies and 29 adds; * to be done in the DCT itself.; * The primary disadvantage of this method is that with fixed-point math,; * accuracy is lost due to imprecise representation of the scaled; * quantization values. The smaller the quantization table entry, the less; * precise the scaled value, so this implementation does worse with high-; * quality-setting files than with low-quality ones.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c:349,rout,routine,349,graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctfst.c,1,['rout'],['routine']
Integrability,"/*; * jidctint.c; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modification developed 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * inverse DCT (Discrete Cosine Transform). In the IJG code, this routine; * must also perform dequantization of the input coefficients.; *; * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial dom",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:402,rout,routine,402,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['rout'],['routine']
Integrability,"/*; * jmemmgr.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains the JPEG system-independent memory management; * routines. This code is usable across a wide variety of machines; most; * of the system dependencies have been isolated in a separate file.; * The major functions provided here are:; * * pool-based allocation and freeing of memory;; * * policy decisions about how to divide available memory among the; * virtual arrays;; * * control logic for swapping virtual arrays between main memory and; * backing storage.; * The separate system-dependent file provides the actual backing-storage; * access code, and it contains the policy decision about how much total; * main memory to use.; * This file is system-dependent in the sense that some of its functions; * are unnecessary in some systems. For example, if there is enough virtual; * memory so that backing storage will never be used, much of the virtual; * array control logic could be removed. (Of course, if you have that much; * memory then you shouldn't care about a little bit of unused code...); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:277,rout,routines,277,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,4,"['depend', 'rout']","['dependencies', 'dependent', 'routines']"
Integrability,"/*; * jmemnobs.c; *; * Copyright (C) 1992-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file provides a really simple implementation of the system-; * dependent portion of the JPEG memory manager. This implementation; * assumes that no backing-store files are needed: all required space; * can be obtained from malloc().; * This is very portable in the sense that it'll compile on almost anything,; * but you'd better have lots of main memory (or virtual memory) if you want; * to process big images.; * Note that the max_memory_to_use option is ignored by this implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:278,depend,dependent,278,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['depend'],['dependent']
Integrability,"/*; * jmemsys.h; *; * Copyright (C) 1992-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This include file defines the interface between the system-independent; * and system-dependent portions of the JPEG memory manager. No other; * modules need include it. (The system-independent portion is jmemmgr.c;; * there are several different versions of the system-dependent portion.); *; * This file works as-is for the system-dependent memory managers supplied; * in the IJG distribution. You may need to modify it if you write a; * custom memory manager. If system-dependent changes are needed in; * this file, the best method is to #ifdef them based on a configuration; * symbol supplied in jconfig.h, as we have done with USE_MSDOS_MEMMGR; * and USE_MAC_MEMMGR.; */; /* Short forms of external names for systems with brain-damaged linkers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:239,interface,interface,239,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,5,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"/*; * jmorecfg.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains additional configuration options that customize the; * JPEG software for special applications or support machine-dependent; * optimizations. Most users will not need to touch this file.; */; /*; * Define BITS_IN_JSAMPLE as either; * 8 for 8-bit sample values (the usual setting); * 12 for 12-bit sample values; * Only 8 and 12 are legal data precisions for lossy JPEG according to the; * JPEG standard, and the IJG code does not support anything else!; * We do not support run-time selection of data precision, sorry.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:385,depend,dependent,385,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['depend'],['dependent']
Integrability,"/*; * jpeglib.h; *; * Copyright (C) 1991-1998, Thomas G. Lane.; * Modified 2002-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file defines the application interface for the JPEG library.; * Most applications using the library need only include this file,; * and perhaps jerror.h if they want to know the exact error codes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:286,interface,interface,286,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['interface'],['interface']
Integrability,"/*; * jquant1.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains 1-pass color quantization (color mapping) routines.; * These routines provide mapping to a fixed color map using equally spaced; * color values. Optional Floyd-Steinberg or ordered dithering is available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:270,rout,routines,270,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['rout'],['routines']
Integrability,"/*; * jquant2.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains 2-pass color quantization (color mapping) routines.; * These routines provide selection of a custom color map for an image,; * followed by mapping of the image to that color map, with optional; * Floyd-Steinberg dithering.; * It is also possible to use just the second pass to map to an arbitrary; * externally-given color map.; *; * Note: ordered dithering is not supported, since there isn't any fast; * way to compute intercolor distances; it's unclear that ordered dither's; * fundamental assumptions even hold with an irregularly spaced color map.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:270,rout,routines,270,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['rout'],['routines']
Integrability,"/*; * jutils.c; *; * Copyright (C) 1991-1996, Thomas G. Lane.; * Modified 2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains tables and miscellaneous utility routines needed; * for both compression and decompression.; * Note we prefix all global names with ""j"" to minimize conflicts with; * a surrounding application.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c:298,rout,routines,298,graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,1,['rout'],['routines']
Integrability,"/*; * mkstemp() implementation is from the GNU C library.; * Copyright (C) 1991,92,93,94,95,96,97,98,99 Free Software Foundation, Inc.; */; /**; * g_mkstemp:; * @tmpl: template filename; *; * Open a temporary file. See ""man mkstemp"" on most UNIX-like systems.; * This is a portability wrapper, which simply calls mkstemp() on systems; * that have it, and implements it in GLib otherwise.; *; * The parameter is a string that should match the rules for mktemp, i.e.; * end in ""XXXXXX"". The X string will be modified to form the name; * of a file that didn't exist.; *; * Return value: A file handle (as from open()) to the file; * opened for reading and writing. The file is opened in binary mode; * on platforms where there is a difference. The file handle should be; * closed with close(). In case of errors, -1 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:285,wrap,wrapper,285,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['wrap'],['wrapper']
Integrability,"/*; * prod_hi = (data_key >> 32) * XXH_PRIME32_1;; *; * Avoid vmul_u32 + vshll_n_u32 since Clang 6 and 7 will; * incorrectly ""optimize"" this:; * tmp = vmul_u32(vmovn_u64(a), vmovn_u64(b));; * shifted = vshll_n_u32(tmp, 32);; * to this:; * tmp = ""vmulq_u64""(a, b); // no such thing!; * shifted = vshlq_n_u64(tmp, 32);; *; * However, unlike SSE, Clang lacks a 64-bit multiply routine; * for NEON, and it scalarizes two 64-bit multiplies instead.; *; * vmull_u32 has the same timing as vmul_u32, and it avoids; * this bug completely.; * See https://bugs.llvm.org/show_bug.cgi?id=39967; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:374,rout,routine,374,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['rout'],['routine']
Integrability,"/*; * transupp.c; *; * Copyright (C) 1997-2009, Thomas G. Lane, Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains image transformation routines and other utility code; * used by the jpegtran sample application. These are NOT part of the core; * JPEG library. But we keep these routines separate from jpegtran.c to; * ease the task of maintaining jpegtran-like programs that have other user; * interfaces.; */; /* Although this file really shouldn't have access to the library internals,; * it's helpful to let it call jround_up() and jcopy_block_row().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:268,rout,routines,268,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,3,"['interface', 'rout']","['interfaces', 'routines']"
Integrability,"/*; * transupp.h; *; * Copyright (C) 1997-2009, Thomas G. Lane, Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains declarations for image transformation routines and; * other utility code used by the jpegtran sample application. These are; * NOT part of the core JPEG library. But we keep these routines separate; * from jpegtran.c to ease the task of maintaining jpegtran-like programs; * that have other user interfaces.; *; * NOTE: all the routines declared here have very specific requirements; * about when they are to be executed during the reading and writing of the; * source and destination files. See the comments in transupp.c, or see; * jpegtran.c for an example of correct usage.; */; /* If you happen not to want the image transform support, disable it here */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h:285,rout,routines,285,graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,4,"['interface', 'rout']","['interfaces', 'routines']"
Integrability,"/*; * trees.c by Jean-loup Gailly; *; * This is a new version of im_ctree.c originally written by Richard B. Wales; * for the defunct implosion method.; *; * PURPOSE; *; * Encode various sets of source values using variable-length; * binary code trees.; *; * DISCUSSION; *; * The PKZIP ""deflation"" process uses several Huffman trees. The more; * common source values are represented by shorter bit sequences.; *; * Each code tree is stored in the ZIP file in a compressed form; * which is itself a Huffman encoding of the lengths of; * all the code strings (in ascending order by source values).; * The actual code strings are reconstructed from the lengths in; * the UNZIP process, as described in the ""application note""; * (APPNOTE.TXT) distributed as part of PKWARE's PKZIP program.; *; * REFERENCES; *; * Lynch, Thomas J.; * Data Compression: Techniques and Applications, pp. 53-55.; * Lifetime Learning Publications, 1985. ISBN 0-534-03418-7.; *; * Storer, James A.; * Data Compression: Methods and Theory, pp. 49-50.; * Computer Science Press, 1988. ISBN 0-7167-8156-5.; *; * Sedgewick, R.; * Algorithms, p290.; * Addison-Wesley, 1983. ISBN 0-201-06672-6.; *; * INTERFACE; *; * void ct_init (ush *attr, int *method); * Allocate the match buffer, initialize the various tables and save; * the location of the internal file attribute (ascii/binary) and; * method (DEFLATE/STORE); *; * void ct_tally (int dist, int lc);; * Save the match info and tally the frequency counts.; *; * long flush_block (char *buf, ulg stored_len, int eof); * Determine the best encoding for the current block: dynamic trees,; * static trees or store, and output the encoded block to the zip; * file. Returns the total compressed length for the file so far.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:1168,INTERFACE,INTERFACE,1168,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['INTERFACE'],['INTERFACE']
Integrability,"/*; * vec_mulo and vec_mule are very problematic intrinsics on PowerPC; *; * These intrinsics weren't added until GCC 8, despite existing for a while,; * and they are endian dependent. Also, their meaning swap depending on version.; * */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:174,depend,dependent,174,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['depend'],"['dependent', 'depending']"
Integrability,"/*; * xxHash - Extremely Fast Hash algorithm; * Copyright (C) 2012-2020 Yann Collet; *; * BSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php); *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /*; * xxhash.c instantiates functions defined in xxhash.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.c:1283,CONTRACT,CONTRACT,1283,builtins/xxhash/xxhash.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; * xxHash - Fast Hash algorithm; * Copyright (C) 2012-2021, Yann Collet; *; * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php); *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at :; * - xxHash homepage: http://www.xxhash.com; * - xxHash source repository : https://github.com/Cyan4973/xxHash; */; // xxhash64 is based on commit d2df04efcbef7d7f6886d345861e5dfda4edacc1. Removed; // everything but a simple interface for computing xxh64.; // xxh3_64bits is based on commit d5891596637d21366b9b1dcf2c0007a3edb26a9e (July; // 2023).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/xxhash.cpp:1273,CONTRACT,CONTRACT,1273,interpreter/llvm-project/llvm/lib/Support/xxhash.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/xxhash.cpp,2,"['CONTRACT', 'interface']","['CONTRACT', 'interface']"
Integrability,"/*; ** The OpenGL Extension Wrangler Library; ** Copyright (C) 2008-2017, Nigel Stewart <nigels[]users sourceforge net>; ** Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>; ** Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>; ** Copyright (C) 2002, Lev Povalahev; ** All rights reserved.; ** ; ** Redistribution and use in source and binary forms, with or without ; ** modification, are permitted provided that the following conditions are met:; ** ; ** * Redistributions of source code must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/glew.c:1609,CONTRACT,CONTRACT,1609,builtins/glew/src/glew.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/src/glew.c,2,['CONTRACT'],['CONTRACT']
Integrability,/*; ** gluos.h - operating system dependencies for GLU; **; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/gluos.h:34,depend,dependencies,34,graf3d/eve7/glu/gluos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/gluos.h,1,['depend'],['dependencies']
Integrability,/*; *----------------------------------------------------------------------; *; * FindColor --; *; *	This routine finds the color entry that corresponds to the; *	specified color.; *; * Results:; *	Returns non-zero on success. The RGB values of the XColor; *	will be initialized to the proper values on success.; *; * Side effects:; *	None.; *; *----------------------------------------------------------------------; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:106,rout,routine,106,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['rout'],['routine']
Integrability,/*; *----------------------------------------------------------------------; *; * parse_color --; *; *	Partial implementation of X color name parsing interface.; *; * Results:; *	Returns non-zero on success.; *; * Side effects:; *	None.; *; *----------------------------------------------------------------------; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:150,interface,interface,150,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['interface'],['interface']
Integrability,"/*; *--------------------------------------------------------------; * find_window_for_pointer_event; *; * Find the window a pointer event (mouse up, down, move) should; * be reported to. If the return value != reported_window then; * the ref count of reported_window will be decremented and the; * ref count of the return value will be incremented.; *; * Arguments:; *; * ""reported_window"" is the gdk window the xevent was reported relative to; * ""xevent"" is the win32 message; *; * Results:; *; * Side effects:; *; *--------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:470,message,message,470,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['message'],['message']
Integrability,"/*; *; * Inverse of Normal distribution function; *; *; *; * SYNOPSIS:; *; * double x, y, ndtri();; *; * x = ndtri( y );; *; *; *; * DESCRIPTION:; *; * Returns the argument, x, for which the area under the; * Gaussian probability density function (integrated from; * minus infinity to x) is equal to y.; *; *; * For small arguments 0 < y < exp(-2), the program computes; * z = sqrt( -2.0 * log(y) ); then the approximation is; * x = z - log(z)/z - (1/z) P(1/z) / Q(1/z).; * There are two rational functions P/Q, one for 0 < y < exp(-32); * and the other for y up to exp(-2). For larger arguments,; * w = y - 0.5, and x/sqrt(2pi) = w + w**3 R(w**2)/S(w**2)).; *; *; * ACCURACY:; *; * Relative error:; * arithmetic domain # trials peak rms; * DEC 0.125, 1 5500 9.5e-17 2.1e-17; * DEC 6e-39, 0.135 3500 5.7e-17 1.3e-17; * IEEE 0.125, 1 20000 7.2e-16 1.3e-16; * IEEE 3e-308, 0.135 50000 4.6e-16 9.8e-17; *; *; * ERROR MESSAGES:; *; * message condition value returned; * ndtri domain x <= 0 -MAXNUM; * ndtri domain x >= 1 MAXNUM; *; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1989, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:248,integrat,integrated,248,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,3,"['MESSAGE', 'integrat', 'message']","['MESSAGES', 'integrated', 'message']"
Integrability,"/*; *; * Inverse of complemented incomplete gamma integral; *; *; *; * SYNOPSIS:; *; * double a, x, p, igami();; *; * x = igami( a, p );; *; * DESCRIPTION:; *; * Given p, the function finds x such that; *; * igamc( a, x ) = p.; *; * Starting with the approximate value; *; * 3; * x = a t; *; * where; *; * t = 1 - d - ndtri(p) sqrt(d); *; * and; *; * d = 1/9a,; *; * the routine performs up to 10 Newton iterations to find the; * root of igamc(a,x) - p = 0.; *; * ACCURACY:; *; * Tested at random a, p in the intervals indicated.; *; * a p Relative error:; * arithmetic domain domain # trials peak rms; * IEEE 0.5,100 0,0.5 100000 1.0e-14 1.7e-15; * IEEE 0.01,0.5 0,0.5 100000 9.0e-14 3.4e-15; * IEEE 0.5,10000 0,0.5 20000 2.3e-13 3.8e-14; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1987, 1995, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:371,rout,routine,371,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['rout'],['routine']
Integrability,"/*; *; * Inverse of incomplete beta integral; *; *; *; * SYNOPSIS:; *; * double a, b, x, y, incbi();; *; * x = incbi( a, b, y );; *; *; *; * DESCRIPTION:; *; * Given y, the function finds x such that; *; * incbet( a, b, x ) = y .; *; * The routine performs interval halving or Newton iterations to find the; * root of incbet(a,b,x) - y = 0.; *; *; * ACCURACY:; *; * Relative error:; * x a,b; * arithmetic domain domain # trials peak rms; * IEEE 0,1 .5,10000 50000 5.8e-12 1.3e-13; * IEEE 0,1 .25,100 100000 1.8e-13 3.9e-15; * IEEE 0,1 0,5 50000 1.1e-12 5.5e-15; * VAX 0,1 .5,100 25000 3.5e-14 1.1e-15; * With a and b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 50000 5.8e-12 1.1e-13; * IEEE 0,1 .5,100 100000 1.7e-14 7.9e-16; * With a = .5, b constrained to half-integer or integer values:; * IEEE 0,1 .5,10000 10000 8.3e-11 1.0e-11; */; /*; Cephes Math Library Release 2.8: June, 2000; Copyright 1984, 1996, 2000 by Stephen L. Moshier; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx:240,rout,routine,240,math/mathcore/src/SpecFuncCephesInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephesInv.cxx,1,['rout'],['routine']
Integrability,/*; - llvm_regcomp - interface for parser and compilation; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:21,interface,interface,21,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['interface'],['interface']
Integrability,"/*; - llvm_regerror - the interface to error numbers; = extern size_t llvm_regerror(int, const llvm_regex_t *, char *, size_t);; */; /* ARGSUSED */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Support/regerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c,1,['interface'],['interface']
Integrability,"/*; - llvm_regexec - interface for matching; *; * We put this here so we can exploit knowledge of the state representation; * when choosing which matcher to call. Also, by this point the matchers; * have been prototyped.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c:21,interface,interface,21,interpreter/llvm-project/llvm/lib/Support/regexec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c,1,['interface'],['interface']
Integrability,/*; - regatoi - internal routine to implement REG_ATOI; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c:25,rout,routine,25,interpreter/llvm-project/llvm/lib/Support/regerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regerror.c,1,['rout'],['routine']
Integrability,"/*; // this is more straight forward, but produces a lot of messages; RooFitResult* res = fPdf.fitTo(data, RooFit::CloneData(false),RooFit::Minos(0),RooFit::Hesse(false), RooFit::Save(1),RooFit::PrintLevel(-1),RooFit::PrintEvalErrors(0));; RooRealVar* mle = (RooRealVar*) res->floatParsFinal().find(fParameter.GetName());; double ret = mle->getVal();; delete res;; return ret;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MaxLikelihoodEstimateTestStat.h:60,message,messages,60,roofit/roostats/inc/RooStats/MaxLikelihoodEstimateTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MaxLikelihoodEstimateTestStat.h,1,['message'],['messages']
Integrability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Calculate hash from bin indexes. ULong64_t THnSparseCoordCompression::GetHashFromCoords(const Int_t* coord) const; {; // Bins are addressed in two different modes, depending; // on whether the compact bin index fits into a Long64_t or not.; // If it does, we can use it as a ""perfect hash"" for the TExMap.; // If not we build a hash from the compact bin index, and use that; // as the TExMap's hash. if (fCoordBufferSize <= 8) {; // fits into a Long64_t; ULong64_t hash1 = 0;; for (Int_t i = 0; i < fNdimensions; ++i) {; hash1 += coord[i] << fBitOffsets[i];; }; return hash1;; }. // else: doesn't fit into a Long64_t:; memset(coord, 0, fCoordBufferSize);; for (Int_t i = 0; i < fNdimensions; ++i) {; const Int_t offset = fBitOffsets[i] / 8;; const Int_t shift = fBitOffsets[i] % 8;; ULong64_t val = coord[i];. Char_t* pbuf = fCoordBuffer + offset;; *pbuf += 0xff & (val << shift);; val = val >> (8 - shift);; while (val) {; ++pbuf;; *pbuf += 0xff & val;; val = val >> 8;; }; }. ULong64_t hash = 5381;; Char_t* str = fCoordBuffer;; while (str - fCoordBuffer < fCoordBufferSize) {; hash *= 5;; hash += *(str++);; }; return hash;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Calculate hash from compact bin index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:254,depend,depending,254,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['depend'],['depending']
Integrability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// thread for processing windows messages (aka Main/Server thread). static DWORD WINAPI MessageProcessingLoop(void *p); {; MSG msg;; Int_t erret;; Bool_t endLoop = kFALSE;; TGWin32RefreshTimer *refersh = 0;. // force to create message queue; ::PeekMessage(&msg, NULL, WM_USER, WM_USER, PM_NOREMOVE);. // periodically we refresh windows; // Don't create refresh timer if the application has been created inside PVSS; if (gApplication) {; TString arg = gSystem->BaseName(gApplication->Argv(0));; if (!arg.Contains(""PVSS"")); refersh = new TGWin32RefreshTimer();; }. while (!endLoop) {; erret = ::GetMessage(&msg, NULL, NULL, NULL);; if (erret <= 0) endLoop = kTRUE;; endLoop = MessageProcessingFunc(&msg);; }. TGWin32::Instance()->CloseDisplay();; if (refersh); delete refersh;. // exit thread; if (erret == -1) {; erret = ::GetLastError();; Error(""MsgLoop"", ""Error in GetMessage"");; ::ExitThread(-1);; } else {; ::ExitThread(0);; }; return 0;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:120,message,messages,120,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,4,"['Message', 'message']","['MessageProcessingFunc', 'MessageProcessingLoop', 'message', 'messages']"
Integrability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:733,depend,depends,733,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['depend', 'message']","['depends', 'message']"
Integrability,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any; pending output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case,; msg may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the exact; value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller. msg is set to null if there is no error; message. inflateInit does not perform any decompression apart from reading; the zlib header if present: this will be done by inflate(). (So next_in and; avail_in may be modified, but next_out and avail_out are unchanged.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:733,depend,depends,733,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['depend', 'message']","['depends', 'message']"
Integrability,"/*; Copyright 1992 Mark Spychalla. Permission to use, copy, modify, distribute, and sell this software and; its documentation for any purpose is hereby granted without fee,; provided that the above copyright notice appear in all copies and that; both that copyright notice and this permission notice appear in; supporting documentation, and that the name of Mark Spychalla not be used; in advertising or publicity pertaining to distribution of the software; without specific, written prior permission. Mark Spychalla makes no; representations about the suitability of this software for any purpose.; It is provided ""as is"" without express or implied warranty. Mark Spychalla disclaims all warranties with regard to this software,; including all implied warranties of merchantability and fitness, in no; event shall Mark Spychalla be liable for any special, indirect or; consequential damages or any damages whatsoever resulting from loss of use,; data or profits, whether in an action of contract, negligence or other; tortious action, arising out of or in connection with the use or performance; of this software.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h:988,contract,contract,988,graf3d/x3d/src/x3d.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h,1,['contract'],['contract']
Integrability,"/*; Create and fill in decoding tables. In this loop, the table being; filled is at next and has curr index bits. The code being used is huff; with length len. That code is converted to an index by dropping drop; bits off of the bottom. For codes where len is less than drop + curr,; those top drop + curr - len bits are incremented through all values to; fill the table with replicated entries. root is the number of index bits for the root table. When len exceeds; root, sub-tables are created pointed to by the root entry with an index; of the low root bits of huff. This is saved in low to check for when a; new sub-table should be started. drop is zero when the root table is; being filled, and drop is root when sub-tables are being filled. When a new sub-table is needed, it is necessary to look ahead in the; code lengths to determine what size sub-table is needed. The length; counts are used for this, and so count[] is decremented as codes are; entered in the tables. used keeps track of how many table entries have been allocated from the; provided *table space. It is checked for LENS and DIST tables against; the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in; the initial root table size constants. See the comments in inftrees.h; for more information. sym increments through all symbols, and the loop terminates when; all codes of length max, i.e. all codes, have been processed. This; routine permits incomplete codes, so another loop after this one fills; in the rest of the decoding tables with invalid code markers.; */; /* set up for code type */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:1422,rout,routine,1422,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,1,['rout'],['routine']
Integrability,"/*; Create and fill in decoding tables. In this loop, the table being; filled is at next and has curr index bits. The code being used is huff; with length len. That code is converted to an index by dropping drop; bits off of the bottom. For codes where len is less than drop + curr,; those top drop + curr - len bits are incremented through all values to; fill the table with replicated entries. root is the number of index bits for the root table. When len exceeds; root, sub-tables are created pointed to by the root entry with an index; of the low root bits of huff. This is saved in low to check for when a; new sub-table should be started. drop is zero when the root table is; being filled, and drop is root when sub-tables are being filled. When a new sub-table is needed, it is necessary to look ahead in the; code lengths to determine what size sub-table is needed. The length; counts are used for this, and so count[] is decremented as codes are; entered in the tables. used keeps track of how many table entries have been allocated from the; provided *table space. It is checked when a LENS table is being made; against the space in *table, ENOUGH, minus the maximum space needed by; the worst case distance code, MAXD. This should never happen, but the; sufficiency of ENOUGH has not been proven exhaustively, hence the check.; This assumes that when type == LENS, bits == 9. sym increments through all symbols, and the loop terminates when; all codes of length max, i.e. all codes, have been processed. This; routine permits incomplete codes, so another loop after this one fills; in the rest of the decoding tables with invalid code markers.; */; /* set up for code type */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inftrees.c:1521,rout,routine,1521,graf2d/asimage/src/libAfterImage/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inftrees.c,1,['rout'],['routine']
Integrability,"/*; Decode literal, length, and distance codes and write out the resulting; literal and match bytes until either not enough input or output is; available, an end-of-block is encountered, or a data error is encountered.; When large enough input and output buffers are supplied to inflate(), for; example, a 16K input buffer and a 64K output buffer, more than 95% of the; inflate execution time is spent in this routine. Entry assumptions:. state->mode == LEN; strm->avail_in >= 6; strm->avail_out >= 258; start >= strm->avail_out; state->bits < 8. On return, state->mode is one of:. LEN -- ran out of enough output space or enough available input; TYPE -- reached end of block code, inflate() to interpret next block; BAD -- error in block data. Notes:. - The maximum input bits used by a length/distance pair is 15 bits for the; length code, 5 bits for the length extra, 15 bits for the distance code,; and 13 bits for the distance extra. This totals 48 bits, or six bytes.; Therefore if strm->avail_in >= 6, then there is enough input to avoid; checking for available input while decoding. - The maximum bytes that a single length/distance pair can output is 258; bytes, which is the maximum length that can be coded. inflate_fast(); requires strm->avail_out >= 258 for each loop to avoid checking for; output space.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:410,rout,routine,410,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['rout'],['routine']
Integrability,"/*; Decompresses the source buffer into the destination buffer. sourceLen is; the byte length of the source buffer. Upon entry, destLen is the total size; of the destination buffer, which must be large enough to hold the entire; uncompressed data. (The size of the uncompressed data must have been saved; previously by the compressor and transmitted to the decompressor by some; mechanism outside the scope of this compression library.) Upon exit, destLen; is the actual size of the uncompressed buffer. uncompress returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_BUF_ERROR if there was not enough room in the output; buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete. In; the case where there is not enough room, uncompress() will fill the output; buffer with the uncompressed data up to that point.; */; /* gzip file access functions */; /*; This library supports reading and writing files in gzip (.gz) format with; an interface similar to that of stdio, using the functions that start with; ""gz"". The gzip format is different from the zlib format. gzip is a gzip; wrapper, documented in RFC 1952, wrapped around a deflate stream.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:965,interface,interface,965,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,3,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,"/*; In future, this should be an interface to per-pad FBO.; Currently, in only save sizes and coordinates (?); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPadUtils.h:33,interface,interface,33,graf3d/gl/inc/TGLPadUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPadUtils.h,1,['interface'],['interface']
Integrability,"/*; In future, this should be an interface to per-pad FBO.; Currently, in only save sizes and coordinates (?); */; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadUtils.cxx:33,interface,interface,33,graf3d/gl/src/TGLPadUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadUtils.cxx,1,['interface'],['interface']
Integrability,"/*; Initializes the compression dictionary from the given byte sequence; without producing any compressed output. This function must be called; immediately after deflateInit, deflateInit2 or deflateReset, before any; call of deflate. The compressor and decompressor must use exactly the same; dictionary (see inflateSetDictionary). The dictionary should consist of strings (byte sequences) that are likely; to be encountered later in the data to be compressed, with the most commonly; used strings preferably put towards the end of the dictionary. Using a; dictionary is most useful when the data to be compressed is short and can be; predicted with good accuracy; the data can then be compressed better than; with the default empty dictionary. Depending on the size of the compression data structures selected by; deflateInit or deflateInit2, a part of the dictionary may in effect be; discarded, for example if the dictionary is larger than the window size in; deflate or deflate2. Thus the strings most likely to be useful should be; put at the end of the dictionary, not at the front. In addition, the; current implementation of deflate will use at most the window size minus; 262 bytes of the provided dictionary. Upon return of this function, strm->adler is set to the adler32 value; of the dictionary; the decompressor may later use this value to determine; which dictionary has been used by the compressor. (The adler32 value; applies to the whole dictionary even if only a subset of the dictionary is; actually used by the compressor.) If a raw deflate was requested, then the; adler32 value is not computed and strm->adler is not set. deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a; parameter is invalid (such as NULL dictionary) or the stream state is; inconsistent (for example if deflate has already been called for this stream; or if the compression method is bsort). deflateSetDictionary does not; perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:745,Depend,Depending,745,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['Depend'],['Depending']
Integrability,"/*; Kernel Density Estimation class.; The three main references are. (1) ""Scott DW, Multivariate Density Estimation.Theory, Practice and Visualization. New York: Wiley"",; (2) ""Jann Ben - ETH Zurich, Switzerland -, Univariate kernel density estimation document for KDENS: Stata module for univariate kernel density estimation.""; (3) ""Hardle W, Muller M, Sperlich S, Werwatz A, Nonparametric and Semiparametric Models. Springer.""The algorithm is briefly described in; ""Cranmer KS, Kernel Estimation in High-Energy Physics. Computer Physics Communications 136:198-207,2001"" - e-Print Archive: hep ex/0011057.; A binned version is also implemented to address the performance issue due to its data size dependence.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h:698,depend,dependence,698,hist/hist/inc/TKDE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h,1,['depend'],['dependence']
Integrability,"/*; LZ4 HC - High Compression Mode of LZ4; Copyright (C) 2011-2017, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - LZ4 source repository : https://github.com/lz4/lz4; - LZ4 public forum : https://groups.google.com/forum/#!forum/lz4c; */; /* note : lz4hc is not an independent module, it requires lz4.h/lz4.c for proper compilation */; /* *************************************; * Tuning Parameter; ***************************************/; /*! HEAPMODE :; * Select how default compression function will allocate workplace memory,; * in stack (0:fastest), or in heap (1:requires malloc()).; * Since workplace is rather large, heap mode is recommended.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:1227,CONTRACT,CONTRACT,1227,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; LZ4 auto-framing library; Header File for static linking only; Copyright (C) 2011-2016, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - LZ4 source repository : https://github.com/lz4/lz4; - LZ4 public forum : https://groups.google.com/forum/#!forum/lz4c; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h:1251,CONTRACT,CONTRACT,1251,builtins/lz4/lz4frame_static.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*; Mesh builder requires generic ""data source"": it can; be a wrapped TH3 object, a wrapped TF3 object or some; ""density estimator"" object.; Mesh builder inherits this data source type. TH3Adapter is one of such data sources.; It has _direct_ access to TH3 internal data.; GetBinContent(i, j, k) is a virtual function; and it calls two other virtual functions - this; is very expensive if you call GetBinContent; several million times as I do in marching cubes. ""H"" parameter is one of TH3 classes,; ""E"" is the type of internal data. For example, H == TH3C, E == Char_t.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:62,wrap,wrapped,62,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,2,['wrap'],['wrapped']
Integrability,"/*; Process a set of code lengths to create a canonical Huffman code. The; code lengths are lens[0..codes-1]. Each length corresponds to the; symbols 0..codes-1. The Huffman code is generated by first sorting the; symbols by length from short to long, and retaining the symbol order; for codes with equal lengths. Then the code starts with all zero bits; for the first code of the shortest length, and the codes are integer; increments for the same length, and zeros are appended as the length; increases. For the deflate format, these bits are stored backwards; from their more natural integer increment ordering, and so when the; decoding tables are built in the large loop below, the integer codes; are incremented backwards. This routine assumes, but does not check, that all of the entries in; lens[] are in the range 0..MAXBITS. The caller must assure this.; 1..MAXBITS is interpreted as that code length. zero means that that; symbol does not occur in this code. The codes are sorted by computing a count of codes for each length,; creating from that a table of starting indices for each length in the; sorted table, and then entering the symbols in order in the sorted; table. The sorted table is work[], with that space being provided by; the caller. The length counts are used for other purposes as well, i.e. finding; the minimum and maximum length codes, determining if there are any; codes at all, checking for a valid set of lengths, and looking ahead; at length counts to determine sub-table sizes when building the; decoding tables.; */; /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c:734,rout,routine,734,builtins/zlib/inftrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.c,2,['rout'],['routine']
Integrability,"/*; Return state with length and distance decoding tables and index sizes set to; fixed code decoding. Normally this returns fixed tables from inffixed.h.; If BUILDFIXED is defined, then instead this routine builds the tables the; first time it's called, and returns those tables the first time and; thereafter. This reduces the size of the code by about 2K bytes, in; exchange for a little execution time. However, BUILDFIXED should not be; used for threaded applications, since the rewriting of the tables and virgin; may not be thread-safe.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:200,rout,routine,200,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,4,['rout'],['routine']
Integrability,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:22,message,message,22,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['message'],['message']
Integrability,"/*; Returns the error message for the last error which occurred on the; given compressed file. errnum is set to zlib error number. If an; error occurred in the file system and not in the compression library,; errnum is set to Z_ERRNO and the application may consult errno; to get the exact error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:22,message,message,22,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['message'],['message']
Integrability,"/*; Some routines, values and tables for marching cube method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:9,rout,routines,9,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,2,['rout'],['routines']
Integrability,/*; TGLPlotPainter class defines interface to different plot painters.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPlotPainter.h:33,interface,interface,33,graf3d/gl/inc/TGLPlotPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPlotPainter.h,1,['interface'],['interface']
Integrability,"/*; TMeshBuilder's implementation.; ""this->"" is used with type-dependant names; in templates.; */; ////////////////////////////////////////////////////////////////////////////////; ///Build iso-mesh using marching cubes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLMarchingCubes.cxx:63,depend,dependant,63,graf3d/gl/src/TGLMarchingCubes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLMarchingCubes.cxx,1,['depend'],['dependant']
Integrability,"/*; TMessage msg(kPROOF_GETOUTPUTLIST);; TList* slaves = fActiveSlaves;; Broadcast(msg, slaves);; TMonitor mon;; TList* outputList = new TList();. TIter si(slaves);; TSlave *slave;; while ((slave = (TSlave*)si.Next()) != 0) {; PDB(kGlobal,4) Info(""GetOutputNames"",""Socket added to monitor: %p (%s)"",; slave->GetSocket(), slave->GetName());; mon.Add(slave->GetSocket());; }; mon.ActivateAll();; ((TProof*)gProof)->DeActivateAsyncInput();; ((TProof*)gProof)->fCurrentMonitor = &mon;. while (mon.GetActive() != 0) {; TSocket *sock = mon.Select();; if (!sock) {; Error(""GetOutputList"",""TMonitor::.Select failed!"");; break;; }; mon.DeActivate(sock);; TMessage *reply;; if (sock->Recv(reply) <= 0) {; MarkBad(slave, ""receive failed after kPROOF_GETOUTPUTLIST request"");; // Error(""GetOutputList"",""Recv failed! for slave-%d (%s)"",; // slave->GetOrdinal(), slave->GetName());; continue;; }; if (reply->What() != kPROOF_GETOUTPUTNAMES ) {; // Error(""GetOutputList"",""unexpected message %d from slawe-%d (%s)"", reply->What(),; // slave->GetOrdinal(), slave->GetName());; MarkBad(slave, ""wrong reply to kPROOF_GETOUTPUTLIST request"");; continue;; }; TList* l;. (*reply) >> l;; TIter next(l);; TNamed *n;; while ( (n = dynamic_cast<TNamed*> (next())) ) {; if (!outputList->FindObject(n->GetName())); outputList->Add(n);; }; delete reply;; }; ((TProof*)gProof)->fCurrentMonitor = 0;. return outputList;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:968,message,message,968,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"/*; TSourceAdapterSelector is aux. class used by TMeshBuilder to; select ""data-source"" base depending on data-source type.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:92,depend,depending,92,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,1,['depend'],['depending']
Integrability,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:300,interface,interface,300,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,6,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed; data. This version of the library supports only one compression method; (deflation) but other algorithms will be added later and will have the same; stream interface. Compression can be done in a single step if the buffers are large; enough (for example if an input file is mmap'ed), or can be done by; repeated calls of the compression function. In the latter case, the; application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never; crash even in case of corrupted input.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:300,interface,interface,300,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,6,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,"/*; The following code does a BFS traversal of the `PtrAssignmentGraph`; considering all unsafe vars as starting nodes and constructs an undirected; graph `DependenciesMap`. Constructing the `DependenciesMap` in this manner; elimiates all variables that are unreachable from any unsafe var. In other; words, this removes all dependencies that don't include any unsafe variable; and consequently don't need any fixit generation.; Note: A careful reader would observe that the code traverses; `PtrAssignmentGraph` using `CurrentVar` but adds edges between `Var` and; `Adj` and not between `CurrentVar` and `Adj`. Both approaches would; achieve the same result but the one used here dramatically cuts the; amount of hoops the second part of the algorithm needs to jump, given that; a lot of these connections become ""direct"". The reader is advised not to; imagine how the graph is transformed because of using `Var` instead of; `CurrentVar`. The reader can continue reading as if `CurrentVar` was used,; and think about why it's equivalent later.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:156,Depend,DependenciesMap,156,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,3,"['Depend', 'depend']","['DependenciesMap', 'dependencies']"
Integrability,/*; This function Gets the next tag from teh input file stream; file - the open input stream; out - we return the tag through that parameter; lineCount - we are counting the line numbers here in order to print error messages in case of an error; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:216,message,messages,216,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,1,['message'],['messages']
Integrability,"/*; This function is the same as inflateReset, but it also permits changing; the wrap and window size requests. The windowBits parameter is interpreted; the same as it is for inflateInit2. inflateReset2 returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent (such as zalloc or state being Z_NULL), or if; the windowBits parameter is invalid.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:81,wrap,wrap,81,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['wrap'],['wrap']
Integrability,"/*; Vector insert.; We use macros rather than inlines because we only want to accept; invocations where the immediate M is a constant expression.; */; /// Constructs a new 256-bit vector of [8 x float] by first duplicating; /// a 256-bit vector of [8 x float] given in the first parameter, and then; /// replacing either the upper or the lower 128 bits with the contents of a; /// 128-bit vector of [4 x float] in the second parameter.; ///; /// The immediate integer parameter determines between the upper or the lower; /// 128 bits.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256 _mm256_insertf128_ps(__m256 V1, __m128 V2, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VINSERTF128 </c> instruction.; ///; /// \param V1; /// A 256-bit vector of [8 x float]. This vector is copied to the result; /// first, and then either the upper or the lower 128 bits of the result will; /// be replaced by the contents of \a V2.; /// \param V2; /// A 128-bit vector of [4 x float]. The contents of this parameter are; /// written to either the upper or the lower 128 bits of the result depending; /// on the value of parameter \a M.; /// \param M; /// An immediate integer. The least significant bit determines how the values; /// from the two parameters are interleaved: \n; /// If bit [0] of \a M is 0, \a V2 are copied to bits [127:0] of the result,; /// and bits [255:128] of \a V1 are copied to bits [255:128] of the; /// result. \n; /// If bit [0] of \a M is 1, \a V2 are copied to bits [255:128] of the; /// result, and bits [127:0] of \a V1 are copied to bits [127:0] of the; /// result.; /// \returns A 256-bit vector of [8 x float] containing the interleaved values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:1121,depend,depending,1121,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['depend'],['depending']
Integrability,"/*; add (set) a single function fi(x1,...xn) which is part of the system of; specifying the begin and end of the iterator.; If using a derivative type algorithm the function must implement the; ROOT::Math::IMultiGradFunction interface; Return the current number of function in the list and 0 if failed to add the function; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:225,interface,interface,225,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['interface'],['interface']
Integrability,"/*; add the list of functions f1(x1,..xn),...fn(x1,...xn). The list must contain pointers of; ROOT::Math::IMultiGenFunctions. The method requires the; the begin and end of the list iterator.; The list can be any stl container or a simple array of ROOT::Math::IMultiGenFunctions* or; whatever implementing an iterator.; If using a derivative type algorithm the function pointers must implement the; ROOT::Math::IMultiGradFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:429,interface,interface,429,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['interface'],['interface']
Integrability,"/*; cout << ""---------------------------\nin PiecewiseInterpolation get analytic integral "" <<endl;; cout << ""all vars = ""<<endl;; allVars.Print(""v"");; cout << ""anal vars = ""<<endl;; analVars.Print(""v"");; cout << ""normset vars = ""<<endl;; if(normSet2); normSet2->Print(""v"");; */; // Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,integrat,integration,301,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['integrat'],['integration']
Integrability,"/*; dt->ApplyValidationSample(validationSample);; Double_t weights = dt->GetSumWeights(validationSample);; // set the initial prune strength; fPruneStrength = 1.0e-3; //! FIXME somehow make this automatic, it depends strongly on the tree structure; // better to set it too small, it will be increased automatically; fDeltaPruneStrength = 1.0e-5;; Int_t nnodes = this->CountNodes((DecisionTreeNode*)dt->GetRoot());. Bool_t forceStop = kFALSE;; Int_t errCount = 0,; lastNodeCount = nnodes;. // find the maximum prune strength that still leaves the root's daughter nodes. while ( nnodes > 1 && !forceStop ) {; fPruneStrength += fDeltaPruneStrength;; Log() << ""----------------------------------------------------"" << Endl;; FindListOfNodes((DecisionTreeNode*)dt->GetRoot());; for( UInt_t i = 0; i < fPruneSequence.size(); i++ ); fPruneSequence[i]->SetTerminal(); // prune all the nodes from the sequence; // test the quality of the pruned tree; Double_t quality = 1.0 - dt->TestPrunedTreeQuality()/weights;; fQualityMap.insert(std::make_pair<const Double_t,Double_t>(quality,fPruneStrength));. nnodes = CountNodes((DecisionTreeNode*)dt->GetRoot()); // count the number of nodes in the pruned tree. Log() << ""Prune strength : "" << fPruneStrength << Endl;; Log() << ""Had "" << lastNodeCount << "" nodes, now have "" << nnodes << Endl;; Log() << ""Quality index is: "" << quality << Endl;. if (lastNodeCount == nnodes) errCount++;; else {; errCount=0; // reset counter; if ( nnodes < lastNodeCount / 2 ) {; Log() << ""Decreasing fDeltaPruneStrength to "" << fDeltaPruneStrength/2.0; << "" because the number of nodes in the tree decreased by a factor of 2."" << Endl;; fDeltaPruneStrength /= 2.;; }; }; lastNodeCount = nnodes;; if (errCount > 20) {; Log() << ""Increasing fDeltaPruneStrength to "" << fDeltaPruneStrength*2.0; << "" because the number of nodes in the tree didn't change."" << Endl;; fDeltaPruneStrength *= 2.0;; }; if (errCount > 40) {; Log() << ""Having difficulty determining the optimal prune strength,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:209,depend,depends,209,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['depend'],['depends']
Integrability,/*; gzip header information passed to and from zlib routines. See RFC 1952; for more details on the meanings of these fields.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:52,rout,routines,52,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['rout'],['routines']
Integrability,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is more efficient than inflate() for; file i/o applications in that it avoids copying between the output and the; sliding window by simply making the window itself the output buffer. This; function trusts the application to not change the output buffer passed by; the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free; the allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:75,interface,interface,75,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,3,"['interface', 'rout']","['interface', 'routine']"
Integrability,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:75,interface,interface,75,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,/*; set print level; level = 0 quiet (no messages print); = 1 print only the result; = 3 max debug. Print result at each iteration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:41,message,messages,41,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,1,['message'],['messages']
Integrability,"/*; strm provides the memory allocation functions and window buffer on input,; and provides information on the unused input on return. For Z_DATA_ERROR; returns, strm will also provide an error message. in() and out() are the call-back input and output functions. When; inflateBack() needs more input, it calls in(). When inflateBack() has; filled the window with output, or when it completes with data in the; window, it calls out() to write out the data. The application must not; change the provided input until in() is called again or inflateBack(); returns. The application must not change the window/output buffer until; inflateBack() returns. in() and out() are called with a descriptor parameter provided in the; inflateBack() call. This parameter can be a structure that provides the; information required to do the read or write, as well as accumulated; information on the input and output such as totals and check values. in() should return zero on failure. out() should return non-zero on; failure. If either in() or out() fails, than inflateBack() returns a; Z_BUF_ERROR. strm->next_in can be checked for Z_NULL to see whether it; was in() or out() that caused in the error. Otherwise, inflateBack(); returns Z_STREAM_END on success, Z_DATA_ERROR for an deflate format; error, or Z_MEM_ERROR if it could not allocate memory for the state.; inflateBack() can also return Z_STREAM_ERROR if the input parameters; are not correct, i.e. strm is Z_NULL or the state was not initialized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:194,message,message,194,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,2,['message'],['message']
Integrability,/*; struct _objc_category {; char *category_name;; char *class_name;; struct _objc_method_list *instance_methods;; struct _objc_method_list *class_methods;; struct _objc_protocol_list *protocols;; uint32_t size; // sizeof(struct _objc_category); struct _objc_property_list *instance_properties;; struct _objc_property_list *class_properties;; };; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:185,protocol,protocols,185,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['protocol'],['protocols']
Integrability,/*; struct _objc_class {; Class isa;; Class super_class;; const char *name;; long version;; long info;; long instance_size;; struct _objc_ivar_list *ivars;; struct _objc_method_list *methods;; struct _objc_cache *cache;; struct _objc_protocol_list *protocols;; // Objective-C 1.0 extensions (<rdr://4585769>); const char *ivar_layout;; struct _objc_class_ext *ext;; };. See EmitClassExtension();; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:249,protocol,protocols,249,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['protocol'],['protocols']
Integrability,/*; struct objc_protocol_list {; struct objc_protocol_list *next;; long count;; Protocol *list[];; };; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:80,Protocol,Protocol,80,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['Protocol'],['Protocol']
Integrability,"/*; xml << ""<Function Name=\"""" << func.GetName() << ""\"" ""; << ""Expression=\"""" << func.GetExpression() << ""\"" ""; << ""Dependents=\"""" << func.GetDependents() << ""\"" ""; << ""/>"" << std::endl;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:116,Depend,Dependents,116,roofit/histfactory/src/Measurement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx,1,['Depend'],['Dependents']
Integrability,"/*; xxHash - Extremely Fast Hash algorithm; Header File; Copyright (C) 2012-2016, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - xxHash source repository : https://github.com/Cyan4973/xxHash; */; /* based on revision d2df04efcbef7d7f6886d345861e5dfda4edacc1 Removed; * everything but a simple interface for computing XXh64. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h:1241,CONTRACT,CONTRACT,1241,interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/xxhash.h,2,"['CONTRACT', 'interface']","['CONTRACT', 'interface']"
Integrability,"/*==-- clang-c/Documentation.h - Utilities for comment processing -*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides a supplementary interface for inspecting *|; |* documentation comments. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h:445,interface,interface,445,interpreter/llvm-project/clang/include/clang-c/Documentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Documentation.h,1,['interface'],['interface']
Integrability,/*=== Dependency ===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:6,Depend,Dependency,6,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['Depend'],['Dependency']
Integrability,"/*===- clang-c/ExternC.h - Wrapper for 'extern ""C""' ---------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines an 'extern ""C""' wrapper. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/ExternC.h:27,Wrap,Wrapper,27,interpreter/llvm-project/clang/include/clang-c/ExternC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/ExternC.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"/*===- llvm-c/ExternC.h - Wrapper for 'extern ""C""' ----------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines an 'extern ""C""' wrapper *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExternC.h:26,Wrap,Wrapper,26,interpreter/llvm-project/llvm/include/llvm-c/ExternC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExternC.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"/*===-- CIndexDiagnostic.h - Diagnostics C Interface ------------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* Implements the diagnostic functions of the Clang C interface. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.h:43,Interface,Interface,43,interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- clang-c/CXCompilationDatabase.h - Compilation database ---*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides a public interface to use CompilationDatabase without *|; |* the full Clang C++ API. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h:437,interface,interface,437,interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXCompilationDatabase.h,1,['interface'],['interface']
Integrability,"/*===-- clang-c/CXDiagnostic.h - C Index Diagnostics --------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides the interface to C Index diagnostics. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h:433,interface,interface,433,interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXDiagnostic.h,1,['interface'],['interface']
Integrability,"/*===-- clang-c/CXFile.h - C Index File ---------------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides the interface to C Index files. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h:433,interface,interface,433,interpreter/llvm-project/clang/include/clang-c/CXFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXFile.h,1,['interface'],['interface']
Integrability,"/*===-- clang-c/CXSourceLocation.h - C Index Source Location ------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides the interface to C Index source locations. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h:433,interface,interface,433,interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXSourceLocation.h,1,['interface'],['interface']
Integrability,"/*===-- clang-c/CXString.h - C Index strings --------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides the interface to C Index strings. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXString.h:431,interface,interface,431,interpreter/llvm-project/clang/include/clang-c/CXString.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/CXString.h,1,['interface'],['interface']
Integrability,"/*===-- clang-c/Index.h - Indexing Public C Interface -------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides a public interface to a Clang library for extracting *|; |* high-level symbol information from source files without exposing the full *|; |* Clang C++ API. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:44,Interface,Interface,44,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- complex --- OpenMP complex wrapper for target regions --------- c++ -===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/complex.h:35,wrap,wrapper,35,interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/complex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/complex.h,1,['wrap'],['wrapper']
Integrability,"/*===-- llvm-c/Analysis.h - Analysis Library C Interface --------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMAnalysis.a, which *|; |* implements various analyses of the LLVM IR. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Analysis.h:47,Interface,Interface,47,interpreter/llvm-project/llvm/include/llvm-c/Analysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Analysis.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/BitReader.h - BitReader Library C Interface ------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMBitReader.a, which *|; |* implements input of the LLVM bitcode format. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/BitWriter.h - BitWriter Library C Interface ------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMBitWriter.a, which *|; |* implements output of the LLVM bitcode format. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitWriter.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/include/llvm-c/BitWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitWriter.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Comdat.h - Module Comdat C Interface -------------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to COMDAT. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Comdat.h:42,Interface,Interface,42,interpreter/llvm-project/llvm/include/llvm-c/Comdat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Comdat.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Core.h - Core Library C Interface ------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMCore.a, which implements *|; |* the LLVM intermediate representation. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:39,Interface,Interface,39,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Deprecated.h - Deprecation macro -------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares LLVM_ATTRIBUTE_C_DEPRECATED() macro, which can be *|; |* used to deprecate functions in the C interface. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Deprecated.h:523,interface,interface,523,interpreter/llvm-project/llvm/include/llvm-c/Deprecated.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Deprecated.h,1,['interface'],['interface']
Integrability,"/*===-- llvm-c/Disassembler.h - Disassembler Public C Interface ---*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides a public interface to a disassembler library. *|; |* LLVM provides an implementation of this interface. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Disassembler.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/include/llvm-c/Disassembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Disassembler.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/ErrorHandling.h - Error Handling C Interface -------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to LLVM's error handling mechanism. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ErrorHandling.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/ExecutionEngine.h - ExecutionEngine Lib C Iface --*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMExecutionEngine.o, which *|; |* implements various analyses of the LLVM IR. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/ExecutionEngine.h,2,['interface'],['interface']
Integrability,"/*===-- llvm-c/IRReader.h - IR Reader C Interface -----------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to the IR Reader. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/IRReader.h:40,Interface,Interface,40,interpreter/llvm-project/llvm/include/llvm-c/IRReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/IRReader.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Linker.h - Module Linker C Interface -------------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to the module/file/archive linker. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h:42,Interface,Interface,42,interpreter/llvm-project/llvm/include/llvm-c/Linker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Object.h - Object Lib C Iface --------------------*- C++ -*-===*/; /* */; /* Part of the LLVM Project, under the Apache License v2.0 with LLVM */; /* Exceptions. */; /* See https://llvm.org/LICENSE.txt for license information. */; /* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception */; /* */; /*===----------------------------------------------------------------------===*/; /* */; /* This header declares the C interface to libLLVMObject.a, which */; /* implements object file reading and writing. */; /* */; /* Many exotic languages can interoperate with C code but have a harder time */; /* with C++ due to name mangling. So in addition to C, this interface enables */; /* tools written in such languages. */; /* */; /*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/Object.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Object.h,2,['interface'],['interface']
Integrability,"/*===-- llvm-c/OrcEE.h - OrcV2 C bindings ExecutionEngine utils -*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to ExecutionEngine based utils, e.g. *|; |* RTDyldObjectLinkingLayer (based on RuntimeDyld) in Orc. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; |* Note: This interface is experimental. It is *NOT* stable, and may be *|; |* changed without warning. Only C API usage documentation is *|; |* provided. See the C++ documentation for all higher level ORC API *|; |* details. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/OrcEE.h,3,['interface'],['interface']
Integrability,"/*===-- llvm-c/Remarks.h - Remarks Public C Interface -------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides a public interface to a remark diagnostics library. *|; |* LLVM provides an implementation of this interface. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Remarks.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Support.h - C Interface Types declarations ---------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines types used by the C interface to LLVM. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h:29,Interface,Interface,29,interpreter/llvm-project/llvm/include/llvm-c/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Support.h - Support C Interface --------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to the LLVM support library. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Support.h:37,Interface,Interface,37,interpreter/llvm-project/llvm/include/llvm-c/Support.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Support.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Target.h - Target Lib C Iface --------------------*- C++ -*-===*/; /* */; /* Part of the LLVM Project, under the Apache License v2.0 with LLVM */; /* Exceptions. */; /* See https://llvm.org/LICENSE.txt for license information. */; /* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception */; /* */; /*===----------------------------------------------------------------------===*/; /* */; /* This header declares the C interface to libLLVMTarget.a, which */; /* implements target information. */; /* */; /* Many exotic languages can interoperate with C code but have a harder time */; /* with C++ due to name mangling. So in addition to C, this interface enables */; /* tools written in such languages. */; /* */; /*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,2,['interface'],['interface']
Integrability,"/*===-- llvm-c/TargetMachine.h - Target Machine Library C Interface - C++ -*-=*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to the Target and TargetMachine *|; |* classes, which can be used to generate assembly or object files. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:58,Interface,Interface,58,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/Transform/PassBuilder.h - PassBuilder for LLVM C ---*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header contains the LLVM-C interface into the new pass manager *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h:440,interface,interface,440,interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Transforms/PassBuilder.h,1,['interface'],['interface']
Integrability,/*===-- llvm-c/blake3.h - BLAKE3 C Interface ----------------------*- C -*-===*\; |* *|; |* Released into the public domain with CC0 1.0 *|; |* See 'llvm/lib/Support/BLAKE3/LICENSE' for info. *|; |* SPDX-License-Identifier: CC0-1.0 *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to LLVM's BLAKE3 implementation. *|; |* Original BLAKE3 C API: https://github.com/BLAKE3-team/BLAKE3/tree/1.3.1/c *|; |* *|; |* Symbols are prefixed with 'llvm' to avoid a potential conflict with *|; |* another BLAKE3 version within the same program. *|; |* *|; \*===----------------------------------------------------------------------===*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/blake3.h:35,Interface,Interface,35,interpreter/llvm-project/llvm/include/llvm-c/blake3.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/blake3.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===-- llvm-c/lto.h - LTO Public C Interface ---------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header provides public interface to an abstract link time optimization*|; |* library. LLVM provides an implementation of this interface for use with *|; |* llvm bitcode files. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h:36,Interface,Interface,36,interpreter/llvm-project/llvm/include/llvm-c/lto.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/lto.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===--- __clang_cuda_intrinsics.h - Device-side CUDA intrinsic wrappers ---===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_intrinsics.h:64,wrap,wrappers,64,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_intrinsics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_intrinsics.h,1,['wrap'],['wrappers']
Integrability,"/*===---- __clang_cuda_runtime_wrapper.h - CUDA runtime support -------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * WARNING: This header is intended to be directly -include'd by; * the compiler and is not supposed to be included by users.; *; * CUDA headers are implemented in a way that currently makes it; * impossible for user code to #include directly when compiling with; * Clang. They present different view of CUDA-supplied functions; * depending on where in NVCC's compilation pipeline the headers are; * included. Neither of these modes provides function definitions with; * correct attributes, so we use preprocessor to force the headers; * into a form that Clang can use.; *; * Similarly to NVCC which -include's cuda_runtime.h, Clang -include's; * this file during every CUDA compilation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:707,depend,depending,707,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['depend'],['depending']
Integrability,"/*===---- arm_neon_sve_bridge.h - ARM NEON SVE Bridge intrinsics -----------===; *; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_neon_sve_bridge.h:47,Bridg,Bridge,47,interpreter/llvm-project/clang/lib/Headers/arm_neon_sve_bridge.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_neon_sve_bridge.h,1,['Bridg'],['Bridge']
Integrability,"/*===---- openmp_wrapper/math.h -------- OpenMP math.h intercept ------ c++ -===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; // If we are in C++ mode and include <math.h> (not <cmath>) first, we still need; // to make sure <cmath> is read first. The problem otherwise is that we haven't; // seen the declarations of the math.h functions when the system math.h includes; // our cmath overlay. However, our cmath overlay, or better the underlying; // overlay, e.g. CUDA, uses the math.h functions. Since we haven't declared them; // yet we get errors. CUDA avoids this by eagerly declaring all math functions; // (in the __device__ space) but we cannot do this. Instead we break the; // dependence by forcing cmath to go first. While our cmath will in turn include; // this file, the cmath guards will prevent recursion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h:933,depend,dependence,933,interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/math.h,1,['depend'],['dependence']
Integrability,"/*===---- stdarg.h - Variable argument handling ----------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * This header is designed to be included multiple times. If any of the __need_; * macros are defined, then only that subset of interfaces are provided. This; * can be useful for POSIX headers that need to not expose all of stdarg.h, but; * need to use some of its interfaces. Otherwise this header provides all of; * the expected interfaces.; *; * When clang modules are enabled, this header is a textual header. It ignores; * its header guard so that multiple submodules can export its interfaces.; * Take module SM with submodules A and B, whose headers both include stdarg.h; * When SM.A builds, __STDARG_H will be defined. When SM.B builds, the; * definition from SM.A will leak when building without local submodule; * visibility. stdarg.h wouldn't include any of its implementation headers, and; * SM.B wouldn't import any of the stdarg modules, and SM.B's `export *`; * wouldn't export any stdarg interfaces as expected. However, since stdarg.h; * ignores its header guard when building with modules, it all works as; * expected.; *; * When clang modules are not enabled, the header guards can function in the; * normal simple fashion.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h:503,interface,interfaces,503,interpreter/llvm-project/clang/lib/Headers/stdarg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h,5,['interface'],['interfaces']
Integrability,"/*===---- stddef.h - Basic type definitions --------------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * This header is designed to be included multiple times. If any of the __need_; * macros are defined, then only that subset of interfaces are provided. This; * can be useful for POSIX headers that need to not expose all of stddef.h, but; * need to use some of its interfaces. Otherwise this header provides all of; * the expected interfaces.; *; * When clang modules are enabled, this header is a textual header. It ignores; * its header guard so that multiple submodules can export its interfaces.; * Take module SM with submodules A and B, whose headers both include stddef.h; * When SM.A builds, __STDDEF_H will be defined. When SM.B builds, the; * definition from SM.A will leak when building without local submodule; * visibility. stddef.h wouldn't include any of its implementation headers, and; * SM.B wouldn't import any of the stddef modules, and SM.B's `export *`; * wouldn't export any stddef interfaces as expected. However, since stddef.h; * ignores its header guard when building with modules, it all works as; * expected.; *; * When clang modules are not enabled, the header guards can function in the; * normal simple fashion.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stddef.h:503,interface,interfaces,503,interpreter/llvm-project/clang/lib/Headers/stddef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stddef.h,5,['interface'],['interfaces']
Integrability,"/*===---- time.h - OpenMP time header wrapper ------------------------ c ---===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/time.h:38,wrap,wrapper,38,interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/time.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/openmp_wrappers/time.h,1,['wrap'],['wrapper']
Integrability,"/*===------ avx512vlvp2intersectintrin.h - VL VP2INTERSECT intrinsics ------===; *; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512vlvp2intersectintrin.h:1021,CONTRACT,CONTRACT,1021,interpreter/llvm-project/clang/lib/Headers/avx512vlvp2intersectintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512vlvp2intersectintrin.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*===------- avx512vpintersectintrin.h - VP2INTERSECT intrinsics ------------===; *; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512vp2intersectintrin.h:1022,CONTRACT,CONTRACT,1022,interpreter/llvm-project/clang/lib/Headers/avx512vp2intersectintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512vp2intersectintrin.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*===------- llvm-c/Error.h - llvm::Error class C Interface -------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file defines the C interface to LLVM's Error class. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/include/llvm-c/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Error.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"/*===------- llvm-c/LLJITUtils.h - Advanced LLJIT features --------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface for extra utilities to be used with *|; |* the LLJIT class from the llvm-c/LLJIT.h header. It requires to following *|; |* link libraries in addition to libLLVMOrcJIT.a: *|; |* - libLLVMOrcDebugging.a *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; |* Note: This interface is experimental. It is *NOT* stable, and may be *|; |* changed without warning. Only C API usage documentation is *|; |* provided. See the C++ documentation for all higher level ORC API *|; |* details. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,3,['interface'],['interface']
Integrability,"/*===----------- llvm-c/LLJIT.h - OrcV2 LLJIT C bindings ----------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to the LLJIT class in *|; |* libLLVMOrcJIT.a, which provides a simple MCJIT-like ORC JIT. *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; |* Note: This interface is experimental. It is *NOT* stable, and may be *|; |* changed without warning. Only C API usage documentation is *|; |* provided. See the C++ documentation for all higher level ORC API *|; |* details. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,3,['interface'],['interface']
Integrability,"/*===--------------- avxvnniintrin.h - VNNI intrinsics --------------------===; *; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxvnniintrin.h:1020,CONTRACT,CONTRACT,1020,interpreter/llvm-project/clang/lib/Headers/avxvnniintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxvnniintrin.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/*===---------------- llvm-c/Orc.h - OrcV2 C bindings -----------*- C++ -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This header declares the C interface to libLLVMOrcJIT.a, which implements *|; |* JIT compilation of LLVM IR. Minimal documentation of C API specific issues *|; |* (especially memory ownership rules) is provided. Core Orc concepts are *|; |* documented in llvm/docs/ORCv2.rst and APIs are documented in the C++ *|; |* headers *|; |* *|; |* Many exotic languages can interoperate with C code but have a harder time *|; |* with C++ due to name mangling. So in addition to C, this interface enables *|; |* tools written in such languages. *|; |* *|; |* Note: This interface is experimental. It is *NOT* stable, and may be *|; |* changed without warning. Only C API usage documentation is *|; |* provided. See the C++ documentation for all higher level ORC API *|; |* details. *|; |* *|; \*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,3,['interface'],['interface']
Integrability,"/*===----------------- keylockerintrin.h - KL Intrinsics -------------------===; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/keylockerintrin.h:1018,CONTRACT,CONTRACT,1018,interpreter/llvm-project/clang/lib/Headers/keylockerintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/keylockerintrin.h,1,['CONTRACT'],['CONTRACT']
Integrability,/*===== dependency =====*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h:8,depend,dependency,8,builtins/zstd/zstd_errors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd_errors.h,1,['depend'],['dependency']
Integrability,/*====== Dependencies ======*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:9,Depend,Dependencies,9,builtins/zstd/zdict.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h,1,['Depend'],['Dependencies']
Integrability,/*ContractPass=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:2,Contract,ContractPass,2,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,2,['Contract'],['ContractPass']
Integrability,/*DependentDeduction=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:2,Depend,DependentDeduction,2,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,2,['Depend'],['DependentDeduction']
Integrability,/*FIXME Remove that interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:20,interface,interface,20,core/metacling/src/TClingCallFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h,1,['interface'],['interface']
Integrability,/*InjectedCondition*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:2,Inject,InjectedCondition,2,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['Inject'],['InjectedCondition']
Integrability,/*Message=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:2,Message,Message,2,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['Message'],['Message']
Integrability,/*WrapColumn =*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/InterfaceStub/IFSHandler.cpp:2,Wrap,WrapColumn,2,interpreter/llvm-project/llvm/lib/InterfaceStub/IFSHandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/InterfaceStub/IFSHandler.cpp,1,['Wrap'],['WrapColumn']
Integrability,/*WrapColumn*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.cpp:2,Wrap,WrapColumn,2,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.cpp,1,['Wrap'],['WrapColumn']
Integrability,/*WrapColumn=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:2,Wrap,WrapColumn,2,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['Wrap'],['WrapColumn']
Integrability,/*WrapKind*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:2,Wrap,WrapKind,2,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Wrap'],['WrapKind']
Integrability,/*WrapRightBrace=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:2,Wrap,WrapRightBrace,2,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['Wrap'],['WrapRightBrace']
Integrability,/*depend-modifier*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp:2,depend,depend-modifier,2,interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,2,['depend'],['depend-modifier']
Integrability,"/*if(!_deps.empty() && !_deps.find(name)) {; throw std::runtime_error(TString::Format(""%s Does not depend on %s"",GetName(),name));; }*/; // object will need to exist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:99,depend,depend,99,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['depend'],['depend']
Integrability,/*injected-class-name used as template name*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:2,inject,injected-class-name,2,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,['inject'],['injected-class-name']
Integrability,/*messageID*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:2,message,messageID,2,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['message'],['messageID']
Integrability,/*protocols=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:2,protocol,protocols,2,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['protocol'],['protocols']
Integrability,// !LLVM_ON_UNIX && !_WIN32; /// std::thread backed implementation of llvm::thread interface that ignores the; /// stack size request.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/thread.h:83,interface,interface,83,interpreter/llvm-project/llvm/include/llvm/Support/thread.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/thread.h,1,['interface'],['interface']
Integrability,"// ""%!"" represents for 'e' depends on the PC register size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp:27,depend,depends,27,interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp,1,['depend'],['depends']
Integrability,"// ""%~"" represents for 'r' depends on the device has long jump/call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp:27,depend,depends,27,interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/AVR.cpp,1,['depend'],['depends']
Integrability,"// "".elseifdef"" or "".elseifndef"", depending on expect_defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:34,depend,depending,34,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// "".errb"" or "".errnb"", depending on ExpectBlank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:24,depend,depending,24,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// "".errdef"" or "".errndef"", depending on ExpectBlank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:28,depend,depending,28,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// "".erre"" or "".errnz"", depending on ExpectZero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:24,depend,depending,24,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// "".erridn"", "".errdif"", "".erridni"", or "".errdifi"", depending on ExpectEqual; // and CaseInsensitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:52,depend,depending,52,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// "".ifb"" or "".ifnb"", depending on ExpectBlank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:22,depend,depending,22,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['depend'],['depending']
Integrability,"// "".ifc"" or "".ifnc"", depending on ExpectEqual.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:22,depend,depending,22,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['depend'],['depending']
Integrability,"// "".ifdef"" or "".ifndef"", depending on expect_defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:26,depend,depending,26,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['depend'],['depending']
Integrability,"// "".ifeqs"" or "".ifnes"", depending on ExpectEqual.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:25,depend,depending,25,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['depend'],['depending']
Integrability,"// ""ELF Handling for Thread-Local Storage"" specifies that x86-64 GOTTPOFF, and; // i386 GOTNTPOFF/INDNTPOFF relocations can convert an ADD to a LEA during; // Initial Exec to Local Exec relaxation. In these cases, we must not depend; // on the EFLAGS modification of ADD actually happening in the final binary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:226,depend,depend,226,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['depend'],['depend']
Integrability,"// ""The /fp:contract option allows the compiler to generate floating-point; // contractions [...]""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp:12,contract,contract,12,interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/OSTargets.cpp,2,['contract'],"['contract', 'contractions']"
Integrability,"// ""elseifb"" or ""elseifnb"", depending on ExpectBlank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:28,depend,depending,28,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// ""elseifidn"", ""elseifdif"", ""elseifidni"", or ""elseifdifi"", depending on; // ExpectEqual and CaseInsensitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:60,depend,depending,60,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// ""ifb"" or ""ifnb"", depending on ExpectBlank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:20,depend,depending,20,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// ""ifdef"" or ""ifndef"", depending on expect_defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:24,depend,depending,24,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// ""ifidn"", ""ifdif"", ""ifidni"", or ""ifdifi"", depending on ExpectEqual and; // CaseInsensitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:44,depend,depending,44,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['depend'],['depending']
Integrability,"// ""lambda"" names are wrapped in < >. Replace with { }; // to be consistent with demangled names and not to confuse with; // templates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp:22,wrap,wrapped,22,interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/GSYM/DwarfTransformer.cpp,1,['wrap'],['wrapped']
Integrability,"// ""r+i"" or just ""i"", depending on HasBaseReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp:22,depend,depending,22,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp,5,['depend'],['depending']
Integrability,"// ""return expression ;"" or ""return ;"", depending on the return type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:40,depend,depending,40,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['depend'],['depending']
Integrability,"// ""super"" names an interface. Use it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:20,interface,interface,20,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['interface'],['interface']
Integrability,"// ""xcoff"" must come before ""coff"" because of the order-dependendent; // pattern matching.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Triple.cpp:56,depend,dependendent,56,interpreter/llvm-project/llvm/lib/TargetParser/Triple.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Triple.cpp,1,['depend'],['dependendent']
Integrability,"// ################################################################; //; // testing IntegratorMultiDim class; //; // ################################################################",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:84,Integrat,IntegratorMultiDim,84,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,2,['Integrat'],['IntegratorMultiDim']
Integrability,"// #define IX11_ROOT_MSG WM_USER+10 // ID of ROOT messages; // +10 because WM_USER is used; // by WIN32 itself ! ! !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:50,message,messages,50,core/winnt/inc/Win32Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h,1,['message'],['messages']
Integrability,// #error <message>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:11,message,message,11,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['message'],['message']
Integrability,"// #ifdef LLVM_HAVE_TFLITE; /// The score injection pass.; /// This pass calculates the score for a function and inserts it in the log, but; /// this happens only in development mode. It's a no-op otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp:42,inject,injection,42,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,1,['inject'],['injection']
Integrability,// #pragma clang fp contract,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/PragmaKinds.h:20,contract,contract,20,interpreter/llvm-project/clang/include/clang/Basic/PragmaKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/PragmaKinds.h,1,['contract'],['contract']
Integrability,"// #pragma link C++ typedef ROOT::Math::IntegratorOneDim::Type;; // #pragma link C++ typedef ROOT::Math::IntegratorMultiDim::Type;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/LinkDef2.h:40,Integrat,IntegratorOneDim,40,math/mathcore/inc/LinkDef2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/LinkDef2.h,2,['Integrat'],"['IntegratorMultiDim', 'IntegratorOneDim']"
Integrability,"// #pragma message(""class 'TProcPool' is deprecated, replace it by 'ROOT::TProcessExecutor' (for TTree processing see 'ROOT:TTreeProcessorMP')"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h:11,message,message,11,core/multiproc/inc/TProcPool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TProcPool.h,1,['message'],['message']
Integrability,// #warning <message>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:13,message,message,13,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['message'],['message']
Integrability,"// $Id$; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LDA *; * *; * *; * Description: *; * Local LDA method used by MethodKNN to compute MVA value. *; * This is experimental code under development. This class computes *; * parameters of signal and background PDFs using Gaussian approximation. *; * *; * Author: *; * John Alison John.Alison@cern.ch - University of Pennsylvania, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * University of Pennsylvania, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h:119,integrat,integrated,119,tmva/tmva/inc/TMVA/LDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h,1,['integrat'],['integrated']
Integrability,"// $Id$; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LDA *; * *; * *; * Description: *; * Local LDA method used by MethodKNN to compute MVA value. *; * This is experimental code under development. This class computes *; * parameters of signal and background PDFs using Gaussian approximation. *; * *; * Author: *; * John Alison John.Alison@cern.ch - University of Pennsylvania, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * University of Pennsylvania, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::LDA; \ingroup TMVA. */; // Local",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LDA.cxx:119,integrat,integrated,119,tmva/tmva/src/LDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LDA.cxx,1,['integrat'],['integrated']
Integrability,"// $Id$; // Author: Valeriy Onuchin 03/05/2007; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines for processing URLs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx:1406,Rout,Routines,1406,gui/guihtml/src/TGHtmlUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlDraw.cxx,v 1.1 2007/05/04 17:07:01 brun Exp $; // Author: Valeriy Onuchin 03/05/2007; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines used to render HTML onto the screen for the TGHtml widget.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlDraw.cxx:1458,Rout,Routines,1458,gui/guihtml/src/TGHtmlDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlDraw.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlForm.cxx,v 1.3 2007/05/18 16:00:28 brun Exp $; // Author: Valeriy Onuchin 03/05/2007; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines used for processing HTML makeup for forms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:1458,Rout,Routines,1458,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlImage.cxx,v 1.2 2007/05/07 15:28:48 brun Exp $; // Author: Valeriy Onuchin 03/05/2007; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines used for processing <IMG> markup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx:1459,Rout,Routines,1459,gui/guihtml/src/TGHtmlImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlIndex.cxx,v 1.2 2007/05/20 23:22:13 rdm Exp $; // Author: Valeriy Onuchin 03/05/2007; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines that deal with indexes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx:1458,Rout,Routines,1458,gui/guihtml/src/TGHtmlIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlSizer.cxx,v 1.2 2007/05/04 20:33:16 rdm Exp $; // Author: Valeriy Onuchin 03/05/2007; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines used to compute the style and size of individual elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx:1086,Rout,Routines,1086,gui/guihtml/src/TGHtmlSizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx,1,['Rout'],['Routines']
Integrability,"// $Id: TGHtmlTable.cxx,v 1.1 2007/05/04 17:07:01 brun Exp $; // Author: Valeriy Onuchin 03/05/2007; /**************************************************************************. HTML widget for xclass. Based on tkhtml 1.28; Copyright (C) 1997-2000 D. Richard Hipp <drh@acm.org>; Copyright (C) 2002-2003 Hector Peraza. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. **************************************************************************/; // Routines for doing layout of HTML tables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx:1087,Rout,Routines,1087,gui/guihtml/src/TGHtmlTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx,1,['Rout'],['Routines']
Integrability,"// 'Advanced_SIMD_arch' must be emitted not here, but within; // ARMAsmPrinter::emitAttributes(), depending on hasV8Ops() and hasV8_1a()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp:98,depend,depending,98,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMELFStreamer.cpp,1,['depend'],['depending']
Integrability,// 'Node' in this context names the injected-class-name of the base class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/ItaniumManglingCanonicalizer.cpp:36,inject,injected-class-name,36,interpreter/llvm-project/llvm/lib/ProfileData/ItaniumManglingCanonicalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/ItaniumManglingCanonicalizer.cpp,1,['inject'],['injected-class-name']
Integrability,// 'Q' should correspond to the low order register and 'R' to the high; // order register. Whether this corresponds to the upper or lower half; // depends on the endianess mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:147,depend,depends,147,interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,1,['depend'],['depends']
Integrability,"// 'file:' protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:11,protocol,protocol,11,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['protocol'],['protocol']
Integrability,"// 'increment' of the whole VariablesState is defined identically to the; // increment of a number: starting from the least significant element,; // increment it, and if it wrapped, then propagate that carry by also; // incrementing next (more significant) element.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h:173,wrap,wrapped,173,interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,1,['wrap'],['wrapped']
Integrability,"// 'inline namespace' at the start of a line is almost certainly; // a good place to pick back up parsing, except in an Objective-C; // @interface context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:137,interface,interface,137,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['interface'],['interface']
Integrability,"// 'namespace' at the start of a line is almost certainly a good; // place to pick back up parsing, except in an Objective-C; // @interface context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:130,interface,interface,130,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['interface'],['interface']
Integrability,"// 'self' message receivers in class methods should be treated as message; // sends to the class object in order for the semantic checks to be; // performed correctly. Messages to 'super' already count as class messages,; // so they don't need to be handled here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:10,message,message,10,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,4,"['Message', 'message']","['Messages', 'message', 'messages']"
Integrability,"// 't' in Cpu denotes tiny-core micro-architecture. For now, the co-processors; // have no dependency on micro-architecture.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.cpp:91,depend,dependency,91,interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Hexagon.cpp,1,['depend'],['dependency']
Integrability,// 'this' is type-dependent if the class type of the enclosing; // member function is dependent (C++ [temp.dep.expr]p2),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:18,depend,dependent,18,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,2,['depend'],['dependent']
Integrability,// 'using Dependent::foo;' can resolve to a template name.; // 'using typename Dependent::foo;' cannot (not even if 'foo' is an; // injected-class-name).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:10,Depend,Dependent,10,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,"['Depend', 'inject']","['Dependent', 'injected-class-name']"
Integrability,"// (7) Execute the JIT'd main function and pass the example's command line; // arguments unmodified. This should cause either ExampleMod1 or ExampleMod2; // to be compiled, and either ""1"" or ""2"" returned depending on the number of; // arguments passed.; // Look up the JIT'd function, cast it to a function pointer, then call it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp:204,depend,depending,204,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithExecutorProcessControl/LLJITWithExecutorProcessControl.cpp,2,['depend'],['depending']
Integrability,// (d) HostDevice behavior depends on compilation mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:27,depend,depends,27,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['depend'],['depends']
Integrability,// (note that the message send might split FetchMoreBB),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:18,message,message,18,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['message'],['message']
Integrability,// (sizeof(returnType) <= 8 ? objc_msgSend(...) : objc_msgSend_stret(...)); // FIXME: Value of 8 is base on ppc32/x86 ABI for the most common cases.; // For X86 it is more complicated and some kind of target specific routine; // is needed to decide what to do.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:217,rout,routine,217,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['rout'],['routine']
Integrability,"// (wrapper %highest(sym), %higher(sym), %hi(sym), %lo(sym))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:4,wrap,wrapper,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['wrap'],['wrapper']
Integrability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:113,integrat,integration,113,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,7,"['depend', 'integrat']","['dependents', 'integrated', 'integration']"
Integrability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * A) Check that all dependents are lvalues and filter out any; // dependents that the PDF doesn't explicitly depend on; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:91,depend,dependents,91,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,3,['depend'],"['depend', 'dependents']"
Integrability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * B) Check if list of dependents can be re-expressed in *; // * lvalues that are higher in the expression tree *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Initial fill of list of LValue branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:93,depend,dependents,93,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['depend'],['dependents']
Integrability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * C) Check for dependents that the PDF insists on integrating *; // analytically itself *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,depend,dependents,86,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependents', 'integrating']"
Integrability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * D) Make list of servers that can be integrated analytically *; // Add all parameters/dependents as value/shape servers *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:109,integrat,integrated,109,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependents', 'integrated']"
Integrability,"// * Insert all the code needed to materialize the constants; // at the proper place. E.g., Entry block or dominator block; // of each constant depending on how fancy we want to be.; // * Clear the different maps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h:144,depend,depending,144,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/IRTranslator.h,1,['depend'],['depending']
Integrability,// * Use LDE instead of LE/LEY for z13 to avoid partial register; // dependencies (LDE only supports small offsets).; // * Utilize the vector registers to hold floating point; // values (vector load / store instructions only support small; // offsets).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:69,depend,dependencies,69,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['depend'],['dependencies']
Integrability,"// * start of integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:14,integrat,integration,14,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['integrat'],['integration']
Integrability,"// *** PART 1 : Create supplemental normalization list ***; // Retrieve the combined set of dependents of this PDF ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx:92,depend,dependents,92,roofit/roofitcore/src/RooAddHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx,1,['depend'],['dependents']
Integrability,"// *** Part2: Create the predicates; // Analysis was successful: we have a phi-with-cast pattern for which we; // can return an AddRec expression under the following predicates:; //; // P1: A Wrap predicate that guarantees that Trunc(Start) + i*Trunc(Accum); // fits within the truncated type (does not overflow) for i = 0 to n-1.; // P2: An Equal predicate that guarantees that; // Start = (Ext ix (Trunc iy (Start) to ix) to iy); // P3: An Equal predicate that guarantees that; // Accum = (Ext ix (Trunc iy (Accum) to ix) to iy); //; // As we next prove, the above predicates guarantee that:; // Start + i*Accum = (Ext ix (Trunc iy ( Start + i*Accum ) to ix) to iy); //; //; // More formally, we want to prove that:; // Expr(i+1) = Start + (i+1) * Accum; // = (Ext ix (Trunc iy (Expr(i)) to ix) to iy) + Accum; //; // Given that:; // 1) Expr(0) = Start; // 2) Expr(1) = Start + Accum; // = (Ext ix (Trunc iy (Start) to ix) to iy) + Accum :: from P2; // 3) Induction hypothesis (step i):; // Expr(i) = (Ext ix (Trunc iy (Expr(i-1)) to ix) to iy) + Accum; //; // Proof:; // Expr(i+1) =; // = Start + (i+1)*Accum; // = (Start + i*Accum) + Accum; // = Expr(i) + Accum; // = (Ext ix (Trunc iy (Expr(i-1)) to ix) to iy) + Accum + Accum; // :: from step i; //; // = (Ext ix (Trunc iy (Start + (i-1)*Accum) to ix) to iy) + Accum + Accum; //; // = (Ext ix (Trunc iy (Start + (i-1)*Accum) to ix) to iy); // + (Ext ix (Trunc iy (Accum) to ix) to iy); // + Accum :: from P3; //; // = (Ext ix (Trunc iy ((Start + (i-1)*Accum) + Accum) to ix) to iy); // + Accum :: from P1: Ext(x)+Ext(y)=>Ext(x+y); //; // = (Ext ix (Trunc iy (Start + i*Accum) to ix) to iy) + Accum; // = (Ext ix (Trunc iy (Expr(i)) to ix) to iy) + Accum; //; // By induction, the same applies to all iterations 1<=i<n:; //; // Create a truncated addrec for which we will add a no overflow check (P1).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:192,Wrap,Wrap,192,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Wrap'],['Wrap']
Integrability,"// *** WVE this is important *** this declares that frac effectively depends on the morphing parameters; // This will prevent the likelihood optimizers from erroneously declaring terms constant",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx:69,depend,depends,69,roofit/roofit/src/RooMomentMorph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooMomentMorph.cxx,6,['depend'],['depends']
Integrability,"// *********************************************************************; // *** PART 4 *** Adjust normalization range for projected observables *; // *********************************************************************; // Remove projected dependents from normalization set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:242,depend,dependents,242,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['depend'],['dependents']
Integrability,"// ******************************************************************; // *** PART 2 *** Clone and adjust incoming data, attach to PDF *; // ******************************************************************; // Check if the fit ranges of the dependents in the data and in the FUNC are consistent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:243,depend,dependents,243,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,2,['depend'],['dependents']
Integrability,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:697,interface,interface,697,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,1,['interface'],['interface']
Integrability,"// *SIGNAL*; // ----------------------------------------------------------------; // Interface to make selection active/non-active.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveSelection.h:85,Interface,Interface,85,graf3d/eve/inc/TEveSelection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveSelection.h,2,['Interface'],['Interface']
Integrability,"// - Decode list of options into fitOption (used by both TGraph and TH1); // works for both histograms and graph depending on the enum FitObjectType defined in HFit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx:113,depend,depending,113,hist/hist/src/HFitImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx,1,['depend'],['depending']
Integrability,// - Penryn; // - Nehalem; // - Westmere; // - Sandy Bridge; // - Ivy Bridge; // - Haswell; // - Broadwell; // - Skylake; // - Kabylake,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:53,Bridg,Bridge,53,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,6,['Bridg'],['Bridge']
Integrability,"// - There's a non-dependent scope specifier, in which case we; // compute it and do a previous lookup there for a function; // or function template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:19,depend,dependent,19,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// - a conversion-function-id that specifies a dependent type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:47,depend,dependent,47,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,1,['depend'],['dependent']
Integrability,"// - a non-template variable of non-volatile const-qualified type, unless; // - it is explicitly declared extern, or; // - it is declared in the purview of a module interface unit; // (outside the private-module-fragment, if any) or module partition, or; // - it is inline, or; // - it was previously declared and the prior declaration did not have; // internal linkage; // (There is no equivalent in C99.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:165,interface,interface,165,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['interface'],['interface']
Integrability,"// - a template-id that is dependent,; // - a nested-name-specifier or a qualified-id that names a member of an; // unknown specialization; // [These are not modeled as DeclRefExprs.]; // or if it names a dependent member of the current instantiation that is a; // static data member of type ""array of unknown bound of T"" for some T; // [handled below].; // C++ [temp.dep.constexpr]p2:; // An id-expression is value-dependent if:; // - it is type-dependent [handled above]; // - it is the name of a non-type template parameter,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:27,depend,dependent,27,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,4,['depend'],['dependent']
Integrability,// - any referenced protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:20,protocol,protocols,20,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,// - it names a potentially-constant variable that is initialized with an; // expression that is value-dependent,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:103,depend,dependent,103,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,1,['depend'],['dependent']
Integrability,"// - it names a static data member that is a dependent member of the; // current instantiation and is not initialized in a member-declarator,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:45,depend,dependent,45,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,1,['depend'],['dependent']
Integrability,"// - it names a static member function that is a dependent member of the; // current instantiation; //; // FIXME: It's unclear that the restriction to static members here has any; // effect: any use of a non-static member function name requires either; // forming a pointer-to-member or providing an object parameter, either of; // which makes the overall expression value-dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:49,depend,dependent,49,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,2,['depend'],['dependent']
Integrability,"// - otherwise, begin-expr and end-expr are begin(__range) and; // end(__range), respectively, where begin and end are looked up with; // argument-dependent lookup (3.4.2). For the purposes of this name; // lookup, namespace std is an associated namespace.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:147,depend,dependent,147,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['depend'],['dependent']
Integrability,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRFunctionImport__oprt.h: based in Rcpp R/C++ interface class library -- generated helper code for Function.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport__oprtr.h:127,interface,interface,127,bindings/r/inc/TRFunctionImport__oprtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport__oprtr.h,1,['interface'],['interface']
Integrability,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRIDataFrame_Impl__ctors.h: based in Rcpp R/C++ interface class library -- generated helper code for TRDataFrame_Impl.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame__ctors.h:129,interface,interface,129,bindings/r/inc/TRDataFrame__ctors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame__ctors.h,1,['interface'],['interface']
Integrability,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRInternalFunction_Impl__ctors.h: based in Rcpp R/C++ interface class library -- generated helper code for TRInternalFunction_Impl.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInternalFunction__ctors.h:135,interface,interface,135,bindings/r/inc/TRInternalFunction__ctors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInternalFunction__ctors.h,1,['interface'],['interface']
Integrability,"// -- BEGIN plumbing --; // typically, on master, this would be called inside evaluate, before queuing tasks; on workers it's called; // automatically when a published message is received from master",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx:168,message,message,168,roofit/multiprocess/test/test_Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/test/test_Job.cxx,1,['message'],['message']
Integrability,"// -- Container data members set fOffset instead of fBranchOffset.; // The fOffset is what should be added to the start of the entry; // in the collection (i.e., its current absolute address) to find; // the beginning of the data member described by the current branch.; //; // Compensate for the i/o routines adding our local offset later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:301,rout,routines,301,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routines']
Integrability,"// -- Entry is *not* in the chain's current tree.; // Do a linear search of the tree offset array.; // FIXME: We could be smarter by starting at the; // current tree number and going forwards,; // then wrapping around at the end.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:202,wrap,wrapping,202,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['wrap'],['wrapping']
Integrability,"// -- LoadTree() has not yet been called, no current tree.; // FIXME: We need an error message here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:87,message,message,87,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['message'],['message']
Integrability,"// -- MASTER - WORKER COMMUNICATION --; /// specialization that sends the final message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h:80,message,message,80,roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/res/RooFit/MultiProcess/Messenger.h,1,['message'],['message']
Integrability,"// -- Remove the top-level branch name from our name, folder case.; //; // Note: We are in the case where our mother was created; // by the branch constructor which takes a folder; // as an argument. The mother branch has internal; // dots in its name to represent the folder hierarchy.; // The TTree::Bronch() routine has handled us as a; // special case, we must compensate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:311,rout,routine,311,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routine']
Integrability,"// -- Remove the top-level branch name from our parent's name, folder case.; //; // Note: We are in the case where our mother was created; // by the branch constructor which takes a folder; // as an argument. The mother branch has internal; // dots in its name to represent the folder hierarchy.; // The TTree::Bronch() routine has handled us as a; // special case, we must compensate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:320,rout,routine,320,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routine']
Integrability,"// -- The interleave heuristics --; // We interleave the loop in order to expose ILP and reduce the loop overhead.; // There are many micro-architectural considerations that we can't predict; // at this level. For example, frontend pressure (on decode or fetch) due to; // code size, or the number and capabilities of the execution ports.; //; // We use the following heuristics to select the interleave count:; // 1. If the code has reductions, then we interleave to break the cross; // iteration dependency.; // 2. If the loop is really small, then we interleave to reduce the loop; // overhead.; // 3. We don't interleave if we think that we will spill registers to memory; // due to the increased register pressure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:498,depend,dependency,498,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['dependency']
Integrability,"// -- The return type is the class template specialization designated by; // the template-name and template arguments corresponding to the; // template parameters obtained from the class template.; //; // We use the injected-class-name type of the primary template instead.; // This has the convenient property that it is different from any type that; // the user can write in a deduction-guide (because they cannot enter the; // context of the template), so implicit deduction guides can never collide; // with explicit ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:216,inject,injected-class-name,216,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inject'],['injected-class-name']
Integrability,"// --- Error Entry ---; // issue message and put the old one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:33,message,message,33,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['message'],['message']
Integrability,"// --- High level factory interface ---; // Composite object construction language parser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h:26,interface,interface,26,roofit/roofitcore/inc/RooFactoryWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h,1,['interface'],['interface']
Integrability,"// --- Input/Output routines ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTDir.h:20,rout,routines,20,test/periodic/NdbMTDir.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTDir.h,2,['rout'],['routines']
Integrability,"// --- Internal stuff that must be public so that CINT can access it ---; // CINT constructor interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h:94,interface,interface,94,roofit/roofitcore/inc/RooFactoryWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h,1,['interface'],['interface']
Integrability,"// --- Interpolation routines ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTReactionXS.h:21,rout,routines,21,test/periodic/NdbMTReactionXS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/NdbMTReactionXS.h,1,['rout'],['routines']
Integrability,"// --- Update combos depending on isotope ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx:21,depend,depending,21,test/periodic/XSReactionDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSReactionDlg.cxx,1,['depend'],['depending']
Integrability,"// --- low level factory interface ---; // Create variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h:25,interface,interface,25,roofit/roofitcore/inc/RooFactoryWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h,1,['interface'],['interface']
Integrability,"// --- main navigation interfaces ----; // FindNode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h:23,interface,interfaces,23,geom/geom/inc/TGeoParallelWorld.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoParallelWorld.h,1,['interface'],['interfaces']
Integrability,"// ----- End of modifications by MvL; // Copy the chain's clone list into the new tree's; // clone list so that branch addresses stay synchronized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:134,synchroniz,synchronized,134,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['synchroniz'],['synchronized']
Integrability,"// -----------------------------------------------------------------------------; // DeallocQuickLookGeneratorPluginType; // -----------------------------------------------------------------------------; // Utility function that deallocates the instance when; // the refCount goes to zero.; // In the current implementation generator interfaces are never deallocated; // but implement this as this might change in the future; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:334,interface,interfaces,334,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['interface'],['interfaces']
Integrability,"// -----------------------------------------------------------------------------; // DeallocROOTSLMDImporterPluginType; // -----------------------------------------------------------------------------; // Utility function that deallocates the instance when; // the refCount goes to zero.; // In the current implementation importer interfaces are never deallocated; // but implement this as this might change in the future; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:331,interface,interfaces,331,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['interface'],['interfaces']
Integrability,"// -----------------------------------------------------------------------------; // MetadataImporterPluginAddRef; // -----------------------------------------------------------------------------; // Implementation of reference counting for this type. Whenever an interface; // is requested, bump the refCount for the instance. NOTE: returning the; // refcount is a convention but is not required so don't rely on it.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:264,interface,interface,264,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['interface'],['interface']
Integrability,"// -----------------------------------------------------------------------------; // QuickLookGeneratorPluginAddRef; // -----------------------------------------------------------------------------; // Implementation of reference counting for this type. Whenever an interface; // is requested, bump the refCount for the instance. NOTE: returning the; // refcount is a convention but is not required so don't rely on it.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:266,interface,interface,266,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['interface'],['interface']
Integrability,"// -----------------------------------------------------------------------------; // QuickLookGeneratorPluginRelease; // -----------------------------------------------------------------------------; // When an interface is released, decrement the refCount.; // If the refCount goes to zero, deallocate the instance.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:211,interface,interface,211,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['interface'],['interface']
Integrability,"// -----------------------------------------------------------------------------; // SampleCMPluginRelease; // -----------------------------------------------------------------------------; // When an interface is released, decrement the refCount.; // If the refCount goes to zero, deallocate the instance.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:201,interface,interface,201,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['interface'],['interface']
Integrability,// ---------------------------------------------------------------------------; // Operand Iterator interface...; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:100,interface,interface,100,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,2,['interface'],['interface']
Integrability,"// ------------------------------------------------------------------------; //; // kdTreeBinning tutorial: bin the data in cells of equal content using a kd-tree; //; // Using TKDTree wrapper class as a data binning structure; // Plot the 2D data using the TH2Poly class; //; //; // Author: Bartolomeu Rabacal 11/2010; //; // ------------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testkdTreeBinning.cxx:185,wrap,wrapper,185,math/mathcore/test/testkdTreeBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testkdTreeBinning.cxx,1,['wrap'],['wrapper']
Integrability,"// --------------------------------------------------------------------; // Implementation of permutation networks.; // Implementation of the node routing through butterfly networks:; // - Forward delta.; // - Reverse delta.; // - Benes.; //; //; // Forward delta network consists of log(N) steps, where N is the number; // of inputs. In each step, an input can stay in place, or it can get; // routed to another position[1]. The step after that consists of two; // networks, each half in size in terms of the number of nodes. In those; // terms, in the given step, an input can go to either the upper or the; // lower network in the next step.; //; // [1] Hexagon's vdelta/vrdelta allow an element to be routed to both; // positions as long as there is no conflict.; // Here's a delta network for 8 inputs, only the switching routes are; // shown:; //; // Steps:; // |- 1 ---------------|- 2 -----|- 3 -|; //; // Inp[0] *** *** *** *** Out[0]; // \ / \ / \ /; // \ / \ / X; // \ / \ / / \; // Inp[1] *** \ / *** X *** *** Out[1]; // \ \ / / \ / \ /; // \ \ / / X X; // \ \ / / / \ / \; // Inp[2] *** \ \ / / *** X *** *** Out[2]; // \ \ X / / / \ \ /; // \ \ / \ / / / \ X; // \ X X / / \ / \; // Inp[3] *** \ / \ / \ / *** *** *** Out[3]; // \ X X X /; // \ / \ / \ / \ /; // X X X X; // / \ / \ / \ / \; // / X X X \; // Inp[4] *** / \ / \ / \ *** *** *** Out[4]; // / X X \ \ / \ /; // / / \ / \ \ \ / X; // / / X \ \ \ / / \; // Inp[5] *** / / \ \ *** X *** *** Out[5]; // / / \ \ \ / \ /; // / / \ \ X X; // / / \ \ / \ / \; // Inp[6] *** / \ *** X *** *** Out[6]; // / \ / \ \ /; // / \ / \ X; // / \ / \ / \; // Inp[7] *** *** *** *** Out[7]; //; //; // Reverse delta network is same as delta network, with the steps in; // the opposite order.; //; //; // Benes network is a forward delta network immediately followed by; // a reverse delta network.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:147,rout,routing,147,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,4,['rout'],"['routed', 'routes', 'routing']"
Integrability,"// -----------------------------------------; // 3. beep, list, or complete; // depending on how many matches were found; // -----------------------------------------; // 3a. no matches ==> bell",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:80,depend,depending,80,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['depend'],['depending']
Integrability,"// ---------------------; // -- Class Interface --; // ---------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooBlindTools.h:38,Interface,Interface,38,roofit/roofit/inc/RooBlindTools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooBlindTools.h,1,['Interface'],['Interface']
Integrability,// --precompile only runs up to precompilation.; // Options that cause the output of C++20 compiled module interfaces or; // header units have the same effect.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:107,interface,interfaces,107,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['interface'],['interfaces']
Integrability,"// -2 is fSep in the layout routine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListView.cxx:28,rout,routine,28,gui/gui/src/TGListView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListView.cxx,2,['rout'],['routine']
Integrability,"// -M and -MM specify the dependency file name by altering the output type,; // -if -MD and -MMD are not specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:26,depend,dependency,26,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['dependency']
Integrability,"// -Wnonportable-include-path is designed to diagnose includes using; // case even on systems with a case-insensitive file system.; // On Windows, RealPathName always starts with an upper-case drive; // letter for absolute paths, but Name might start with either; // case depending on if `cd c:\foo` or `cd C:\foo` was used in the shell.; // (""foo"" will always have on-disk case, no matter which case was; // used in the cd command). To not emit this warning solely for; // the drive letter, whose case is dependent on if `cd` is used; // with upper- or lower-case drive letters, always consider the; // given drive letter case as correct for the purpose of this warning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp:272,depend,depending,272,interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,2,['depend'],"['dependent', 'depending']"
Integrability,// -fPIC implies +mutable-globals because the PIC ABI used by the linker; // depends on importing and exporting mutable globals.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/WebAssembly.cpp:77,depend,depends,77,interpreter/llvm-project/clang/lib/Driver/ToolChains/WebAssembly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/WebAssembly.cpp,1,['depend'],['depends']
Integrability,// -fdollars-in-identifiers default varies depending on platform and; // language; only pass if specified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:43,depend,depending,43,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['depend'],['depending']
Integrability,"// -ffp-model=precise enables ffp-contract=on.; // -ffp-model=precise sets PreciseFPModel to on and Val to; // ""precise"". FPContract is set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:34,contract,contract,34,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['contract'],['contract']
Integrability,// -fgnu-keywords default varies depending on language; only pass if; // specified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:33,depend,depending,33,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['depend'],['depending']
Integrability,"// -fno-fast-math should undo -ffast-math so I return FPContract to the; // default. It is important to check it is ""fast"" (the default) so that; // --ffp-contract=off -fno-fast-math --> -ffp-contract=off",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp:155,contract,contract,155,interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Flang.cpp,2,['contract'],['contract']
Integrability,// -fprofile-list= dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:19,depend,dependencies,19,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['depend'],['dependencies']
Integrability,"// -mfpu=none, -march=armvX+nofp or -mcpu=X+nofp is *very* similar to; // -mfloat-abi=soft, only that it should not disable MVE-I. They disable the; // FPU, but not the FPU registers, thus MVE-I, which depends only on the; // latter, is still supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp:202,depend,depends,202,interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,1,['depend'],['depends']
Integrability,"// ... and receive protocol via kROOTD_PROTOCOL2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:19,protocol,protocol,19,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,// ... and remove trailing whitespace so the output doesn't wrap for it. We; // know that the line isn't completely empty because it has the caret in it at; // least.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SourceMgr.cpp:60,wrap,wrap,60,interpreter/llvm-project/llvm/lib/Support/SourceMgr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SourceMgr.cpp,1,['wrap'],['wrap']
Integrability,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:10,integrat,integrate,10,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,2,['integrat'],"['integrate', 'integrator']"
Integrability,// ...and it is the result of a class message...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:38,message,message,38,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['message'],['message']
Integrability,"// ...and the receiving class is NSMapTable or NSLocale, return that; // class as the receiving interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:96,interface,interface,96,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['interface'],['interface']
Integrability,"// ...with the major exception of templated-scope or; // dependent-scope friend declarations.; // TODO: we currently also suppress this check in dependent; // contexts because (1) the parameter depth will be off when; // matching friend templates and (2) we might actually be; // selecting a friend based on a dependent factor. But there; // are situations where these conditions don't apply and we; // can actually do this check immediately.; //; // Unless the scope is dependent, it's always an error if qualified; // redeclaration lookup found nothing at all. Diagnose that now;; // nothing will diagnose that error later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:57,depend,dependent-scope,57,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,4,['depend'],"['dependent', 'dependent-scope']"
Integrability,"// .comm Foo, 0 is undefined, avoid it.; // Use .lcomm only if it supports user-specified alignment.; // Otherwise, while it would still be correct to use .lcomm in some; // cases (e.g. when Align == 1), the external assembler might enfore; // some -unknown- default alignment behavior, which could cause; // spurious differences between external and integrated assembler.; // Prefer to simply fall back to .local / .comm in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:351,integrat,integrated,351,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['integrat'],['integrated']
Integrability,"// .tbss sym, size, align; // This depends that the symbol has already been mangled from the original,; // e.g. _a.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp:35,depend,depends,35,interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCAsmStreamer.cpp,1,['depend'],['depends']
Integrability,"// /**; // Constructor a wrapped function from a non - const pointer to a callable object, the function dimension and an iterator specifying begin and end of parameters.; // This constructor is needed in the case FuncPtr is a std::unique_ptr which has a copy ctor taking non const objects; // */; // template<class Iterator>; // WrappedParamFunction (FuncPtr func, unsigned int dim, Iterator begin, Iterator end) :; // fFunc(func),; // fDim(dim),; // fParams(std::vector<double>(begin,end) ); // {}; /// clone the function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:25,wrap,wrapped,25,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,2,"['Wrap', 'wrap']","['WrappedParamFunction', 'wrapped']"
Integrability,"// /**; // Constructor a wrapped function from a non-const pointer to a callable object, the function dimension and number of parameters; // which are set to zero by default; // This constructor is needed in the case FuncPtr is a std::unique_ptr which has a copy ctor taking non const objects; // */; // WrappedParamFunction (FuncPtr & func, unsigned int dim = 1, unsigned int npar = 0, double * par = 0) :; // fFunc(func),; // fDim(dim),; // fParams(std::vector<double>(npar) ); // {; // if (par != 0) std::copy(par,par+npar,fParams.begin() );; // }; /**; Constructor a wrapped function from a pointer to a callable object, the function dimension and an iterator specifying begin and end; of parameters; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:25,wrap,wrapped,25,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,3,"['Wrap', 'wrap']","['WrappedParamFunction', 'wrapped']"
Integrability,"// /**; // evaluate the Integral of a function f over the infinite interval (-inf,+inf); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // */; // template<class Function>; // double Integral(const Function & f);; /**; evaluate the Integral of a function f over the infinite interval (-inf,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:101,integrat,integration,101,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"// /**; // evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // @param b upper value of the integration interval; // */; // template<class Function>; // double IntegralLow(Function & f, double b);; /**; evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param b upper value of the integration interval; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:112,integrat,integration,112,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"// /**; // evaluate the Integral of a function f over the semi-infinite interval (a,+inf); // @param f integration function. The function type must be a C++ callable object implementing operator()(double x); // @param a lower value of the integration interval; // */; // template<class Function>; // double IntegralUp(Function & f, double a);; /**; evaluate the Integral of a function f over the semi-infinite interval (a,+inf); @param f integration function. The function type must implement the mathlib::IGenFunction interface; @param a lower value of the integration interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:103,integrat,integration,103,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,5,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"// // @(#)root/hist:$Id$; // Authors: Bartolomeu Rabacal 07/2010; /**********************************************************************; * *; * Copyright (c) 2006 , ROOT MathLib Team *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; * *; **********************************************************************/; /** \class TKDE; \ingroup Hist; Kernel Density Estimation class.; The three main references are:; 1. ""Scott DW, Multivariate Density Estimation. Theory, Practice and Visualization. New York: Wiley"",; 2. ""Jann Ben - ETH Zurich, Switzerland -, Univariate kernel density estimation document for KDENS:; Stata module for univariate kernel density estimation.""; 3. ""Hardle W, Muller M, Sperlich S, Werwatz A, Nonparametric and Semiparametric Models. Springer.""; 4. ""Cranmer KS, Kernel Estimation in High-Energy; Physics. Computer Physics Communications 136:198-207,2001"" - e-Print Archive: hep ex/0011057. The algorithm is briefly described in (4). A binned version is also implemented to address the; performance issue due to its data size dependance.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:1121,depend,dependance,1121,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,1,['depend'],['dependance']
Integrability,"// // @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetInfo *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * DESY Hamburg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h:209,integrat,integrated,209,tmva/tmva/inc/TMVA/DataSetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h,1,['integrat'],['integrated']
Integrability,"// // create MINOS Error factory; // MnMinos Minos(fFCN, min);; // {; // // 3-sigma MINOS errors (minimal interface); // fFCN.SetErrorDef(9.);; // std::pair<double,double> e0 = Minos(0);; // std::pair<double,double> e1 = Minos(1);; // std::pair<double,double> e2 = Minos(2);; // // output; // std::cout<<""3-sigma Minos errors with limits: ""<<std::endl;; // std::cout.precision(16);; // std::cout<<""par0: ""<<min.UserState().Value(""mean"")<<"" ""<<e0.first<<"" ""<<e0.second<<std::endl;; // std::cout<<""par1: ""<<min.UserState().Value(1)<<"" ""<<e1.first<<"" ""<<e1.second<<std::endl;; // std::cout<<""par2: ""<<min.UserState().Value(""area"")<<"" ""<<e2.first<<"" ""<<e2.second<<std::endl;; // }; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ParallelTest.cxx:106,interface,interface,106,math/minuit2/test/MnSim/ParallelTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/ParallelTest.cxx,1,['interface'],['interface']
Integrability,"// // to suppress a Warning message; // Warning in <TH1D::Merge>: Histogram FirstClone contains non-empty bins without labels -; // falling back to bin numbering mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:28,message,message,28,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['message'],['message']
Integrability,"// // type of integration; // enum Type { NONADAPTIVE, ADAPTIVE, ADAPTIVESINGULAR } ;; /**; enumeration specifying the Gauss-KronRod integration rule for ADAPTIVE integration type; @ingroup Integration; */; // Gauss KronRod Adaptive rule",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h:14,integrat,integration,14,math/mathmore/inc/Math/IntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h,4,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,"// 0. Generate SCEV-dependent code into the preheader, including TripCount,; // before making any changes to the CFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:20,depend,dependent,20,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['dependent']
Integrability,// 0x0B17C0DE = BC wraper,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/Magic.cpp:19,wrap,wraper,19,interpreter/llvm-project/llvm/lib/BinaryFormat/Magic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/Magic.cpp,1,['wrap'],['wraper']
Integrability,"// 1) OptSize takes precedence over all other options, i.e. if this is set,; // don't look at hints or options, and don't request a scalar epilogue.; // (For PGSO, as shouldOptimizeForSize isn't currently accessible from; // LoopAccessInfo (due to code dependency and not being able to reliably get; // PSI/BFI from a loop analysis under NPM), we cannot suppress the collection; // of strides in LoopAccessInfo::analyzeLoop() and vectorize without; // versioning when the vectorization is forced, unlike hasOptSize. So revert; // back to the old way and vectorize with versioning when forced. See D81345.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:253,depend,dependency,253,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['dependency']
Integrability,"// 1) Set up a diagnostic handler to avoid errors being printed out to; // stderr.; // 2) Use the stream to print the error with the associated node.; // 3) The stream will use the source manager to print the error, which will; // call the diagnostic handler.; // 4) The diagnostic handler will stream the error directly into this object's; // Message member, which is used when logging is asked for.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp:344,Message,Message,344,interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/YAMLRemarkParser.cpp,1,['Message'],['Message']
Integrability,"// 1-D nth order polynomial interpolation routines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:42,rout,routines,42,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,1,['rout'],['routines']
Integrability,"// 1-sigma MINOS errors (minimal interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:33,interface,interface,33,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['interface'],['interface']
Integrability,"// 1. Link FortranMain; // FortranMain depends on FortranRuntime, so needs to be listed first. If; // -fno-fortran-main has been passed, skip linking Fortran_main.a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp:39,depend,depends,39,interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,1,['depend'],['depends']
Integrability,// 16-bit thumb arithmetic instructions either require or preclude the 'S'; // suffix depending on whether they're in an IT block or not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:86,depend,depending,86,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['depend'],['depending']
Integrability,"// 2-7) Patterns : High word == Low word; // This may require 2 to 3 instructions, depending on whether Lo32 can be; // materialized in 1 instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:83,depend,depending,83,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['depend'],['depending']
Integrability,"// 2-sigma MINOS errors (rich interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:30,interface,interface,30,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['interface'],['interface']
Integrability,// 2. Link FortranRuntime and FortranDecimal; // These are handled earlier on Windows by telling the frontend driver to; // add the correct libraries to link against as dependents in the object; // file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp:169,depend,dependents,169,interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,1,['depend'],['dependents']
Integrability,"// 3-sigma MINOS errors (minimal interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:33,interface,interface,33,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['interface'],['interface']
Integrability,// 3. Didn't find one yet - look through primary class's protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:57,protocol,protocols,57,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// 3. Use \p WrappedSegment to set the highlight for snippet 0. Use segment; // 1 to set the highlight for snippet 2, segment 2 to set the highlight for; // snippet 3, and so on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp:13,Wrap,WrappedSegment,13,interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,1,['Wrap'],['WrappedSegment']
Integrability,// 32-bit SVR4 ABI Stack Frame Layout:; // +-----------------------------------+; // +--> | Back chain |; // | +-----------------------------------+; // | | Floating-point register save area |; // | +-----------------------------------+; // | | General register save area |; // | +-----------------------------------+; // | | CR save word |; // | +-----------------------------------+; // | | VRSAVE save word |; // | +-----------------------------------+; // | | Alignment padding |; // | +-----------------------------------+; // | | Vector register save area |; // | +-----------------------------------+; // | | Local variable space |; // | +-----------------------------------+; // | | Parameter list area |; // | +-----------------------------------+; // | | LR save word |; // | +-----------------------------------+; // SP--> +--- | Back chain |; // +-----------------------------------+; //; // Specifications:; // System V Application Binary Interface PowerPC Processor Supplement; // AltiVec Technology Programming Interface Manual,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:952,Interface,Interface,952,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,2,['Interface'],['Interface']
Integrability,"// 4 seconds; //gCreditsRect: x and y to be set at runtime (depending on shape extension and; //images).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:60,depend,depending,60,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['depend'],['depending']
Integrability,// 4. Didn't find one yet - now look through categories' protocols,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:57,protocol,protocols,57,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// 5 longs can be used by client message events; // NOTE: only [0], [1] and [2] may be used.; // [1] and [2] may contain > 32 bit quantities; // (i.e. pointers on 64 bit machines)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:33,message,message,33,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['message'],['message']
Integrability,// 5 routines for constructing the llvm types for MS RTTI structs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:5,rout,routines,5,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['rout'],['routines']
Integrability,// 5.1.5.2 Builtin types; // <type> ::= DB <number | instantiation-dependent expression> _; // ::= DU <number | instantiation-dependent expression> _,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:67,depend,dependent,67,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,4,['depend'],['dependent']
Integrability,"// 70% confidence level for 2 parameters Contour around the Minimum; // (minimal interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:81,interface,interface,81,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['interface'],['interface']
Integrability,"// 95% confidence level for 2 parameters Contour; // (rich interface)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx:59,interface,interface,59,math/minuit2/test/MnSim/DemoGaussSim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/DemoGaussSim.cxx,1,['interface'],['interface']
Integrability,// ::= DB <number> _ # C23 signed _BitInt(N); // ::= DB <instantiation-dependent expression> _ # C23 signed _BitInt(N); // ::= DU <number> _ # C23 unsigned _BitInt(N); // ::= DU <instantiation-dependent expression> _ # C23 unsigned _BitInt(N),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:71,depend,dependent,71,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,2,['depend'],['dependent']
Integrability,// ::= Da # auto (in dependent new-expressions),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:21,depend,dependent,21,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['depend'],['dependent']
Integrability,"// <-- | -------------- in var is blg (accept all blow cut); // Initialize (un)weighted counters for signal & background; // Construct a list of event wrappers that point to the original data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:151,wrap,wrappers,151,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['wrap'],['wrappers']
Integrability,"// <class-enum-type> ::= <name> # non-dependent type name, dependent type name, or dependent typename-specifier; // ::= Ts <name> # dependent elaborated type specifier using 'struct' or 'class'; // ::= Tu <name> # dependent elaborated type specifier using 'union'; // ::= Te <name> # dependent elaborated type specifier using 'enum'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:38,depend,dependent,38,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,6,['depend'],['dependent']
Integrability,"// <copyright file=""Program.cpp"" company=""Microsoft Corporation"">; // Copyright (C) Microsoft Corporation. All rights reserved.; // Licensed under the MIT license.; // </copyright>; // <license>; // The MIT License (MIT); //; // Copyright (C) Microsoft Corporation. All rights reserved.; //; // Permission is hereby granted, free of charge, to any person obtaining; // a copy of this software and associated documentation files (the ""Software""),; // to deal in the Software without restriction, including without limitation the; // rights to use, copy, modify, merge, publish, distribute, sublicense, and/or; // sell copies of the Software, and to permit persons to whom the Software is; // furnished to do so, subject to the following conditions:; //; // The above copyright notice and this permission notice shall be included in; // all copies or substantial portions of the Software.; //; // THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; // SOFTWARE.; // </license>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h:1241,CONTRACT,CONTRACT,1241,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCSetupApi.h,1,['CONTRACT'],['CONTRACT']
Integrability,"// <expression> ::= <unary operator-name> <expression>; // ::= <binary operator-name> <expression> <expression>; // ::= <trinary operator-name> <expression> <expression> <expression>; // ::= cv <type> expression # conversion with one argument; // ::= cv <type> _ <expression>* E # conversion with a different number of arguments; // ::= dc <type> <expression> # dynamic_cast<type> (expression); // ::= sc <type> <expression> # static_cast<type> (expression); // ::= cc <type> <expression> # const_cast<type> (expression); // ::= rc <type> <expression> # reinterpret_cast<type> (expression); // ::= st <type> # sizeof (a type); // ::= at <type> # alignof (a type); // ::= <template-param>; // ::= <function-param>; // ::= fpT # 'this' expression (part of <function-param>); // ::= sr <type> <unqualified-name> # dependent name; // ::= sr <type> <unqualified-name> <template-args> # dependent template-id; // ::= ds <expression> <expression> # expr.*expr; // ::= sZ <template-param> # size of a parameter pack; // ::= sZ <function-param> # size of a function parameter pack; // ::= u <source-name> <template-arg>* E # vendor extended expression; // ::= <expr-primary>; // <expr-primary> ::= L <type> <value number> E # integer literal; // ::= L <type> <value float> E # floating literal; // ::= L <type> <string type> E # string literal; // ::= L <nullptr type> E # nullptr literal ""LDnE""; // ::= L <pointer type> 0 E # null pointer template argument; // ::= L <type> <real-part float> _ <imag-part float> E # complex floating point literal (C99); not used by clang; // ::= L <mangled-name> E # external name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:811,depend,dependent,811,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['depend'],['dependent']
Integrability,"// <function-type> ::= [<CV-qualifiers>] [<exception-spec>] [Dx] F [Y] <bare-function-type> [<ref-qualifier>] E; //; // <exception-spec> ::= Do # non-throwing exception-specification (e.g., noexcept, throw()); // ::= DO <expression> E # computed (instantiation-dependent) noexcept; // ::= Dw <type>+ E # dynamic exception specification with instantiation-dependent types; //; // <ref-qualifier> ::= R # & ref-qualifier; // <ref-qualifier> ::= O # && ref-qualifier",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:261,depend,dependent,261,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,2,['depend'],['dependent']
Integrability,// <special-name> ::= TV <type> # virtual table; // ::= TT <type> # VTT structure (construction vtable index); // ::= TI <type> # typeinfo structure; // ::= TS <type> # typeinfo name (null-terminated byte string); // ::= Tc <call-offset> <call-offset> <base encoding>; // # base is the nominal target function of thunk; // # first call-offset is 'this' adjustment; // # second call-offset is result adjustment; // ::= T <call-offset> <base encoding>; // # base is the nominal target function of thunk; // # Guard variable for one-time initialization; // ::= GV <object name>; // # No <type>; // ::= TW <object name> # Thread-local wrapper; // ::= TH <object name> # Thread-local initialization; // ::= GR <object name> _ # First temporary; // ::= GR <object name> <seq-id> _ # Subsequent temporaries; // # construction vtable for second-in-first; // extension ::= TC <first type> <number> _ <second type>; // extension ::= GR <object name> # reference temporary for object; // extension ::= GI <module name> # module global initializer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:631,wrap,wrapper,631,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['wrap'],['wrapper']
Integrability,"// ======= Load the library the script might depend on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:45,depend,depend,45,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['depend'],['depend']
Integrability,// =============================================================; /**; * @summary Interface to read local file in the browser; *; * @hideconstructor; * @desc Use {@link openFile} to create instance of the class; * @private; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:82,Interface,Interface,82,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Interface'],['Interface']
Integrability,"// ==========================================================================================; // REveGeoShape; // Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted; // TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; // ==========================================================================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveGeoShape.hxx:115,Wrap,Wrapper,115,graf3d/eve7/inc/ROOT/REveGeoShape.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveGeoShape.hxx,1,['Wrap'],['Wrapper']
Integrability,"// ??? Can i just move this to the top and escape this explanation?; // When we have both sret and another return value, we should use the; // original Chain stored in RetOps[0], instead of the current Chain updated; // in the above loop. If we only have sret, RetOps[0] equals to Chain.; // For the case of sret and another return value, we have; // Chain_0 at the function entry; // Chain_1 = getCopyToReg(Chain_0) in the above loop; // If we use Chain_1 in getCopyFromReg, we will have; // Val = getCopyFromReg(Chain_1); // Chain_2 = getCopyToReg(Chain_1, Val) from below; // getCopyToReg(Chain_0) will be glued together with; // getCopyToReg(Chain_1, Val) into Unit A, getCopyFromReg(Chain_1) will be; // in Unit B, and we will have cyclic dependency between Unit A and Unit B:; // Data dependency from Unit B to Unit A due to usage of Val in; // getCopyToReg(Chain_1, Val); // Chain dependency from Unit A to Unit B; // So here, we use RetOps[0] (i.e Chain_0) for getCopyFromReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:744,depend,dependency,744,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,3,['depend'],['dependency']
Integrability,"// @(#)Root/meta:$Id$; // Author: Fons Rademakers 13/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMethodCall; Method or function calling interface. Objects of this class contain; the (CINT) environment to call a global function or a method for an; object of a specific class with the desired arguments. This class is; especially useful when a method has to be called more times for; different objects and/or with different arguments. If a function or; method needs to be called only once one better uses; TInterpreter::Execute(). A limitation is known with the present implementation: failures can ; occur if parameters involve temporary object construction.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:469,interface,interface,469,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['interface'],['interface']
Integrability,"// @(#)Root/tmva $Id$ ; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * This template creates ClassifierFactory stores creator functors *; * to template parameter class. ClassifierFactory is a singelton class *; * which is explicitly deleted. *; * *; * Authors (alphabetical): *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * DESY, Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassifierFactory.h:200,integrat,integrated,200,tmva/tmva/inc/TMVA/ClassifierFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassifierFactory.h,1,['integrat'],['integrated']
Integrability,"// @(#)Root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * DESY, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ClassifierFactory; \ingroup TMVA; This is the MVA factory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassifierFactory.cxx:198,integrat,integrated,198,tmva/tmva/src/ClassifierFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassifierFactory.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)Root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors : *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Factory; \ingroup TMVA. This is the main MVA steering class.; It creates all MVA methods, and guides them through the training, testing and; evaluation phases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:294,integrat,integrated,294,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)Root/tmva $Id$; // Author: Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVAGUI *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors : *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2005-2017: *; * CERN, Switzerland *; * LTU, Sweden *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx:160,integrat,integrated,160,tmva/tmvagui/src/efficienciesMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/auth:$Id$; // Author: Gerri Ganis 19/1/2004; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // DaemonUtils //; // //; // This file defines wrappers to client utils calls used by server //; // authentication daemons //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:545,wrap,wrappers,545,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['wrap'],['wrappers']
Integrability,"// @(#)root/base:$Id$; // Author: Andreas-Joachim Peters 15/05/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMonitoring; \ingroup Base. Provides the interface for externel Monitoring; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx:486,interface,interface,486,core/base/src/TVirtualMonitoring.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMonitoring.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Anna Kreshuk 10/04/2006; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualFFT; \ingroup Base. TVirtualFFT is an interface class for Fast Fourier Transforms. The default FFT library is FFTW. To use it, FFTW3 library should already; be installed, and ROOT should be have fftw3 module enabled, with the directories; of fftw3 include file and library specified (see installation instructions).; Function SetDefaultFFT() allows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:474,interface,interface,474,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Bertrand Bellenot 19/06/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRemoteObject; \ingroup Base. The TRemoteObject class provides protocol for browsing ROOT objects; from a remote ROOT session. It contains information on the real remote object as:. - Object Properties (i.e. file stat if the object is a TSystemFile); - Object Name; - Class Name; - TKey Object Name (if the remote object is a TKey); - TKey Class Name (if the remote object is a TKey); - Remote object address; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRemoteObject.cxx:496,protocol,protocol,496,core/base/src/TRemoteObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRemoteObject.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/base:$Id$; // Author: Eddy Offermann 24/06/05; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* \class TPRegexp; \ingroup Base. C++ Wrapper for the ""Perl Compatible Regular Expressions"" library; The PCRE lib can be found at: http://www.pcre.org/. Extensive documentation about Regular expressions in Perl can be; found at : http://perldoc.perl.org/perlre.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:456,Wrap,Wrapper,456,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['Wrap'],['Wrapper']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 14/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualMutex; \ingroup Base. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; ~~~ {.cpp}; {; TLockGuard guard(mutex);; ... // do something; }; ~~~; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx:491,interface,interface,491,core/base/src/TVirtualMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualMutex.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/01/98; ////////////////////////////////////////////////////////////////////////////////; /// Initialize the GUI and windowing system interface.; /// This version initializes the ROOT native GUI system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx:186,interface,interface,186,core/gui/src/InitGui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/InitGui.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGuiFactory; \ingroup Base. This ABC is a factory for GUI components. Depending on which; factory is active one gets either ROOT native (X11 based with Win95; look and feel), Win32 or Mac components. In case there is no platform dependent implementation on can run in; batch mode directly using an instance of this base class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx:499,Depend,Depending,499,core/gui/src/TGuiFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TGuiFactory.cxx,2,"['Depend', 'depend']","['Depending', 'dependent']"
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 15/11/95; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBrowserImp; \ingroup Base. ABC describing GUI independent browser implementation protocol.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx:511,protocol,protocol,511,core/gui/src/TBrowserImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TBrowserImp.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 16/12/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TInetAddress; \ingroup Base. This class represents an Internet Protocol (IP) address.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TInetAddress.cxx:492,Protocol,Protocol,492,core/base/src/TInetAddress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TInetAddress.cxx,1,['Protocol'],['Protocol']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 22/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TApplication; \ingroup Base. This class creates the ROOT Application Environment that interfaces; to the windowing system eventloop and eventhandlers.; This class must be instantiated exactly once in any given; application. Normally the specific application class inherits from; TApplication (see TRint).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:515,interface,interfaces,515,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['interface'],['interfaces']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 22/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TApplicationImp; \ingroup Base. ABC describing GUI independent application implementation protocol.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx:519,protocol,protocol,519,core/gui/src/TApplicationImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TApplicationImp.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; Error handling routines. This file defines a number of global error handling routines:; Warning(), Error(), SysError() and Fatal(). They all take a; location string (where the error happened) and a printf style format; string plus vararg's. In the end these functions call an; errorhandler function. Initially the MinimalErrorHandler, which is supposed; to be replaced by the proper DefaultErrorHandler(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:438,rout,routines,438,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,2,['rout'],['routines']
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 29/9/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMD5; \ingroup Base. This code implements the MD5 message-digest algorithm.; The algorithm is due to Ron Rivest. This code was; written by Colin Plumb in 1993, no copyright is claimed.; This code is in the public domain; do with it what you wish. Equivalent code is available from RSA Data Security, Inc.; This code has been tested against that, and is equivalent,; except that you don't need to include two pages of legalese; with every copy. To compute the message digest of a chunk of bytes, create an; TMD5 object, call Update() as needed on buffers full of bytes, and; then call Final(), which will, optionally, fill a supplied 16-byte; array with the digest.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:480,message,message-digest,480,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,2,['message'],"['message', 'message-digest']"
Integrability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 3/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup GraphicsBackends Graphics' Backends; \ingroup Graphics; Graphics' Backends interface classes.; Graphics classes interfacing ROOT graphics with the low level; native graphics backends(s) like X11, Cocoa, Win32 etc...; These classes are not meant to be used directly by ROOT users.; */; /** \class TVirtualX; \ingroup GraphicsBackends; \ingroup Base; Semi-Abstract base class defining a generic interface to the underlying, low; level, native graphics backend (X11, Win32, MacOS, OpenGL...).; An instance of TVirtualX itself defines a batch interface to the graphics system.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:507,interface,interface,507,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Gerardo Ganis + Fons Rademakers 15/5/2009; /*************************************************************************; * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBase64; \ingroup Base. This code implements the Base64 encoding and decoding. Base64 encoded messages are typically used in authentication; protocols and to pack binary data in HTTP messages.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBase64.cxx:540,message,messages,540,core/base/src/TBase64.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBase64.cxx,3,"['message', 'protocol']","['messages', 'protocols']"
Integrability,"// @(#)root/base:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPerfStats; \ingroup Base. Provides the interface for the PROOF internal performance measurement; and event tracing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx:481,interface,interface,481,core/base/src/TVirtualPerfStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPerfStats.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenu; \ingroup Base. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs. Context Menus are automatically generated by ROOT using the; following convention: if the string `// *MENU*` is found in the; comment field of a member function. This function will be added to; the list of items in the menu. The picture below shows a canvas with a pop-up menu. \image html base_hsummenu.png. The picture below shows a canvas with a pop-up menu and a dialog box. \image html base_hsumdialog.png; */; // silence warning about some cast operations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx:478,interface,interface,478,core/gui/src/TContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenu.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Nenad Buncic 08/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TContextMenuImp; \ingroup Base. This class provides an interface to GUI independent context sensitive popup menus.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx:481,interface,interface,481,core/gui/src/TContextMenuImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TContextMenuImp.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Olivier Couet 05/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:680,interface,interface,680,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Philippe Canal 13/05/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class ROOT::Detail::TBranchProxy; Base class for all the proxy object. It includes the implementation; of the autoloading of branches as well as all the generic setup routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:595,rout,routine,595,tree/treeplayer/src/TBranchProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/base:$Id$; // Author: Philippe Canal 13/05/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFriendProxyDescriptor; Hold the processed information about a Friend TTree while; TTreeProxyGenerator is parsing the TTree information.; Also contains the routine use to generate the appropriate code; fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxyDescriptor.cxx:590,rout,routine,590,tree/treeplayer/src/TFriendProxyDescriptor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxyDescriptor.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/base:$Id$; // Author: Philippe Canal 24/06/2003; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClassGenerator; Objects following this interface can be passed onto the TROOT object; to implement a user customized way to create the TClass objects. Use TROOT::AddClassGenerator to register a concrete instance.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx:470,interface,interface,470,core/meta/src/TClassGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClassGenerator.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Rene Brun 05/02/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualStreamerInfo; Abstract Interface class describing Streamer information for one class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:456,Interface,Interface,456,core/meta/src/TVirtualStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/base:$Id$; // Author: Rene Brun 05/09/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualPS; \ingroup Base; \ingroup PS. TVirtualPS is an abstract interface to Postscript, PDF, SVG. TeX etc... drivers; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPS.cxx:489,interface,interface,489,core/base/src/TVirtualPS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualPS.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/base:$Id$; // Author: Rene Brun 11/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMessageHandler. \ingroup Base; Handle messages that might be generated by the system.; By default a handler only keeps track of the different messages; generated for a specific class. By deriving from this class and; overriding Notify() one can implement custom message handling.; In Notify() one has access to the message id and the object; generating the message. One can install more than one message; handler per class. A message handler can be removed or again; added when needed. - All Root ""Warnings"" are logged as message 1001; - All Root ""Errors"" are logged as message 1002; - All Root ""SysErrors"" are logged as message 1003; - All Root ""Fatals"" are logged as message 1004; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:462,message,messages,462,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,11,['message'],"['message', 'messages']"
Integrability,"// @(#)root/base:$Id$; // Author: Rene Brun 26/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObject; \ingroup Base. Mother of all ROOT objects. The TObject class provides default behaviour and protocol for all; objects in the ROOT system. It provides protocol for object I/O,; error handling, sorting, inspection, printing, drawing, etc.; Every object which inherits from TObject can be stored in the; ROOT collection classes. TObject's bits can be used as flags, bits 0 - 13 and 24-31 are; reserved as global bits while bits 14 - 23 can be used in different; class hierarchies (watch out for overlaps).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:524,protocol,protocol,524,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,2,['protocol'],['protocol']
Integrability,// @(#)root/base:$Id$; // Author: Valery Fine 05/03/97; /** \class TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx:147,interface,interface,147,core/base/src/TVirtualGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualGL.cxx,3,"['interface', 'protocol']","['interface', 'protocol']"
Integrability,"// @(#)root/base:$Id$; // Authors: Fons Rademakers, Eddy Offermann Jan 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMatrixTCramerInv; \ingroup Matrix. TMatrixTCramerInv. Encapsulate templates of Cramer Inversion routines. The 4x4, 5x5 and 6x6 are adapted from routines written by; Mark Fischler and Steven Haywood as part of the CLHEP package. Although for sizes <= 6x6 the Cramer Inversion has a gain in speed; compared to factorization schemes (like LU) , one pays a price in; accuracy . For Example:; ~~~; H * H^-1 = U, where H is a 5x5 Hilbert matrix; U is a 5x5 Unity matrix. LU : |U_jk| < 10e-13 for j!=k; Cramer: |U_jk| < 10e-7 for j!=k; ~~~. however Cramer algorithm is about 10 (!) times faster; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTCramerInv.cxx:543,rout,routines,543,math/matrix/src/TMatrixTCramerInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTCramerInv.cxx,2,['rout'],['routines']
Integrability,"// @(#)root/base:$Id$; // Authors: Fons Rademakers, Eddy Offermann Oct 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMatrixTSymCramerInv; \ingroup Matrix. TMatrixTSymCramerInv. Encapsulate templates of Cramer Inversion routines. The 4x4, 5x5 and 6x6 are adapted from routines written by; Mark Fischler and Steven Haywood as part of the CLHEP package. Although for sizes <= 6x6 the Cramer Inversion has a gain in speed; compared to factorization schemes (like LU) , one pays a price in; accuracy . For Example:; ~~~; H * H^-1 = U, where H is a 5x5 Hilbert matrix; U is a 5x5 Unity matrix. LU : |U_jk| < 10e-13 for j!=k; Cramer: |U_jk| < 10e-7 for j!=k; ~~~. however Cramer algorithm is about 10 (!) times faster; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSymCramerInv.cxx:549,rout,routines,549,math/matrix/src/TMatrixTSymCramerInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSymCramerInv.cxx,2,['rout'],['routines']
Integrability,"// @(#)root/base:$Id: 5d6810ad46b864564f576f88aa9b154789d91d48 $; // Author: Valeriy Onuchin & Fons Rademakers 15/10/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TQObject; \ingroup Base. This is the ROOT implementation of the Qt object communication; mechanism (see also http://www.troll.no/qt/metaobjects.html). Signals and slots are used for communication between objects.; When an object has changed in some way that might be interesting; for the outside world, it emits a signal to tell whoever is; listening. All slots that are connected to this signal will be; activated (called). It is even possible to connect a signal; directly to another signal (this will emit the second signal; immediately whenever the first is emitted.) There is no limitation; on the number of slots that can be connected to a signal.; The slots will be activated in the order they were connected; to the signal. This mechanism allows objects to be easily reused,; because the object that emits a signal does not need to know; to which objects the signals are connected.; Together, signals and slots make up a powerfull component; programming mechanism. ### Signals. ~~~ {.cpp}; Destroyed(); ~~~; Signal emitted when object is destroyed.; This signal could be connected to some garbage-collector object. ~~~ {.cpp}; ChangedBy(const char *method_name); ~~~; This signal is emitted when some important data members of; the object were changed. method_name parameter can be used; as an identifier of the modifier method. ~~~ {.cpp}; Message(const char *msg); ~~~. General purpose message signal; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx:1841,Message,Message,1841,core/base/src/TQObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx,2,"['Message', 'message']","['Message', 'message']"
Integrability,"// @(#)root/base:$Id: 8944840ba34631ec28efc779647618db43c0eee5 $; // Author: Fons Rademakers 15/09/95; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSystem; \ingroup Base. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:535,interface,interface,535,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/build:$Id$; // Author: Axel Naumann 21/03/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ROOT wrapper around ROOT's mkdepend incarnation + wrapper script,; // known as depends.sh in earlier days.; // If the first(!) argument is '-R' it triggers a few special; // routines:; // * dependencies for .d files use $(wildcard ...), so gmake doesn't; // bail out if one of the dependencies doesn't exist.; // * output files starting with '/G__' and ending on "".d"" are assumed to; // be dictionaries. rmkdepend generates rules for these dictionaries ; // covering the .d file, and the .cxx file itself, ; // so the dictionaries get re-egenerated when an included header ; // file gets changed.; // * the detection / wildcarding of a dictionary file can be changed ; // by specifying -R=[tag]%[ext] as parameter to -R. The default is ; // ""-R=/G__%.d"".; // * remove output file if we encounter an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx:424,wrap,wrapper,424,misc/rmkdepend/mainroot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx,6,"['depend', 'rout', 'wrap']","['dependencies', 'depends', 'routines', 'wrapper']"
Integrability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Metho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:603,wrap,wrapped,603,core/cont/src/TList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx,1,['wrap'],['wrapped']
Integrability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:526,protocol,protocol,526,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,2,"['Depend', 'protocol']","['Depending', 'protocol']"
Integrability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TIterator; \ingroup Containers; Iterator abstract base class. This base class provides the interface; for collection iterators.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TIterator.cxx:520,interface,interface,520,core/cont/src/TIterator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TIterator.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubDataMembers; View implementing the TList interface and giving access all the; TDictionary describing public data members in a class and all its; base classes without caching any of the TDictionary pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx:481,interface,interface,481,core/meta/src/TViewPubDataMembers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.cxx,2,['interface'],"['interface', 'interfaces']"
Integrability,"// @(#)root/cont:$Id$; // Author: Philippe Canal October 2013; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TViewPubFunctions; View implementing the TList interface and giving access all the; TFunction describing public methods in a class and all its base; classes without caching any of the TFunction pointers. Adding to this collection directly is prohibited.; Iteration can only be done via the TIterator interfaces.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx:479,interface,interface,479,core/meta/src/TViewPubFunctions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubFunctions.cxx,2,['interface'],"['interface', 'interfaces']"
Integrability,"// @(#)root/cont:$Id$; // Author: Rene Brun 28/09/2001; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRef; \ingroup Base. Persistent Reference link to a TObject; A TRef is a lightweight object pointing to any TObject.; This object can be used instead of normal C++ pointers in case. - the referenced object R and the pointer P are not written to the same file; - P is read before R; - R and P are written to different Tree branches. When a top level object (eg Event *event) is a tree/graph of many objects,; the normal ROOT Streaming mechanism ensures that only one copy of each object; in the tree/graph is written to the output buffer to avoid circular; dependencies. However if the object event is split into several files or into several; branches of one or more Trees, normal C++ pointers cannot be used because; each I/O operation will write the referenced objects. When a TRef is used to point to a TObject *robj, for example in a class with; ~~~ {.cpp}; TRef fRef;; ~~~; one can do:; ~~~ {.cpp}; fRef = robj; //to set the pointer; ~~~; This TRef and robj can be written with two different I/O calls; in the same or different files, in the same or different branches of a Tree. If the TRef is read and the referenced object has not yet been read,; the TRef will return a null pointer. As soon as the referenced object; will be read, the TRef will point to it. If the referenced object is; contained in a TTree it can be auto-loaded using the TBranchRef mechanism,; which is set up by simply calling TTree::BranchRef(). TRef also supports the complex situation where a TFile is updated; multiple times on the same machine or a different machine. ## How does it work. A T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRef.cxx:981,depend,dependencies,981,core/base/src/TRef.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRef.cxx,1,['depend'],['dependencies']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingBaseClassInfo. Emulation of the CINT BaseClassInfo class. The CINT C++ interpreter provides an interface to metadata about; the base classes of a class through the BaseClassInfo class. This; class provides the same functionality, using an interface as close; as possible to BaseClassInfo but the base class metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:532,interface,interface,532,core/metacling/src/TClingBaseClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingClassInfo. Emulation of the CINT ClassInfo class. The CINT C++ interpreter provides an interface to metadata about; a class through the ClassInfo class. This class provides the same; functionality, using an interface as close as possible to ClassInfo; but the class metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx:524,interface,interface,524,core/metacling/src/TClingClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingDataMemberInfo. Emulation of the CINT DataMemberInfo class. The CINT C++ interpreter provides an interface to metadata about; the data members of a class through the DataMemberInfo class. This; class provides the same functionality, using an interface as close; as possible to DataMemberInfo but the data member metadata comes; from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:534,interface,interface,534,core/metacling/src/TClingDataMemberInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodArgInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; the arguments to a function through the MethodArgInfo class. This; class provides the same functionality, using an interface as close; as possible to MethodArgInfo but the typedef metadata comes from; the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:529,interface,interface,529,core/metacling/src/TClingMethodArgInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingMethodInfo; Emulation of the CINT MethodInfo class. The CINT C++ interpreter provides an interface to metadata about; a function through the MethodInfo class. This class provides the; same functionality, using an interface as close as possible to; MethodInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:526,interface,interface,526,core/metacling/src/TClingMethodInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypeInfo; Emulation of the CINT TypeInfo class. The CINT C++ interpreter provides an interface to metadata about; a type through the TypeInfo class. This class provides the same; functionality, using an interface as close as possible to TypeInfo; but the type metadata comes from the Clang C++ compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:522,interface,interface,522,core/metacling/src/TClingTypeInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Paul Russo 30/07/2012; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TClingTypedefInfo; Emulation of the CINT TypedefInfo class. The CINT C++ interpreter provides an interface to metadata about; a typedef through the TypedefInfo class. This class provides the; same functionality, using an interface as close as possible to; TypedefInfo but the typedef metadata comes from the Clang C++; compiler, not CINT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:528,interface,interface,528,core/metacling/src/TClingTypedefInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/core/meta:$Id$; // Author: Vassil Vassilev 14/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; /** \class TClingValue; Bridge between cling::Value and ROOT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx:460,Bridg,Bridge,460,core/metacling/src/TClingValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.cxx,1,['Bridg'],['Bridge']
Integrability,"// @(#)root/eg:$Id$; // Author: Ola Nordmann 21/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGenerator; \ingroup eg. The interface to various event generators. Is an base class, that defines the interface of ROOT to various ; event generators. Every event generator should inherit from ; TGenerator or its subclasses. ; ; Derived class can overload the member function GenerateEvent ; to do the actual event generation (e.g., call PYEVNT or similar). ; ; The derived class should overload the member function ; ImportParticles (both types) to read the internal storage of the ; generated event into either the internal TObjArray or the passed ; TClonesArray of TParticles. ; ; If the generator code stores event data in the /HEPEVT/ common block ; Then the default implementation of ImportParticles should suffice. ; The common block /HEPEVT/ is structed like ; ; \verbatim; // C ; typedef struct { ; Int_t nevhep; // Event number ; Int_t nhep; // # of particles ; Int_t isthep[4000]; // Status flag of i'th particle ; Int_t idhep[4000]; // PDG # of particle ; Int_t jmohep[4000][2]; // 1st & 2nd mother particle # ; Int_t jdahep[4000][2]; // 1st & 2nd daughter particle # ; Double_t phep[4000][5]; // 4-momentum and 1 word ; Double_t vhep[4000][4]; // 4-position of production ; } HEPEVT_DEF; ; ; ; C Fortran ; COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), ; + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) ; INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP ; DOUBLE PRECISION PHEP,VHEP ; \endverbatim. The generic member functions SetParameter and GetParameter can be; overloaded to set and get parameters of the event generator. Note, if the derived cl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:453,interface,interface,453,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/eg:$Id$; // Author: Ola Nordmann 21/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGenerator //; // //; // Is an base class, that defines the interface of ROOT to various //; // event generators. Every event generator should inherit from //; // TGenerator or its subclasses. //; // //; // Derived class can overload the member function GenerateEvent //; // to do the actual event generation (e.g., call PYEVNT or similar). //; // //; // The derived class should overload the member function //; // ImportParticles (both types) to read the internal storage of the //; // generated event into either the internal TObjArray or the passed //; // TClonesArray of TParticles. //; // //; // If the generator code stores event data in the /HEPEVT/ common block //; // Then the default implementation of ImportParticles should suffice. //; // The common block /HEPEVT/ is structed like //; // //; // /* C */ //; // typedef struct { //; // Int_t nevhep; //; // Int_t nhep; //; // Int_t isthep[4000]; //; // Int_t idhep[4000]; //; // Int_t jmohep[4000][2]; //; // Int_t jdahep[4000][2]; //; // Double_t phep[4000][5]; //; // Double_t vhep[4000][4]; //; // } HEPEVT_DEF; //; // //; // //; // C Fortran //; // COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), //; // + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) //; // INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP //; // DOUBLE PRECISION PHEP,VHEP //; // //; // The generic member functions SetParameter and GetParameter can be //; // overloaded to set and get parameters of the event generator. //; // //; // Note, if the derived",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h:559,interface,interface,559,montecarlo/eg/inc/TGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h,1,['interface'],['interface']
Integrability,"// @(#)root/eve7:$Id$; // Authors: Matevz Tadel and Alja Mrak Tadel: 2006, 2007, 2018; //; // Based of initial implementation of generic collection access interface; // for CMS framework and Fireworks event display by Christopher D. Jones.; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveDataCollection.hxx:155,interface,interface,155,graf3d/eve7/inc/ROOT/REveDataCollection.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveDataCollection.hxx,1,['interface'],['interface']
Integrability,"// @(#)root/fft:$Id$; // Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTComplex; ///; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; /// Computes complex input/output discrete Fourier transforms (DFT); /// in one or more dimensions. For the detailed information on the computed; /// transforms please refer to the FFTW manual, chapter ""What FFTW really computes"".; ///; /// How to use it:; ///; /// 1. Create an instance of TFFTComplex - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings; /// 3. Set the data (via SetPoints(), SetPoint() or SetPointComplex() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints(), GetPoint() or GetPointComplex() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but with different flags or sign, rerun the Init(); /// function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled by the transform size; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx:541,interface,interface,541,math/fftw/src/TFFTComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/fft:$Id$; // Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTComplexReal; ///; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes the inverse of the real-to-complex transforms (class TFFTRealComplex); /// taking complex input (storing the non-redundant half of a logically Hermitian array); /// to real output (see FFTW manual for more details); ///; /// How to use it:; /// 1. Create an instance of TFFTComplexReal - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings; /// 3. Set the data (via SetPoints(), SetPoint() or SetPointComplex() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints(), GetPoint() or GetPointReal() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but with different flags, rerun the Init(); /// function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled by the transform size; /// 3. In Complex to Real transform the input array is destroyed. It cannot then; /// be retrieved when using the Get's methods.; ///; /////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx:545,interface,interface,545,math/fftw/src/TFFTComplexReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/fft:$Id$; // Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTReal; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes transforms called r2r in FFTW manual:; /// - transforms of real input and output in ""halfcomplex"" format i.e.; /// real and imaginary parts for a transform of size n stored as; /// (r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1); /// - discrete Hartley transform; /// - sine and cosine transforms (DCT-I,II,III,IV and DST-I,II,III,IV); /// For the detailed information on the computed; /// transforms please refer to the FFTW manual, chapter ""What FFTW really computes"".; ///; /// How to use it:; /// 1. Create an instance of TFFTReal - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings (see function; /// comments for possible kind parameters); /// 3. Set the data (via SetPoints()or SetPoint() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints() or GetPoint() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but of different kind (or with different flags),; /// rerun the Init() function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function!; /// 2. FFTW computes unnormalized transform, so doing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx:533,interface,interface,533,math/fftw/src/TFFTReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/fft:$Id$; // Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TFFTRealComplex; ///; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes a real input/complex output discrete Fourier transform in 1 or more; /// dimensions. However, only out-of-place transforms are now supported for transforms; /// in more than 1 dimension. For detailed information about the computed transforms,; /// please refer to the FFTW manual; ///; /// How to use it:; /// 1. Create an instance of TFFTRealComplex - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings (see function; /// comments for possible kind parameters); /// 3. Set the data (via SetPoints()or SetPoint() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints() or GetPoint() functions); /// 6. Repeat steps 3)-5) as needed; /// For a transform of the same size, but with different flags,; /// rerun the Init() function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled by the transform size; ///; ///; /////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTRealComplex.cxx:550,interface,interface,550,math/fftw/src/TFFTRealComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTRealComplex.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/fitpanel:$Id: ed8d59036b6a51c67cd739c2c75aa7780b847bf8 $; // Author: Ilka Antcheva, Lorenzo Moneta 10/08/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFitEditor; \ingroup fitpanel. Allows to perform, explore and compare various fits. To display the new Fit panel interface right click on a histogram; or a graph to pop up the context menu and then select the menu; entry 'Fit Panel'. ""General"" Tab. The first set of GUI elements is related to the function choice; and settings. The status bar on the bottom provides information; about the current minimization settings using the following; abbreviations:; LIB - shows the current choice between Minuit/Minuit2/Fumili; MIGRAD or FUMILI points to the current minimization method in use.; Itr: - shows the maximum number of iterations nnnn set for the fit.; Prn: - can be DEF/VER/QT and shows the current print option in use. ""Predefined"" combo box - contains a list of predefined functions; in ROOT. The default one is Gaussian. ""Operation"" radio button group defines selected operational mode; between functions: NOP - no operation (default); ADD - addition; CONV - convolution (will be implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likel",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:605,interface,interface,605,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/foam:$Id$; // Author: S. Jadach <mailto:Stanislaw.jadach@ifj.edu.pl>, P.Sawicki <mailto:Pawel.Sawicki@ifj.edu.pl>; /** \class TFoam. TFoam is the main class of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM. ### FOAM Version 1.02M. \authors; S. Jadach and P.Sawicki; Institute of Nuclear Physics, Cracow, Poland; Stanislaw. Jadach@ifj.edu.pl, Pawel.Sawicki@ifj.edu.pl. ### What is FOAM for?. - Suppose you want to generate randomly points (vectors) according to; an arbitrary probability distribution in n dimensions,; for which you supply your own method. FOAM can do it for you!; Even if your distributions has quite strong peaks and is discontinuous!; - FOAM generates random points with weight one or with variable weight.; - FOAM is capable to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:240,integrat,integrator,240,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,3,['integrat'],"['integrate', 'integrator']"
Integrability,"// @(#)root/foam:$Id$; // Author: S. Jadach <mailto:Stanislaw.jadach@ifj.edu.pl>, P.Sawicki <mailto:Pawel.Sawicki@ifj.edu.pl>; /** \class TFoamMaxwt. Small auxiliary class for controlling MC weight.; It provides certain measure of the ""maximum weight""; depending on small user-parameter ""epsilon"".; It creates and uses 2 histograms of the TH1D class.; User defines no. of bins nBin, nBin=1000 is recommended; wmax defines weight range (1,wmax), it is adjusted ""manually""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx:253,depend,depending,253,math/foam/src/TFoamMaxwt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx,1,['depend'],['depending']
Integrability,"// @(#)root/ged:$Id$; // Author: Carsten Hof 09/08/04; // Authors mail: Carsten_Hof@web.de; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**\class TH2Editor; \ingroup ged. Editor for changing TH2 histogram attributes, rebinning & fitting.; For all possible draw options (there are a few which are not implementable; in a graphical user interface) see THistPainter::Paint. These changes can be made via the TH2Editor:; Style Tab:; 'Line' : change Line attributes (color, thickness); see TAttLineEditor; 'Fill' : change Fill attributes (color, pattern); see TAttFillEditor; 'Title' : TextEntry: set the title of the histogram; 'Histogram': change the draw options of the histogram; 'Plot' : Radiobutton: draw a 2D or 3D plot of the histogram; according to the Plot dimension there will be; different drawing possibilities (ComboBoxes/; CheckBoxes); 2d Plot:; 'Contour' : ComboBox: draw a contour plot (None, Cont0..4); 'Cont #' : TGNumberEntry: set the number of Contours; 2d Plot checkboxes:; 'Arrow' : arrow mode. Shows gradient between adjacent cells; 'Col' : a box is drawn for each cell with a color scale; varying with contents; 'Text' : Draw bin contents as text; 'Box' : a box is drawn for each cell with surface; proportional to contents; 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1..4, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:649,interface,interface,649,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/ged:$Id$; // Author: Carsten Hof 16/08/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TH1Editor; \ingroup ged. Editor for changing TH1 histogram attributes, rebinning & fitting.; For all possible draw options (there are a few which are not implementable; in graphical user interface) see THistPainter::Paint. These changes can be made via the TH1Editor:; Style Tab:; 'Line' : change Line attributes (color, thickness); see TAttLineEditor; 'Fill' : change Fill attributes (color, pattern); see TAttFillEditor; 'Title' : TextEntry: set the title of the histogram; 'Histogram': change the draw options of the histogram; 'Plot' : Radiobutton: draw a 2D or 3D plot of the histogram; according to the Plot dimension there will be; different drawing possibilities (ComboBoxes/; CheckBoxes); 2d Plot:; 'Error' : ComboBox: add different error bars to the histogram; (no errors, simple, ..., see THistPainter::Paint; 'Add' : ComboBox: further things which can be added to the; histogram (None, simple/smooth line, fill area; 'Simple Drawing': CheckBox: draw a simple histogram without; errors (= ""HIST"" drawoption). In combination with; some other draw options an outer line is drawn on; top of the histogram; 'Show markers': CheckBox: draw a marker on to of each bin (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:611,interface,interface,611,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/ged:$Id$; // Author: Denis Favre-Miville 08/09/05; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStyleManager; \ingroup ged. This class provides a Graphical User Interface to manage styles; in ROOT. It allows the user to edit styles, import / export; them to macros, apply a style on the selected object or on; all canvases, change gStyle. Activate the style manager by selecting Edit menu / Style...; in the canvas window. The Style Manager interface is composed of two parts:; - the top level interface that manages a list of styles;; - the style editor, which deals with the current style settings. The combo box 'Available Styles' contains the list of available; styles for the current ROOT session and shows the currently; selected one. The field on the right shows the setting of the gStyle.; You can set the global variable gStyle to the selected style by; clicking on the button in the middle.; The group frame 'Apply on' displays information for the currently; selected canvas and object in the ROOT session. This selection might; be changed by clicking on another object with the middle mouse; button. You have a choice to apply a style on the selected object or; on all available canvases.; WARNING: You cannot undo the changes after applying the style! If; you are not sure of that action, it may be better to see a preview; of what you are going to apply.; If the check button 'Preview' is selected, a preview of the selected; canvas according to the selected style will be shown. The selection; of the next check button 'Run Time Preview' will apply updates of; the preview any time a value of the selected style is changed. For; drawings that take a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:498,Interface,Interface,498,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"// @(#)root/geom:$Id$// Author: Andrei Gheata 24/10/01; // Contains() and DistFromOutside/Out() implemented by Mihaela Gheata; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoTessellated; \ingroup Geometry_classes. Tessellated solid class. It is composed by a set of planar faces having triangular or; quadrilateral shape. The class does not provide navigation functionality, it just wraps the data; for the composing faces.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoTessellated.cxx:709,wrap,wraps,709,geom/geom/src/TGeoTessellated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoTessellated.cxx,1,['wrap'],['wraps']
Integrability,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 05/12/18; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoOpticalSurface; \ingroup Geometry_classes. This is a wrapper class to G4OpticalSurface; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoOpticalSurface.cxx:484,wrap,wrapper,484,geom/geom/src/TGeoOpticalSurface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoOpticalSurface.cxx,1,['wrap'],['wrapper']
Integrability,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 18/10/17; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoRegion; \ingroup Geometry_classes. Regions are groups of volumes having a common set of user tracking cuts. Class wrapper for regions used by Monte Carlo packages; A region is composed by a list of logical volumes and defines a set; of cuts. Used mainly to transport region information stored in; GDML format to the clients requiring it from the transient geometry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoRegion.cxx:545,wrap,wrapper,545,geom/geom/src/TGeoRegion.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoRegion.cxx,1,['wrap'],['wrapper']
Integrability,"// @(#)root/geom:$Id$; // Author: Andrei Gheata 25/10/01; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoManager; \ingroup Geometry_classes. The manager class for any TGeo geometry. Provides user; interface for geometry creation, navigation, state querying,; visualization, IO, geometry checking and other utilities. ## General architecture. The ROOT geometry package is a tool designed for building, browsing,; tracking and visualizing a detector geometry. The code is independent from; other external MC for simulation, therefore it does not contain any; constraints related to physics. However, the package defines a number of; hooks for tracking, such as media, materials, magnetic field or track state flags,; in order to allow interfacing to tracking MC's. The final goal is to be; able to use the same geometry for several purposes, such as tracking,; reconstruction or visualization, taking advantage of the ROOT features; related to bookkeeping, I/O, histogramming, browsing and GUI's. The geometrical modeler is the most important component of the package and; it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"". The architecture of the modeler is a combination between a GEANT-like; containment scheme and a normal CSG binary tree at the level of shapes. An; important common feature of all detector geometry descriptions is the; mother-daughter concept. This is the most natural approach when tracking; is concerned and imposes a set of constraints to the way geometry is defined.; Construc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:523,interface,interface,523,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/geom:$Id$; // Author: Rene Brun 26/12/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoMedium; \ingroup Materials_classes. Media are used to store properties related to tracking and which are useful; only when using geometry with a particle transport MC package (via VMC). One; may define several tracking media for a given material. The media ID are user; defined values that are not used by the geometry package. In case geometry; is used via VMC (in GEANT) these numbers are overwritten, so one can only; rely on these values after gMC->FinishGeometry() is called.; The media parameters are inspired from GEANT3 and the values defined make sense; in context of GEANT (3 but also 4) or FLUKA interfaces.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMedium.cxx:1034,interface,interfaces,1034,geom/geom/src/TGeoMedium.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMedium.cxx,1,['interface'],['interfaces']
Integrability,"// @(#)root/geompainter:$Id: 58726ead32989b65bb2cbff2af4235fe9c6b12ae $; // Author: Andrei Gheata 05/03/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoPainter; \ingroup Geometry_painter. Class implementing all draw interfaces for a generic 3D viewer; using TBuffer3D mechanism.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:545,interface,interfaces,545,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['interface'],['interfaces']
Integrability,"// @(#)root/graf2d:$Id$; // Author: Claudi Martinez, July 19th 2010; /*************************************************************************; * Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /// \defgroup fitsio FITS file; /// \brief Interface to FITS file.; /// \ingroup Graphics2D; ///; /// TFITS is an interface that lets you reading Flexible Image Transport System; /// (FITS) files, which are generally used in astronomy. This file format; /// was standardized 1981 and today is still widely used among professional; /// and amateur astronomers. FITS is not only an image file, but also; /// it can contain spectrums, data tables, histograms, and multidimensional; /// data. Furthermore, FITS data can be described itself by containing; /// human-readable information that let us to interpret the data within; /// the FITS file. For example, a FITS could contain a 3D data cube,; /// but an additional description would tell us that we must read it, for; /// example, as a 3-layer image.; ///; /// TFITS requires CFITSIO library to be installed on your system. It; /// is currently maintained by NASA/GSFC and can be downloaded from; /// [NASA/GSFC web site](http://fits.gsfc.nasa.gov), as well as documentation.; ///; /// Using this interface is easy and straightforward. There is only 1 class; /// called ""TFITSHDU"" which has several methods to extract data from a; /// FITS file, more specifically, from an HDU within the file. An HDU, or; /// Header Data Unit, is a chunk of data with a header containing several; /// ""keyword = value"" tokens. The header describes the structure of data; /// within the HDU. An HDU can be of two types: an ""image HDU"" or a ""table; /// HDU"". The former can be any kind of multidimensional array of real numbers,; /// by whic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:470,Interface,Interface,470,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"// @(#)root/graf:$Id$; // Author: Olivier Couet 01/10/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTF; \ingroup BasicGraphics. Interface to the freetype 2 library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TTF.cxx:456,Interface,Interface,456,graf2d/graf/src/TTF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TTF.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/graf:$Id$; // Author: Reiner Rohlfs 24/03/02; /*************************************************************************; * Copyright (C) 2001-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TAttImage; \ingroup BasicGraphics; \ingroup GraphicsAtt. TImage attributes. Image attributes are:. - Image Quality (see EImageQuality for the list of qualities); - Compression defines the compression rate of the color data in the; internal image structure. Speed and memory depends; on this rate, but not the image display itself; 0: no compression; 100: max compression; - Radio Flag: kTRUE the x/y radio of the displayed image is always; identical to the original image kFALSE the x and y size of the displayed; image depends on the size of the pad; - Palette: Defines the conversion from a pixel value to the; screen color. This class is used (in general by secondary inheritance); by some other classes (image display).; */; /** \class TImagePalette; \ingroup BasicGraphics. A class to define a conversion from pixel values to pixel color. A Palette is defined by some anchor points. Each anchor point has; a value between 0 and 1 and a color. An image has to be normalized; and the values between the anchor points are interpolated.; All member variables are public and can be directly manipulated.; In most cases the default operator will be used to create a; TImagePalette. In this case the member arrays have to be allocated; by an application and will be deleted in the destructor of this; class. We provide few predefined palettes:. - gHistImagePalette - palette used in TH2::Draw(""col""); - gWebImagePalette; The web palette is a set of 216 colors that will not dither or; shift on PCs or Macs. Browsers use this built-in palette when; they need to r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:715,depend,depends,715,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,2,['depend'],['depends']
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 05/01/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGString; \ingroup guiwidgets. TGString wraps a TString and adds some graphics routines like; drawing, size of string on screen depending on font, etc. \class TGHotString; \ingroup guiwidgets. TGHotString is a string with a ""hot"" character underlined. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGString.cxx:1001,wrap,wraps,1001,gui/gui/src/TGString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGString.cxx,3,"['depend', 'rout', 'wrap']","['depending', 'routines', 'wraps']"
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 05/05/98; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGTextBuffer; \ingroup guiwidgets. A text buffer is used in several widgets, like TGTextEntry,; TGFileDialog, etc. It is a little wrapper around the powerful; TString class and used for single line texts. For multi line texts; use TGText. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextBuffer.cxx:1091,wrap,wrapper,1091,gui/gui/src/TGTextBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextBuffer.cxx,1,['wrap'],['wrapper']
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 10/01/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGScrollBar; \ingroup guiwidgets. The classes in this file implement scrollbars. Scrollbars can be; either placed horizontal or vertical. A scrollbar contains three. \class TGScrollBarElements; \ingroup guiwidgets; The ""head"", ""tail"" and ""slider"". The head and; tail are fixed at either end and have the typical arrows in them. \class TGHScrollBar; \ingroup guiwidgets; The TGHScrollBar will generate the following event messages:; kC_HSCROLL, kSB_SLIDERPOS, position, 0; kC_HSCROLL, kSB_SLIDERTRACK, position, 0. \class TGVScrollBar; \ingroup guiwidgets; The TGVScrollBar will generate the following event messages:; kC_VSCROLL, kSB_SLIDERPOS, position, 0; kC_VSCROLL, kSB_SLIDERTRACK, position, 0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGScrollBar.cxx:1382,message,messages,1382,gui/gui/src/TGScrollBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGScrollBar.cxx,2,['message'],['messages']
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 12/02/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRootContextMenu; \ingroup guiwidgets. This class provides an interface to context sensitive popup menus.; These menus pop up when the user hits the right mouse button, and; are destroyed when the menu pops downs.; The picture below shows a canvas with a pop-up menu. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx:490,interface,interface,490,gui/gui/src/TRootContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 22/02/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRootControlBar; \ingroup guiwidgets. This class provides an interface to the GUI dependent functions of; the TControlBar class. A control bar is a horizontal or vertical bar; with a number of buttons (text or picture buttons). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootControlBar.cxx:489,interface,interface,489,gui/gui/src/TRootControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootControlBar.cxx,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 3/7/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGTextEdit; \ingroup guiwidgets. A TGTextEdit is a specialization of TGTextView. It provides the; text edit functionality to the static text viewing widget.; For the messages supported by this widget see the TGView class. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx:1127,message,messages,1127,gui/gui/src/TGTextEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx,1,['message'],['messages']
Integrability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 30/6/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGView; \ingroup guiwidgets. A TGView provides the infrastructure for text viewer and editor; widgets. It provides a canvas (TGViewFrame) and (optionally) a; vertical and horizontal scrollbar and methods for marking and; scrolling. The TGView (and derivatives) will generate the following; event messages:. - kC_TEXTVIEW, kTXT_ISMARKED, widget id, [true|false]; - kC_TEXTVIEW, kTXT_DATACHANGE, widget id, 0; - kC_TEXTVIEW, kTXT_CLICK2, widget id, position (y << 16) | x); - kC_TEXTVIEW, kTXT_CLICK3, widget id, position (y << 16) | x); - kC_TEXTVIEW, kTXT_F3, widget id, true; - kC_TEXTVIEW, kTXT_OPEN, widget id, 0; - kC_TEXTVIEW, kTXT_CLOSE, widget id, 0; - kC_TEXTVIEW, kTXT_SAVE, widget id, 0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx:1258,message,messages,1258,gui/gui/src/TGView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx,1,['message'],['messages']
Integrability,"// @(#)root/gui:$Id$; // Author: Katerina Opocenska 11/09/2008; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRecorder; \ingroup guirecorder. Class provides direct recorder/replayer interface for a user.; See 'ROOT EVENT RECORDING SYSTEM' for more information about usage. Implementation uses C++ design pattern State. Functionality of; recorder is divided into 4 classes according to the current; state of recorder. Internally, there is a pointer to TRecorderState object.; This object changes whenever state of recorder is changed.; States of recorder are the following:. - INACTIVE Implemented in TRecorderInactive class.; Default state after TRecorder object is created. - RECORDING Implemented in TRecorderRecording class. - REPLAYING Implemented in TRecorderReplaying class. - PAUSED Implemented in TRecorderPause class.; Pause of replaying. Every command for TRecorder is just passed; to TRecordeState object.; Depending on the current state of recorder, this command is passed; to some of the above mentioned classes and if valid, handled there. Switching between states is not possible from outside. States are; switched directly by state objects via:. ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);. When recorder is switched to a new state, the old state object is; typically deleted. The only exception is switching from REPLAYING; state to PAUSED state. The previous state (REPLAYING) is not; deleted in order to be used again after TRecorder::Resume call. ### STATE TRANSITIONS:. - INACTIVE -> RECORDING via TRecorder::Start (Starts recording); - RECORDING -> INACTIVE via TRecorder::Stop (Stops recording). - INACTIVE -> REPLAYING via TRecord",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:506,interface,interface,506,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/gui:$Id: 1f399bfa44c1323de4c6fe38d6d7a83a4bdf2e32 $; // Author: Fons Rademakers 1/7/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGTextView; \ingroup guiwidgets. A TGTextView is a text viewer widget. It is a specialization of; TGView. It uses the TGText class (which contains all text; manipulation code, i.e. loading a file in memory, changing,; removing lines, etc.). Use a TGTextView to view non-editable text.; For supported messages see TGView. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx:1304,message,messages,1304,gui/gui/src/TGTextView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx,1,['message'],['messages']
Integrability,"// @(#)root/gui:$Id: d25b6f3b0b2546fe028288bd22c21588bdd1b8c1 $; // Author: Fons Rademakers 09/01/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TMsgBox; \ingroup guiwidgets. A message dialog box. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx:1036,message,message,1036,gui/gui/src/TGMsgBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx,1,['message'],['message']
Integrability,"// @(#)root/hbook:$Id$; // Author: Rene Brun 18/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THbookFile; \ingroup Hist; This class is an interface to the Hbook objects in Hbook files.; Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read. NB: a THbookFile can only be used in READ mode; Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root. Example of use:. gSystem->Load(""libHbook"");; THbookFile f(""myfile.hbook"");; f.ls();; TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; h1->Fit(""gaus"");; THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; T->Print(); //show the Hbook ntuple variables; T->Draw(""x"",""y<0""); // as in normal TTree::Draw. THbookFile can be browsed via TBrowser.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx:470,interface,interface,470,hist/hbook/src/THbookFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/hbook:$Id$; // Author: Rene Brun 18/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THbookTree; \ingroup Hist; A wrapper class supporting Hbook ntuples (CWN and RWN).; The normal TTree calls can be used, including TTree::Draw().; Data read directly from the Hbook file via THbookFile. IMPORTANT NOTE; When setting the branch address (via THbookTree::SetBranchAddress); for a branch in an Hbook block containing several names, eg; Hbook block SELEVN with the following variables:. ~~~; ******************************************************************; * 1 * R*4 * * * SELEVN * WGGS; * 2 * R*4 * * * SELEVN * AM12; * 3 * R*4 * * * SELEVN * AM34; * 4 * R*4 * * * SELEVN * AM14; * 5 * R*4 * * * SELEVN * AM32; * 6 * R*4 * * * SELEVN * PtPI(4); * 7 * R*4 * * * SELEVN * PHIPI(4); * 8 * R*4 * * * SELEVN * THTPI(4). one must define a C struct like:; struct {; Float_t Wggs;; Float_t Am12;; Float_t Am34;; Float_t Am14;; Float_t Am32;; Float_t Ptpi[4];; Float_t Phipi[4];; Float_t Thtpi[4];; } event;. and set ONLY the first variable address with:; h96->SetBranchAddress(""Wggs"",&event.Wggs);; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookTree.cxx:455,wrap,wrapper,455,hist/hbook/src/THbookTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookTree.cxx,1,['wrap'],['wrapper']
Integrability,"// @(#)root/hist:$Id$; // Author: Christian Holm Christensen 07/11/2000; /** \class TMultiDimFit; \ingroup Hist. Multidimensional Fits in ROOT.; ## Overview; A common problem encountered in different fields of applied science is; to find an expression for one physical quantity in terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; <I>least squares</I> fitting procedure applied to a representative; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:757,depend,dependent,757,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['depend'],"['dependence', 'dependent']"
Integrability,"// @(#)root/io:$Id$; // Author: Andreas Peters + Fons Rademakers + Rene Brun 26/5/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TFileMerger TFileMerger.cxx; \ingroup IO. This class provides file copy and merging services. It can be used to copy files (not only ROOT files), using TFile or; any of its remote file access plugins. It is therefore useful in; a Grid environment where the files might be accessible only remotely.; The merging interface allows files containing histograms and trees; to be merged, like the standalone hadd program.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:769,interface,interface,769,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/mathcore:$Id$; // Author: L. Moneta Nov 2010; /**********************************************************************; * *; * Copyright (c) 2010 LCG ROOT Math Team, CERN/PH-SFT *; * *; * *; **********************************************************************/; // helper class for binomial Neyman intervals; // author Jordan Tucker; // integration in CMSSW: Luca Lista; // modified and integrated in ROOT: Lorenzo Moneta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiencyHelper.h:350,integrat,integration,350,hist/hist/src/TEfficiencyHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiencyHelper.h,2,['integrat'],"['integrated', 'integration']"
Integrability,"// @(#)root/mathcore:$Id$; // Author: L. Moneta Thu Nov 23 10:38:32 2006; /**********************************************************************; * *; * Copyright (c) 2006 CERN *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; * *; **********************************************************************/; // Header file for class WrappedParamFunction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:429,Wrap,WrappedParamFunction,429,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['Wrap'],['WrappedParamFunction']
Integrability,"// @(#)root/mathcore:$Id$; // Author: L. Moneta Tue Aug 4 2015; /**********************************************************************; * *; * Copyright (c) 2015 LCG ROOT Math Team, CERN/PH-SFT *; * *; * *; **********************************************************************/; // interface for random engines based on ROOT ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/TRandomEngine.h:284,interface,interface,284,math/mathcore/inc/Math/TRandomEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/TRandomEngine.h,1,['interface'],['interface']
Integrability,"// @(#)root/mathcore:$Id$; // Author: Rene Brun, Lorenzo Moneta 15/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**. \class TRandom. @ingroup Random. This is the base class for the ROOT Random number generators.; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived; classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the <a; href=""https://www.gnu.org/software/gsl/manual/html_node/Unix-random-number-generators.html"">BSD `rand` generator</a>,; that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated; in just few seconds. To generate random numbers, one should use one of the derived classes, which are:; - TRandom3: it is based on the ""Mersenne Twister generator"",; it is fast and a very long period of about \f$10^{6000}\f$. However it fails some of the most stringent tests of the; <a href=""http://simul.iro.umontreal.ca/testu01/tu01.html"">TestU01 suite</a>.; In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application; based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to; the ROOT generator, *gRandom*.; - ::TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of; 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his; <a href=""https://arxiv.org/abs/1705.03123"">paper </a>. It generates random numbers with 52 bit precision (double; precision) and it has a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:575,interface,interface,575,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/mathcore:$Id$; // Authors: David Gonzalez Maline 01/2008; /**********************************************************************; * *; * Copyright (c) 2006 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header for the IRootFinderMethod interface; //; // Created by: David Gonzalez Maline : Fri Jan 25 2008; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h:315,interface,interface,315,math/mathcore/inc/Math/IRootFinderMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h,1,['interface'],['interface']
Integrability,"// @(#)root/mathcore:$Id$; // Authors: L. Moneta 11/2006; /**********************************************************************; * *; * Copyright (c) 2006 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header file for function interfaces; //; // Generic Interfaces for one or multi-dimensional functions; //; // Created by: Lorenzo Moneta : Wed Nov 13 2006; //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:295,interface,interfaces,295,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,2,"['Interface', 'interface']","['Interfaces', 'interfaces']"
Integrability,"// @(#)root/mathcore:$Id$; // Authors: M. Slawinska 08/2007; /**********************************************************************; * *; * Copyright (c) 2007 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header source file for class IntegratorMultiDim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:302,Integrat,IntegratorMultiDim,302,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['Integrat'],['IntegratorMultiDim']
Integrability,"// @(#)root/mathcore:$Id$; // Authors: Rene Brun, Anna Kreshuk, Eddy Offermann, Fons Rademakers 29/07/95; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // TMath; //; // Encapsulate math routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:580,rout,routines,580,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/mathmore:$Id$; // Author: L. Moneta Wed Sep 6 09:52:26 2006; /**********************************************************************; * *; * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; * *; * *; **********************************************************************/; // Header file for class WrappedTFunction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h:315,Wrap,WrappedTFunction,315,hist/hist/inc/Math/WrappedMultiTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h,1,['Wrap'],['WrappedTFunction']
Integrability,"// @(#)root/mathmore:$Id$; // Author: Magdalena Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/; // Integration types for; // one and multidimensional integration; // with a common interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:284,Integrat,Integration,284,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,3,"['Integrat', 'integrat', 'interface']","['Integration', 'integration', 'interface']"
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 08/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:1125,adapter,adapter,1125,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['adapter'],['adapter']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 12/2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h:1125,adapter,adapter,1125,math/mathmore/src/GSLMultiMinFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h,1,['adapter'],['adapter']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLFunctionAdapter; //; // Generic adapter for gsl_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h:1127,adapter,adapter,1127,math/mathmore/inc/Math/GSLFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h,1,['adapter'],['adapter']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class IntegrationTypes; //; // Created by: moneta at Fri Nov 26 15:40:58 2004; //; // Last update: Fri Nov 26 15:40:58 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h:1092,Integrat,IntegrationTypes,1092,math/mathmore/inc/Math/IntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h,1,['Integrat'],['IntegrationTypes']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h:1126,adapter,adapter,1126,math/mathmore/src/GSLMultiFitFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h,1,['adapter'],['adapter']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, M. Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/; // Header file for class Integrator; //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:311,Integrat,Integrator,311,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['Integrat'],['Integrator']
Integrability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Mar 2011; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multiroot_function signature type; // usable for any array of function pointers; // implementing operator()(const double *x) and (if needed); // Gradient(const double *x, double * g); //; // The class is very similar to GSLMultiFitFunctionAdapter,; // but in that case the array is for function references (or value); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h:1126,adapter,adapter,1126,math/mathmore/src/GSLMultiRootFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h,1,['adapter'],['adapter']
Integrability,"// @(#)root/mathmore:$Id: Integrator.cxx 19826 2007-09-19 19:56:11Z rdm $; // Authors: L. Moneta, M. Slawinska 10/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * *; **********************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx:26,Integrat,Integrator,26,math/mathcore/src/Integrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx,1,['Integrat'],['Integrator']
Integrability,"// @(#)root/matrix:$Id$; // Authors: Fons Rademakers, Eddy Offermann Mar 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx:1568,CONTRACT,CONTRACT,1568,math/quadp/src/TQpProbDens.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 01/03/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TInterpreter; This class defines an abstract interface to a generic command line; interpreter.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx:474,interface,interface,474,core/meta/src/TInterpreter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TInterpreter.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:473,interface,interface,473,core/meta/src/TDictionary.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/meta:$Id$; // vim: sw=3 ts=3 expandtab foldmethod=indent; /*************************************************************************; * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCling. This class defines an interface to the cling C++ interpreter. Cling is a full ANSI compliant C++-11 interpreter based on; clang/LLVM technology.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:469,interface,interface,469,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/metautils:$Id$; // Author: Paul Russo, 2009-10-06; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //______________________________________________________________________________; // //; // ROOT::TMetaUtils provides utility wrappers around //; // cling, the LLVM-based interpreter. It's an internal set of tools //; // used by TCling and rootcling. //; // //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:547,wrap,wrappers,547,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['wrap'],['wrappers']
Integrability,// @(#)root/minuit2:$Id$; // Author: L. Moneta 12/2005; /**; test of a pure minimization passing a user function; This is an example of running Minuit2 using the; Minuit2Minimizer class (via the Minimizer interface). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/demoMinimizer.cxx:205,interface,interface,205,math/minuit2/test/MnSim/demoMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/demoMinimizer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/minuit:$Id$; // Author: Rene Brun, Frederick James 12/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TMinuit; \see Minuit2 for a newer version of this package; \ingroup MinuitOld. Implementation in C++ of the Minuit package written by Fred James.; This is a straightforward conversion of the original Fortran version. The main changes are:. - The variables in the various Minuit labelled common blocks; have been changed to the TMinuit class data members. - The internal arrays with a maximum dimension depending on the; maximum number of parameters are now data members arrays with; a dynamic dimension such that one can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multipara",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:844,depend,depending,844,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['depending']
Integrability,"// @(#)root/mysql:$Id$; // Author: Fons Rademakers 15/02/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMySQLServer //; // //; // MySQL server plugin implementing the TSQLServer interface. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // mysql://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test //; // //; // As an example of connecting to mysql we assume that the server is //; // running on the local host and that you have access to a database //; // named ""test"" by connecting using an account that has a username and //; // password of ""tuser"" and ""tpass"". You can set up this account //; // by using the ""mysql"" program to connect to the server as the MySQL //; // root user and issuing the following statement: //; // //; // mysql> GRANT ALL ON test.* TO 'tuser'@'localhost' IDENTIFIED BY 'tpass';; // //; // If the test database does not exist, create it with this statement: //; // //; // mysql> CREATE DATABASE test; //; // //; // If you want to use a different server host, username, password, //; // or database name, just substitute the appropriate values. //; // To connect do: //; // //; // TSQLServer *db = TSQLServer::Connect(""mysql://localhost/test"", ""tuser"", ""tpass"");; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:582,interface,interface,582,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id$; // Author: A. Peters, G. Ganis 7/2/2007; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TFileStager //; // //; // Abstract base class defining an interface to a stager. //; // //; // To open a connection to a stager use the static method //; // Open(""<stager>""), where <stager> contains a keyword allowing to load //; // the relevant plug-in, e.g. //; // TFileStager::Open(""root://lxb6064.cern.ch"") //; // will load TNetXNGFileStager and initialize it for the redirector at //; // lxb6046.cern.ch . //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx:565,interface,interface,565,net/net/src/TFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id$; // Author: Fabio Hernandez 22/01/2013; // extending an initial version by Marcelo Sousa (class TAS3File); /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \file TS3WebFile.cxx; \class TS3WebFile; \ingroup IO. A TS3WebFile is a TWebFile which retrieves the file contents from a; web server implementing the REST API of the Amazon S3 protocol. This; class is meant to be as generic as possible to be used with files; hosted not only by Amazon S3 servers but also by other providers; implementing the core of the S3 protocol. The S3 protocol works on top of HTTPS (and HTTP) and imposes that; each HTTP request be signed using a specific convention: the request; must include an 'Authorization' header which contains the signature; of a concatenation of selected request fields. For signing the; request, an 'Access Key Id' and a 'Secret Access Key' need to be; known. These keys are used by the S3 servers to identify the client; and to authenticate the request as genuine. As an end user, you must know the Access Key and Secret Access Key; in order to access each S3 file. They are provided to you by your S3; service provider. Those two keys can be provided to ROOT when; initializing an object of this class by two means:; a. by using the environmental variables S3_ACCESS_KEY and ; S3_SECRET_KEY, or; b. by specifying them when opening each file. You can use AWS temporary security credentials (temporary access key; and secret access key), but you must also give the associated; session token. The token may be set in the S3_SESSION_TOKEN; environmental variable, or on open in the TOKEN option. The first method is convenient if all the S3 files you want to; a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:668,protocol,protocol,668,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,3,['protocol'],['protocol']
Integrability,"// @(#)root/net:$Id$; // Author: Fabio Hernandez 30/01/2013; // based on an initial version by Marcelo Sousa (class THTTPMessage); /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TS3HTTPRequest //; // //; // An object of this class represents an HTTP request extended to be //; // compatible with Amazon's S3 protocol. //; // Specifically, such a request contains an 'Authorization' header with //; // information used by the S3 server for authenticating this request. //; // The authentication information is computed based on a pair of access //; // key and secret key which are both provided to the user by the S3 //; // service provider (e.g. Amazon, Google, etc.). //; // The secret key is used to compute a signature of selected fields in //; // the request. The algorithm for computing the signature is documented //; // in: //; // //; // Google storage: //; // http://code.google.com/apis/storage/docs/reference/v1/developer-guidev1.html#authentication; // //; // Amazon: //; // http://docs.aws.amazon.com/AmazonS3/latest/dev/S3_Authentication2.html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3HTTPRequest.cxx:705,protocol,protocol,705,net/net/src/TS3HTTPRequest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3HTTPRequest.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 13/02/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TFTP //; // //; // This class provides all infrastructure for a performant file //; // transfer protocol. It works in conjuction with the rootd daemon //; // and can use parallel sockets to improve performance over fat pipes. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:601,protocol,protocol,601,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 14/08/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \file TNetFile.cxx; \class TNetFile; \ingroup IO. A TNetFile is like a normal TFile except that it reads and writes; its data via a rootd server (for more on the rootd daemon see the; source files in `root/rootd/src/`). TNetFile file names are in; standard URL format with protocol ""root"" or ""roots"". The following; are valid TNetFile URL's:; - `root://hpbrun.cern.ch/root/hsimple.root`; - `root://pcna49a:5151/~na49/data/run821.root`; - `root://pcna49d.cern.ch:5050//v1/data/run810.root`. The only difference with the well known httpd URL's is that the root; of the remote file tree is the user's home directory. Therefore an; absolute pathname requires a // after the host or port specifier; (see last example). Further the expansion of the standard shell; characters, like ~, $, .., are handled as expected.; TNetFile (actually TUrl) uses 1094 as default port for rootd. Connecting to a rootd requires the remote user id and password.; TNetFile allows three ways for you to provide your login:; Setting it globally via the static functions:; 1. TAuthenticate::SetGlobalUser() and TAuthenticate::SetGlobalPasswd(); 2. Getting it from the `~/.netrc` file (same file as used by ftp); 3. Command line prompt; The different methods will be tried in the order given above.; On machines with AFS rootd will authenticate using AFS (if it was; compiled with AFS support). If the protocol is specified as ""rootk"" kerberos5 will be used for; authentication. The rootd daemon lives in the directory `$ROOTSYS/bin`. It can be; started either via inetd or by hand from the command line (no ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:695,protocol,protocol,695,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['protocol'],['protocol']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 19/12/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMessage //; // //; // Message buffer class used for serializing objects and sending them //; // over a network. This class inherits from TBuffer the basic I/O //; // serializer. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:526,Message,Message,526,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,1,['Message'],['Message']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 23/5/2002; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGridResult //; // //; // Abstract base class defining interface to a GRID result. //; // Objects of this class are created by TGrid methods. //; // //; // Related classes are TGrid. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridResult.cxx:559,interface,interface,559,net/net/src/TGridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridResult.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 25/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSQLResult //; // //; // Abstract base class defining interface to a SQL query result. //; // Objects of this class are created by TSQLServer methods. //; // //; // Related classes are TSQLServer and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLResult.cxx:557,interface,interface,557,net/net/src/TSQLResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLResult.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 25/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSQLRow //; // //; // Abstract base class defining interface to a row of a SQL query //; // result. Objects of this class are created by TSQLResult methods. //; // //; // Related classes are TSQLServer and TSQLResult. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLRow.cxx:554,interface,interface,554,net/net/src/TSQLRow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLRow.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 25/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSQLServer //; // //; // Abstract base class defining interface to a SQL server. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // <dbms>://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main, ... //; // Depending on the <dbms> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // For SQLite, the syntax is slightly different: //; // sqlite://<database> //; // The string 'database' is directly passed to sqlite3_open(_v2), //; // so e.g. a filename or "":memory:"" are possible values. //; // For SQLite versions >= 3.7.7, SQLITE_OPEN_URI is activated to also //; // allow URI-parameters if needed. //; // //; // Related classes are TSQLResult and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:557,interface,interface,557,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,3,"['Depend', 'interface']","['Depending', 'interface']"
Integrability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 3/1/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGrid //; // //; // Abstract base class defining interface to common GRID services. //; // //; // To open a connection to a GRID use the static method Connect(). //; // The argument of Connect() is of the form: //; // <grid>[://<host>][:<port>], e.g. alien://alice.cern.ch //; // Depending on the <grid> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // //; // Related classes are TGridResult. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx:552,interface,interface,552,net/net/src/TGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx,3,"['Depend', 'interface']","['Depending', 'interface']"
Integrability,"// @(#)root/net:$Id$; // Author: Jan Fiete Grosse-Oetringhaus 06/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGridJob //; // //; // Abstract base class defining interface to a GRID job. //; // //; // Related classes are TGridJobStatus. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridJob.cxx:570,interface,interface,570,net/net/src/TGridJob.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridJob.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/net:$Id: TSSLSocket.cxx; // Author: Alejandro Alvarez 16/09/2011; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSSLSocket //; // //; // A TSocket wrapped in by SSL. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx:557,wrap,wrapped,557,net/net/src/TSSLSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx,1,['wrap'],['wrapped']
Integrability,"// @(#)root/netx:$Id$; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // TNetXNGSystem //; // //; // Authors: Justin Salmon, Lukasz Janyst //; // CERN, 2013 //; // //; // Enables access to XRootD filesystem interface using the new client. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx:607,interface,interface,607,net/netxng/src/TNetXNGSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/physics:$Id$; // Author: Adrian Bevan 2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * Copyright (C) 2001, Liverpool University. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFeldmanCousins; \legacy{TFeldmanCousins, Consider switching to RooStats for non-trivial cases.}; \ingroup Physics. Class to calculate the CL upper limit using; the Feldman-Cousins method as described in PRD V57 #7, p3873-3889. The default confidence interval calculated using this method is 90%; This is set either by having a default the constructor, or using the; appropriate fraction when instantiating an object of this class (e.g. 0.9). The simple extension to a gaussian resolution function bounded at zero; has not been addressed as yet -> `time is of the essence' as they write; on the wall of the maze in that classic game ... #### VARIABLES THAT CAN BE ALTERED; => depending on your desired precision: The initial values of fMuMin,; fMuMax, fMuStep and fNMax are those used in the PRD:; ~~~ {.cpp}; fMuMin = 0.0; fMuMax = 50.0; fMuStep= 0.005; ~~~; but there is total flexibility in changing this should you desire. see example of use in $ROOTSYS/tutorials/math/FeldmanCousins.C. see note about: ""Should I use TRolke, TFeldmanCousins, TLimit?""; in the TRolke class description. \author: Adrian Bevan, Liverpool University. Copyright Liverpool University 2001 bevan@slac.stanford.edu; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx:1148,depend,depending,1148,math/physics/src/TFeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx,1,['depend'],['depending']
Integrability,"// @(#)root/physics:$Id$; // Author: Rene Brun , Valerio Filippini 06/09/2000; /** \class TGenPhaseSpace; \legacy{TGenPhaseSpace, No alternative classes are currently available.}; \ingroup Physics. Utility class to generate n-body event,; with constant cross-section (default); or with Fermi energy dependence (opt=""Fermi"").; The event is generated in the center-of-mass frame,; but the decay products are finally boosted; using the betas of the original particle. The code is based on the GENBOD function (W515 from CERNLIB); using the Raubold and Lynch method; F. James, Monte Carlo Phase Space, CERN 68-15 (1968). see example of use in PhaseSpace.C. Note that Momentum, Energy units are Gev/C, GeV; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx:299,depend,dependence,299,math/physics/src/TGenPhaseSpace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx,1,['depend'],['dependence']
Integrability,"// @(#)root/physics:$Id$; // Author: Rene Brun , Valerio Filippini 06/09/2000; ///////////////////////////////////////////////////////////////////////////////; // //; // Phase Space Generator, based on the GENBOD routine of CERNLIB //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TGenPhaseSpace.h:213,rout,routine,213,math/physics/inc/TGenPhaseSpace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TGenPhaseSpace.h,1,['rout'],['routine']
Integrability,"// @(#)root/postscript:$Id$; // Author: Rene Brun, Olivier Couet, Pierre Juillot, Oleksandr Grebenyuk, Yue Shi Lai; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPostScript; \ingroup PS. \brief Interface to PostScript. To generate a Postscript (or encapsulated ps) file corresponding to; a single image in a canvas, you can:. - Select the <B>Print PostScript</B> item in the canvas <B>File</B> menu.; By default, a Postscript file with the name of the canvas.ps is generated.; - Click in the canvas area, near the edges, with the right mouse button; and select the <B>Print</B> item. You can select the name of the Postscript; file. If the file name is xxx.ps, you will generate a Postscript file named; xxx.ps. If the file name is xxx.eps, you generate an encapsulated Postscript; file instead.; - In your program (or macro), you can type:; ~~~ {.cpp}; c1->Print(""xxx.ps"");; ~~~; or:; ~~~ {.cpp}; c1->Print(""xxx.eps"");; ~~~; This will generate a file corresponding to the picture in the canvas; pointed by `c1`.; ~~~ {.cpp}; pad1->Print(""xxx.ps"");; ~~~; prints only the picture in the pad pointed by `pad1`. The size of the Postscript picture, by default, is computed to keep the aspect; ratio of the picture on the screen, where the size along x is always 20cm. You; can set the size of the PostScript picture before generating the picture; with a command such as:. ~~~ {.cpp}; TPostScript myps(""myfile.ps"",111); myps.Range(xsize,ysize);; object->Draw();; myps.Close();; ~~~; You can set the default paper size with:; ~~~ {.cpp}; gStyle->SetPaperSize(xsize,ysize);; ~~~; You can resume writing again in this file with `myps.Open();`.; Note that you may have several Postscrip",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:518,Interface,Interface,518,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/postscript:$Id: TPDF.cxx,v 1.0; // Author: Olivier Couet; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPDF; \ingroup PS. \brief Interface to PDF. Like PostScript, PDF is a vector graphics output format allowing a very high; graphics output quality. The functionalities provided by this class are very; similar to those provided by `TPostScript`. Compare to PostScript output, the PDF files are usually smaller because some; parts of them can be compressed. PDF also allows to define table of contents. This facility can be used in ROOT.; The following example shows how to proceed:; ~~~ {.cpp}; {; TCanvas* canvas = new TCanvas(""canvas"");; TH1F* histo = new TH1F(""histo"",""test 1"",10,0.,10.);; histo->SetFillColor(2);; histo->Fill(2.);; histo->Draw();; canvas->Print(""plots.pdf("",""Title:One bin filled"");; histo->Fill(4.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Two bins filled"");; histo->Fill(6.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Three bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf"",""Title:Four bins filled"");; histo->Fill(8.);; histo->Draw();; canvas->Print(""plots.pdf)"",""Title:The fourth bin content is 2"");; }; ~~~; Each character string following the keyword ""Title:"" makes a new entry in; the table of contents.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx:465,Interface,Interface,465,graf2d/postscript/src/TPDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 13/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TProof //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the slave servers, it keeps track of how many slaves are //; // running, it keeps track of the slaves running status, it broadcasts //; // messages to all slaves, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx:743,message,messages,743,proof/proof/src/TProofCondor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofCondor.cxx,1,['message'],['messages']
Integrability,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 15/03/07; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualProofPlayer; \ingroup proofkernel. Abstract interface for the PROOF player.; See the concrete implementations under 'proofplayer' for details. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualProofPlayer.cxx:482,interface,interface,482,proof/proof/src/TVirtualProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualProofPlayer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/proof:$Id$; // Author: Fons Rademakers 16/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServ; \ingroup proofkernel. Class providing the PROOF server. It can act either as the master; server or as a slave server, depending on its startup arguments. It; receives and handles message coming from the client or from the; master server. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:560,depend,depending,560,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,2,"['depend', 'message']","['depending', 'message']"
Integrability,"// @(#)root/proof:$Id$; // Author: Maarten Ballintijn 06/12/03; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TCondor //; // //; // Interface to the Condor system. TCondor provides a (partial) API for //; // querying and controlling the Condor system, including experimental //; // extensions like COD (computing on demand) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:530,Interface,Interface,530,proof/proof/src/TCondor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/proof:$Id$; // Author: Paul Nilsson 7/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofResourcesStatic; \ingroup proofkernel. The purpose of this class is to provide a standard interface to; static config files. It interprets Proof config files (proof.conf); and sorts the contents into TProofNodeInfo objects. Master info will; be placed in fMaster (of type TProofNodeInfo). Submaster info will; be put in fSubmasterList (a TList of TProofNodeInfo objects), while; workers (and condorworkers) will be placed in fWorkerList (a TList; of TProofNodeInfo objects). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:524,interface,interface,524,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/proof:$Id: a2a50e759072c37ccbc65ecbcce735a76de86e95 $; // Author: Fons Rademakers 13/02/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup proof PROOF. Classes defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees. \deprecated; We keep PROOF for those who still need it for legacy use cases.; PROOF is not developed anymore and receiving only limited support.; %ROOT has since a few years moved to RDataFrame and related products as multi-core/multi-processing engines. */; /**; \defgroup proofkernel PROOF kernel Libraries; \ingroup proof. The PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining; the kernel of the PROOF facility, i.e. the protocol and the utilities to steer data processing; and handling of results. */; /** \class TProof; \ingroup proofkernel. This class controls a Parallel ROOT Facility, PROOF, cluster.; It fires the worker servers, it keeps track of how many workers are; running, it keeps track of the workers running status, it broadcasts; messages to all workers, it collects results, etc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1059,protocol,protocol,1059,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['message', 'protocol']","['messages', 'protocol']"
Integrability,"// @(#)root/proofplayer:$Id$; // Author: G.Ganis July 2011; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofMonSender; \ingroup proofkernel. Provides the interface for PROOF monitoring to different writers.; Allows to decouple the information sent from the backend. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx:481,interface,interface,481,proof/proofplayer/src/TProofMonSender.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSender.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/proofplayer:$Id$; // Author: Kristjan Gulbrandsen 11/05/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPerfStats; \ingroup proofkernel. Provides the interface for the PROOF internal performance measurement; and event tracing. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:488,interface,interface,488,proof/proofplayer/src/TPerfStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 19/04/2002; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofLimitsFinder; \ingroup proofkernel. Class to find axis limits and synchronize them between workers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofLimitsFinder.cxx:513,synchroniz,synchronize,513,proof/proofplayer/src/TProofLimitsFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofLimitsFinder.cxx,1,['synchroniz'],['synchronize']
Integrability,"// @(#)root/proofplayer:$Id$; // Author: Maarten Ballintijn 7/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStatus; \ingroup proofkernel. This class holds the status of an ongoing operation and collects; error messages. It provides a Merge() operation allowing it to; be used in PROOF to monitor status in the slaves.; No messages indicates success. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:543,message,messages,543,proof/proofplayer/src/TStatus.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx,2,['message'],['messages']
Integrability,"// @(#)root/proofx:$Id$; // Author: Gerardo Ganis 12/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofServLite; \ingroup proofkernel. Version of the PROOF worker server for local running. The client starts; directly the desired number of these workers; the master and daemons are; eliminated, optimizing the number of messages exchanged and created / destroyed. */; //////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:653,message,messages,653,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,2,['message'],['messages']
Integrability,"// @(#)root/pythia8:$Name$:$Id$; // Author: Andreas Morsch 04/07/2008; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPythia8Decayer; \ingroup pythia8. This class implements the TVirtualMCDecayer interface using TPythia8. Author: Andreas Morsch 04/07/2008; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8Decayer.cxx:519,interface,interface,519,montecarlo/pythia8/src/TPythia8Decayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8Decayer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/pythia8:$Name$:$Id$; // Author: Andreas Morsch 27/10/2007; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPythia8; \ingroup pythia8. TPythia8 is an interface class to C++ version of Pythia 8.1 ; event generators, written by T.Sjostrand. The user is assumed to be familiar with the Pythia package.; This class includes only a basic interface to Pythia8. Because Pythia8 is; also written in C++, its functions/classes can be called directly from a ; compiled C++ script. To call Pythia functions not available in this interface a dictionary must; be generated. See $ROOTSYS/tutorials/pythia/pythia8.C for an example of use from CINT. Author: Andreas Morsch 27/10/2007. \verbatim; *------------------------------------------------------------------------------------*; | |; | *------------------------------------------------------------------------------* |; | | | |; | | | |; | | PPP Y Y TTTTT H H III A Welcome to the Lund Monte Carlo! | |; | | P P Y Y T H H I A A This is PYTHIA version 8.100 | |; | | PPP Y T HHHHH I AAAAA Last date of change: 20 Oct 2007 | |; | | P Y T H H I A A | |; | | P Y T H H III A A Now is 27 Oct 2007 at 18:26:53 | |; | | | |; | | Main author: Torbjorn Sjostrand; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Department of Theoretical Physics, Lund University, Lund, Sweden; | |; | | phone: + 41 - 22 - 767 82 27; e-mail: torbjorn@thep.lu.se | |; | | Author: Stephen Mrenna; Computing Division, Simulations Group, | |; | | Fermi National Accelerator Laboratory, MS 234, Batavia, IL 60510, USA; | |; | | phone: + 1 - 630 - 840 - 2556; e-mail: mrenna@fnal.gov | |; | | Author: Peter Skands; CERN/PH, CH-1211 Geneva, Switzerland, | |; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx:483,interface,interface,483,montecarlo/pythia8/src/TPythia8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx,3,['interface'],['interface']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TGondzioSolver.h:1549,CONTRACT,CONTRACT,1549,math/quadp/inc/TGondzioSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TGondzioSolver.h,19,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; /** \class TQpVar. Class containing the variables for the general QP formulation. In terms of in our abstract problem formulation, these variables are; the vectors x, y, z and s.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TMehrotraSolver; ///; /// Derived class of TQpSolverBase implementing the original Mehrotra; /// predictor-corrector algorithm; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TMehrotraSolver.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TMehrotraSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TMehrotraSolver.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverBase; ///; /// Implementation of main solver for linear systems; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpLinSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverDens; ///; /// Implements the aspects of the solvers for dense general QP; /// formulation that are specific to the dense case.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverDens.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpLinSolverDens.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverDens.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpLinSolverSparse; ///; /// Implements the aspects of the solvers for dense general QP; /// formulation that are specific to the dense case.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverSparse.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpLinSolverSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverSparse.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"// @(#)root/r:$Id$; // Author: Omar Zapata 29/08/2013; // The tab-completion interface was based in R's readline code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h:77,interface,interface,77,bindings/r/src/TRCompletion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h,1,['interface'],['interface']
Integrability,"// @(#)root/rint:$Id$; // Author: Rene Brun 17/02/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via the Cling C/C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:546,Interface,Interface,546,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer 28/07/2008; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:579,interface,interface,579,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer January 2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NeymanConstruction; \ingroup Roostats. NeymanConstruction is a concrete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:558,interface,interface,558,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, George Lewis; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::Measurement; * \ingroup HistFactory; The RooStats::HistFactory::Measurement class can be used to construct a model; by combining multiple RooStats::HistFactory::Channel objects. It also allows; to set some general properties like the integrated luminosity, its relative; uncertainty or the functional form of constraints on nuisance parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:692,integrat,integrated,692,roofit/histfactory/src/Measurement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval objec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:731,integrat,integrates,731,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrates']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Authors:; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::LikelihoodInterval; \ingroup Roostats. LikelihoodInterval is a concrete implementation of the RooStats::ConfInterval interface.; It implements a connected N-dimensional intervals based on the contour of a likelihood ratio.; The boundary of the interval is equivalent to a MINUIT/MINOS contour about the maximum likelihood estimator. The interval does not need to be an ellipse (eg. it is not the HESSE error matrix).; The level used to make the contour is the same as that used in MINOS, eg. it uses Wilks' theorem,; which states that under certain regularity conditions the function -2* log (profile likelihood ratio) is asymptotically distributed as a chi^2 with N-dof, where; N is the number of parameters of interest. Note, a boundary on the parameter space (eg. s>= 0) or a degeneracy (eg. mass of signal if Nsig = 0) can lead to violations of the conditions necessary for Wilks'; theorem to be true. Also note, one can use any RooAbsReal as the function that will be used in the contour; however, the level of the contour; is based on Wilks' theorem as stated above. #### References. * 1. F. James., Minuit.Long writeup D506, CERN, 1998. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx:919,interface,interface,919,roofit/roostats/src/LikelihoodInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Authors:; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::SimpleInterval; \ingroup Roostats. SimpleInterval is a concrete implementation of the ConfInterval interface.; It implements simple 1-dimensional intervals in a range [a,b].; In addition, you can ask it for the upper- or lower-bound.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleInterval.cxx:901,interface,interface,901,roofit/roostats/src/SimpleInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SimpleInterval.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Original Author: Kyle Cranmer; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::ConfidenceBelt; \ingroup Roostats. ConfidenceBelt is a concrete implementation of the ConfInterval interface.; It implements simple general purpose interval of arbitrary dimensions and shape.; It does not assume the interval is connected.; It uses either a RooDataSet (eg. a list of parameter points in the interval) or; a RooDataHist (eg. a Histogram-like object for small regions of the parameter space) to; store the interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx:922,interface,interface,922,roofit/roostats/src/ConfidenceBelt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Original Author: Kyle Cranmer; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; *; *****************************************************************************/; /** \class RooStats::PointSetInterval; \ingroup Roostats. PointSetInterval is a concrete implementation of the ConfInterval interface.; It implements simple general purpose interval of arbitrary dimensions and shape.; It does not assume the interval is connected.; It uses either a RooDataSet (eg. a list of parameter points in the interval) or; a RooDataHist (eg. a Histogram-like object for small regions of the parameter space) to; store the interval. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PointSetInterval.cxx:926,interface,interface,926,roofit/roostats/src/PointSetInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PointSetInterval.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; // Additional Contributions: Giovanni Petrucciani; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodTestStat; \ingroup Roostats. ProfileLikelihoodTestStat is an implementation of the TestStatistic interface; that calculates the profile likelihood ratio at a particular parameter point; given a dataset. It does not constitute a statistical test, for that one may; either use:. - the ProfileLikelihoodCalculator that relies on asymptotic properties of the; Profile Likelihood Ratio; - the NeymanConstruction class with this class as a test statistic; - the HybridCalculator class with this class as a test statistic. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodTestStat.cxx:645,interface,interface,645,roofit/roostats/src/ProfileLikelihoodTestStat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodTestStat.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; // Contributions: Giovanni Petrucciani and Annapaola Decosa; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HypoTestInverter; \ingroup Roostats. A class for performing a hypothesis test inversion by scanning; the hypothesis test results of a HypoTestCalculator for various values of the; parameter of interest. By looking at the confidence level curve of the result, an; upper limit can be derived by computing the intersection of the confidence level curve with the desired confidence level.; The class implements the RooStats::IntervalCalculator interface, and returns a; RooStats::HypoTestInverterResult. The result is a SimpleInterval, which; via the method UpperLimit() returns to the user the upper limit value. ## Scanning options; The HypoTestInverter implements various options for performing the scan.; - HypoTestInverter::RunFixedScan will scan the parameter of interest using a fixed grid.; - HypoTestInverter::SetAutoScan will perform an automatic scan to find; optimally the curve. It will stop when the desired precision is obtained.; - HypoTestInverter::RunOnePoint computes the confidence level at a given point. ### CLs presciption; The class can scan the CLs+b values or alternatively CLs. For the latter,; call HypoTestInverter::UseCLs().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:981,interface,interface,981,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Author: L. Moneta; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HistFactory::HistRef; * \ingroup HistFactory; * Internal class wrapping an histogram and managing its content.; * convenient for dealing with histogram pointers in the; * HistFactory class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistRef.cxx:491,wrap,wrapping,491,roofit/histfactory/src/HistRef.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistRef.cxx,1,['wrap'],['wrapping']
Integrability,"// @(#)root/roostats:$Id$; // Author: Sven Kreiss June 2010; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NuisanceParametersSampler; \ingroup Roostats. Helper class for ToyMCSampler. Handles all of the nuisance parameter related; functions. Once instantiated, it gives a new nuisance parameter point; at each call to nextPoint(...).; */; /** \class RooStats::ToyMCSampler; \ingroup Roostats. ToyMCSampler is an implementation of the TestStatSampler interface.; It generates Toy Monte Carlo for a given parameter point and evaluates a; TestStatistic. For parallel runs, ToyMCSampler can be given an instance of ProofConfig; and then run in parallel using proof or proof-lite. Internally, it uses; ToyMCStudy with the RooStudyManager.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:857,interface,interface,857,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCCalculator; \ingroup Roostats. Bayesian Calculator estimating an interval or a credible region using the; Markov-Chain Monte Carlo method to integrate the likelihood function with the; prior to obtain the posterior function. By using the Markov-Chain Monte Carlo methods this calculator can work with; model which require the integration of a large number of parameters. MCMCCalculator is a concrete implementation of IntervalCalculator. It uses a; MetropolisHastings object to construct a Markov Chain of data points in the; parameter space. From this Markov Chain, this class can generate a; MCMCInterval as per user specification. The interface allows one to pass the model, data, and parameters via a; workspace and then specify them with names. After configuring the calculator, one only needs to ask GetInterval(), which; will return an ConfInterval (MCMCInterval in this case).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:626,integrat,integrate,626,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,3,"['integrat', 'interface']","['integrate', 'integration', 'interface']"
Integrability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCInterval; \ingroup Roostats. MCMCInterval is a concrete implementation of the RooStats::ConfInterval; interface. It takes as input Markov Chain of data points in the parameter; space generated by Monte Carlo using the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence le",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:587,interface,interface,587,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::UniformProposal; \ingroup Roostats. UniformProposal is a concrete implementation of the ProposalFunction interface; for use with a Markov Chain Monte Carlo algorithm. This proposal function is; a uniformly random distribution over the parameter space. The proposal; ignores the current point when it proposes a new point. The proposal; function is symmetric, though it may not cause a MetropolisHastings run to; converge as quickly as other proposal functions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/UniformProposal.cxx:586,interface,interface,586,roofit/roostats/src/UniformProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/UniformProposal.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::PdfProposal; \ingroup Roostats. PdfProposal is a concrete implementation of the ProposalFunction interface.; It proposes points across the parameter space in the distribution of the; given PDF. To make Propose(xPrime, x) dependent on x, configure with; PdfProposal::AddMapping(varToUpdate, valueToUse). For example, suppose we have:. ~~~{.cpp}; // our parameter; RooRealVar p(""p"", ""p"", 5, 0, 10);. // create mean and sigma for gaussian proposal function; RooRealVar meanP(""meanP"", ""meanP"", 0, 10);; RooRealVar sigma(""sigma"", ""sigma"", 1, 0, 5);; RooGaussian pGaussian(""pGaussian"", ""pGaussian"", p, meanP, sigma);. // configure proposal function; PdfProposal pdfProposal(pGaussian);; pdfProposal.AddMapping(meanP, p); // each call of Propose(xPrime, x), meanP in; // the proposal function will be updated to; // the value of p in x. this will center the; // proposal function about x's p when; // proposing for xPrime. // To improve performance, PdfProposal has the ability to cache a specified; // number of proposals. If you don't call this function, the default cache size; // is 1, which can be slow.; pdfProposal.SetCacheSize(desiredCacheSize);; ~~~. PdfProposal currently uses a fixed cache size. Adaptive caching methods are in the works; for future versions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx:660,interface,interface,660,roofit/roostats/src/PdfProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"// @(#)root/rootx:$Id$; // Author: Fons Rademakers 19/02/98; // Re-written for ROOT 6 by Timur Pocheptsov 11/03/2014.; //////////////////////////////////////////////////////////////////////////; // //; // Rootxx //; // //; // X11 based routines used to display the splash screen for rootx, //; // the root front-end program. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:236,rout,routines,236,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/rootx:$Id$; // Author: Fons Rademakers 19/02/98; //////////////////////////////////////////////////////////////////////////; // //; // Rootx //; // //; // Rootx is a small front-end program that starts the main ROOT module. //; // This program is called ""root"" in the $ROOTSYS/bin directory and the //; // real ROOT executable is now called ""root.exe"" (formerly ""root""). //; // Rootx puts up a splash screen giving some info about the current //; // version of ROOT and, more importantly, it sets up the required //; // LD_LIBRARY_PATH, SHLIB_PATH and LIBPATH environment variables //; // (depending on the platform). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx:602,depend,depending,602,rootx/src/rootx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx,1,['depend'],['depending']
Integrability,"// @(#)root/rpdutils:$Id$; // Author: Fons Rademakers 06/02/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // netpar //; // //; // Set of parallel network routines for rootd daemon process. To be //; // used when remote uses TPSocket to connect to rootd. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx:555,rout,routines,555,net/rpdutils/src/netpar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/rpdutils:$Id$; // Author: Fons Rademakers 11/08/97; // Modifified: Gerardo Ganis 8/04/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // error //; // //; // Set of error handling routines for daemon process. //; // Merging of rootd and proofd/src/error.cxx //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx:590,rout,routines,590,net/rpdutils/src/error.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/rpdutils:$Id$; // Author: Fons Rademakers 12/08/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // net //; // //; // Set of network routines for rootd daemon process. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx:541,rout,routines,541,net/rpdutils/src/net.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/sql:$Id: 6f6608219c30ddefdf8e25d7cf170d5e69704cd3 $; // Author: Sergey Linev 20/11/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TSQLFile; \ingroup IO. Access an SQL db via the TFile interface. The main motivation for the TSQLFile development is to have; ""transparent"" access to SQL data base via standard TFile interface.; The main approach that each class (but not each object) has one or two tables; with names like $(CLASSNAME)_ver$(VERSION) and $(CLASSNAME)_raw$(VERSION); For example: TAxis_ver8 or TList_raw5; Second kind of tables appears, when some of class members can not be converted to; normalized form or when class has custom streamer.; For instance, for TH1 class two tables are required: TH1_ver4 and TH1_raw4; Most of members are stored in TH1_ver4 table column-wise, and only member:; Double_t* fBuffer; //[fBufferSize]; can not be represented as column while size of array is not fixed.; Therefore, fBuffer will be written as list of values in TH1_raw4 table.; All objects, stored in the DB, will be registered in table ""ObjectsTable"".; In this there are following columns:; | Name | Description |; |------|-------------|; | ""key:id"" | key identifier to which belong object |; | ""obj:id"" | object identifier |; | ""Class"" | object class name |; | ""Version"" | object class version |. Data in each ""ObjectsTable"" row uniquely identify, in which table; and which column object is stored. In normal situation all class data should be sorted column-wise.; Up to now following member are supported:; -# Basic data types. Here is everything clear. Column SQL type will be as much as possible; close to the original type of value.; -# Fixed array o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:525,interface,interface,525,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/test:$Id$; // Author: David Smith 20/10/14; /////////////////////////////////////////////////////////////////; //; //___A test for I/O plugins by reading files___; //; // The files used in this test have been generated by; // stress.cxx and preplaced on some data servers.; // stressIOPlugins reads the remote files via various data; // access protocols to test ROOT IO plugins. The data read are; // tested via tests based on some of stress.cxx tests.; //; // Can be run as:; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:356,protocol,protocols,356,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,4,['protocol'],"['protocol', 'protocols']"
Integrability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; // Martin Storø Nyfløtt 05/2017; ///////////////////////////////////////////////////////////////////////////////////; //; // MathMore test suite; // ==============================; //; // This program performs tests :; // - numerical integration, derivation and root finders; // - it compares for various values of the gamma and beta distribution); // - the numerical calculated integral of pdf with cdf function,; // - the calculated derivative of cdf with pdf; // - the inverse (using root finder) of cdf with quantile; //; // to run the program outside ROOT do:; // > make stressMathMoreUnit; // > ctest -R gtest-math-mathmore-test-stressMathMoreUnit; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStress.cxx:292,integrat,integration,292,math/mathmore/test/testStress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testStress.cxx,1,['integrat'],['integration']
Integrability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathCore Benchmark test suite; // ==============================; //; // This program performs tests of ROOT::Math 4D LorentzVectors comparing with TLorentzVector; // The time performing various vector operations on a collection of vectors is measured.; // The benchmarked operations are:; // - vector construction from 4 values; // - construction using a setter method; // - simple addition of all the vector pairs in the collection; // - calculation of deltaR = phi**2 + eta**2 of all vector pairs in the collection; // - two simple analysis:; // - the first requires some cut (on pt and eta) and on the invariant mass; // of the selected pairs; // - the second requires just some cut in pt, eta and delta R on all the; // vector pair; // - conversion between XYZTVectors to PtRhoEtaPhi based vectors; //; // The two analysis demonstrates, especially in the second case, the advantage of using; // vector based on cylindrical coordinate, given the fact that the time spent in the conversion is; // much less than the time spent in the analysis routine.; //; // To run the program do:; // stressVector : run standard test with collection of 1000 vectors; // stressVector 10000 : run with a collection of 10000 vectors; //; ///////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx:1196,rout,routine,1196,math/genvector/test/stress2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/stress2D.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathCore Benchmark test suite; // ==============================; //; // This program performs tests of ROOT::Math 4D LorentzVectors comparing with TLorentzVector; // The time performing various vector operations on a collection of vectors is measured.; // The benchmarked operations are:; // - vector construction from 4 values; // - construction using a setter method; // - simple addition of all the vector pairs in the collection; // - calculation of deltaR = phi**2 + eta**2 of all vector pairs in the collection; // - two simple analysis:; // - the first requires some cut (on pt and eta) and on the invariant mass; // of the selected pairs; // - the second requires just some cut in pt, eta and delta R on all the; // vector pair; // - conversion between XYZTVectors to PtRhoEtaPhi based vectors; //; // The two analysis demostrates, especially in the second case, the advantage of using; // vector based on cylindrical coordinate, given the fact that the time spent in the conversion is; // much less than the time spent in the analysis routine.; //; // To run the program do:; // stressVector : run standard test with collection of 1000 vectors; // stressVector 10000 : run with a collection of 10000 vectors; //; ///////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressVector.cxx:1195,rout,routine,1195,test/stressVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressVector.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathMore Benchmark test suite; // ==============================; //; // This program performs tests :; // - numerical integration, derivation and root finders; // - it compares for various values of the gamma and beta distribution); // - the numerical calculated integral of pdf with cdf function,; // - the calculated derivative of cdf with pdf; // - the inverse (using root finder) of cdf with quantile; //; // to run the program outside ROOT do:; // > make stressMathMore; // > ./stressMathMore; //; // to run the program in ROOT; // root> gSystem->Load(""libMathMore""); // root> .x stressMathMore.cxx+; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:269,integrat,integration,269,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['integrat'],['integration']
Integrability,"// @(#)root/test:$name: $:$id: stressFit.cxx,v 1.15 2002/10/25 10:47:51 rdm exp $; // Authors: Rene Brun, Eddy Offermann April 2006; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // Function Minimization Examples, Fred James //; // //; // from the //; // Proceedings of the 1972 CERN Computing and Data Processing School //; // Pertisau, Austria, 10-24 September, 1972 (CERN 72-21) //; // //; // Here a collection of test problems is assembled which were found to be //; // useful in verifying and comparing minimization routines. Many of these //; // are standard functions upon which it has become conventional to try all //; // new methods, quoting the performance in the publication of the algorithm //; // //; // Each test will produce one line (Test OK or Test FAILED) . At the end of //; // the test a table is printed showing the global results Real Time and //; // Cpu Time. One single number (ROOTMARKS) is also calculated showing the //; // relative performance of your machine compared to a reference machine //; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory and 120 GBytes IDE disk. //; // //; // In the main routine the fitter can be chosen through TVirtualFitter : //; // - Minuit //; // - Minuit2 //; // - Fumili //; //; // To run the test, do, eg; // root -b -q stressFit.cxx; // root -b -q ""stressFit.cxx(\""Minuit2\"")""; // root -b -q ""stressFit.cxx+(\""Minuit2\"")""; // //; // The verbosity can be set through the global parameter gVerbose : //; // -1: off 1: on //; // The tolerance on the parameter deviation from the minimum can be set //; // through gAbsTolerance . //; // //; // An example of output when all the tests run OK is shown below: //; // ******************************************************************* //; // * Minimization - S T R E S S suite * //; // ******************************************************************* //; // ******************************************************************* //; // * Starting S T ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:563,rout,routines,563,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/test:$name: $:$id: stressHistogram.cxx,v 1.15 2002/10/25 10:47:51 rdm exp $; // Authors: David Gonzalez Maline November 2008; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Here there is a set of tests for the histogram classes (including //; // histograms and profiles). The methods tested work on: //; // //; // 1. Projection testing (with and without weights) //; // 2. Rebinning //; // 3. Addition, multiplication an division operations. //; // 4. Building and copying instances. //; // 5. I/O functionality (including reference with older versions). //; // 6. Labeling. //; // 7. Interpolation //; // //; // To see the tests individually, at the bottom of the file the tests //; // are exectued using the structure TTestSuite, that defines the //; // subset, the number of routines to be tested as well as the pointes //; // for these. Every tests is mean to be simple enough to be understood //; // without much comments. //; // //; // Finally, for debugging reasons, the struct compareOptions can be //; // used to define the level of output of the tests, beging set //; // generally for the whole suit in defaultEqualOptions. //; // >> stressHistogram 1 : to print result for all tests //; // >> stressHistogram 2 : ro print each comparison, done for each bin //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O G R A M *; // ****************************************************************************; // Test 1: Testing Histogram Projections without weights....................OK; // Test 2: Testing Profile Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:845,rout,routines,845,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['rout'],['routines']
Integrability,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:472,depend,depending,472,core/foundation/inc/ThreadLocalStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h,2,['depend'],"['depend', 'depending']"
Integrability,"// @(#)root/thread:$Id$; // // Author: Xavier Valls Pla 08/05/20; //; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // RTaskArena //; // //; // This file implements the method to initialize and retrieve ROOT's //; // global task arena, together with a method to check for active //; // CPU bandwith control, and a class to wrap the tbb task arena with //; // the purpose of keeping tbb off the installed headers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:718,wrap,wrap,718,core/imt/inc/ROOT/RTaskArena.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx,1,['wrap'],['wrap']
Integrability,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:563,interface,interface,563,core/thread/src/TWin32Condition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Thread //; // //; // This class provides an interface to the win32 thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx:560,interface,interface,560,core/thread/src/TWin32Thread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Thread.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 23/10/04; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx:557,interface,interface,557,core/thread/src/TWin32Mutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Mutex.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx:566,interface,interface,566,core/thread/src/TConditionImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TConditionImp.cxx,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx:562,interface,interface,562,core/thread/src/TMutexImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutexImp.cxx,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:559,interface,interface,559,core/thread/src/TPosixCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TThreadFactory //; // //; // This ABC is a factory for thread components. Depending on which //; // factory is active one gets either Posix or Win32 threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThreadFactory.cxx:580,Depend,Depending,580,core/thread/src/TThreadFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThreadFactory.cxx,1,['Depend'],['Depending']
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 02/07/97 (Revised: G Ganis, Nov 2015); /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSemaphore //; // //; // This class implements a counting semaphore. Use a semaphore //; // to synchronize threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx:630,synchroniz,synchronize,630,core/thread/src/TSemaphore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TSemaphore.cxx,1,['synchroniz'],['synchronize']
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 02/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixThread //; // //; // This class provides an interface to the posix thread routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:556,interface,interface,556,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 25/06/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx:555,interface,interface,555,core/thread/src/TPosixMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixMutex.cxx,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 26/06/97; /*************************************************************************; * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TRWMutexImp //; // //; // This class implements the TVirtualRWMutex interface, //; // based on TRWSpinLock. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx:574,interface,interface,574,core/thread/src/TRWMutexImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWMutexImp.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRWSpinLock; \brief An implementation of a read-write lock with an internal spin lock. This class provides an implementation of a read-write lock that uses an; internal spin lock and a condition variable to synchronize readers and; writers when necessary. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:679,synchroniz,synchronize,679,core/thread/src/TRWSpinLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx,1,['synchroniz'],['synchronize']
Integrability,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TReentrantRWLock; \brief An implementation of a reentrant read-write lock with a; configurable internal mutex/lock (default Spin Lock). This class provides an implementation of a reentrant read-write lock; that uses an internal lock and a condition variable to synchronize; readers and writers when necessary. The implementation allows a single reader to take the write lock without; releasing the reader lock. It also allows the writer to take a read lock.; In other word, the lock is re-entrant for both reading and writing. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:733,synchroniz,synchronize,733,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,1,['synchroniz'],['synchronize']
Integrability,"// @(#)root/tmva $Id$ ; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : CrossEntropy *; * *; * *; * Description: Implementation of the CrossEntropy as separation criterion *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland * ; * U. of Victoria, Canada * ; * Heidelberg U., Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CrossEntropy.h:200,integrat,integrated,200,tmva/tmva/inc/TMVA/CrossEntropy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CrossEntropy.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Abhishek Narain; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBayesClassifier *; * *; * *; * Description: *; * Bayesian Classifier *; * *; * Authors (alphabetical): *; * Abhishek Narain, <narainabhi@gmail.com> - University of Houston *; * *; * Copyright (c) 2005-2006: *; * University of Houston, *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBayesClassifier.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/MethodBayesClassifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBayesClassifier.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTree *; * *; * *; * Description: *; * Class for decision tree like PDEFoam. It overrides *; * PDEFoam::Explore() to use the decision tree like cell split *; * algorithm, given a specific separation type. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTree.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTree *; * *; * *; * Description: *; * Implementation of decision tree like PDEFoam *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDecisionTree; \ingroup TMVA. This PDEFoam variant acts like a decision tree and stores in every; cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. The decision tree-like behaviour; is achieved by overriding PDEFoamDiscriminant::Explore() to use a; decision tree-like cell splitting algorithm (given a separation; type). This PDEFoam variant should be booked together with the; PDEFoamDecisionTreeDensity density estimator, which returns the; events in a cell without sampling.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx:161,integrat,integrated,161,tmva/tmva/src/PDEFoamDecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTreeDensity *; * *; * *; * Description: *; * Class PDEFoamDecisionTreeDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDecisionTreeDensity.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDecisionTreeDensity *; * *; * *; * Description: *; * This class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDecisionTreeDensity::Density() *; * does this job. It uses a binary search tree, filled with training *; * events, in order to provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDecisionTreeDensity; \ingroup TMVA. This is a concrete implementation of PDEFoam. The Density(...); function returns allways 0. The function FillHistograms() is; added, which returns all events in a given TMVA::Volume.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx:161,integrat,integrated,161,tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTreeDensity.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andraes Hoecker, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealingFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SimulatedAnnealingFitter; \ingroup TMVA; Fitter using a Simulated Annealing Algorithm; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:192,integrat,integrated,192,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andraes Hoecker; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MinuitFitter; \ingroup TMVA; /Fitter using MINUIT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitFitter.cxx:161,integrat,integrated,161,tmva/tmva/src/MinuitFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitFitter.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * GLobal configuration settings (singleton) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::Config; \ingroup TMVA. Singleton class for global configuration settings used by TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx:208,integrat,integrated,208,tmva/tmva/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule consists of at least 2 nodes. *; * Input: a decision tree (in the constructor) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Rule; \ingroup TMVA. Implementation of a rule. A rule is simply a branch or a part of a branch in a tree.; It fulfills the following:. - First node is the root node of the originating tree; - Consists of a minimum of 2 nodes; - A rule returns for a given event:; - 0 : if the event fails at any node; - 1 : otherwise; - If the rule contains <2 nodes, it returns 0 SHOULD NOT HAPPEN!. The coefficient is found by either brute force or some sort of; intelligent fitting. See the RuleEnsemble class for more info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx:208,integrat,integrated,208,tmva/tmva/src/Rule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule with 0 or 1 nodes in the list is a root rule -> corresponds to a0. *; * Input: a decision tree (in the constructor) *; * its coefficient *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFit; \ingroup TMVA; A class implementing various fits of rule ensembles; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule cut' *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleCut.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleCut.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleCut.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule cut' *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleCut; \ingroup TMVA; A class describing a 'rule cut'; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleCut.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Rule *; * *; * Description: *; * A class describing a 'rule' *; * Each internal node of a tree defines a rule from all the parental nodes. *; * A rule consists of at least 2 nodes. *; * Input: a decision tree (in the constructor) *; * its coefficient *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Rule.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/Rule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Rule.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleEnsemble *; * *; * *; * Description: *; * A class generating an ensemble of rules *; * Input: a forest of decision trees *; * Output: an ensemble of rules *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, GER *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleEnsemble; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleEnsemble.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleEnsemble *; * *; * *; * Description: *; * A class generating an ensemble of rules *; * Input: a forest of decision trees *; * Output: an ensemble of rules *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFit *; * *; * *; * Description: *; * A class implementing various fits of rule ensembles *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFit.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFit.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitAPI *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-KP Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFitAPI; \ingroup TMVA; J Friedman's RuleFit method; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitAPI *; * *; * *; * Description: *; * Interface to Friedman's RuleFit method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-KP Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFitAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitParams *; * *; * *; * Description: *; * A class doing the actual fitting of a linear model using rules as *; * base functions. *; * Reference paper: 1.Gradient Directed Regularization *; * Friedman, Popescu, 2004 *; * 2.Predictive Learning with Rule Ensembles *; * Friedman, Popescu, 2005 *; * *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:208,integrat,integrated,208,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RuleFitParams *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-KP Heidelberg, Ger. *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RuleFitParams; \ingroup TMVA; A class doing the actual fitting of a linear model using rules as base functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:208,integrat,integrated,208,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/VariableGaussTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableGaussTransform; \ingroup TMVA; Gaussian Transformation of input variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx:207,integrat,integrated,207,tmva/tmva/src/VariableGaussTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Reader *; * *; * *; * Description: *; * Reader class to be used in the user application to interpret the trained *; * MVAs in an analysis context *; * *; * Authors (alphabetical order): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Reader; \ingroup TMVA. The Reader class serves to use the MVAs in a specific analysis context.; Within an event loop, a vector is filled that corresponds to the variables; that were used to train the MVA(s) during the training stage. This vector; is transfered to the Reader, who takes care of interpreting the weight; file of the MVA of choice, and to return the MVA's output. This is then; used by the user for further analysis. Usage:. ~~~ {.cpp}; // ------ before starting the event loop (eg, in the initialisation step). //; // create TMVA::Reader object; //; TMVA::Reader *reader = new TMVA::Reader();. // create a set of variables an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:222,integrat,integrated,222,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Nadim Sah <Nadim.Sah@cern.ch> - Berlin, Germany *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU East Lansing, USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MSU East Lansing, USA *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCategory; \ingroup TMVA. Class for categorizing the phase space. This class is meant to allow categorisation of the data. For different; categories, different classifiers may be booked and different variables; may be considered. The aim is to account for the difference that; is due to different locations/angles.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx:208,integrat,integrated,208,tmva/tmva/src/MethodCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableDecorrTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx:208,integrat,integrated,208,tmva/tmva/src/VariableDecorrTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariablePCATransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx:208,integrat,integrated,208,tmva/tmva/src/VariablePCATransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss ; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline2 *; * *; * *; * Description: *; * Quadratic spline class; uses quadrax function for interpolation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland * ; * U. of Victoria, Canada * ; * MPI-K Heidelberg, Germany * ; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline2.h:199,integrat,integrated,199,tmva/tmva/inc/TMVA/TSpline2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline2.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodLikelihood *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U. of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodLikelihood; \ingroup TMVA. Likelihood analysis (""non-parametric approach""). Also implemented is a ""diagonalized likelihood approach"",; which improves over the uncorrelated likelihood approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. The method of maximum likelihood is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \pr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:232,integrat,integrated,232,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::DecisionTree; \ingroup TMVA. Implementation of a Decision Tree. In a decision tree successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:232,integrat,integrated,232,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinaryTree *; * *; * *; * Description: *; * BinaryTree: A base class for BinarySearch- or Decision-Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinaryTree.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/BinaryTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinaryTree.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DecisionTreeNode *; * *; * *; * Description: *; * Node for the Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * *; * Copyright (c) 2009: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodTMlpANN; \ingroup TMVA. This is the TMVA TMultiLayerPerceptron interface class. It provides the; training and testing the ROOT internal MLP class in the TMVA framework. Available learning methods:<br>. - Stochastic; - Batch; - SteepestDescent; - RibierePolak; - FletcherReeves; - BFGS. See the TMultiLayerPerceptron class description; for details on this ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:218,integrat,integrated,218,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::BinaryTree *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::BinaryTree; \ingroup TMVA. Base class for BinarySearch and Decision Trees. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx:218,integrat,integrated,218,tmva/tmva/src/BinaryTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTreeNode *; * *; * *; * Description: *; * Implementation of a Decision Tree Node *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * *; * CopyRight (c) 2009: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Node for the Decision Tree. The node specifies ONE variable out of the given set of selection variable; that is used to split the sample which ""arrives"" at the node, into a left; (background-enhanced) and a right (signal-enhanced) sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:218,integrat,integrated,218,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DecisionTree *; * *; * *; * Description: *; * Implementation of a Decision Tree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:232,integrat,integrated,232,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBDT (Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * Jan Therhaag <jan.therhaag@cern.ch> - U. of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:212,integrat,integrated,212,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Peter Speckmayer, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLikelihood *; * *; * *; * Description: *; * Likelihood analysis (""non-parametric approach"") *; * Also implemented is a ""diagonalized likelihood approach"", *; * which improves over the uncorrelated likelihood ansatz by transforming *; * linearly the input variables into a diagonal space, using the square-root *; * of the covariance matrix. This approach can be chosen by inserting *; * the letter ""D"" into the option string. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:241,integrat,integrated,241,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBoost; \ingroup TMVA. Class for boosting a TMVA method. This class is meant to boost a single classifier. Boosting means; training the classifier a few times. Every time the weights of the; events are modified according to how well the classifier performed; on the test sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:241,integrat,integrated,241,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCompositeBase.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/MethodCompositeBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCompositeBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCategory.h:207,integrat,integrated,207,tmva/tmva/inc/TMVA/MethodCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCategory.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss,Or Cohen; /*****************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; *****************************************************************************/; /*! \class TMVA::MethodCompositeBase; \ingroup TMVA. Virtual base class for combining several TMVA method. This class is virtual class meant to combine more than one classifier; together. The training of the classifiers is done by classes that are; derived from this one, while the saving and loading of weights file; and the evaluation is done here.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCompositeBase.cxx:202,integrat,integrated,202,tmva/tmva/src/MethodCompositeBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCompositeBase.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : Ranking *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Ranking; \ingroup TMVA; Ranking for variables in method (implementation); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx:198,integrat,integrated,198,tmva/tmva/src/Ranking.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodHMatrix *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodHMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodPlugins *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Daniel Martscheit <martschei@ekp.uni-karlsruhe.de> -KIT Karlsruhe, Ger. *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CreateMethodPlugins; \ingroup TMVA. Plugins analysis. The MethodPlugins is actually not a real method, but it is just a wrapper to call; the TPluginsManager of ROOT and find a external method which can be used to extend; TMVA by another classifier. The only methods which are actually really implemented; are the constructors which fulfill the plugins handling. The others will produce; FATAL warnings and stop TMVA execution. Right after the constructor, the additional method 'getPlugedinMethod()' is called,; which returns the method loaded by the plugin manager, and the MethodPlugins object; is already deleted. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,2,"['integrat', 'wrap']","['integrated', 'wrapper']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::BinarySearchTreeNode; \ingroup TMVA. Node for the BinarySearch or Decision Trees. for the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. in case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node, including; the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx:198,integrat,integrated,198,tmva/tmva/src/BinarySearchTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Node; \ingroup TMVA; Node for the BinarySearch or Decision Trees. For the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. In case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node,; including the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx:198,integrat,integrated,198,tmva/tmva/src/Node.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinarySearchTree *; * *; * *; * Description: *; * BinarySearchTree incl. volume Search method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BinarySearchTree *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::BinarySearchTree; \ingroup TMVA. A simple Binary search tree including a volume search method. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:198,integrat,integrated,198,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/GiniIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GiniIndexWithLaplace *; * *; * *; * Description: Implementation of the GiniIndex With Laplace correction *; * as separation criterion *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://ttmva.sourceforge.net/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IMethod *; * *; * *; * Description: *; * Interface for all concrete MVA method implementations *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/IMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCFMlpANN *; * *; * *; * Description: *; * Interface for Clermond-Ferrand artificial neural network. *; * The ANN code has been translated from FORTRAN77 (f2c); *; * see files: MethodCFMlpANN_f2c_mlpl3.cpp *; * MethodCFMlpANN_f2c_datacc.cpp *; * *; * -------------------------------------------------------------------- *; * Reference for the original FORTRAN version: *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members. Contact : gaypas@afal11.cern.ch *; * *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * -------------------------------------------------------------------- *; * *; * Usage: options are given through Factory: *; * factory->BookMethod( ""MethodCFMlpANN"", OptionsString ); *; * *; * where: *; * TString OptionsString = ""n_training_cycles:n_hidden_layers"" *; * *; * default is: n_training_cycles = 5000, n_layers = 4 *; * note that the number of hidden layers in the NN is *; * *; * n_hidden_layers = n_layers - 2 *; * *; * since there is one input and one output layer. The number of *; * nodes (neurons) is predefined to be *; * *; * n_nodes[i] = nvars + 1 - i (where i=1..n_layers) *; * *; * with nvars being the number of variables used in the NN. *; * Hence, the default case is: n_neurons(layer 1 (input)) : nvars *; * n_neurons(layer 2 (hidden)): nvars-1 *; * n_neurons(layer 3 (hidden)): nvars-1 *; * n_neurons(layer 4 (out)) : 2 *; * *; * This artificial neural network usually needs a relatively large *; * number of cycles to converge (8000 and more). Overtraining can *; * be efficiently tested by comparing the signal and background *; * output of the NN for the events that were used for training and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * Description: *; * Utility routine, obtained via f2c from original mlpl3.F FORTRAN routine *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_Utils.h,3,"['integrat', 'rout']","['integrated', 'routine']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDT (Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDT (DT = Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Or Cohen <orcohenor@gmail.com> - Weizmann Inst., Israel *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut cri",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodHMatrix *; * *; * *; * Description: *; * H-Matrix method, which is implemented as a simple comparison of *; * chi-squared estimators for signal and background, taking into account *; * the linear correlations between the input variables. *; * Method is (also) used by D0 Collaboration (FNAL) for electron *; * identification; for more information, see, eg, *; * http://www-d0.fnal.gov/d0dist/dist/packages/tau_hmchisq/devel/doc/ *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodTMlpANN *; * *; * *; * Description: *; * Implementation of interface for Root-integrated artificial neural *; * network: TMultiLayerPerceptron, author: Christophe.Delaere@cern.ch *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodTMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h,3,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MisClassificationError *; * *; * *; * Description: *; * Implementation of the MisClassificationError as separation *; * criterion: 1-max(p, 1-p) *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MisClassificationError.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MisClassificationError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MisClassificationError.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MisClassificationError *; * *; * *; * Description: Implementation of the MisClassificationError as separation *; * criterion: 1-max(p, 1-p) as; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MisClassificationError; \ingroup TMVA; Implementation of the MisClassificationError as separation criterion; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx:198,integrat,integrated,198,tmva/tmva/src/MisClassificationError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Ranking *; * *; * *; * Description: *; * Virtual ranking class *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Ranking.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Ranking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Ranking.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RegressionVariance *; * *; * *; * Description: Calculate the separation criteria used in regression *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""Variance"" of a sample. *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criteria which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RegressionVariance.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/RegressionVariance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RegressionVariance.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RootFinder *; * *; * *; * Description: *; * Root finding using Brents algorithm *; * (translated from CERNLIB function RZERO) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SdivSqrtSplusB *; * *; * *; * Description: Implementation of the SdivSqrtSplusB as separation criterion *; * S/sqrt(S + B) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SdivSqrtSplusB.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/SdivSqrtSplusB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SdivSqrtSplusB.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SeparationBase *; * *; * *; * Description: An interface to different separation criteria used in various *; * training algorithms, as there are: *; * Gini-Index, Cross Entropy, Misclassification Error, e.t.c. *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""purity"" of a sample. If all elements (events) in the *; * sample belong to the same class (e.g. signal or backgr), than the *; * separation index is 0 (meaning 100% purity (or 0% purity as it is *; * symmetric. The index becomes maximal, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/SeparationBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::CrossEntropy *; * *; * *; * Description: Implementation of the CrossEntropy as separation criterion *; * -p log (p) - (1-p)log(1-p); p=purity *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CrossEntropy; \ingroup TMVA. Implementation of the CrossEntropy as separation criterion. -p log (p) - (1-p)log(1-p); p=purity; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CrossEntropy.cxx:198,integrat,integrated,198,tmva/tmva/src/CrossEntropy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CrossEntropy.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex With Laplace correction *; * as separation criterion *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * Laplace's correction to the prob.density c/N --> (c+1)/(N+2) *; * for just Signal and Background classes this then boils down to: *; * Gini(Sample) = 2(s*b+s+b+1)/(s+b+2)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndexWithLaplace; \ingroup TMVA. Implementation of the GiniIndex With Laplace correction as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elements that belong to class \f$ k \f$ fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx:198,integrat,integrated,198,tmva/tmva/src/GiniIndexWithLaplace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GiniIndex *; * *; * *; * Description: Implementation of the GiniIndex as separation criterion *; * Large Gini Indices (maximum 0.5) mean , that the sample is well *; * mixed (same amount of signal and bkg) *; * bkg. Small Indices mean, well separated. *; * general definition: *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * for just Signal and Background classes this boils down to: *; * Gini(Sample) = 2s*b/(s+b)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndex; \ingroup TMVA. Implementation of the GiniIndex as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elem",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx:198,integrat,integrated,198,tmva/tmva/src/GiniIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndex.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * *; * Modifications by present authors: *; * use dynamical data tables (not for all of them, but for the big ones) *; * *; * Description: *; * Utility routine translated from original mlpl3.F FORTRAN routine *; * *; * MultiLayerPerceptron : Training code *; * *; * NTRAIN: Nb of events used during the learning *; * NTEST: Nb of events used for the test *; * TIN: Input variables *; * TOUT: type of the event *; * *; * ---------------------------------------------------------------------------- *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN_Utils; \ingroup TMVA. Implementation of Clermond-Ferrand artificial neural network. Reference for the original FORTRAN version ""mlpl3.F"":; - Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand; Team m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:198,integrat,integrated,198,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,3,"['integrat', 'rout']","['integrated', 'routine']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline1 *; * *; * *; * Description: *; * Linear interpolation class; derivative of TSpline *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline1.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/TSpline1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSpline1.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Tools *; * *; * *; * Description: *; * Global auxiliary applications and data treatment routines *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Tools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h,2,"['integrat', 'rout']","['integrated', 'routines']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Volume *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Volume; \ingroup TMVA; Volume for BinarySearchTree. volume element: variable space between upper and lower bonds of; nvar-dimensional variable space; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx:198,integrat,integrated,198,tmva/tmva/src/Volume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Volume *; * *; * *; * Description: *; * Volume for BinarySearchTree *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Volume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Node for the BinarySearch or Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Node.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/Node.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Node.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: Node, NodeID *; * *; * *; * Description: *; * Node for the BinarySearch *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Header : MethodCFMlpANN_def *; * *; * *; * Description: *; * Common definition for CFMlpANN method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; // ------------- common definitions used in several modules --------------; // recovered explicit array definitions from f2c override",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h:198,integrat,integrated,198,tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealing *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SimulatedAnnealing; \ingroup TMVA; Base implementation of simulated annealing fitting procedure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealing.cxx:242,integrat,integrated,242,tmva/tmva/src/SimulatedAnnealing.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealing.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealing *; * *; * *; * Description: *; * Implementation of simulated annealing fitting procedure *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h:242,integrat,integrated,242,tmva/tmva/inc/TMVA/SimulatedAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableNormalizeTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx:226,integrat,integrated,226,tmva/tmva/src/VariableNormalizeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableRearrangeTransform; \ingroup TMVA; Rearrangement of input variables; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableRearrangeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ClassInfo *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/ClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Base class for all classes with option parsing *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Base Class for all classes that need option parsing. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx:188,integrat,integrated,188,tmva/tmva/src/Configurable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ConvergenceTest *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ConvergenceTest.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/ConvergenceTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ConvergenceTest.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataInputHandler *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataInputHandler; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataInputHandler.cxx:188,integrat,integrated,188,tmva/tmva/src/DataInputHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataInputHandler.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::OptionBase; \ingroup TMVA; Class for TMVA-option handling; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Option.cxx:188,integrat,integrated,188,tmva/tmva/src/Option.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Option.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Option container *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Option.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Option.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Option.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Variable type info *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RegressionVariance *; * *; * *; * Description: Calculate the separation criteria used in regression *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""Variance"" of a sample. *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criteria which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * *; * Authors (alphabetical): *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RegressionVariance.cxx:188,integrat,integrated,188,tmva/tmva/src/RegressionVariance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RegressionVariance.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RootFinder *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::RootFinder; \ingroup TMVA; Root finding using Brents algorithm (translated from CERNLIB function RZERO); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RootFinder.cxx:188,integrat,integrated,188,tmva/tmva/src/RootFinder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RootFinder.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SdivSqrtSplusB *; * *; * *; * Description: Implementation of the SdivSqrtSplusB as separation criterion *; * s / sqrt( s+b ) *; * *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SdivSqrtSplusB; \ingroup TMVA; Implementation of the SdivSqrtSplusB as separation criterion. \f$ Index = \frac{S}{\sqrt{S+B}} \f$ (statistical significance); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SdivSqrtSplusB.cxx:188,integrat,integrated,188,tmva/tmva/src/SdivSqrtSplusB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SdivSqrtSplusB.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SeparationBase *; * *; * *; * Description: An interface to different separation criteria used in various *; * training algorithms, as there are: *; * *; * There are two things: the Separation Index, and the Separation Gain *; * Separation Index: *; * Measure of the ""purity"" of a sample. If all elements (events) in the *; * sample belong to the same class (e.g. signal or backgr), than the *; * separation index is 0 (meaning 100% purity (or 0% purity as it is *; * symmetric. The index becomes maximal, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SeparationBase; \ingroup TMVA; An interface to calculate the ""SeparationGain"" for different; separation criteria used in various training algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx:188,integrat,integrated,188,tmva/tmva/src/SeparationBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline1 *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSpline1; \ingroup TMVA; Linear interpolation of TGraph; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline1.cxx:188,integrat,integrated,188,tmva/tmva/src/TSpline1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline1.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSpline2 *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSpline2; \ingroup TMVA; Quadratic interpolation of TGraph; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx:188,integrat,integrated,188,tmva/tmva/src/TSpline2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Timer; \ingroup TMVA; Timing information for training and evaluation of MVA methods. Usage:. ~~~ {.cpp}; TMVA::gConfig().SetDrawProgressBar(true);. TMVA::Timer timer( Nloops, ""MyClassName"" );; for (Int_t i=0; i<Nloops; i++) {; ... // some code. // now, print progress bar:; timer.DrawProgressBar( i );. // **OR** text output of left time (never both !); fLogger << "" time left: "" << timer.GetLeftTime( i ) << Endl;. }; fLogger << ""MyClassName"" << "": elapsed time: "" << timer.GetElapsedTime(); << Endl;; ~~~. Remark: in batch mode, the progress bar is quite ugly; you may; want to use the text output then. Note that by default in TMVA::Config the drawing of the; progress bar is switched off. To have the progress bar visible you need ; to enable it by calling TMVA::gConfig().SetDrawProgressBar(true). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx:188,integrat,integrated,188,tmva/tmva/src/Timer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Timing information for methods training *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Timer.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Timer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Timer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Types *; * *; * *; * Description: *; * GLobal types (singleton class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Types *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::Types; \ingroup TMVA; Singleton class for Global types used by TMVA; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Types.cxx:188,integrat,integrated,188,tmva/tmva/src/Types.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Types.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableDecorrTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Identity transform *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableIdentityTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableIdentityTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx:188,integrat,integrated,188,tmva/tmva/src/VariableIdentityTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Principal value composition of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariablePCATransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * rearrangement of input variables *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SimulatedAnnealingFitter *; * *; * *; * Description: *; * Fitter using Simulated Annealing algorithm *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * *; * Copyright (c) 2008: *; * IFJ-Krakow, Poland *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h:215,integrat,integrated,215,tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Eckhard von Toerne, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodCuts *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCuts; \ingroup TMVA. Multivariate optimisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in gen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:237,integrat,integrated,237,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCuts *; * *; * *; * Description: *; * Multivariate optimisation of signal efficiency for given background *; * efficiency, using rectangular minimum and maximum requirements on *; * input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:217,integrat,integrated,217,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetFactory *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h:226,integrat,integrated,226,tmva/tmva/inc/TMVA/DataSetFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; /*****************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetFactory *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2009: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; *****************************************************************************/; /*! \class TMVA::DataSetFactory; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:221,integrat,integrated,221,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TransformationHandler *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TransformationHandler; \ingroup TMVA; Class that contains all the data information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:240,integrat,integrated,240,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TransformationHandler *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TransformationHandler.h:240,integrat,integrated,240,tmva/tmva/inc/TMVA/TransformationHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TransformationHandler.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * Event container *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/Event.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:220,integrat,integrated,220,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Event *; * *; * *; * Description: *; * LossFunction and associated classes *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : LossFunction *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::HuberLossFunction; \ingroup TMVA. Huber Loss Function. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LossFunction.cxx:220,integrat,integrated,220,tmva/tmva/src/LossFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/LossFunction.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsMulticlass *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsMulticlass.h:220,integrat,integrated,220,tmva/tmva/inc/TMVA/ResultsMulticlass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsMulticlass.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsMulticlass *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsMulticlass; \ingroup TMVA; Class which takes the results of a multiclass classification; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsMulticlass.cxx:220,integrat,integrated,220,tmva/tmva/src/ResultsMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsMulticlass.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Tools *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Tools; \ingroup TMVA; Global auxiliary applications and data treatment routines.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:220,integrat,integrated,220,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,2,"['integrat', 'rout']","['integrated', 'routines']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag, Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; //NOTE: Based on TMVA::Factory; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataLoader *; * *; * *; * Description: *; * This is a class to load datasets into every booked method *; * *; * Authors (alphabetical): *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Omar Zapata <andresete.chaos@gmail.com> - ITM/UdeA, Colombia *; * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * ITM/UdeA, Colombia *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h:327,integrat,integrated,327,tmva/tmva/inc/TMVA/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodBase; \ingroup TMVA. Virtual base Class for all MVA method. MethodBase hosts several specific evaluation methods. The kind of MVA that provides optimal performance in an analysis strongly; depends on the particular application. The evaluation factory provides a; number of numerical benchmark results to directly assess the performance; of the MVA training on the independent test sample. These are:. - The _signal efficiency_ at three representative background efficiencies; (which is 1 &minus; rejection).; - The _significance_ of an MVA estimator, defined by the difference; between the MVA mean values for signal and background, divided by the; quadratic sum of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:250,integrat,integrated,250,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Reader *; * *; * *; * Description: *; * Reader class to be used in the user application to interpret the trained *; * MVAs in an analysis context *; * *; * Authors (alphabetical order): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h:250,integrat,integrated,250,tmva/tmva/inc/TMVA/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; // Updated by: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Factory *; * *; * *; * Description: *; * This is the main MVA steering class: it creates (books) all MVA methods, *; * and guides them through the training, testing and evaluation phases. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h:310,integrat,integrated,310,tmva/tmva/inc/TMVA/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx:219,integrat,integrated,219,tmva/tmva/src/VariableTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ClassInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ClassInfo; \ingroup TMVA. Class that contains all the information of a class. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassInfo.cxx:206,integrat,integrated,206,tmva/tmva/src/ClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ClassInfo.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ConvergenceTest *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ConvergenceTest; \ingroup TMVA. Check for convergence. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx:206,integrat,integrated,206,tmva/tmva/src/ConvergenceTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataInputHandler *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataInputHandler.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataInputHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataInputHandler.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSet *; * *; * *; * Description: *; * Contains all the data information *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSet.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSet.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSet *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSet; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx:206,integrat,integrated,206,tmva/tmva/src/DataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetManager *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSetManager; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetManager.cxx:206,integrat,integrated,206,tmva/tmva/src/DataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetManager.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetManager *; * *; * *; * Description: *; * Singleton class for dataset management *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetManager.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/DataSetManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetManager.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : FitterBase *; * *; * *; * Description: *; * Base class for TMVA fitters *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/FitterBase.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/FitterBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/FitterBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : FitterBase *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::FitterBase; \ingroup TMVA. Base class for TMVA fitters. Also defines generalised fitting interface. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx:206,integrat,integrated,206,tmva/tmva/src/FitterBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MCFitter *; * *; * *; * Description: *; * Fitter using Monte Carlo sampling of parameters *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MCFitter.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/MCFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MCFitter.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Results *; * *; * *; * Description: *; * Base-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Results.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/Results.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Results.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Results *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Results; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Results.cxx:206,integrat,integrated,206,tmva/tmva/src/Results.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Results.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsClassification *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsClassification.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/ResultsClassification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsClassification.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsClassification *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsClassification; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsClassification.cxx:206,integrat,integrated,206,tmva/tmva/src/ResultsClassification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsClassification.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsRegression *; * *; * *; * Description: *; * Derived-class for result-vectors *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsRegression.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/ResultsRegression.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ResultsRegression.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ResultsRegression *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::ResultsRegression; \ingroup TMVA; Class that is the base-class for a vector of result; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsRegression.cxx:206,integrat,integrated,206,tmva/tmva/src/ResultsRegression.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ResultsRegression.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MCFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MCFitter; \ingroup TMVA. Fitter using Monte Carlo sampling of parameters. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx:206,integrat,integrated,206,tmva/tmva/src/MCFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::VariableInfo; \ingroup TMVA; Class for type info of MVA input variable; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableTransformBase; \ingroup TMVA; Linear interpolation class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:206,integrat,integrated,206,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Jan Therhaag, Eckhard von Toerne, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Version *; * *; * *; * Description: *; * Current TMVA Version - filled automatically during cvs tagging *; * by python script development/tmvaTag.py *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2005-2010, *; * Regents of CERN (Switzerland), *; * University of Bonn (Germany), *; * University of Heidelberg (Germany), *; * University of Victoria (Canada) *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Version.h:240,integrat,integrated,240,tmva/tmva/inc/TMVA/Version.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Version.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFDA; \ingroup TMVA. Function discriminant analysis (FDA). This simple classifier; fits any user-defined TFormula (via option configuration string) to; the training data by requiring a formula response of 1 (0) to signal; (background) events. The parameter fitting is done via the abstract; class FitterBase, featuring Monte Carlo sampling, Genetic; Algorithm, Simulated Annealing, MINUIT and combinations of these. Can compute regression value for one dimensional output; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:194,integrat,integrated,194,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Matt Jachowski, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodANNBase *; * *; * *; * Description: *; * Artificial neural network base class for the discrimination of signal *; * from background. *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodANNBase; \ingroup TMVA. Base class for all TMVA methods using artificial neural networks. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:224,integrat,integrated,224,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Matt Jachowski, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodANNBase *; * *; * *; * Description: *; * Artificial neural network base class for the discrimination of signal *; * from background. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Small changes (regression): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ , Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodANNBase.h:209,integrat,integrated,209,tmva/tmva/inc/TMVA/MethodANNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodANNBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/VariableTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:205,integrat,integrated,205,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IFitterTarget *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::IFitterTarget; \ingroup TMVA. Interface for a fitter 'target'. Defines interface to the estimator function. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IFitterTarget.cxx:179,integrat,integrated,179,tmva/tmva/src/IFitterTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IFitterTarget.cxx,3,"['Interface', 'integrat', 'interface']","['Interface', 'integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : IFitterTarget *; * *; * *; * Description: *; * Interface for generic fitter *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/IFitterTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Function discriminant analysis (FDA). This simple classifier *; * fits any user-defined TFormula (via option configuration string) to *; * the training data by requiring a formula response of 1 (0) to signal *; * (background) events. The parameter fitting is done via the abstract *; * class FitterBase, featuring Monte Carlo sampling, Genetic *; * Algorithm, Simulated Annealing, MINUIT and combinations of these. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Xavier Prudent, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodFisher *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Original author of this Fisher-Discriminant implementation: *; * Andre Gaidot, CEA-France; *; * (Translation from FORTRAN) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:214,integrat,integrated,214,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Xavier Prudent, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFisher *; * *; * *; * Description: *; * Analysis of Fisher discriminant (Fisher or Mahalanobis approach) *; * *; * Original author of this Fisher-Discriminant implementation: *; * Andre Gaidot, CEA-France; *; * (Translation from FORTRAN) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h:214,integrat,integrated,214,tmva/tmva/inc/TMVA/MethodFisher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss; /***********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPDERS *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Yair Mahalalel <Yair.Mahalalel@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:215,integrat,integrated,215,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPDERS *; * *; * *; * Description: *; * Multidimensional Likelihood using the ""Probability density estimator *; * range search"" (PDERS) method suggested in *; * T. Carli and B. Koblitz, NIM A 501, 576 (2003) *; * *; * The multidimensional PDFs for signal and background are modeled *; * by counting the events in the ""vicinity"" of a test point. The volume *; * that describes ""vicinity"" is user-defined through the option string. *; * A search method based on binary-trees is used to improve the selection *; * efficiency of the volume search. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Yair Mahalalel <Yair.Mahalalel@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:214,integrat,integrated,214,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitFitter *; * *; * *; * Description: *; * Fitter using MINUIT *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h:161,integrat,integrated,161,tmva/tmva/inc/TMVA/MinuitFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVEvent *; * *; * *; * Description: *; * Event class for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVEvent.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVEvent.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVEvent *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVEvent; \ingroup TMVA; Event class for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVEvent.cxx:159,integrat,integrated,159,tmva/tmva/src/SVEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVEvent.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelFunction *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * MultiGaussian, Product and Sum kernels included: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVKernelFunction; \ingroup TMVA; Kernel for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx:159,integrat,integrated,159,tmva/tmva/src/SVKernelFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelFunction.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelFunction *; * *; * *; * Description: *; * Kernel for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelFunction.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVKernelFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelFunction.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelMatrix *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Minor modification to improve optimisation of kernel values: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVKernelMatrix; \ingroup TMVA; Kernel matrix for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelMatrix.cxx:159,integrat,integrated,159,tmva/tmva/src/SVKernelMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVKernelMatrix.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVKernelMatrix *; * *; * *; * Description: *; * Kernel matrix for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelMatrix.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVKernelMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVKernelMatrix.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVWorkingSet *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SVWorkingSet; \ingroup TMVA; Working class for Support Vector Machine; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx:159,integrat,integrated,159,tmva/tmva/src/SVWorkingSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : SVWorkingSet *; * *; * *; * Description: *; * Working class for Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/SVWorkingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Asen Christov, Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss , Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PDF *; * *; * *; * Description: *; * PDF wrapper for histograms; uses user-defined spline interpolation *; * and kernel density estimation *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:228,integrat,integrated,228,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,2,"['integrat', 'wrap']","['integrated', 'wrapper']"
Integrability,"// @(#)root/tmva $Id$; // Author: Asen Christov, Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Jan Therhaag, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PDF *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDF; \ingroup TMVA; PDF wrapper for histograms; uses user-defined spline interpolation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:247,integrat,integrated,247,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,2,"['integrat', 'wrap']","['integrated', 'wrapper']"
Integrability,"// @(#)root/tmva $Id$; // Author: Asen Christov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::KDEKernel *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::KDEKernel; \ingroup TMVA. KDE Kernel for ""smoothing"" the PDFs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx:159,integrat,integrated,159,tmva/tmva/src/KDEKernel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Asen Christov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : KDEKernel *; * *; * *; * Description: *; * The Probability Density Functions (PDFs) used for the Likelihood analysis *; * can suffer from low statistics of the training samples. This can cause *; * the PDFs to fluctuate instead to be smooth. Nonparamatric Kernel Density *; * Estimation is one of the methods to produce ""smooth"" PDFs. *; * *; * Authors (alphabetical): *; * Asen Christov <christov@physik.uni-freiburg.de> - Freiburg U., Germany *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * Freiburg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:159,integrat,integrated,159,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Author: *; * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MsgLogger; \ingroup TMVA; ostringstream derivative to redirect and format output; */; // Local include(s):",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx:218,integrat,integrated,218,tmva/tmva/src/MsgLogger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MsgLogger *; * *; * *; * Description: *; * TMVA output logger class producing nicely formatted log messages *; * *; * Author: *; * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h:218,integrat,integrated,218,tmva/tmva/inc/TMVA/MsgLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h,2,"['integrat', 'message']","['integrated', 'messages']"
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelBase *; * *; * *; * Description: *; * Implementation of PDEFoam kernel interface *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelBase; \ingroup TMVA; This class is the abstract kernel interface for PDEFoam. The; kernel can be used for manipulating (smearing) the cell values of a; PDEFoam, by passing it as an argument to; PDEFoam::GetCellValue(...). Derived classes must implement the Estimate() function to provide a; specific kernel behaviour.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelBase.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelBase.cxx,3,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelBase *; * *; * *; * Description: *; * PDEFoam kernel interface *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelBase.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelBase.h,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelGauss *; * *; * *; * Description: *; * Implementation of gauss PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelGauss; \ingroup TMVA; This PDEFoam kernel estimates a cell value for a given event by; weighting all cell values with a gauss function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelGauss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelGauss *; * *; * *; * Description: *; * PDEFoam kernel, which weights all cell values by a gauss function. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelGauss.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelLinN *; * *; * *; * Description: *; * Implementation of linear neighbors PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelLinN; \ingroup TMVA; This PDEFoam kernel estimates a cell value for a given event by; weighting with cell values of the nearest neighbor cells.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelLinN.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelLinN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelLinN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelLinN *; * *; * *; * Description: *; * PDEFoam kernel, which linear weights with the neighbor cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelLinN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelTrivial *; * *; * *; * Description: *; * Implementation of trivial PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamKernelTrivial; \ingroup TMVA; This class is a trivial PDEFoam kernel estimator. The Estimate(); function returns the cell value, given an event 'txvec'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelTrivial.cxx:179,integrat,integrated,179,tmva/tmva/src/PDEFoamKernelTrivial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelTrivial.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamKernelTrivial *; * *; * *; * Description: *; * Trivial PDEFoam kernel *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h:179,integrat,integrated,179,tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamKernelTrivial.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Fredrik Tegenfeldt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRuleFit *; * *; * *; * Description: *; * Friedman's RuleFit method *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h:164,integrat,integrated,164,tmva/tmva/inc/TMVA/MethodRuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Fredrik Tegenfeldt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRuleFit *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * Iowa State U. *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodRuleFit; \ingroup TMVA; J Friedman's RuleFit method; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:164,integrat,integrated,164,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationReLU *; * *; * *; * Description: *; * Rectified linear unit function for an ANN. *; * *; * Authors (alphabetical): *; * Helge Voss *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationReLU; \ingroup TMVA; Rectified Linear Unit activation function for TNeuron; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationReLU.cxx:156,integrat,integrated,156,tmva/tmva/src/TActivationReLU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationReLU.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Joerg Stelzer, Peter Speckmeier; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataSetInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - DESY, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * DESY Hamburg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataSetInfo; \ingroup TMVA. Class that contains all the data information. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:177,integrat,integrated,177,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Andreas Hoecker, Matt Jachowski, Kamil Kraszewski, Maciej Kruk, Peter Speckmayer, Joerg Stelzer, Eckhard v. Toerne, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodMLP *; * *; * *; * Description: *; * ANN Multilayer Perceptron class for the discrimination of signal *; * from background. BFGS implementation based on TMultiLayerPerceptron *; * class from ROOT (http://root.cern.ch). *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodMLP; \ingroup TMVA. Multilayer Perceptron class built off of MethodANNBase. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:312,integrat,integrated,312,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Andreas Hoecker, Matt Jachowski, Kamil Kraszewski, Maciej Kruk, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Jan Therhaag, Jiahang Zhong; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodMLP *; * *; * *; * Description: *; * ANN Multilayer Perceptron class for the discrimination of signal *; * from background. BFGS implementation based on TMultiLayerPerceptron *; * class from ROOT (http://root.cern.ch). *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Kamil Kraszewski <kalq@cern.ch> - IFJ & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jiahang Zhong <Jiahang.Zhong@cern.ch> - Academia Sinica, Taipei *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:313,integrat,integrated,313,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant - Simple Linear Regression and Classification *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodLD; \ingroup TMVA; Linear Discriminant. Can compute multidimensional output for regression; (although it computes every dimension separately); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx:212,integrat,integrated,212,tmva/tmva/src/MethodLD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Lorenzo Moneta; /*************************************************************************; * Copyright (C) 2019, ROOT/TMVA *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; //; // Defining Executor classes to be used in TMVA; // wrapping the functionality of the ROOT TThreadExecutor and; // ROOT TSequential Executor; //; /////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h:514,wrap,wrapping,514,tmva/tmva/inc/TMVA/Executor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h,1,['wrap'],['wrapping']
Integrability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flattening/Deflattening on the GPU //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCuda.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flatten/Deflatten on the CPU architecture //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshapeCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for every architecture using templates *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.h:162,integrat,integrated,162,tmva/tmva/test/DNN/CNN/TestReshape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Marcin ....; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBayesClassifier *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Abhishek Narain, <narainabhi@gmail.com> - University of Houston *; * *; * Copyright (c) 2005-2006: *; * University of Houston, *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBayesClassifier; \ingroup TMVA. Description of bayesian classifiers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx:157,integrat,integrated,157,tmva/tmva/src/MethodBayesClassifier.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Marcin Wolter, Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodSVM *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Introduction of regression by: *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Krakow, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * *; * Introduction of kernel parameter optimisation *; * and additional kernel functions by: *; * Adrian Bevan <adrian.bevan@cern.ch> - Queen Mary *; * University of London, UK *; * Tom Stevenson <thomas.james.stevenson@cern.ch> - Queen Mary *; * University of London, UK *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodSVM; \ingroup TMVA; SMO Platt's SVM classifier with Keerthi & Shavade improvements; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:174,integrat,integrated,174,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Marcin Wolter, Andrzej Zemla; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodSVM *; * *; * *; * Description: *; * Support Vector Machine *; * *; * Authors (alphabetical): *; * Marcin Wolter <Marcin.Wolter@cern.ch> - IFJ PAN, Krakow, Poland *; * Andrzej Zemla <azemla@cern.ch> - IFJ PAN, Krakow, Poland *; * (IFJ PAN: Henryk Niewodniczanski Inst. Nucl. Physics, Krakow, Poland) *; * *; * Introduction of regression by: *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Krakow, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Krakow, Poland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * PAN, Krakow, Poland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h:174,integrat,integrated,174,tmva/tmva/inc/TMVA/MethodSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationIdentity *; * *; * *; * Description: *; * Identity activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationIdentity; \ingroup TMVA; Identity activation function for TNeuron; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationIdentity.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationIdentity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationIdentity.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationRadial *; * *; * *; * Description: *; * Radial basis activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationRadial; \ingroup TMVA; Radial basis activation function for ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationRadial.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationRadial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationRadial.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationSigmoid *; * *; * *; * Description: *; * Sigmoid activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationSigmoid; \ingroup TMVA; Sigmoid activation function for TNeuron.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationSigmoid.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationSigmoid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationSigmoid.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TActivationTanh *; * *; * *; * Description: *; * Tanh activation function (sigmoid normalized in [-1,1] for an ANN. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationTanh; \ingroup TMVA; Tanh activation function for ANN.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationTanh.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationTanh.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationTanh.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivation *; * *; * Description: *; * Interface for TNeuron activation function classes. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivation *; * *; * Description: *; * Interface for TNeuron activation function classes. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivation; \ingroup TMVA; Interface for TNeuron activation function classes; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivation.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivation.cxx,3,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationChooser *; * *; * *; * Description: *; * Class for easily choosing activation functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationChooser.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationChooser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationChooser.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationChooser *; * *; * *; * Description: *; * Class for easily choosing activation functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TActivationChooser; \ingroup TMVA; Class for easily choosing activation functions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationChooser.cxx:160,integrat,integrated,160,tmva/tmva/src/TActivationChooser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TActivationChooser.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationIdentity *; * *; * *; * Description: *; * Identity activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationIdentity.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationIdentity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationIdentity.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationRadial *; * *; * *; * Description: *; * Radial basis activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationRadial.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationRadial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationRadial.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationReLU *; * *; * *; * Description: *; * Tanh activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationReLU.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationReLU.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationReLU.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationSigmoid *; * *; * *; * Description: *; * Sigmoid activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationSigmoid.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationSigmoid.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationSigmoid.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TActivationTanh *; * *; * *; * Description: *; * Tanh activation function for TNeuron *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationTanh.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TActivationTanh.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivationTanh.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuron *; * *; * *; * Description: *; * Neuron class to be used in MethodANNBase and its derivatives. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInput *; * *; * Description: *; * Interface for TNeuron input calculation classes *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInput *; * *; * Description: *; * Interface for TNeuron input calculation classes *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInput; \ingroup TMVA; Interface for TNeuron input calculation classes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInput.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInput.cxx,3,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputAbs *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the sum of the absolute values *; * of the weighted inputs *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputAbs.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputAbs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputAbs.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputAbs *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the sum of the absolute values *; * of the weighted inputs *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputAbs; \ingroup TMVA; TNeuron input calculator -- calculates the sum of the absolute; values of the weighted inputs; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputAbs.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputAbs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputAbs.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputChooser *; * *; * *; * Description: *; * Class for easily choosing neuron input functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputChooser.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputChooser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputChooser.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputChooser *; * *; * *; * Description: *; * Class for easily choosing neuron input functions. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputChooser; \ingroup TMVA; Class for easily choosing neuron input functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputChooser.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputChooser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputChooser.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSqSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the square *; * of the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSqSum.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputSqSum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSqSum.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSqSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the square *; * of the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputSqSum; \ingroup TMVA; TNeuron input calculator -- calculates the squared weighted sum of inputs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSqSum.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputSqSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSqSum.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSum.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TNeuronInputSum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInputSum.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TNeuronInputSum *; * *; * *; * Description: *; * TNeuron input calculator -- calculates the weighted sum of inputs. *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuronInputSum; \ingroup TMVA; TNeuron input calculator -- calculates the weighted sum of inputs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSum.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuronInputSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuronInputSum.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::TSynapse *; * *; * *; * Description: *; * Synapse class for use in derivatives of MethodANNBase *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TNeuron *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TNeuron; \ingroup TMVA; Neuron class used by TMVA artificial neural network methods; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:160,integrat,integrated,160,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Matt Jachowski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSynapse *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::TSynapse; \ingroup TMVA; Synapse class used by TMVA artificial neural network methods; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx:160,integrat,integrated,160,tmva/tmva/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer, Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ROCCurve *; * *; * Description: *; * This is class to compute ROC Integral (AUC) *; * *; * Authors : *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2015: *; * CERN, Switzerland *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCurve.h:205,integrat,integrated,205,tmva/tmva/inc/TMVA/ROCCurve.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCurve.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer, Simon Pfreundschuh and Kim Albertsson; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ROCCurve *; * *; * Description: *; * This is class to compute ROC Integral (AUC) *; * *; * Authors : *; * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; * *; * Copyright (c) 2015: *; * CERN, Switzerland *; * UdeA/ITM, Colombia *; * U. of Florida, USA *; **********************************************************************************/; /*! \class TMVA::ROCCurve; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx:228,integrat,integrated,228,tmva/tmva/src/ROCCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ROCCurve.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Omar Zapata; // Mentors: Lorenzo Moneta, Sergei Gleyzer; //NOTE: Based on TMVA::Factory; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : DataLoader *; * *; * *; * Description: *; * This is a class to load datasets into every booked method *; * *; * Authors (alphabetical): *; * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; * Omar Zapata <Omar.Zapata@cern.ch> - ITM/UdeA, Colombia *; * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * ITM/UdeA, Colombia *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::DataLoader; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:233,integrat,integrated,233,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticAlgorithm *; * *; * *; * Description: *; * Base definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticAlgorithm.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticAlgorithm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticAlgorithm.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticFitter *; * *; * *; * Description: *; * Fitter using a Genetic Algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticFitter.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticFitter.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticFitter *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticFitter; \ingroup TMVA. Fitter using a Genetic Algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticGenes *; * *; * *; * Description: *; * Genes definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticGenes.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticGenes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticGenes.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticPopulation *; * *; * *; * Description: *; * Population definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticPopulation.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticPopulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticPopulation.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : GeneticRange *; * *; * *; * Description: *; * Range definition for genetic algorithm *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticRange.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/GeneticRange.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GeneticRange.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Interval *; * *; * *; * Description: *; * Generic range definition (used, eg, in genetic algorithm) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/Interval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Interval.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDNN *; * *; * *; * Description: *; * A neural network implementation *; * *; * Authors (alphabetical): *; * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@gmx.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodDNN; \ingroup TMVA; Deep Neural Network Implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx:162,integrat,integrated,162,tmva/tmva/src/MethodDNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDNN *; * *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@gmx.at> - CERN, Switzerland *; * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //#pragma once",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDNN.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/MethodDNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDNN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitWrapper *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MinuitWrapper; \ingroup TMVA; Wrapper around MINUIT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx:162,integrat,integrated,162,tmva/tmva/src/MinuitWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx,2,"['Wrap', 'integrat']","['Wrapper', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MinuitWrapper *; * *; * *; * Description: *; * Wrapper around MINUIT *; * *; * Authors (alphabetical): *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h:162,integrat,integrated,162,tmva/tmva/inc/TMVA/MinuitWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h,2,"['Wrap', 'integrat']","['Wrapper', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticAlgorithm *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticAlgorithm; \ingroup TMVA. Base definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticAlgorithm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticGenes *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticGenes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticPopulation *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GeneticPopulation; \ingroup TMVA. Population definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticPopulation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::GeneticRange *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; * File and Version Information: *; **********************************************************************************/; /*! \class TMVA::GeneticRange; \ingroup TMVA. Range definition for genetic algorithm. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticRange.cxx:162,integrat,integrated,162,tmva/tmva/src/GeneticRange.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticRange.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::Interval *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; * File and Version Information: *; **********************************************************************************/; /*! \class TMVA::Interval; \ingroup TMVA. The TMVA::Interval Class. Interval definition, continuous and discrete. - Interval(min,max) : a continous interval [min,max]; - Interval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:; min, min+step, min+2*step,...., min+(n-1)*step, min+n*step=max. e.g.:. - Interval(1,5,5) = 1,2,3,4,5; - Interval(.5,1.,6) = .5, .6., .7, .8, .9, 1.0. Note: **bin** counting starts from ZERO unlike in ROOT histograms. - Interval definition, continuous and discrete. - Interval(min,max) : a continous interval [min,max]; - Interval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:. min, min+step, min+2*step,...., min+(n-1)*step=max. e.g.:. - Interval(1,5,5)=1,2,3,4,5 <br>; - Interval(.5,1.,6)= .5, .6., .7, .8, .9, 1.0 <br>. ~~~ {.cpp}; Example: Interval(.5,1.,6). [ min max ]; -----------------------------------------------; | | | | | |; .5 .6 .7 .8 .9 1.0. bin 0 1 2 3 4 5; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Interval.cxx:162,integrat,integrated,162,tmva/tmva/src/Interval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Interval.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodKNN *; * *; * *; * Description: *; * Analysis of k-nearest neighbor *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/MethodKNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodKNN *; * *; * *; * Description: *; * Implementation *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodKNN; \ingroup TMVA. Analysis of k-nearest neighbor. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:160,integrat,integrated,160,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ModulekNN *; * *; * *; * Description: *; * Implementation *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::kNN; \ingroup TMVA; kNN::Event describes point in input variable vector-space, with; additional functionality like distance between points; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:160,integrat,integrated,160,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ModulekNN *; * *; * *; * Description: *; * Module for k-nearest neighbor algorithm *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/ModulekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Node *; * *; * *; * Description: *; * kd-tree (binary tree) template *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:160,integrat,integrated,160,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoam *; * *; * *; * Description: *; * Class for PDEFoam object *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamCell *; * *; * *; * Description: *; * Objects of this class are hyperrectangular cells organized in *; * the binary tree. Special algoritm for encoding relative *; * positioning of the cells saves total memory allocation needed *; * for the system of cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamCell.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoamCell.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamCell.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamVect *; * *; * *; * Description: *; * Auxiliary class PDEFoamVect of n-dimensional vector, with dynamic *; * allocation used for the cartesian geometry of the PDEFoam cells *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamVect.h:206,integrat,integrated,206,tmva/tmva/inc/TMVA/PDEFoamVect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamVect.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S. Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamVect *; * *; * *; * Description: *; * Auxiliary class PDEFoamVect of n-dimensional vector, with dynamic *; * allocation used for the cartesian geometry of the PDEFoam cells *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamVect; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamVect.cxx:206,integrat,integrated,206,tmva/tmva/src/PDEFoamVect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamVect.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S.Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoam *; * *; * *; * Description: *; * Implementations *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoam; \ingroup TMVA. Implementation of PDEFoam. The PDEFoam method is an extension of the PDERS method, which uses; self-adapting binning to divide the multi-dimensional phase space; in a finite number of hyper-rectangles (boxes). For a given number of boxes, the binning algorithm adjusts the size; and position of the boxes inside the multidimensional phase space,; minimizing the variance of the signal and background densities inside; the boxes. The binned density information is stored in binary trees,; allowing for a very fast and memory-efficient classification of; events. The implementation of the PDEFoam is based on the monte-carlo; integration package TFoam included in the analysis package ROOT. The class TMVA::PDEFoam defines the default interface for the; PDEFoam variants:. - PDEFoamEvent; - PDEFoamDiscriminant; - PDEFoamTarget; - PDEFoamMultiTarget; - PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event; weights) and therefore acts as an event density estima",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:205,integrat,integrated,205,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: S.Jadach, Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamCell *; * *; * *; * Description: *; * Objects of this class are hyperrectangular cells organized in *; * the binary tree. Special algoritm for encoding relative *; * positioning of the cells saves total memory allocation needed *; * for the system of cells. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamCell; \ingroup TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamCell.cxx:205,integrat,integrated,205,tmva/tmva/src/PDEFoamCell.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamCell.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodPDEFoam *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Original author of the TFoam implementation: *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodPDEFoam; \ingroup TMVA. The PDEFoam method is an extension of the PDERS method, which; divides the multi-dimensional phase space in a finite number of; hyper-rectangles (cells) of constant event density. This ""foam"" of; cells is filled with averaged probability-density information; sampled from a training event sample. For a given number of cells, the binning algorithm adjusts the size; and position of the cells inside the multidimensional phase space; based on a binary-split algorithm, minimizing the variance of the; event density in the cell.; The binned event density information of the final foam is stored in; binary trees, allowing for a fast and memory-efficient; classification of events. The implementation of PDEFoam is based on the Monte-Carlo; integration package TFoam included in the analysis package ROOT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:195,integrat,integrated,195,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,2,['integrat'],"['integrated', 'integration']"
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : MethodPDEFoam *; * *; * *; * Description: *; * The PDEFoam method is an extension of the PDERS method, which divides *; * the multi-dimensional phase space in a finite number of hyper-rectangles *; * (cells) of constant event density. This ""foam"" of cells is filled with *; * averaged probability-density information sampled from a training event *; * sample. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Original author of the TFoam implementation: *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/MethodPDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDensityBase *; * *; * *; * Description: *; * Class PDEFoamDensityBase is an Abstract class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDensityBase.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDensityBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDensityBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDensityBase *; * *; * *; * Description: *; * This class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDensityBase::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDensityBase; \ingroup TMVA. This is an abstract class, which provides an interface for a; PDEFoam density estimator. Derived classes have to implement the; Density(...) function, which returns the density of a certain; quantity at a given phase-space point during the foam build-up. Variants of PDEFoamDensityBase are:. - PDEFoamEventDensity; - PDEFoamDiscriminantDensity; - PDEFoamTargetDensity; - PDEFoamDecisionTreeDensity. Usage:. The user has to instantiate a child class of PDEFoamDensityBase and; set the pointer to the owner, which is a PDEFoam object:. PDEFoamDensityBase *dens = new MyDensity();; pdefoam->SetDensity(dens);. Aft",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDensityBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the discriminant D *; * = N_sig / (N_bg + N_sig) with every cell, as well as the *; * statistical error on the discriminant. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminant.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminant *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDiscriminant; \ingroup TMVA. This PDEFoam variant stores in every cell the discriminant. D = #events with given class / total number of events. as well as the statistical error on the discriminant. It therefore; acts as a discriminant estimator. It should be booked together; with the PDEFoamDiscriminantDensity density estimator, which; returns the discriminant density at a given phase space point; during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDiscriminant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminantDensity *; * *; * *; * Description: *; * Class PDEFoamDiscriminantDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamDiscriminantDensity.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDiscriminantDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDiscriminantDensity::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDiscriminantDensity; \ingroup TMVA. This is a concrete implementation of PDEFoam. Density(...); estimates the discriminant density at a given phase-space point; using range-searching. The discriminant D is defined as. D = #events with given class / total number of events; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminantDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamDiscriminantDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminantDensity.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEvent *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the number of *; * events with every cell, as well as the statistical error on *; * the event number. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEvent.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEvent *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamEvent; \ingroup TMVA; This PDEFoam variant stores in every cell the sum of event weights; and the sum of the squared event weights. It therefore acts as; event density estimator. It should be booked together with the; PDEFoamEventDensity density estimator, which returns the event; weight density at a given phase space point during the foam; build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEvent.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEvent.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEventDensity *; * *; * *; * Description: *; * Class PDEFoamEventDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEventDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamEventDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamEventDensity.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamEventDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamEventDensity::Density() does *; * this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamEventDensity; \ingroup TMVA; This is a concrete implementation of PDEFoam. Density(...); estimates the event (weight) density at a given phase-space point; using range-searching.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEventDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamEventDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamEventDensity.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Concrete PDEFoamEvent sub-class. This foam stores the number *; * of events with every cell, as well as the statistical error on *; * the event number. It overrides GetCellValue() for projecting *; * the target values given an incomplete event map with *; * N_variables < dimension of foam. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamMultiTarget; \ingroup TMVA; This PDEFoam variant is used to estimate multiple targets by; creating an event density foam (PDEFoamEvent), which has dimension:. dimension = number of variables + number targets. This PDEFoam variant stores in every cell the sum of event weights; and the sum of the squared event weights. During evaluation for a; given event, which has only variables and no targets (number of; event variables is smaller than the foam dimension), the targets; are estimated by finding all cells, which correspond to this event; and calculate the Mean (or Mpv, depending on the ETargetSelection); cell center weighted by the event density in the cell. This PDEFoam variant should be booked together with the; PDEFoamEventDensity density estimator, which returns the event; weight density at a given phase space point during the foam; build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamMultiTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx,2,"['depend', 'integrat']","['depending', 'integrated']"
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Concrete PDEFoam sub-class. This foam stores the first target *; * (index 0) with every cell, as well as the statistical error on *; * the target. *; * *; * Authors (alphabetical): *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * Alexander Voigt - TU Dresden, Germany *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTarget.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamTarget; \ingroup TMVA; This PDEFoam variant stores in every cell the average target; fTarget (see the Constructor) as well as the statistical error on; the target fTarget. It therefore acts as a target estimator. It; should be booked together with the PDEFoamTargetDensity density; estimator, which returns the target fTarget density at a given; phase space point during the foam build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTargetDensity *; * *; * *; * Description: *; * Class PDEFoamTargetDensity is a class representing *; * n-dimensional real positive integrand function *; * The main function is Density() which provides the event density at a *; * given point during the foam build-up (sampling). *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h:195,integrat,integrated,195,tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoamTargetDensity.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamTargetDensity *; * *; * *; * Description: *; * The TFDSITR class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamTargetDensity::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamTargetDensity; \ingroup TMVA; This is a concrete implementation of PDEFoam. Density(...); estimates the target density (target number: fTarget) at a given; phase-space point using range-searching.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTargetDensity.cxx:195,integrat,integrated,195,tmva/tmva/src/PDEFoamTargetDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTargetDensity.cxx,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"// @(#)root/tmva $Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Flatten function for Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing Flatten/Deflatten on the Reference architecture //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.cxx:163,integrat,integrated,163,tmva/tmva/test/DNN/CNN/TestReshape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestReshape.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Anirudh Dagar, 2020; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyTorch *; * *; * *; * Description: *; * Interface for PyTorch python based scientific package supporting *; * automatic differentiation for machine learning. *; * *; * Authors (alphabetical): *; * Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee *; * *; * Copyright (c) 2020: *; * CERN, Switzerland *; * IIT, Roorkee *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h:171,integrat,integrated,171,tmva/pymva/inc/TMVA/MethodPyTorch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyTorch.h,2,"['Interface', 'integrat']","['Interface', 'integrated']"
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta 2021; /**********************************************************************************; * Project : TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package : TMVA *; * Function: TMVA::Experimental::SOFIE::PyKeras::Parse *; * *; * Description: *; * Parser function for translating Keras .h5 model to RModel object *; * *; * Example Usage: *; * ~~~ {.cpp} *; * using TMVA::Experimental::SOFIE; *; * RModel model = PyKeras::Parse(""trained_model_dense.h5""); *; * ~~~ *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:175,integrat,integrated,175,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta 2021; /**********************************************************************************; * Project : TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package : TMVA *; * Function: TMVA::Experimental::SOFIE::PyTorch::Parse *; * *; * Description: *; * Parser function for translating PyTorch .pt model to RModel object *; * *; * Example Usage: *; * ~~~ {.cpp} *; * using TMVA::Experimental::SOFIE; *; * // Building the vector of input tensor shapes *; * std::vector<size_t> s1{120,1}; *; * std::vector<std::vector<size_t>> inputShape{s1}; *; * RModel model = PyTorch::Parse(""trained_model_dense.pt"",inputShape); *; * ~~~ *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx:175,integrat,integrated,175,tmva/pymva/src/RModelParser_PyTorch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta, 2021; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * Functionality for parsing a saved Keras .H5 model into RModel object *; * *; * Authors (alphabetical): *; * Sanjiban Sengupta <sanjiban.sg@gmail.com> *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_Keras.h:175,integrat,integrated,175,tmva/pymva/inc/TMVA/RModelParser_Keras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_Keras.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Sanjiban Sengupta, 2021; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * *; * *; * Description: *; * Functionality for parsing a saved PyTorch .PT model into RModel object *; * *; * Authors (alphabetical): *; * Sanjiban Sengupta <sanjiban.sg@gmail.com> *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_PyTorch.h:175,integrat,integrated,175,tmva/pymva/inc/TMVA/RModelParser_PyTorch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/RModelParser_PyTorch.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Author: Stefan Wunsch; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyKeras *; * *; * *; * Description: *; * Interface for Keras python package which is a wrapper for the Theano and *; * Tensorflow libraries *; * *; * Authors (alphabetical): *; * Stefan Wunsch <stefan.wunsch@cern.ch> - KIT, Germany *; * *; * Copyright (c) 2016: *; * CERN, Switzerland *; * KIT, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyKeras.h:165,integrat,integrated,165,tmva/pymva/inc/TMVA/MethodPyKeras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyKeras.h,3,"['Interface', 'integrat', 'wrap']","['Interface', 'integrated', 'wrapper']"
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PyMethodBase *; * *; * Description: *; * Virtual base class for all MVA method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:221,integrat,integrated,221,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : PyMethodBase *; * Web : http://oproject.org *; * *; * Description: *; * Virtual base class for all MVA method based on Python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h:221,integrat,integrated,221,tmva/pymva/inc/TMVA/PyMethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/PyMethodBase.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * AdaBoost Classifier from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyAdaBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyAdaBoost.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyAdaBoost *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn package AdaBoostClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * GradientBoostingClassifier Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyGTB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyGTB.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyGTB *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package GradientBoostingClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * Random Forest Classifiear from Scikit learn *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx:201,integrat,integrated,201,tmva/pymva/src/MethodPyRandomForest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyRandomForest.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/pymva $Id$; // Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodPyRandomForest *; * Web : http://oproject.org *; * *; * Description: *; * scikit-learn Package RandomForestClassifier method based on python *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h:201,integrat,integrated,201,tmva/pymva/inc/TMVA/MethodPyRandomForest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodC50 *; * Web : http://oproject.org *; * *; * Description: *; * Decision Trees and Rule-Based Models *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodC50.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodC50.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodC50.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRSNNS *; * Web : http://oproject.org *; * *; * Description: *; * Neural Networks in R using the Stuttgart Neural Network Simulator *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSNNS.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRSNNS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSNNS.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRSVM- *; * Web : http://oproject.org *; * *; * Description: *; * Support Vector Machines *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSVM.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRSVM.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodRXGB *; * Web : http://oproject.org *; * *; * Description: *; * R eXtreme Gradient Boosting *; * *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRXGB.cxx:198,integrat,integrated,198,tmva/rmva/src/MethodRXGB.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/src/MethodRXGB.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodBase *; * *; * Description: *; * Virtual base class for all MVA method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/RMethodBase.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/RMethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/RMethodBase.h,2,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodC50 *; * *; * Description: *; * R´s Package C50 method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodC50.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodC50.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodC50.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRSNNS *; * *; * Description: *; * R´s Package RSNNS method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRSNNS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSNNS.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRSVM *; * *; * Description: *; * R´s Package RSVM method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/rmva $Id$; // Author: Omar Zapata,Lorenzo Moneta, Sergei Gleyzer 2015; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : RMethodRXGB *; * *; * Description: *; * R´s Package xgboost method based on ROOTR *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRXGB.h:198,integrat,integrated,198,tmva/rmva/inc/TMVA/MethodRXGB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRXGB.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayer.h,2,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Downsample method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Convolutional Layer on the GPU. //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvLayerCuda.cxx,2,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCuda.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.h:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestRotateWeights.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayerCpu.cxx,3,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Manos Stergiadis; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing the Pooling Layer on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Downsample function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx:171,integrat,integrated,171,tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestPoolingLayer.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Siddhartha Rao Kamalakara; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Regression *; * *; * Authors (alphabetical): *; * Siddhartha Rao Kamalakara <srk97c@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx:180,integrat,integrated,180,tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestRegressionMethodDL.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Backpropagation *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Backward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvBackpropagation.cxx,3,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Features *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNet.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Forward Pass *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Forward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPass.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestForwardPass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPass.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Forward Pass for the CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Forward Pass //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestForwardPassCpu.cxx,4,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Loss *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Loss Function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLoss.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Loss for CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Loss Function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetLossCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Prediction *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Prediction //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPrediction.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Conv Net Prediction for CPU *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Conv Net Prediction //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestConvNetPredictionCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the CPU backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Deep Learning Minimizer for the Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMinimization.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMinimization.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestIm2Col.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2Col.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Im2Col method on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the method Im2col //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestIm2ColCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Conv Net *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Method DL for Conv Net for the Reference backend *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestMethodDLCNN.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeights.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing RotateWeights method on a CPU architecture *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Manos Stergiadis <em.stergiadis@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////; // Testing the Rotate Weights function on the CPU //; ////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx:172,integrat,integrated,172,tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/CNN/TestRotateWeightsCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDLGradientDescent *; * *; * *; * Description: *; * Deel Learning Minimizers *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/cnn:$Id$Ndl; // Authors: Vladimir Ilievski, Lorenzo Moneta, Saurav Shekhar, Ravi Kiran; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDL *; * *; * *; * Description: *; * Deep Neural Network Method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:220,integrat,integrated,220,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn/gru:$Id$; // Author: Surya S Dwivedi 03/07/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicGRULayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the GRU layer. GRU is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h:183,integrat,integrated,183,tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/GRULayer.h,2,"['depend', 'integrat']","['dependencies', 'integrated']"
Integrability,"// @(#)root/tmva/tmva/dnn/lstm:$Id$; // Author: Surya S Dwivedi 27/05/19; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicLSTMLayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Surya S Dwivedi <surya2191997@gmail.com> - IIT Kharagpur, India *; * *; * Copyright (c) 2005-2019: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // This class implements the LSTM layer. LSTM is a variant of vanilla; // RNN which is capable of learning long range dependencies.; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h:184,integrat,integrated,184,tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/LSTMLayer.h,2,"['depend', 'integrat']","['dependencies', 'integrated']"
Integrability,"// @(#)root/tmva/tmva/dnn/rnn:$Id$; // Author: Saurav Shekhar 19/07/17; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : BasicRNNLayer *; * *; * Description: *; * NeuralNetwork *; * *; * Authors (alphabetical): *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * *; * Copyright (c) 2005-2015: *; * All rights reserved. *; * CERN, Switzerland *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; **********************************************************************************/; //#pragma once; //////////////////////////////////////////////////////////////////////; // <Description> //; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h:182,integrat,integrated,182,tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RNN/RNNLayer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Joana Niermann 23/07/19; /*************************************************************************; * Copyright (C) 2019, Joana Niermann *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ///////////////////////////////////////////////////////////////////; // Definition of the TCudnn architecture class, which provides //; // a wrapping of the low-level functionality for neural networks //; // in the cuDNN library. //; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:546,wrap,wrapping,546,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,1,['wrap'],['wrapping']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adadelta optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdadeltaOptimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adagrad optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdagradOptimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for Adam optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLAdamOptimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for RMSProp optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLRMSPropOptimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing Various Optimizers for training DeepNet *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h:167,integrat,integrated,167,tmva/tmva/test/DNN/TestOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimization.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing various optimizers for Cpu Backend *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimizationCpu.cxx:167,integrat,integrated,167,tmva/tmva/test/DNN/TestOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestOptimizationCpu.cxx,3,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdadelta *; * *; * *; * Description: *; * Adadelta Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adadelta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adadelta.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdagrad *; * *; * *; * Description: *; * Adagrad Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adagrad.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adagrad.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adagrad.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TAdam *; * *; * *; * Description: *; * Adam Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Adam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Adam.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TRMSProp *; * *; * *; * Description: *; * RMSProp Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/RMSProp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/RMSProp.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TSGD *; * *; * *; * Description: *; * Stochastic Batch Gradient Descent Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/SGD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/SGD.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VOptimizer *; * *; * *; * Description: *; * General Optimizer Class *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018 : *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h:167,integrat,integrated,167,tmva/tmva/inc/TMVA/DNN/Optimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Optimizer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 05/07/16; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////; // Definition of the TCpu architecture, which provides a //; // multi-threaded CPU implementation of the low-level interface //; // networks for Cpus using BLAS and Roots TThreadExecutor //; //////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:596,interface,interface,596,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,1,['interface'],['interface']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 12/08/16; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /////////////////////////////////////////////////////////////; // CPU Buffer interface class for the generic data loader. //; /////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h:490,interface,interface,490,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuBuffer.h,2,['interface'],['interface']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 20/06/16; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ///////////////////////////////////////////////////////////////////////; // Declaration of the TReference architecture, which provides a //; // reference implementation of the low-level interface for the DNN //; // implementation based on ROOT's TMatrixT matrix type. //; ///////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:599,interface,interface,599,tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,1,['interface'],['interface']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for SGD optimizer ( CPU backend ) *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx:186,integrat,integrated,186,tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLSGDOptimizationCpu.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Ravi Kiran S; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : *; * *; * *; * Description: *; * Testing MethodDL with DNN for various optimizers *; * *; * Authors (alphabetical): *; * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2018: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h:186,integrat,integrated,186,tmva/tmva/test/DNN/TestMethodDLOptimization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestMethodDLOptimization.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski, Saurav Shekhar; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodDL *; * *; * *; * Description: *; * Deep Neural Network Method *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:188,integrat,integrated,188,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TConvLayer *; * *; * *; * Description: *; * Convolutional Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDeepNet *; * *; * *; * Description: *; * Deep Neural Network *; * *; * Authors (alphabetical): *; * Akshay Vashistha <akshayvashistha1995@gmail.com> - CERN, Switzerland *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * Saurav Shekhar <sauravshekhar01@gmail.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TGeneralLayer *; * *; * *; * Description: *; * General Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMaxPoolLayer *; * *; * *; * Description: *; * Max Pool Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TReshapeLayer *; * *; * *; * Description: *; * Reshape Deep Neural Network Layer *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/ReshapeLayer.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //////////////////////////////////////////////////////////////////////////; // Partial specialization of the TTensorDataLoader class to adapt //; // it to the TMatrix class. Also the data transfer is kept simple, //; // since this implementation (being intended as reference and fallback) //; // is not optimized for performance. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; ///////////////////////////////////////////////////////////////////; // Specializations of Copy functions for the TensorDataLoader //; // specialized for the reference architecture. //; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx:172,integrat,integrated,172,tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx,1,['integrat'],['integrated']
Integrability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h:172,integrat,integrated,172,tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h,1,['integrat'],['integrated']
Integrability,"// @(#)root/tree:$Id$; // Author: Fons Rademakers 30/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeResult; \ingroup tree. Class defining interface to a TTree query result with the same; interface as for SQL databases. A TTreeResult is returned by; TTree::Query() (actually TTreePlayer::Query()). Related classes are TTreeRow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx:472,interface,interface,472,tree/tree/src/TTreeResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx,2,['interface'],['interface']
Integrability,"// @(#)root/tree:$Id$; // Author: Fons Rademakers 30/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeRow; \ingroup tree. Class defining interface to a row of a TTree query result.; Objects of this class are created by TTreeResult methods. Related classes are TTreeResult.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeRow.cxx:469,interface,interface,469,tree/tree/src/TTreeRow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeRow.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/tree:$Id$; // Author: Rene Brun 05/07/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualIndex; \ingroup tree. Abstract interface for Tree Index; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualIndex.cxx:464,interface,interface,464,tree/tree/src/TVirtualIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualIndex.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/tree:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TLeaf; \ingroup tree. A TLeaf describes individual elements of a TBranch; See TBranch structure in TTree. A TTree object is a list of TBranch.; A TBranch object is a list of TLeaf. In most cases, the TBranch; will have one TLeaf.; A TLeaf describes the branch data types and holds the data. A few notes about the data held by the leaf. It can contain:; 1. a single object or primitive (e.g., one float),; 2. a fixed-number of objects (e.g., each entry has two floats).; The number of elements per entry is saved in `fLen`.; 3. a dynamic number of primitives. The number of objects in each; entry is saved in the `fLeafCount` branch. Note options (2) and (3) can combined - if fLeafCount says an entry; has 3 elements and fLen is 2, then there will be 6 objects in that; entry. Additionally, `fNdata` is transient and generated on read to; determine the necessary size of a buffer to hold event data;; depending on the call-site, it may be sized larger than the number; of elements. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeaf.cxx:1324,depend,depending,1324,tree/tree/src/TLeaf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeaf.cxx,1,['depend'],['depending']
Integrability,"// @(#)root/tree:$Id$; // Author: Rene Brun 30/08/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualTreePlayer; \ingroup tree. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx:491,interface,interface,491,tree/tree/src/TVirtualTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1007,interface,interface,1007,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // NOTE: This header is only used by selectors, to verify that the selector; // source matches the ROOT interface. It should not end up in the; // dictionary nor in the PCH, so it should not be added to the list; // of headers of the TreePlayer library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h:536,interface,interface,536,tree/treeplayer/inc/TBranchProxyTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h,1,['interface'],['interface']
Integrability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBranchProxyClassDescriptor; Hold the processed information about a TClass used in a TBranch while; TTreeProxyGenerator is parsing the TTree information.; Also contains the routine use to generate the appropriate code; fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:616,rout,routine,616,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBranchProxyDescriptor; /Hold the processed information about a TBranch while; /TTreeProxyGenerator is parsing the TTree information.; /Also contains the routine use to generate the appropriate code; /fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDescriptor.cxx:597,rout,routine,597,tree/treeplayer/src/TBranchProxyDescriptor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDescriptor.cxx,1,['rout'],['routine']
Integrability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:471,wrap,wrapper,471,tree/treeplayer/src/TTreeProxyGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx,1,['wrap'],['wrapper']
Integrability,"// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; //Author : Andrei Gheata 16/08/00; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, cha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:504,interface,interface,504,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/win32gdk:$Id$; // Author: Rene Brun, Olivier Couet, Fons Rademakers, Valeri Onuchin, Bertrand Bellenot 27/11/01; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /// \defgroup win32 Win32 backend; /// \brief Interface to Windows graphics.; /// \ingroup GraphicsBackends; /** \class TGWin32; \ingroup win32; This class is the basic interface to the Win32 graphics system.; It is an implementation of the abstract TVirtualX class. This code was initially developed in the context of HIGZ and PAW; by Olivier Couet (package X11INT).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:529,Interface,Interface,529,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"// @(#)root/win32gdk:$Id$; // Author: Valeriy Onuchin 08/08/2003; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGWin32ProxyBase; \ingroup win32. Proxy classes provide thread-safe interface to global objects. For example: TGWin32VirtualXProxy (to gVirtualX). Proxy object creates callback object and posts a windows message to; ""processing thread"". When windows message is received callback; (""real method"") is executed. For example:; gVirtualX->ClearWindow(). - callback object created containing pointer to function; corresponding TGWin32::ClearWindow() method; - message to ""processing thread"" (main thread) is posted; - TGWin32::ClearWindow() method is executed inside main thread; - thread containing gVirtualX proxy object waits for reply; from main thread that TGWin32::ClearWindow() is completed. Howto create proxy class:. 1. Naming.; name of proxy = TGWin32 + the name of ""virtual base class"" + Proxy. e.g. TGWin32VirtualXProxy = TGWin32 + VirtualX + Proxy. 2. Definition of global object; As example check definition and implementation of; gVirtualX global object. 3. Class definition.; proxy class must be inherited from ""virtual base class"" and; TGWin32ProxyBase class. For example:. class TGWin32VirtualX : public TVirtualX , public TGWin32ProxyBase. 4. Constructors, destructor, extra methods.; - constructors and destructor of proxy class do nothing; - proxy class must contain two extra static methods; RealObject(), ProxyObject(). Each of them return pointer to object; of virtual base class. For example:; static TVirtualX *RealObject();; static TVirtualX *ProxyObject();. 5. Implementation; TGWin32ProxyDefs.h file contains a set of macros which very; simpli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:503,interface,interface,503,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,4,"['interface', 'message']","['interface', 'message']"
Integrability,"// @(#)root/x11:$Id$; // Author: Rene Brun, Olivier Couet, Fons Rademakers 28/11/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /// \defgroup x11 X11 backend; /// \brief Interface to X11 graphics.; /// \ingroup GraphicsBackends; /** \class TGX11; \ingroup x11; This class is the basic interface to the X11 (Xlib) graphics system.; It is an implementation of the abstract TVirtualX class. This class gives access to basic X11 graphics, pixmap, text and font handling; routines. The companion class for Win32 is TGWin32. The file G11Gui.cxx contains the implementation of the GUI methods of the; TGX11 class. Most of the methods are used by the machine independent; GUI classes (libGUI.so). This code was initially developed in the context of HIGZ and PAW; by Olivier Couet (package X11INT).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:485,Interface,Interface,485,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,3,"['Interface', 'interface', 'rout']","['Interface', 'interface', 'routines']"
Integrability,"// @(#)root/x11ttf:$Id: 80028b538e60290371c1c5d73728f78b1c32f09a $; // Author: Valeriy Onuchin (Xft support) 02/10/07; // Author: Olivier Couet 01/10/02; // Author: Fons Rademakers 21/11/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGX11TTF; \ingroup x11. Interface to low level X11 (Xlib). This class gives access to basic; X11 graphics via the parent class TGX11. However, all text and font; handling is done via the Freetype TrueType library. When the; shared library containing this class is loaded the global gVirtualX; is redirected to point to this class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx:584,Interface,Interface,584,graf2d/x11ttf/src/TGX11TTF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx,1,['Interface'],['Interface']
Integrability,"// @(#)root/x3d:$Id$; // Author: Rene Brun 05/09/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TViewerX3D //; // //; // C++ interface to the X3D viewer //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:526,interface,interface,526,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,1,['interface'],['interface']
Integrability,"// @(#)root/xml:$Id: 1bd040ac1c03c58bcad15b5206d602680a831c0a $; // Author: Sergey Linev 10.05.2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //________________________________________________________________________; //; // TXMLEngine class is used to write and read ROOT XML files - TXMLFile.; // It does not conform to complete xml standard and cannot be used; // as parser for arbitrary XML files. For such cases TXMLParser should; // be used. This class was introduced to exclude dependency from; // external libraries (like libxml2) and improve speed / memory consumption.; //; //________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:802,depend,dependency,802,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['depend'],['dependency']
Integrability,"// @(#)root/xmlparser:$Id$; // Author: Jose Lo 12/1/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TSAXParser; \ingroup IO. TSAXParser is a subclass of TXMLParser, it is a wraper class to; libxml library.; SAX (Simple API for XML) is an event based interface, which doesn't; maintain the DOM tree in memory, in other words, it's much more; efficient for large document.; TSAXParserCallback contains a number of callback routines to the; parser in a xmlSAXHandler structure. The parser will then parse the; document and call the appropriate callback when certain conditions; occur.; */; /*************************************************************************; This source is based on libxml++, a C++ wrapper for the libxml XML; parser library.Copyright (C) 2000 by Ari Johnson. libxml++ are copyright (C) 2000 by Ari Johnson, and are covered by the; GNU Lesser General Public License, which should be included with; libxml++ as the file COPYING.; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:501,wrap,wraper,501,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,4,"['interface', 'rout', 'wrap']","['interface', 'routines', 'wraper', 'wrapper']"
Integrability,"// @(#)root/xmlparser:$Id$; // Author: Jose Lo 12/1/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TXMLParser; \ingroup IO. TXMLParser is an abstract class which interfaces with Libxml2.; Libxml2 is the XML C parser and toolkit developed for the Gnome; project.; The libxml library provides two interfaces to the parser, a DOM; style tree interface and a SAX style event based interface.; TXMLParser is parent class of TSAXParser and TDOMParser, which are; a SAX interface and DOM interface of libxml.; */; /*************************************************************************; This source is based on libxml++, a C++ wrapper for the libxml XML; parser library. Copyright (C) 2000 by Ari Johnson. libxml++ are copyright (C) 2000 by Ari Johnson, and are covered by the; GNU Lesser General Public License, which should be included with; libxml++ as the file COPYING.; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:491,interface,interfaces,491,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,7,"['interface', 'wrap']","['interface', 'interfaces', 'wrapper']"
Integrability,"// @(#)root/xmlparser:$Id$; // Author: Jose Lo 12/4/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TDomParser; \ingroup IO. DOM stands for the Document Object Model; this is an API for; accessing XML or HTML structured documents.; The Document Object Model is a platform and language-neutral; interface that will allow programs and scripts to dynamically; access and update the content, structure and style of documents. The parser returns a tree built during the document analysis.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx:622,interface,interface,622,io/xmlparser/src/TDOMParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx,1,['interface'],['interface']
Integrability,"// @interface name; // FIXME: Could introduce the whole pattern, including superclasses and; // such.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:4,interface,interface,4,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['interface'],['interface']
Integrability,// @protocol ( protocol-name ),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:4,protocol,protocol,4,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,2,['protocol'],"['protocol', 'protocol-name']"
Integrability,// @protocol name,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:4,protocol,protocol,4,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['protocol'],['protocol']
Integrability,// @synchronized ( expression ) { statements },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:4,synchroniz,synchronized,4,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['synchroniz'],['synchronized']
Integrability,// @synchronized hooks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:4,synchroniz,synchronized,4,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['synchroniz'],['synchronized']
Integrability,"// A (non-partition) module implementation unit requires that we are not; // compiling a module of any kind. A partition implementation emits an; // interface (and the AST for the implementation), which will subsequently; // be consumed to emit a binary.; // A module interface unit requires that we are not compiling a module map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:149,interface,interface,149,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,2,['interface'],['interface']
Integrability,"// A 32-bit (address + offset) should not cause unsigned 32-bit integer; // wraparound, because s_load instructions perform the addition in 64 bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelUtils.cpp:76,wrap,wraparound,76,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelUtils.cpp,2,['wrap'],['wraparound']
Integrability,"// A DFS traversal of GEP chain trees starting from Root.; //; // Recursion descends through GEP instructions and; // llvm.preserve.static.offset calls. Recursion stops at any other; // instruction. If load or store instruction is reached it is replaced; // by a call to `llvm.bpf.getelementptr.and.load` or; // `llvm.bpf.getelementptr.and.store` intrinsic.; // If `llvm.bpf.getelementptr.and.load/store` is reached the accumulated; // GEPs are merged into the intrinsic call.; // If nested calls to `llvm.preserve.static.offset` are encountered these; // calls are marked for deletion.; //; // Parameters description:; // - Insn - current position in the tree; // - GEPs - GEP instructions for the current branch; // - Visited - a list of visited instructions in DFS order,; // order is important for unused instruction deletion.; // - AllowPartial - when true GEP chains that can't be folded are; // not reported, otherwise diagnostic message is show for such chains.; // - StillUsed - set to true if one of the GEP chains could not be; // folded, makes sense when AllowPartial is false, means that root; // preserve.static.offset call is still in use and should remain; // until the next run of this pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp:937,message,message,937,interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,1,['message'],['message']
Integrability,// A DependentSizedArrayType might not have size expression as below; //; // template<int ...N> int arr[] = {N...};,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:5,Depend,DependentSizedArrayType,5,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['Depend'],['DependentSizedArrayType']
Integrability,"// A FileID is a (cached via ContentCache) SourceManager view of a; // FileManager::FileEntry (which is a wrapper on the file system file).; // In a subtle cases, code unloading can remove the cached region.; // However we are safe because it will empty the ContentCache and force; // the FileEntry to be re-read. It will keep the FileID intact and valid; // by design. When we reprocess the same (but modified) file it will get; // a new FileID. Then the Invalid flag will be false but the underlying; // buffer content will be empty. It will not compare equal to the lookup; // string and we will avoid using (a potentially broken) cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:106,wrap,wrapper,106,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['wrap'],['wrapper']
Integrability,"// A FriendDecl with a dependent type (e.g. ClassTemplateSpecialization); // always has that decl as child node.; // However, there are non-dependent cases which does not have the; // type as a child node. We have to dig up that type now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporterLookupTable.cpp:23,depend,dependent,23,interpreter/llvm-project/clang/lib/AST/ASTImporterLookupTable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporterLookupTable.cpp,2,['depend'],['dependent']
Integrability,// A HWPressureEvent describes an increase in backend pressure caused by; // the presence of data dependencies or unavailability of pipeline resources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:98,depend,dependencies,98,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['depend'],['dependencies']
Integrability,// A ON_CALL or EXPECT_CALL macro expands to different AST structures; // depending on whether the mock method has arguments or not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp:74,depend,depending,74,interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp,1,['depend'],['depending']
Integrability,"// A PHI node is allowed to have multiple (duplicated) entries for the same; // basic block, as long as the value is the same. So if we already injected; // a load in the predecessor, then we should reuse the same load for all; // duplicated entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:144,inject,injected,144,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['inject'],['injected']
Integrability,"// A RooAddPdf needs to have a normalization set defined, otherwise its; // coefficient will not be uniquely defined. Its shape depends on the; // normalization provided. Un-normalized calls to RooAddPdf can happen in; // Roofit, when printing the pdf's or when computing integrals. In these case,; // if the pdf has a normalization set previously defined (i.e. stored as a; // datamember in _copyOfLastNormSet) it should use it by default when the pdf; // is evaluated without passing a normalizations set (in pdf->getVal(nullptr) ); // In the case of no pre-defined normalization set exists, a warning will be; // produced, since the obtained value will be arbitrary. Note that to avoid; // unnecessary warning messages, when calling RooAbsPdf::printValue or; // RooAbsPdf::graphVizTree, the printing of the warning messages for the; // RooFit::Eval topic is explicitly disabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:128,depend,depends,128,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,3,"['depend', 'message']","['depends', 'messages']"
Integrability,"// A TableGen backend is a function that looks like; //; // EmitFoo(RecordKeeper &RK, raw_ostream &OS /*, anything else you need */ ); //; // What you do inside of that function is up to you, but it will usually; // involve generating C++ code to the provided raw_ostream.; //; // The RecordKeeper is just a top-level container for an in-memory; // representation of the data encoded in the TableGen file. What a TableGen; // backend does is walk around that in-memory representation and generate; // stuff based on the information it contains.; //; // The in-memory representation is a node-graph (think of it like JSON but; // with a richer ontology of types), where the nodes are subclasses of; // Record. The methods `getClass`, `getDef` are the basic interface to; // access the node-graph. RecordKeeper also provides a handy method; // `getAllDerivedDefinitions`. Consult ""include/llvm/TableGen/Record.h"" for; // the exact interfaces provided by Record's and RecordKeeper.; //; // A common pattern for TableGen backends is for the EmitFoo function to; // instantiate a class which holds some context for the generation process,; // and then have most of the work happen in that class's methods. This; // pattern partly has historical roots in the previous TableGen backend API; // that involved a class and an invocation like `FooEmitter(RK).run(OS)`.; //; // Remember to wrap private things in an anonymous namespace. For most; // backends, this means that the EmitFoo function is the only thing not in; // the anonymous namespace.; // FIXME: Reorganize TableGen so that build dependencies can be more; // accurately expressed. Currently, touching any of the emitters (or; // anything that they transitively depend on) causes everything dependent; // on TableGen to be rebuilt (this includes all the targets!). Perhaps have; // a standalone TableGen binary and have the backends be loadable modules; // of some sort; then the dependency could be expressed as being on the; // module, and all th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h:756,interface,interface,756,interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"// A \p tok::hashhash at this location is passed by the preprocessor to the; // parser to interpret, like any other token. So for dependency scanning; // skip it like a normal token not affecting the preprocessor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp:130,depend,dependency,130,interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,1,['depend'],['dependency']
Integrability,"// A bunch of other functions which either take ownership of a pointer or; // wrap the result up in a struct or object, meaning it can be freed later.; // (See RetainCountChecker.) Not all the parameters here are invalidated,; // but the Malloc checker cannot differentiate between them. The right way; // of doing this would be to implement a pointer escapes callback.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:78,wrap,wrap,78,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['wrap'],['wrap']
Integrability,// A category implicitly has the attribute of the interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:50,interface,interface,50,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['interface'],['interface']
Integrability,// A category implicitly has the availability of the interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:53,interface,interface,53,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['interface'],['interface']
Integrability,"// A check with similar intentions as checking if a type already has an; // address space except for on a dependent types, basically if the; // current type is already a DependentAddressSpaceType then its already; // lined up to have another address space on it and we can't have; // multiple address spaces on the one pointer indirection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:106,depend,dependent,106,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,2,"['Depend', 'depend']","['DependentAddressSpaceType', 'dependent']"
Integrability,// A circular dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:14,depend,dependence,14,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependence']
Integrability,// A class-scope deduction guide in a dependent context has a dependent name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp:38,depend,dependent,38,interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclarationName.cpp,2,['depend'],['dependent']
Integrability,// A clone of X86 since we can't depend on something that is generated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h:33,depend,depend,33,interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h,1,['depend'],['depend']
Integrability,// A combined space of all dependence concepts for all node types.; // Used when aggregating dependence of nodes of different types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:27,depend,dependence,27,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,2,['depend'],['dependence']
Integrability,"// A concrete implementation of the TestStatistic interface, useful for debugging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h:50,interface,interface,50,roofit/roostats/inc/RooStats/DebuggingTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h,1,['interface'],['interface']
Integrability,"// A constraint term is a p.d.f that doesn't contribute to the; // expectedEvents() and does not depend on any of the listed observables; // but does depends on any of the parameters that should be constrained",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:97,depend,depend,97,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['depend'],"['depend', 'depends']"
Integrability,// A convenient wrapper around ExprMutationAnalyzer for analyzing function; // params.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h:16,wrap,wrapper,16,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ExprMutationAnalyzer.h,1,['wrap'],['wrapper']
Integrability,"// A critical sequence is computed as the longest path from a node of the; // RootSet to a leaf node (i.e. a node with no successors). The RootSet is; // composed of nodes with at least one successor, and no predecessors.; //; // Each node of the graph starts with an initial default cost of zero. The; // cost of a node is a measure of criticality: the higher the cost, the bigger; // is the performance impact.; // For register and memory dependencies, the cost is a function of the write; // latency as well as the actual delay (in cycles) caused to users.; // For processor resource dependencies, the cost is a function of the resource; // pressure. Resource interferences with low frequency values are ignored.; //; // This algorithm is very similar to a (reverse) Dijkstra. Every iteration of; // the inner loop selects (i.e. visits) a node N from a set of `unvisited; // nodes`, and then propagates the cost of N to all its neighbors.; //; // The `unvisited nodes` set initially contains all the nodes from the; // RootSet. A node N is added to the `unvisited nodes` if all its; // predecessors have been visited already.; //; // For simplicity, every node tracks the number of unvisited incoming edges in; // field `NumVisitedPredecessors`. When the value of that field drops to; // zero, then the corresponding node is added to a `ToVisit` set.; //; // At the end of every iteration of the outer loop, set `ToVisit` becomes our; // new `unvisited nodes` set.; //; // The algorithm terminates when the set of unvisited nodes (i.e. our RootSet); // is empty. This algorithm works under the assumption that the graph is; // acyclic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp:441,depend,dependencies,441,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.cpp,2,['depend'],['dependencies']
Integrability,// A cumulative representation of InterFace stubs.; // Both textual and binary stubs will read into and write from this object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h:34,InterFace,InterFace,34,interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h,1,['InterFace'],['InterFace']
Integrability,"// A d j u s t g l o b a l 1 D i n t e g r a t i o n p r e c i s i o n; // ----------------------------------------------------------------------------; // Example: Change global precision for 1D integrals from 1e-7 to 1e-6; //; // The relative epsilon (change as fraction of current best integral estimate) and; // absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; // separately. For most p.d.f integrals the relative change criterium is the most important,; // however for certain non-p.d.f functions that integrate out to zero a separate absolute; // change criterium is necessary to declare convergence of the integral; //; // NB: This change is for illustration only. In general the precision should be at least 1e-7; // for normalization integrals for MINUIT to succeed.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:545,integrat,integrate,545,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrate']
Integrability,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:217,integrat,integration,217,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Integrability,"// A declaration is templated if it is a template or a template pattern, or; // is within (lexcially for a friend or local function declaration,; // semantically otherwise) a dependent context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp:175,depend,dependent,175,interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,1,['depend'],['dependent']
Integrability,// A dependency edge.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:5,depend,dependency,5,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependency']
Integrability,"// A dependency graph used by the bottleneck analysis to describe data; // dependencies and processor resource interferences between instructions.; //; // There is a node (an instance of struct DGNode) for every instruction in the; // input assembly sequence. Edges of the graph represent dependencies between; // instructions.; //; // Each edge of the graph is associated with a cost value which is used; // internally to rank dependency based on their impact on the runtime; // performance (see field DependencyEdge::Dependency::Cost). In general, the; // higher the cost of an edge, the higher the impact on performance.; //; // The cost of a dependency is a function of both the latency and the number of; // cycles where the dependency has been seen as critical (i.e. contributing to; // back-pressure increases).; //; // Loop carried dependencies are carefully expanded by the bottleneck analysis; // to guarantee that the graph stays acyclic. To this end, extra nodes are; // pre-allocated at construction time to describe instructions from ""past and; // future"" iterations. The graph is kept acyclic mainly because it simplifies; // the complexity of the algorithm that computes the critical sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:5,depend,dependency,5,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,9,"['Depend', 'depend']","['Dependency', 'DependencyEdge', 'dependencies', 'dependency']"
Integrability,"// A dependency-breaking instruction doesn't have to wait on the register; // input operands, and it is often optimized at register renaming stage.; // Update RAW dependencies if this instruction is not a dependency-breaking; // instruction. A dependency-breaking instruction is a zero-latency; // instruction that doesn't consume hardware resources.; // An example of dependency-breaking instruction on X86 is a zero-idiom XOR.; //; // We also don't update data dependencies for instructions that have been; // eliminated at register renaming stage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:5,depend,dependency-breaking,5,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,6,['depend'],"['dependencies', 'dependency-breaking']"
Integrability,"// A dependent function template specialization is an explicit specialization,; // except when it's a friend declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:5,depend,dependent,5,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['depend'],['dependent']
Integrability,// A dependent function that doesn't locally look defaultable can; // still instantiate to a defaultable function if it's a constructor; // or assignment operator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:5,depend,dependent,5,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,"// A dependent member: approximate-resolve the base, then lookup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:5,depend,dependent,5,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['depend'],['dependent']
Integrability,"// A dependent pointer type 'T *' has is being transformed such; // that an Objective-C class type is being replaced for 'T'. The; // resulting pointer type is an ObjCObjectPointerType, not a; // PointerType.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:5,depend,dependent,5,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['depend'],['dependent']
Integrability,// A dependent qualifier outside a class can only ever resolve to an; // enumeration type. Therefore it conflicts with any other non-type; // declaration in the same scope.; // FIXME: How should we check for dependent type-type conflicts at block; // scope?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:5,depend,dependent,5,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['depend'],['dependent']
Integrability,"// A dependent type (uninstantiated template), skip it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:5,depend,dependent,5,core/metacling/src/TClingBaseClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx,1,['depend'],['dependent']
Integrability,// A dependent using declaration which was marked with 'typename'.; // template<class T> class A : public B<T> { using typename B<T>::foo; };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:5,depend,dependent,5,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['depend'],['dependent']
Integrability,"// A diagnostic has severity, location (4), category, flag, and message; // size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp:64,message,message,64,interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp,1,['message'],['message']
Integrability,// A fixit has two locations (4 each) and message size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp:42,message,message,42,interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticReader.cpp,1,['message'],['message']
Integrability,// A fold expression may contain `Exp` as it's initializer.; // We don't know if the operator modifies `Exp` because the; // operator is type dependent due to the parameter pack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ExprMutationAnalyzer.cpp:142,depend,dependent,142,interpreter/llvm-project/clang/lib/Analysis/ExprMutationAnalyzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ExprMutationAnalyzer.cpp,1,['depend'],['dependent']
Integrability,"// A function that advances TEntryList and returns global entry numbers or -1 if we reached the end; // (might or might not need a TChain depending on whether listHasGlobalEntryNumbers)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:138,depend,depending,138,tree/treeplayer/src/TTreeProcessorMT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx,1,['depend'],['depending']
Integrability,"// A gcc tool has an ""integrated"" assembler that it will call to produce an; // object. Let it use that assembler so that we don't have to deal with; // assembly syntax incompatibilities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h:22,integrat,integrated,22,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.h,1,['integrat'],['integrated']
Integrability,// A generic message if we're not sure what API should be called.; // FIXME: Pattern-match the integer type to make a better guess?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp:13,message,message,13,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp,1,['message'],['message']
Integrability,"// A generic, speed-optimised mapping from value to RGBA color supporting different wrapping and range truncation modes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveRGBAPalette.h:84,wrap,wrapping,84,graf3d/eve/inc/TEveRGBAPalette.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveRGBAPalette.h,1,['wrap'],['wrapping']
Integrability,"// A guess at how many times we will enter the initialization of a; // variable, depending on the kind of variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:81,depend,depending,81,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['depend'],['depending']
Integrability,// A has a store dependence on B (or on some load within GroupB) and; // is part of a store group. Release A's group to prevent illegal; // sinking of A below B. A will then be free to form another group; // with instructions that precede it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:17,depend,dependence,17,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['depend'],['dependence']
Integrability,// A helper class for defining ObjC TypeLocs that can qualified with; // protocols.; //; // TypeClass basically has to be either ObjCInterfaceType or; // ObjCObjectPointerType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h:73,protocol,protocols,73,interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,1,['protocol'],['protocols']
Integrability,"// A helper routine for the above expandAtomic*ToLibcall functions.; //; // 'Libcalls' contains an array of enum values for the particular; // ATOMIC libcalls to be emitted. All of the other arguments besides; // 'I' are extracted from the Instruction subclass by the; // caller. Depending on the particular call, some will be null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:12,rout,routine,12,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,2,"['Depend', 'rout']","['Depending', 'routine']"
Integrability,"// A list of dependent reads. Users is a set of dependent; // reads. A dependent read is added to the set only if CyclesLeft; // is ""unknown"". As soon as CyclesLeft is 'known', each user in the set; // gets notified with the actual CyclesLeft.; // The 'second' element of a pair is a ""ReadAdvance"" number of cycles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:13,depend,dependent,13,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,3,['depend'],['dependent']
Integrability,// A little helper routine: ignore addition and subtraction of integer literals.; // This intentionally does not ignore all integer constant expressions because; // we don't want to remove sizeof().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:19,rout,routine,19,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['rout'],['routine']
Integrability,// A loop is moved from index 'from' to an index 'to'. Update the Dependence; // matrix by exchanging the two columns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:66,Depend,Dependence,66,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['Depend'],['Dependence']
Integrability,// A map from instructions to their dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:36,depend,dependency,36,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,1,['depend'],['dependency']
Integrability,// A map from instructions to their non-local dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:46,depend,dependencies,46,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,1,['depend'],['dependencies']
Integrability,// A map from instructions to their non-local pointer dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:54,depend,dependencies,54,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,1,['depend'],['dependencies']
Integrability,// A map with control-dependent ranges for post increment IV uses. The key is; // a pair of IV def and a use of this def denoting the context. The value is; // a ConstantRange representing possible values of the def at the given; // context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:22,depend,dependent,22,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['depend'],['dependent']
Integrability,"// A message dialog box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGMsgBox.h:5,message,message,5,gui/gui/inc/TGMsgBox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGMsgBox.h,1,['message'],['message']
Integrability,// A method in a category declaration overrides declarations from; // the main class and from protocols the category references.; // The main class is handled in the constructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:94,protocol,protocols,94,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,// A method in a class implementation overrides declarations from; // the class interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:80,interface,interface,80,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// A method in a protocol declaration overrides declarations from; // referenced (""parent"") protocols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:17,protocol,protocol,17,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,['protocol'],"['protocol', 'protocols']"
Integrability,// A module implementation unit has visibility of the decls in its; // implicitly imported interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:91,interface,interface,91,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['interface'],['interface']
Integrability,// A more flexible cost calculation for the critical path includes the slack; // of the original code sequence. This may allow the transform to proceed; // even if the instruction depths (data dependency cycles) become worse.; // Account for the latency of the inserted and deleted instructions by,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp:193,depend,dependency,193,interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,1,['depend'],['dependency']
Integrability,"// A new load group is created if we are in one of the following situations:; // 1) This is a load barrier (by construction, a load barrier is always; // assigned to a different memory group).; // 2) There is no load in flight (by construction we always keep loads and; // stores into separate memory groups).; // 3) There is a load barrier in flight. This load depends on it.; // 4) There is an intervening store between the last load dispatched to the; // LSU and this load. We always create a new group even if this load; // does not alias the last dispatched store.; // 5) There is no intervening store and there is an active load group.; // However that group has already started execution, so we cannot add; // this load to it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/LSUnit.cpp:362,depend,depends,362,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/LSUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/LSUnit.cpp,1,['depend'],['depends']
Integrability,"// A node from the parallel world contains the point -> stop the search; // and synchronize with navigation state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx:80,synchroniz,synchronize,80,geom/geom/src/TGeoNavigator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNavigator.cxx,1,['synchroniz'],['synchronize']
Integrability,// A noexcept(expr) specification is (possibly) canonical if expr is; // value-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:79,depend,dependent,79,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['depend'],['dependent']
Integrability,"// A non-export depends on us. Skip export grouping.; // Note that this is a bit pessimistic: We could still group all other; // exports that are not depended on by non-exports, directly or; // indirectly. Simply skipping this particular export but grouping all; // others would not account for indirect dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:16,depend,depends,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,3,['depend'],"['depended', 'dependencies', 'depends']"
Integrability,// A non-template function which is in a dependent scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:41,depend,dependent,41,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['depend'],['dependent']
Integrability,"// A note on note{Pre, Post}{Use, Mod}:; //; // (It helps to follow the algorithm with an expression such as; // ""((++k)++, k) = k"" or ""k = (k++, k++)"". Both contain unsequenced; // operations before C++17 and both are well-defined in C++17).; //; // When visiting a node which uses/modify an object we first call notePreUse; // or notePreMod before visiting its sub-expression(s). At this point the; // children of the current node have not yet been visited and so the eventual; // uses/modifications resulting from the children of the current node have not; // been recorded yet.; //; // We then visit the children of the current node. After that notePostUse or; // notePostMod is called. These will 1) detect an unsequenced modification; // as side effect (as in ""k++ + k"") and 2) add a new usage with the; // appropriate usage kind.; //; // We also have to be careful that some operation sequences modification as; // side effect as well (for example: || or ,). To account for this we wrap; // the visitation of such a sub-expression (for example: the LHS of || or ,); // with SequencedSubexpression. SequencedSubexpression is an RAII object; // which record usages which are modifications as side effect, and then; // downgrade them (or more accurately restore the previous usage which was a; // modification as side effect) when exiting the scope of the sequenced; // subexpression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:989,wrap,wrap,989,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['wrap'],['wrap']
Integrability,// A null-terminated array of protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:30,protocol,protocols,30,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['protocol'],['protocols']
Integrability,"// A pack expansion with a non-dependent pattern is still dependent,; // because we don't know whether the pattern is in the exception spec; // or not (that depends on whether the pack has 0 expansions).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:31,depend,dependent,31,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,3,['depend'],"['dependent', 'depends']"
Integrability,// A partial register write cannot complete before a dependent write.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp:53,depend,dependent,53,interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Instruction.cpp,2,['depend'],['dependent']
Integrability,// A partial write that is in a false dependency with this write.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:38,depend,dependency,38,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['depend'],['dependency']
Integrability,// A pass for testing message reporting of -verify-each failures.; // DO NOT USE THIS EXCEPT FOR TESTING!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:22,message,message,22,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,1,['message'],['message']
Integrability,"// A possible improvement is to handle the calls with the return value being; // used. If there is API for fast libcall implementation without setting; // errno, we can use the same framework to direct/wrap the call to the fast; // API in the error free path, and leave the original call in the slow path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp:202,wrap,wrap,202,interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,1,['wrap'],['wrap']
Integrability,"// A release fence requires that all stores complete before it, but does; // not prevent the reordering of following loads or stores 'before' the; // fence. As a result, we look past it when finding a dependency for; // loads. DSE uses this to find preceding stores to delete and thus we; // can't bypass the fence if the query instruction is a store.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:201,depend,dependency,201,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// A result of any operation should use refs to the source cells, not; // the cells directly. This function is a convenience wrapper to quickly; // generate a ref for a cell corresponding to a register reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h:125,wrap,wrapper,125,interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/BitTracker.h,1,['wrap'],['wrapper']
Integrability,// A reverse mapping from dependencies to the dependees. This is; // used when removing instructions to keep the cache coherent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:26,depend,dependencies,26,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,2,['depend'],"['dependees', 'dependencies']"
Integrability,// A reverse mapping from dependencies to the non-local dependees.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h:26,depend,dependencies,26,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryDependenceAnalysis.h,2,['depend'],"['dependees', 'dependencies']"
Integrability,"// A scope will be printed depending on the following rules:; // - Request to print scopes.; // - Request to print any of its children.; // - If the scope is Root or CompileUnit:; // Request to print summary, sizes or warnings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp:27,depend,depending,27,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,1,['depend'],['depending']
Integrability,// A self-debugging facility that you can use to notify the user when; // suggestions or fixits are incomplete.; // Uses std::function to avoid computing the message when it won't; // actually be displayed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h:158,message,message,158,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/UnsafeBufferUsage.h,1,['message'],['message']
Integrability,"// A sequence number, injected into IR builtin functions, to; // prevent CSE given the only difference of the function; // may just be the debuginfo metadata.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:22,inject,injected,22,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['inject'],['injected']
Integrability,"// A simple implementation of the DistributionCreator interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h:54,interface,interface,54,roofit/roostats/inc/RooStats/DebuggingSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h,1,['interface'],['interface']
Integrability,"// A simple implementation of the TestStatSampler interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h:50,interface,interface,50,roofit/roostats/inc/RooStats/ToyMCSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h,1,['interface'],['interface']
Integrability,"// A simple interface to read trees",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:12,interface,interface,12,tree/treeplayer/inc/TTreeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h,1,['interface'],['interface']
Integrability,"// A simple interface to read trees via bulk I/O",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:12,interface,interface,12,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,1,['interface'],['interface']
Integrability,"// A simple table that owns it's interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSimpleTable.h:33,interface,interface,33,gui/gui/inc/TGSimpleTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSimpleTable.h,1,['interface'],['interface']
Integrability,"// A simple wrapper to use a ModelConfig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx:12,wrap,wrapper,12,roofit/histfactory/src/HistFactoryNavigation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryNavigation.cxx,1,['wrap'],['wrapper']
Integrability,"// A slidedown/slideup with an *undefined* merge op can freely clobber; // elements not copied from the source vector (e.g. masked off, tail, or; // slideup's prefix). Notes:; // * We can't modify SEW here since the slide amount is in units of SEW.; // * VL=1 is special only because we have existing support for zero vs; // non-zero VL. We could generalize this if we had a VL > C predicate.; // * The LMUL1 restriction is for machines whose latency may depend on VL.; // * As above, this is only legal for tail ""undefined"" not ""agnostic"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp:455,depend,depend,455,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertVSETVLI.cpp,1,['depend'],['depend']
Integrability,"// A splat of an inserted scalar constant becomes a vector constant:; // shuf (inselt ?, C, IndexC), undef, <IndexC, IndexC...> --> <C, C...>; // NOTE: We may have commuted above, so analyze the updated Indices, not the; // original mask constant.; // NOTE: This transformation depends on the value of the mask which is not; // known at compile time for scalable vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:278,depend,depends,278,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['depend'],['depends']
Integrability,// A sub-routine of createFromLayers() that deals with temporary objects; // that need to be bound for destruction. Automatically finds out if the; // object also needs to be materialized and delegates to; // createMaterializedTemporaryFromLayers() if necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:9,rout,routine,9,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,1,['rout'],['routine']
Integrability,// A sub-routine of createFromLayers() that deals with temporary objects; // that need to be materialized. The BTE argument is for the situation when; // the object also needs to be bound for destruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:9,rout,routine,9,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,1,['rout'],['routine']
Integrability,// A top-level expression that's not <expr-primary> needs to be wrapped in; // X...E in a template arg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:64,wrap,wrapped,64,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['wrap'],['wrapped']
Integrability,// A top-level expression that's not a primary expression is wrapped in X...E.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:61,wrap,wrapped,61,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['wrap'],['wrapped']
Integrability,// A top-level module might not be actually imported as a module when; // -fmodule-name is used to compile a translation unit that imports this; // module. In that case it can be skipped. The appropriate header; // dependencies will still be reported as expected.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp:215,depend,dependencies,215,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,1,['depend'],['dependencies']
Integrability,"// A trivial memory manager that doesn't do anything fancy, just uses the; // support library allocation routines directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rtdyld/llvm-rtdyld.cpp:105,rout,routines,105,interpreter/llvm-project/llvm/tools/llvm-rtdyld/llvm-rtdyld.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rtdyld/llvm-rtdyld.cpp,1,['rout'],['routines']
Integrability,// A type parameter list must be followed by either a ':' (indicating the; // presence of a superclass) or a '(' (indicating that this is a category; // or extension). This disambiguates between an objc-type-parameter-list; // and a objc-protocol-refs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:238,protocol,protocol-refs,238,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['protocol'],['protocol-refs']
Integrability,"// A vector must always be stored in memory as-is, i.e. without any padding; // between the elements, since various code depend on it, e.g. in the; // handling of a bitcast of a vector type to int, which may be done with a; // vector store followed by an integer load. A vector that does not have; // elements that are byte-sized must therefore be stored as an integer; // built out of the extracted vector elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:121,depend,depend,121,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,3,['depend'],['depend']
Integrability,// A view over an MCInstrDesc offering a convenient interface to compute; // Register aliasing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h:52,interface,interface,52,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,1,['interface'],['interface']
Integrability,"// A wrapper around SCEV::isKnownPredicate.; // Looks for cases where we're interested in comparing for equality.; // If both X and Y have been identically sign or zero extended,; // it strips off the (confusing) extensions before invoking; // SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package; // will be similarly updated.; //; // If SCEV::isKnownPredicate can't prove the predicate,; // we try simple subtraction, which seems to help in some cases; // involving symbolics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:5,wrap,wrapper,5,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['wrap'],['wrapper']
Integrability,"// A wrapper around the inner loop of an ATOMIC_CMP_SWAP.; //; // Operand 0: the address of the containing 32-bit-aligned field; // Operand 1: the compare value, in the low bits of an i32; // Operand 2: the swap value, in the low bits of an i32; // Operand 3: how many bits to rotate the i32 left to bring the first; // operand into the high bits; // Operand 4: the negative of operand 2, for rotating the other way; // Operand 5: the width of the field in bits (8 or 16)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h:5,wrap,wrapper,5,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,1,['wrap'],['wrapper']
Integrability,"// A wrapper class for FTFont.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLFontManager.h:5,wrap,wrapper,5,graf3d/gl/inc/TGLFontManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLFontManager.h,1,['wrap'],['wrapper']
Integrability,// A wrapper class to abstract writer stream with support of bytes; // back patching.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp:5,wrap,wrapper,5,interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProfWriter.cpp,1,['wrap'],['wrapper']
Integrability,// A wrapper function for checking the semantic restrictions of; // a redeclaration within a module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:5,wrap,wrapper,5,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['wrap'],['wrapper']
Integrability,// A wrapper function that does the actual work.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp:5,wrap,wrapper,5,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp,1,['wrap'],['wrapper']
Integrability,"// A zero step value for LHS means the induction variable is essentially a; // loop invariant value. We don't really depend on the predicate actually; // flipping from false to true (for increasing predicates, and the other way; // around for decreasing predicates), all we care about is that *if* the; // predicate changes then it only changes from false to true.; //; // A zero step value in itself is not very useful, but there may be places; // where SCEV can prove X >= 0 but not prove X > 0, so it is helpful to be; // as general as possible.; // Only handle LE/LT/GE/GT predicates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:117,depend,depend,117,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['depend'],['depend']
Integrability,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,depend,dependents,21,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,13,"['depend', 'integrat']","['dependents', 'integrated', 'integrating', 'integration']"
Integrability,"// AAPCS guarantees that sp will be 8-byte aligned on any public interface,; // however this is not necessarily true on taking any interrupt. Instruct; // the backend to perform a realignment as part of the function prologue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp:65,interface,interface,65,interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/ARM.cpp,1,['interface'],['interface']
Integrability,"// AAResults preserves the AAManager by default, due to the stateless nature; // of AliasAnalysis. There is no need to check whether it has been preserved; // explicitly. Check if any module dependency was invalidated and caused the; // AAManager to be invalidated. Invalidate ourselves in that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:191,depend,dependency,191,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// AArch64 high-vector ""long"" operations are formed by performing the non-high; // version on an extract_subvector of each operand which gets the high half:; //; // (longop2 LHS, RHS) == (longop (extract_high LHS), (extract_high RHS)); //; // However, there are cases which don't have an extract_high explicitly, but; // have another operation that can be made compatible with one for free. For; // example:; //; // (dupv64 scalar) --> (extract_high (dup128 scalar)); //; // This routine does the actual conversion of such DUPs, once outer routines; // have determined that everything else is in order.; // It also supports immediate DUP-like nodes (MOVI/MVNi), which we can fold; // similarly here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:480,rout,routine,480,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['rout'],"['routine', 'routines']"
Integrability,"// AArch64 mandates that the RHS of the operation must use the smallest; // register class that could contain the size being extended from. Thus,; // if we're folding a (sext i8), we need the RHS to be a GPR32, even though; // there might not be an actual 32-bit value in the program. We can; // (harmlessly) synthesize one by injected an EXTRACT_SUBREG here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:327,inject,injected,327,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['inject'],['injected']
Integrability,"// ABC defining interface JDL generator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJDL.h:16,interface,interface,16,net/net/inc/TGridJDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJDL.h,1,['interface'],['interface']
Integrability,"// ABC defining interface to GRID result set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridResult.h:16,interface,interface,16,net/net/inc/TGridResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridResult.h,1,['interface'],['interface']
Integrability,"// ABC defining interface to a GRID job",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJob.h:16,interface,interface,16,net/net/inc/TGridJob.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJob.h,1,['interface'],['interface']
Integrability,"// ABC defining interface to a stager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h:16,interface,interface,16,net/net/inc/TFileStager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h,1,['interface'],['interface']
Integrability,"// AIX debug for thread local location is not ready. And for integrated as; // mode, the relocatable address for the thread local variable will cause; // linker error. So disable the location attribute generation for thread local; // variables for now.; // FIXME: when TLS debug on AIX is ready, remove this setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:61,integrat,integrated,61,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['integrat'],['integrated']
Integrability,// AMD GPUs do not depend on CUDA versions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Cuda.cpp:19,depend,depend,19,interpreter/llvm-project/clang/lib/Basic/Cuda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Cuda.cpp,2,['depend'],['depend']
Integrability,"// AMT: temporary workaround till root pactches are integrated in CMSSW",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h:52,integrat,integrated,52,graf3d/eve/inc/TEveProjections.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveProjections.h,1,['integrat'],['integrated']
Integrability,// AR may wrap. Add PN >= StartValue conditional on StartValue <= B which; // guarantees that the loop exits before wrapping in combination with the; // restrictions on B and the step above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:10,wrap,wrap,10,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,2,['wrap'],"['wrap', 'wrapping']"
Integrability,// AR may wrap.; // Add StartValue >= PN conditional on B <= StartValue which guarantees that; // the loop exits before wrapping with a step of -1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:10,wrap,wrap,10,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,2,['wrap'],"['wrap', 'wrapping']"
Integrability,// ARC managed blocks can be initialized on stack or directly in heap; // depending on the implementations. So we initialize them with; // UnknownRegion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:74,depend,depending,74,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,1,['depend'],['depending']
Integrability,"// Above the cutoff, we give a cost to each private memory object; // depending its size. If the array can be optimized by SROA this cost is not; // added to the total-cost in the inliner cost analysis.; //; // We choose the total cost of the alloca such that their sum cancels the; // bonus given in the threshold (ArgAllocaCost).; //; // Cost_Alloca_0 + ... + Cost_Alloca_N == ArgAllocaCost; //; // Awkwardly, the ArgAllocaCost bonus is multiplied by threshold-multiplier,; // the single-bb bonus and the vector-bonus.; //; // We compensate the first two multipliers, by repeating logic from the; // inliner-cost in here. The vector-bonus is 0 on AMDGPU.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp:70,depend,depending,70,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,1,['depend'],['depending']
Integrability,"// Abstract PROOF manager interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofMgr.h:26,interface,interface,26,proof/proof/inc/TProofMgr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofMgr.h,1,['interface'],['interface']
Integrability,"// Abstract class that defines interface for a state of recorder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:31,interface,interface,31,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['interface'],['interface']
Integrability,"// Abstract class. Defines basic interface for storing information about ROOT events",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:33,interface,interface,33,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['interface'],['interface']
Integrability,"// Abstract input interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h:18,interface,interface,18,core/textinput/src/textinput/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h,1,['interface'],['interface']
Integrability,"// Abstract interface for displaying text.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h:12,interface,interface,12,core/textinput/src/textinput/Display.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Display.h,1,['interface'],['interface']
Integrability,"// Abstract interface for geometry converters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoConverter.h:12,interface,interface,12,geom/geom/inc/TVirtualGeoConverter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoConverter.h,1,['interface'],['interface']
Integrability,"// Abstract interface for geometry painters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h:12,interface,interface,12,geom/geom/inc/TVirtualGeoPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TVirtualGeoPainter.h,1,['interface'],['interface']
Integrability,"// Abstract interface for plotable objects in a RooPlot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlotable.h:12,interface,interface,12,roofit/roofitcore/inc/RooPlotable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlotable.h,1,['interface'],['interface']
Integrability,"// Abstract interface for shared property implementations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSharedProperties.h:12,interface,interface,12,roofit/roofitcore/inc/RooSharedProperties.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSharedProperties.h,1,['interface'],['interface']
Integrability,"// Abstract interface for tables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTable.h:12,interface,interface,12,roofit/roofitcore/inc/RooTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTable.h,1,['interface'],['interface']
Integrability,"// Abstract interface to 3D viewers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualViewer3D.h:12,interface,interface,12,core/base/inc/TVirtualViewer3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualViewer3D.h,1,['interface'],['interface']
Integrability,"// Abstract interface to magnetic field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrackPropagator.h:12,interface,interface,12,graf3d/eve/inc/TEveTrackPropagator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrackPropagator.h,1,['interface'],['interface']
Integrability,"// Abstract method from TGLLogicalShape:; // virtual void DirectDraw(TGLRnrCtx & rnrCtx) const = 0;; // Interface to class .vs. classGL map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLObject.h:104,Interface,Interface,104,graf3d/gl/inc/TGLObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLObject.h,1,['Interface'],['Interface']
Integrability,"// Abstract proxy interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsProxy.h:18,interface,interface,18,roofit/roofitcore/inc/RooAbsProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsProxy.h,1,['interface'],['interface']
Integrability,"// Abtract interface for setting the color of text.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:11,interface,interface,11,core/textinput/src/textinput/Color.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h,1,['interface'],['interface']
Integrability,// Abuse this interface function as a place to finalize.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:14,interface,interface,14,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['interface'],['interface']
Integrability,"// Accept message type specification",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h:10,message,message,10,tmva/tmva/inc/TMVA/MsgLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MsgLogger.h,1,['message'],['message']
Integrability,// Accept template arguments for now as they depend on something else.; // We'll get to check them when they eventually get instantiated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:45,depend,depend,45,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,3,['depend'],['depend']
Integrability,"// Access to the Processor Version Register (PVR) on PowerPC is privileged,; // and so we must use an operating-system interface to determine the current; // processor type. On Linux, this is exposed through the /proc/cpuinfo file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:119,interface,interface,119,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['interface'],['interface']
Integrability,"// Accessibility depends on the parent (class, structure).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp:17,depend,depends,17,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVScope.cpp,2,['depend'],['depends']
Integrability,"// Accessor for generator context, generator parameters, prototype data and projected dependents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h:86,depend,dependents,86,roofit/roofitcore/inc/RooAbsMCStudyModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h,1,['depend'],['dependents']
Integrability,// Accessor interface:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DominanceFrontier.h:12,interface,interface,12,interpreter/llvm-project/llvm/include/llvm/Analysis/DominanceFrontier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DominanceFrontier.h,1,['interface'],['interface']
Integrability,"// Accessors can be wrapped in a try-catch block, so throwing the; // exception here is akin to checking the error.; //; // Setting fIsChecked to true also avoids a spurious warning in the RResult destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx:20,wrap,wrapped,20,core/foundation/v7/inc/ROOT/RError.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/v7/inc/ROOT/RError.hxx,1,['wrap'],['wrapped']
Integrability,"// According to Sema::BuildTypeTrait(), if E is value-dependent,; // Value is always false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:54,depend,dependent,54,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['depend'],['dependent']
Integrability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:83,interoperab,interoperability,83,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['interoperab'],['interoperability']
Integrability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.; // Decode DW_OP_constu <DWARF Address Space> DW_OP_swap DW_OP_xderef; // sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:83,interoperab,interoperability,83,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['interoperab'],['interoperability']
Integrability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:83,interoperab,interoperability,83,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['interoperab'],['interoperability']
Integrability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address. Decode DW_OP_constu <DWARF Address Space> DW_OP_swap; // DW_OP_xderef sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:83,interoperab,interoperability,83,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['interoperab'],['interoperability']
Integrability,"// ActOnClassMessage - used for both unary and keyword messages.; // ArgExprs is optional - if it is present, the number of expressions; // is obtained from Sel.getNumArgs().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:55,message,messages,55,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['message'],['messages']
Integrability,"// ActOnInstanceMessage - used for both unary and keyword messages.; // ArgExprs is optional - if it is present, the number of expressions; // is obtained from Sel.getNumArgs().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:58,message,messages,58,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['message'],['messages']
Integrability,"// Action depend on type of list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:10,depend,depend,10,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['depend'],['depend']
Integrability,"// Action depends on option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:10,depend,depends,10,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['depend'],['depends']
Integrability,"// Action depends on the type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:10,depend,depends,10,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,2,['depend'],['depends']
Integrability,"// Activate C++ modules support. If we are running within rootcling, it's up; // to rootcling to set this flag depending on whether it wants to produce; // C++ modules.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:111,depend,depending,111,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['depend'],['depending']
Integrability,// Adapter class to llvm::support::endian::Writer for pwrite().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp:3,Adapter,Adapter,3,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,1,['Adapter'],['Adapter']
Integrability,"// Adapter for a VecGeom shape",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h:3,Adapter,Adapter,3,geom/vecgeom/inc/TGeoVGShape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h,1,['Adapter'],['Adapter']
Integrability,"// Add DAG dependencies and track which edges are added, and the count of; // missed edges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:11,depend,dependencies,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['depend'],['dependencies']
Integrability,"// Add DAG dependencies from all SUnits in this SchedGroup and this SU. If; // MakePred is true, SU will be a predecessor of the SUnits in this; // SchedGroup, otherwise SU will be a successor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:11,depend,dependencies,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['depend'],['dependencies']
Integrability,// Add DAG dependencies from all SUnits in this SchedGroup and this SU.; // Use the predicate to determine whether SU should be a predecessor (P =; // true) or a successor (P = false) of this SchedGroup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:11,depend,dependencies,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['depend'],['dependencies']
Integrability,// Add DAG dependencies such that SUnits in this group shall be ordered; // before SUnits in OtherGroup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:11,depend,dependencies,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['depend'],['dependencies']
Integrability,// Add FRM dependency to any instructions with dynamic rounding mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:11,depend,dependency,11,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['depend'],['dependency']
Integrability,// Add a categories protocol methods.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:20,protocol,protocol,20,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['protocol'],['protocol']
Integrability,// Add a chain edge to a dependent Phi that isn't an existing; // predecessor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:25,depend,dependent,25,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,2,['depend'],['dependent']
Integrability,// Add a data dependency to reflect that NewSU reads the value defined; // by LoadSU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:14,depend,dependency,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependency']
Integrability,// Add a dependence between the new instruction and the instruction; // that defines the new base.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:9,depend,dependence,9,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependence']
Integrability,// Add a dependence to ensure updates if the state changes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:9,depend,dependence,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['depend'],['dependence']
Integrability,// Add a leading comma if this is not the first protocol rendered.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:48,protocol,protocol,48,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,1,['protocol'],['protocol']
Integrability,"// Add a special completion for a message send to ""super"", which fills in the; // most likely case of forwarding all of our arguments to the superclass; // function.; ///; /// \param S The semantic analysis object.; ///; /// \param NeedSuperKeyword Whether we need to prefix this completion with; /// the ""super"" keyword. Otherwise, we just need to provide the arguments.; ///; /// \param SelIdents The identifiers in the selector that have already been; /// provided as arguments for a send to ""super"".; ///; /// \param Results The set of results to augment.; ///; /// \returns the Objective-C method declaration that would be invoked by; /// this ""super"" completion. If NULL, no completion was added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:34,message,message,34,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['message'],['message']
Integrability,// Add a wrapper.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:9,wrap,wrapper,9,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,1,['wrap'],['wrapper']
Integrability,// Add all abstract attributes that are potentially dependent on one that; // changed to the work list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:52,depend,dependent,52,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['depend'],['dependent']
Integrability,"// Add all nodes that depend on selected nodes by value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:22,depend,depend,22,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['depend'],['depend']
Integrability,"// Add all of the categories that have corresponding interface; // declarations in this class and any of its superclasses, except for; // already-implemented categories in the class itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:53,interface,interface,53,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['interface'],['interface']
Integrability,"// Add all of the factory methods in this Objective-C class, its protocols,; // superclasses, categories, implementation, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:65,protocol,protocols,65,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['protocol'],['protocols']
Integrability,// Add all of the protocols for the LHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:18,protocol,protocols,18,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocols']
Integrability,// Add all of the protocols for the RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:18,protocol,protocols,18,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocols']
Integrability,// Add all protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:11,protocol,protocols,11,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,2,['protocol'],['protocols']
Integrability,// Add all referenced protocols to a category.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:22,protocol,protocols,22,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['protocol'],['protocols']
Integrability,// Add all the dependences from the device linking actions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:15,depend,dependences,15,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['dependences']
Integrability,"// Add all the required instructions to the block; // These cannot live in another block (because they; // depend (order dependency) on one of the; // instruction in the block, and are required for the; // high latency instruction we add.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:107,depend,depend,107,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,2,['depend'],"['depend', 'dependency']"
Integrability,"// Add an EOF pattern for any trailing --implicit-check-not/CHECK-DAG/-NOTs,; // and use the first prefix as a filler for the error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:132,message,message,132,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['message'],['message']
Integrability,// Add an interface stubs merge action if necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:10,interface,interface,10,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,2,['interface'],['interface']
Integrability,// Add an output dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:17,depend,dependence,17,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependence']
Integrability,// Add any functions found via argument-dependent lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:40,depend,dependent,40,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['depend'],['dependent']
Integrability,// Add any offload action the host action depends on.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:42,depend,depends,42,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['depends']
Integrability,"// Add any synthesized methods to the global pool. This allows us to; // handle the following, which is supported by GCC (and part of the design).; //; // @interface Foo; // @property double bar;; // @end; //; // void thisIsUnfortunate() {; // id foo;; // double bar = [foo bar];; // }; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:156,interface,interface,156,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['interface'],['interface']
Integrability,// Add back-edges in the adjacency matrix for the output dependences.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:57,depend,dependences,57,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependences']
Integrability,"// Add category dependent of LValueReal used in integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:16,depend,dependent,16,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,// Add code to pass special inputs required depending on used features separate; // from the explicit user arguments present in the IR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:44,depend,depending,44,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['depend'],['depending']
Integrability,// Add cuda_wrappers/* to our system include path. This lets us wrap; // standard library headers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp:64,wrap,wrap,64,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,1,['wrap'],['wrap']
Integrability,"// Add current root to PendingChains, unless we already indirectly; // depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:71,depend,depend,71,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['depend'],['depend']
Integrability,// Add data dependence to all uses we found so far.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:12,depend,dependence,12,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependence']
Integrability,"// Add default extensions for the given CPU. Records the base architecture,; // to later resolve dependencies which depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:97,depend,dependencies,97,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,2,['depend'],"['depend', 'dependencies']"
Integrability,"// Add default extensions for the given architecture version. Records the; // base architecture, to later resolve dependencies which depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:114,depend,dependencies,114,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,2,['depend'],"['depend', 'dependencies']"
Integrability,// Add dependencies against everything below it and clear maps.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:7,depend,dependencies,7,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,"// Add dependencies between virtual call sites and the virtual functions they; // might call, if we have that information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp:7,depend,dependencies,7,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,1,['depend'],['dependencies']
Integrability,// Add dependencies on the defs and uses of the instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:7,depend,dependencies,7,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,// Add dependencies to previous stores and loads mapped to V.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:7,depend,dependencies,7,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,"// Add dependency on rootcling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:7,depend,dependency,7,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['depend'],['dependency']
Integrability,// Add dependent lib for clang_rt.profile,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:7,depend,dependent,7,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,2,['depend'],['dependent']
Integrability,// Add device inputs and propagate info to the device actions. Do work only if; // we have dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Action.cpp:91,depend,dependencies,91,interpreter/llvm-project/clang/lib/Driver/Action.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Action.cpp,1,['depend'],['dependencies']
Integrability,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,depend,dependents,13,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,3,"['depend', 'integrat']","['dependents', 'integrated', 'integration']"
Integrability,// Add fixed-sized offset using existing DIExpression interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:54,interface,interface,54,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,2,['interface'],['interface']
Integrability,// Add implicit uses of all callee-saved registers to the reached; // return instructions. This is to prevent the anti-dependency breaker; // from renaming these registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:119,depend,dependency,119,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['depend'],['dependency']
Integrability,"// Add instructions to the SchedGroup bottom up starting from RIter.; // PipelineInstrs is a set of instructions that should not be added to the; // SchedGroup even when the other conditions for adding it are satisfied.; // RIter will be added to the SchedGroup as well, and dependencies will be; // added so that RIter will always be scheduled at the end of the group.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:275,depend,dependencies,275,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,1,['depend'],['dependencies']
Integrability,// Add instructions to the epilog depending on the current block.; // Process instructions in original program order.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:34,depend,depending,34,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['depend'],['depending']
Integrability,// Add memory dependencies (Note: isStoreToStackSlot and; // isLoadFromStackSLot are not usable after stack slots are lowered to; // actual addresses).; // This is a barrier event that acts as a pivotal node in the DAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:14,depend,dependencies,14,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,// Add methods in protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:18,protocol,protocols,18,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['protocol'],['protocols']
Integrability,// Add methods to interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:18,interface,interface,18,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['interface'],['interface']
Integrability,// Add module file inputs from dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp:31,depend,dependencies,31,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,1,['depend'],['dependencies']
Integrability,// Add on the predefines from the driver. Wrap in a #line directive to report; // that they come from the command line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:42,Wrap,Wrap,42,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['Wrap'],['Wrap']
Integrability,// Add openmp_wrappers/* to our system include path. This lets us wrap; // standard library headers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:66,wrap,wrap,66,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['wrap'],['wrap']
Integrability,"// Add or remove a feature based on a modifier string. The string must be of; // the form ""<name>"" to enable a feature or ""no<name>"" to disable it. This; // will also enable or disable any features as required by the dependencies; // between them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:217,depend,dependencies,217,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,1,['depend'],['dependencies']
Integrability,"// Add output dependence to the next nearest defs of this vreg.; //; // Unless this definition is dead, the output dependence should be; // transitively redundant with antidependencies from this definition's; // uses. We're conservative for now until we have a way to guarantee the uses; // are not eliminated sometime during scheduling. The output dependence edge; // is also useful if output latency exceeds def-use latency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:14,depend,dependence,14,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,3,['depend'],['dependence']
Integrability,"// Add passes to mark duplicate defs as should-discard, and to walk the; // link graph to build the symbol dependence graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp:107,depend,dependence,107,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,1,['depend'],['dependence']
Integrability,// Add precise dependencies against all previously seen memory; // accesses mapped to the same Value(s).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:15,depend,dependencies,15,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,// Add precise dependencies against all previously seen stores; // mapping to the same Value(s).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:15,depend,dependencies,15,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,"// Add projDataVars to normalized dependents of projection; // This is needed only for asymmetries (why?)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:34,depend,dependents,34,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['depend'],['dependents']
Integrability,// Add properties from the protocols in a qualified interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:27,protocol,protocols,27,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,2,"['interface', 'protocol']","['interface', 'protocols']"
Integrability,// Add properties in referenced protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:32,protocol,protocols,32,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['protocol'],['protocols']
Integrability,// Add property results based on our interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:37,interface,interface,37,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['interface'],['interface']
Integrability,"// Add protocol, if any",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:7,protocol,protocol,7,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,1,['protocol'],['protocol']
Integrability,// Add pseudo dependency edges for two-address nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:14,depend,dependency,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependency']
Integrability,"// Add quotes if needed. These are the characters listed as ""special"" to; // NMake, that are legal in a Windows filespec, and that could cause; // misinterpretation of the dependency string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp:172,depend,dependency,172,interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,1,['depend'],['dependency']
Integrability,"// Add register-based dependencies (data, anti, and output).; // For some instructions (calls, returns, inline-asm, etc.) there can; // be explicit uses and implicit defs, in which case the use will appear; // on the operand list before the def. Do two passes over the operand; // list to make sure that defs are processed before any uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:22,depend,dependencies,22,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependencies']
Integrability,// Add remaining dependences skipping any 'out' or 'inout' if they are; // overridden by 'omp_all_memory'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:17,depend,dependences,17,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['depend'],['dependences']
Integrability,"// Add sanitizer ignorelists as extra dependencies.; // They won't be discovered by the regular preprocessor, so; // we let make / ninja to know about this implicit dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:38,depend,dependencies,38,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,2,['depend'],"['dependencies', 'dependency']"
Integrability,"// Add server to list of dependents that are OK for analytical integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:25,depend,dependents,25,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependents', 'integration']"
Integrability,"// Add statically injected extra arguments, usually coming from rootcling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:18,inject,injected,18,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['inject'],['injected']
Integrability,// Add the @synchronized to the CFG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:12,synchroniz,synchronized,12,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['synchroniz'],['synchronized']
Integrability,"// Add the appropriate attribute, depending on the CUDA compilation mode; // and which target the builtin belongs to. For example, during host; // compilation, aux builtins are __device__, while the rest are __host__.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:34,depend,depending,34,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['depending']
Integrability,// Add the artificial dependencies if it does not form a cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:22,depend,dependencies,22,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependencies']
Integrability,// Add the associated classes and namespaces for argument-dependent lookup; // with an argument of class type (C++ [basic.lookup.argdep]p2).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:58,depend,dependent,58,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['depend'],['dependent']
Integrability,// Add the associated classes and namespaces for argument-dependent; // lookup that involves a template argument (C++ [basic.lookup.argdep]p2).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:58,depend,dependent,58,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['depend'],['dependent']
Integrability,// Add the associated classes and namespaces for; // argument-dependent lookup with an argument of type T; // (C++ [basic.lookup.koenig]p2).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:62,depend,dependent,62,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['depend'],['dependent']
Integrability,"// Add the base names to the message broadcasted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:29,message,message,29,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,// Add the dependency,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:11,depend,dependency,11,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,3,['depend'],['dependency']
Integrability,"// Add the freshly created function to llvm.compiler.used, similar to as it; // is done in InjectTLIMappings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp:91,Inject,InjectTLIMappings,91,interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,1,['Inject'],['InjectTLIMappings']
Integrability,"// Add the function declaration to the appropriate lookup tables,; // adjusting the redeclarations list as necessary. We don't; // want to do this yet if the friending class is dependent.; //; // Also update the scope-based lookup if the target context's; // lookup context is in lexical scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:177,depend,dependent,177,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,"// Add the functions denoted by the callee to the set of candidate; // functions, including those from argument-dependent lookup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:112,depend,dependent,112,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['depend'],['dependent']
Integrability,// Add the linker arguments to be forwarded by the wrapper.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:51,wrap,wrapper,51,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['wrap'],['wrapper']
Integrability,"// Add the message to the list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:11,message,message,11,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['message'],['message']
Integrability,"// Add this label to the current lexical scope if we're within any; // normal cleanups. Jumps ""in"" to this label --- when permitted by; // the language --- may need to be routed around such cleanups.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:171,rout,routed,171,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['rout'],['routed']
Integrability,"// Add this term if we have no imported dependents, or imported dependents are already generated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:40,depend,dependents,40,roofit/roofitcore/src/RooProdGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx,2,['depend'],['dependents']
Integrability,// Add to Result if all dependencies are visited.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:24,depend,dependencies,24,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['depend'],['dependencies']
Integrability,"// Add to the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:14,message,message,14,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,// Add/Sub overflow ops with MVT::Glues are lowered to CCR dependences.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:59,depend,dependences,59,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,1,['depend'],['dependences']
Integrability,"// Adding I to a packet that has J.; // Regmasks are not reflected in the scheduling dependency graph, so; // we need to check them manually. This code assumes that regmasks only; // occur on calls, and the problematic case is when we add an instruction; // defining a register R to a packet that has a call that clobbers R via; // a regmask. Those cannot be packetized together, because the call will; // be executed last. That's also a reson why it is ok to add a call; // clobbering R to a packet that defines R.; // Look for regmasks in J.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:85,depend,dependency,85,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['depend'],['dependency']
Integrability,"// Adding a try-delegate wrapping an existing try-catch-end can make existing; // branch destination BBs invalid. For example,; //; // - Before:; // bb0:; // block; // br bb3; // bb1:; // try; // ...; // bb2: (ehpad); // catch; // bb3:; // end_try; // end_block ;; 'br bb3' targets here; //; // Suppose this try-catch-end has a catch unwind mismatch, so we need to wrap; // this with a try-delegate. Then this becomes:; //; // - After:; // bb0:; // block; // br bb3 ;; invalid destination!; // bb1:; // try ;; (new instruction); // try; // ...; // bb2: (ehpad); // catch; // bb3:; // end_try ;; 'br bb3' still incorrectly targets here!; // delegate_bb: ;; (new BB); // delegate ;; (new instruction); // split_bb: ;; (new BB); // end_block; //; // Now 'br bb3' incorrectly branches to an inner scope.; //; // As we can see in this case, when branches target a BB that has both; // 'end_try' and 'end_block' and the BB is split to insert a 'delegate', we; // have to remap existing branch destinations so that they target not the; // 'end_try' BB but the new 'end_block' BB. There can be multiple 'delegate's; // in between, so we try to find the next BB with 'end_block' instruction. In; // this example, the 'br bb3' instruction should be remapped to 'br split_bb'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp:25,wrap,wrapping,25,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,2,['wrap'],"['wrap', 'wrapping']"
Integrability,"// Adding any required routines depending on the Layer types for generating; // inference code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:23,rout,routines,23,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,2,"['depend', 'rout']","['depending', 'routines']"
Integrability,"// Adding required routines for inference code generation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx:19,rout,routines,19,tmva/pymva/src/RModelParser_PyTorch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_PyTorch.cxx,1,['rout'],['routines']
Integrability,"// Adding two negative numbers, or subtracting a non-negative number from; // a negative one, can't wrap into non-negative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp:100,wrap,wrap,100,interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp,1,['wrap'],['wrap']
Integrability,"// Adding two non-negative numbers, or subtracting a negative number from; // a non-negative one, can't wrap into negative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp:104,wrap,wrap,104,interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/KnownBits.cpp,1,['wrap'],['wrap']
Integrability,"// Additional linker set-up and flags for Fortran. This is required in order; // to generate executables. As Fortran runtime depends on the C runtime,; // these dependencies need to be listed before the C runtime below (i.e.; // AddRunTimeLibs).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/DragonFly.cpp:125,depend,depends,125,interpreter/llvm-project/clang/lib/Driver/ToolChains/DragonFly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/DragonFly.cpp,12,['depend'],"['dependencies', 'depends']"
Integrability,"// Additional linker set-up and flags for Fortran. This is required in order; // to generate executables. As Fortran runtime depends on the C runtime,; // these dependencies need to be listed before the C runtime below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp:125,depend,depends,125,interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Solaris.cpp,2,['depend'],"['dependencies', 'depends']"
Integrability,"// Address space 8 pointers are 128-bit wide values, but the logic; // below will try to bitcast them to 2N x s64, which will fail.; // Therefore, as an intermediate step, wrap extracts/insertions from a; // ptrtoint-ing the vector and scalar arguments (or inttoptring the; // extraction result) in order to produce a vector operation that can; // be handled by the logic below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:172,wrap,wrap,172,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['wrap'],['wrap']
Integrability,// Adds may-call edges for the ObjC message sends.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CallGraph.cpp:36,message,message,36,interpreter/llvm-project/clang/lib/Analysis/CallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CallGraph.cpp,1,['message'],['message']
Integrability,"// Adjust convolution integration window",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:22,integrat,integration,22,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['integrat'],['integration']
Integrability,// Adjust stack pointer: ESP -= numbytes.; // Windows and cygwin/mingw require a prologue helper routine when allocating; // more than 4K bytes on the stack. Windows uses __chkstk and cygwin/mingw; // uses __alloca. __alloca and the 32-bit version of __chkstk will probe the; // stack and adjust the stack pointer in one go. The 64-bit version of; // __chkstk is only responsible for probing the stack. The 64-bit prologue is; // responsible for adjusting the stack pointer. Touching the stack at 4K; // increments is necessary to ensure that the guard pages used by the OS; // virtual memory manager are allocated in correct sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:97,rout,routine,97,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['rout'],['routine']
Integrability,"// Adjust the dependence latency using operand def/use information,; // then allow the target to perform its own adjustments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:14,depend,dependence,14,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependence']
Integrability,"// Adjust the exception specification of the argument to match the; // substituted and resolved type we just formed. (Calling convention and; // noreturn can't be dependent, so we don't actually need this for them; // right now.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:163,depend,dependent,163,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['dependent']
Integrability,"// Adjust the number of Phis needed depending on the number of prologs left,; // and the distance from where the Phi is first scheduled. The number of; // Phis cannot exceed the number of prolog stages. Each stage can; // potentially define two values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:36,depend,depending,36,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['depend'],['depending']
Integrability,"// Advance position forward, possibly wrapping to the beginning.; // Returns whether the wrap happened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h:38,wrap,wrapping,38,interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,2,['wrap'],"['wrap', 'wrapping']"
Integrability,// Advance to first terminator. The successor block will handle terminators; // dependent on CFG layout (T/NT branch etc).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp:80,depend,dependent,80,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.cpp,1,['depend'],['dependent']
Integrability,"// Advanced SIMD generates one or two functions, depending on; // the `[not]inbranch` clause.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:49,depend,depending,49,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['depending']
Integrability,"// Advanced SIMD, Section 3.3.1 of the AAVFABI, generates one or; // two vector names depending on the use of the clause; // `[not]inbranch`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:86,depend,depending,86,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['depending']
Integrability,"// Advising to implement the batch interface makes only sense if the batch was not a scalar.; // Otherwise, there would be no speedup benefit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:35,interface,interface,35,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['interface'],['interface']
Integrability,"// After canonicalization, there may be dependent template arguments in; // CanonicalConverted But none of Args is dependent. When any of; // CanonicalConverted dependent, KnownDependent is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:40,depend,dependent,40,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,3,['depend'],['dependent']
Integrability,"// After copying the data to the device, wrap the device buffer in the respective; // architectures matrix type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/CpuBuffer.cxx:41,wrap,wrap,41,tmva/tmva/src/DNN/Architectures/Cpu/CpuBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/CpuBuffer.cxx,8,['wrap'],['wrap']
Integrability,"// After splitting the edge and updating SlotIndexes, live intervals may be; // in one of two situations, depending on whether this block was the last in; // the function. If the original block was the last in the function, all; // live intervals will end prior to the beginning of the new split block. If; // the original block was not at the end of the function, all live intervals; // will extend to the end of the new split block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:106,depend,depending,106,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['depend'],['depending']
Integrability,"// After the parameter list, we may parse a noexcept/requires/trailing return; // type which need to know whether the call operator constiture a dependent; // context, so we need to setup the FunctionTemplateDecl of generic lambdas; // now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:145,depend,dependent,145,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['depend'],['dependent']
Integrability,"// After those conversions, one of the following shall hold:; // -- The second and third operands have the same type; the result; // is of that type. If the operands have class type, the result; // is a prvalue temporary of the result type, which is; // copy-initialized from either the second operand or the third; // operand depending on the value of the first operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:327,depend,depending,327,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['depending']
Integrability,// AliasAnalysis does not always account for loops. Limit overwrite checks; // to dependencies for which we can guarantee they are independent of any; // loops they are in.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp:82,depend,dependencies,82,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,1,['depend'],['dependencies']
Integrability,"// Align question operators if next operand is not wrapped, as; // well as wrapped operands after question operator or last; // colon in conditional sequence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp:51,wrap,wrapped,51,interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,2,['wrap'],['wrapped']
Integrability,"// All PHIs in the inner and outer headers must either be:; // - The induction PHI, which we are going to rewrite as one induction in; // the new loop. This is already checked by findLoopComponents.; // - An outer header PHI with all incoming values from outside the loop.; // LoopSimplify guarantees we have a pre-header, so we don't need to; // worry about that here.; // - Pairs of PHIs in the inner and outer headers, which implement a; // loop-carried dependency that will still be valid in the new loop. To; // be valid, this variable must be modified only in the inner loop.; // The set of PHI nodes in the outer loop header that we know will still be; // valid after the transformation. These will not need to be modified (with; // the exception of the induction variable), but we do need to check that; // there are no unsafe PHI nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:457,depend,dependency,457,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['depend'],['dependency']
Integrability,// All __interfaces are inheritently interface-like.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:37,interface,interface-like,37,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['interface'],['interface-like']
Integrability,// All atomic operations have an overload which takes a pointer to a volatile; // 'A'. We shouldn't let the volatile-ness of the pointee-type inject itself; // into the result or the other operands. Similarly atomic_load takes a; // pointer to a const 'A'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:142,inject,inject,142,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['inject'],['inject']
Integrability,"// All browser windows have closed. Quit the application message loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/gui_handler.cxx:57,message,message,57,gui/cefdisplay/src/gui_handler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/gui_handler.cxx,1,['message'],['message']
Integrability,// All candidates are delayed due to live physical reg dependencies.; // Try code duplication or inserting cross class copies; // to resolve it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:55,depend,dependencies,55,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,1,['depend'],['dependencies']
Integrability,// All code for this class below this point is needed because of the; // temporary implicit conversion to uint64_t. The operator overloads are; // needed because otherwise the conversion of the parent class; // UnivariateLinearPolyBase -> TypeSize is ambiguous.; // TODO: Remove the implicit conversion.; // Casts to a uint64_t if this is a fixed-width size.; //; // This interface is deprecated and will be removed in a future version; // of LLVM in favour of upgrading uses that rely on this implicit conversion; // to uint64_t. Calls to functions that return a TypeSize should use the; // proper interfaces to TypeSize.; // In practice this is mostly calls to MVT/EVT::getSizeInBits().; //; // To determine how to upgrade the code:; //; // if (<algorithm works for both scalable and fixed-width vectors>); // use getKnownMinValue(); // else if (<algorithm works only for fixed-width vectors>) {; // if <algorithm can be adapted for both scalable and fixed-width vectors>; // update the algorithm and use getKnownMinValue(); // else; // bail out early for scalable vectors and use getFixedValue(); // },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h:372,interface,interface,372,interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,2,['interface'],"['interface', 'interfaces']"
Integrability,// All declarations created from now on are scoped to the private module; // fragment (and are neither visible nor reachable in importers of the module; // interface).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:156,interface,interface,156,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,"// All dependents of this PDF; // Loop over the PDFs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:7,depend,dependents,7,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['depend'],['dependents']
Integrability,"// All done if there are no arguments to integrate numerically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:41,integrat,integrate,41,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrate']
Integrability,"// All file systems are synchronized, just take the first working directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp:24,synchroniz,synchronized,24,interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp,1,['synchroniz'],['synchronized']
Integrability,"// All loads have known dependences inside F, so the global can be localized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:24,depend,dependences,24,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['depend'],['dependences']
Integrability,"// All of the XOR, OR and CMP use ALU ports, and data dependency will become the; // bottleneck after this transform on high end CPU. So this max leaf node; // limitation is guard cmp+ccmp will be profitable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:54,depend,dependency,54,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['depend'],['dependency']
Integrability,// All of the below are only true if the loaded pointer is produced; // by the dependent instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:79,depend,dependent,79,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['depend'],['dependent']
Integrability,"// All of the following tags need to be handed to the GetLine() routine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:64,rout,routine,64,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,1,['rout'],['routine']
Integrability,// All of the implementation details of actually computing the various hash; // code values are held within this namespace. These routines are included in; // the header file mainly to allow inlining and constant propagation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:130,rout,routines,130,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,1,['rout'],['routines']
Integrability,"// All of the prolog/epilog functionality, including saving and restoring; // callee-saved registers is handled in emitPrologue. This is to have the; // logic for shrink-wrapping in one place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.h:170,wrap,wrapping,170,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.h,1,['wrap'],['wrapping']
Integrability,"// All of the protocols listed also have type names, and at least; // one is an Objective-C class name. Check whether all of the; // protocol conformances are declared by the base class itself, in; // which case we warn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:14,protocol,protocols,14,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,['protocol'],"['protocol', 'protocols']"
Integrability,// All other types should be Objective-C interface pointer types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:41,interface,interface,41,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,2,['interface'],['interface']
Integrability,"// All relocation sections denote relocations to apply to another section.; // However, some relocation sections use a dynamic symbol table and others use; // a regular symbol table. Because the types of the two symbol tables differ in; // our system (because they should behave differently) we can't uniformly; // represent all relocations with the same base class if we expose an interface; // that mentions the symbol table type. So we split the two base types into two; // different classes, one which handles the section the relocation is applied to; // and another which handles the symbol table type. The symbol table type is; // taken as a type parameter to the class (see RelocSectionWithSymtabBase).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.h:382,interface,interface,382,interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObject.h,1,['interface'],['interface']
Integrability,"// All remaining transformation depend on the value of the mask, which is; // not known at compile time for scalable vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:32,depend,depend,32,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['depend'],['depend']
Integrability,"// All subscripts are all the same type.; // Loop bound may be smaller (e.g., a char).; // Should zero extend loop bound, since it's always >= 0.; // This routine collects upper bound and extends or truncates if needed.; // Truncating is safe when subscripts are known not to wrap. Cases without; // nowrap flags should have been rejected earlier.; // Return null if no bound available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:155,rout,routine,155,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,"['rout', 'wrap']","['routine', 'wrap']"
Integrability,// All supported memory/synchronization scopes can be found here:; // http://llvm.org/docs/AMDGPUUsage.html#memory-scopes; /// Agent synchronization scope ID (cross address space).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineModuleInfo.h:24,synchroniz,synchronization,24,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineModuleInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineModuleInfo.h,2,['synchroniz'],['synchronization']
Integrability,"// All the following routines are explicitly disallow/unsupported for; // a view",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h:21,rout,routines,21,core/meta/src/TViewPubDataMembers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TViewPubDataMembers.h,2,['rout'],['routines']
Integrability,// All the non-OpenCL operations take one of the following forms.; // The OpenCL operations take the __c11 forms with one extra argument for; // synchronization scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:145,synchroniz,synchronization,145,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['synchroniz'],['synchronization']
Integrability,// All the optimizations depend on the format string.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp:25,depend,depend,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,1,['depend'],['depend']
Integrability,"// All the potentially captureable variables in the current nested; // lambda (within a generic outer lambda), must be captured by an; // outer lambda that is enclosed within a non-dependent context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:181,depend,dependent,181,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['dependent']
Integrability,// All the rest of our checks depend on the condition being an instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:30,depend,depend,30,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['depend'],['depend']
Integrability,// All waits must be resolved at call return.; // NOTE: this could be improved with knowledge of all call sites or; // with knowledge of the called routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp:148,rout,routines,148,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertWaitcnts.cpp,1,['rout'],['routines']
Integrability,// All x86 ABIs require that for returning structs by value we copy the; // sret argument into %rax/%eax (depending on ABI) for the return. Save; // the argument into a virtual register so that we can access it from the; // return points.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp:106,depend,depending,106,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,1,['depend'],['depending']
Integrability,"// Allocate workspace for numerical integration engine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:36,integrat,integration,36,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['integrat'],['integration']
Integrability,// Allocation routines for specific node types/kinds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp:14,rout,routines,14,interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFGraph.cpp,1,['rout'],['routines']
Integrability,"// Allow @class command on @interface declarations.; // FIXME. Currently, \class and @class are indistinguishable. So,; // \class is also allowed on an @interface declaration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CommentSema.cpp:28,interface,interface,28,interpreter/llvm-project/clang/lib/AST/CommentSema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CommentSema.cpp,2,['interface'],['interface']
Integrability,"// Allow access to branches/leaves as if they were data members Returns a; // Python tuple where the first element is either the desired CPyCppyy proxy,; // or an address that still needs to be wrapped by the caller in a proxy using; // cppyy.ll.cast. In the latter case, the second tuple element is the target; // type name. Otherwise, the second element is an empty string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:194,wrap,wrapped,194,bindings/pyroot/pythonizations/src/TTreePyz.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx,1,['wrap'],['wrapped']
Integrability,// Allow breaking opening brace of lambdas (when passed as function; // arguments) to a new line when BeforeLambdaBody brace wrapping is; // enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:125,wrap,wrapping,125,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['wrap'],['wrapping']
Integrability,// Allow different 'introduced' / 'obsoleted' availability versions; // on a method that implements an optional protocol requirement. It; // makes less sense to allow this for 'deprecated' as the user can't; // see if the method is 'deprecated' as 'respondsToSelector' will; // still return true when the method is deprecated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:112,protocol,protocol,112,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['protocol'],['protocol']
Integrability,// Allow internal communication protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:32,protocol,protocols,32,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['protocol'],['protocols']
Integrability,// Allow packetization if dependency can be pruned.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp:26,depend,dependency,26,interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,1,['depend'],['dependency']
Integrability,// Allow seeded attributes to declare dependencies.; // Remember the seeding state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:38,depend,dependencies,38,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependencies']
Integrability,// Allow targets to expand pseudo instructions depending on the choice of; // registers before MachineCopyPropagation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:47,depend,depending,47,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['depend'],['depending']
Integrability,// Allow the user to control whether messages can be converted to runtime; // functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:37,message,messages,37,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['message'],['messages']
Integrability,"// Allow to use dump directly on `defvar` and `def`, by wrapping; // them with a `!repl`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:56,wrap,wrapping,56,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['wrap'],['wrapping']
Integrability,"// Already have an entry with this inode, return it.; // FIXME: This hack ensures that `getDir()` will use the path that was; // used to lookup this file, even if we found a file by different path; // first. This is required in order to find a module's structure when its; // headers/module map are mapped in the VFS.; //; // See above for how this will eventually be removed. `IsVFSMapped`; // *cannot* be narrowed to `ExposesExternalVFSPath` as crash reproducers; // also depend on this logic and they have `use-external-paths: false`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp:474,depend,depend,474,interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,1,['depend'],['depend']
Integrability,// Also add any interfaces implemented by the immutable pass to the map for; // fast lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:16,interface,interfaces,16,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['interface'],['interfaces']
Integrability,// Also add the protocols associated with the LHS interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:16,protocol,protocols,16,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,"['interface', 'protocol']","['interface', 'protocols']"
Integrability,// Also add the protocols associated with the RHS interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:16,protocol,protocols,16,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,"['interface', 'protocol']","['interface', 'protocols']"
Integrability,// Also check protocol qualifiers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:14,protocol,protocol,14,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['protocol'],['protocol']
Integrability,// Also compare the property against a property in our protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:55,protocol,protocols,55,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['protocol'],['protocols']
Integrability,// Also drop references that come from the Value bridges.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp:49,bridg,bridges,49,interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp,1,['bridg'],['bridges']
Integrability,"// Also look into protocols, for a user declared instance method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:18,protocol,protocols,18,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// Also remember how many other (non-TRANS) VALU we have seen since it was; // issued. When an instruction depends on both a prior TRANS and a prior; // non-TRANS VALU, this is used to decide whether to encode a wait for just; // one or both of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp:107,depend,depends,107,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInsertDelayAlu.cpp,1,['depend'],['depends']
Integrability,// Also remove no longer used MetadataAsValue wrappers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:46,wrap,wrappers,46,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['wrap'],['wrappers']
Integrability,// Also update vgpr_count (dependent on agpr_count for gfx908/gfx90a),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp:27,depend,dependent,27,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AsmParser/AMDGPUAsmParser.cpp,1,['depend'],['dependent']
Integrability,"// Also, check for methods declared in protocols inherited by; // this protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:39,protocol,protocols,39,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,['protocol'],"['protocol', 'protocols']"
Integrability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:26,integrat,integrating,26,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrating']
Integrability,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors,; // rather than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:26,integrat,integrating,26,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['integrat'],['integrating']
Integrability,// Always add dependecy edge to BarrierChain if present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:14,depend,dependecy,14,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['dependecy']
Integrability,// Always pretend to enter a context to ensure that a dependent type; // resolves to a dependent record.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:54,depend,dependent,54,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,2,['depend'],['dependent']
Integrability,// Always print the module.; // Unwrap and print directly to avoid filtering problems in general routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp:97,rout,routines,97,interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,1,['rout'],['routines']
Integrability,// Always rebuild; we don't know if this needs to be injected into a new; // context or if the promise type has changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:53,inject,injected,53,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,4,['inject'],['injected']
Integrability,// Always resolve references to the wrapper at link time.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:36,wrap,wrapper,36,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['wrap'],['wrapper']
Integrability,"// Always skip the injected-class-name, along with any; // redeclarations of nested classes, since both would cause us; // to try to instantiate the members of a class twice.; // Skip closure types; they'll get instantiated when we instantiate; // the corresponding lambda-expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:19,inject,injected-class-name,19,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['inject'],['injected-class-name']
Integrability,// Always test the initial module.; // Unwrap and print directly to avoid filtering problems in general routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp:104,rout,routines,104,interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/StandardInstrumentations.cpp,1,['rout'],['routines']
Integrability,// Always try to create iterator declarator to avoid extra error messages; // about unknown declarations use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:65,message,messages,65,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['message'],['messages']
Integrability,"// Always try to replace 16 bit load with 32 bit zero extending.; // Code size is the same, and there is sometimes a perf advantage; // from eliminating a false dependence on the upper portion of; // the register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:161,depend,dependence,161,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['depend'],['dependence']
Integrability,"// Always try to replace 8/16 bit copies with a 32 bit copy.; // Code size is either less (16) or equal (8), and there is sometimes a; // perf advantage from eliminating a false dependence on the upper portion; // of the register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:178,depend,dependence,178,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['depend'],['dependence']
Integrability,"// An @interface, @implementation, or @protocol line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.h:7,interface,interface,7,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.h,2,"['interface', 'protocol']","['interface', 'protocol']"
Integrability,// An AST Visitor that calls a callback function on each callable DEFINITION; // that is NOT in a dependent context:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:98,depend,dependent,98,interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,1,['depend'],['dependent']
Integrability,"// An ImportPath is the list of the AST nodes which we visit during an; // Import call.; // If node `A` depends on node `B` then the path contains an `A`->`B` edge.; // From the call stack of the import functions we can read the very same; // path.; //; // Now imagine the following AST, where the `->` represents dependency in; // therms of the import.; // ```; // A->B->C->D; // `->E; // ```; // We would like to import A.; // The import behaves like a DFS, so we will visit the nodes in this order:; // ABCDE.; // During the visitation we will have the following ImportPaths:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE; // AB; // A; // ```; // If during the visit of E there is an error then we set an error for E,; // then as the call stack shrinks for B, then for A:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // However, during the import we could import C and D without any error and; // they are independent from A,B and E.; // We must not set up an error for C and D.; // So, at the end of the import we have an entry in `ImportDeclErrors` for; // A,B,E but not for C,D.; //; // Now what happens if there is a cycle in the import path?; // Let's consider this AST:; // ```; // A->B->C->A; // `->E; // ```; // During the visitation we will have the below ImportPaths and if during; // the visit of E there is an error then we will set up an error for E,B,A.; // But what's up with C?; // ```; // A; // AB; // ABC; // ABCA; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // This time we know that both B and C are dependent on A.; // This means we must set up an error for C too.; // As the call stack reverses back we get to A and we must set up an error; // to all nodes which depend on A (this includes C).; // But C is no longer on the import path, it just had been previously.; // Such situatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:104,depend,depends,104,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,2,['depend'],"['dependency', 'depends']"
Integrability,"// An Objective-C object pointer followed by type arguments; // can then be followed again by a set of protocol references, e.g.,; // \c NSArray<NSView><NSTextDelegate>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:103,protocol,protocol,103,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['protocol'],['protocol']
Integrability,"// An aggregate return value cannot wrap around the address space, so; // offsets to its parts don't wrap either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:36,wrap,wrap,36,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,4,['wrap'],['wrap']
Integrability,"// An alias cannot act as an external reference, so we need to create; // either a function or a global variable depending on the value type.; // FIXME: Once pointee types are gone we can probably pick one or the; // other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp:113,depend,depending,113,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,1,['depend'],['depending']
Integrability,// An array is incomplete if its element type is incomplete; // (C++ [dcl.array]p1).; // We don't handle dependent-sized arrays (dependent types are never treated; // as incomplete).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:105,depend,dependent-sized,105,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,2,['depend'],"['dependent', 'dependent-sized']"
Integrability,"// An example to illustrate the transformation; // From:; // lsr x8, x1, #1; // and x8, x8, #0x3f80; // bfxil x8, x1, #0, #7; // To:; // and x8, x23, #0x7f; // ubfx x9, x23, #8, #7; // orr x23, x8, x9, lsl #7; //; // The number of instructions remains the same, but ORR is faster than BFXIL; // on many AArch64 processors (or as good as BFXIL if not faster). Besides,; // the dependency chain is improved after the transformation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:376,depend,dependency,376,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['depend'],['dependency']
Integrability,"// An implementation implicitly has the availability of the interface.; // Unless it is ""+load"" method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:60,interface,interface,60,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,1,['interface'],['interface']
Integrability,"// An inbounds getelementptr that is a AddRec with a unit stride; // cannot wrap per definition. If it did, the result would be poison; // and any memory access dependent on it would be immediate UB; // when executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:76,wrap,wrap,76,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,2,"['depend', 'wrap']","['dependent', 'wrap']"
Integrability,// An injected-class-name of a class template (specialization) is valid; // as a template or as a non-template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:6,inject,injected-class-name,6,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['inject'],['injected-class-name']
Integrability,"// An inlined function could conceivably also be analyzed as a top-level; // function. We ignore this case and only emit a message (TRUE or FALSE); // when we are analyzing it as an inlined function. This means that; // clang_analyzer_checkInlined(true) should always print TRUE, but; // clang_analyzer_checkInlined(false) should never actually print anything.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ExprInspectionChecker.cpp:123,message,message,123,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ExprInspectionChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ExprInspectionChecker.cpp,1,['message'],['message']
Integrability,// An instance message with no expression means we are sending to super.; // In this case the object reference is the same as 'self'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:15,message,message,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['message'],['message']
Integrability,"// An instantiation of an alias template may or may not be a SFINAE; // context, depending on what else is on the stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:81,depend,depending,81,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['depend'],['depending']
Integrability,"// An instruction inside the loop depends on a value outside the loop that we; // weren't given a mapping for, or a value such as a call inside the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:34,depend,depends,34,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['depend'],['depends']
Integrability,// An interface can subclass another interface with a; // objc_subclassing_restricted attribute when it has that attribute as; // well (because of interfaces imported from Swift). Therefore we have; // to check if we can subclass in the implementation as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:6,interface,interface,6,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,3,['interface'],"['interface', 'interfaces']"
Integrability,// An ordered atomic may synchronize. (See comment about on monotonic.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:25,synchroniz,synchronize,25,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,1,['synchroniz'],['synchronize']
Integrability,// An unknown load depends on all stores.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:19,depend,depends,19,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['depends']
Integrability,// An unknown store depends on all stores and loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:20,depend,depends,20,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['depend'],['depends']
Integrability,"// An unnamed member may represent a nested struct or union. Attempt to; // interpret the unnamed member as a DICompositeType possibly wrapped in; // qualifier types. Add all the indirect fields to the current record if that; // succeeds, and drop the member if that fails.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:135,wrap,wrapped,135,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['wrap'],['wrapped']
Integrability,// An update to MinDepDistBytes requires an update to MaxSafeVectorWidthInBits; // since there is a backwards dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:110,depend,dependency,110,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// Analytic integration of factorizable observable not possible, add straight pdf to product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integration']
Integrability,"// Analytical Integration handling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:14,Integrat,Integration,14,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,3,['Integrat'],['Integration']
Integrability,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,integrat,integration,14,roofit/roofit/src/RooGaussModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx,3,['integrat'],['integration']
Integrability,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:14,integrat,integration,14,roofit/roofit/src/RooGaussModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx,3,['integrat'],['integration']
Integrability,"// Analytical integration support",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:14,integrat,integration,14,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,3,['integrat'],['integration']
Integrability,"// Analyze interleaved accesses and collect them into interleaved load and; // store groups.; //; // When generating code for an interleaved load group, we effectively hoist all; // loads in the group to the location of the first load in program order. When; // generating code for an interleaved store group, we sink all stores to the; // location of the last store. This code motion can change the order of load; // and store instructions and may break dependences.; //; // The code generation strategy mentioned above ensures that we won't violate; // any write-after-read (WAR) dependences.; //; // E.g., for the WAR dependence: a = A[i]; // (1); // A[i] = b; // (2); //; // The store group of (2) is always inserted at or below (2), and the load; // group of (1) is always inserted at or above (1). Thus, the instructions will; // never be reordered. All other dependences are checked to ensure the; // correctness of the instruction reordering.; //; // The algorithm visits all memory accesses in the loop in bottom-up program; // order. Program order is established by traversing the blocks in the loop in; // reverse postorder when collecting the accesses.; //; // We visit the memory accesses in bottom-up order because it can simplify the; // construction of store groups in the presence of write-after-write (WAW); // dependences.; //; // E.g., for the WAW dependence: A[i] = a; // (1); // A[i] = b; // (2); // A[i + 1] = c; // (3); //; // We will first create a store group with (3) and (2). (1) can't be added to; // this group because it and (2) are dependent. However, (1) can be grouped; // with other accesses that may precede it in program order. Note that a; // bottom-up order does not imply that WAW dependences should not be checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:455,depend,dependences,455,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,8,['depend'],"['dependence', 'dependences', 'dependent']"
Integrability,"// Analyze the branching code at the end of MBB, returning; // true if it cannot be understood (e.g. it's a switch dispatch or isn't; // implemented for a target). Upon success, this returns false and returns; // with the following information in various cases:; //; // 1. If this block ends with no branches (it just falls through to its succ); // just return false, leaving TBB/FBB null.; // 2. If this block ends with only an unconditional branch, it sets TBB to be; // the destination block.; // 3. If this block ends with a conditional branch and it falls through to a; // successor block, it sets TBB to be the branch destination block and a; // list of operands that evaluate the condition. These operands can be; // passed to other TargetInstrInfo methods to create new branches.; // 4. If this block ends with a conditional branch followed by an; // unconditional branch, it returns the 'true' destination in TBB, the; // 'false' destination in FBB, and a list of operands that evaluate the; // condition. These operands can be passed to other TargetInstrInfo; // methods to create new branches.; //; // Note that removeBranch and insertBranch must be implemented to support; // cases where this method returns success.; //; // If AllowModify is true, then this routine is allowed to modify the basic; // block (e.g. delete instructions after the unconditional branch).; //; // The CFG information in MBB.Predecessors and MBB.Successors must be valid; // before calling this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstrInfo.cpp:1271,rout,routine,1271,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstrInfo.cpp,1,['rout'],['routine']
Integrability,// Analyze the dependency of *Pointer in FromBB. See if we already have; // been here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:15,depend,dependency,15,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// Analyze wrapped sets in their two parts: [0, Upper) \/ [Lower, MaxValue]; // We use the non-wrapped set code to analyze the [Lower, MaxValue) part, and; // then we do the union with [MaxValue, Upper)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:11,wrap,wrapped,11,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,2,['wrap'],['wrapped']
Integrability,"// And also, depending on the dimension, add predefined functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:13,depend,depending,13,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['depend'],['depending']
Integrability,"// And be in the right range, depending on the amount that it is shifted; // by. Shift 0, is equal to 7 unsigned bits, the sign bit is set; // separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:30,depend,depending,30,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['depend'],['depending']
Integrability,// And if it's safe to clone the dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp:33,depend,dependencies,33,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorCombine.cpp,1,['depend'],['dependencies']
Integrability,"// And send the message one level up",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:16,message,message,16,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"// Annotate the load as an invariant load iff inside an instance method; // and ivar belongs to instance method's class and one of its super class.; // This check is needed because the ivar offset is a lazily; // initialised value that may depend on objc_msgSend to perform a fixup on; // the first message dispatch.; //; // An additional opportunity to mark the load as invariant arises when the; // base of the ivar access is a parameter to an Objective C method.; // However, because the parameters are not available in the current; // interface, we cannot perform this check.; //; // Note that for direct methods, because objc_msgSend is skipped,; // and that the method may be inlined, this optimization actually; // can't be performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:240,depend,depend,240,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,3,"['depend', 'interface', 'message']","['depend', 'interface', 'message']"
Integrability,"// Answering this is somewhat tricky and depends on the specific device which; // have different rates for fma or all f64 operations.; //; // v_fma_f64 and v_mul_f64 always take the same number of cycles as each other; // regardless of which device (although the number of cycles differs between; // devices), so it is always profitable for f64.; //; // v_fma_f32 takes 4 or 16 cycles depending on the device, so it is profitable; // only on full rate devices. Normally, we should prefer selecting v_mad_f32; // which we can always do even without fused FP ops since it returns the same; // result as the separate operations and since it is always full; // rate. Therefore, we lie and report that it is not faster for f32. v_mad_f32; // however does not support denormals, so we do report fma as faster if we have; // a fast fma device and require denormals.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:41,depend,depends,41,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,2,['depend'],"['depending', 'depends']"
Integrability,// AntiDepBreakMode - Type of anti-dependence breaking that should; // be performed before post-RA scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:35,depend,dependence,35,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['depend'],['dependence']
Integrability,// Any Objective-C pointer type might be acceptable for a protocol; // method; we just don't know.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:58,protocol,protocol,58,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,// Any PHI that depended upon the result of the byte compare needs a new; // incoming value from CmpBB. This is because the original loop will get; // deleted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:16,depend,depended,16,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['depend'],['depended']
Integrability,"// Any allocas past here must be control dependent on I, and I; // must be memory dependend on BundleMember->Inst.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:41,depend,dependent,41,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['depend'],"['dependend', 'dependent']"
Integrability,// Any dependent template name is fine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:7,depend,dependent,7,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,"// Any function that is called by `__kmpc_parallel_51` will not be; // folded as the parallel level in the function is updated. In order to; // get it right, all the analysis would depend on the implentation. That; // said, if in the future any change to the implementation, the analysis; // could be wrong. As a consequence, we are just conservative here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:181,depend,depend,181,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['depend'],['depend']
Integrability,// Any instruction which isn't safe to speculate at the beginning of the; // block is control dependend on any early exit or non-willreturn call; // which proceeds it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:94,depend,dependend,94,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['dependend']
Integrability,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:34,depend,dependents,34,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,3,['depend'],['dependents']
Integrability,"// Any return statement will have been ""healed"" by Sema; // to correspond to the original void return type of the; // wrapper, using a ImplicitCastExpr 'void' <ToVoid>.; // Remove that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:118,wrap,wrapper,118,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,1,['wrap'],['wrapper']
Integrability,// Any semantic dependence on the qualifier will have; // been incorporated into NamedType. We still need to; // track syntactic (instantiation / error / pack); // dependence on the qualifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:16,depend,dependence,16,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,2,['depend'],['dependence']
Integrability,"// Any wrapping introduced by shrinking this operation shouldn't be; // considered undefined behavior. So, we can't unconditionally copy; // arithmetic wrapping flags to VPW.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp:7,wrap,wrapping,7,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,2,['wrap'],['wrapping']
Integrability,"// Any {X,Y,Z}MM register (Arch & context dependent)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:42,depend,dependent,42,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['depend'],['dependent']
Integrability,// AnyCall helps us here to avoid checking for FunctionDecl and ObjCMethodDecl; // separately and aggregates interfaces of these classes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp:109,interface,interfaces,109,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonNullParamChecker.cpp,1,['interface'],['interfaces']
Integrability,"// Anything else, is recorded or ignored depending on whether it's; // intended for the backend we're interested in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CodeGenCoverage.cpp:41,depend,depending,41,interpreter/llvm-project/llvm/lib/Support/CodeGenCoverage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CodeGenCoverage.cpp,1,['depend'],['depending']
Integrability,"// Anything that can accept a floating point constant as an operand; // needs to go through here, as the regular parseExpression is; // integer only.; //; // This routine still creates a generic Immediate operand, containing; // a bitcast of the 64-bit floating point value. The various operands; // that accept floats can check whether the value is valid for them; // via the standard is*() predicates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:163,rout,routine,163,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['rout'],['routine']
Integrability,// Append any remaning text from the message with its existing formatting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp:37,message,message,37,interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnostic.cpp,1,['message'],['message']
Integrability,"// Append messages to active logging unit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx:10,message,messages,10,net/net/src/TApplicationRemote.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx,3,['message'],['messages']
Integrability,"// Apply posterior integration required for SPECINT case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,integrat,integration,19,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Integrability,// Apply protocol lists if exists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:9,protocol,protocol,9,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['protocol'],['protocol']
Integrability,// Apply protocol qualifiers to ObjCObjectPointerType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:9,protocol,protocol,9,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocol']
Integrability,// Apply protocol qualifiers to ObjCObjectType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:9,protocol,protocol,9,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocol']
Integrability,"// Apply relocations to the contents of the DWARF segment.; // We do this here because the final value written depend on the DWARF vm; // addr, which is only calculated in this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/MachOUtils.cpp:111,depend,depend,111,interpreter/llvm-project/llvm/tools/dsymutil/MachOUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/MachOUtils.cpp,1,['depend'],['depend']
Integrability,// Apply the protocol qualifers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:13,protocol,protocol,13,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocol']
Integrability,"// Arg has also been canonicalized, but there's nothing we can do; // about that. It also doesn't matter as much, because it won't; // have any template parameters in it (because deduction isn't; // done on dependent types).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:207,depend,dependent,207,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['depend'],['dependent']
Integrability,"// ArgModRefC2 indicates what Call2 might do to Call2ArgLoc, and the; // dependence of Call1 on that location is the inverse:; // - If Call2 modifies location, dependence exists if Call1 reads or; // writes.; // - If Call2 only reads location, dependence exists if Call1 writes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:73,depend,dependence,73,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,3,['depend'],['dependence']
Integrability,// ArgTDecl won't be NULL because we asserted that this isn't a; // dependent context very early in the call chain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp:68,depend,dependent,68,interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp,1,['depend'],['dependent']
Integrability,"// Argument InsertPt is an instruction where vector code for some other; // tree entry (one that shares one or more scalars with TE) is going to be; // generated. This lambda returns true if insertion point of vector code; // for the TE dominates that point (otherwise dependency is the other way; // around). The other node is not limited to be of a gather kind. Gather; // nodes are not scheduled and their vector code is inserted before their; // first user. If user is PHI, that is supposed to be at the end of a; // predecessor block. Otherwise it is the last instruction among scalars of; // the user node. So, instead of checking dependency between instructions; // themselves, we check dependency between their insertion points for vector; // code (since each scalar instruction ends up as a lane of a vector; // instruction).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:269,depend,dependency,269,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,3,['depend'],['dependency']
Integrability,"// Array of bits to mark the TProcessIDs uids written to the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMessage.h:61,message,message,61,net/net/inc/TMessage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMessage.h,1,['message'],['message']
Integrability,// ArrayRef access to formal parameters. This should eventually; // replace the iterator interface above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h:89,interface,interface,89,interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,1,['interface'],['interface']
Integrability,// ArrayRef interface to parameters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:12,interface,interface,12,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['interface'],['interface']
Integrability,"// As PDB does not support the Binary interface, at this point we can check; // if the buffer corresponds to a PDB or PE file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/LVReaderHandler.cpp:38,interface,interface,38,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/LVReaderHandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/LVReaderHandler.cpp,1,['interface'],['interface']
Integrability,"// As a guess, try looking for the method in the current interface.; // This very well may not produce the ""right"" method.; // First check the public methods in the class interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:57,interface,interface,57,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,2,['interface'],['interface']
Integrability,// As if we imported it.; // Also save this as a shortcut to checking for decls in the interface,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:87,interface,interface,87,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// As long as we only use known information there is no need to track; // dependences here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:74,depend,dependences,74,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['depend'],['dependences']
Integrability,"// As ptxas does not support forward references of globals, we need to first; // sort the list of module-level globals in def-use order. We visit each; // global variable in order, and ensure that we emit it *after* its dependent; // globals. We use a little extra memory maintaining both a set and a list to; // have fast searches while maintaining a strict ordering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:220,depend,dependent,220,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"// As the elements can depend on elements from a different compile unit,; // information such as name and file/line source information needs to be; // updated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp:23,depend,depend,23,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVReader.cpp,1,['depend'],['depend']
Integrability,// Ask our canonical type whether our exception specification was dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:66,depend,dependent,66,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['depend'],['dependent']
Integrability,"// Assign the kIsOnHeap bit in 'bits' based on the pattern seen in uniqueID.; // See Storage::FilledByObjectAlloc for details.; // This routine is marked as inline with attribute noinline so that it never; // inlined and thus can be used in a valgrind suppression file to suppress; // the known/intentional uninitialized memory read but still be a 'quick'; // function call to avoid losing performance at object creation.; // Moving the function into the source file, results in doubling of the; // overhead (compared to inlining)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStorage.h:136,rout,routine,136,core/base/inc/TStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStorage.h,1,['rout'],['routine']
Integrability,"// Assignment is deleted because it is not clear how it should behave.; // Should default assignment be used? But then, it will use the assignment; // operators of the RooFit collections, which actually don't do assignment,; // but value synchronization! Should it be re-implemented to be actual; // assignment? That would be inconsistent with the base class! So it's; // better to not support it at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h:238,synchroniz,synchronization,238,roofit/roofitcore/inc/RooCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCollectionProxy.h,1,['synchroniz'],['synchronization']
Integrability,// Associate wrapper function tags with JIT-side function implementations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/COFFPlatform.cpp:13,wrap,wrapper,13,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/COFFPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/COFFPlatform.cpp,2,['wrap'],['wrapper']
Integrability,"// Associated with a capture, because the mapping flags depend on it.; // Go through all of the elements with the overlapped elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:56,depend,depend,56,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['depend']
Integrability,// Assume ordered loads and stores may have a loop carried dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:59,depend,dependence,59,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependence']
Integrability,"// Assume pre-ARMv6 doesn't support unaligned accesses.; //; // ARMv6 may or may not support unaligned accesses depending on the; // SCTLR.U bit, which is architecture-specific. We assume ARMv6; // Darwin and NetBSD targets support unaligned accesses, and others don't.; //; // ARMv7 always has SCTLR.U set to 1, but it has a new SCTLR.A bit; // which raises an alignment fault on unaligned accesses. Linux; // defaults this bit to 0 and handles it as a system-wide (not; // per-process) setting. It is therefore safe to assume that ARMv7+; // Linux targets support unaligned accesses. The same goes for NaCl; // and Windows.; //; // The above behavior is consistent with GCC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp:112,depend,depending,112,interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Arch/ARM.cpp,1,['depend'],['depending']
Integrability,// Assume that anything declared with a forward declaration and no; // @interface subclasses NSObject.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp:72,interface,interface,72,interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp,1,['interface'],['interface']
Integrability,"// Assume that the depth of the first head terminator will also be the depth; // of the select instruction inserted, as determined by the flag dependency.; // TBB / FBB data dependencies may delay the select even more.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:143,depend,dependency,143,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['depend'],"['dependencies', 'dependency']"
Integrability,"// At some point, RFieldBase::OnClusterCommit() may allow for a user-defined callback to change the; // column representation. For now, we inject this for testing and internal use only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:139,inject,inject,139,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,1,['inject'],['inject']
Integrability,"// At the moment the only way to end a variable lifetime is with; // a VARIABLE_LIFETIME op (which can't contain a start). If things; // change and the IR allows for a single inst that both begins; // and ends lifetime(s), this interface will need to be reworked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:228,interface,interface,228,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['interface'],['interface']
Integrability,"// At the moment, all inline asm memory operands are a single register.; // In any case, the output of this routine should always be just one; // assembler operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:108,rout,routine,108,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['rout'],['routine']
Integrability,"// At this point the SALU can be assumed to mitigate the hazard; // because either:; // (a) it is independent of the at risk SMEM (breaking chain),; // or; // (b) it is dependent on the SMEM, in which case an appropriate; // s_waitcnt lgkmcnt _must_ exist between it and the at risk; // SMEM instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp:169,depend,dependent,169,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp,1,['depend'],['dependent']
Integrability,"// At this point we know that if I is executed, then it does not wrap; // according to at least one of NSW or NUW. If I is not executed, then we do; // not know if the calculation that I represents would wrap. Multiple; // instructions can map to the same SCEV. If we apply NSW or NUW from I to; // the SCEV, we must guarantee no wrapping for that SCEV also when it is; // derived from other instructions that map to the same SCEV. We cannot make; // that guarantee for cases where I is not executed. So we need to find a; // upper bound on the defining scope for the SCEV, and prove that I is; // executed every time we enter that scope. When the bounding scope is a; // loop (the common case), this is equivalent to proving I executes on every; // iteration of that loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:65,wrap,wrap,65,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,3,['wrap'],"['wrap', 'wrapping']"
Integrability,"// At this point we know the return type of the message expression is; // id, id<...>, or Class. If we have an ObjCInterfaceDecl, we know this; // is a call to a class method whose type we can resolve. In such; // cases, promote the return type to XXX* (where XXX is the class).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:48,message,message,48,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['message'],['message']
Integrability,"// At this point, all required properties in this protocol conform to those; // declared in the class.; // Check that class implements the required methods of the protocol too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp:50,protocol,protocol,50,interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,2,['protocol'],['protocol']
Integrability,"// At this point, we know that the original region doesn't contain the leaking; // when the actual leak happens. It means that it can be confusing for the; // user to see such description in the message.; //; // Let's consider the following example:; // Object *Original = allocate(...);; // Object *New = Original;; // Original = allocate(...);; // Original->release();; //; // Complaining about a leaking object ""stored into Original"" might cause a; // rightful confusion because 'Original' is actually released.; // We should complain about 'New' instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp:195,message,message,195,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,1,['message'],['message']
Integrability,// Atomic types are just wrappers; use the associations of the; // contained type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:25,wrap,wrappers,25,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['wrap'],['wrappers']
Integrability,"// Attempt to break anti-dependence edges on the critical path. Walk the; // instructions from the bottom up, tracking information about liveness; // as we go to help determine which registers are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:25,depend,dependence,25,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['depend'],['dependence']
Integrability,"// Attempt to break anti-dependence edges. Walk the instructions; // from the bottom up, tracking information about liveness as we go; // to help determine which registers are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:25,depend,dependence,25,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['depend'],['dependence']
Integrability,// Attempt to break each anti-dependency...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:30,depend,dependency,30,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['depend'],['dependency']
Integrability,"// Attempt to canonicalize SGT/UGT -> SGE/UGE compares with constant which; // reduces the number of EFLAGs bit reads (the GE conditions don't read ZF),; // this may translate to less uops depending on uarch implementation. The; // equivalent for SLE/ULE -> SLT/ULT isn't likely to happen as we already; // canonicalize to that CondCode.; // NOTE: Only do this if incrementing the constant doesn't increase the bit; // encoding size - so it must either already be a i8 or i32 immediate, or it; // shrinks down to that. We don't do this for any i64's to avoid additional; // constant materializations.; // TODO: Can we move this to TranslateX86CC to handle jumps/branches too?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:189,depend,depending,189,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['depend'],['depending']
Integrability,// Attempt to find another opprotunity for zero latency in a different; // dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp:75,depend,dependence,75,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,1,['depend'],['dependence']
Integrability,// Attempt to get a preprocessor action dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:40,depend,dependence,40,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['dependence']
Integrability,"// Attempt to propagate a distance; // constraint into a subscript pair (Src and Dst).; // Return true if some simplification occurs.; // If the simplification isn't exact (that is, if it is conservative; // in terms of dependence), set consistent to false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:220,depend,dependence,220,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Attempt to propagate a line; // constraint into a subscript pair (Src and Dst).; // Return true if some simplification occurs.; // If the simplification isn't exact (that is, if it is conservative; // in terms of dependence), set consistent to false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:216,depend,dependence,216,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,// Attempt to resolve all of the identifiers as protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:48,protocol,protocols,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// Attempt to synchronize the packet size with the tree cache size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:14,synchroniz,synchronize,14,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['synchroniz'],['synchronize']
Integrability,"// Attempts to optimize the pattern whereby memory is copied from an alloca to; // another alloca, where the two allocas don't have conflicting mod/ref. If; // successful, the two allocas can be merged into one and the transfer can be; // deleted. This pattern is generated frequently in Rust, due to the ubiquity of; // move operations in that language.; //; // Once we determine that the optimization is safe to perform, we replace all; // uses of the destination alloca with the source alloca. We also ""shrink wrap""; // the lifetime markers of the single merged alloca to before the first use; // and after the last use. Note that the ""shrink wrapping"" procedure is a safe; // transformation only because we restrict the scope of this optimization to; // allocas that aren't captured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:513,wrap,wrap,513,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,2,['wrap'],"['wrap', 'wrapping']"
Integrability,"// Attempts to resolve and build a CoawaitExpr from ""raw"" inputs, bailing out to; // DependentCoawaitExpr if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:85,Depend,DependentCoawaitExpr,85,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['Depend'],['DependentCoawaitExpr']
Integrability,"// Attribute spellings can be shared between target-specific attributes,; // and can be shared between syntaxes for the same attribute. For; // instance, an attribute can be spelled GNU<""interrupt""> for an ARM-; // specific attribute, or MSP430-specific attribute. Additionally, an; // attribute can be spelled GNU<""dllexport""> and Declspec<""dllexport"">; // for the same semantic attribute. Ultimately, we need to map each of; // these to a single AttributeCommonInfo::Kind value, but the; // StringMatcher class cannot handle duplicate match strings. So we; // generate a list of string to match based on the syntax, and emit; // multiple string matchers depending on the syntax used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp:656,depend,depending,656,interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,1,['depend'],['depending']
Integrability,"// Auth calls depend of fSec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:14,depend,depend,14,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['depend'],['depend']
Integrability,"// Author: Alvaro Tolosa-Delgado CERN 07/2023; // Author: Jorge Agramunt Ros IFIC(Valencia,Spain) 07/2023; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* Example of reading a TTree using the RDataFrame interface; * Documentation of RDataFrame: https://root.cern/doc/master/classROOT_1_1RDataFrame.html; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/readTreeDF.cxx:516,interface,interface,516,tutorials/tree/dictionary/readTreeDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/readTreeDF.cxx,1,['interface'],['interface']
Integrability,"// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard v. Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodBDT (BDT = Boosted Decision Trees) *; * *; * *; * Description: *; * Analysis of Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * Jan Therhaag <jan.therhaag@cern.ch> - U. of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. Successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:208,integrat,integrated,208,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['integrat'],['integrated']
Integrability,"// Author: Andrei Gheata 17/02/04; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoParallelWorld; \ingroup Geometry_classes; Base class for a flat parallel geometry. The parallel geometry can be composed by both normal volumes added; using the AddNode interface (not implemented yet) or by physical nodes; which will use as position their actual global matrix with respect to the top; volume of the main geometry. All these nodes are added as daughters to the ""top"" volume of; the parallel world which acts as a navigation helper in this parallel; world. The parallel world has to be closed before calling any navigation; method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx:577,interface,interface,577,geom/geom/src/TGeoParallelWorld.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx,1,['interface'],['interface']
Integrability,"// Author: Bertrand Bellenot 22/08/02; /*************************************************************************; * Copyright (C) 1995-2002, Bertrand Bellenot. *; * All rights reserved. *; * *; * For the licensing terms see the LICENSE file. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Definition of a simple message box for the RootShower application //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSMsgBox.h:431,message,message,431,test/RootShower/RSMsgBox.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSMsgBox.h,1,['message'],['message']
Integrability,"// Author: Bertrand Bellenot 22/08/02; /*************************************************************************; * Copyright (C) 1995-2002, Bertrand Bellenot. *; * All rights reserved. *; * *; * For the licensing terms see the LICENSE file. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // Definition of the ""About"" message box for the RootShower application //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSAbout.h:434,message,message,434,test/RootShower/RSAbout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSAbout.h,1,['message'],['message']
Integrability,"// Author: Christoph Rosemann Jul 2010; // TMVA unit tests; //; // this class acts as interface to create, train and evaluate the method; // specified in the constructor; // as additional argument the limits of the ROC integral can be given; // to determine the performance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:86,interface,interface,86,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: Christoph Rosemann Oct 2010; // TMVA unit tests; //; // this class acts as interface to create, train and evaluate the method; // specified in the constructor; // additionally the regression performance is evaluated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:86,interface,interface,86,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: D. Piparo, 2015; // TMVA unit tests; //; // this class acts as interface to several reader applications in MT mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:74,interface,interface,74,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: E. v. Toerne, Nov 2011, implementing unit tests by C. Rosemann; // TMVA unit tests; //; // this class acts as interface to several factory applications",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:121,interface,interface,121,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: E. v. Toerne, Nov 2011, implementing unit tests by C. Rosemann; // TMVA unit tests; //; // this class acts as interface to several reader applications",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:121,interface,interface,121,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: Eckhard von Toerne, uses Christoph Rosemann's MethodUnitTest as example Nov 2010; // TMVA unit tests; //; // this class acts as interface to create, train and evaluate the method; // specified in the constructor; // as additional argument the limits of the ROC integral can be given; // to determine the performance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:139,interface,interface,139,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['interface'],['interface']
Integrability,"// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \defgroup dataframe Dataframe; ROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDataFrame.hxx:525,interface,interface,525,tree/dataframe/inc/ROOT/RDataFrame.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDataFrame.hxx,1,['interface'],['interface']
Integrability,"// Author: Giulio Eulisse CERN 2/2018; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // clang-format off; /** \class ROOT::RDF::RArrowDS; \ingroup dataframe; \brief RDataFrame data source class to interface with Apache Arrow. The RArrowDS implements a proxy RDataSource to be able to use Apache Arrow; tables with RDataFrame. A RDataFrame that adapts an arrow::Table class can be constructed using the factory method; ROOT::RDF::FromArrow, which accepts one parameter:; 1. An arrow::Table smart pointer. The types of the columns are derived from the types in the associated; arrow::Schema. */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx:509,interface,interface,509,tree/dataframe/src/RArrowDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx,1,['interface'],['interface']
Integrability,"// Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLD *; * *; * *; * Description: *; * Linear Discriminant (Simple Linear Regression) *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <therhaag@physik.uni-bonn.de> - Uni Bonn, Germany *; * *; * Copyright (c) 2008-2011: *; * CERN, Switzerland *; * PAN, Poland *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h:189,integrat,integrated,189,tmva/tmva/inc/TMVA/MethodLD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLD.h,1,['integrat'],['integrated']
Integrability,"// Author: Mihaela Gheata 30/03/16; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoVGShape; \ingroup Geometry_classes. Bridge class for using a VecGeom solid as TGeoShape.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/src/TGeoVGShape.cxx:445,Bridg,Bridge,445,geom/vecgeom/src/TGeoVGShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/src/TGeoVGShape.cxx,1,['Bridg'],['Bridge']
Integrability,"// Author: Stefan Schmitt; // DESY, 10/08/11; // Version 17.9, parallel to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for repeated bins with the same width; // Version 17.2, XML interface for class TUnfoldBinning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h:449,interface,interface,449,hist/unfold/inc/TUnfoldBinningXML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldBinningXML.h,1,['interface'],['interface']
Integrability,"// Author: Stefan Schmitt; // DESY, 19/10/11; // Version 17.9; //////////////////////////////////////////////////////////////////////////; // //; // //; // TUnfold provides functionality to correct data //; // for migration effects. //; // //; // Citation: S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] //; // //; // this class implements the iterative EM unfolding method //; // (also called D'Agostini Method or ""iterative Bayesian method"") //; // which has been ""invented"" independently by numnerous authors //; // to unfold Poisson-distributed, mutually exclusive bins. //; // See e.g. //; // Richardson, W.H., Opt. Soc. Amer. A62 (1972), 55 //; // Lucy, L.B., Astron. J. 79 (1974), 745. //; // Vardi, Y., Shepp, L.A. and Kaufman, L., //; // J. Amer. Stat. Assoc. 80 (1985), 8. //; // Multhei, H.N. and Schorr, B., Nucl. Instr. Meth. A257 (1987), 371 //; // D'Agostini, G., Nucl. Instr. Meth. A362 (1995), 487 //; // //; // The novelty with this implementation is that the number of //; // iterations can be chosen based on SURE //; // (Stein's unbiased Risk Estimator) //; // See: //; // Tibshirani, R.J. and Rosset, S., J. Amer. Stat. Assoc. 114, 526 //; // [arXiv:1612.09415] //; // //; // This method is there for comparison with the Tihkonov unfolding. //; // The interface is similar to ""TUnfoldDensity"" //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h:1278,interface,interface,1278,hist/unfold/inc/TUnfoldIterativeEM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldIterativeEM.h,1,['interface'],['interface']
Integrability,"// Author: Stephan Hageboeck, CERN 12 Sep 2019; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooWrapperPdf; * The RooWrapperPdf is a class that can be used to convert a function into a PDF.; *; * During construction, a RooAbsReal has to be passed. When this function is evaluated, the wrapper pdf will; * in addition evaluate its integral, and normalise the returned value. It will further ensure that negative; * return values are clipped at zero.; *; * Functions calls such as analytical integral requests or plot sampling hints are simply forwarded to the RooAbsReal; * that was passed in the constructor.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx:885,wrap,wrapper,885,roofit/roofitcore/src/RooWrapperPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx,1,['wrap'],['wrapper']
Integrability,"// Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TBatchNormLayer *; * *; * *; * Description: *; * Dense Layer Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h:140,integrat,integrated,140,tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,1,['integrat'],['integrated']
Integrability,"// Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TDenseLayer *; * *; * *; * Description: *; * Dense Layer Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DenseLayer.h:140,integrat,integrated,140,tmva/tmva/inc/TMVA/DNN/DenseLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DenseLayer.h,1,['integrat'],['integrated']
Integrability,"// Authors: Stephan Hageboeck, CERN; Andrea Sciandra, SCIPP-UCSC/Atlas; Nov 2020; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:799,adapter,adapter,799,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,"['adapter', 'integrat']","['adapter', 'integrated']"
Integrability,"// Auto-enable IntegrateBins for all RooDataHists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:15,Integrat,IntegrateBins,15,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['Integrat'],['IntegrateBins']
Integrability,// Avoid a data dependence from a select or a branch to a(nother); // select. Note no instruction can't data-depend on a branch (a branch; // instruction doesn't produce a value).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:16,depend,dependence,16,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,2,['depend'],"['depend', 'dependence']"
Integrability,// Avoid adding a false dependency on partial flag update by some 16-bit; // instructions which has the 's' bit set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp:24,depend,dependency,24,interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Thumb2SizeReduction.cpp,2,['depend'],['dependency']
Integrability,"// Avoid adding the ""Stride == 1"" predicate when we know that; // Stride >= Trip-Count. Such a predicate will effectively optimize a single; // or zero iteration loop, as Trip-Count <= Stride == 1.; //; // TODO: We are currently not making a very informed decision on when it is; // beneficial to apply stride versioning. It might make more sense that the; // users of this analysis (such as the vectorizer) will trigger it, based on; // their specific cost considerations; For example, in cases where stride; // versioning does not help resolving memory accesses/dependences, the; // vectorizer should evaluate the cost of the runtime test, and the benefit; // of various possible stride specializations, considering the alternatives; // of using gather/scatters (if available).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:564,depend,dependences,564,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependences']
Integrability,// Avoid certain wrap-arounds. This doesn't detect all wrap-arounds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp:17,wrap,wrap-arounds,17,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,2,['wrap'],['wrap-arounds']
Integrability,"// Avoid considering instructions with less frequency than the source; // instruction (i.e., avoid colder code regions of the dependence slice).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp:126,depend,dependence,126,interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,1,['depend'],['dependence']
Integrability,// Avoid creating a non-type-dependent expression that contains typos.; // Non-type-dependent expressions are liable to be discarded without; // checking for embedded typos.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:29,depend,dependent,29,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,2,['depend'],['dependent']
Integrability,// Avoid creating cycles in the DAG. We must ensure that none of the other; // operands depend on True through it's Chain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp:88,depend,depend,88,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelDAGToDAG.cpp,1,['depend'],['depend']
Integrability,// Avoid false dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:15,depend,dependency,15,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['depend'],['dependency']
Integrability,"// Avoid making a copy when initializing a template parameter of class type; // from a template parameter object of the same type. This is going beyond; // the standard, but is required for soundness: in; // template<A a> struct X { X *p; X<a> *q; };; // ... we need p and q to have the same type.; //; // Similarly, don't inject a call to a copy constructor when initializing; // from a template parameter of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:323,inject,inject,323,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inject'],['inject']
Integrability,"// Avoid rematerializing instructions that return a value that is; // different depending on vector length, even when it is not returned; // in a scalable vector/predicate register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:80,depend,depending,80,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['depend'],['depending']
Integrability,"// Avoid sending (error) messages at next action",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:25,message,messages,25,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['messages']
Integrability,// Avoid serializing long latency dependence chains.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:34,depend,dependence,34,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['depend'],['dependence']
Integrability,"// Avoid serializing long latency dependence chains.; // For acyclic path limited loops, latency was already checked above.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:34,depend,dependence,34,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['depend'],['dependence']
Integrability,"// Avoid splitting a MOVW+MOVT pair with a relocation on Windows.; // On Windows, this instruction pair is covered by one single; // IMAGE_REL_ARM_MOV32T relocation which covers both instructions. If a; // constant island is injected inbetween them, the relocation will clobber; // the instruction and fail to update the MOVT instruction.; // (These instructions are bundled up until right before the ConstantIslands; // pass.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp:225,inject,injected,225,interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMConstantIslandPass.cpp,1,['inject'],['injected']
Integrability,"// Avoid spurious messages at first action",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:18,message,messages,18,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['message'],['messages']
Integrability,"// Avoid spurious messages: deactivate new inputs ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:18,message,messages,18,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['messages']
Integrability,"// Avoid spurrious/redundant error messages in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:35,message,messages,35,core/meta/test/testHashRecursiveRemove.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx,1,['message'],['messages']
Integrability,"// B - Check if dependents(set1/set2) are compatible with current cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:16,depend,dependents,16,roofit/roofitcore/src/RooNormSetCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx,1,['depend'],['dependents']
Integrability,"// B flavor and rho charge (we do not use the integrated weights)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:46,integrat,integrated,46,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['integrat'],['integrated']
Integrability,// B is potentially the sink of a dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h:34,depend,dependence,34,interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,1,['depend'],['dependence']
Integrability,"// BB 28/10/05 : Removed (commented out) StrDup() :; // - To get same behaviour on Windows and on Linux; // - To avoid the need to use #ifdefs; // - Solve memory leaks (mainly in TTF::SetTextFont()); // No need for the calling routine to use free() anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:227,rout,routine,227,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['rout'],['routine']
Integrability,// BD matching routines used by SystemZOperands.td.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:15,rout,routines,15,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['rout'],['routines']
Integrability,// BDX matching routines used by SystemZOperands.td.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:16,rout,routines,16,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['rout'],['routines']
Integrability,"// BTI/PAuthLR may be set either on the function or the module. Set Bool from; // either the function attribute or module attribute, depending on what is; // set.; // Note: the module attributed is numeric (0 or 1) but the function attribute; // is stringy (""true"" or ""false"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.cpp:133,depend,depending,133,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.cpp,1,['depend'],['depending']
Integrability,"// Back end -- Send message or check if particular logging configuration is active",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h:20,message,message,20,roofit/roofitcore/inc/RooMsgService.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h,1,['message'],['message']
Integrability,// Back-edges are predecessors with an anti-dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:44,depend,dependence,44,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,3,['depend'],['dependence']
Integrability,// Backward dependencies are only preserved if not interleaved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:12,depend,dependencies,12,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,1,['depend'],['dependencies']
Integrability,"// Backward propagation of attributes to the returned value may be incorrect; // if it is control flow dependent.; // Consider:; // @callee {; // %rv = call @foo(); // %rv2 = call @bar(); // if (%rv2 != null); // return %rv2; // if (%rv == null); // exit(); // return %rv; // }; // caller() {; // %val = call nonnull @callee(); // }; // Here we cannot add the nonnull attribute on either foo or bar. So, we; // limit the check to both RetVal and RI are in the same basic block and; // there are no throwing/exiting instructions between these instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:103,depend,dependent,103,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['depend'],['dependent']
Integrability,"// Backward, but the distance allows a vectorization factor of dependent; // on MinDepDistBytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:63,depend,dependent,63,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,1,['depend'],['dependent']
Integrability,"// Backwards compatibility (to be removed in the future): Wrapper to only selectively write one branch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:58,Wrap,Wrapper,58,geom/gdml/inc/TGDMLWrite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h,1,['Wrap'],['Wrapper']
Integrability,// Bail on any VarDecl that is a dependent or templated type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp:33,depend,dependent,33,interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp,1,['depend'],['dependent']
Integrability,// Bail on doing Size comparison which depends on AA for now; // TODO: Remove AnyScalable once Alias Analysis deal with scalable vectors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp:39,depend,depends,39,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DeadStoreElimination.cpp,1,['depend'],['depends']
Integrability,// Bail out early if we've got a type-dependent expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:38,depend,dependent,38,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['depend'],['dependent']
Integrability,"// Bail out, unless we have a non-wrapping, monotonic range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:34,wrap,wrapping,34,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['wrap'],['wrapping']
Integrability,"// Base architecture version, which we need to know because some feature; // dependencies change depending on this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:77,depend,dependencies,77,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,2,['depend'],"['dependencies', 'depending']"
Integrability,// Base class for classes that report changes to the IR.; // It presents an interface for such classes and provides calls; // on various events as the new pass manager transforms the IR.; // It also provides filtering of information based on hidden options; // specifying which functions are interesting.; // Calls are made for the following events/queries:; // 1. The initial IR processed.; // 2. To get the representation of the IR (of type \p T).; // 3. When a pass does not change the IR.; // 4. When a pass changes the IR (given both before and after representations; // of type \p T).; // 5. When an IR is invalidated.; // 6. When a pass is run on an IR that is not interesting (based on options).; // 7. When a pass is ignored (pass manager or adapter pass).; // 8. To compare two IR representations (of type \p T).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h:76,interface,interface,76,interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,2,"['adapter', 'interface']","['adapter', 'interface']"
Integrability,"// Base class interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/InitialGradientCalculator.cxx:14,interface,interface,14,math/minuit2/src/InitialGradientCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/InitialGradientCalculator.cxx,1,['interface'],['interface']
Integrability,"// Base-vector interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrans.h:15,interface,interface,15,graf3d/eve/inc/TEveTrans.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrans.h,2,['interface'],['interface']
Integrability,"// BaseClassInfo interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:17,interface,interface,17,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,2,['interface'],['interface']
Integrability,// Bases are always records in a well-formed non-dependent class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:49,depend,dependent,49,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,"// Basic block sections allows basic block subsets to be placed in unique; // sections. For each section, the begin and end label must be added to the; // list. If there is more than one range, debug ranges must be used.; // Otherwise, low/high PC can be used.; // FIXME: Debug Info Emission depends on block order and this assumes that; // the order of blocks will be frozen beyond this point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:292,depend,depends,292,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['depend'],['depends']
Integrability,"// Because ClassDefInline does not yet support class template on all platforms,; // we have no ClassDef and thus can not get a good message from TObject::Error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:132,message,message,132,core/meta/src/TCheckHashRecursiveRemoveConsistency.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TCheckHashRecursiveRemoveConsistency.h,1,['message'],['message']
Integrability,"// Because DepCands is constructed by visiting accesses in the order in; // which they appear in alias sets (which is deterministic) and the; // iteration order within an equivalence class member is only dependent on; // the order in which unions and insertions are performed on the; // equivalence class, the iteration order is deterministic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:204,depend,dependent,204,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependent']
Integrability,"// Because InstCombine turns 'sub nuw' to 'add' losing the no-wrap flag, we; // will most likely not see it. Let's try to prove it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:62,wrap,wrap,62,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['wrap'],['wrap']
Integrability,"// Because step is +/- 1 and MaxIter has same type as Start (i.e. it does; // not exceed max unsigned value of this type), this effectively proves; // that there is no wrap during the iteration. To prove that there is no; // signed/unsigned wrap, we need to check that; // Start <= Last for step = 1 or Start >= Last for step = -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:168,wrap,wrap,168,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['wrap'],['wrap']
Integrability,"// Because we're processing a DAG for the dependences, we recognize; // the back-edge in recurrences by anti dependences.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:42,depend,dependences,42,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,2,['depend'],['dependences']
Integrability,"// Before the OpEntryPoints' output, we need to add the entry point's; // interfaces. The interface is a list of IDs of global OpVariable instructions.; // These declare the set of global variables from a module that form; // the interface of this entry point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:74,interface,interfaces,74,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,3,['interface'],"['interface', 'interfaces']"
Integrability,"// Before version 1.4, the interface's storage classes are limited to; // the Input and Output storage classes. Starting with version 1.4,; // the interface's storage classes are all storage classes used in; // declaring all global variables referenced by the entry point call tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:27,interface,interface,27,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,2,['interface'],['interface']
Integrability,"// Before we rewrite it, put the original message expression in a comment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:42,message,message,42,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['message'],['message']
Integrability,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,depend,dependsOn,37,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['depend'],['dependsOn']
Integrability,"// Before/After callbacks accept IRUnits whenever appropriate, so they need; // to take them as constant pointers, wrapped with llvm::Any.; // For the case when IRUnit has been invalidated there is a different; // callback to use - AfterPassInvalidated.; // We call all BeforePassFuncs to determine if a pass should run or not.; // BeforeNonSkippedPassFuncs are called only if the pass should run.; // TODO: currently AfterPassInvalidated does not accept IRUnit, since passing; // already invalidated IRUnit is unsafe. There are ways to handle invalidated; // IRUnits in a safe way, and we might pursue that as soon as there is a; // useful instrumentation that needs it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h:115,wrap,wrapped,115,interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h,1,['wrap'],['wrapped']
Integrability,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:204,integrat,integrated,204,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,2,['integrat'],['integrated']
Integrability,// Below here is the non-inherited interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h:35,interface,interface,35,interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,1,['interface'],['interface']
Integrability,"// Bin fully in the integration domain",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:20,integrat,integration,20,roofit/roofit/src/RooParametricStepFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx,1,['integrat'],['integration']
Integrability,"// Bind the appropriate analytic integral of our RooRealVar object to; // those of its arguments that will be integrated out numerically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:110,integrat,integrated,110,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrated']
Integrability,"// Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:166,interface,interface,166,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['interface'],['interface']
Integrability,"// Binned fit interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h:14,interface,interface,14,roofit/roofitcore/inc/RooAbsCategoryLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h,1,['interface'],['interface']
Integrability,"// Bins are addressed in two different modes, depending; // on whether the compact bin index fits into a Long64_t or not.; // If it does, we can use it as a ""perfect hash"" for the TExMap.; // If not we build a hash from the compact bin index, and use that; // as the TExMap's hash.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:46,depend,depending,46,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['depend'],['depending']
Integrability,"// Bit-reverse Load Intrinsic: Figure out the underlying object the base; // pointer points to, for the bit-reverse load intrinsic. Setting this to; // memoperand might help alias analysis to figure out the dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:207,depend,dependencies,207,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,1,['depend'],['dependencies']
Integrability,"// Bitcast to vXi1 type and then back to integer. This gets the mask; // register type into the IR, but might be optimized out depending on; // what's around it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:127,depend,depending,127,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['depend'],['depending']
Integrability,// Bitfield with value-dependent width is type-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:23,depend,dependent,23,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,2,['depend'],['dependent']
Integrability,"// Block captures count as local values and have imprecise semantics.; // They also can't be arrays, so need to worry about that.; //; // For const-qualified captures, emit clang.arc.use to ensure the captured; // object doesn't get released while we are still depending on its validity; // within the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:261,depend,depending,261,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['depend'],['depending']
Integrability,// Block intended to contains information on the bitcode versioning.; // Can be used to provide better error messages when we fail to parse a; // bitcode file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h:109,message,messages,109,interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/LLVMBitCodes.h,1,['message'],['messages']
Integrability,"// Block iterator interface. This provides access to the list of incoming; // basic blocks, which parallels the list of incoming values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h:18,interface,interface,18,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,1,['interface'],['interface']
Integrability,"// Block iterator interface. This provides access to the list of incoming; // basic blocks, which parallels the list of incoming values.; // Please note that we are not providing non-const iterators for blocks to; // force all updates go through an interface function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:18,interface,interface,18,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['interface'],['interface']
Integrability,// Block which routes exception to correct catch handler block,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:15,rout,routes,15,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,1,['rout'],['routes']
Integrability,"// Blocks are difficult because the return type may not be stored in the; // BlockDecl itself. The AST should probably be enhanced, but for now we; // just do what we can.; // If the block is declared without an explicit argument list, the; // signature-as-written just includes the return type, not the entire; // function type.; // FIXME: All blocks should have signatures-as-written, even if the return; // type is inferred. (That's signified with a dependent result type.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:453,depend,dependent,453,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['depend'],['dependent']
Integrability,"// Boolean functor whose predicate depends on the bin's density. Used for ascending sort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTreeBinning.cxx:35,depend,depends,35,math/mathcore/src/TKDTreeBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTreeBinning.cxx,1,['depend'],['depends']
Integrability,"// Boolean functor whose predicate depends on the bin's density. Used for descending sort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTreeBinning.cxx:35,depend,depends,35,math/mathcore/src/TKDTreeBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTreeBinning.cxx,1,['depend'],['depends']
Integrability,"// Bootstrap process -- here be phase-ordering dragons.; //; // The MachOPlatform class uses allocation actions to register metadata; // sections with the ORC runtime, however the runtime contains metadata; // registration functions that have their own metadata that they need to; // register (e.g. the frame-info registration functions have frame-info).; // We can't use an ordinary lookup to find these registration functions; // because their address is needed during the link of the containing graph; // itself (to build the allocation actions that will call the registration; // functions). Further complicating the situation (a) the graph containing; // the registration functions is allowed to depend on other graphs (e.g. the; // graph containing the ORC runtime RTTI support) so we need to handle an; // unknown set of dependencies during bootstrap, and (b) these graphs may; // be linked concurrently if the user has installed a concurrent dispatcher.; //; // We satisfy these constraints by implementing a bootstrap phase during which; // allocation actions generated by MachOPlatform are appended to a list of; // deferred allocation actions, rather than to the graphs themselves. At the; // end of the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:701,depend,depend,701,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,2,['depend'],"['depend', 'dependencies']"
Integrability,"// Both A and B shall be any integer type other than ""plain"" char, bool, a bit-; // precise integer type, or an enumerated type, and they need not be the same.; // R shall be a modifiable lvalue of any integer type other than ""plain"" char,; // bool, a bit-precise integer type, or an enumerated type. It shouldn't be; // short type, either. Otherwise, it may be unable to hold two the result of; // operating two 'int's.; // A diagnostic message will be produced if A or B are not suitable integer; // types, or if R is not a modifiable lvalue of a suitable integer type or R; // is short type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdckdint.h:438,message,message,438,interpreter/llvm-project/clang/lib/Headers/stdckdint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdckdint.h,1,['message'],['message']
Integrability,"// Both auto types can't be dependent, otherwise they wouldn't have been; // sugar. This implies they can't contain unexpanded packs either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:28,depend,dependent,28,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['depend'],['dependent']
Integrability,// Both operands must have the matching no-wrap for this kind of division.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp:43,wrap,wrap,43,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,1,['wrap'],['wrap']
Integrability,"// Both ptrtoint instructions must wrap global objects:; // - Only global variables are eligible for image relative relocations.; // - The subtrahend refers to the special symbol __ImageBase, a GlobalVariable.; // We expect __ImageBase to be a global variable without a section, externally; // defined.; //; // It should look something like this: @__ImageBase = external constant i8",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:35,wrap,wrap,35,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,1,['wrap'],['wrap']
Integrability,// Branch to the externalExceptionBlock if the exception is foreign or; // to a catch router if not. Either way the finally block will be run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:86,rout,router,86,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,1,['rout'],['router']
Integrability,// Break a partial register dependency after getPartialRegUpdateClearance; // returned non-zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:28,depend,dependency,28,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['dependency']
Integrability,// Break dependence on undef uses. Do this before updating LiveRegs below.; // This can remove a false dependence with no additional instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:9,depend,dependence,9,interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,2,['depend'],['dependence']
Integrability,// Break dependency on the data register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:9,depend,dependency,9,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['depend'],['dependency']
Integrability,// Break false dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:15,depend,dependency,15,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['depend'],['dependency']
Integrability,"// Breaking before the ""./->"" of a chained call/member access is reasonably; // cheap, as formatting those with one call per line is generally; // desirable. In particular, it should be cheaper to break before the call; // than it is to break inside a call's parameters, which could lead to weird; // ""hanging"" indents. The exception is the very last ""./->"" to support this; // frequent pattern:; //; // aaaaaaaa.aaaaaaaa.bbbbbbb().ccccccccccccccccccccc(; // dddddddd);; //; // which might otherwise be blown up onto many lines. Here, clang-format; // won't produce ""hanging"" indents anyway as there is no other trailing; // call.; //; // Also apply higher penalty is not a call as that might lead to a wrapping; // like:; //; // aaaaaaa; // .aaaaaaaaa.bbbbbbbb(cccccccc);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:703,wrap,wrapping,703,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['wrap'],['wrapping']
Integrability,// Bridge from a CF type to an ARC type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:3,Bridg,Bridge,3,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['Bridg'],['Bridge']
Integrability,// Bridge from an ARC type to a CF type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:3,Bridg,Bridge,3,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['Bridg'],['Bridge']
Integrability,"// Broadcast main message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:18,message,message,18,proof/proofplayer/src/TProofPlayerLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx,1,['message'],['message']
Integrability,"// Buffer redirection routines used in inside RooAbsOptTestStatistics",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsDataStore.h:22,rout,routines,22,roofit/roofitcore/inc/RooAbsDataStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsDataStore.h,3,['rout'],['routines']
Integrability,// Build a DependentNameType that will perform lookup into RD at; // instantiation time.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:11,Depend,DependentNameType,11,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['Depend'],['DependentNameType']
Integrability,"// Build a list of all candidate OMPDeclareMapperDecls, which is provided by; // the previous user-defined mapper lookup in dependent environment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:124,depend,dependent,124,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['depend'],['dependent']
Integrability,// Build a map between user nodes and their operands order to speedup; // search. The graph currently does not provide this dependency directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:124,depend,dependency,124,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['dependency']
Integrability,// Build a message-send.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp:11,message,message-send,11,interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,4,['message'],['message-send']
Integrability,// Build a new class message send to 'super'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:21,message,message,21,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['message'],['message']
Integrability,// Build a new class message send.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:21,message,message,21,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['message'],['message']
Integrability,// Build a new instance message send.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:24,message,message,24,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['message'],['message']
Integrability,"// Build a reference to Value* in the wrapper, should be; // the only argument of the wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:38,wrap,wrapper,38,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,2,['wrap'],['wrapper']
Integrability,"// Build a wrapper function for F. The wrapper simply calls F, and is; // added to FnsToInstrument so that any instrumentation according to its; // WrapperKind is done in the second pass below.; // If the function being wrapped has local linkage, then preserve the; // function's linkage in the wrapper function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:11,wrap,wrapper,11,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,5,"['Wrap', 'wrap']","['WrapperKind', 'wrapped', 'wrapper']"
Integrability,// Build an appropriate message based on the return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp:24,message,message,24,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,1,['message'],['message']
Integrability,// Build an unanalyzed expression if any of the operands is type-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:65,depend,dependent,65,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Build an unanalyzed expression if either operand is type-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:60,depend,dependent,60,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,"// Build and insert \p Res = G_ANYEXT \p Op, \p Res = G_SEXT \p Op, or \p Res; // = G_ZEXT \p Op depending on how the target wants to extend boolean values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:97,depend,depending,97,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['depend'],['depending']
Integrability,"// Build and insert \p Res = G_ANYEXT \p Op, \p Res = G_TRUNC \p Op, or; /// \p Res = COPY \p Op depending on the differing sizes of \p Res and \p Op.; /// ///; /// \pre setBasicBlock or setMI must have been called.; /// \pre \p Res must be a generic virtual register with scalar or vector type.; /// \pre \p Op must be a generic virtual register with scalar or vector type.; ///; /// \return The newly created instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:97,depend,depending,97,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['depend'],['depending']
Integrability,"// Build and insert \p Res = G_SEXT_INREG \p Op, 1 or \p Res = G_AND \p Op, 1,; // or COPY depending on how the target wants to extend boolean values, using; // the original register size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:91,depend,depending,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['depend'],['depending']
Integrability,// Build basic protocol declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:15,protocol,protocol,15,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,1,['protocol'],['protocol']
Integrability,// Build body for the coroutine wrapper statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:32,wrap,wrapper,32,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['wrap'],['wrapper']
Integrability,"// Build call void __kmpc_error(ident_t *loc, int severity, const char; // *message)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:76,message,message,76,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['message'],['message']
Integrability,// Build declaration fragments and sub-heading by generating them for the; // interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXExtractAPI.cpp:78,interface,interface,78,interpreter/llvm-project/clang/tools/libclang/CXExtractAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXExtractAPI.cpp,1,['interface'],['interface']
Integrability,// Build declaration fragments and sub-heading for the interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:55,interface,interface,55,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,1,['interface'],['interface']
Integrability,// Build declaration fragments and sub-heading for the protocol.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:55,protocol,protocol,55,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,1,['protocol'],['protocol']
Integrability,// Build dependence sets and check whether we need a runtime pointer bounds; // check.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:9,depend,dependence,9,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependence']
Integrability,// Build dependencies between blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:9,depend,dependencies,9,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['depend'],['dependencies']
Integrability,// Build dependency graph of a JITDylib,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFPlatform.h:9,depend,dependency,9,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFPlatform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/COFFPlatform.h,1,['depend'],['dependency']
Integrability,"// Build initial worklist, record block dependencies/dependants and; // non-local symbol dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp:40,depend,dependencies,40,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,3,['depend'],"['dependants', 'dependencies']"
Integrability,// Build list and emit dependences,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:23,depend,dependences,23,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['depend'],['dependences']
Integrability,// Build list of dependences,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:17,depend,dependences,17,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['depend'],['dependences']
Integrability,// Build list of dependences.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:17,depend,dependences,17,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['depend'],['dependences']
Integrability,// Build struct kmp_task_t {; // void * shareds;; // kmp_routine_entry_t routine;; // kmp_int32 part_id;; // kmp_cmplrdata_t data1;; // kmp_cmplrdata_t data2;; // For taskloops additional fields:; // kmp_uint64 lb;; // kmp_uint64 ub;; // kmp_int64 st;; // kmp_int32 liter;; // void * reductions;; // };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:73,rout,routine,73,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['rout'],['routine']
Integrability,"// Build the (potentially-overloaded, potentially-dependent); // binary operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:50,depend,dependent,50,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Build the base of the Objective-C interface declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:37,interface,interface,37,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,1,['interface'],['interface']
Integrability,"// Build the canonical type, which has the canonical base type and a; // sorted-and-uniqued list of protocols and the type arguments; // canonicalized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:100,protocol,protocols,100,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocols']
Integrability,"// Build the default argument expression; we don't actually care; // if this succeeds or not, because this routine will complain; // if there was a problem.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:107,rout,routine,107,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['rout'],['routine']
Integrability,// Build the function loaded notification message,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp:42,message,message,42,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventListener.cpp,1,['message'],['message']
Integrability,"// Build the graphical interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:23,interface,interface,23,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['interface'],['interface']
Integrability,// Build the lexical block structure to emit for this routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:54,rout,routine,54,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['rout'],['routine']
Integrability,// Build the message ref structure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:13,message,message,13,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['message'],['message']
Integrability,"// Build the protocol string for TAuthenticate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx:13,protocol,protocol,13,net/auth/src/TRootAuth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx,1,['protocol'],['protocol']
Integrability,// Build typedef struct:; // kmp_taskred_input {; // void *reduce_shar; // shared reduction item; // void *reduce_orig; // original reduction item used for initialization; // size_t reduce_size; // size of data item; // void *reduce_init; // data initialization routine; // void *reduce_fini; // data finalization routine; // void *reduce_comb; // data combiner routine; // kmp_task_red_flags_t flags; // flags for additional info from compiler; // } kmp_taskred_input_t;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:262,rout,routine,262,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,3,['rout'],['routine']
Integrability,"// Build up the function call. There's two kinds. First, the sized; // variants. These calls are going to be one of the following (with; // N=1,2,4,8,16):; // iN __atomic_load_N(iN *ptr, int ordering); // void __atomic_store_N(iN *ptr, iN val, int ordering); // iN __atomic_{exchange|fetch_*}_N(iN *ptr, iN val, int ordering); // bool __atomic_compare_exchange_N(iN *ptr, iN *expected, iN desired,; // int success_order, int failure_order); //; // Note that these functions can be used for non-integer atomic; // operations, the values just need to be bitcast to integers on the; // way in and out.; //; // And, then, the generic variants. They look like the following:; // void __atomic_load(size_t size, void *ptr, void *ret, int ordering); // void __atomic_store(size_t size, void *ptr, void *val, int ordering); // void __atomic_exchange(size_t size, void *ptr, void *val, void *ret,; // int ordering); // bool __atomic_compare_exchange(size_t size, void *ptr, void *expected,; // void *desired, int success_order,; // int failure_order); //; // The different signatures are built up depending on the; // 'UseSizedLibcall', 'CASExpected', 'ValueOperand', and 'HasResult'; // variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:1088,depend,depending,1088,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,1,['depend'],['depending']
Integrability,"// Build void __kmpc_omp_taskwait_deps_51(ident_t *, kmp_int32 gtid,; // kmp_int32 ndeps, kmp_depend_info_t *dep_list, kmp_int32; // ndeps_noalias, kmp_depend_info_t *noalias_dep_list,; // kmp_int32 has_no_wait); if dependence info is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:216,depend,dependence,216,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['dependence']
Integrability,"// Build void __kmpc_omp_wait_deps(ident_t *, kmp_int32 gtid,; // kmp_int32 ndeps, kmp_depend_info_t *dep_list, kmp_int32; // ndeps_noalias, kmp_depend_info_t *noalias_dep_list); if dependence info; // is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:182,depend,dependence,182,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['dependence']
Integrability,"// Builds the ""guest exit thunk"", a helper to call a function which may or may; // not be an exit thunk. (We optimistically assume non-dllimport function; // declarations refer to functions defined in AArch64 code; if the linker; // can't prove that, we use this routine instead.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64Arm64ECCallLowering.cpp:263,rout,routine,263,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64Arm64ECCallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64Arm64ECCallLowering.cpp,1,['rout'],['routine']
Integrability,"// Built-in extensions also register their dependencies, but in a separate file,; // later in the process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:43,depend,dependencies,43,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['depend'],['dependencies']
Integrability,"// By default, a dependency-breaking zero-idiom is expected to be optimized; // at register renaming stage. That means, no physical register is allocated; // to the instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:17,depend,dependency-breaking,17,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,1,['depend'],['dependency-breaking']
Integrability,"// By definition, all loop passes need the LoopInfo analysis and the; // Dominator tree it depends on. Because they all participate in the loop; // pass manager, they must also preserve these.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:91,depend,depends,91,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['depend'],['depends']
Integrability,"// By extension, we assign external linkage to Objective-C; // interfaces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:63,interface,interfaces,63,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['interface'],['interfaces']
Integrability,"// C I/O interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TString.h:9,interface,interface,9,core/base/inc/TString.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TString.h,1,['interface'],['interface']
Integrability,"// C cannot always handle TypoExpr nodes in builtin calls and direct; // function calls as their argument checking don't necessarily handle; // dependent types properly, so make sure any TypoExprs have been; // dealt with.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:144,depend,dependent,144,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// C cannot handle TypoExpr nodes in the condition because it; // doesn't handle dependent types properly, so make sure any TypoExprs have; // been dealt with before checking the operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:81,depend,dependent,81,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// C cannot handle TypoExpr nodes on either side of a binop because it; // doesn't handle dependent types properly, so make sure any TypoExprs have; // been dealt with before checking the operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:90,depend,dependent,90,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:197,message,messages,197,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,3,['message'],"['message', 'messages']"
Integrability,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:168,integrat,integration,168,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,2,['integrat'],['integration']
Integrability,"// C++ [basic.lookup.argdep]p3:; // Let X be the lookup set produced by unqualified lookup (3.4.1); // and let Y be the lookup set produced by argument dependent; // lookup (defined as follows). If X contains [...] then Y is; // empty. Otherwise Y is the set of declarations found in the; // namespaces associated with the argument types as described; // below. The set of declarations found by the lookup of the name; // is the union of X and Y.; //; // Here, we compute Y and add its members to the overloaded; // candidate set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:152,depend,dependent,152,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,2,['depend'],['dependent']
Integrability,"// C++ [class.base.init]p2:; // [...] Unless the mem-initializer-id names a nonstatic data; // member of the constructor's class or a direct or virtual base; // of that class, the mem-initializer is ill-formed. A; // mem-initializer-list can initialize a base class using any; // name that denotes that base class type.; // We can store the initializers in ""as-written"" form and delay analysis until; // instantiation if the constructor is dependent. But not for dependent; // (broken) code in a non-template! SetCtorInitializers does not expect this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:440,depend,dependent,440,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['depend'],['dependent']
Integrability,"// C++ [class.friend]p1; // A friend of a class is a function or class....; // Note that this sees through typedefs, which is intended.; // It *doesn't* see through dependent types, which is correct; // according to [temp.arg.type]p3:; // If a declaration acquires a function type through a; // type dependent on a template-parameter and this causes; // a declaration that does not use the syntactic form of a; // function declarator to have a function type, the program; // is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:165,depend,dependent,165,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['depend'],['dependent']
Integrability,// C++ [class.member.lookup]p3:; // type declarations (including injected-class-names) are replaced by; // the types they designate,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:65,inject,injected-class-names,65,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['inject'],['injected-class-names']
Integrability,"// C++ [class.qual]p2: A lookup that would find the injected-class-name; // instead names the constructors of the class, except when naming a class.; // This is ill-formed when we're not actually forming a ctor or dtor name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:52,inject,injected-class-name,52,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['inject'],['injected-class-name']
Integrability,"// C++ [class.qual]p2:; // In a lookup in which function names are not ignored and the; // nested-name-specifier nominates a class C, if the name specified; // after the nested-name-specifier, when looked up in C, is the; // injected-class-name of C [...] then the name is instead considered; // to name the constructor of class C.; //; // Unlike in an elaborated-type-specifier, function names are not ignored; // in typename-specifier lookup. However, they are ignored in all the; // contexts where we form a typename type with no keyword (that is, in; // mem-initializer-ids, base-specifiers, and elaborated-type-specifiers).; //; // FIXME: That's not strictly true: mem-initializer-id lookup does not; // ignore functions, but that appears to be an oversight.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:225,inject,injected-class-name,225,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inject'],['injected-class-name']
Integrability,"// C++ [class]p2:; // [...] The class-name is also inserted into the scope of the; // class itself; this is known as the injected-class-name. For; // purposes of access checking, the injected-class-name is treated; // as if it were a public member name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:121,inject,injected-class-name,121,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['inject'],['injected-class-name']
Integrability,// C++ [dcl.fct.default]p6 (DR217):; // Default arguments for a member function of a class template shall; // be specified on the initial declaration of the member function; // within the class template.; //; // Reading the tea leaves a bit in DR217 and its reference to DR205; // leads me to the conclusion that one cannot add default function; // arguments for an out-of-line definition of a member function of a; // dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:419,depend,dependent,419,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// C++ [dcl.stc]p1:; // A storage-class-specifier shall not be specified in an explicit; // specialization (14.7.3); // FIXME: We should be checking this for dependent specializations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:158,depend,dependent,158,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['dependent']
Integrability,"// C++ [over.match.class.deduct]p1.4:; // if C is defined and its definition satisfies the conditions for an; // aggregate class ([dcl.init.aggr]) with the assumption that any; // dependent base class has no virtual functions and no virtual base; // classes, and the initializer is a non-empty braced-init-list or; // parenthesized expression-list, and there are no deduction-guides for; // C, the set contains an additional function template, called the; // aggregate deduction candidate, defined as follows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:180,depend,dependent,180,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['depend'],['dependent']
Integrability,// C++ [over.match.class.deduct]p1.5:; // brace elision is not considered for any aggregate element that has a; // dependent non-array type or an array type with a value-dependent bound,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:115,depend,dependent,115,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['depend'],['dependent']
Integrability,// C++ [over.match.class.deduct]p1.5:; // brace elision is not considered for any aggregate element that has a; // dependent non-array type or an array type with a value-dependent; // bound,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:115,depend,dependent,115,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['depend'],['dependent']
Integrability,"// C++ [temp.arg.type]p3:; // If a declaration acquires a function type through a type; // dependent on a template-parameter and this causes a; // declaration that does not use the syntactic form of a; // function declarator to have function type, the program is; // ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:91,depend,dependent,91,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,2,['depend'],['dependent']
Integrability,"// C++ [temp.class.spec]p9:; // Within the argument list of a class template partial; // specialization, the following restrictions apply:; // -- A partially specialized non-type argument expression; // shall not involve a template parameter of the partial; // specialization except when the argument expression is a; // simple identifier.; // -- The type of a template parameter corresponding to a; // specialized non-type argument shall not be dependent on a; // parameter of the specialization.; // DR1315 removes the first bullet, leaving an incoherent set of rules.; // We implement a compromise between the original rules and DR1315:; // -- A specialized non-type template argument shall not be; // type-dependent and the corresponding template parameter; // shall have a non-dependent type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:446,depend,dependent,446,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,['depend'],['dependent']
Integrability,"// C++ [temp.deduct.call]p10: [DR1391]; // If deduction succeeds for all parameters that contain; // template-parameters that participate in template argument deduction,; // and all template arguments are explicitly specified, deduced, or; // obtained from default template arguments, remaining parameters are then; // compared with the corresponding arguments. For each remaining parameter; // P with a type that was non-dependent before substitution of any; // explicitly-specified template arguments, if the corresponding argument; // A cannot be implicitly converted to P, deduction fails.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:422,depend,dependent,422,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['dependent']
Integrability,// C++ [temp.dep.constexpr]p5:; // An expression of the form & qualified-id where the qualified-id names a; // dependent member of the current instantiation is value-dependent. An; // expression of the form & cast-expression is also value-dependent if; // evaluating cast-expression as a core constant expression succeeds and; // the result of the evaluation refers to a templated entity that is an; // object with static or thread storage duration or a member function.; //; // What this amounts to is: constant-evaluate the operand and check whether it; // refers to a templated entity other than a variable with local storage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:111,depend,dependent,111,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,3,['depend'],['dependent']
Integrability,"// C++ [temp.dep.expr]p3:; // An id-expression is type-dependent if it contains:; // - an identifier associated by name lookup with an entity captured by copy; // in a lambda-expression that has an explicit object parameter whose type; // is dependent ([dcl.fct]),",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:55,depend,dependent,55,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,"// C++ [temp.dep.expr]p3:; // An id-expression is type-dependent if it contains:; // - an identifier associated by name lookup with one or more declarations; // declared with a dependent type; // - an identifier associated by name lookup with an entity captured by; // copy ([expr.prim.lambda.capture]); // in a lambda-expression that has an explicit object parameter whose; // type is dependent ([dcl.fct]),; //; // [The ""or more"" case is not modeled as a DeclRefExpr. There are a bunch; // more bullets here that we handle by treating the declaration as having a; // dependent type if they involve a placeholder type that can't be deduced.]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:55,depend,dependent,55,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,4,['depend'],['dependent']
Integrability,"// C++ [temp.dep.expr]p3:; // An id-expression is type-dependent if it contains:; // -- an identifier that was declared with a dependent type,; // (note: handled after lookup); // -- a template-id that is dependent,; // (note: handled in BuildTemplateIdExpr); // -- a conversion-function-id that specifies a dependent type,; // -- a nested-name-specifier that contains a class-name that; // names a dependent type.; // Determine whether this is a member of an unknown specialization;; // we need to handle these differently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:55,depend,dependent,55,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,5,['depend'],['dependent']
Integrability,"// C++ [temp.dep.type]p1:; // A type is dependent if it is...; // - an array type constructed from any dependent type or whose; // size is specified by a constant expression that is; // value-dependent,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:40,depend,dependent,40,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,3,['depend'],['dependent']
Integrability,"// C++ [temp.dep]p3:; // In the definition of a class template or a member of a class template,; // if a base class of the class template depends on a template-parameter,; // the base class scope is not examined during unqualified name lookup; // either at the point of definition of the class template or member or; // during an instantiation of the class tem- plate or member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp:138,depend,depends,138,interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,1,['depend'],['depends']
Integrability,"// C++ [temp.friend]p1:; // For a friend function declaration that is not a template declaration:; // -- if the name of the friend is a qualified or unqualified template-id,; // [...], otherwise; // -- if the name of the friend is a qualified-id and a matching; // non-template function is found in the specified class or namespace,; // the friend declaration refers to that function, otherwise,; // -- if the name of the friend is a qualified-id and a matching function; // template is found in the specified class or namespace, the friend; // declaration refers to the deduced specialization of that function; // template, otherwise; // -- the name shall be an unqualified-id [...]; // If we get here for a qualified friend declaration, we've just reached the; // third bullet. If the type of the friend is dependent, skip this lookup; // until instantiation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:809,depend,dependent,809,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['depend'],['dependent']
Integrability,// C++ [temp.friend]p9:; // A friend function template with a constraint that depends on a; // template parameter from an enclosing template shall be a definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:78,depend,depends,78,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['depends']
Integrability,"// C++ [temp.local]p1:; // Like normal (non-template) classes, class templates have an; // injected-class-name (Clause 9). The injected-class-name; // can be used with or without a template-argument-list. When; // it is used without a template-argument-list, it is; // equivalent to the injected-class-name followed by the; // template-parameters of the class template enclosed in; // <>. When it is used with a template-argument-list, it; // refers to the specified class template specialization,; // which could be the current specialization or another; // specialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:91,inject,injected-class-name,91,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,['inject'],['injected-class-name']
Integrability,"// C++ [temp.local]p3:; // A lookup that finds an injected-class-name (10.2) can result in an; // ambiguity in certain cases (for example, if it is found in more than; // one base class). If all of the injected-class-names that are found; // refer to specializations of the same class template, and if the name; // is followed by a template-argument-list, the reference refers to the; // class template itself and not a specialization thereof, and is not; // ambiguous.; //; // This filtering can make an ambiguous result into an unambiguous one,; // so try again after filtering out template names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:50,inject,injected-class-name,50,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['inject'],"['injected-class-name', 'injected-class-names']"
Integrability,"// C++ [temp.local]p3:; // A lookup that finds an injected-class-name (10.2) can result in; // an ambiguity in certain cases (for example, if it is found in; // more than one base class). If all of the injected-class-names; // that are found refer to specializations of the same class; // template, and if the name is used as a template-name, the; // reference refers to the class template itself and not a; // specialization thereof, and is not ambiguous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:50,inject,injected-class-name,50,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,2,['inject'],"['injected-class-name', 'injected-class-names']"
Integrability,"// C++ [temp.res]p3:; // A qualified-id that refers to a type and in which the; // nested-name-specifier depends on a template-parameter (14.6.2); // shall be prefixed by the keyword typename to indicate that the; // qualified-id denotes a type, forming an; // elaborated-type-specifier (7.1.5.3).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:105,depend,depends,105,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['depends']
Integrability,"// C++ [temp.res]p3:; // A qualified-id that refers to a type and in which the; // nested-name-specifier depends on a template-parameter (14.6.2); // shall be prefixed by the keyword typename to indicate that the; // qualified-id denotes a type, forming an; // elaborated-type-specifier (7.1.5.3).; //; // We therefore do not perform any name lookup if the result would; // refer to a member of an unknown specialization.; // In C++2a, in several contexts a 'typename' is not required. Also; // allow this as an extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:105,depend,depends,105,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['depends']
Integrability,"// C++03 [namespace.udecl]p3:; // C++0x [namespace.udecl]p8:; // A using-declaration for a class member shall be a member-declaration.; // C++20 [namespace.udecl]p7; // ... other than an enumerator ...; // If we weren't able to compute a valid scope, it might validly be a; // dependent class or enumeration scope. If we have a 'typename' keyword,; // the scope must resolve to a class type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:277,depend,dependent,277,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// C++0x [temp.deduct.partial]p3:; // The types used to determine the ordering depend on the context in which; // the partial ordering is done:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:79,depend,depend,79,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['depend']
Integrability,"// C++0x [temp.names]p5:; // If a name prefixed by the keyword template is not the name of; // a template, the program is ill-formed. [Note: the keyword; // template may not be applied to non-template members of class; // templates. -end note ] [ Note: as is the case with the; // typename prefix, the template prefix is allowed in cases; // where it is not strictly necessary; i.e., when the; // nested-name-specifier or the expression on the left of the ->; // or . is not dependent on a template-parameter, or the use; // does not appear in the scope of a template. -end note]; //; // Note: C++03 was more strict here, because it banned the use of; // the ""template"" keyword prior to a template-name that was not a; // dependent name. C++ DR468 relaxed this requirement (the; // ""template"" keyword is now permitted). We follow the C++0x; // rules, even in C++03 mode with a warning, retroactively applying the DR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:475,depend,dependent,475,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['depend'],['dependent']
Integrability,"// C++11 [basic.fundamental] p1:; // Plain char, signed char, and unsigned char are three distinct types.; //; // But we treat plain `char' as equivalent to `signed char' or `unsigned; // char' depending on the current char signedness mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:194,depend,depending,194,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['depend'],['depending']
Integrability,// C++11 [dcl.attr.depend]p2:; // The first declaration of a function shall specify the; // carries_dependency attribute for its declarator-id if any declaration; // of the function specifies the carries_dependency attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:19,depend,depend,19,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['depend'],['depend']
Integrability,"// C++11 [expr.prim.general]p12:; // An id-expression that denotes a non-static data member or non-static; // member function of a class can only be used:; // (...); // - if that id-expression denotes a non-static data member and it; // appears in an unevaluated operand.; //; // If this might be the case, form a DependentScopeDeclRefExpr instead of a; // CXXDependentScopeMemberExpr. The former can instantiate to either; // DeclRefExpr or MemberExpr depending on lookup results, while the latter is; // always a MemberExpr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:314,Depend,DependentScopeDeclRefExpr,314,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,"['Depend', 'depend']","['DependentScopeDeclRefExpr', 'depending']"
Integrability,"// C++11 [temp.type]p2: ""If an expression e involves a template parameter,; // decltype(e) denotes a unique dependent type."" Hence a decltype type is; // type-dependent even if its expression is only instantiation-dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:108,depend,dependent,108,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,3,['depend'],['dependent']
Integrability,"// C++11 [temp.type]p2:; // If an expression e involves a template parameter, decltype(e) denotes a; // unique dependent type. Two such decltype-specifiers refer to the same; // type only if their expressions are equivalent (14.5.6.1).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:111,depend,dependent,111,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['depend'],['dependent']
Integrability,"// C++11 and later guarantees that a thread eventually will do one of the; // following (C++11 [intro.multithread]p24 and C++17 [intro.progress]p1):; // - terminate,; // - make a call to a library I/O function,; // - perform an access through a volatile glvalue, or; // - perform a synchronization operation or an atomic operation.; //; // Hence each function is 'mustprogress' in C++11 or later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:282,synchroniz,synchronization,282,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['synchroniz'],['synchronization']
Integrability,"// C++11 lambda expressions and Objective-C message sends both start with a; // square bracket. There are three possibilities here:; // we have a valid lambda expression, we have an invalid lambda; // expression, or we have something that doesn't appear to be a lambda.; // If we're in the last case, we fall back to ParseObjCMessageExpression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:44,message,message,44,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,1,['message'],['message']
Integrability,"// C++14 [class.qual]p2:; // In a lookup in which function names are not ignored and the; // nested-name-specifier nominates a class C, if the name specified; // [...] is the injected-class-name of C, [...] the name is instead; // considered to name the constructor; //; // We don't get here if naming the constructor would be valid, so we; // just reject immediately and recover by treating the; // injected-class-name as naming the template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:175,inject,injected-class-name,175,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['inject'],['injected-class-name']
Integrability,"// C++17 [temp.dep.expr]p3:; // An id-expression is type-dependent if it contains; // - an identifier associated by name lookup with a non-type; // template-parameter declared with a type that contains a; // placeholder type (7.1.7.4),",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:57,depend,dependent,57,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['depend'],['dependent']
Integrability,"// C++17 [temp.local]p2:; // the injected-class-name [...] is equivalent to the template-name followed; // by the template-arguments of the class template specialization or partial; // specialization enclosed in <>; // ... which means it's equivalent to a simple-template-id.; //; // This only arises during class template argument deduction for a copy; // deduction candidate, where it permits slicing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:33,inject,injected-class-name,33,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['inject'],['injected-class-name']
Integrability,// C++1y [dcl.spec.auto]p12:; // Return type deduction [...] occurs when the definition is; // instantiated even if the function body contains a return; // statement with a non-type-dependent operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:182,depend,dependent,182,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['depend'],['dependent']
Integrability,// C++1z [temp.local]p1: (DR1004); // When [the injected-class-name] is used [...] as a template-argument for; // a template template-parameter [...] it refers to the class template; // itself.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:48,inject,injected-class-name,48,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inject'],['injected-class-name']
Integrability,// C++20 A module-declaration that contains neither an export-; // keyword nor a module-partition implicitly imports the primary; // module interface unit of the module as if by a module-import-; // declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:140,interface,interface,140,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// C++20 [basic.link]/2:; // A private-module-fragment shall appear only in a primary module; // interface unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:97,interface,interface,97,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// C++20 [module.interface]p3:; // [...] it shall not declare a name with internal linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:17,interface,interface,17,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// C++20 [temp.class.spec] 13.7.5/10; // The usual access checking rules do not apply to non-dependent names; // used to specify template arguments of the simple-template-id of the; // partial specialization.; // C++20 [temp.spec] 13.9/6:; // The usual access checking rules do not apply to names in a declaration; // of an explicit instantiation or explicit specialization...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:93,depend,dependent,93,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// C++20 [temp.friend]p9:; // A non-template friend declaration with a requires-clause [or]; // a friend function template with a constraint that depends on a template; // parameter from an enclosing template [...] does not declare the same; // function or function template as a declaration in any other scope.; // If this isn't a friend then it's not a member-like constrained friend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:146,depend,depends,146,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['depend'],['depends']
Integrability,"// C++20 [temp.local]p7:; // In the definition of a member of a class template that appears outside; // of the class template definition, the name of a member of the class; // template hides the name of a template-parameter of any enclosing class; // templates (but not a template-parameter of the member if the member is a; // class or function template).; // C++20 [temp.local]p9:; // In the definition of a class template or in the definition of a member; // of such a template that appears outside of the template definition, for; // each non-dependent base class (13.8.2.1), if the name of the base class; // or the name of a member of the base class is the same as the name of a; // template-parameter, the base class name or member name hides the; // template-parameter name (6.4.10).; //; // This means that a template parameter scope should be searched immediately; // after searching the DeclContext for which it is a template parameter; // scope. For example, for; // template<typename T> template<typename U> template<typename V>; // void N::A<T>::B<U>::f(...); // we search V then B<U> (and base classes) then U then A<T> (and base; // classes) then T then N then ::.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:547,depend,dependent,547,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['dependent']
Integrability,"// C++2a [basic.lookup.qual]p6:; // In a qualified-id of the form; //; // nested-name-specifier[opt] type-name :: ~ type-name; //; // the second type-name is looked up in the same scope as the first.; //; // We interpret this as meaning that if you do a dual-scope lookup for the; // first name, you also do a dual-scope lookup for the second name, per; // C++ [basic.lookup.classref]p4:; //; // If the id-expression in a class member access is a qualified-id of the; // form; //; // class-name-or-namespace-name :: ...; //; // the class-name-or-namespace-name following the . or -> is first looked; // up in the class of the object expression and the name, if found, is used.; // Otherwise, it is looked up in the context of the entire; // postfix-expression.; //; // This looks in the same scopes as for an unqualified destructor name:; //; // C++ [basic.lookup.classref]p3:; // If the unqualified-id is ~ type-name, the type-name is looked up; // in the context of the entire postfix-expression. If the type T; // of the object expression is of a class type C, the type-name is; // also looked up in the scope of class C. At least one of the; // lookups shall find a name that refers to cv T.; //; // FIXME: The intent is unclear here. Should type-name::~type-name look in; // the scope anyway if it finds a non-matching name declared in the class?; // If both lookups succeed and find a dependent result, which result should; // we retain? (Same question for p->~type-name().)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:1391,depend,dependent,1391,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['dependent']
Integrability,// C++2a [module.interface]p1:; // An export-declaration shall appear only [...] in the purview of a module; // interface unit. An export-declaration shall not appear directly or; // indirectly within [...] a private-module-fragment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:17,interface,interface,17,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,2,['interface'],['interface']
Integrability,// C++2a [module.interface]p5:; // all entities to which all of the using-declarators ultimately refer; // shall have been introduced with a name having external linkage,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:17,interface,interface,17,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,"// C+=20 Header Units are compiled module interfaces, but they preserve; // macros that are live (i.e. have a defined value) at the end of the; // compilation. So when writing a header unit, we preserve only the final; // value of each macro (and discard any that are undefined). Header units; // do not have sub-modules (although they might import other header units).; // PCH files, conversely, retain the history of each macro's define/undef; // and of leaf macros in sub modules.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:42,interface,interfaces,42,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['interface'],['interfaces']
Integrability,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,integrat,integrated,37,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['integrat'],['integrated']
Integrability,"// CASE IIIa: Normalized and partially integrated single PDF term; //---------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,integrat,integrated,39,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Integrability,"// CASE IIIb: Normalized and partially integrated composite PDF term; //---------------------------------------------------------------; // Use auxiliary class RooGenProdProj to calculate this term",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,integrat,integrated,39,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Integrability,"// CASE IVa: Normalized non-integrated composite PDF term; // -------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,integrat,integrated,28,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Integrability,"// CASE IVb: Normalized, non-integrated single PDF term; // -----------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,integrat,integrated,29,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integrated']
Integrability,"// CINT constructor interface back end",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h:20,interface,interface,20,roofit/roofitcore/inc/RooFactoryWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h,1,['interface'],['interface']
Integrability,"// CPPEnum does not carry any additional C-side data for now, but can be of; // several types, based on the declared or compile-dependent types chosen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h:128,depend,dependent,128,bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h,1,['depend'],['dependent']
Integrability,"// CPU Tensor Class; // It is a simple wrapper for TMVA RTensor based on; // memory owned by CPU Buffer; // We need to keep a pointer for CPUBuffer for fast conversion; // without copying to TCpuMatrix; // also provides compatibility with old interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h:39,wrap,wrapper,39,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu/CpuTensor.h,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"// CUDA and HIP don't rely on the frontend to pass an ffp-contract option.; // If one wasn't given by the user, don't pass it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:58,contract,contract,58,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['contract'],['contract']
Integrability,// CUDA-9 omits device-side definitions of some math functions if it sees; // include guard from math.h wrapper from libstdc++. We have to undo the header; // guard temporarily to get the definitions we need.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:104,wrap,wrapper,104,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['wrap'],['wrapper']
Integrability,"// Cache knowledge of AR NW, which is propagated to this AddRec.; // Negative step causes unsigned wrap, but it still can't self-wrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:99,wrap,wrap,99,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['wrap'],['wrap']
Integrability,"// Cache knowledge of AR NW, which is propagated to this; // AddRec. Negative step causes unsigned wrap, but it; // still can't self-wrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:99,wrap,wrap,99,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['wrap'],['wrap']
Integrability,"// Calculate cache contents; // Decode integration code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:39,integrat,integration,39,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Integrability,"// Calculate integral over landau custom numeric integrator specified as object default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:49,integrat,integrator,49,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrator']
Integrability,"// Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,integrat,integrator,65,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrator']
Integrability,// Calculate number of depobj dependencies and regular deps with the; // iterators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:30,depend,dependencies,30,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['dependencies']
Integrability,// Calculate pointer size and alignment. These are used for vfptr and vbprt; // injection.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:80,inject,injection,80,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injection']
Integrability,// Calculate the coverage depending on the kind of location. We have; // the simple and composed locations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp:26,depend,depending,26,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,1,['depend'],['depending']
Integrability,"// Calculate the known alignment of the field. If the original aggregate; // had 256 byte alignment for example, something might depend on that:; // propagate info to each field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:129,depend,depend,129,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['depend'],['depend']
Integrability,"// Calculate the range for ""X + Y"" which is guaranteed not to wrap(overflow).; // (X is from this, and Y is from Other)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:62,wrap,wrap,62,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['wrap'],['wrap']
Integrability,"// Calculate the range for ""X - Y"" which is guaranteed not to wrap(overflow).; // (X is from this, and Y is from Other)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:62,wrap,wrap,62,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['wrap'],['wrap']
Integrability,"// Calculates whether the expression Constraint depends on an enclosing; // template, for the purposes of [temp.friend] p9.; // TemplateDepth is the 'depth' of the friend function, which is used to; // compare whether a declaration reference is referring to a containing; // template, or just the current friend function. A 'lower' TemplateDepth in; // the AST refers to a 'containing' template. As the constraint is; // uninstantiated, this is relative to the 'top' of the TU.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:48,depend,depends,48,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['depend'],['depends']
Integrability,// Calculates whether the friend function depends on an enclosing template for; // the purposes of [temp.friend] p9.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:42,depend,depends,42,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['depend'],['depends']
Integrability,"// Call ShowMember() on obj.; // This could be faster if we implemented this either as a templated; // function or by rootcint-generated code using the typeid (i.e. the; // difference is a lookup in a TList instead of in a map).; // To avoid a spurious error message in case the data member is; // transient and does not have a dictionary we check first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMemberInspector.cxx:259,message,message,259,core/base/src/TMemberInspector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMemberInspector.cxx,1,['message'],['message']
Integrability,"// Call get Workers; // if we are not idle the scheduler will just enqueue the query and; // send a resume message later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:107,message,message,107,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,// Call handling routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:17,rout,routines,17,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,4,['rout'],['routines']
Integrability,"// Call lowering should have added an r2 operand to indicate a dependence; // on the TOC base pointer value. It can't however, because there is no; // way to mark the dependence as implicit there, and so the stackmap code; // will confuse it with a regular operand. Instead, add the dependence; // here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:63,depend,dependence,63,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,3,['depend'],['dependence']
Integrability,"// Call operator for our internal integrator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:34,integrat,integrator,34,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['integrat'],['integrator']
Integrability,// Call site argument might be simplified. We have to go through the; // Attributor interface though as outside AAs can register custom; // simplification callbacks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:84,interface,interface,84,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['interface'],['interface']
Integrability,"// Call the fit method, depending on the object to fit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:24,depend,depending,24,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['depend'],['depending']
Integrability,// Call the underlying SelectionDAG routine to do the transmogrification. Note; // that this deletes operands of the old node that become dead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:36,rout,routine,36,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['rout'],['routine']
Integrability,"// CallFunc interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:12,interface,interface,12,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,2,['interface'],['interface']
Integrability,"// CallInst may or may not have a result, depending on the called function.; // Conservatively return calls have results for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:42,depend,depending,42,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['depend'],['depending']
Integrability,// Callback to only accept typo corrections that are either; // Objective-C protocols or valid Objective-C type arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:76,protocol,protocols,76,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// Calling Convention Implementation.; // The expectations for frontend ABI lowering vary from target to target.; // Ideally, an LLVM frontend would be able to avoid worrying about many ABI; // details, but this is a longer term goal. For now, we simply try to keep the; // role of the frontend as simple and well-defined as possible. The rules can; // be summarised as:; // * Never split up large scalar arguments. We handle them here.; // * If a hardfloat calling convention is being used, and the struct may be; // passed in a pair of registers (fp+fp, int+fp), and both registers are; // available, then pass as two separate arguments. If either the GPRs or FPRs; // are exhausted, then pass according to the rule below.; // * If a struct could never be passed in registers or directly in a stack; // slot (as it is larger than 2*XLEN and the floating point rules don't; // apply), then pass it using a pointer with the byval attribute.; // * If a struct is less than 2*XLEN, then coerce to either a two-element; // word-sized array or a 2*XLEN scalar (depending on alignment).; // * The frontend can determine whether a struct is returned by reference or; // not based on its size and fields. If it will be returned by reference, the; // frontend must modify the prototype so a pointer with the sret annotation is; // passed as the first argument. This is not necessary for large scalar; // returns.; // * Struct return values and varargs should be coerced to structs containing; // register-size fields in the same situations they would be for fixed; // arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:1057,depend,depending,1057,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['depend'],['depending']
Integrability,// Calling function is not synchronized,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp:27,synchroniz,synchronized,27,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsMCCodeEmitter.cpp,1,['synchroniz'],['synchronized']
Integrability,"// Calling the base class implementation is unsafe because we override the; // GetDecl which it forwads to. That implementation depends on fIdx which is; // used to determine validity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx:128,depend,depends,128,core/metacling/src/TClingMethodArgInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.cxx,1,['depend'],['depends']
Integrability,// Calls into a routine in libgcc to allocate more space from the heap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:16,rout,routine,16,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['rout'],['routine']
Integrability,"// Calls to this function are synthesized in wrappers, and we shouldn't; // instrument them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:45,wrap,wrappers,45,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['wrap'],['wrappers']
Integrability,"// Calls will not be reordered because of chain dependencies (see; // below). Since call operands are dead, calls may continue to be added; // to the DefList making dependence checking quadratic in the size of; // the block. Instead, we leave only one call at the back of the; // DefList.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:48,depend,dependencies,48,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,2,['depend'],"['dependence', 'dependencies']"
Integrability,"// Camera interface requires GL coords - Y inverted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx:10,interface,interface,10,graf3d/gl/src/TGLEventHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx,1,['interface'],['interface']
Integrability,"// Camera manipulation interface (GL coord - origin bottom left)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h:23,interface,interface,23,graf3d/gl/inc/TGLCamera.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h,1,['interface'],['interface']
Integrability,// Can only get l-value for message expression returning aggregate type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:28,message,message,28,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['message'],['message']
Integrability,// Can possibly vectorize with RT checks to overcome unknown dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:61,depend,dependencies,61,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,1,['depend'],['dependencies']
Integrability,// Can use the default printOperand route.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmWriterEmitter.cpp:36,rout,route,36,interpreter/llvm-project/llvm/utils/TableGen/AsmWriterEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmWriterEmitter.cpp,1,['rout'],['route']
Integrability,// Can vectorize safely without RT checks. All dependences are known to be; // safe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:47,depend,dependences,47,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,1,['depend'],['dependences']
Integrability,"// Can we determine that it's readonly/readnone/writeonly without doing; // an SCC? Note that we don't allow any calls at all here, or else our; // result will be dependent on the iteration order through the; // functions in the SCC.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:163,depend,dependent,163,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,1,['depend'],['dependent']
Integrability,"// Can we prove this loop *must* be UB if overflow of IV occurs?; // Reasoning goes as follows:; // * Suppose the IV did self wrap.; // * If Stride evenly divides the iteration space, then once wrap; // occurs, the loop must revisit the same values.; // * We know that RHS is invariant, and that none of those values; // caused this exit to be taken previously. Thus, this exit is; // dynamically dead.; // * If this is the sole exit, then a dead exit implies the loop; // must be infinite if there are no abnormal exits.; // * If the loop were infinite, then it must either not be mustprogress; // or have side effects. Otherwise, it must be UB.; // * It can't (by assumption), be UB so we have contradicted our; // premise and can conclude the IV did not in fact self-wrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:126,wrap,wrap,126,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,3,['wrap'],['wrap']
Integrability,"// Can't backtrack. If it's too expensive to copy the value, then try; // duplicate the nodes that produces these ""too expensive to copy""; // values to break the dependency. In case even that doesn't work,; // insert cross class copies.; // If it's not too expensive, i.e. cost != -1, issue copies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:162,depend,dependency,162,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependency']
Integrability,// Can't be a DependentSizedArrayType or an IncompleteArrayType since; // UnqAT is not incomplete and Range is not type-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:14,Depend,DependentSizedArrayType,14,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,2,"['Depend', 'depend']","['DependentSizedArrayType', 'dependent']"
Integrability,// Can't be a lambda-expression. Treat it as a designator.; // FIXME: Should we disambiguate against a message-send?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp:103,message,message-send,103,interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp,1,['message'],['message-send']
Integrability,// Can't check initialization for a member of dependent type or when; // any of the arguments are type-dependent expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:46,depend,dependent,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['depend'],['dependent']
Integrability,// Can't deduce from dependent arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:21,depend,dependent,21,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['depend'],['dependent']
Integrability,"// Can't determine a more specific message, so display the generic error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:35,message,message,35,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['message'],['message']
Integrability,// Can't do this earlier because we need to be able to explicitly enable; // or disable these features and the things that they depend upon.; // Enable popcnt if sse4.2 is enabled and popcnt is not explicitly disabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:128,depend,depend,128,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['depend'],['depend']
Integrability,// Can't evaluate value-dependent expressions so bail early,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp:24,depend,dependent,24,interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypePrinter.cpp,1,['depend'],['dependent']
Integrability,"// Can't have a function inside the wrapper:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:36,wrap,wrapper,36,core/metacling/src/TClingCallbacks.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx,1,['wrap'],['wrapper']
Integrability,// Can't tell us anything about T.; // Now Req cannot a substitution-error: those aren't dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:89,depend,dependent,89,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['depend'],['dependent']
Integrability,"// Cannot be a dependent type, but still could be an instantiation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:15,depend,dependent,15,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['depend'],['dependent']
Integrability,"// Cannot const_cast non-lvalue to lvalue reference type. But if this; // is C-style, static_cast might find a way, so we simply suggest a; // message and tell the parent to keep searching.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:143,message,message,143,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['message'],['message']
Integrability,// Cannot know anything else if the expression is dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:50,depend,dependent,50,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,// Cannot pair dependent instructions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp:15,depend,dependent,15,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp,1,['depend'],['dependent']
Integrability,"// Cannot use coloring here, because coloring is used to determine; // the ""big"" switch, i.e. the one that changes halves, and in a forward; // network, a color can be simultaneously routed to both halves in the; // step we're working on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:183,rout,routed,183,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['rout'],['routed']
Integrability,// Cannot vectorize due to known unsafe dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:40,depend,dependencies,40,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,1,['depend'],['dependencies']
Integrability,"// Canonicalise concat_vectors so that the right-hand vector has as few; // bit-casts as possible before its real operation. The primary matching; // destination for these operations will be the narrowing ""2"" instructions,; // which depend on the operation being performed on this right-hand vector.; // For example,; // (concat_vectors LHS, (v1i64 (bitconvert (v4i16 RHS)))); // becomes; // (bitconvert (concat_vectors (v4i16 (bitconvert LHS)), RHS))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:233,depend,depend,233,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['depend'],['depend']
Integrability,"// Canonicalization: if only one input vector is constant, it shall be the; // second one. This transformation depends on the value of the mask which; // is not known at compile time for scalable vectors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:111,depend,depends,111,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['depend'],['depends']
Integrability,// Canonicalize compilation to start with the public module map. This is; // vital for submodules declarations in the private module maps to be; // correctly parsed when depending on a top level module in the public one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:170,depend,depending,170,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['depend'],['depending']
Integrability,"// Cardan angle interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrans.h:16,interface,interface,16,graf3d/eve/inc/TEveTrans.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrans.h,2,['interface'],['interface']
Integrability,"// Careful, given:; // #define HIDE ID(ID(a)); // ID(ID(HIDE)); // The token `a` is wrapped in 4 arg-expansions, we only want to unwrap 2.; // We distinguish them by whether the macro expands into the target file.; // Fortunately, the target file ones will always appear first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp:84,wrap,wrapped,84,interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/Tokens.cpp,1,['wrap'],['wrapped']
Integrability,"// Case 1: A full group. Can Skip the checks; For full groups, if the wide; // load would wrap around the address space we would do a memory access at; // nullptr even without the transformation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:90,wrap,wrap,90,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['wrap'],['wrap']
Integrability,"// Case 1: A full group. Can Skip the checks; For full groups, if the wide; // store would wrap around the address space we would do a memory access at; // nullptr even without the transformation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:91,wrap,wrap,91,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['wrap'],['wrap']
Integrability,"// Case 2: If first and last members of the group don't wrap this implies; // that all the pointers in the group don't wrap.; // So we check only group member 0 (which is always guaranteed to exist),; // and group member Factor - 1; If the latter doesn't exist we rely on; // peeling (if it is a non-reversed accsess -- see Case 3).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:56,wrap,wrap,56,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,2,['wrap'],['wrap']
Integrability,"// Case 2: If first and last members of the group don't wrap this implies; // that all the pointers in the group don't wrap.; // So we check only group member 0 (which is always guaranteed to exist),; // and the last group member. Case 3 (scalar epilog) is not relevant for; // stores with gaps, which are implemented with masked-store (rather than; // speculative access, as in loads).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:56,wrap,wrap,56,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,2,['wrap'],['wrap']
Integrability,// Case 3: Message send.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:11,Message,Message,11,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['Message'],['Message']
Integrability,"// Case 3: The inner construct is definitely a message send, so the; // outer construct is definitely not an attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:47,message,message,47,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['message'],['message']
Integrability,// Case 4: Lambda in message send.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:21,message,message,21,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['message'],['message']
Integrability,"// Case of a c-function declared inside an objc implementation.; // FIXME: For a c-style function nested inside an objc implementation; // class, there is no implementation context available, so we pass; // down the context as argument to this routine. Ideally, this context; // need be passed down in the AST node and somehow calculated from the; // AST for a function decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:244,rout,routine,244,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,1,['rout'],['routine']
Integrability,// Cast all types to 32- or 64-bit values before calling shuffle routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:65,rout,routines,65,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['rout'],['routines']
Integrability,"// Cast expressions are type-dependent if the type is; // dependent (C++ [temp.dep.expr]p3).; // Cast expressions are value-dependent if the type is; // dependent or if the subexpression is value-dependent.; //; // Note that we also need to consider the dependence of the actual type here,; // because when the type as written is a deduced type, that type is not; // dependent, but it may be deduced as a dependent type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:29,depend,dependent,29,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,8,['depend'],"['dependence', 'dependent']"
Integrability,"// Cast to other types through float, using either the intrinsic or FPExt,; // depending on whether the half type itself is supported; // (as opposed to operations on half, available with NativeHalfType).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:79,depend,depending,79,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['depend'],['depending']
Integrability,// Casts depend completely on the target type. All casts work the same.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp:9,depend,depend,9,interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,1,['depend'],['depend']
Integrability,"// Casts don't change the offset, just wrap it up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:39,wrap,wrap,39,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['wrap'],['wrap']
Integrability,// Casts from or to id<P> are allowed when the other side has compatible; // protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:77,protocol,protocols,77,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocols']
Integrability,// Catch the wrap to switch passes when interlacing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,wrap,wrap,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['wrap'],['wrap']
Integrability,// Catch weird sized loads that don't evenly divide into the access sizes; // TODO: May be able to widen depending on alignment etc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:105,depend,depending,105,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['depend'],['depending']
Integrability,// Categories of this Interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:22,Interface,Interface,22,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['Interface'],['Interface']
Integrability,// Category @implementation with no corresponding @interface.; // Create and install one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:51,interface,interface,51,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// Certain complex queries trigger creation of temporary tables. Depending on the build options of sqlite,; // sqlite may try to store such temporary tables on disk, using our custom VFS module to do so.; // Creation of new database files, however, is not supported by the custom VFS module. Thus we set the behavior; // of the database connection to ""temp_store=2"", meaning that temporary tables should always be maintained; // in memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:65,Depend,Depending,65,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,1,['Depend'],['Depending']
Integrability,"// Certain targets (such as MIPS), may have a different ABI alignment; // for a type depending on the context. Give the target a chance to; // specify the alignment it wants.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:85,depend,depending,85,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,['depend'],['depending']
Integrability,"// Chaining values within a given chunk (specifically the compress_in_place; // interface) are represented as words. This avoids unnecessary bytes<->words; // conversion overhead in the portable implementation. However, the hash_many; // interface handles both user input and parent node blocks, so it accepts; // bytes. For that reason, chaining values in the CV stack are represented as; // bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c:80,interface,interface,80,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,2,['interface'],['interface']
Integrability,"// Change a chain of {load; op; store} of the same value into a simple op; // through memory of that value, if the uses of the modified value and its; // address are suitable.; //; // The tablegen pattern memory operand pattern is currently not able to match; // the case where the CC on the original operation are used.; //; // See the equivalent routine in X86ISelDAGToDAG for further comments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:348,rout,routine,348,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['rout'],['routine']
Integrability,"// Change local message level to suppress unnecessary info",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:16,message,message,16,roofit/roofitcore/test/testRooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx,1,['message'],['message']
Integrability,// Change the dependence in the opposite direction too.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp:14,depend,dependence,14,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,1,['depend'],['dependence']
Integrability,// Change the dependences back so that we've created a DAG again.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:14,depend,dependences,14,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependences']
Integrability,"// Change the states of the buttons depending of which one is; // selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:36,depend,depending,36,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['depend'],['depending']
Integrability,// Change the type of the message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:26,message,message,26,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['message'],['message']
Integrability,"// Changes opcode of an instruction, replaces an instruction with a; // new one, or replaces two instructions with a new instruction; // depending on their order i.e. if these are consecutive forward; // or consecutive backward",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp:137,depend,depending,137,interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,1,['depend'],['depending']
Integrability,// Check Objective-C messages by selector name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:21,message,messages,21,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['message'],['messages']
Integrability,"// Check PDF dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:13,depend,dependents,13,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['depend'],['dependents']
Integrability,"// Check all features looking for any dependent on this feature. If we find; // one, mark it and recursively find any feature that depend on it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp:38,depend,dependent,38,interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,2,['depend'],"['depend', 'dependent']"
Integrability,"// Check all record assertions: For each one, resolve the condition; // and message, then call CheckAssert().; // Note: The condition and message are probably already resolved,; // but resolving again allows calls before records are resolved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp:76,message,message,76,interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,2,['message'],['message']
Integrability,"// Check an assertion: Obtain the condition value and be sure it is true.; // If not, print a nonfatal error along with the message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp:124,message,message,124,interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,1,['message'],['message']
Integrability,"// Check and see if class methods in class interface have been; // implemented in the implementation class. If so, their types match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:43,interface,interface,43,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,// Check and see if instance methods in class interface have been; // implemented in the implementation class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:46,interface,interface,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// Check and see if instance methods in class interface have been; // implemented in the implementation class. If so, their types match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:46,interface,interface,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,// Check and see if properties declared in the interface have either 1); // an implementation or 2) there is a @synthesize/@dynamic implementation; // of the property in the @implementation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:47,interface,interface,47,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,// Check both interfaces reference the same protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp:14,interface,interfaces,14,interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp,2,"['interface', 'protocol']","['interfaces', 'protocols']"
Integrability,// Check both protocols reference the same protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp:14,protocol,protocols,14,interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRDiagsEmitter.cpp,2,['protocol'],['protocols']
Integrability,// Check code object version options. Emit warnings for legacy options; // and errors for the last invalid code object version options.; // It is done here to avoid repeated warning or error messages for; // each tool invocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp:191,message,messages,191,interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp,1,['message'],['messages']
Integrability,"// Check dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:9,depend,dependencies,9,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,2,['depend'],['dependencies']
Integrability,// Check dependencies invariant.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp:9,depend,dependencies,9,interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,1,['depend'],['dependencies']
Integrability,"// Check element type, if it is not dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:36,depend,dependent,36,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['depend'],['dependent']
Integrability,// Check for LR dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:16,depend,dependence,16,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['depend'],['dependence']
Integrability,"// Check for ObjC 'id' and class types that have been adorned with protocol; // information (id<p>, C<p>*). The protocol references need to be rewritten!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:67,protocol,protocol,67,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,4,['protocol'],['protocol']
Integrability,"// Check for a register. All real register operands should have used; // a context-dependent parse routine, which gives the required register; // class. The code is here to mop up other cases, like those where; // the instruction isn't recognized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp:83,depend,dependent,83,interpreter/llvm-project/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/AsmParser/SystemZAsmParser.cpp,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,"// Check for a single input from a SCALAR_TO_VECTOR node.; // FIXME: All of this should be canonicalized into INSERT_VECTOR_ELT and; // all the smarts here sunk into that routine. However, the current; // lowering of BUILD_VECTOR makes that nearly impossible until the old; // vector shuffle lowering is dead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:171,rout,routine,171,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['rout'],['routine']
Integrability,// Check for any dependencies on Head instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:17,depend,dependencies,17,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['depend'],['dependencies']
Integrability,// Check for any implementation of a methods declared in protocol.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:57,protocol,protocol,57,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,// Check for circular dependencies among protocol declarations. This can; // only happen if this protocol was forward-declared.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:22,depend,dependencies,22,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,3,"['depend', 'protocol']","['dependencies', 'protocol']"
Integrability,// Check for dependences on the Memory SSA.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:13,depend,dependences,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['depend'],['dependences']
Integrability,// Check for duplicate protocol definitions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp:23,protocol,protocol,23,interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp,1,['protocol'],['protocol']
Integrability,// Check for duplicate protocol in class's protocol list.; // This is O(n*m). But it is extremely rare and number of protocols in; // class or its extension are very few.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:23,protocol,protocol,23,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,3,['protocol'],"['protocol', 'protocols']"
Integrability,// Check for either a dependence (latency) or resource (hazard) stall.; //; // Note: The ScheduleHazardRecognizer interface requires a non-const SU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:22,depend,dependence,22,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,2,"['depend', 'interface']","['dependence', 'interface']"
Integrability,"// Check for integratable AbsRealLValue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,integrat,integratable,13,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integratable']
Integrability,// Check for isMachineOpcode() as PrescheduleNodesWithMultipleUses(); // may transfer data dependencies to CopyToReg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:91,depend,dependencies,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependencies']
Integrability,"// Check for memory dependencies which prohibit the unrolling we are doing.; // Because of the way we are unrolling Fore/Sub/Aft blocks, we need to check; // there are no dependencies between Fore-Sub, Fore-Aft, Sub-Aft and Sub-Sub.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,2,['depend'],['dependencies']
Integrability,"// Check for message sends to functions returning CF types. We; // just obey the Cocoa conventions with these, even though the; // return type is CF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:13,message,message,13,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['message'],['message']
Integrability,// Check for necessary no-wrap and overflow constraints.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:26,wrap,wrap,26,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,1,['wrap'],['wrap']
Integrability,// Check for order dependences between instructions. Make sure the source; // is ordered before the destination.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:19,depend,dependences,19,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependences']
Integrability,// Check for protocol declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:13,protocol,protocol,13,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['protocol'],['protocol']
Integrability,// Check for register dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp:22,depend,dependencies,22,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegStackify.cpp,1,['depend'],['dependencies']
Integrability,"// Check for the ""raise"" message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ObjCNoReturn.cpp:25,message,message,25,interpreter/llvm-project/clang/lib/Analysis/ObjCNoReturn.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ObjCNoReturn.cpp,1,['message'],['message']
Integrability,// Check for type conflict of methods declared in a class/protocol and; // its implementation; if any.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:58,protocol,protocol,58,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// Check getInstSizeInBytes on explicitly specified CPUs (it cannot; // work correctly for the generic CPU).; //; // The isPseudo check really shouldn't be here, but unfortunately there are; // some negative lit tests that depend on being able to continue through; // here even when pseudo instructions haven't been lowered.; //; // We also overestimate branch sizes with the offset bug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMCInstLower.cpp:223,depend,depend,223,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMCInstLower.cpp,1,['depend'],['depend']
Integrability,"// Check if ASan should use GC-friendly instrumentation for globals.; // First of all, there is no point if -fdata-sections is off (expect for MachO,; // where this is not a factor). Also, on ELF this feature requires an assembler; // extension that only works with -integrated-as at the moment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:267,integrat,integrated-as,267,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['integrat'],['integrated-as']
Integrability,// Check if GEP depends on a value defined by this loop itself.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp:16,depend,depends,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,1,['depend'],['depends']
Integrability,// Check if I has any output/flow/anti dependences with instructions from \p; // StartInst to \p EndInst.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeMoverUtils.cpp:39,depend,dependences,39,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeMoverUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeMoverUtils.cpp,1,['depend'],['dependences']
Integrability,"// Check if \p Ty is a valid type for the elementwise math builtins. If it is; // not a valid type, emit an error message and return true. Otherwise return; // false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:114,message,message,114,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['message'],['message']
Integrability,// Check if abs(V*Scale) >= abs(Scale) holds in the presence of; // potentially wrapping math.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp:80,wrap,wrapping,80,interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,1,['wrap'],['wrapping']
Integrability,// Check if all users of the add are provably no-wrap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:49,wrap,wrap,49,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['wrap'],['wrap']
Integrability,"// Check if any of the function dependencies were invalidated, and invalidate; // ourselves in that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:32,depend,dependencies,32,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['depend'],['dependencies']
Integrability,"// Check if composite splitCatSet does not contain category functions that depend on other categories used in the same split",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:75,depend,depend,75,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['depend'],['depend']
Integrability,"// Check if current base class is a dependent type, that is, an; // uninstantiated template class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:36,depend,dependent,36,core/metacling/src/TClingBaseClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx,1,['depend'],['dependent']
Integrability,"// Check if integration over observable #i is requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Integrability,"// Check if integration over parameter #i is requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,integrat,integration,12,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['integrat'],['integration']
Integrability,// Check if it depends on LMUL and SEW,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp:15,depend,depends,15,interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp,1,['depend'],['depends']
Integrability,// Check if it depends only on LMUL,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp:15,depend,depends,15,interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.cpp,1,['depend'],['depends']
Integrability,// Check if it is legal to prune dependece between SUI and SUJ.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h:33,depend,dependece,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h,1,['depend'],['dependece']
Integrability,// Check if it really had super class.; //; // TODO: we can probably pay closer attention to cases when the class; // object can be 'nil' as the result of such message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp:160,message,message,160,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,1,['message'],['message']
Integrability,"// Check if jacobian has no real-valued dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:40,depend,dependents,40,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['depend'],['dependents']
Integrability,// Check if load with Addr dependent from select can be converted to select; // between load values. There must be no instructions between the found; // loads and DepInst that may clobber the loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:27,depend,dependent,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['depend'],['dependent']
Integrability,"// Check if node depends on any non-constant parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:17,depend,depends,17,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['depends']
Integrability,"// Check if operand register class contains register used.; // Intention: print disassembler message when invalid code is decoded,; // for example sgpr register used in VReg or VISrc(VReg or imm) operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.cpp:93,message,message,93,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.cpp,1,['message'],['message']
Integrability,// Check if previous best source instruction has a new zero latency; // dependence opportunity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp:72,depend,dependence,72,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,1,['depend'],['dependence']
Integrability,"// Check if range parameterization depends on other integrated observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:35,depend,depends,35,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['depend', 'integrat']","['depends', 'integrated']"
Integrability,"// Check if schema evolution is effective: clients running versions <=17 do not; // support that: send a warning message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:113,message,message,113,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,// Check if target-independent constraints permit a tail call here.; // Target-dependent constraints are checked within TLI->LowerCallTo.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:79,depend,dependent,79,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['depend'],['dependent']
Integrability,// Check if target-independent constraints permit a tail call here.; // Target-dependent constraints are checked within fastLowerCall.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:79,depend,dependent,79,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,1,['depend'],['dependent']
Integrability,"// Check if the Method belongs to a protocol. We should allow any method; // defined in any protocol, because any subclass could adopt the protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:36,protocol,protocol,36,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,3,['protocol'],['protocol']
Integrability,"// Check if the PHI operand is not dependent on the PHI itself. Every; // recurrence is a cyclic net of PHIs in the data flow, and has an; // equivalent Cycle in the control flow. One of those PHIs must be in the; // header of that control flow Cycle. This is independent of the choice of; // Cycles reported by CycleInfo. It is sufficient to check the PHIs in; // every Cycle header; if such a node is marked unknown, this will; // eventually propagate through the whole net of PHIs in the recurrence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:35,depend,dependent,35,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['depend'],['dependent']
Integrability,// Check if the cold path's dependence slice is expensive for any of the; // selects of the group.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp:28,depend,dependence,28,interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,1,['depend'],['dependence']
Integrability,"// Check if the heavily used interface in TCling::AutoLoad returns consistent; // results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:29,interface,interface,29,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['interface'],['interface']
Integrability,"// Check if the instructions in Insts, together with their dependencies; // cover the loop in the sense that the loop could be safely eliminated once; // the instructions in Insts are removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:59,depend,dependencies,59,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,1,['depend'],['dependencies']
Integrability,"// Check if the message is not consumed, we know it will not be used in; // an assignment, ex: ""self = [super init]"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:16,message,message,16,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['message'],['message']
Integrability,// Check if the pair of StoreNode and the RootNode already bail out many; // times which is over the limit in dependence check.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:110,depend,dependence,110,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['depend'],['dependence']
Integrability,// Check if the previous best destination instruction has a new zero; // latency dependence opportunity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp:81,depend,dependence,81,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,1,['depend'],['dependence']
Integrability,// Check if the reschedule will not break dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:42,depend,dependencies,42,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['depend'],['dependencies']
Integrability,// Check if the scheduler should penalize instructions that are available to; // early due to a zero-latency dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:109,depend,dependence,109,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,1,['depend'],['dependence']
Integrability,"// Check if the user node of the TE comes after user node of TEPtr,; // otherwise TEPtr depends on TE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:88,depend,depends,88,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['depends']
Integrability,"// Check if there are any left over terms that cannot be generated; // separately due to cross dependency of observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:95,depend,dependency,95,roofit/roofitcore/src/RooProdGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx,1,['depend'],['dependency']
Integrability,// Check if there are unsolved memory dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:38,depend,dependencies,38,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,1,['depend'],['dependencies']
Integrability,// Check if there are unsolved register dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:40,depend,dependencies,40,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,1,['depend'],['dependencies']
Integrability,// Check if there is a dependence between some instruction already in this; // packet and this instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.h:23,depend,dependence,23,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.h,1,['depend'],['dependence']
Integrability,"// Check if this code generates any dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:36,depend,dependencies,36,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['depend'],['dependencies']
Integrability,"// Check if this component has any dependents that need to be generated; // e.g. it can happen that there are none if all dependents of this component are prototyped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:35,depend,dependents,35,roofit/roofitcore/src/RooProdGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx,2,['depend'],['dependents']
Integrability,"// Check if this instruction has a dependence on the critical path that; // is an anti-dependence that we may be able to break. If it is, set; // AntiDepReg to the non-zero register associated with the anti-dependence.; //; // We limit our attention to the critical path as a heuristic to avoid; // breaking anti-dependence edges that aren't going to significantly; // impact the overall schedule. There are a limited number of registers; // and we want to save them for the important edges.; //; // TODO: Instructions with multiple defs could have multiple; // anti-dependencies. The current code here only knows how to break one; // edge per instruction. Note that we'd have to be able to break all of; // the anti-dependencies in an instruction in order to be effective.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:35,depend,dependence,35,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,6,['depend'],"['dependence', 'dependencies']"
Integrability,// Check if this is a dependency breaking instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:22,depend,dependency,22,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['depend'],['dependency']
Integrability,// Check if this is a message send before we act on a possible init-capture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:22,message,message,22,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['message'],['message']
Integrability,"// Check if this register operand is independent according to `Mask`.; // Note that Mask may not have enough bits to describe all explicit and; // implicit input operands. If this register operand doesn't have a; // corresponding bit in Mask, then conservatively assume that it is; // dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:285,depend,dependent,285,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['depend'],['dependent']
Integrability,// Check if this routine is a compiler-generated thunk.; //; // Returns true if this subprogram is a thunk generated by the compiler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h:17,rout,routine,17,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfoMetadata.h,1,['rout'],['routine']
Integrability,// Check if variable sized ivar is in interface and visible to subclasses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:38,interface,interface,38,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,// Check if we call the 'invalidation' routine on the ivar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp:39,rout,routine,39,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,1,['rout'],['routine']
Integrability,// Check if we can statically infer the actual type precisely.; //; // 1. Class is written directly in the message:; // \code; // [ActualClass classMethod];; // \endcode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp:107,message,message,107,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,1,['message'],['message']
Integrability,"// Check if we have a loop.; // FIXME: Maybe make this smarter, and see whether the loops are dependent; // on inputs or side-effects?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/XRayInstrumentation.cpp:94,depend,dependent,94,interpreter/llvm-project/llvm/lib/CodeGen/XRayInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/XRayInstrumentation.cpp,1,['depend'],['dependent']
Integrability,"// Check if we have an expression of the form ((X + C1) - C2), where C1 and; // C2 can be folded in a way that allows retaining wrapping flags of (X +; // C1).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:128,wrap,wrapping,128,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['wrap'],['wrapping']
Integrability,// Check if we need to rename any uses that occurs after the loop. The; // register to replace depends on whether the Phi is scheduled in the; // epilog.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:95,depend,depends,95,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['depend'],['depends']
Integrability,"// Check if we provided a this parameter.; // FIXME: Currently we do not provide consistently the this pointer at; // index 0 of the call arguments passed to the wrapper.; // In C++ we can still call member functions which do not use it. Eg:; // struct S {int Print() { return printf(""a"");} }; auto r1 = ((S*)0)->Print();; // This works just fine even though it might be UB...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:162,wrap,wrapper,162,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['wrap'],['wrapper']
Integrability,// Check initialization of non-static data members. Base classes are; // always initialized so do not need to be checked. Dependent bases; // might not have initializers in the member initializer list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:122,Depend,Dependent,122,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['Depend'],['Dependent']
Integrability,// Check interface's Ivar list against those in the implementation.; // names and types must match.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:9,interface,interface,9,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// Check on this protocols's referenced protocols, recursively.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:17,protocol,protocols,17,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,4,['protocol'],['protocols']
Integrability,"// Check only that we have a template template argument. We don't want to; // try to check well-formedness now, because our template template parameter; // might have dependent types in its template parameters, which we wouldn't; // be able to match now.; //; // If none of the template template parameter's template arguments mention; // other template parameters, we could actually perform more checking here.; // However, it isn't worth doing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:167,depend,dependent,167,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,// Check parameter attributes against a function type.; // The value V is printed in error messages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:91,message,messages,91,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['message'],['messages']
Integrability,// Check protocol qualifiers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:9,protocol,protocol,9,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['protocol'],['protocol']
Integrability,// Check protocols on qualified interfaces.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:9,protocol,protocols,9,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,6,"['interface', 'protocol']","['interfaces', 'protocols']"
Integrability,// Check protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:9,protocol,protocols,9,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['protocol'],['protocols']
Integrability,"// Check read (RAW) dependences and write (WAR) dependences as necessary.; // If we successfully excluded all effects we are interested in, the; // access can be skipped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:20,depend,dependences,20,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['depend'],['dependences']
Integrability,// Check stores that depend on the root (e.g. Store 3 in the chart above).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:21,depend,depend,21,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['depend'],['depend']
Integrability,// Check that AR does not wrap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:26,wrap,wrap,26,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['wrap'],['wrap']
Integrability,"// Check that a warning message is generated when using auto-injection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:24,message,message,24,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,2,"['inject', 'message']","['injection', 'message']"
Integrability,"// Check that any of the branch and the selects in the region could be; // hoisted above the the CHR branch insert point (the most dominating of; // them, either the branch (at the end of the first block) or the first; // select in the first block). If the branch can't be hoisted, drop the; // selects in the first blocks.; //; // For example, for the following scope/region with selects, we want to insert; // the merged branch right before the first select in the first/entry block by; // hoisting c1, c2, c3, and c4.; //; // // Branch insert point here.; // a = c1 ? b : c; // Select 1; // d = c2 ? e : f; // Select 2; // if (c3) { // Branch; // ...; // c4 = foo() // A call.; // g = c4 ? h : i; // Select 3; // }; //; // But suppose we can't hoist c4 because it's dependent on the preceding; // call. Then, we drop Select 3. Furthermore, if we can't hoist c2, we also drop; // Select 2. If we can't hoist c3, we drop Selects 1 & 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:769,depend,dependent,769,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['depend'],['dependent']
Integrability,"// Check that if every protocol in list of id<plist> conforms to a protocol; // of IDecl's, then bridge casting is ok.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:23,protocol,protocol,23,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,3,"['bridg', 'protocol']","['bridge', 'protocol']"
Integrability,// Check that it already implicitly depends on exec (like all VALU movs; // should do).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp:36,depend,depends,36,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,1,['depend'],['depends']
Integrability,// Check that result type matches wrapped callee.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:34,wrap,wrapped,34,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['wrap'],['wrapped']
Integrability,"// Check that src and dest are never captured, unescaped allocas. Also; // find the nearest common dominator and postdominator for all users in; // order to shrink wrap the lifetimes, and instructions with noalias metadata; // to remove them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:164,wrap,wrap,164,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,1,['wrap'],['wrap']
Integrability,"// Check that sub models depend on their systematic uncertainties.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx:25,depend,depend,25,roofit/histfactory/test/testHistFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testHistFactory.cxx,1,['depend'],['depend']
Integrability,// Check that the current line allows merging. This depends on whether we; // are in a control flow statements as well as several style flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:52,depend,depends,52,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['depend'],['depends']
Integrability,"// Check that the dependents are all fundamental. Filter out any that we; // do not depend on, and make substitutions by name in our leaf list.; // Check for overlaps with the projection variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:18,depend,dependents,18,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['depend'],"['depend', 'dependents']"
Integrability,"// Check that the injected-class-name is named as a member of its own; // type; we don't want to suggest 'using Derived::Base;', since that; // means something else.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:18,inject,injected-class-name,18,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inject'],['injected-class-name']
Integrability,// Check that the invalidatable interfaces with ivars/properties implement the; // invalidation methods.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp:32,interface,interfaces,32,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,1,['interface'],['interfaces']
Integrability,"// Check that the plot variables are all actually RooAbsReal's and print a warning if we do not; // explicitly depend on one of them. Clone any variables that we do not contain directly and; // redirect them to use our event data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:111,depend,depend,111,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['depend'],['depend']
Integrability,"// Check that the plot variables are all actually RooRealVars and print a warning if we do not; // explicitly depend on one of them. Fill a set (not list!) of cloned plot variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:110,depend,depend,110,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['depend'],['depend']
Integrability,"// Check that the types are compatible with the types that; // would result from default argument promotions (C99 6.7.5.3p15).; // The only types actually affected are promotable integer; // types and floats, which would be passed as a different; // type depending on whether the prototype is visible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:255,depend,depending,255,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['depend'],['depending']
Integrability,"// Check that the value is a member of the correct subclass. We would like; // to check this property on assignment for better debugging, but we don't; // want to require a virtual interface on this VH. Instead we allow RAUW to; // replace this value with a value of an invalid type, and check it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h:181,interface,interface,181,interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,1,['interface'],['interface']
Integrability,"// Check that the values with and without normalization are almost identical.; // They are not exactly identical for the normalized case, because the; // RooGenericPdf doesn't do analytic integration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:188,integrat,integration,188,roofit/roofitcore/test/testGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx,1,['integrat'],['integration']
Integrability,// Check that this is a previously declared 'ivar' in 'IDecl' interface,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:62,interface,interface,62,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['interface'],['interface']
Integrability,"// Check that we can compute the value of AddRec on the exiting iteration; // without soundness problems. evaluateAtIteration internally needs; // to multiply the stride of the iteration number - which may wrap around.; // The issue here is subtle because computing the result accounting for; // wrap is insufficient. In order to use the result in an exit test, we; // must also know that AddRec doesn't take the same value on any previous; // iteration. The simplest case to consider is a candidate IV which is; // narrower than the trip count (and thus original IV), but this can; // also happen due to non-unit strides on the candidate IVs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:206,wrap,wrap,206,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,2,['wrap'],['wrap']
Integrability,// Check the @synchronized operand now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:14,synchroniz,synchronized,14,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['synchroniz'],['synchronized']
Integrability,"// Check the defs. If the PredR is defined, invalidate it. If RD is; // defined, return the instruction or 0, depending on the circumstances.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:110,depend,depending,110,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['depend'],['depending']
Integrability,// Check the dependence distance at every loop level. There is temporal reuse; // if the distance at the given loop's depth is small (|d| <= MaxDistance) and; // it is zero at every other loop level.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp:13,depend,dependence,13,interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp,1,['depend'],['dependence']
Integrability,// Check the dependences to fast track invalidation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:13,depend,dependences,13,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['depend'],['dependences']
Integrability,// Check the dependencies across the loops and do not fuse if it would; // violate them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:13,depend,dependencies,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['depend'],['dependencies']
Integrability,"// Check the interface computing the dependencies of a given library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:13,interface,interface,13,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"// Check the interface which interacts with the cling::LookupHelper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:13,interface,interface,13,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['interface'],['interface']
Integrability,// Check the message arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:13,message,message,13,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['message'],['message']
Integrability,// Check the protocol list for unimplemented methods in the @implementation; // class.; // Check and see if class methods in class interface have been; // implemented in the implementation class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:13,protocol,protocol,13,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,"['interface', 'protocol']","['interface', 'protocol']"
Integrability,// Check the return type of the message expression. A message to nil will; // return different values depending on the return type and the architecture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:32,message,message,32,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,3,"['depend', 'message']","['depending', 'message']"
Integrability,// Check the sym entry for the dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:31,depend,dependency,31,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['depend'],['dependency']
Integrability,"// Check the template parameter list of this declaration, possibly; // merging in the template parameter list from the previous class; // template declaration. Skip this check for a friend in a dependent; // context, because the template parameter list might be dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:194,depend,dependent,194,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['depend'],['dependent']
Integrability,// Check the type of dependency,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:21,depend,dependency,21,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['depend'],['dependency']
Integrability,// Check then save referenced protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:30,protocol,protocols,30,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,// Check this property against any protocols we inherit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:35,protocol,protocols,35,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['protocol'],['protocols']
Integrability,// Check to see if we are in the situation where alignof(decl) should be; // dependent because decl's alignment is dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:77,depend,dependent,77,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,2,['depend'],['dependent']
Integrability,"// Check to see whether we could do some optimization; // to attach relocation to downstream dependent instructions.; // Two kinds of patterns are recognized below:; // Pattern 1:; // %1 = LD_imm64 @""llvm.b:0:4$0:1"" <== patch_imm = 4; // %2 = LDD %1, 0 <== this insn will be removed; // %3 = ADD_rr %0, %2; // %4 = LDW[32] %3, 0 OR STW[32] %4, %3, 0; // The `%4 = ...` will be transformed to; // CORE_[ALU32_]MEM(%4, mem_opcode, %0, @""llvm.b:0:4$0:1""); // and later on, BTF emit phase will translate to; // %4 = LDW[32] %0, 4 STW[32] %4, %0, 4; // and attach a relocation to it.; // Pattern 2:; // %15 = LD_imm64 @""llvm.t:5:63$0:2"" <== relocation type 5; // %16 = LDD %15, 0 <== this insn will be removed; // %17 = SRA_rr %14, %16; // The `%17 = ...` will be transformed to; // %17 = CORE_SHIFT(SRA_ri, %14, @""llvm.t:5:63$0:2""); // and later on, BTF emit phase will translate to; // %r4 = SRA_ri %r4, 63",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp:93,depend,dependent,93,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMISimplifyPatchable.cpp,1,['depend'],['dependent']
Integrability,// Check transitive dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependencies']
Integrability,"// Check whether it is semantically safe Src and Dst considering any potential; // dependency between them.; //; // @param UnrollLevel The level of the loop being unrolled; // @param JamLevel The level of the loop being jammed; if Src and Dst are on; // different levels, the outermost common loop counts as jammed level; //; // @return true if is safe and false if there is a dependency violation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:83,depend,dependency,83,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,2,['depend'],['dependency']
Integrability,"// Check whether it would be legal to emit an fmuladd intrinsic call to; // represent op and if so, build the fmuladd.; //; // Checks that (a) the operation is fusable, and (b) -ffp-contract=on.; // Does NOT check the type of the operation - it's assumed that this function; // will be called from contexts where it's known that the type is contractable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:182,contract,contract,182,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,2,['contract'],"['contract', 'contractable']"
Integrability,// Check whether the analyses we depend on became invalid for any reason.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:33,depend,depend,33,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['depend']
Integrability,// Check whether the analyses we depend on became invalid for any reason.; // Skip checking TargetLibraryAnalysis as it is immutable and can't become; // invalid.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:33,depend,depend,33,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['depend']
Integrability,"// Check whether the entire set of values fit in the buffer. If so, we'll; // use the optimized short hashing routine and skip state entirely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:110,rout,routine,110,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,1,['rout'],['routine']
Integrability,"// Check whether the original node or the incoming node has the higher; // priority namespace. Depending on which one is dominant, we will have; // to recursively apply namespace changes down to children of the original; // node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp:95,Depend,Depending,95,interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,1,['Depend'],['Depending']
Integrability,// Check whether the result type depends on a type parameter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp:33,depend,depends,33,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,1,['depend'],['depends']
Integrability,// Check whether the template argument is a dependent template-id.; // FIXME: Should not lose sugar here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:44,depend,dependent,44,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['dependent']
Integrability,// Check whether this could be fixed with a bridge cast.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:44,bridg,bridge,44,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['bridg'],['bridge']
Integrability,"// Check whether this declaration can be used. Note that we suppress; // this check when we're going to perform argument-dependent lookup; // on this function name, because this might not be the function; // that overload resolution actually selects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:121,depend,dependent,121,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// Check whether this is CFError, which we identify based on its bridge to; // NSError. CFErrorRef used to be declared with ""objc_bridge"" but is now; // declared with ""objc_bridge_mutable"", so look for either one of the two; // attributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:65,bridg,bridge,65,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['bridg'],['bridge']
Integrability,"// Check whether this might be a C++ implicit instance member access.; // C++ [class.mfct.non-static]p3:; // When an id-expression that is not part of a class member access; // syntax and not used to form a pointer to member is used in the; // body of a non-static member function of class X, if name lookup; // resolves the name in the id-expression to a non-static non-type; // member of some class C, the id-expression is transformed into a; // class member access expression using (*this) as the; // postfix-expression to the left of the . operator.; //; // But we don't actually need to do this for '&' operands if R; // resolved to a function or overloaded function set, because the; // expression is ill-formed if it actually works out to be a; // non-static member function:; //; // C++ [expr.ref]p4:; // Otherwise, if E1.E2 refers to a non-static member function. . .; // [t]he expression can be used only as the left-hand operand of a; // member function call.; //; // There are other safeguards against such uses, but it's important; // to get this right here so that we don't end up making a; // spuriously dependent expression if we're inside a dependent; // instance method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:1119,depend,dependent,1119,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,"// Check whether unroll-and-jam may violate a dependency.; // By construction, every dependency will be lexicographically non-negative; // (if it was, it would violate the current execution order), such as; // (0,0,>,*,*); // Unroll-and-jam changes the GT execution of two executions to the same; // iteration of the chosen unroll level. That is, a GT dependence becomes a GE; // dependence (or EQ, if we fully unrolled the loop) at the loop's position:; // (0,0,>=,*,*); // Now, the dependency is not necessarily non-negative anymore, i.e.; // unroll-and-jam may violate correctness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:46,depend,dependency,46,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,5,['depend'],"['dependence', 'dependency']"
Integrability,"// CheckNonTypeTemplateParameterType will produce a diagnostic if there's; // an error. The error message normally references the parameter; // declaration, but here we'll pass the argument location because that's; // where the parameter type is deduced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:98,message,message,98,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['message'],['message']
Integrability,"// Checkers might rely on the API contract that both returned states; // cannot be null. Thus, we return StInfeasible for both branches because; // it might happen that a Checker uncoditionally uses one of them if the; // other is a nullptr. This may also happen with the non-dual and; // adjacent `assume(true)` and `assume(false)` calls. By implementing; // assume in therms of assumeDual, we can keep our API contract there as; // well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp:34,contract,contract,34,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp,2,['contract'],['contract']
Integrability,"// Checks if the current scope is contained within the target scope.; // Depending on the result, the callback may be performed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h:73,Depend,Depending,73,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVScope.h,1,['Depend'],['Depending']
Integrability,// Checks if the function is a potential candidate for being a XPLeaf routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp:70,rout,routine,70,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp,1,['rout'],['routine']
Integrability,// Choose an instruction that does not depend on an artificial edge.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:39,depend,depend,39,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,1,['depend'],['depend']
Integrability,"// Choose special integrator by default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:18,integrat,integrator,18,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['integrat'],['integrator']
Integrability,// Clang 11 and before mangled the substitution for a dependent template name; // after already having emitted (a substitution for) the prefix.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:54,depend,dependent,54,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['depend'],['dependent']
Integrability,// Clang AST consumers assume a DeclRefExpr refers to a valid decl. We; // wrap a DeclRefExpr referring to an invalid decl with a dependent-type; // RecoveryExpr to avoid follow-up semantic analysis (thus prevent bogus; // diagnostics).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:75,wrap,wrap,75,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,"['depend', 'wrap']","['dependent-type', 'wrap']"
Integrability,// Class and Class<Protocol> don't require retention.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:19,Protocol,Protocol,19,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['Protocol'],['Protocol']
Integrability,// Class message: transform the receiver type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:9,message,message,9,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['message'],['message']
Integrability,"// Class provides direct recorder/replayer interface for a user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:43,interface,interface,43,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['interface'],['interface']
Integrability,"// Class providing backward compatibility for fitting by implementing the TVirtualFitter interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBackCompFitter.h:89,interface,interface,89,hist/hist/inc/TBackCompFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBackCompFitter.h,1,['interface'],['interface']
Integrability,"// Class representing some configuration that can be done during GlobalISel's; // CSEInfo analysis. We define it here because TargetPassConfig can't depend on; // the GlobalISel library, and so we use this in the interface between them; // so that the derived classes in GISel can reference generic opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h:149,depend,depend,149,interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,// Class<protocol-list>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:9,protocol,protocol-list,9,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocol-list']
Integrability,"// ClassInfo interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:13,interface,interface,13,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,2,['interface'],['interface']
Integrability,"// Clean up temporary objects so that they don't live across suspension points; // unnecessarily. We choose to clean up before the call to; // __builtin_coro_resume so that the cleanup code are not inserted in-between; // the resume call and return instruction, which would interfere with the; // musttail call contract.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:311,contract,contract,311,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['contract'],['contract']
Integrability,// Clear out the angle locations; they're used by the caller to indicate; // whether there are any protocol references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:99,protocol,protocol,99,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['protocol'],['protocol']
Integrability,// Clear the MSB so that UpperDiv wraps around.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:34,wrap,wraps,34,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['wrap'],['wraps']
Integrability,// Clear the dependency checks. We assume they are not needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:13,depend,dependency,13,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// Clear the fat binary, it is already a dependence to an host; // action.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:41,depend,dependence,41,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,2,['depend'],['dependence']
Integrability,"// Clear the inbounds attribute because the new index may be off-bound.; // e.g.,; //; // b = add i64 a, 5; // addr = gep inbounds float, float* p, i64 b; //; // is transformed to:; //; // addr2 = gep float, float* p, i64 a ; inbounds removed; // addr = gep inbounds float, float* addr2, i64 5; //; // If a is -4, although the old index b is in bounds, the new index a is; // off-bound. http://llvm.org/docs/LangRef.html#id181 says ""if the; // inbounds keyword is not present, the offsets are added to the base; // address with silently-wrapping two's complement arithmetic"".; // Therefore, the final code will be a semantically equivalent.; //; // TODO(jingyue): do some range analysis to keep as many inbounds as; // possible. GEPs with inbounds are more friendly to alias analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:537,wrap,wrapping,537,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['wrap'],['wrapping']
Integrability,// Clear the scope and variable information from the map which will not be; // valid after we have finished processing this routine. This also prepares; // the map for the subsequent routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:124,rout,routine,124,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,2,['rout'],['routine']
Integrability,"// Client Protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:10,Protocol,Protocol,10,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['Protocol'],['Protocol']
Integrability,"// Client logging of messages from the master and slaves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:21,message,messages,21,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['messages']
Integrability,"// Client logging of messages from the workers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:21,message,messages,21,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['message'],['messages']
Integrability,"// Clipping planes from clip-object; which planes are kept depends on inside/outside mode.; // Additional stuff (scene-class specific) can be added by sub-classing.; // For TGLScene these data include draw-lists after clipping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h:59,depend,depends,59,graf3d/gl/inc/TGLSceneInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneInfo.h,1,['depend'],['depends']
Integrability,"// Clone the function and all nodes that it depends on so that this generator; // is independent of any existing objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx:44,depend,depends,44,roofit/roofitcore/src/RooAbsNumGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx,1,['depend'],['depends']
Integrability,"// Clone the model and all nodes that it depends on so that this context; // is independent of any existing objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:41,depend,depends,41,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,1,['depend'],['depends']
Integrability,"// CmpInstr is either 'ADDS %vreg, 0' or 'SUBS %vreg, 0', and MI is either; // '%vreg = add ...' or '%vreg = sub ...'.; // Condition flag V is used to indicate signed overflow.; // 1) MI and CmpInstr set N and V to the same value.; // 2) If MI is add/sub with no-signed-wrap, it produces a poison value when; // signed overflow occurs, so CmpInstr could still be simplified away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:270,wrap,wrap,270,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['wrap'],['wrap']
Integrability,// Code completion within an Objective-C interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:41,interface,interface,41,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['interface'],['interface']
Integrability,"// Code motion for interleaved accesses can potentially hoist strided loads; // and sink strided stores. The code below checks the legality of the; // following two conditions:; //; // 1. Potentially moving a strided load (B) before any store (A) that; // precedes B, or; //; // 2. Potentially moving a strided store (A) after any load or store (B); // that A precedes.; //; // It's legal to reorder A and B if we know there isn't a dependence from A; // to B. Note that this determination is conservative since some; // dependences could potentially be reordered safely.; // A is potentially the source of a dependence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h:433,depend,dependence,433,interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,3,['depend'],"['dependence', 'dependences']"
Integrability,"// Code motion for interleaved accesses can't violate WAR dependences.; // Thus, reordering is legal if the source isn't a write.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h:58,depend,dependences,58,interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,1,['depend'],['dependences']
Integrability,"// CodeGenFunction can also detect this, but this gives a better error; // message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:75,message,message,75,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['message'],['message']
Integrability,"// Coeff doesn't divide Delta, no dependence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:34,depend,dependence,34,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Coeff doesn't divide Distance, no dependence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:37,depend,dependence,37,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Coefficient Analytical integration support",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:26,integrat,integration,26,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,1,['integrat'],['integration']
Integrability,// Collect all bases. Return false if we find a dependent base.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:48,depend,dependent,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// Collect all data dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['depend'],['dependencies']
Integrability,"// Collect all instructions from the loop that the instructions in Insts; // depend on (plus their dependencies, etc.). These instructions will; // constitute the expression trees that feed those in Insts, but the trees; // will be limited only to instructions contained in the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp:77,depend,depend,77,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonLoopIdiomRecognition.cpp,2,['depend'],"['depend', 'dependencies']"
Integrability,// Collect all referenced registers in the same group as; // AntiDepReg. These all need to be renamed together if we are to; // break the anti-dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:143,depend,dependence,143,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['depend'],['dependence']
Integrability,// Collect all the places that need wrappers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:36,wrap,wrappers,36,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,1,['wrap'],['wrappers']
Integrability,// Collect dependencies recursively.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:11,depend,dependencies,11,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,1,['depend'],['dependencies']
Integrability,// Collect error messages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:17,message,messages,17,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['message'],['messages']
Integrability,"// Collect groups that feature this dependent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:36,depend,dependent,36,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['depend'],['dependent']
Integrability,"// Collect rewrites for LHS and its transitive operands based on the; // condition.; // For min/max expressions, also apply the guard to its operands:; // 'min(a, b) >= c' -> '(a >= c) and (b >= c)',; // 'min(a, b) > c' -> '(a > c) and (b > c)',; // 'max(a, b) <= c' -> '(a <= c) and (b <= c)',; // 'max(a, b) < c' -> '(a < c) and (b < c)'.; // We cannot express strict predicates in SCEV, so instead we replace them; // with non-strict ones against plus or minus one of RHS depending on the; // predicate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:475,depend,depending,475,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['depend'],['depending']
Integrability,// Collect the dependences in the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp:15,depend,dependences,15,interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/VectorUtils.cpp,1,['depend'],['dependences']
Integrability,"// Collect the function arguments of the templated function, substituting; // dependent types as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:78,depend,dependent,78,core/metacling/src/TClingMethodInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx,1,['depend'],['dependent']
Integrability,// Collect the names of referenced protocols,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:35,protocol,protocols,35,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,2,['protocol'],['protocols']
Integrability,"// Collect writes that are in a data dependency with RS, and update RS; // internal state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h:37,depend,dependency,37,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,1,['depend'],['dependency']
Integrability,// Collects writes that are in a RAW dependency with RS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h:37,depend,dependency,37,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,1,['depend'],['dependency']
Integrability,"// Colorization interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.h:16,interface,interface,16,core/textinput/src/Getline_color.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline_color.h,1,['interface'],['interface']
Integrability,"// Combine an arbitrary chain of shuffles + extract_subvectors into a single; // instruction if possible.; //; // Wrapper for combineX86ShuffleChain that extends the shuffle mask to a larger; // type size to attempt to combine:; // shuffle(extract_subvector(x,c1),extract_subvector(y,c2),m1); // -->; // extract_subvector(shuffle(x,y,m2),0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:114,Wrap,Wrapper,114,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Wrap'],['Wrapper']
Integrability,"// Combine the 8-bit registers into 16-bit register pairs.; // This done either from LSB to MSB or from MSB to LSB, depending on the; // shift. It's an optimization so that the register allocator will use the; // fewest movs possible (which order we use isn't a correctness issue, just an; // optimization issue).; // - lsl prefers starting from the most significant byte (2nd case).; // - lshr prefers starting from the least significant byte (1st case).; // - for ashr it depends on the number of shifted bytes.; // Some shift operations still don't get the most optimal mov sequences even; // with this distinction. TODO: figure out why and try to fix it (but we're; // already equal to or faster than avr-gcc in all cases except ashr 8).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp:116,depend,depending,116,interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,2,['depend'],"['depending', 'depends']"
Integrability,// Comment out the protocol references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:19,protocol,protocol,19,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,6,['protocol'],['protocol']
Integrability,"// Comments for which FirstInLine is false can start on arbitrary column,; // and available horizontal space can be too small to align consecutive; // lines with the first one.; // FIXME: We could, probably, align them to current indentation level, but; // now we just wrap them without stars.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.cpp:269,wrap,wrap,269,interpreter/llvm-project/clang/lib/Format/BreakableToken.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.cpp,1,['wrap'],['wrap']
Integrability,"// Common interface to collections; // FIXME: re-introduce once we have ClassDefInline!; //ClassDefOverride(TTreeReaderArrayBase, 0);//Accessor to member of an object stored in a collection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:10,interface,interface,10,tree/treeplayer/inc/TTreeReaderArray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h,1,['interface'],['interface']
Integrability,"// Common issue: Automatic Semicolon Insertion wrapped the line, so the; // import statement should terminate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:47,wrap,wrapped,47,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['wrap'],['wrapped']
Integrability,// Common routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h:10,rout,routines,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,1,['rout'],['routines']
Integrability,// Compare protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp:11,protocol,protocols,11,interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp,1,['protocol'],['protocols']
Integrability,"// Comparison operators that wrap the pointer comparisons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/EvalContext.h:29,wrap,wrap,29,roofit/roofitcore/inc/RooFit/EvalContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/EvalContext.h,1,['wrap'],['wrap']
Integrability,// Comparison; // ALl F80 and PPCF128 routines are unsupported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp:38,rout,routines,38,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp,1,['rout'],['routines']
Integrability,"// Compensate for the fact that the i/o routines; // are going to add my local offset later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:40,rout,routines,40,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routines']
Integrability,"// Compensate for the fact that the i/o routines; // will add the streamer offset to the address.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:40,rout,routines,40,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routines']
Integrability,"// Complete the newly synthesized compound expression by inserting a right; // curly brace before the end of the declaration.; // FIXME: This approach avoids rewriting the initializer expression. It; // also assumes there is only one declarator. For example, the following; // isn't currently supported by this routine (in general):; //; // double __block BYREFVAR = 1.34, BYREFVAR2 = 1.37;; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:311,rout,routine,311,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['rout'],['routine']
Integrability,// Compose range checking error message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:32,message,message,32,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['message'],['message']
Integrability,"// Composite term needs normalized integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:35,integrat,integration,35,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Integrability,"// Compress the message, if required; for these messages we do it already; // here so we get the size; TXSocket does not do it twice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:16,message,message,16,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,6,['message'],"['message', 'messages']"
Integrability,// Compute all the scheduling dependencies between nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:30,depend,dependencies,30,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['depend'],['dependencies']
Integrability,// Compute coloring for topdown and bottom traversals with; // different colors depending on dependencies on Reserved colors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h:80,depend,depending,80,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,2,['depend'],"['dependencies', 'depending']"
Integrability,// Compute dependencies for symbols defined in the JITLink graph.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp:11,depend,dependencies,11,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectLinkingLayer.cpp,1,['depend'],['dependencies']
Integrability,// Compute direct dependencies of aliases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp:18,depend,dependencies,18,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,1,['depend'],['dependencies']
Integrability,// Compute direct dependencies of ifuncs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp:18,depend,dependencies,18,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,1,['depend'],['dependencies']
Integrability,// Compute funclet colors if we might sink/hoist in a function with a funclet; // personality routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MustExecute.cpp:94,rout,routine,94,interpreter/llvm-project/llvm/lib/Analysis/MustExecute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MustExecute.cpp,1,['rout'],['routine']
Integrability,"// Compute psi +/- phi:; // Depending on whether cosTheta is positive or negative and whether it; // is less than 1 in absolute value, different mathematically equivalent; // expressions are numerically stable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx:28,Depend,Depending,28,math/genvector/src/3DConversions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx,1,['Depend'],['Depending']
Integrability,// Compute the Post Dominance Frontiers of each basic block; // The dominance frontier of a live block X in the reverse; // control graph is the set of blocks upon which X is control; // dependent. The following sequence computes the set of blocks; // which currently have dead terminators that are control; // dependence sources of a block which is in NewLiveBlocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:187,depend,dependent,187,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,2,['depend'],"['dependence', 'dependent']"
Integrability,"// Compute the call-site table for wasm EH. Even though we use the same function; // name to share the common routines, a call site entry in the table corresponds; // to not a call site for possibly-throwing functions but a landing pad. In wasm; // EH the VM is responsible for stack unwinding. After an exception occurs and; // the stack is unwound, the control flow is transferred to wasm 'catch'; // instruction by the VM, after which the personality function is called from; // the compiler-generated code. Refer to WasmEHPrepare pass for more; // information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WasmException.cpp:110,rout,routines,110,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WasmException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WasmException.cpp,1,['rout'],['routines']
Integrability,"// Compute the default target features, we need the target to handle this; // because features may have dependencies on one another.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets.cpp:104,depend,dependencies,104,interpreter/llvm-project/clang/lib/Basic/Targets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets.cpp,1,['depend'],['dependencies']
Integrability,// Compute the intersection of protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:31,protocol,protocols,31,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,['protocol'],['protocols']
Integrability,// Compute the intersection of the collected protocol sets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:45,protocol,protocol,45,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocol']
Integrability,"// Compute the new offset in the appropriate width, wrapping at 64 bits.; // FIXME: When compiling for a 32-bit target, we should use 32-bit; // offsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:52,wrap,wrapping,52,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,['wrap'],['wrapping']
Integrability,"// Compute the no-wrap range for LHS given RHS=C, then construct an; // equivalent icmp, potentially using an offset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:18,wrap,wrap,18,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['wrap'],['wrap']
Integrability,// Compute the object type that we should use for name lookup purposes. Only; // record types and dependent types matter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:98,depend,dependent,98,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['dependent']
Integrability,"// Compute the required allocation space for each different type of sections; // (code, read-only data, read-write data) assuming that all sections are; // allocated with the max alignment. Note that we cannot compute with the; // individual alignments of the sections, because then the required size; // depends on the order, in which the sections are allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp:305,depend,depends,305,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,1,['depend'],['depends']
Integrability,// Compute the set of protocols that is implied by either the common type or; // the protocols within the intersection.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:22,protocol,protocols,22,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,['protocol'],['protocols']
Integrability,"// Compute the stage number for the initial value of the Phi, which; // comes from the prolog. The prolog to use depends on to which kernel/; // epilog that we're adding the Phi.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:113,depend,depends,113,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['depend'],['depends']
Integrability,"// Compute |Step| * Backedge; // Compute:; // 1. Start + |Step| * Backedge < Start; // 2. Start - |Step| * Backedge > Start; //; // And select either 1. or 2. depending on whether step is positive or; // negative. If Step is known to be positive or negative, only create; // either 1. or 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:159,depend,depending,159,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['depend'],['depending']
Integrability,"// Conceptually these next two fields could be in a union. However, this; // causes gcc 4.2 to pessimize LexTokenInternal, a very performance critical; // routine. Keeping as separate members with casts until a more beautiful fix; // presents itself.; /// UintData - This holds either the length of the token text, when; /// a normal token, or the end of the SourceRange when an annotation; /// token.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h:155,rout,routine,155,interpreter/llvm-project/clang/include/clang/Lex/Token.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h,1,['rout'],['routine']
Integrability,// CondCost is included to account for cases where the computation of the; // condition is part of a long dependence chain (potentially loop-carried); // that would delay detection of a misprediction and increase its cost.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp:106,depend,dependence,106,interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,1,['depend'],['dependence']
Integrability,"// Condition mask for instructions.; // Starting at first 1 (from lsb).; // '1' condition as indicated in IT.; // '0' inverse of condition (else).; // Count of instructions in IT block is; // 4 - trailingzeroes(mask); // Note that this does not have the same encoding; // as in the IT instruction, which also depends; // on the low bit of the condition code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:309,depend,depends,309,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['depend'],['depends']
Integrability,"// Conditional ownership (when StreamOwner is non-null, it's keeping OS; // alive). We might want to replace this with a wrapper for conditional; // ownership eventually - it seems to pop up often enough.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/LogDiagnosticPrinter.h:121,wrap,wrapper,121,interpreter/llvm-project/clang/include/clang/Frontend/LogDiagnosticPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/LogDiagnosticPrinter.h,1,['wrap'],['wrapper']
Integrability,"// Conservatively mark all internal values as promoted. This interface is; // only used when doing importing via the function importing pass. The pass; // is only enabled when testing importing via the 'opt' tool, which does; // not do the ThinLink that would normally determine what values to promote.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:61,interface,interface,61,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['interface'],['interface']
Integrability,// Consider all the kinds of non-dependent canonical types:; // - functions and arrays aren't possible as return and parameter types; // - vector types of equal size can be arbitrarily mixed,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:33,depend,dependent,33,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['depend'],['dependent']
Integrability,"// Consider inline asm to not be a solo instruction by default.; // Inline asm will be put in a packet temporarily, but then it will be; // removed, and placed outside of the packet (before or after, depending; // on dependencies). This is to reduce the impact of inline asm as a; // ""packet splitting"" instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:200,depend,depending,200,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,2,['depend'],"['dependencies', 'depending']"
Integrability,"// Consider this case:; // %1 = instr1 ...; // %2 = instr2 ...; // %0 = C2_mux ..., %1, %2; // If %0 was coalesced with %1, we could end up with the following; // code:; // %0 = instr1 ...; // %2 = instr2 ...; // %0 = A2_tfrf ..., %2; // which will later become:; // %0 = instr1 ...; // %0 = instr2_cNotPt ...; // i.e. there will be an unconditional definition (instr1) of %0; // followed by a conditional one. The output dependency was there before; // and it unavoidable, but if instr1 is predicable, we will no longer be; // able to predicate it here.; // To avoid this scenario, don't coalesce the destination register with; // a source register that is defined by a predicable instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:422,depend,dependency,422,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['depend'],['dependency']
Integrability,"// Consider this pattern:; // A = ...; // ... = A; // A = ...; // ... = A; // A = ...; // ... = A; // A = ...; // ... = A; // There are three anti-dependencies here, and without special care,; // we'd break all of them using the same register:; // A = ...; // ... = A; // B = ...; // ... = B; // B = ...; // ... = B; // B = ...; // ... = B; // because at each anti-dependence, B is the first register that; // isn't A which is free. This re-introduces anti-dependencies; // at all but one of the original anti-dependencies that we were; // trying to break. To avoid this, keep track of the most recent; // register that each register was replaced with, avoid; // using it to repair an anti-dependence on the same register.; // This lets us produce this:; // A = ...; // ... = A; // B = ...; // ... = B; // C = ...; // ... = C; // B = ...; // ... = B; // This still has an anti-dependence on B, but at least it isn't on the; // original critical path.; //; // TODO: If we tracked more than one register here, we could potentially; // fix that remaining critical edge too. This is a little more involved,; // because unlike the most recent register, less recent registers should; // still be considered, though only if no other registers are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:147,depend,dependencies,147,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,6,['depend'],"['dependence', 'dependencies']"
Integrability,"// Constant term optimizer interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsData.h:27,interface,interface,27,roofit/roofitcore/inc/RooAbsData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsData.h,4,['interface'],['interface']
Integrability,"// ConstantPool, JumpTable, GlobalAddress, and ExternalSymbol are lowered as; // their target counterpart wrapped in the ARMISD::Wrapper node. Suppose N is; // one of the above mentioned nodes. It has to be wrapped because otherwise; // Select(N) returns N. So the raw TargetGlobalAddress nodes, etc. can only; // be used to form addressing mode. These wrapped nodes will be selected; // into MOVi.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:106,wrap,wrapped,106,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,4,"['Wrap', 'wrap']","['Wrapper', 'wrapped']"
Integrability,"// ConstantPool, JumpTable, GlobalAddress, and ExternalSymbol are lowered as; // their target counterpart wrapped in the X86ISD::Wrapper node. Suppose N is; // one of the above mentioned nodes. It has to be wrapped because otherwise; // Select(N) returns N. So the raw TargetGlobalAddress nodes, etc. can only; // be used to form addressing mode. These wrapped nodes will be selected; // into MOV32ri.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:106,wrap,wrapped,106,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,4,"['Wrap', 'wrap']","['Wrapper', 'wrapped']"
Integrability,"// ConstantPool, JumpTable, GlobalAddress, and ExternalSymbol are lowered as; // their target countpart wrapped in the M68kISD::Wrapper node. Suppose N is; // one of the above mentioned nodes. It has to be wrapped because otherwise; // Select(N) returns N. So the raw TargetGlobalAddress nodes, etc. can only; // be used to form addressing mode. These wrapped nodes will be selected; // into MOV32ri.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:104,wrap,wrapped,104,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,4,"['Wrap', 'wrap']","['Wrapper', 'wrapped']"
Integrability,"// Constants for register spacing in NEON load/store instructions.; // For quad-register load-lane and store-lane pseudo instructors, the; // spacing is initially assumed to be EvenDblSpc, and that is changed to; // OddDblSpc depending on the lane number operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:226,depend,depending,226,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,1,['depend'],['depending']
Integrability,"// Constants need to be tracked through RAUW to handle cases with nested; // constant expressions, so wrap values in WeakTrackingVH.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:102,wrap,wrap,102,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['wrap'],['wrap']
Integrability,"// Construct a blank object with the provided triple and features. Used in; // testing, where a sub class will dependency inject protected methods to; // allow analysis of raw binary, without requiring a fully valid ELF file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cfi-verify/lib/FileAnalysis.h:111,depend,dependency,111,interpreter/llvm-project/llvm/tools/llvm-cfi-verify/lib/FileAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cfi-verify/lib/FileAnalysis.h,2,"['depend', 'inject']","['dependency', 'inject']"
Integrability,// Construct a dependent template specialization type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:15,depend,dependent,15,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,// Construct a graph where blocks are connected if there is a mutual; // dependency between them. This graph has a special property that it contains; // only paths.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp:73,depend,dependency,73,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BlockCoverageInference.cpp,1,['depend'],['dependency']
Integrability,// Construct a new stub function that will re-route calls to F,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp:46,rout,route,46,interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/Miscompilation.cpp,1,['rout'],['route']
Integrability,"// Construct a numpy array from the lowlevelview (w/o copy if possible); this; // uses the Python methods to avoid depending on numpy directly; // Expect as most a dtype from the arguments;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:115,depend,depending,115,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,1,['depend'],['depending']
Integrability,// Construct banner message before PM->add() as that may delete the pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:20,message,message,20,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['message'],['message']
Integrability,"// Construct final normalization set for c.d.f = integrated observables + any extra specified by user",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:49,integrat,integrated,49,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Integrability,"// Construct inner-most integration: over observables (with fixed or param range) not used in any other param range definitions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:24,integrat,integration,24,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,"// Construct representative name of normalization wrapper",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:50,wrap,wrapper,50,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['wrap'],['wrapper']
Integrability,"// Construct the lexical block tree for a routine, pruning emptpy lexical; // scopes, and populate it with local variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h:42,rout,routine,42,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,1,['rout'],['routine']
Integrability,// Construct the link job so we can wrap around it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:36,wrap,wrap,36,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['wrap'],['wrap']
Integrability,// Construct the target action rule by extracting the evaluated; // requirements from Expected<> wrappers and then run it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h:97,wrap,wrappers,97,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h,1,['wrap'],['wrappers']
Integrability,"// Construct this type in the CU directly.; // This is inefficient because all the dependent types will be rebuilt; // from scratch, including building them in type units, discovering that; // they depend on addresses, throwing them out and rebuilding them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:83,depend,dependent,83,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,2,['depend'],"['depend', 'dependent']"
Integrability,"// Constructor and ""create"" factory function. The constructor is only a thin; // wrapper around the base constructor. The ""create"" function fills out the; // XCOFF-specific information and performs the error checking along the way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h:81,wrap,wrapper,81,interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,1,['wrap'],['wrapper']
Integrability,"// Constructor from generic function interfaces; // manage the functions and clone them if flag copyFunc is true",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranContDist.cxx:37,interface,interfaces,37,math/unuran/src/TUnuranContDist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranContDist.cxx,1,['interface'],['interfaces']
Integrability,"// Constructor given the creation and delete routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TVirtualCollectionIterators.h:45,rout,routines,45,io/io/inc/TVirtualCollectionIterators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TVirtualCollectionIterators.h,1,['rout'],['routines']
Integrability,"// Constructor implementation : create GSLMultiFit wrapper object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLNLSMinimizer.cxx:51,wrap,wrapper,51,math/mathmore/src/GSLNLSMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLNLSMinimizer.cxx,2,['wrap'],['wrapper']
Integrability,"// Constructor implementation : create GSLMultiMin wrapper object; //std::cout << ""create GSL Minimizer of type "" << type << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer.cxx:51,wrap,wrapper,51,math/mathmore/src/GSLMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMinimizer.cxx,1,['wrap'],['wrapper']
Integrability,"// Constructor of convolution operator PDF; //; // convVar : convolution variable (on which both pdf and resmodel should depend); // pdf : input 'physics' pdf; // resmodel : input 'resolution' pdf; //; // output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:121,depend,depend,121,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['depend'],['depend']
Integrability,"// Constructor where func and model; //; // 'func' = func(xprime); // 'model' = model(xprime); //; // and; // 'xprime' is the RRV that should be connected to func and model; // (i.e. the variable that will be integrated over); // 'x' is RRV that represents the value at which the convolution is calculated; // (this variable should _not_ be connected to func and model); //; // this function returns RCBB[x',x] = f[x']*g[x-x'], i.e. the substiturion g[x'] --> g[x-x']; // is taken care internally; //; // The integral of this binding over its 1st arg yields the convolution (f (x) g)[x]; //; // allocate memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx:209,integrat,integrated,209,roofit/roofitcore/src/RooConvIntegrandBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx,1,['integrat'],['integrated']
Integrability,// Consume 'new'; // A '(' now can be a new-placement or the '(' wrapping the type-id in the; // second form of new-expression. It can't be a new-type-id.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:65,wrap,wrapping,65,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['wrap'],['wrapping']
Integrability,"// Container is a minimal interface used to store results when traversing; // SExprs of variable arity, such as Phi, Goto, and SCFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:26,interface,interface,26,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,1,['interface'],['interface']
Integrability,// Containers to remember the pointer infos and new copies while we are not; // sure that we can find all of them. If we abort we want to avoid spurious; // dependences and potential copies in the provided container.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:157,depend,dependences,157,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['depend'],['dependences']
Integrability,"// Context menu handles its own messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx:32,message,messages,32,gui/gui/src/TRootContextMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootContextMenu.cxx,1,['message'],['messages']
Integrability,"// Context will be nullptr for IR input files, we will construct the diag; // message from llvm::DiagnosticInfoUnsupported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:78,message,message,78,interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,1,['message'],['message']
Integrability,"// Context will be nullptr for IR input files, we will construct the remark; // message from llvm::DiagnosticInfoOptimizationBase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:80,message,message,80,interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp,1,['message'],['message']
Integrability,"// Context.DependentTy is used as a placeholder for a missing block; // return type. TODO: what should we do with declarators like:; // ^ * { ... }; // If the answer is ""apply template argument deduction""....",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:11,Depend,DependentTy,11,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['Depend'],['DependentTy']
Integrability,// Continue promoting SExts if known as considerable depending on targets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:53,depend,depending,53,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['depend'],['depending']
Integrability,"// Contract with backend that ""init_seg(compiler)"" corresponds to priority; // 200 and ""init_seg(lib)"" corresponds to priority 400.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:3,Contract,Contract,3,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['Contract'],['Contract']
Integrability,"// Contracting shuffles, i.e. instructions that always discard some bytes; // from the operand vectors.; //; // Funnel shifts; // V6_vshuff{e,o}b; // V6_vshuf{e,o}h; // V6_vdealb4w; // V6_vpack{e,o}{b,h}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:3,Contract,Contracting,3,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['Contract'],['Contracting']
Integrability,"// Convergent calls implicitly depend on the set of threads that is; // currently executing, so conservatively return false if they are in; // different basic blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:31,depend,depend,31,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,2,['depend'],['depend']
Integrability,"// Convergent instructions can be duplicated only if doing so doesn't add; // new control dependencies, which is what we're going to do here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp:90,depend,dependencies,90,interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TailDuplicator.cpp,1,['depend'],['dependencies']
Integrability,// Convergent operations cannot be made control-dependent on additional; // values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Sink.cpp:48,depend,dependent,48,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Sink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Sink.cpp,1,['depend'],['dependent']
Integrability,// Convergent operations may not be made control-dependent on additional; // values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:49,depend,dependent,49,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,2,['depend'],['dependent']
Integrability,// Conversion; // All F80 and PPCF128 routines are unsupported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp:38,rout,routines,38,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRuntimeLibcallSignatures.cpp,1,['rout'],['routines']
Integrability,"// Convert `APFloat` to appropriate IEEE type depending on `DstTy`. Otherwise,; // `buildFConstant` will assert on size mismatch. Only `G_FSQRT`, and; // `G_FLOG2` reach here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:46,depend,depending,46,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['depend'],['depending']
Integrability,"// Convert a bound C++ function pointer or callable python object to a C-style; // function pointer. The former is direct, the latter involves a JIT-ed wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:152,wrap,wrapper,152,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,1,['wrap'],['wrapper']
Integrability,"// Convert one MVE vector type into another by reinterpreting its in-register; // format.; //; // Little-endian, this is identical to a bitcast (which reinterprets the; // memory format). But big-endian, they're not necessarily the same, because; // the register and memory formats map to each other differently depending on; // the lane size.; //; // We generate a bitcast whenever we can (if we're little-endian, or if the; // lane sizes are the same anyway). Otherwise we fall back to an IR intrinsic; // that performs the different kind of reinterpretation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:312,depend,depending,312,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['depend'],['depending']
Integrability,"// Convert target-dependent attributes to strings of the form:; //; // ""kind""; // ""kind"" = ""value""; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Attributes.cpp:18,depend,dependent,18,interpreter/llvm-project/llvm/lib/IR/Attributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Attributes.cpp,1,['depend'],['dependent']
Integrability,// Convert the integer to a pointer-sized integer before converting it; // to a pointer.; // FIXME: signedness depends on the original integer type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp:111,depend,depends,111,interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprConstant.cpp,1,['depend'],['depends']
Integrability,// Convert the list of protocols identifiers into a list of protocol decls.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:23,protocol,protocols,23,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,2,['protocol'],"['protocol', 'protocols']"
Integrability,"// Convert vector increment or decrement to sub/add with an all-ones; // constant:; // add X, <1, 1...> --> sub X, <-1, -1...>; // sub X, <1, 1...> --> add X, <-1, -1...>; // The all-ones vector constant can be materialized using a pcmpeq; // instruction that is commonly recognized as an idiom (has no register; // dependency), so that's better/smaller than loading a splat 1 constant.; //; // But don't do this if it would inhibit a potentially profitable load; // folding opportunity for the other operand. That only occurs with the; // intersection of:; // (1) The other operand (op0) is load foldable.; // (2) The op is an add (otherwise, we are *creating* an add and can still; // load fold the other op).; // (3) The target has AVX (otherwise, we have a destructive add and can't; // load fold the other op without killing the constant op).; // (4) The constant 1 vector has multiple uses (so it is profitable to load; // into a register anyway).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:316,depend,dependency,316,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['depend'],['dependency']
Integrability,"// Convert xor ([trunc] (ashr X, BW-1)), C =>; // select(X >s -1, C, ~C); // The ashr creates ""AllZeroOrAllOne's"", which then optionally inverses the; // constant depending on whether this input is less than 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:163,depend,depending,163,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['depend'],['depending']
Integrability,"// Copy CallInst ""flags"" like musttail, notail, and tail. Return New param for; // easier chaining. Calls to emit* and B.createCall should probably be wrapped; // in this function when New is created to replace Old. Callers should take; // care to check Old.isMustTailCall() if they aren't replacing Old directly; // with New.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp:151,wrap,wrapped,151,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,1,['wrap'],['wrapped']
Integrability,// Copy all dependencies to the head of the chain to avoid any; // computation being inserted into the chain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp:12,depend,dependencies,12,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp,1,['depend'],['dependencies']
Integrability,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,integrat,integrator-specific,12,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator-specific']
Integrability,"// Copy predecessor edges from SUb to SUa to avoid the SUnits that; // SUb dependent on scheduled in-between SUb and SUa. Successor edges; // do not need to be copied from SUa to SUb since no one will depend; // on stores.; // Notice that, we don't need to care about the memory dependency as; // we won't try to cluster them if they have any memory dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:75,depend,dependent,75,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,4,['depend'],"['depend', 'dependency', 'dependent']"
Integrability,// Copy regular dependencies with iterators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:16,depend,dependencies,16,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['depend'],['dependencies']
Integrability,// Copy successor edges from SUa to SUb. Interleaving computation; // dependent on SUa can prevent load combining due to register reuse.; // Predecessor edges do not need to be copied from SUb to SUa since; // nearby loads should have effectively the same inputs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:70,depend,dependent,70,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['depend'],['dependent']
Integrability,"// Copy the cleanup emission data out. This uses either a stack; // array or malloc'd memory, depending on the size, which is; // behavior that SmallVector would provide, if we could use it; // here. Unfortunately, if you ask for a SmallVector<char>, the; // alignment isn't sufficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp:94,depend,depending,94,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,1,['depend'],['depending']
Integrability,"// Copy the designators and their subexpressions, computing; // value-dependence along the way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:70,depend,dependence,70,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['depend'],['dependence']
Integrability,"// Copy the passed line, it comes from a static buffer in TApplication; // which can be reentered through the Cling evaluation routines,; // which would overwrite the static buffer and we would forget what we; // were doing.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:127,rout,routines,127,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['rout'],['routines']
Integrability,// Copy the wrapping flags.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp:12,wrap,wrapping,12,interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,2,['wrap'],['wrapping']
Integrability,"// Core Text's CTLine wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/quartz/inc/QuartzText.h:22,wrap,wrapper,22,graf2d/quartz/inc/QuartzText.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/quartz/inc/QuartzText.h,1,['wrap'],['wrapper']
Integrability,"// Correct URL protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:15,protocol,protocol,15,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,2,['protocol'],['protocol']
Integrability,// Counter variable to generate new LLVM IR variable names and wrapper function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp:63,wrap,wrapper,63,interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp,1,['wrap'],['wrapper']
Integrability,"// Counters, PrivateCounters, Inits,; // Updates, Finals, DependentCounters,; // DependentInits, FinalsConditions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:58,Depend,DependentCounters,58,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['Depend'],"['DependentCounters', 'DependentInits']"
Integrability,"// Crash if the assertion fails, printing the message and testcase.; // More elegant error handling isn't needed for unit tests.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Testing/Annotations/Annotations.cpp:46,message,message,46,interpreter/llvm-project/llvm/lib/Testing/Annotations/Annotations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Testing/Annotations/Annotations.cpp,1,['message'],['message']
Integrability,// Create ComponentInfo for COMPONENT_Y which depends on COMPONENT_X layout.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h:46,depend,depends,46,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h,1,['depend'],['depends']
Integrability,"// Create WM dependent application environment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:13,depend,dependent,13,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['depend'],['dependent']
Integrability,"// Create a PassManager to hold and optimize the collection of passes we are; // about to build. If the -debugify-each option is set, wrap each pass with; // the (-check)-debugify passes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/opt.cpp:134,wrap,wrap,134,interpreter/llvm-project/llvm/tools/opt/opt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/opt.cpp,1,['wrap'],['wrap']
Integrability,"// Create a RISCVOperand for checking later (so the error messages are; // nicer), but we don't add it to Operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp:58,message,messages,58,interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,1,['message'],['messages']
Integrability,"// Create a RooSimultaneous that wraps this pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:33,wrap,wraps,33,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['wrap'],['wraps']
Integrability,"// Create a cache entry. This compute a unique hash for the Module considering; // the current list of export/import, and offer an interface to query to; // access the content in the cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:131,interface,interface,131,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['interface'],['interface']
Integrability,// Create a declaration to describe this @interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:42,interface,interface,42,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// Create a default MessageHandler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:20,Message,MessageHandler,20,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['Message'],['MessageHandler']
Integrability,// Create a filter expression: a constant array indicating which filter; // types there are. The personality routine only lands here if the filter; // doesn't match.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:109,rout,routine,109,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['rout'],['routine']
Integrability,// Create a map of symbol addresses to symbol names for use by; // the SymbolizerSymbolLookUp() routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp:96,rout,routine,96,interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,1,['rout'],['routine']
Integrability,"// Create a new protocol that is completely distinct from previous; // declarations, and do not make this protocol available for name lookup.; // That way, we'll end up completely ignoring the duplicate.; // FIXME: Can we turn this into an error?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:16,protocol,protocol,16,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,2,['protocol'],['protocol']
Integrability,// Create a new wrapper that simply contains `unreachable`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:16,wrap,wrapper,16,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,1,['wrap'],['wrapper']
Integrability,"// Create a note that contains pointers to the list of global; // descriptors. Adding a note to the output file will cause the linker to; // create a PT_NOTE program header pointing to the note that we can use to; // find the descriptor list starting from the program headers. A function; // provided by the runtime initializes the shadow memory for the globals by; // accessing the descriptor list via the note. The dynamic loader needs to; // call this function whenever a library is loaded.; //; // The reason why we use a note for this instead of a more conventional; // approach of having a global constructor pass a descriptor list pointer to; // the runtime is because of an order of initialization problem. With; // constructors we can encounter the following problematic scenario:; //; // 1) library A depends on library B and also interposes one of B's symbols; // 2) B's constructors are called before A's (as required for correctness); // 3) during construction, B accesses one of its ""own"" globals (actually; // interposed by A) and triggers a HWASAN failure due to the initialization; // for A not having happened yet; //; // Even without interposition it is possible to run into similar situations in; // cases where two libraries mutually depend on each other.; //; // We only need one note per binary, so put everything for the note in a; // comdat. This needs to be a comdat with an .init_array section to prevent; // newer versions of lld from discarding the note.; //; // Create the note even if we aren't instrumenting globals. This ensures that; // binaries linked from object files with both instrumented and; // non-instrumented globals will end up with a note, even if a comdat from an; // object file with non-instrumented globals is selected. The note is harmless; // if the runtime doesn't support it, since it will just be ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp:811,depend,depends,811,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,2,['depend'],"['depend', 'depends']"
Integrability,"// Create a root node that connects to every connected component of the graph.; // This is done to allow graph iterators to visit all the disjoint components; // of the graph, in a single walk.; //; // This algorithm works by going through each node of the graph and for each; // node N, do a DFS starting from N. A rooted edge is established between the; // root node and N (if N is not yet visited). All the nodes reachable from N; // are marked as visited and are skipped in the DFS of subsequent nodes.; //; // Note: This algorithm tries to limit the number of edges out of the root; // node to some extent, but there may be redundant edges created depending on; // the iteration order. For example for a graph {A -> B}, an edge from the; // root node is added to both nodes if B is visited before A. While it does; // not result in minimal number of edges, this approach saves compile-time; // while keeping the number of edges in check.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp:653,depend,depending,653,interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,1,['depend'],['depending']
Integrability,// Create a separate diagnostic pool for RequiresExprBodyDecl.; // Dependent diagnostics are attached to this Decl and non-depenedent; // diagnostics are surfaced after this parse.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:67,Depend,Dependent,67,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,1,['Depend'],['Dependent']
Integrability,// Create a temporary stream to see whether we have any message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerManager.cpp:56,message,message,56,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerManager.cpp,1,['message'],['message']
Integrability,"// Create a trapping basic block on demand using a callback. Depending on; // flags, this will either create a single block for the entire function or; // will create a fresh block every time it is called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BoundsChecking.cpp:61,Depend,Depending,61,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BoundsChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/BoundsChecking.cpp,1,['Depend'],['Depending']
Integrability,"// Create a wrapper function with type Ty that calls F (which may have a; // different type). Attempt to support common bitcasted function idioms:; // - Call with more arguments than needed: arguments are dropped; // - Call with fewer arguments than needed: arguments are filled in with undef; // - Return value is not needed: drop it; // - Return value needed but not present: supply an undef; //; // If the all the argument types of trivially castable to one another (i.e.; // I32 vs pointer type) then we don't create a wrapper at all (return nullptr; // instead).; //; // If there is a type mismatch that we know would result in an invalid wasm; // module then generate wrapper that contains unreachable (i.e. abort at; // runtime). Such programs are deep into undefined behaviour territory,; // but we choose to fail at runtime rather than generate and invalid module; // or fail at compiler time. The reason we delay the error is that we want; // to support the CMake which expects to be able to compile and link programs; // that refer to functions with entirely incorrect signatures (this is how; // CMake detects the existence of a function in a toolchain).; //; // For bitcasts that involve struct types we don't know at this stage if they; // would be equivalent at the wasm level and so we can't know if we need to; // generate a wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:12,wrap,wrapper,12,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,4,['wrap'],['wrapper']
Integrability,// Create an analysis class that is derived from `DataflowAnalysis`. This is an; // SFINAE adapter that allows us to call two different variants of constructor; // (either with or without the optional `Environment` parameter).; // FIXME: Make all classes derived from `DataflowAnalysis` take an `Environment`; // parameter in their constructor so that we can get rid of this abomination.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:91,adapter,adapter,91,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,1,['adapter'],['adapter']
Integrability,// Create an empty module interface unit for error recovery.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:26,interface,interface,26,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// Create an expander and an additional wrapper for a cell content.; //; // --- expandableDiv ----; // --- expandableDiv --- | ------ data ------ |; // | cell content | -> | | cell content | | ; // --------------------- | ------------------ |; // | ---- expander ---- |; // ----------------------,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/www/analyzer/scripts/expandcollapse.js:40,wrap,wrapper,40,interpreter/llvm-project/clang/www/analyzer/scripts/expandcollapse.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/www/analyzer/scripts/expandcollapse.js,1,['wrap'],['wrapper']
Integrability,"// Create an initialization sequence for the promise type using the; // constructor arguments, wrapped in a parenthesized list expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp:95,wrap,wrapped,95,interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCoroutine.cpp,1,['wrap'],['wrapped']
Integrability,"// Create an injected type for the whole redecl chain.; // The chain may contain an already existing injected type at the start,; // if yes this should be reused. We must ensure that only one type; // object exists for the injected type (including the injected record; // declaration), ASTContext does not check it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:13,inject,injected,13,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,4,['inject'],['injected']
Integrability,// Create an instance of the AbstractInterpreter interface as specified on; // the command line,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp:49,interface,interface,49,interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp,1,['interface'],['interface']
Integrability,"// Create an instance of the structure; // This is now an externally visible symbol, so that we can speed up class; // messages in the next ABI. We may already have some weak references to; // this, so check and fix them properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:119,message,messages,119,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['message'],['messages']
Integrability,"// Create an interface declaration, if one does not already exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:13,interface,interface,13,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['interface'],['interface']
Integrability,"// Create an interface, but note that it is an implementation; // unit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:13,interface,interface,13,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,// Create an invocation that uses the underlying file; // system to ensure that any file system requests that; // are made by the driver do not go through the; // dependency scanning filesystem.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp:163,depend,dependency,163,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,1,['depend'],['dependency']
Integrability,"// Create appropriate numeric integrator using factory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:30,integrat,integrator,30,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrator']
Integrability,"// Create artificial dependencies between the source of COPY/REG_SEQUENCE that; // is loop-carried to the USE in next iteration. This will help pipeliner avoid; // additional copies that are needed across iterations. An artificial dependence; // edge is added from USE to SOURCE of COPY/REG_SEQUENCE.; // PHI-------Anti-Dep-----> COPY/REG_SEQUENCE (loop-carried); // SRCOfCopY------True-Dep---> COPY/REG_SEQUENCE; // PHI-------True-Dep------> USEOfPhi; // The mutation creates; // USEOfPHI -------Artificial-Dep---> SRCOfCopy; // This overall will ensure, the USEOfPHI is scheduled before SRCOfCopy; // (since USE is a predecessor), implies, the COPY/ REG_SEQUENCE is scheduled; // late to avoid additional copies across iterations. The possible scheduling; // order would be; // USEOfPHI --- SRCOfCopy--- COPY/REG_SEQUENCE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:21,depend,dependencies,21,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,2,['depend'],"['dependence', 'dependencies']"
Integrability,"// Create artificial edges between loads that could likely cause a bank; // conflict. Since such loads would normally not have any dependency; // between them, we cannot rely on existing edges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp:131,depend,dependency,131,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.cpp,1,['depend'],['dependency']
Integrability,// Create declarations for thread wrappers for all thread-local variables; // with non-discardable definitions in this translation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:34,wrap,wrappers,34,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['wrap'],['wrappers']
Integrability,// Create empty phi nodes. This avoids cyclic dependencies when creating; // the remaining instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:46,depend,dependencies,46,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['depend'],['dependencies']
Integrability,// Create initialized wrapper structure that points to the loaded GPU binary,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp:22,wrap,wrapper,22,interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,1,['wrap'],['wrapper']
Integrability,"// Create integral performing remaining numeric integration over (partial) analytic product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:48,integrat,integration,48,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,1,['integrat'],['integration']
Integrability,// Create layout for COMPONENT_Y which depends on COMPONENT_X layout.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h:39,depend,depends,39,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.h,1,['depend'],['depends']
Integrability,"// Create message box test dialog. Use this dialog to select the different; // message dialog box styles and show the message dialog by clicking the; // ""Test"" button.; // use hierarchical cleani",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx:10,message,message,10,test/guitest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/guitest.cxx,3,['message'],['message']
Integrability,"// Create prototype integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:20,integrat,integrator,20,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integrator']
Integrability,// Create shallow wrappers for all functions that are not IPO amendable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:18,wrap,wrappers,18,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['wrap'],['wrappers']
Integrability,// Create the CustomBehaviour object for enforcing Target Specific; // behaviours and dependencies that aren't expressed well enough; // in the tablegen. CB cannot depend on the list of MCInst or; // the source code (but it can depend on the list of; // mca::Instruction or any objects that can be reconstructed; // from the target information).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp:86,depend,dependencies,86,interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/llvm-mca.cpp,3,['depend'],"['depend', 'dependencies']"
Integrability,"// Create the RVariedAction and inject it in the computation graph.; // This recursively creates all the required varied column readers and upstream nodes of the computation graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx:32,inject,inject,32,tree/dataframe/inc/ROOT/RDFHelpers.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx,1,['inject'],['inject']
Integrability,"// Create the actual interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:21,interface,interface,21,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['interface'],['interface']
Integrability,// Create the branch to either the end or found block depending on the value; // returned by the intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:54,depend,depending,54,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['depend'],['depending']
Integrability,// Create the built-in forward declaratino for 'Protocol'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:48,Protocol,Protocol,48,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['Protocol'],['Protocol']
Integrability,// Create the call in the wrapper.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:26,wrap,wrapper,26,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['wrap'],['wrapper']
Integrability,"// Create the canvas colors early so they are allocated before; // any color table expensive bitmaps get allocated in GUI routines (like; // creation of XPM bitmaps).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:122,rout,routines,122,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,2,['rout'],['routines']
Integrability,"// Create the conditional branch based on the third operand of the; // instruction, which tells us if we are wrapping a normal or streaming; // function.; // We test the live value of pstate.sm and toggle pstate.sm if this is not the; // expected value for the callee (0 for a normal callee and 1 for a streaming; // callee).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:109,wrap,wrapping,109,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,1,['wrap'],['wrapping']
Integrability,"// Create the corresponding THnSparse, depending on the storage; // type of the TH1. The class name will be ""TH??\0"" where the first; // ? is 1,2 or 3 and the second ? indicates the storage as C, S,; // I, L, F or D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:39,depend,depending,39,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['depend'],['depending']
Integrability,"// Create the dependency collector that will collect the produced; // dependencies.; //; // This also moves the existing dependency output options from the; // invocation to the collector. The options in the invocation are reset,; // which ensures that the compiler won't create new dependency collectors,; // and thus won't write out the extra '.d' files to disk.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp:14,depend,dependency,14,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,4,['depend'],"['dependencies', 'dependency']"
Integrability,// Create the fatbinary wrapper,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:24,wrap,wrapper,24,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,1,['wrap'],['wrapper']
Integrability,// Create the html for the message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:27,message,message,27,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['message'],['message']
Integrability,"// Create the local class that will describe the lambda.; // FIXME: DependencyKind below is wrong when substituting inside a templated; // context that isn't a DeclContext (such as a variable template), or when; // substituting an unevaluated lambda inside of a function's parameter's type; // - as parameter types are not instantiated from within a function's DC. We; // use evaluation contexts to distinguish the function parameter case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:68,Depend,DependencyKind,68,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['Depend'],['DependencyKind']
Integrability,"// Create the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:14,message,message,14,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['message'],['message']
Integrability,"// Create the model with the RooWorkspace to not explicitly depend on; // non-RooFitCore classes like RooGaussian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx:60,depend,depend,60,roofit/roofitcore/test/testRooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx,1,['depend'],['depend']
Integrability,"// Create the offload action with all dependences. When an offload action; // is created the kinds are propagated to the host action, so we don't have; // to do that explicitly here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:38,depend,dependences,38,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['dependences']
Integrability,"// Create the protocol list structure used in classes, categories and so on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:14,protocol,protocol,14,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['protocol'],['protocol']
Integrability,"// Create the template histogram from the data. This operation is very; // expensive, but since the offset only depends on the observables it; // only has to be done once.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:112,depend,depends,112,roofit/roofitcore/src/RooNLLVarNew.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx,1,['depend'],['depends']
Integrability,"// Create timer to let run CEF message loop together with ROOT event loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx:31,message,message,31,gui/cefdisplay/src/RCefWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx,1,['message'],['message']
Integrability,// Create wrappers for C Binding types (see CBindingWrapping.h).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:10,wrap,wrappers,10,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,20,['wrap'],['wrappers']
Integrability,"// Creates a T, TT, TTT or TTTT BlockMask depending on BlockSize.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp:42,depend,depending,42,interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEVPTBlockPass.cpp,1,['depend'],['depending']
Integrability,// Creates an EH frame header prepared for a 32-bit relative relocation; // to the start of the .eh_frame section. Absolute injects a 64-bit absolute; // address space offset 4 bytes from the start instead of 4 bytes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Debugging/PerfSupportPlugin.cpp:124,inject,injects,124,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Debugging/PerfSupportPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Debugging/PerfSupportPlugin.cpp,1,['inject'],['injects']
Integrability,// Creating the error message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp:22,message,message,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MoveChecker.cpp,1,['message'],['message']
Integrability,// Critical memory dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:19,depend,dependency,19,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['depend'],['dependency']
Integrability,// Critical register dependency for this write.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:21,depend,dependency,21,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['depend'],['dependency']
Integrability,// Critical register dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h:21,depend,dependency,21,interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Instruction.h,1,['depend'],['dependency']
Integrability,"// Cross-check to make sure the integration works correctly even if there is; // only one midpoint on the RooCurve. Covers GitHub issue #9838 (the reproducer; // in that issue was translated to this test).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:32,integrat,integration,32,roofit/roofitcore/test/testRooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx,1,['integrat'],['integration']
Integrability,"// Cross-imported integrated dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:18,integrat,integrated,18,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,"['depend', 'integrat']","['dependents', 'integrated']"
Integrability,// Current phi node depends on previous phi node. Break the; // dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:20,depend,depends,20,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,2,['depend'],"['dependency', 'depends']"
Integrability,// Currently Emscripten EH only handles 'throw()' but not 'throw' with; // types. 'throw()' handling will be done in JS glue code so we don't need; // to do anything in that case. Just print a warning message in case of; // throw with types.; // TODO Correctly handle exception specification in Emscripten EH,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:201,message,message,201,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['message'],['message']
Integrability,// Currently all targets that support the dealloc VGPRs message also require; // the nop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h:56,message,message,56,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSubtarget.h,1,['message'],['message']
Integrability,"// Currently implementations of CompilationDatabase::getCompileCommands can; // change the state of the file system (e.g. prepare generated headers), so; // this method needs to run right before we invoke the tool, as the next; // file may require a different (incompatible) state of the file system.; //; // FIXME: Make the compilation database interface more explicit about the; // requirements to the order of invocation of its members.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp:346,interface,interface,346,interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp,1,['interface'],['interface']
Integrability,"// Currently needed only for WinNT interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:35,interface,interface,35,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['interface'],['interface']
Integrability,"// Currently the following features are excluded from InlineFeaturesAllowed.; // ModeThumb, FeatureNoARM, ModeSoftFloat, FeatureFP64, FeatureD32; // Depending on whether they are set or unset, different; // instructions/registers are available. For example, inlining a callee with; // -thumb-mode in a caller with +thumb-mode, may cause the assembler to; // fail if the callee uses ARM only instructions, e.g. in inline asm.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.h:149,Depend,Depending,149,interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.h,1,['Depend'],['Depending']
Integrability,// Currently the only reserved locator is 'omp_all_memory' which is only; // allowed on a depend clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:90,depend,depend,90,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['depend'],['depend']
Integrability,"// Currently, we only distribute to isolate the part of the loop with; // dependence cycles to enable partial vectorization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:74,depend,dependence,74,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,1,['depend'],['dependence']
Integrability,"// Currently, we only track data-dependent loads within a basic block.; // FIXME: We should see if this is necessary or if we could be more; // aggressive here without opening up attack avenues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:33,depend,dependent,33,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['depend'],['dependent']
Integrability,// Custom analysis routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:19,rout,routines,19,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['rout'],['routines']
Integrability,"// Custom lower unaligned loads.; // Also, for both loads and stores, verify the alignment of the address; // in case it is a compile-time constant. This is a usability feature to; // provide a meaningful error message to users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:211,message,message,211,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,1,['message'],['message']
Integrability,"// Custom narrowing of wide multiplies using wide multiply-add instructions.; //; // TODO: If the multiply is followed by an addition, we should attempt to; // integrate it to make better use of V_MAD_U64_U32's multiply-add capabilities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:160,integrat,integrate,160,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['integrat'],['integrate']
Integrability,"// Custom predicates really depend on the context pattern of the; // instruction, not just the individual instruction. This therefore; // implicitly depends on all other pattern constraints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h:28,depend,depend,28,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,2,['depend'],"['depend', 'depends']"
Integrability,// Custom simplification helper routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:32,rout,routines,32,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['rout'],['routines']
Integrability,"// Cycles that are assumed divergent due to the diverged entry; // criterion potentially contain temporal divergence depending on; // the DFS chosen. Conservatively, all values produced in such a; // cycle are assumed divergent. ""Cycle invariant"" values may be; // assumed uniform, but that requires further analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:117,depend,depending,117,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['depend'],['depending']
Integrability,// Cycles where backpressure increased because of data dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:55,depend,dependencies,55,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependencies']
Integrability,// Cycles where backpressure increased because of memory dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:57,depend,dependencies,57,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependencies']
Integrability,// Cycles where backpressure increased because of register dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:59,depend,dependencies,59,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependencies']
Integrability,// Cyclic dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:10,depend,dependence,10,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['depend'],['dependence']
Integrability,"// Cyclic dependencies are disallowed by Clang, but we still; // shouldn't run into an infinite loop, so mark it as processed now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:10,depend,dependencies,10,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['depend'],['dependencies']
Integrability,"// Cyclical dependency interception",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:12,depend,dependency,12,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['dependency']
Integrability,"// Cyclical dependency, abort",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:12,depend,dependency,12,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['depend'],['dependency']
Integrability,"// D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:248,integrat,integrate,248,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integrate']
Integrability,"// DND protocol version",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:7,protocol,protocol,7,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['protocol'],['protocol']
Integrability,"// Darwin has its own CSR_AArch64_AAPCS_SaveList, which means most CSR save; // lists depending on that will need to have their Darwin variant as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:86,depend,depending,86,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,1,['depend'],['depending']
Integrability,// Darwin prefers to have references to thread local variables to go through; // the thread wrapper instead of directly referencing the backing variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:92,wrap,wrapper,92,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['wrap'],['wrapper']
Integrability,// Darwin uses the new __isPlatformVersionAtLeast family of routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:60,rout,routines,60,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['rout'],['routines']
Integrability,"// Darwin's default stack size for threads except the main one is only 512KB,; // which is not enough for some/many normal LLVM compilations. This implements; // the same interface as std::thread but requests the same stack size as the; // main thread (8MB) before creation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Threading.cpp:171,interface,interface,171,interpreter/llvm-project/llvm/lib/Support/Threading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Threading.cpp,1,['interface'],['interface']
Integrability,"// Data-dependency-related information. Per-instruction depth and height; // are computed from data dependencies in the current trace, using; // itinerary data.; /// Instruction depths have been computed. This implies hasValidDepth().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:8,depend,dependency-related,8,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,2,['depend'],"['dependencies', 'dependency-related']"
Integrability,"// DataMemberInfo interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:18,interface,interface,18,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,2,['interface'],['interface']
Integrability,// David Eberly's algorithm for finding a bridge between hole and outer polygon,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:42,bridg,bridge,42,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['bridg'],['bridge']
Integrability,// Dead dependent mem-op disguise as a load evaluating the same value; // as the load in question.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:8,depend,dependent,8,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['depend'],['dependent']
Integrability,"// Deal with the IntegrateBins argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:17,Integrat,IntegrateBins,17,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['Integrat'],['IntegrateBins']
Integrability,// Debug intrinsics don't (and can't) cause dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:44,depend,dependencies,44,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['dependencies']
Integrability,// Debug intrinsics don't cause dependences and should not affect Limit,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:32,depend,dependences,32,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['dependences']
Integrability,// Debuggers that implement the GDB JIT interface put a special breakpoint in; // this function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp:40,interface,interface,40,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp,1,['interface'],['interface']
Integrability,"// Decide each argument type. The total number of registers can be used for; // arguments depends on several factors:; // 1. Arguments of varargs functions are passed on the stack. This applies; // even to the named arguments. So no register can be used.; // 2. Total 18 registers can be used on avr and 6 ones on avrtiny.; // 3. If the return type is a struct with too large size, two registers; // (out of 18/6) will be cost as an implicit pointer argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp:90,depend,depends,90,interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,1,['depend'],['depends']
Integrability,"// Decide on where to insert the instruction that we are pulling out.; // Debug instructions always go before the bundle, but the placement of; // INLINE_ASM depends on potential dependencies. By default, try to; // put it before the bundle, but if the asm writes to a register that; // other instructions in the bundle read, then we need to place it; // after the bundle (to preserve the bundle semantics).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:158,depend,depends,158,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,2,['depend'],"['dependencies', 'depends']"
Integrability,// Decide whether to use verbose asm. Verbose assembly is the default on; // toolchains which have the integrated assembler on by default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:103,integrat,integrated,103,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['integrat'],['integrated']
Integrability,// Decision to cluster mem ops is taken based on target dependent logic,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:56,depend,dependent,56,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['depend'],['dependent']
Integrability,// Decl attributes - this routine is the top level dispatcher.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:26,rout,routine,26,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['rout'],['routine']
Integrability,// Declaration of class/meta-class metadata; /* struct _objc_class {; struct _objc_class *isa; // or const char *root_class_name when metadata; const char *super_class_name;; char *name;; long version;; long info;; long instance_size;; struct _objc_ivar_list *ivars;; struct _objc_method_list *methods;; struct objc_cache *cache;; struct objc_protocol_list *protocols;; const char *ivar_layout;; struct _objc_class_ext *ext;; };; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:358,protocol,protocols,358,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['protocol'],['protocols']
Integrability,// Declare HelpPrinter wrappers that will decide whether or not to invoke; // a categorizing help printer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:23,wrap,wrappers,23,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['wrap'],['wrappers']
Integrability,"// Declare is not silent (yet?), so add an explicit error message; // to indicate the consequence of the syntax errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:58,message,message,58,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['message'],['message']
Integrability,"// Declare template specialization for llvm::MachineFunction. Do not implement; // here, because we cannot include MachineFunction header here, that would break; // dependency rules.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ProfileSummaryInfo.h:165,depend,dependency,165,interpreter/llvm-project/llvm/include/llvm/Analysis/ProfileSummaryInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ProfileSummaryInfo.h,1,['depend'],['dependency']
Integrability,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:36,integrat,integrate,36,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,3,['integrat'],['integrate']
Integrability,"// Declare that we can analytically integrate all requested observables; // (basically, we will take care of the problem, and delegate where required); //assert(normSet==0);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:36,integrat,integrate,36,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['integrat'],['integrate']
Integrability,// Decrement DependentLatency based on the next cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:13,Depend,DependentLatency,13,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Depend'],['DependentLatency']
Integrability,// Deduce any 'auto's in the loop variable as 'DependentTy'. We'll fill; // them in properly when we instantiate the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:47,Depend,DependentTy,47,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['Depend'],['DependentTy']
Integrability,// Deduction only needs to be done for dependent types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:39,depend,dependent,39,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['dependent']
Integrability,"// Def(U) can't be returned here because it is non-local. If local; // dependency won't be found then return nonLocal counting that the; // user will call getNonLocalPointerDependency, which will return cached; // result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:71,depend,dependency,71,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,1,['depend'],['dependency']
Integrability,"// Default Constructor. If tolerances are not given use default values from ROOT::Math::IntegratorOneDimOptions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GaussIntegrator.cxx:88,Integrat,IntegratorOneDimOptions,88,math/mathcore/src/GaussIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/GaussIntegrator.cxx,1,['Integrat'],['IntegratorOneDimOptions']
Integrability,// Default arguments cannot be substituted until the declaration context; // for the associated function or lambda capture class is available.; // This is necessary for cases like the following where construction of; // the lambda capture class for the outer lambda is dependent on the; // parameter types but where the default argument is dependent on the; // outer lambda's declaration context.; // template <typename T>; // auto f() {; // return [](T = []{ return T{}; }()) { return 0; };; // },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:269,depend,dependent,269,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,2,['depend'],['dependent']
Integrability,"// Default constructor implementation depending on minimizer type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/Minuit2Minimizer.cxx:38,depend,depending,38,math/minuit2/src/Minuit2Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/Minuit2Minimizer.cxx,1,['depend'],['depending']
Integrability,"// Default parser implementation - This implementation depends on having a; // mapping of recognized options to values of some sort. In addition to this,; // each entry in the mapping also tracks a help message that is printed with the; // command line option for -help. Because this is a simple mapping parser, the; // data type can be any unsupported type.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:55,depend,depends,55,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,"['depend', 'message']","['depends', 'message']"
Integrability,"// Default prefix to be prepended to messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h:37,message,messages,37,net/net/inc/TApplicationServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h,3,['message'],['messages']
Integrability,"// Default prefix to be prepended to messages; ////////////////////////////////////////////////////////////////////////////////; /// Execute 'cmd' in a pipe and handle output messages from the related file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:37,message,messages,37,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['message'],['messages']
Integrability,"// Default unit of length (depends on ROOT unit system)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h:27,depend,depends,27,geom/gdml/inc/TGDMLWrite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/inc/TGDMLWrite.h,1,['depend'],['depends']
Integrability,// Default value for DependentAddressSpaceTypes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:21,Depend,DependentAddressSpaceTypes,21,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Depend'],['DependentAddressSpaceTypes']
Integrability,// Defer all checking for special members of a dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:47,depend,dependent,47,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// Defer checking functions that are defaulted in a dependent context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:52,depend,dependent,52,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['dependent']
Integrability,// Defer emitting a diagnostic for bridge-related casts; that will be; // handled by CheckObjCBridgeRelatedConversions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:35,bridg,bridge-related,35,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['bridg'],['bridge-related']
Integrability,// Defer the lookup for dependent types. The results will be passed through; // UnresolvedMapper on instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:24,depend,dependent,24,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['depend'],['dependent']
Integrability,// Deferred Handling of non-zero offsets. This makes the error messages nicer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp:63,message,messages,63,interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/AsmParser/RISCVAsmParser.cpp,1,['message'],['messages']
Integrability,// Define Objective-C Interfaces or class types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h:22,Interface,Interfaces,22,interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,1,['Interface'],['Interfaces']
Integrability,"// Define ROOFIT_MEMORY_SAFE_INTERFACES to change RooFit interfaces to be; // memory safe.; // #define ROOFIT_MEMORY_SAFE_INTERFACES",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/Config.h:57,interface,interfaces,57,roofit/roofitcore/inc/RooFit/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/Config.h,1,['interface'],['interfaces']
Integrability,"// Define __CUDACC__ early as libstdc++ standard headers with GNU extensions; // enabled depend on it to avoid using __float128, which is unsupported in; // CUDA.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:89,depend,depend,89,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['depend'],['depend']
Integrability,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,integrat,integrator,28,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,3,['integrat'],"['integration', 'integrator']"
Integrability,"// Define the PDFs such that they explicitly depend on only one of the; // observables each. This means the RooAddPdf needs to figure out itself; // that in the other dimensions (y for uniformX and x for uniformY), the; // distribution is implicitly uniform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:45,depend,depend,45,roofit/roofitcore/test/testRooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx,1,['depend'],['depend']
Integrability,"// Define the emscripten name for return address helper.; // TODO: when implementing other Wasm backends, make this generic or only do; // this on emscripten depending on what they end up doing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:158,depend,depending,158,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['depend'],['depending']
Integrability,// Define type kmp_depend_info[<Dependencies.size()>];; // For depobj reserve one extra element to store the number of elements.; // It is required to handle depobj(x) update(in) construct.; // kmp_depend_info[<Dependencies.size()>] deps;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:32,Depend,Dependencies,32,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,2,['Depend'],['Dependencies']
Integrability,// Define uncategorized/categorized help printers. These printers change their; // behaviour at runtime depending on whether one or more Option categories; // have been declared.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:104,depend,depending,104,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['depend'],['depending']
Integrability,"// Defines Objective-C record types that have assigned methods, properties,; // instance variable (ivars) and protocols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h:110,protocol,protocols,110,interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,1,['protocol'],['protocols']
Integrability,"// Defines an interface used to traverse SExprs. Traversals have been made as; // generic as possible, and are intended to handle any kind of pass over the; // AST, e.g. visitors, copying, non-destructive rewriting, destructive; // (in-place) rewriting, hashing, typing, etc.; //; // Traversals implement the functional notion of a ""fold"" operation on SExprs.; // Each SExpr class provides a traverse method, which does the following:; // * e->traverse(v):; // // compute a result r_i for each subexpression e_i; // for (i = 1..n) r_i = v.traverse(e_i);; // // combine results into a result for e, where X is the class of e; // return v.reduceX(*e, r_1, .. r_n).; //; // A visitor can control the traversal by overriding the following methods:; // * v.traverse(e):; // return v.traverseByCase(e), which returns v.traverseX(e); // * v.traverseX(e): (X is the class of e); // return e->traverse(v).; // * v.reduceX(*e, r_1, .. r_n):; // compute a result for a node of type X; //; // The reduceX methods control the kind of traversal (visitor, copy, etc.).; // They are defined in derived classes.; //; // Class R defines the basic interface types (R_SExpr).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:14,interface,interface,14,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,2,['interface'],['interface']
Integrability,"// Deflate websocket messages over 100kb",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:21,message,messages,21,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['messages']
Integrability,"// Deflating the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,message,message,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,// Delay processing for now. TODO: there are lots of dependent; // types we can conclusively prove aren't void.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:53,depend,dependent,53,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['depend'],['dependent']
Integrability,// Delay type-checking for type-dependent expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:32,depend,dependent,32,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['depend'],['dependent']
Integrability,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,integrat,integrator-specific,14,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator-specific']
Integrability,"// Deleting a null pointer would have no effect, but it's not permitted by; // std::allocator<T>::deallocate's contract.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:111,contract,contract,111,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['contract'],['contract']
Integrability,"// Delta too big, no dependence",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:21,depend,dependence,21,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Denormal handling is guarded by different attributes depending on the; // type (denormal-fp-math vs denormal-fp-math-f32), take note of halfs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp:56,depend,depending,56,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXTargetTransformInfo.cpp,1,['depend'],['depending']
Integrability,// Depend on LiveIntervals and perform some optimizations on it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp:3,Depend,Depend,3,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,1,['Depend'],['Depend']
Integrability,"// Dependence that is propagated semantically, even in cases where the; // type doesn't syntactically appear. This currently excludes only; // UnexpandedPack. Even though Instantiation dependence is also notionally; // syntactic, we also want to propagate it semantically because anything; // that semantically depends on an instantiation-dependent entity should; // always be instantiated when that instantiation-dependent entity is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:3,Depend,Dependence,3,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,5,"['Depend', 'depend']","['Dependence', 'dependence', 'dependent', 'depends']"
Integrability,"// Dependence that is propagated syntactically, regardless of semantics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:3,Depend,Dependence,3,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,1,['Depend'],['Dependence']
Integrability,// Dependencies,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/GlobalModuleIndex.cpp:3,Depend,Dependencies,3,interpreter/llvm-project/clang/lib/Serialization/GlobalModuleIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/GlobalModuleIndex.cpp,2,['Depend'],['Dependencies']
Integrability,// Dependency check for MI with instructions in CurrentPacketMIs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,1,['Depend'],['Dependency']
Integrability,"// Dependency cmd list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:3,Depend,Dependency,3,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['Depend'],['Dependency']
Integrability,"// Dependency edge descriptor.; //; // It specifies the dependency type, as well as the edge cost in cycles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:3,Depend,Dependency,3,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,2,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,// Dependency generation really does want to go all the way to the; // file entry for a source location to find out what is depended on.; // We do not want #line markers to affect dependency generation!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp:3,Depend,Dependency,3,interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,6,"['Depend', 'depend']","['Dependency', 'depended', 'dependency']"
Integrability,"// Dependency in tree of the reduction ops - drop this attempt, try; // later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Depend'],['Dependency']
Integrability,// Dependency is not read-before-write,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependency']
Integrability,"// Dependency is not read-before-write, write-before-read or; // write-before-write",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependency']
Integrability,// Dependency is not write-before-read,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependency']
Integrability,// Dependency is not write-before-read or write-before-write,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependency']
Integrability,// Dependency is not write-before-write or read-before-write,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependency,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependency']
Integrability,// Dependency name,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h:3,Depend,Dependency,3,interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,1,['Depend'],['Dependency']
Integrability,// Dependent,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,1,['Depend'],['Dependent']
Integrability,// Dependent alignment cannot be resolved -> bail out.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['Depend'],['Dependent']
Integrability,"// Dependent command found, add to required list if not already processed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:3,Depend,Dependent,3,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['Depend'],['Dependent']
Integrability,"// Dependent of the caller of this function, a gather instruction will; // either have opcode Instruction::Load or be a call to the masked_gather; // intrinsic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp:3,Depend,Dependent,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,1,['Depend'],['Dependent']
Integrability,"// Dependent on a template parameter, we do not know what it is yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx:3,Depend,Dependent,3,core/metacling/src/TClingTypeInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.cxx,1,['Depend'],['Dependent']
Integrability,// Dependent on name to dedup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILOpBuilder.cpp:3,Depend,Dependent,3,interpreter/llvm-project/llvm/lib/Target/DirectX/DXILOpBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILOpBuilder.cpp,1,['Depend'],['Dependent']
Integrability,"// Dependent on peeling being performed on the first loop, and; // assuming all other conditions for fusion return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:3,Depend,Dependent,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['Depend'],['Dependent']
Integrability,"// Dependent or parameter?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Depend,Dependent,3,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['Depend'],['Dependent']
Integrability,"// Dependent scope, or an unexpanded pack",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['Depend'],['Dependent']
Integrability,// Dependent template specializations can instantiate to pointer; // types unless they're known to be specializations of a class; // template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['Depend'],['Dependent']
Integrability,"// Dependent type.; // We do not accept these.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:3,Depend,Dependent,3,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['Depend'],['Dependent']
Integrability,// Dependent types that could instantiate to a pointer type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['Depend'],['Dependent']
Integrability,// Dependent types that could instantiate to pointer types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['Depend'],['Dependent']
Integrability,// Dependent types will be checked at instantiation time.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:3,Depend,Dependent,3,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Depend'],['Dependent']
Integrability,// DependentScopeDeclRefExpr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:3,Depend,DependentScopeDeclRefExpr,3,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,2,['Depend'],['DependentScopeDeclRefExpr']
Integrability,// DependentScopeDeclRefExpr::Create requires a valid QualifierLoc,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:3,Depend,DependentScopeDeclRefExpr,3,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['Depend'],['DependentScopeDeclRefExpr']
Integrability,"// DependentTemplateTypes exist within template declarations and; // definitions. Therefore we shouldn't encounter them at the end of; // a translation unit. If we do, the caller has made an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp:3,Depend,DependentTemplateTypes,3,interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/QualTypeNames.cpp,1,['Depend'],['DependentTemplateTypes']
Integrability,// Dependently-scoped template types are nested if they have a prefix.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:3,Depend,Dependently-scoped,3,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['Depend'],['Dependently-scoped']
Integrability,"// Dependently-sized array types that do not have a specified number; // of elements will have their sizes deduced from a dependent; // initializer. We do no canonicalization here at all, which is okay; // because they can't be used in most locations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:3,Depend,Dependently-sized,3,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,"['Depend', 'depend']","['Dependently-sized', 'dependent']"
Integrability,"// Dependents to be normalized for the PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Depend,Dependents,3,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['Depend'],['Dependents']
Integrability,"// Depending of course on the number of dimensions the object; // has. These commands will raise an error message if the user; // has not defined the function properly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:3,Depend,Depending,3,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,2,"['Depend', 'message']","['Depending', 'message']"
Integrability,"// Depending on available argument GPRS, f64 may be passed in a pair of; // GPRs, split between a GPR and the stack, or passed completely on the; // stack. LowerCall/LowerFormalArguments/LowerReturn must recognise these; // cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['Depend'],['Depending']
Integrability,// Depending on endian return value will be in v0 or v1.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/OrcABISupport.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/OrcABISupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/OrcABISupport.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on how the user typed their code, in particular typedef; // declarations, we may end up with an explicit '::' being; // part of the result string. For consistency, we must remove it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:3,Depend,Depending,3,core/foundation/src/TClassEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the --attribute=filename and --attribute=pathname command; // line options, use the basename or the full pathname as the name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVElement.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the active bits in the immediate Value v, the following; // instruction sequences are emitted:; //; // v == 0 : ADDI; // v[0,12) != 0 && v[12,32) == 0 : ADDI; // v[0,12) == 0 && v[12,32) != 0 : LUI; // v[0,32) != 0 : LUI+ADDI(W)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCTargetDesc/RISCVMatInt.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the addressing mode, this is either a pointer or a vector of; // pointers (that fits into one register)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['Depend'],['Depending']
Integrability,"// Depending on the addressing mode, this is either a single offset or a; // vector of offsets (that fits into one register)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['Depend'],['Depending']
Integrability,"// Depending on the compiler, the variant tag is stored either in a trailing char or in a trailing unsigned int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RField.cxx:3,Depend,Depending,3,tree/ntuple/v7/src/RField.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RField.cxx,1,['Depend'],['Depending']
Integrability,// Depending on the condition we have to either replace the true or the; // false successor of the original branch instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Depend,Depending,3,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the constant, the condition may need to be inverted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the contents of the table, it can be represented in; // different ways.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the dimension of the object, allow the; // visualization of sliders.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:3,Depend,Depending,3,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the function, the integrator precision doesn't reach the; // actual precisiosn parameter, so we give it some headroom.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:3,Depend,Depending,3,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,2,"['Depend', 'integrat']","['Depending', 'integrator']"
Integrability,// Depending on the initial ELFT and OutputFormat we need a different Writer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the logical op, inner select might be in different hand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the metadata, the format can be either yaml or yaml-strtab,; // regardless of the input argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/RemarkParser.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Remarks/RemarkParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Remarks/RemarkParser.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the number of groups for a particular value, it might be; // better to rotate, mask explicitly (using andi/andis), and then or the; // result. Select this part of the result first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the operand, we have a fixed address.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVLocation.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the platform the struct utmp (or utmpx) has either ut_name or ut_user; // which are semantically equivalent. Instead of using preprocessor magic,; // which is bothersome for cxx modules use SFINAE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Depend,Depending,3,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the position of type in the order you need; // To iterate forward or backward through the order list as qualifier; // can push through each other.; // The Order list must define the position of ""type"" to signify",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp:3,Depend,Depending,3,interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the selected library, set the state of the rest; // of the buttons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:3,Depend,Depending,3,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the setting of the private_element_size field in the; // resource descriptor, we can only make private accesses up to a certain; // size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the type of backend, it might not make any sense to lookup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:3,Depend,Depending,3,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['Depend'],['Depending']
Integrability,"// Depending on the type of parameter, the print includes different; // information: type, value or reference to a template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVType.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVType.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on the used address space and instructions, some immediate offsets; // are allowed and some are not.; // Pre-GFX12, flat instruction offsets can only be non-negative, global and; // scratch instruction offsets can also be negative. On GFX12, offsets can be; // negative for all variants.; //; // There are several bugs related to these offsets:; // On gfx10.1, flat instructions that go into the global address space cannot; // use an offset.; //; // For scratch instructions, the address can be either an SGPR or a VGPR.; // The following offsets can be used, depending on the architecture (x means; // cannot be used):; // +----------------------------+------+------+; // | Address-Mode | SGPR | VGPR |; // +----------------------------+------+------+; // | gfx9 | | |; // | negative, 4-aligned offset | x | ok |; // | negative, unaligned offset | x | ok |; // +----------------------------+------+------+; // | gfx10 | | |; // | negative, 4-aligned offset | ok | ok |; // | negative, unaligned offset | ok | x |; // +----------------------------+------+------+; // | gfx10.3 | | |; // | negative, 4-aligned offset | ok | ok |; // | negative, unaligned offset | ok | ok |; // +----------------------------+------+------+; //; // This function ignores the addressing mode, so if an offset cannot be used in; // one addressing mode, it is considered illegal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,2,"['Depend', 'depend']","['Depending', 'depending']"
Integrability,"// Depending on what was tainted at pre-visit, we determined a set of; // arguments which should be tainted after the function returns. These are; // stored in the state as TaintArgsOnPostVisit set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:3,Depend,Depending,3,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['Depend'],['Depending']
Integrability,"// Depending on where the source registers came from, the generic code may; // have decided to split the inputs already or not. If not, we still need to; // extract the values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,2,['Depend'],['Depending']
Integrability,"// Depending on which version of the ELF ABI is in use, we need to; // generate one of two variants of the stub. They both start with; // the same sequence to load the target address into r12.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp:3,Depend,Depending,3,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,1,['Depend'],['Depending']
Integrability,// Depends on a template parameter or an error in some way.; // Validity depends on how the template is instantiated or the error is; // resolved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:3,Depend,Depends,3,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,2,"['Depend', 'depend']","['Depends', 'depends']"
Integrability,"// Depends on mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:3,Depend,Depends,3,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,1,['Depend'],['Depends']
Integrability,"// Depends on template context, or an error.; // The type/value distinction is only meaningful for expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:3,Depend,Depends,3,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,1,['Depend'],['Depends']
Integrability,// Depends only on EXEC,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp:3,Depend,Depends,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreEmitPeephole.cpp,1,['Depend'],['Depends']
Integrability,"// Depends only on libCore.so but libCore.so is loaded and thus missing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,Depend,Depends,3,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['Depend'],['Depends']
Integrability,// Depends what it gets converted into if the type is weird.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:3,Depend,Depends,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['Depend'],['Depends']
Integrability,"// Derivative of a free function wrapped in an IGenFunction; // Works when compiled c++, compiled ACLiC, does not work when interpreted by CINT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testDerivation.cxx:33,wrap,wrapped,33,math/mathmore/test/testDerivation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testDerivation.cxx,1,['wrap'],['wrapped']
Integrability,"// Derivative of a multidim TF1 function; // #ifdef LATER; // TF2 * f2d = new TF2(""f2d"",""x*x + y*y"",-10,10,-10,10);; // // find gradient at x={1,1}; // double vx[2] = {1.,2.};; // ROOT::Math::WrappedTF1 fx(*f2d);; // std::cout << ""Derivative of a f(x,y) = x^2 + y^2 at x = 1,y=2"" << std::endl;; // std::cout << ""df/dx = "" << der->EvalCentral(fx,1.) << std::endl;; // WrappedFunc fy(*f2d,0,vx);; // std::cout << ""df/dy = "" << der->EvalCentral(fy,2.) << std::endl;; // #endif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testDerivation.cxx:367,Wrap,WrappedFunc,367,math/mathmore/test/testDerivation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testDerivation.cxx,1,['Wrap'],['WrappedFunc']
Integrability,"// Descend recursively, but not into PHI nodes outside the current loop.; // It's important to see the entire expression outside the loop to get; // choices that depend on addressing mode use right, although we won't; // consider references outside the loop in all cases.; // If User is already in Processed, we don't want to recurse into it again,; // but do want to record a second reference in the same instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp:162,depend,depend,162,interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp,1,['depend'],['depend']
Integrability,"// Desig - This is initialized when we see our first designator. We may have; // an objc message send with no designator, so we don't want to create this; // eagerly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp:89,message,message,89,interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseInit.cpp,1,['message'],['message']
Integrability,"// Determine all instructions upon which any unpipelineable instruction depends; // and ensure that they are in stage 0. If unable to do so, return false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:72,depend,depends,72,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['depends']
Integrability,// Determine an appropriate location to create the bitcast for the return; // value. The location depends on if we have a call or invoke instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallPromotionUtils.cpp:98,depend,depends,98,interpreter/llvm-project/llvm/lib/Transforms/Utils/CallPromotionUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallPromotionUtils.cpp,1,['depend'],['depends']
Integrability,"// Determine how to lower the scalar epilogue, which depends on 1) optimising; // for minimum code-size, 2) predicate compiler options, 3) loop hints forcing; // predication, and 4) a TTI hook that analyses whether the loop is suitable; // for predication.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:53,depend,depends,53,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['depends']
Integrability,"// Determine if a instruction is cycle-free. That means the values in the; // instruction don't depend on any expressions that can change value as a result; // of the instruction. For example, a non-cycle free instruction would be v =; // phi(0, v+1).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:96,depend,depend,96,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['depend'],['depend']
Integrability,// Determine if references to thread_local global variables can be made; // directly or require access through a thread wrapper function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h:120,wrap,wrapper,120,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,1,['wrap'],['wrapper']
Integrability,"// Determine if set of dependens of new p.d.f is different from old p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:23,depend,dependens,23,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['depend'],['dependens']
Integrability,"// Determine if the correction needs to be applied: The criteria are; // different depending on whether a sine or cosine was the determinor:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx:83,depend,depending,83,math/genvector/src/3DConversions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/src/3DConversions.cxx,2,['depend'],['depending']
Integrability,// Determine if this is a physical register dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:44,depend,dependency,44,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['depend'],['dependency']
Integrability,"// Determine if we're within a context where we know that the lambda will; // be dependent, because there are template parameters in scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:81,depend,dependent,81,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['depend'],['dependent']
Integrability,// Determine more-or-less what the proposed schedule (reversed) is going to; // be; it might not be quite the same because the within-cycle ordering; // created by SMSchedule depends upon changes to help with address offsets and; // the like.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:175,depend,depends,175,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['depends']
Integrability,"// Determine normalization factor depending on type of input function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:34,depend,depending,34,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,1,['depend'],['depending']
Integrability,// Determine the approximate size of the message bubble in em.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:41,message,message,41,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['message'],['message']
Integrability,// Determine the class that we're sending the message to.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:46,message,message,46,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['message'],['message']
Integrability,// Determine whether our parent context depends on any of the template; // arguments we're currently substituting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:40,depend,depends,40,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['depend'],['depends']
Integrability,"// Determine whether the enum is simple, i.e. does not have a semicolon or; // constants with class bodies. Simple enums can be formatted like braced; // lists, contracted to a single line, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp:161,contract,contracted,161,interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineParser.cpp,1,['contract'],['contracted']
Integrability,"// Determine whether this is a constant scalar. In the event that the; // value is dependent (and thus cannot be evaluated by the constant; // evaluator), skip the evaluation. This will then diagnose once the; // expression is instantiated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:83,depend,dependent,83,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// Determine whether this is a dependent call inside a C++ template,; // in which case we won't do any semantic analysis now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:31,depend,dependent,31,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Determine whether this name might be a candidate for; // argument-dependent lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:69,depend,dependent,69,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Determine whether this type is an Interface Like type for; // __interface inheritance purposes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:37,Interface,Interface,37,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['Interface'],['Interface']
Integrability,"// Determine whether to split a scope depending on the sets of the branch; // condition values of the previous region and the current region. We split; // (return true) it if 1) the condition values of the inner/lower scope can't be; // hoisted up to the outer/upper scope, or 2) the two sets of the condition; // values have an empty intersection (because the combined branch conditions; // won't probably lead to a simpler combined condition).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:38,depend,depending,38,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['depend'],['depending']
Integrability,// Determine which personality routine we are using for this funclet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp:31,rout,routine,31,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/WinException.cpp,1,['rout'],['routine']
Integrability,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1007,message,messages,1007,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx,1,['message'],['messages']
Integrability,// Device library provides fast low precision and slow full-recision; // implementations for some functions. Which one gets selected depends on; // __CLANG_GPU_APPROX_TRANSCENDENTALS__ which gets defined by clang if; // -ffast-math or -fgpu-approx-transcendentals are in effect.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_hip_math.h:133,depend,depends,133,interpreter/llvm-project/clang/lib/Headers/__clang_hip_math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_hip_math.h,1,['depend'],['depends']
Integrability,// Device-side CUDA system calls.; // http://docs.nvidia.com/cuda/ptx-writers-guide-to-interoperability/index.html#system-calls; // We need these declarations and wrappers for device-side; // malloc/free/printf calls to work without relying on; // -fcuda-disable-target-call-checks option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:87,interoperab,interoperability,87,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,2,"['interoperab', 'wrap']","['interoperability', 'wrappers']"
Integrability,"// Diag message shows element size in bits and in ""bytes"" (platform-; // dependent CharUnits)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:8,message,message,8,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"// Diagnose a missing typename if this resolved unambiguously to a type in; // a dependent context. If we can recover with a type, downgrade this to; // a warning in Microsoft compatibility mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:81,depend,dependent,81,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Diagnose availability in the context of the @interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:48,interface,interface,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,// Diagnose bad cases where we step over interface counts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:41,interface,interface,41,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['interface'],['interface']
Integrability,// Diagnose feature dependencies for OpenCL C 3.0. Return false if target; // doesn't follow these requirements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenCLOptions.h:20,depend,dependencies,20,interpreter/llvm-project/clang/include/clang/Basic/OpenCLOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenCLOptions.h,1,['depend'],['dependencies']
Integrability,"// Diagnose self-import before attempting a load.; // [module.import]/9; // A module implementation unit of a module M that is not a module partition; // shall not contain a module-import-declaration nominating M.; // (for an implementation, the module interface is imported implicitly,; // but that's handled in the module decl code).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:253,interface,interface,253,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,1,['interface'],['interface']
Integrability,"// Diagnose shadowing of decls in the `std` namespace (see ROOT-5971).; // For unnamed macros, the input is ingested in a single `Interpreter::process()`; // call. Do not emit the warning in that case, as all references are local; // to the wrapper function and this diagnostic might be misleading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:241,wrap,wrapper,241,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,1,['wrap'],['wrapper']
Integrability,// Diagnose the mix between type args and protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:42,protocol,protocols,42,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['protocol'],['protocols']
Integrability,"// Diagnose this as unqualified lookup into a dependent base class. If 'this'; // is available, suggest inserting 'this->' as a fixit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:46,depend,dependent,46,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// Diagnose unused local variables with dependent types, where the diagnostic; // will have been deferred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:40,depend,dependent,40,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['depend'],['dependent']
Integrability,// Diagnose use of bridge casts in non-arc mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:19,bridg,bridge,19,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,1,['bridg'],['bridge']
Integrability,// Diagnose when integrated-objemitter options are not supported by this; // toolchain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp:17,integrat,integrated-objemitter,17,interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChain.cpp,1,['integrat'],['integrated-objemitter']
Integrability,// Diagnostic messages should have been printed by the handler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp:14,message,messages,14,interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto/llvm-lto.cpp,3,['message'],['messages']
Integrability,// DiagnosticConsumer interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp:22,interface,interface,22,interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,1,['interface'],['interface']
Integrability,// Did an autorelease message get sent?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp:22,message,message,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountDiagnostics.cpp,1,['message'],['message']
Integrability,"// Did not use simplification result, no need to add the extra; // dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:67,depend,dependency,67,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['depend'],['dependency']
Integrability,// Did we discover that the shuffle does not actually depend on operands?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:54,depend,depend,54,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['depend'],['depend']
Integrability,// Did we find a protocol?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:17,protocol,protocol,17,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// Didn't find a template name, and the lookup wasn't dependent.; // Do the lookup again to determine if this is a ""nothing found"" case or; // a ""not a template"" case. FIXME: Refactor isTemplateName so we don't; // need to do this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:54,depend,dependent,54,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,// Didn't find one yet - look through protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:38,protocol,protocols,38,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// Different targets may support a different maximum width for the _BitInt; // type, depending on what operations are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:85,depend,depending,85,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['depend'],['depending']
Integrability,"// Differentially encoded register and regunit lists allow for better; // compression on regular register banks. The sequence is computed from the; // differential list as:; //; // out[0] = InitVal;; // out[n+1] = out[n] + diff[n]; // n = 0, 1, ...; //; // The initial value depends on the specific list. The list is terminated by a; // 0 differential which means we can't encode repeated elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp:275,depend,depends,275,interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,1,['depend'],['depends']
Integrability,// Differing dependent expressions are incompatible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:13,depend,dependent,13,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['depend'],['dependent']
Integrability,"// Directly allow to 'import <string-literal>' to support protocol buffer; // definitions (github.com/google/protobuf) or missing ""#"" (either way we; // should not break the line).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:58,protocol,protocol,58,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['protocol'],['protocol']
Integrability,"// Directly invoke the MC-layer routine for real (i.e., non-pseudo); // instructions (fast case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:32,rout,routine,32,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['rout'],['routine']
Integrability,"// Disable IntegrateBins forcefully",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:11,Integrat,IntegrateBins,11,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['Integrat'],['IntegrateBins']
Integrability,"// Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,integrat,integration,20,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Integrability,"// Disable function (component) caching if integration is requested as the function; // will be evaluated at coordinates other than the points in the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:43,integrat,integration,43,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['integrat'],['integration']
Integrability,// Disable gcc's warning in this constructor as it generates an enormous amount; // of messages. Anyone using ArrayRef should already be aware of the fact that; // it does not do lifetime extension.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h:87,message,messages,87,interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h,1,['message'],['messages']
Integrability,// Disable heuristic that tries to fetch nodes from long dependency chains; // first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:57,depend,dependency,57,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['depend'],['dependency']
Integrability,"// Disable line numbers in error messages and warnings, they don't add much; // to the output and are rather confusing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:33,message,messages,33,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['message'],['messages']
Integrability,"// Disable outline-atomics on AArch64; the routines __aarch64_* are defined; // in the static library libgcc.a and not necessarily included in libCling; // or otherwise present in the process, so the interpreter has a hard time; // finding them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:43,rout,routines,43,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['rout'],['routines']
Integrability,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:77,integrat,integrate,77,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,2,['integrat'],['integrate']
Integrability,"// Disable the given architecture extension, and any other extensions which; // depend on it. Does not change the base architecture, or follow; // dependencies between features which are only related by required; // arcitecture versions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:80,depend,depend,80,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,2,['depend'],"['depend', 'dependencies']"
Integrability,// Disable the nsw and nuw flags here: We can no longer guarantee that; // we won't wrap after simplification. Removing the nsw/nuw flags is; // legal here because the top bit is not demanded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp:84,wrap,wrap,84,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSimplifyDemanded.cpp,1,['wrap'],['wrap']
Integrability,// Disable the nsw and nuw flags. We can no longer guarantee that we; // won't wrap after simplification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:79,wrap,wrap,79,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,4,['wrap'],['wrap']
Integrability,"// Disable warning C4251: needs to have dll-interface to be used by clients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:44,interface,interface,44,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,1,['interface'],['interface']
Integrability,"// Disable warning C4275: non dll-interface class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:34,interface,interface,34,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,1,['interface'],['interface']
Integrability,// Disable wrap for VALIGN.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:11,wrap,wrap,11,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['wrap'],['wrap']
Integrability,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:84,wrap,wrapper,84,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,1,['wrap'],['wrapper']
Integrability,"// Disabled until CallFunc is informed about unloading, and can; // re-generate the wrapper (if the decl is still available). See; // https://github.com/root-project/root/issues/10898; // We still have to release the allocations which resets their addresses; // to FinalizedAlloc::InvalidAddr, or the assertion in ~FinalizedAlloc; // will be unhappy...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:84,wrap,wrapper,84,interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp,1,['wrap'],['wrapper']
Integrability,"// Disallow jumps into the protected statement of an @synchronized, but; // allow jumps into the object expression it protects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp:54,synchroniz,synchronized,54,interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,1,['synchroniz'],['synchronized']
Integrability,"// Disallow lax conversions between scalars and ExtVectors (these; // conversions are allowed for other vector types because common headers; // depend on them). Most scalar OP ExtVector cases are handled by the; // splat path anyway, which does what we want (convert, not bitcast).; // What this rules out for ExtVectors is crazy things like char4*float.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:144,depend,depend,144,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['depend']
Integrability,"// Dispatch to each element type for lowering. If we don't have support for; // specific element type shuffles at 512 bits, immediately split them and; // lower them. Each lowering routine of a given type is allowed to assume that; // the requisite ISA extensions for that element type are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:181,rout,routine,181,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['rout'],['routine']
Integrability,// Dispatch to the right handler depending on the file type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp:33,depend,depending,33,interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DwarfLinkerForBinary.cpp,1,['depend'],['depending']
Integrability,"// Display a load error message.; /*; std::stringstream ss;; ss << ""<html><body bgcolor=\""white\"">""; ""<h2>Failed to load URL ""; << failedUrl.ToString().substr(0,100) << "" with error "" << errorText.ToString() << "" ("" << errorCode; << "").</h2></body></html>"";; frame->LoadURL(GetDataURI(ss.str(), ""text/html""));; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/gui_handler.cxx:24,message,message,24,gui/cefdisplay/src/gui_handler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/gui_handler.cxx,1,['message'],['message']
Integrability,"// Display an informational message at the prompt. Acts like; // a pop-up. Used e.g. for tab-completion.; // foreach fails to build the reference in GCC 4.1.; // Iterate manually instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:28,message,message,28,core/textinput/src/textinput/TextInput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp,1,['message'],['message']
Integrability,// Display informational messages on stdout instead of stderr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp:25,message,messages,25,interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExecutionDriver.cpp,1,['message'],['messages']
Integrability,"// Display interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:11,interface,interface,11,core/textinput/src/textinput/TextInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h,1,['interface'],['interface']
Integrability,// Display message for the removed accelerator tables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp:11,message,message,11,interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp,1,['message'],['message']
Integrability,// Display message for the replaced accelerator tables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp:11,message,message,11,interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/DebugInfoLinker.cpp,1,['message'],['message']
Integrability,// Display the button type according to the message with the highest severity; // The priority of the message types are as follows: Error > Warning > Success > Info,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:44,message,message,44,ui5/eve7/controller/ClientLog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js,2,['message'],['message']
Integrability,// Display the number of messages with the highest severity,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:25,message,messages,25,ui5/eve7/controller/ClientLog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js,1,['message'],['messages']
Integrability,// Distance greater than trip count - no dependence,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:41,depend,dependence,41,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,// Distribute loops to allow partial vectorization. I.e. isolate dependences; // into separate loop that would otherwise inhibit vectorization. This is; // currently only performed for loops marked with the metadata; // llvm.loop.distribute=true or when -enable-loop-distribute is specified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:65,depend,dependences,65,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['depend'],['dependences']
Integrability,// Distrust protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/TrustNonnullChecker.cpp:12,protocol,protocols,12,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/TrustNonnullChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/TrustNonnullChecker.cpp,1,['protocol'],['protocols']
Integrability,// Divides Blocks having no bottom up or top down dependencies on Reserved groups.; // The new colors are computed according to the dependencies on the other blocks; // formed with colorAccordingToReservedDependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h:50,depend,dependencies,50,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,2,['depend'],['dependencies']
Integrability,// Divides Blocks with important size.; // Idea of implementation: attribute new colors depending on topdown and; // bottom up links to other blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h:88,depend,depending,88,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,1,['depend'],['depending']
Integrability,// Do an extra pass in the loop to get the loop carried dependencies right.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:56,depend,dependencies,56,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,1,['depend'],['dependencies']
Integrability,// Do an extra pass in the loop to get the loop carried dependencies right.; // FIXME: is this necessary?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:56,depend,dependencies,56,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,1,['depend'],['dependencies']
Integrability,// Do not add self dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp:19,depend,dependencies,19,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Core.cpp,1,['depend'],['dependencies']
Integrability,"// Do not attempt paren list initialization if overload resolution; // resolves to a deleted function .; //; // We may reach this condition if we have a union wrapping a class with; // a non-trivial copy or move constructor and we call one of those two; // constructors. The union is an aggregate, but the matched constructor; // is implicitly deleted, so we need to prevent aggregate initialization; // (otherwise, it'll attempt aggregate initialization by initializing; // the first element with a reference to the union).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:159,wrap,wrapping,159,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['wrap'],['wrapping']
Integrability,// Do not attempt to type-check the default initializer for a; // variable with dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:80,depend,dependent,80,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['dependent']
Integrability,// Do not build a precondition when the condition/initialization is dependent; // to prevent pessimistic early loop exit.; // TODO: this can be improved by calculating min/max values but not sure that; // it will be very effective.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:68,depend,dependent,68,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['depend'],['dependent']
Integrability,// Do not check dependent variables since the ctor/dtor/initializer are not; // determined. Do it after instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:16,depend,dependent,16,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['depend'],['dependent']
Integrability,"// Do not combine convergent calls since they implicitly depend on the set of; // threads that is currently executing, and they might be in different basic; // blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:57,depend,depend,57,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,2,['depend'],['depend']
Integrability,// Do not contract if we're not optimizing the code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:10,contract,contract,10,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['contract'],['contract']
Integrability,"// Do not do anything if we have no global module index.; // FIXME: This is mostly to real with false positives in the TTabCom; // interface for non-modules.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:131,interface,interface,131,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,// Do not emit the block wrapper again if it has been emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp:25,wrap,wrapper,25,interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp,1,['wrap'],['wrapper']
Integrability,// Do not expand store instruction with frame index here because of; // dependency problems. We expand it later in eliminateFrameIndex().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp:72,depend,dependency,72,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,2,['depend'],['dependency']
Integrability,// Do not forward arguments only intended for the linker wrapper.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp:57,wrap,wrapper,57,interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,1,['wrap'],['wrapper']
Integrability,// Do not instrument function pointers to initialization and termination; // routines: dynamic linker will not properly handle redzones.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:77,rout,routines,77,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['rout'],['routines']
Integrability,"// Do not interleave loops with a relatively small known or estimated trip; // count. But we will interleave when InterleaveSmallLoopScalarReduction is; // enabled, and the code has scalar reductions(HasReductions && VF = 1),; // because with the above conditions interleaving can expose ILP and break; // cross iteration dependences for reductions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:322,depend,dependences,322,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['dependences']
Integrability,"// Do not issue ""bridge cast"" diagnostic when implicit casting; // a retainable object to a CF type parameter belonging to an audited; // CF API function. Let caller issue a normal type mismatched diagnostic; // instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp:17,bridg,bridge,17,interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprObjC.cpp,1,['bridg'],['bridge']
Integrability,// Do not mark dependents more then once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:15,depend,dependents,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp,1,['depend'],['dependents']
Integrability,// Do not migrate to couple of bridge transfer casts which; // cancel each other out. Leave it unchanged so error gets user; // attention instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp:31,bridg,bridge,31,interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp,1,['bridg'],['bridge']
Integrability,// Do not need to add a dependency if there is no data; // dependency and all instructions from this group have been; // issued already.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:24,depend,dependency,24,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,2,['depend'],['dependency']
Integrability,"// Do not print a second error message here.; // Error(""ReadBuffer"", ""Memory allocation failed!\n"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:31,message,message,31,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['message'],['message']
Integrability,"// Do not print a second error message here.; //Error(""ReadBuffer"", ""Memory allocation failed!\n"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx:31,message,message,31,io/io/src/TStreamerInfoReadBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx,1,['message'],['message']
Integrability,// Do not print the range when the last register is lower than the first.; // Because it is a wrap-around register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64InstPrinter.cpp:94,wrap,wrap-around,94,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64InstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64InstPrinter.cpp,1,['wrap'],['wrap-around']
Integrability,"// Do not proliferate #includes here, require clients to #include their; // dependencies.; // Casting.h has complex templates that cannot be easily forward declared.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LLVM.h:76,depend,dependencies,76,interpreter/llvm-project/clang/include/clang/Basic/LLVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LLVM.h,1,['depend'],['dependencies']
Integrability,// Do not promote dependent variables since the cotr/dtor/initializer are; // not determined. Do it after instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:18,depend,dependent,18,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['depend'],['dependent']
Integrability,"// Do not re-order the CONSTANT_BUFFER_* enums. Several places depend on; // this order to be able to dynamically index a constant buffer, for; // example:; //; // ConstantBufferAS = CONSTANT_BUFFER_0 + CBIdx",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUAddrSpace.h:63,depend,depend,63,interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUAddrSpace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUAddrSpace.h,1,['depend'],['depend']
Integrability,// Do not register a dependence on an attribute with an invalid state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:21,depend,dependence,21,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependence']
Integrability,"// Do not select dependent types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx:17,depend,dependent,17,core/dictgen/src/Scanner.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/Scanner.cxx,1,['depend'],['dependent']
Integrability,// Do not synthesize the protocol more than once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:25,protocol,protocol,25,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['protocol'],['protocol']
Integrability,"// Do not use GUIDs, since they depend on the source path. Moving the; // source file to a different directory could cause different GUID; // values for a pair of given symbols. These symbols could then compare; // ""less"" in one directory, but ""greater"" in another.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:32,depend,depend,32,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['depend'],['depend']
Integrability,// Do not use resize() + shrink_to_fit() to free memory occupied by dies.; // shrink_to_fit() is a *non-binding* request to reduce capacity() to size().; // It depends on the implementation whether the request is fulfilled.; // Create a new vector with a small capacity and assign it to the DieArray to; // have previous contents freed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp:160,depend,depends,160,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFUnit.cpp,1,['depend'],['depends']
Integrability,// Do not use unbundler if the Host does not depend on device action.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:45,depend,depend,45,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['depend']
Integrability,// Do nothing - we only emit referenced protocols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:40,protocol,protocols,40,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['protocol'],['protocols']
Integrability,// Do nothing if either argument is dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp:36,depend,dependent,36,interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,1,['depend'],['dependent']
Integrability,// Do nothing if the operand is dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp:32,depend,dependent,32,interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,1,['depend'],['dependent']
Integrability,// Do substitution on the type of the non-type template parameter; // with the template arguments we've seen thus far. But if the; // template has a dependent context then we cannot substitute yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:149,depend,dependent,149,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,// Do the same for injection of invariant conditions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:19,inject,injection,19,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['inject'],['injection']
Integrability,// Do we have a circular dependency?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:25,depend,dependency,25,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,1,['depend'],['dependency']
Integrability,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:37,depend,depend,37,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,2,"['depend', 'integrat']","['depend', 'integrate']"
Integrability,// Do we want to warn on a protocol in extension class which; // already exist in the class? Probably not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:27,protocol,protocol,27,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// Does not depend on operands, does not require adjustment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:12,depend,depend,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['depend'],['depend']
Integrability,// Does the interface subclass NSObject?; // FIXME: We can memoize here if this gets too expensive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp:12,interface,interface,12,interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CocoaConventions.cpp,1,['interface'],['interface']
Integrability,"// Does value or shape of this arg depend on any other arg?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:35,depend,depend,35,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['depend'],['depend']
Integrability,"// Doing a perfect shuffle on a low-half mask (i.e. where the upper half; // is all-undef) may produce a perfect shuffle that generates legitimate; // upper half. This isn't wrong, but if the perfect shuffle was possible,; // then there is a good chance that a shorter (contracting) code may be; // used as well (e.g. V6_vshuffeb, etc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:270,contract,contracting,270,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['contract'],['contracting']
Integrability,"// Don't CSE convergent calls in different basic blocks, because they; // implicitly depend on the set of threads that is currently executing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:85,depend,depend,85,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,2,['depend'],['depend']
Integrability,"// Don't access this directly, use the getThreadIndex wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h:54,wrap,wrapper,54,interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h,1,['wrap'],['wrapper']
Integrability,// Don't add dependency if it is in a different lexical scope or a global.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:13,depend,dependency,13,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['depend'],['dependency']
Integrability,// Don't add the root if we already indirectly depend on it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:47,depend,depend,47,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['depend'],['depend']
Integrability,// Don't allow one to pass an Objective-C interface to a vararg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:42,interface,interface,42,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['interface'],['interface']
Integrability,// Don't allow serialization of field list records using this interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/SimpleTypeSerializer.h:62,interface,interface,62,interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/SimpleTypeSerializer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/SimpleTypeSerializer.h,1,['interface'],['interface']
Integrability,"// Don't allow symbol refs in the immediate field otherwise; // Note: Loc.back() may be Loc[1] or Loc[2] depending on the number of; // operands of the original instruction (i.e. 'add w0, w1, borked' vs; // 'cmp w0, 'borked')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:105,depend,depending,105,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['depend'],['depending']
Integrability,// Don't analyze value-dependent comparisons directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:23,depend,dependent,23,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['depend'],['dependent']
Integrability,// Don't apply this attribute to template dependent types. It is applied on; // substitution during template instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:42,depend,dependent,42,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['depend'],['dependent']
Integrability,"// Don't attempt to analyze instructions in blocks that aren't; // reachable. Such instructions don't matter, and they aren't required; // to obey basic rules for definitions dominating uses which this; // analysis depends on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:215,depend,depends,215,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['depend'],['depends']
Integrability,"// Don't attempt to schedule around any instruction that defines; // a stack-oriented pointer, as it's unlikely to be profitable. This; // saves compile time, because it doesn't require every single; // stack slot reference to depend on the instruction that does the; // modification.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:227,depend,depend,227,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['depend'],['depend']
Integrability,"// Don't attempt to schedule around any instruction that defines; // a stack-oriented pointer, as it's unlikely to be profitable. This; // saves compile time, because it doesn't require every single; // stack slot reference to depend on the instruction that does the; // modification.; // Calls don't actually change the stack pointer, even if they have imp-defs.; // No ARM calling conventions change the stack pointer. (X86 calling; // conventions sometimes do).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:227,depend,depend,227,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['depend']
Integrability,"// Don't bother printing reason, just return to the test function,; // since a fatal error represents a successful parse (i.e. it correctly; // terminated with an error message to the user).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-as-fuzzer/llvm-as-fuzzer.cpp:169,message,message,169,interpreter/llvm-project/llvm/tools/llvm-as-fuzzer/llvm-as-fuzzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-as-fuzzer/llvm-as-fuzzer.cpp,1,['message'],['message']
Integrability,// Don't break anti-dependencies for critical path registers; // if not on the critical path,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['depend'],['dependencies']
Integrability,// Don't break anti-dependencies if a use down below requires; // this exact register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['depend'],['dependencies']
Integrability,// Don't break anti-dependencies on non-allocatable registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:20,depend,dependencies,20,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,2,['depend'],['dependencies']
Integrability,// Don't break physical register dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:33,depend,dependencies,33,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependencies']
Integrability,"// Don't call the MachineOperand destructor. A lot of this code depends on; // MachineOperand having a trivial destructor anyway, and adding a call here; // wouldn't make it 'destructor-correct'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp:64,depend,depends,64,interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineInstr.cpp,1,['depend'],['depends']
Integrability,"// Don't chain dependent friend function definitions until instantiation, to; // permit cases like; //; // void func();; // template<typename T> class C1 { friend void func() {} };; // template<typename T> class C2 { friend void func() {} };; //; // ... which is valid if only one of C1 and C2 is ever instantiated.; //; // FIXME: This need only apply to function definitions. For now, we proxy; // this by checking for a file-scope function. We do not want this to apply; // to friend declarations nominating member functions, because that gets in; // the way of access checks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:15,depend,dependent,15,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['dependent']
Integrability,// Don't check ObjCInterfaceDecl as interfaces are named and mismatches can be; // detected in VisitObjCInterfaceDecl. Here we are looking for redeclarations; // in extensions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:36,interface,interfaces,36,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['interface'],['interfaces']
Integrability,"// Don't check constraints if the function is dependent. Also don't check if; // this is a function template specialization, as the call to; // CheckinstantiatedFunctionTemplateConstraints after this will check it; // better.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp:46,depend,dependent,46,interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,1,['depend'],['dependent']
Integrability,"// Don't check for uninitialized field values in arguments if the; // caller has a body that is available and we have the chance to inline it.; // This is a hack, but is a reasonable compromise betweens sometimes warning; // and sometimes not depending on if we decide to inline a function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:243,depend,depending,243,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,1,['depend'],['depending']
Integrability,// Don't depend on assumed values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:9,depend,depend,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['depend'],['depend']
Integrability,// Don't diagnose for value- or type-dependent expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:37,depend,dependent,37,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['depend'],['dependent']
Integrability,"// Don't drop relocations between functions, even if they are in the same text; // section. Multiple Visual C++ linker features depend on having the; // relocations present. The /INCREMENTAL flag will cause these relocations to; // point to thunks, and the /GUARD:CF flag assumes that it can use relocations; // to approximate the set of all address taken functions. LLD's implementation; // of /GUARD:CF also relies on the existance of these relocations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WinCOFFObjectWriter.cpp:128,depend,depend,128,interpreter/llvm-project/llvm/lib/MC/WinCOFFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/WinCOFFObjectWriter.cpp,1,['depend'],['depend']
Integrability,"// Don't enable this checker if strong dependencies are unsatisfied, but; // assume that weak dependencies are transitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:39,depend,dependencies,39,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,2,['depend'],['dependencies']
Integrability,// Don't even attempt to generate code for MIPS-V. It has not; // been tested and currently exists for the integrated assembler only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp:107,integrat,integrated,107,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSubtarget.cpp,1,['integrat'],['integrated']
Integrability,// Don't find properties within hidden protocol definitions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp:39,protocol,protocol,39,interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// Don't fold globals with redzones. ODR violation detector and redzone; // poisoning implicitly creates a dependence on the global's address, so it; // is no longer valid for it to be marked unnamed_addr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:107,depend,dependence,107,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['depend'],['dependence']
Integrability,// Don't go into unreachable blocks. They may contain instructions with; // dependency cycles which confuse the final scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:76,depend,dependency,76,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['dependency']
Integrability,"// Don't handle integers > 64 bit. Our coefficients are 64-bit large, so; // coefficient add/mul may wrap, while the operation in the full bit width; // would not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:101,wrap,wrap,101,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['wrap'],['wrap']
Integrability,// Don't list a class twice in the lookup failure diagnostic if it's; // found by both its injected-class-name and by the name in the enclosing; // scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:91,inject,injected-class-name,91,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['inject'],['injected-class-name']
Integrability,"// Don't look into dependent bases, because name lookup can't look; // there anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:19,depend,dependent,19,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,1,['depend'],['dependent']
Integrability,// Don't merge block with left brace wrapped after ObjC special blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:37,wrap,wrapped,37,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['wrap'],['wrapped']
Integrability,// Don't merge block with left brace wrapped after case labels.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:37,wrap,wrapped,37,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['wrap'],['wrapped']
Integrability,"// Don't move these; the RV optimization depends on the autoreleaseRV; // being tail called, and the retainRV being immediately after a call; // (which might still happen if we get lucky with codegen layout, but; // it's not worth taking the chance).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:41,depend,depends,41,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,1,['depend'],['depends']
Integrability,"// Don't process PHI deps. They depend on the specific predecessor, and; // we'll get them when visiting the predecessor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:32,depend,depend,32,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['depend'],['depend']
Integrability,"// Don't protect against crashes if we cannot run anything.; // cling might also be in a PCH-generation mode; don't inject our Sema; // pointer into the PCH.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:116,inject,inject,116,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,1,['inject'],['inject']
Integrability,// Don't put enums or option definitions onto single lines in protocol; // buffers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:62,protocol,protocol,62,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['protocol'],['protocol']
Integrability,// Don't recurse into statement expressions; any cleanups inside them; // will be wrapped in their own ExprWithCleanups.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:82,wrap,wrapped,82,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['wrap'],['wrapped']
Integrability,// Don't reorder subsequent operations: whatever comes after might crash and; // we want the system crash handling to see the message we just set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/PrettyStackTrace.cpp:126,message,message,126,interpreter/llvm-project/llvm/lib/Support/PrettyStackTrace.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/PrettyStackTrace.cpp,1,['message'],['message']
Integrability,// Don't reorder the loads if there is an order dependence. This would; // occur if the first instruction must go in slot0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:48,depend,dependence,48,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['depend'],['dependence']
Integrability,"// Don't replace a register with one that was recently used to repair; // an anti-dependence with this AntiDepReg, because that would; // re-introduce that anti-dependence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:82,depend,dependence,82,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,2,['depend'],['dependence']
Integrability,// Don't report module map file of the current module unless it also; // describes a dependency (for symmetry).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp:85,depend,dependency,85,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,1,['depend'],['dependency']
Integrability,"// Don't report module maps describing eagerly-loaded dependency. This; // information will be deserialized from the PCM.; // TODO: Verify this works fine when modulemap for module A is eagerly; // loaded from A.pcm, and module map passed on the command line contains; // definition of a submodule: ""explicit module A.Private { ... }"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp:54,depend,dependency,54,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/ModuleDepCollector.cpp,1,['depend'],['dependency']
Integrability,// Don't sink the COPY if it would violate a register dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:54,depend,dependency,54,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,1,['depend'],['dependency']
Integrability,"// Don't store offset in the scratch space. It doesn't tell anything to the; // user. Moreover, it depends on the history of macro expansions and thus; // prevents deduplication of warnings in headers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp:99,depend,depends,99,interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp,1,['depend'],['depends']
Integrability,// Don't track interfaces that are part of the SDK.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:15,interface,interfaces,15,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['interface'],['interfaces']
Integrability,"// Don't track interfaces that are part of the toolchain.; // For example: Swift, _Concurrency, ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:15,interface,interfaces,15,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['interface'],['interfaces']
Integrability,"// Don't transform functions that receive inallocas, as the transformation may; // not be safe depending on calling convention.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp:95,depend,depending,95,interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,1,['depend'],['depending']
Integrability,"// Don't treat calls to '[super dealloc]' as escaping for the purposes; // of this checker. Because the checker diagnoses missing releases in the; // post-message handler for '[super dealloc], escaping here would cause; // the checker to never warn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:155,message,message,155,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['message'],['message']
Integrability,// Don't try to compare dependent sized array,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:24,depend,dependent,24,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['depend'],['dependent']
Integrability,"// Don't try to handle invokes of custom functions, it's too complicated.; // Instead, invoke the dfsw$ wrapper, which will in turn call the __dfsw_; // wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:104,wrap,wrapper,104,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,2,['wrap'],['wrapper']
Integrability,"// Don't try to instantiate a dependent class (eg, a member template of; // an instantiated class template specialization).; // FIXME: Can this ever happen?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:30,depend,dependent,30,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['depend'],['dependent']
Integrability,"// Don't use gROOT so that this routine does not trigger TROOT's initialization; // This is essential since this routine is called via operator delete; // which is used during RegisterModule (i.e. during library loading, including the initial; // start up). Using gROOT leads to recursive call to RegisterModule and initialization of; // the interpreter in the middle of the execution of RegisterModule (i.e. undefined behavior).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:32,rout,routine,32,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,2,['rout'],['routine']
Integrability,// Don't visit either child expression if the condition is dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/EvaluatedExprVisitor.h:59,depend,dependent,59,interpreter/llvm-project/clang/include/clang/AST/EvaluatedExprVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/EvaluatedExprVisitor.h,1,['depend'],['dependent']
Integrability,"// Don't warn during template instantiation. If the initialization was; // non-dependent, we warned during the initial parse; otherwise, the; // type might not be scalar in some uses of the template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:79,depend,dependent,79,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['depend'],['dependent']
Integrability,// Don't warn for dependent expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:18,depend,dependent,18,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// Don't warn if signed overflow is defined, then all the rest of the; // diagnostics will not be triggered because the behavior is defined.; // Also don't warn in C++20 mode (and newer), as signed left shifts; // always wrap and never overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:221,wrap,wrap,221,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['wrap'],['wrap']
Integrability,// Don't warn if the expr is type dependent. The type could end up; // instantiating to void.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:34,depend,dependent,34,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['depend'],['dependent']
Integrability,"// Don't wrap between "":"" and ""!"" of a strict prop init (""field!: type;"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:9,wrap,wrap,9,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['wrap'],['wrap']
Integrability,// Don't wrap in a further UsingType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:9,wrap,wrap,9,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['wrap'],['wrap']
Integrability,// Don't write conversion routines for fake arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp:26,rout,routines,26,interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,1,['rout'],['routines']
Integrability,"// Done dealing with the IntegrateBins option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:25,Integrat,IntegrateBins,25,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['Integrat'],['IntegrateBins']
Integrability,"// Double_t rin = tg1*point[2]+ro1;; // Double_t rout = tg2*point[2]+ro2;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx:49,rout,rout,49,geom/geom/src/TGeoCone.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCone.cxx,1,['rout'],['rout']
Integrability,"// Downgrade from ExtWarn to Extension if; // (1) the supposedly external inline function is in the main file,; // and probably won't be included anywhere else.; // (2) the thing we're referencing is a pure function.; // (3) the thing we're referencing is another inline function.; // This last can give us false negatives, but it's better than warning on; // wrappers for simple C library functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:360,wrap,wrappers,360,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['wrap'],['wrappers']
Integrability,"// Draw calorimeter scale info and plane interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloLegoOverlay.cxx:41,interface,interface,41,graf3d/eve/src/TEveCaloLegoOverlay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloLegoOverlay.cxx,1,['interface'],['interface']
Integrability,"// Dual-register instructions use even-odd register pairs as their; // destination operand, in assembly such pair is spelled as two; // consecutive registers, without any special syntax. ConvertDualRegOperand; // tries to convert such operand into register pair, e.g. r2, r3 -> r2_r3.; // It returns true, if an error message has been emitted. If the function; // returns false, the function either succeeded or an error (e.g. missing; // operand) will be diagnosed elsewhere.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:318,message,message,318,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['message'],['message']
Integrability,"// Dump a DWARF string offsets section. This may be a DWARF v5 formatted; // string offsets section, where each compile or type unit contributes a; // number of entries (string offsets), with each contribution preceded by; // a header containing size and version number. Alternatively, it may be a; // monolithic series of string offsets, as generated by the pre-DWARF v5; // implementation of split DWARF; however, in that case we still need to; // collect contributions of units because the size of the offsets (4 or 8; // bytes) depends on the format of the referencing unit (DWARF32 or DWARF64).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp:532,depend,depends,532,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFContext.cpp,1,['depend'],['depends']
Integrability,// Dump a message to stderr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp:10,message,message,10,interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,1,['message'],['message']
Integrability,// Dump version dependency section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ELFDumper.cpp:16,depend,dependency,16,interpreter/llvm-project/llvm/tools/llvm-readobj/ELFDumper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ELFDumper.cpp,1,['depend'],['dependency']
Integrability,// Dumps immediate control dependencies for each block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h:27,depend,dependencies,27,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Dominators.h,1,['depend'],['dependencies']
Integrability,// Duplicated from FileSystem.h to avoid a dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h:43,depend,dependency,43,interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h,1,['depend'],['dependency']
Integrability,"// During template argument deduction, we allow 'decltype(auto)' to; // match an arbitrary dependent argument.; // FIXME: The language rules don't say what happens in this case.; // FIXME: We get an opaque dependent type out of decltype(auto) if the; // expression is merely instantiation-dependent; is this enough?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:91,depend,dependent,91,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,['depend'],['dependent']
Integrability,"// DynamicLookup only happens inside wrapper functions:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:37,wrap,wrapper,37,core/metacling/src/TClingCallbacks.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx,1,['wrap'],['wrapper']
Integrability,"// E.g. for two CUDA device dependences whose bound arch is sm_20 and; // sm_35 this will generate:; // ""cuda-device"" (nvptx64-nvidia-cuda:sm_20) {#ID}, ""cuda-device""; // (nvptx64-nvidia-cuda:sm_35) {#ID}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:28,depend,dependences,28,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['dependences']
Integrability,// EABI dependent RTLIB,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:8,depend,dependent,8,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['depend'],['dependent']
Integrability,"// END SYNCHRONIZATION FROM MASTER TO WORKERS (STATE); ///////////////////////////////////////////////////////////////////////////////; /// Calculation stuff (mostly duplicates of RooGradMinimizerFcn code):",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:7,SYNCHRONIZ,SYNCHRONIZATION,7,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,1,['SYNCHRONIZ'],['SYNCHRONIZATION']
Integrability,"// END SYNCHRONIZATION FROM WORKERS TO MASTER; // SYNCHRONIZATION FROM MASTER TO WORKERS (STATE)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:7,SYNCHRONIZ,SYNCHRONIZATION,7,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,2,['SYNCHRONIZ'],['SYNCHRONIZATION']
Integrability,"// EOF while looking for semi. Don't wrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp:37,wrap,wrap,37,interpreter/cling/lib/Utils/SourceNormalization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/SourceNormalization.cpp,1,['wrap'],['wrap']
Integrability,// ESD Get routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/GOFF.h:11,rout,routines,11,interpreter/llvm-project/llvm/include/llvm/Object/GOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/GOFF.h,1,['rout'],['routines']
Integrability,// Each STRINGTABLE bundle depends on ID of the bundle and language; // description.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.h:27,depend,depends,27,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceFileWriter.h,1,['depend'],['depends']
Integrability,// Each access has its own dependence set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:27,depend,dependence,27,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Each control definition (except CONTROL) follows one of the schemes below; // depending on the control class:; // [class] text, id, x, y, width, height [, style] [, exstyle] [, helpID]; // [class] id, x, y, width, height [, style] [, exstyle] [, helpID]; // Note that control ids must be integers.; // Text might be either a string or an integer pointing to resource ID.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp:81,depend,depending,81,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptParser.cpp,1,['depend'],['depending']
Integrability,"// Each double-precision register DO-D15 overlaps with two of the single; // precision registers F0-F31. As an example, all of the following hold true:; // D0 + 1 == F1, F1 + 1 == D1, F1 + 1 == F2, depending on the context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:198,depend,depending,198,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['depend'],['depending']
Integrability,"// Easier to work with the ROOT interfaces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:32,interface,interfaces,32,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interfaces']
Integrability,"// Either add nullability here or try to distribute it. We; // don't want to distribute the nullability specifier past any; // dependent type, because that complicates the user model.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:127,depend,dependent,127,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['depend'],['dependent']
Integrability,// Either of the arguments dependent?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:27,depend,dependent,27,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['dependent']
Integrability,"// Either printout or raise exception, depending on user settings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:39,depend,depending,39,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,1,['depend'],['depending']
Integrability,// Eligible one-use instruction added to the dependence slice.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp:45,depend,dependence,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectOptimize.cpp,1,['depend'],['dependence']
Integrability,"// Eliminate exclLVBranches that do not depend on any LVServer; // Attention: Counting loop, since modifying container",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:40,depend,depend,40,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['depend'],['depend']
Integrability,// Eliminate non-overload placeholder types in the arguments. We; // need to do this before checking whether types are dependent; // because lowering a pseudo-object expression might well give us; // something of dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:119,depend,dependent,119,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['depend'],['dependent']
Integrability,// Eliminate redundant IV users.; //; // Simplification works best when run before other consumers of SCEV. We; // attempt to avoid evaluating SCEVs for sign/zero extend operations until; // other expressions involving loop IVs have been evaluated. This helps SCEV; // set no-wrap flags before normalizing sign/zero extension.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:276,wrap,wrap,276,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['wrap'],['wrap']
Integrability,"// Else we have to search through the non-runtime protocol's inheritancy; // hierarchy DAG stopping whenever a branch either finds a runtime protocol or; // a non-runtime protocol without any parents. These are the ""first-implied""; // protocols from a non-runtime protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:50,protocol,protocol,50,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,5,['protocol'],"['protocol', 'protocols']"
Integrability,// Emit #line directives or GNU line markers depending on what mode we're in.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp:45,depend,depending,45,interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,1,['depend'],['depending']
Integrability,"// Emit MOV to materialize the target address and the CALL to target.; // This is encoded with 12-13 bytes, depending on which register is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp:108,depend,depending,108,interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MCInstLower.cpp,1,['depend'],['depending']
Integrability,// Emit a CreateWithDelayedArgs that takes only the dependent argument; // expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp:52,depend,dependent,52,interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,1,['depend'],['dependent']
Integrability,// Emit a possible note about the conversion failing because the; // operand is a message send with a related result type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:82,message,message,82,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['message'],['message']
Integrability,"// Emit a simple mangled intrinsic that has 1 argument and a return type; // matching the argument type. Depending on mode, this may be a constrained; // floating-point intrinsic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:105,Depend,Depending,105,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Depend'],['Depending']
Integrability,// Emit all referenced thread wrappers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:30,wrap,wrappers,30,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['wrap'],['wrappers']
Integrability,// Emit an S_THUNK32/S_END symbol pair for a thunk routine.; // The only supported thunk ordinal is currently the standard type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:51,rout,routine,51,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['rout'],['routine']
Integrability,"// Emit an intrinsic that has 2 operands of the same type as its result.; // Depending on mode, this may be a constrained floating-point intrinsic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:77,Depend,Depending,77,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Depend'],['Depending']
Integrability,"// Emit an intrinsic that has 3 operands of the same type as its result.; // Depending on mode, this may be a constrained floating-point intrinsic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:77,Depend,Depending,77,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Depend'],['Depending']
Integrability,"// Emit an intrinsic where all operands are of the same type as the result.; // Depending on mode, this may be a constrained floating-point intrinsic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:80,Depend,Depending,80,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Depend'],['Depending']
Integrability,"// Emit dependencies.; //; // CHECKER_DEPENDENCY(FULLNAME, DEPENDENCY); // - FULLNAME: The full name of the checker that depends on another checker.; // - DEPENDENCY: The full name of the checker FULLNAME depends on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp:8,depend,dependencies,8,interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,5,"['DEPEND', 'depend']","['DEPENDENCY', 'dependencies', 'depends']"
Integrability,"// Emit diagnostic messages, if any.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:19,message,messages,19,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['message'],['messages']
Integrability,// Emit everything that isn't dependent on the first parameter type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:30,depend,dependent,30,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['depend'],['dependent']
Integrability,// Emit helper routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:15,rout,routines,15,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,2,['rout'],['routines']
Integrability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of lastprivate; // variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,synchroniz,synchronize,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['synchroniz'],['synchronize']
Integrability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,synchroniz,synchronize,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['synchroniz'],['synchronize']
Integrability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,synchroniz,synchronize,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['synchroniz'],['synchronize']
Integrability,// Emit implicit barrier to synchronize threads and avoid data races on; // propagation master's thread values of threadprivate variables to local; // instances of that variables of all other implicit threads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,synchroniz,synchronize,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['synchroniz'],['synchronize']
Integrability,// Emit implicit barrier to synchronize threads and avoid data races; // on initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,synchroniz,synchronize,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['synchroniz'],['synchronize']
Integrability,// Emit materialization code for rebased constants depending on this IP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:51,depend,depending,51,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,1,['depend'],['depending']
Integrability,// Emit note tag message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/InvalidPtrChecker.cpp:17,message,message,17,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/InvalidPtrChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/InvalidPtrChecker.cpp,1,['message'],['message']
Integrability,// Emit objc_sync_exit(expr); as finally's sole statement for; // @synchronized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:67,synchroniz,synchronized,67,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['synchroniz'],['synchronized']
Integrability,// Emit remark for first unsafe dependence,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:32,depend,dependence,32,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependence']
Integrability,"// Emit the actual declaration. All these functions are; // declared 'static inline' without a body, which is fine; // provided clang recognizes them as builtins, and has the; // effect that this type signature is used in place of the one; // that Builtins.def didn't provide. That's how we can get; // structure types that weren't defined until this header was; // included to be part of the type signature of a builtin that; // was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:696,wrap,wrapper,696,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"// Emit the actual waterfall loop, executing the wrapped instruction for each; // unique value of \p ScalarOps across all lanes. In the best case we execute 1; // iteration, in the worst case we execute 64 (once per lane).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:49,wrap,wrapped,49,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,1,['wrap'],['wrapped']
Integrability,// Emit the dummy bodies for any protocols which were referenced but; // never defined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:33,protocol,protocols,33,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['protocol'],['protocols']
Integrability,// Emit the false cases under ExtraArgs. This won't show them in the remark; // message but will end up in the serialized remarks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp:80,message,message,80,interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MemoryOpRemark.cpp,1,['message'],['message']
Integrability,// Emit the name table for error messages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InstrInfoEmitter.cpp:33,message,messages,33,interpreter/llvm-project/llvm/utils/TableGen/InstrInfoEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InstrInfoEmitter.cpp,1,['message'],['messages']
Integrability,// Emit the routine to match token strings to their match class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:12,rout,routine,12,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['rout'],['routine']
Integrability,// Emit the routine to validate an operand against a match class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:12,rout,routine,12,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['rout'],['routine']
Integrability,// Emit the subclass predicate routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:31,rout,routine,31,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['rout'],['routine']
Integrability,// Emit the type info and forward function declaration to the first MBB; // to ensure VReg definition dependencies are valid across all MBBs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVCallLowering.cpp:102,depend,dependencies,102,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVCallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVCallLowering.cpp,1,['depend'],['dependencies']
Integrability,// Emit the unsupported option error until the Clang's library integration; // support for 128-bit long double is available for AIX.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:63,integrat,integration,63,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['integrat'],['integration']
Integrability,"// Emit weak dependencies.; //; // CHECKER_DEPENDENCY(FULLNAME, DEPENDENCY); // - FULLNAME: The full name of the checker that is supposed to be; // registered first.; // - DEPENDENCY: The full name of the checker FULLNAME weak depends on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp:13,depend,dependencies,13,interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,4,"['DEPEND', 'depend']","['DEPENDENCY', 'dependencies', 'depends']"
Integrability,"// EmitVAListRef - Emit a ""reference"" to a va_list; this is either the address; // or the value of the expression, depending on how va_list is defined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:115,depend,depending,115,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['depend'],['depending']
Integrability,// Emits code to instantiate dependent attributes on templates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp:29,depend,dependent,29,interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,1,['depend'],['dependent']
Integrability,// Emits the first unsafe memory dependence in a loop.; // Emits nothing if there are no unsafe dependences; // or if the dependences were not recorded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:33,depend,dependence,33,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,3,['depend'],"['dependence', 'dependences']"
Integrability,"// Empirically determine maximum value of function by taking a large number; // of samples. The actual number depends on the number of dimensions in which; // the sampling occurs; // Generate the minimum required number of samples for a reliable maximum estimate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAcceptReject.cxx:110,depend,depends,110,roofit/roofitcore/src/RooAcceptReject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAcceptReject.cxx,1,['depend'],['depends']
Integrability,// Enable -ffp-contract=fast,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:15,contract,contract,15,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['contract'],['contract']
Integrability,"// Enable Upper bound unrolling universally, not dependant upon the conditions; // below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp:49,depend,dependant,49,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVTargetTransformInfo.cpp,1,['depend'],['dependant']
Integrability,"// Enable Vc/VecCore template instantiations to replace std math functions.; //; // Vc declares `std::sqrt(Vc-type)`. To use this for Vc-`SCALAR`s, the call; // to `sqrt()` must only be resolved at the template instantiation time, when; // the Vc headers are guaranteed to be included, and thus its `sqrt()`; // overloads have been declared.; // The trick is to keep sqrt() dependent (on its argument type) by making it; // an unqualified name. The `std::` of `std::sqrt()` makes it a qualified; // name, so the code here has to use `sqrt()`, not `std::sqrt()`. To still; // find `std::sqrt()` we pull `std::sqrt()` into the surrounding namespace.; //; // We don't want to use 'using namespace std' because it would pollute the including headers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h:374,depend,dependent,374,math/mathcore/inc/Math/Math.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Math.h,1,['depend'],['dependent']
Integrability,// Enable rewrite includes if the user's asked for it or if we're generating; // diagnostics.; // TODO: Once -module-dependency-dir works with -frewrite-includes it'd be; // nice to enable this when doing a crashdump for modules as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:117,depend,dependency-dir,117,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['depend'],['dependency-dir']
Integrability,"// Enable the given architecture extension, and any other extensions it; // depends on. Does not change the base architecture, or follow dependencies; // between features which are only related by required arcitecture versions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h:76,depend,depends,76,interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/AArch64TargetParser.h,2,['depend'],"['dependencies', 'depends']"
Integrability,"// Encapsulates access to the input file and any dependent type server,; // including any precompiled header object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewReader.h:49,depend,dependent,49,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewReader.h,2,['depend'],['dependent']
Integrability,"// End Loop over tag attributes; // Now, fill the maps, depending on the type:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:56,depend,depending,56,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,1,['depend'],['depending']
Integrability,// End detail namespace; // This is a interface class that is currently forwarding functionalities from; // detail::IEEEFloat.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h:38,interface,interface,38,interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,1,['interface'],['interface']
Integrability,// End legacy namespace; // Create wrappers for C Binding types (see CBindingWrapping.h).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h:35,wrap,wrappers,35,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,1,['wrap'],['wrappers']
Integrability,"// End loop over channels; /***; Second: Make the combined model:; If you want output histograms in root format, create and pass it to the combine routine.; ""combine"" : will do the individual cross-section measurements plus combination; ***/; // Use HistFactory to combine the individual channel workspaces",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:147,rout,routine,147,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,1,['rout'],['routine']
Integrability,// End of HW encoding table; // MCRegisterInfo initialization routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp:62,rout,routine,62,interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/RegisterInfoEmitter.cpp,1,['rout'],['routine']
Integrability,// End the packet if dependency cannot be pruned.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp:21,depend,dependency,21,interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,1,['depend'],['dependency']
Integrability,"// End wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:7,wrap,wrapper,7,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,2,['wrap'],['wrapper']
Integrability,"// End-Of-Line action; // See the comment (copied from above):; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32); // and is implemented by",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,synchroniz,synchronize,94,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['synchroniz'],['synchronize']
Integrability,"// Enforce all the rest of the instruction bits in LCTP, which; // won't have been reliably checked based on LCTP's own tablegen; // record, because we came to this decode by a roundabout route.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp:188,rout,route,188,interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/Disassembler/ARMDisassembler.cpp,1,['rout'],['route']
Integrability,// Ensure BraceWrapping for `public interface A {`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:36,interface,interface,36,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['interface'],['interface']
Integrability,// Ensure MaxVF is a power of 2; the dependence distance bound may not be.; // Note that both WidestRegister and WidestType may not be a powers of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:37,depend,dependence,37,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['depend'],['dependence']
Integrability,// Ensure loops are in simplifed form which is a pre-requisite for loop fusion; // pass. Added only for new PM since the legacy PM has already added; // LoopSimplify pass as a dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:176,depend,dependency,176,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['depend'],['dependency']
Integrability,// Ensure that all dependency data is updated (for nodes in the sub-graph); // and fill the ready-list with initial instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:19,depend,dependency,19,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['dependency']
Integrability,// Ensure that no-wrap flags match.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:18,wrap,wrap,18,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['wrap'],['wrap']
Integrability,// Ensure that the template parameter lists are compatible. Skip this check; // for a friend in a dependent context: the template parameter list itself; // could be dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:98,depend,dependent,98,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['depend'],['dependent']
Integrability,"// Ensure we keep alignment of wrapped operands with non-wrapped operands; // Since we actually align the operators, the wrapped operands need the; // extra offset to be properly aligned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp:31,wrap,wrapped,31,interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/WhitespaceManager.cpp,3,['wrap'],['wrapped']
Integrability,// Ensure we return a dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:22,depend,dependent,22,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,// Ensure wrapping after __attribute__((XX)) and @interface etc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:10,wrap,wrapping,10,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,// Enum constants are always r-values and never references.; // Unresolved using declarations are dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:98,depend,dependent,98,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['depend'],['dependent']
Integrability,"// Equivalence Assumptions; //; // For basic blocks in loops, some values in phi nodes may depend on; // values from not yet processed basic blocks in the loop. When encountering; // such values, we optimistically asssume their equivalence and store this; // assumption in a BlockDiffCandidate for the pair of compared BBs.; //; // Once we have diffed all BBs, for every BlockDiffCandidate, we check all; // stored assumptions using the Values map that stores proven equivalences; // between the old and new values, and report a diff if an assumption cannot; // be proven to be true.; //; // Note that after having made an assumption, all further determined; // equivalences implicitly depend on that assumption. These will not be; // reverted or reported if the assumption proves to be false, because these; // are considered indirect diffs caused by earlier direct diffs.; //; // We aim to avoid false negatives in llvm-diff, that is, ensure that; // whenever no diff is reported, the functions are indeed equal. If; // assumptions were made, this is not entirely clear, because in principle we; // could end up with a circular proof where the proof of equivalence of two; // nodes is depending on the assumption of their equivalence.; //; // To see that assumptions do not add false negatives, note that if we do not; // report a diff, this means that there is an equivalence mapping between old; // and new values that is consistent with all assumptions made. The circular; // dependency that exists on an IR value level does not exist at run time,; // because the values selected by the phi nodes must always already have been; // computed. Hence, we can prove equivalence of the old and new functions by; // considering step-wise parallel execution, and incrementally proving; // equivalence of every new computed value. Another way to think about it is; // to imagine cloning the loop BBs for every iteration, turning the loops; // into (possibly infinite) DAGs, and proving equivalence by indu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp:91,depend,depend,91,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,2,['depend'],['depend']
Integrability,"// Erase everything that was computed in this iteration from the cache, so; // that no dangling references are left behind. We could be a bit smarter if; // we kept a dependency graph. It's probably not worth the complexity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp:167,depend,dependency,167,interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp,1,['depend'],['dependency']
Integrability,// Erase the second piece if it has the same exact message text.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:51,message,message,51,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,1,['message'],['message']
Integrability,"// Error handler streams error-level messages to client log",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx:37,message,messages,37,graf3d/eve7/src/REveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx,1,['message'],['messages']
Integrability,// Error message,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:9,message,message,9,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['message'],['message']
Integrability,"// Error message already issued",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:9,message,message,9,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['message'],['message']
Integrability,// Error message on parse error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,message,message,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,"// Error recovery: some names weren't found, or we have a mix of; // type and protocol names. Go resolve all of the unresolved names; // and complain if we can't find a consistent answer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:78,protocol,protocol,78,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// Error should go down faster than 0.5^nSteps because the integrator uses series acceleration,; // so test if it goes down faster than 0.333^nSteps",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:59,integrat,integrator,59,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,1,['integrat'],['integrator']
Integrability,// Error-dependent expr should never be a null pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:9,depend,dependent,9,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['depend'],['dependent']
Integrability,"// Essentially a compile-time implementation of a compare->isel sequence.; // It takes two constants to compare, along with the true/false registers; // and the comparison type (as a subreg to a CR field) and returns one; // of the true/false registers, depending on the comparison results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:254,depend,depending,254,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['depend'],['depending']
Integrability,// Estimate all types may be fused with contract/unsafe flags,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp:40,contract,contract,40,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetTransformInfo.cpp,1,['contract'],['contract']
Integrability,"// Estimates lower bound for norm1 of inverse of A. Returns norm; // estimate in est. iter sets the maximum number of iterations to be used.; // The return value indicates the number of iterations remaining on exit from; // loop, hence if this is non-zero the processed ""converged"".; // This routine uses Hager's Convex Optimisation Algorithm.; // See Applied Numerical Linear Algebra, p139 & SIAM J Sci Stat Comp 1984 pp 311-16",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:292,rout,routine,292,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['rout'],['routine']
Integrability,"// Evaluate as many IV expressions as possible before widening any IVs. This; // forces SCEV to set no-wrap flags before evaluating sign/zero; // extension. The first time SCEV attempts to normalize sign/zero extension,; // the result becomes final. So for the most predictable results, we delay; // evaluation of sign/zero extend evaluation until needed, and avoid running; // other SCEV based analysis prior to simplifyAndExtend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:103,wrap,wrap,103,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['wrap'],['wrap']
Integrability,"// Evaluate at the exit value. If we really did fall out of the valid; // range, then we computed our trip count, otherwise wrap around or other; // things must have happened.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:124,wrap,wrap,124,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['wrap'],['wrap']
Integrability,// Evaluate the effect on the message receiver / `this` argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:30,message,message,30,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['message'],['message']
Integrability,// Evaluate the effect on the message receiver.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:30,message,message,30,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['message'],['message']
Integrability,// Eveluate the address depending on the addressing mode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp:24,depend,depending,24,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCTargetDesc.cpp,1,['depend'],['depending']
Integrability,"// Even after resolving the types through the surrounding template; // this argument type is still dependent: do not look it up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:99,depend,dependent,99,core/metacling/src/TClingMethodInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx,1,['depend'],['dependent']
Integrability,"// Even if the rounding mode is unknown, try evaluating the operation.; // If it does not raise inexact exception, rounding was not applied,; // so the result is exact and does not depend on rounding mode. Whether; // other FP exceptions are raised, it does not depend on rounding mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:181,depend,depend,181,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,2,['depend'],['depend']
Integrability,"// Even if we have a nested-name-specifier in the dependent; // template specialization type, we won't record the nested-name-specifier; // location information when this type-source location information is; // part of a nested-name-specifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h:50,depend,dependent,50,interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,1,['depend'],['dependent']
Integrability,"// Even in dependent contexts, try to diagnose base expressions with; // obviously wrong types, e.g.:; //; // T* t;; // t.f;; //; // In Obj-C++, however, the above expression is valid, since it could be; // accessing the 'f' property if T is an Obj-C interface. The extra check; // allows this, while still reporting an error if T is a struct pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:11,depend,dependent,11,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"// Even though LLVM might be built with NDEBUG, define symbols that the code; // built without NDEBUG can depend on via the llvm/Support/Debug.h header.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp:106,depend,depend,106,interpreter/llvm-project/llvm/lib/Support/Debug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp,1,['depend'],['depend']
Integrability,"// Even though we accept this undocumented extension for compatibility; // reasons, the additional integer argument does not actually change; // the behaviour of the '.ent' directive, so we would like to discourage; // its use. We do this by not referring to the extended version in; // error messages which are not directly related to its use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:293,message,messages,293,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['message'],['messages']
Integrability,"// Even when we do not change any CSR, we still want to insert the; // prologue and epilogue of the function.; // So set the save points for those.; // Use the points found by shrink-wrapping, if any.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:183,wrap,wrapping,183,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,2,['wrap'],['wrapping']
Integrability,// Eventually StackSize will be calculated by a link-time pass; which will; // also decide whether checking code needs to be injected into this particular; // prologue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:125,inject,injected,125,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['inject'],['injected']
Integrability,// Every argument might be simplified. We have to go through the; // Attributor interface though as outside AAs can register custom; // simplification callbacks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:80,interface,interface,80,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['interface'],['interface']
Integrability,// Every combination of colors given by the top down; // and bottom up Reserved node dependency,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:85,depend,dependency,85,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['depend'],['dependency']
Integrability,"// Every enumeration visible across an ABI-complying; // interface contains a value needing 32 bits to encode; // it; other enums can be containerized.; // Tag_ABI_HardFP_use, (=27), uleb128",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h:57,interface,interface,57,interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,1,['interface'],['interface']
Integrability,// Everything past here must be control dependent on I.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:40,depend,dependent,40,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['depend'],['dependent']
Integrability,"// Everything we depend on is still fine, so are we. Nothing to invalidate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:17,depend,depend,17,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,1,['depend'],['depend']
Integrability,"// Examines the loop nesting of the Src and Dst; // instructions and establishes their shared loops. Sets the variables; // CommonLevels, SrcLevels, and MaxLevels.; // The source and destination instructions needn't be contained in the same; // loop. The routine establishNestingLevels finds the level of most deeply; // nested loop that contains them both, CommonLevels. An instruction that's; // not contained in a loop is at level = 0. MaxLevels is equal to the level; // of the source plus the level of the destination, minus CommonLevels.; // This lets us allocate vectors MaxLevels in length, with room for every; // distinct loop referenced in both the source and destination subscripts.; // The variable SrcLevels is the nesting depth of the source instruction.; // It's used to help calculate distinct loops referenced by the destination.; // Here's the map from loops to levels:; // 0 - unused; // 1 - outermost common loop; // ... - other common loops; // CommonLevels - innermost common loop; // ... - loops containing Src but not Dst; // SrcLevels - innermost loop containing Src but not Dst; // ... - loops containing Dst but not Src; // MaxLevels - innermost loops containing Dst but not Src; // Consider the follow code fragment:; // for (a = ...) {; // for (b = ...) {; // for (c = ...) {; // for (d = ...) {; // A[] = ...;; // }; // }; // for (e = ...) {; // for (f = ...) {; // for (g = ...) {; // ... = A[];; // }; // }; // }; // }; // }; // If we're looking at the possibility of a dependence between the store; // to A (the Src) and the load from A (the Dst), we'll note that they; // have 2 loops in common, so CommonLevels will equal 2 and the direction; // vector for Result will have 2 entries. SrcLevels = 4 and MaxLevels = 7.; // A map from loop names to loop numbers would look like; // a - 1; // b - 2 = CommonLevels; // c - 3; // d - 4 = SrcLevels; // e - 5; // f - 6; // g - 7 = MaxLevels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:255,rout,routine,255,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,"['depend', 'rout']","['dependence', 'routine']"
Integrability,"// Example, explaining the loop break condition: Let's assume our; // starting instruction is i0 and MaxMemDepDistance = 3.; //; // +--------v--v--v; // i0,i1,i2,i3,i4,i5,i6,i7,i8; // +--------^--^--^; //; // MaxMemDepDistance let us stop alias-checking at i3 and we add; // dependencies from i0 to i3,i4,.. (even if they are not aliased).; // Previously we already added dependencies from i3 to i6,i7,i8; // (because of MaxMemDepDistance). As we added a dependency from; // i0 to i3, we have transitive dependencies from i0 to i6,i7,i8; // and we can abort this loop at i6.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:275,depend,dependencies,275,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,4,['depend'],"['dependencies', 'dependency']"
Integrability,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in one dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,integrat,integration,41,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Integrability,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in two dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,integrat,integration,41,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['integrat'],['integration']
Integrability,"// Examples which we should handle.; // File Real; // /lib/1/1.so /lib/1/1.so // file; // /lib/1/2.so->/lib/1/1.so /lib/1/1.so // file local link; // /lib/1/3.so->/lib/3/1.so /lib/3/1.so // file external link; // /lib/2->/lib/1 // path link; // /lib/2/1.so /lib/1/1.so // path link, file; // /lib/2/2.so->/lib/1/1.so /lib/1/1.so // path link, file local link; // /lib/2/3.so->/lib/3/1.so /lib/3/1.so // path link, file external link; //; // /lib/3/1.so; // /lib/3/2.so->/system/lib/s.so; // /lib/3/3.so; // /system/lib/1.so; //; // libL.so NEEDED/RPATH libR.so /lib/some-rpath/libR.so // needed/dependedt library in libL.so RPATH/RUNPATH or other (in)direct dep; //; // Paths = /lib/1 : /lib/2 : /lib/3; // m_BasePaths = [""/lib/1"", ""/lib/3"", ""/system/lib""]; // m_*Libraries = [<0,""1.so"">, <1,""1.so"">, <2,""s.so"">, <1,""3.so"">]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:595,depend,dependedt,595,interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp,1,['depend'],['dependedt']
Integrability,// Exception Route Block,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:13,Rout,Route,13,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,1,['Rout'],['Route']
Integrability,"// Exception safe push routine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:23,rout,routine,23,interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp,1,['rout'],['routine']
Integrability,// Exception-related interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h:21,interface,interface,21,interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,1,['interface'],['interface']
Integrability,"// Exception-safe wrapper for temporary setting of gGeoManager variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:18,wrap,wrapper,18,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['wrap'],['wrapper']
Integrability,"// Exception-safe wrapper for temporary setting of gPad variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:18,wrap,wrapper,18,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['wrap'],['wrapper']
Integrability,"// Exception: in very rare cases (for injected-class-names), not all; // redeclarations are in the same semantic context. Skip ones in a; // different context. They don't go in this lookup table at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:38,inject,injected-class-names,38,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['inject'],['injected-class-names']
Integrability,"// Exchange the two operands to this instruction. This instruction is safe to; // use on any binary instruction and does not modify the semantics of the; // instruction. If the instruction is order-dependent (SetLT f.e.), the opcode; // is changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:198,depend,dependent,198,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['depend'],['dependent']
Integrability,"// Exclude property for protocols which conform to class's super-class,; // as super-class has to implement the property.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:24,protocol,protocols,24,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['protocol'],['protocols']
Integrability,"// Exclude the artificially dependent DeclRefExprs, created by the; // Lookup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:28,depend,dependent,28,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['depend'],['dependent']
Integrability,"// Executable Directives. ""wait"" is first referred to here, but ends up being; // in its own section after ""routine"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h:108,rout,routine,108,interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenACCKinds.h,1,['rout'],['routine']
Integrability,// Exit from scope when the iterator is used in depend clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:48,depend,depend,48,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['depend'],['depend']
Integrability,// Exit this scope of this interface definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:27,interface,interface,27,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['interface'],['interface']
Integrability,"// ExitSU comes last by design, which acts like an implicit dependency; // between ExitSU and any bottom root in the graph. We should transfer; // this to FirstSU as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp:60,depend,dependency,60,interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,1,['depend'],['dependency']
Integrability,// Expand into a bunch of logical ops. Note that these ops; // depend on the PPC behavior for oversized shift amounts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:63,depend,depend,63,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,2,['depend'],['depend']
Integrability,// Expand this legacy predicate and wrap it around braces if there is more; // than one predicate to expand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:36,wrap,wrap,36,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['wrap'],['wrap']
Integrability,"// Explain 'this' object here - if it's not wrapped by an ElementRegion.; // TODO: Explain CXXThisRegion itself, find a way to test it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h:44,wrap,wrapped,44,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,1,['wrap'],['wrapped']
Integrability,// Explain 'this' object here.; // They are represented by a SymRegion wrapped by an ElementRegion; so; // match and handle it here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h:71,wrap,wrapped,71,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,1,['wrap'],['wrapped']
Integrability,"// Explicitly cast to unsigned, because the signedness of enums is; // compiler-dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp:80,depend,dependent,80,interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp,1,['depend'],['dependent']
Integrability,"// Explicitly check that arg depends on any of the observables, if this; // is not the case, skip it, as inclusion would result in repeated; // calculation of a function that has the same value for every event; // in the likelihood",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:29,depend,depends,29,roofit/roofitcore/src/RooVectorDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx,1,['depend'],['depends']
Integrability,// Explicitly declared @interface's are already synthesized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:24,interface,interface,24,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['interface'],['interface']
Integrability,// Explicitly reads the dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:24,depend,dependency,24,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['dependency']
Integrability,"// Explicitly remove all messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:25,message,messages,25,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['message'],['messages']
Integrability,// Explicitly set the dependence class to required because we want a long; // chain of N dependent instructions to be considered live as soon as one is; // without going through N update cycles. This is not required for; // correctness.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:22,depend,dependence,22,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['depend'],"['dependence', 'dependent']"
Integrability,"// Explicitly-defaulted secondary comparison functions (!=, <, <=, >, >=).; // We check these last because they can depend on the properties of the; // primary comparison functions (==, <=>).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:116,depend,depend,116,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['depend'],['depend']
Integrability,// Explorer for fusion candidates among the dependencies of the anchor instr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp:44,depend,dependencies,44,interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,1,['depend'],['dependencies']
Integrability,// Exported default constructors either have a simple call-site where they use; // the typical calling convention and have a single 'this' pointer for an; // argument -or- they get a wrapper function which appropriately thunks to the; // real default constructor. This thunk is the default constructor closure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:183,wrap,wrapper,183,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['wrap'],['wrapper']
Integrability,// Expose a base class for LiveDebugValues interfaces to inherit from. This; // allows the generic LiveDebugValues pass handles to call into the; // implementation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h:43,interface,interfaces,43,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h,1,['interface'],['interfaces']
Integrability,// Exposes an interface expected by autogenerated code in; // FixedLenDecoderEmitter,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.h:14,interface,interface,14,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Disassembler/AMDGPUDisassembler.h,1,['interface'],['interface']
Integrability,// Expression evaluator can't succeed on a dependent expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:43,depend,dependent,43,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['depend'],['dependent']
Integrability,"// Expression is dependent - skip it, build the mapper when it gets; // instantiated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:17,depend,dependent,17,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['depend'],['dependent']
Integrability,// Expression of the 'message' clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:22,message,message,22,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['message'],['message']
Integrability,"// Expression type depends on template context, or an error.; // Value and Instantiation should also be set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:19,depend,depends,19,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,1,['depend'],['depends']
Integrability,"// Expression value depends on template context, or an error.; // Instantiation should also be set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:20,depend,depends,20,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,1,['depend'],['depends']
Integrability,"// Extend lifetimes of objects returned by function calls and message; // sends.; // FIXME: We should do this in other cases in which temporaries are; // created including arguments of non-ARC types (e.g., C++; // temporaries).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:62,message,message,62,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['message'],['message']
Integrability,"// Extending the code in issue 7182, we also want to make sure that the; // integration also works if the bin scaling parameters are not just one,; // which would be equivalent to RooHistFunc.; //; // Let's scale each bin content by the bin index:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx:76,integrat,integration,76,roofit/roofit/test/testRooParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooParamHistFunc.cxx,1,['integrat'],['integration']
Integrability,"// Extends on PySequence_Check() to determine whether an object can be iterated; // over (technically, all objects can b/c of C++ pointer arithmetic, hence this; // check isn't 100% accurate, but neither is PySequence_Check()).; // Note: simply having the iterator protocol does not constitute a sequence, bc; // PySequence_GetItem() would fail.; // default to PySequence_Check() if called with a non-C++ object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:265,protocol,protocol,265,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,1,['protocol'],['protocol']
Integrability,"// Extension of shared library is platform dependent!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:43,depend,dependent,43,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['depend'],['dependent']
Integrability,"// Extension of the Map interfaces with chunking, specific to this class and; // only available from a MapReduce call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:24,interface,interfaces,24,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['interface'],['interfaces']
Integrability,"// Extern weak functions can sometimes be null at execution time.; // Code will sometimes check if an extern weak function is null.; // This could look something like:; // declare extern_weak i8 @my_func(i8); // br i1 icmp ne (i8 (i8)* @my_func, i8 (i8)* null), label %use_my_func,; // label %avoid_my_func; // The @""dfsw$my_func"" wrapper is never null, so if we replace this use; // in the comparison, the icmp will simplify to false and we have; // accidentally optimized away a null check that is necessary.; // This can lead to a crash when the null extern_weak my_func is called.; //; // To prevent (the most common pattern of) this problem,; // do not replace uses in comparisons with the wrapper.; // We definitely want to replace uses in call instructions.; // Other uses (e.g. store the function address somewhere) might be; // called or compared or both - this case may not be handled correctly.; // We will default to replacing with wrapper in cases we are unsure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:331,wrap,wrapper,331,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,3,['wrap'],['wrapper']
Integrability,"// External GUI component interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLViewer.h:26,interface,interface,26,graf3d/gl/inc/TGLViewer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLViewer.h,1,['interface'],['interface']
Integrability,"// External Library Routines; //____________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Blas.h:20,Rout,Routines,20,tmva/tmva/src/DNN/Architectures/Cpu/Blas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Cpu/Blas.h,1,['Rout'],['Routines']
Integrability,"// External viewers need to be created via plugin manager via interface...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:62,interface,interface,62,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['interface'],['interface']
Integrability,// Extra checks depending on VerificationLevel. Up to O(N^3).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:16,depend,depending,16,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['depend'],['depending']
Integrability,"// Extra, meaning depends on fType.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEvePathMark.h:18,depend,depends,18,graf3d/eve/inc/TEvePathMark.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEvePathMark.h,2,['depend'],['depends']
Integrability,"// Extract the -D for the dependency generation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:26,depend,dependency,26,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['depend'],['dependency']
Integrability,// Extract the message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp:15,message,message,15,interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,1,['message'],['message']
Integrability,// FIXME! Rules for properties are somewhat different that those; // for assignments. Use a new routine to consolidate all cases;; // specifically for property redeclarations as well as for ivars.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:96,rout,routine,96,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['rout'],['routine']
Integrability,"// FIXME(PR43094): When merging comdat groups, lld can select a local; // symbol as the signature symbol even though it cannot be accessed; // outside that symbol's TU. The relative vtables ABI would make; // __cxa_pure_virtual and __cxa_deleted_virtual local symbols, and; // depending on link order, the comdat groups could resolve to the one; // with the local symbol. As a temporary solution, fill these components; // with zero. We shouldn't be calling these in the first place anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp:277,depend,depending,277,interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,1,['depend'],['depending']
Integrability,// FIXME(mtrofin): ORE message when the recommendation cannot be taken.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InsertPrefetch.cpp:23,message,message,23,interpreter/llvm-project/llvm/lib/Target/X86/X86InsertPrefetch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InsertPrefetch.cpp,1,['message'],['message']
Integrability,// FIXME. Consolidate this routine with RewriteBlockPointerType.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:27,rout,routine,27,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rout'],['routine']
Integrability,"// FIXME. We should have DS.getTypeSpecTypeEndLoc(). But, it requires; // addition field. What we have is good enough for display of location; // of 'fixit' on interface name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:160,interface,interface,160,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['interface'],['interface']
Integrability,// FIXME: A templated statement expression should have an associated; // DeclContext so that nested declarations always have a dependent context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:127,depend,dependent,127,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['depend'],['dependent']
Integrability,"// FIXME: A variable template is a dependent context, but is not a; // DeclContext. A context within it (such as a lambda-expression); // should be considered dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp:35,depend,dependent,35,interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,2,['depend'],['dependent']
Integrability,// FIXME: ABI-dependent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp:14,depend,dependent,14,interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,1,['depend'],['dependent']
Integrability,// FIXME: Add ObjC Message support.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallDescription.cpp:19,Message,Message,19,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallDescription.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallDescription.cpp,1,['Message'],['Message']
Integrability,// FIXME: Add error propagation to the interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/SectionMemoryManager.cpp:39,interface,interface,39,interpreter/llvm-project/llvm/lib/ExecutionEngine/SectionMemoryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/SectionMemoryManager.cpp,1,['interface'],['interface']
Integrability,// FIXME: Add locking 'primitives' to CFG for @synchronized.; // Inline the body.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:47,synchroniz,synchronized,47,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['synchroniz'],['synchronized']
Integrability,// FIXME: Add support for dependent-sized array types in C++?; // Does it even make sense to build a CFG for an uninstantiated template?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:26,depend,dependent-sized,26,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,2,['depend'],['dependent-sized']
Integrability,"// FIXME: Add this assertion to make sure we always get instantiation points.; // assert(!Loc.isInvalid() && ""Invalid location in RequireCompleteType"");; // FIXME: Add this assertion to help us flush out problems with; // checking for dependent types and type-dependent expressions.; //; // assert(!T->isDependentType() &&; // ""Can't ask whether a dependent type is complete"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:235,depend,dependent,235,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,3,['depend'],['dependent']
Integrability,"// FIXME: All of this stuff should be part of the target interface; // somehow. It is currently here because it is not clear how to factor; // the targets to support this, since the Targets currently live in a; // layer below types n'stuff.; /// ABIInfo - Target specific hooks for defining how a type should be; /// passed or returned from functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h:57,interface,interface,57,interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfo.h,1,['interface'],['interface']
Integrability,"// FIXME: Any access specifiers is supposed to make this no longer interface; // like.; // If this isn't a 'special' type, it must have a single interface-like base.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:67,interface,interface,67,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,2,['interface'],"['interface', 'interface-like']"
Integrability,// FIXME: Are the message operand types backward?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/PseudoLoweringEmitter.cpp:18,message,message,18,interpreter/llvm-project/llvm/utils/TableGen/PseudoLoweringEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/PseudoLoweringEmitter.cpp,1,['message'],['message']
Integrability,"// FIXME: As usual, we could be more specific in our error messages, but; // that better waits until we've got types with source locations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp:59,message,messages,59,interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,1,['message'],['messages']
Integrability,"// FIXME: Assert that Opcode is either InsertElement or ExtractElement.; // This is mentioned in the interface description and respected by all; // callers, but never asserted upon.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp:101,interface,interface,101,interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/TargetTransformInfo.cpp,2,['interface'],['interface']
Integrability,// FIXME: Assuming no overlap here breaks guaranteed copy elision for base; // class subobjects. These cases may need to be revisited depending on the; // resolution of the relevant core issue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:134,depend,depending,134,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['depend'],['depending']
Integrability,"// FIXME: Both positive and negative access functions will be placed; // into the same reference group, resulting in a bi-directional array; // access such as:; // for (i = N; i > 0; i--); // A[i] = A[N - i];; // having the same cost calculation as a single dimention access pattern; // for (i = 0; i < N; i++); // A[i] = A[i];; // when in actuality, depending on the array size, the first example; // should have a cost closer to 2x the second due to the two cache; // access per iteration from opposite ends of the array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp:351,depend,depending,351,interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopCacheAnalysis.cpp,1,['depend'],['depending']
Integrability,// FIXME: Calls have a *really* confusing interface around attributes; // with values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:42,interface,interface,42,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['interface'],['interface']
Integrability,// FIXME: Check for protocols to which the class type is already; // known to conform.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:20,protocol,protocols,20,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['protocol'],['protocols']
Integrability,"// FIXME: ColumnWidth actually depends on the start column, we need to; // take this into account when the token is moved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatTokenLexer.cpp:31,depend,depends,31,interpreter/llvm-project/clang/lib/Format/FormatTokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatTokenLexer.cpp,2,['depend'],['depends']
Integrability,// FIXME: Consider if reducing the size of this enum (having Partition and; // Named modules only) then representing interface/implementation separately; // is more efficient.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h:117,interface,interface,117,interpreter/llvm-project/clang/include/clang/Basic/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h,1,['interface'],['interface']
Integrability,// FIXME: Consider whether this should be an invalid loc since the loc; // is not actually pointing to a protocol name reference but to the; // typedef reference. Note that the base class name loc is also pointing; // at the typedef.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:105,protocol,protocol,105,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocol']
Integrability,"// FIXME: Currently ObjC method declarations are incorrectly being; // reported as top-level declarations, even though their DeclContext; // is the containing ObjC @interface/@implementation. This is a; // fundamental problem in the parser right now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:165,interface,interface,165,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,2,['interface'],['interface']
Integrability,"// FIXME: Currently, if there're more than one job, we disable; // -fintegrate-cc1. If we're no longer a integrated-cc1 job, fallback to; // out-of-process execution. See discussion in https://reviews.llvm.org/D74447",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Job.cpp:105,integrat,integrated-,105,interpreter/llvm-project/clang/lib/Driver/Job.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Job.cpp,1,['integrat'],['integrated-']
Integrability,"// FIXME: Depending on whether we choose to deprecate structural symbols,; // this may become much stricter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymExpr.h:10,Depend,Depending,10,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymExpr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SymExpr.h,1,['Depend'],['Depending']
Integrability,// FIXME: Does injected class name need to be in the redeclarations chain?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:15,inject,injected,15,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['inject'],['injected']
Integrability,"// FIXME: Dropping the reference type on the type into makes it; // impossible to correctly implement catch-by-reference; // semantics for pointers. Unfortunately, this is what all; // existing compilers do, and it's not clear that the standard; // personality routine is capable of doing this right. See C++ DR 388:; // http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#388",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:261,rout,routine,261,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['rout'],['routine']
Integrability,"// FIXME: ElaboratedType, DependentNameType,; // DependentTemplateSpecializationType, ObjCObjectType",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h:26,Depend,DependentNameType,26,interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,2,['Depend'],"['DependentNameType', 'DependentTemplateSpecializationType']"
Integrability,// FIXME: Eliminate this dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:25,depend,dependency,25,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['depend'],['dependency']
Integrability,"// FIXME: Enable this message.; //Error(""FillLeaves"", ""Branch address not set for branch '%s'!"", GetName());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:22,message,message,22,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['message'],['message']
Integrability,"// FIXME: Find the right type or make sure we have an interface to update; // the clang::Type in the cling::Value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:54,interface,interface,54,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['interface'],['interface']
Integrability,// FIXME: Fix `NestedNameSpecifierLoc::getLocalSourceRange` for the; // `DependentTemplateSpecializationType` case.; /// Given a nested-name-specifier return the range for the last name; /// specifier.; ///; /// e.g. `std::T::template X<U>::` => `template X<U>::`,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp:73,Depend,DependentTemplateSpecializationType,73,interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,1,['Depend'],['DependentTemplateSpecializationType']
Integrability,"// FIXME: Fix a dependency issue by instantiating the ABI object to some; // default based off the triple. The triple doesn't describe the target; // fully, but any external user of the API that uses the MCTargetStreamer; // would otherwise crash on assertion failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp:16,depend,dependency,16,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsTargetStreamer.cpp,1,['depend'],['dependency']
Integrability,// FIXME: Flat addresses may contextually need to be split to 32-bit parts; // if they may alias scratch depending on the subtarget. This needs to be; // moved to custom handling to use addressMayBeAccessedAsPrivate,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:105,depend,depending,105,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['depend'],['depending']
Integrability,"// FIXME: For now ignore 'IncompleteImpl'.; // Previously we grouped all unimplemented methods under a single; // warning, but some users strongly voiced that they would prefer; // separate warnings. We will give that approach a try, as that; // matches what we do with protocols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:270,protocol,protocols,270,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['protocol'],['protocols']
Integrability,"// FIXME: Forward declarations of Objective-C classes and protocols; // are not directly exposed, but we want code completion to treat them; // like a definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp:58,protocol,protocols,58,interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,1,['protocol'],['protocols']
Integrability,// FIXME: GCC does not appear to mangle the template arguments when; // the template in question is a dependent template name. Should we; // emulate that badness?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:102,depend,dependent,102,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,4,['depend'],['dependent']
Integrability,"// FIXME: GetAbsDifference tries to compute the length of the function; // immediately, before the whole file is emitted, but in general; // that's impossible: the size in bytes of certain assembler directives; // like .align and .fill is not known until the whole file is parsed and; // relaxations are applied. Currently, GetAbsDifference fails with a fatal; // error in that case. (We mostly don't hit this because inline assembly; // specifying those directives is rare, and we don't normally try to; // align loops on AArch64.); //; // There are two potential approaches to delaying the computation. One,; // we could emit something like "".word (endfunc-beginfunc)/4+0x10800000"",; // as long as we have some conservative estimate we could use to prove; // that we don't need to split the unwind data. Emitting the constant; // is straightforward, but there's no existing code for estimating the; // size of the function.; //; // The other approach would be to use a dedicated, relaxable fragment,; // which could grow to accommodate splitting the unwind data if; // necessary. This is more straightforward, since it automatically works; // without any new infrastructure, and it's consistent with how we handle; // relaxation in other contexts. But it would require some refactoring; // to move parts of the pdata/xdata emission into the implementation of; // a fragment. We could probably continue to encode the unwind codes; // here, but we'd have to emit the pdata, the xdata header, and the; // epilogue scopes later, since they depend on whether the we need to; // split the unwind data.; //; // If this is fixed, remove code in AArch64ISelLowering.cpp that; // disables loop alignment on Windows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp:1538,depend,depend,1538,interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCWin64EH.cpp,1,['depend'],['depend']
Integrability,"// FIXME: Going to the primary template here isn't really correct, but; // unfortunately we accept a Decl matcher for the base class not a Type; // matcher, so it's the best thing we can do with our current interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp:207,interface,interface,207,interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,1,['interface'],['interface']
Integrability,// FIXME: Hack. We rely on AssertZext to be able to fold DS addressing; // modes on SI to know the high bits are 0 so pointer adds don't wrap. We; // can't represent this with range metadata because it's only allowed for; // integer types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp:137,wrap,wrap,137,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerKernelArguments.cpp,1,['wrap'],['wrap']
Integrability,"// FIXME: Handle C99's complex types, block pointers and Obj-C++ interface; // pointers.; // Assume r-value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:65,interface,interface,65,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['interface'],['interface']
Integrability,// FIXME: Handle dependent types that aren't yet object types.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:17,depend,dependent,17,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['depend'],['dependent']
Integrability,// FIXME: Having an MCSubtargetInfo on the target machine is a hack due; // to some backends having subtarget feature dependent module level; // code generation. This is similar to the hack in the AsmPrinter for; // module level assembly etc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp:118,depend,dependent,118,interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LLVMTargetMachine.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: Ideally we'd look at the receiver interface here, but that's not; // useful for init, because alloc returns 'id'. In theory, this could lead; // to false positives, for example if there existed a class that had an; // initWithObjects: implementation that does accept non-Objective-C pointer; // types, but the chance of that happening is pretty small compared to the; // gains that this analysis gives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp:44,interface,interface,44,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BasicObjCFoundationChecks.cpp,1,['interface'],['interface']
Integrability,"// FIXME: If `Metadata` returns an `llvm::Expected<T>` the `AnyGenerator` will; // construct an `llvm::Expected<llvm::Any>` where no error is present but the; // `llvm::Any` holds the error. This is unlikely but potentially surprising.; // Perhaps the `llvm::Expected` should be unwrapped, or perhaps this should be a; // compile-time error. No solution here is perfect.; //; // Note: This function template accepts any type callable with a MatchResult; // rather than a `std::function` because the return-type needs to be deduced. If; // it accepted a `std::function<R(MatchResult)>`, lambdas or other callable; // types would not be able to deduce `R`, and users would be forced to specify; // explicitly the type they intended to return by wrapping the lambda at the; // call-site.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h:743,wrap,wrapping,743,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,1,['wrap'],['wrapping']
Integrability,"// FIXME: If either type is dependent, we skip the check. This isn't; // correct, since during deduction we're supposed to have replaced each; // template parameter with some unique (non-dependent) placeholder.; // FIXME: If the argument type contains 'auto', we carry on and fail the; // type check in order to force specific types to be more specialized than; // 'auto'. It's not clear how partial ordering with 'auto' is supposed to; // work. Similarly for CTAD, when comparing 'A<x>' against 'A'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:28,depend,dependent,28,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['depend'],['dependent']
Integrability,"// FIXME: If someone forgets an @end on a protocol, this loop will; // continue to eat up tons of stuff and spew lots of nonsense errors. It; // would probably be better to bail out if we saw an @class or @interface; // or something like that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:42,protocol,protocol,42,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,2,"['interface', 'protocol']","['interface', 'protocol']"
Integrability,"// FIXME: If the GEP is not inbounds, and there are extra indices after the; // one we'll replace, those could cause the address computation to wrap; // (rendering the IsAllNonNegative() check below insufficient). We can do; // better, ignoring zero indices (and other indices we can prove small; // enough not to wrap).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:144,wrap,wrap,144,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,2,['wrap'],['wrap']
Integrability,"// FIXME: If the name is a dependent name, this lookup won't necessarily; // find it. Does that ever matter?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:27,depend,dependent,27,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: If these aren't protocol references, we'll need different; // completions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:26,protocol,protocol,26,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['protocol'],['protocol']
Integrability,"// FIXME: If this is expression is PCRel or not should not depend on what; // the expression looks like. Given that this is just a general expression,; // it should probably be FK_Data_4 and whatever is producing; //; // s_add_u32 s2, s2, (extern_const_addrspace+16; //; // And expecting a PCRel should instead produce; //; // .Ltmp1:; // s_add_u32 s2, s2, (extern_const_addrspace+16)-.Ltmp1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCCodeEmitter.cpp:59,depend,depend,59,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCCodeEmitter.cpp,1,['depend'],['depend']
Integrability,"// FIXME: If we get an error during a bridge cast, should we report it?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:38,bridg,bridge,38,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['bridg'],['bridge']
Integrability,"// FIXME: If we're merging, make sure that the protocol list is the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:47,protocol,protocol,47,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,3,['protocol'],['protocol']
Integrability,"// FIXME: Ignore a class template in a dependent context, these are not; // linked properly with their redeclarations, ending up with duplicate; // USRs.; // See comment ""Friend templates are visible in fairly strange ways."" in; // SemaTemplate.cpp which precedes code that prevents the friend template; // from becoming visible from the enclosing context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/IndexDecl.cpp:39,depend,dependent,39,interpreter/llvm-project/clang/lib/Index/IndexDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/IndexDecl.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: Implement a wrapper around __builtin_unreachable() and use it here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:22,wrap,wrapper,22,core/foundation/src/FoundationUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx,1,['wrap'],['wrapper']
Integrability,// FIXME: Implement warning dependent on NSCopying being; // implemented.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:28,depend,dependent,28,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['depend'],['dependent']
Integrability,// FIXME: Implementation of a class with no @interface (legacy) does not; // produce correct synthesis as yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:45,interface,interface,45,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['interface'],['interface']
Integrability,"// FIXME: In case when the modulemap is not yet loaded we will return the; // wrong result. Consider a call to HasPCMForLibrary(../test/libEvent.so); // We will only load the modulemap for libEvent.so after we dlopen libEvent; // which may happen after calling this interface. Maybe we should also check; // if there is a Event.pcm file and a module.modulemap, load it and return; // true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:266,interface,interface,266,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"// FIXME: In order to attach the temporaries, wrap the statement into; // a StmtExpr; currently this is only used for asm statements.; // This is hacky, either create a new CXXStmtWithTemporaries statement or; // a new AsmStmtWithTemporaries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:46,wrap,wrap,46,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['wrap'],['wrap']
Integrability,"// FIXME: In some cases, VLDRS can be changed to a VLD1DUPd32 which defines; // the full D-register by loading the same value to both lanes. The; // instruction is micro-coded with 2 uops, so don't do this until we can; // properly schedule micro-coded instructions. The dispatcher stalls cause; // too big regressions.; // Insert the dependency-breaking FCONSTD before MI.; // 96 is the encoding of 0.5, but the actual value doesn't matter here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:335,depend,dependency-breaking,335,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['dependency-breaking']
Integrability,"// FIXME: Infer the maximum possible offset depending on the actual users; // (these max offsets are different for the users inside Thumb or ARM; // functions), see the code that passes in the offset in the ARM backend; // for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h:44,depend,depending,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h,1,['depend'],['depending']
Integrability,// FIXME: Injecting into the DAGISel pipeline seems to cause issues with; // analyses needing to be re-run. This can result in being unable to; // schedule passes (particularly with 'Function Alias Analysis; // Results'). It's not entirely clear why but AFAICT this seems to be; // due to one FunctionPassManager not being able to use analyses from a; // previous one. As we're injecting a ModulePass we break the usual; // pass manager into two. GlobalISel with the fallback path disabled; // and -run-pass seem to be unaffected. The majority of GlobalISel; // testing uses -run-pass so this probably isn't too bad.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:10,Inject,Injecting,10,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,2,"['Inject', 'inject']","['Injecting', 'injecting']"
Integrability,"// FIXME: Instead of creating a CXXConstructExpr of array type here,; // wrap a class-typed CXXConstructExpr in an ArrayInitLoopExpr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:73,wrap,wrap,73,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['wrap'],['wrap']
Integrability,// FIXME: Integrate this lookup step into LookupParsedName.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:10,Integrat,Integrate,10,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['Integrat'],['Integrate']
Integrability,// FIXME: Interface for getConstrainedRegClassForOperand needs work. The; // regbank check here is to know why getConstrainedRegClassForOperand failed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp:10,Interface,Interface,10,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUInstructionSelector.cpp,1,['Interface'],['Interface']
Integrability,// FIXME: Is this necessary? Why only for protocol?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:42,protocol,protocol,42,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['protocol'],['protocol']
Integrability,"// FIXME: It seems like this entire block, and several around it should be; // wrapped in isObjC, but for now we just use it here as this is where it; // was being used previously.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:79,wrap,wrapped,79,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['wrap'],['wrapped']
Integrability,// FIXME: It would be more efficient to teach Twine to tell us its size and; // then add a routine there to fill in an allocated char* with the contents; // of the string.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp:91,rout,routine,91,interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,1,['rout'],['routine']
Integrability,"// FIXME: It would be useful to check constexpr function templates, but at the; // moment the constant expression evaluator cannot cope with the non-rigorous; // ASTs which we build for dependent expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:186,depend,dependent,186,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: It's currently possible that we generate a wrapper that is similar to the; // call we use to initialize k2. In this case we generate a wrapper that doesn't; // compile and we crash. As it seems to be impossible/difficult to call template; // operators through the interface we use in the other tests, we just demonstrate; // the failing declaration of the wrapper here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx:53,wrap,wrapper,53,core/metacling/test/TClingCallFuncTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingCallFuncTests.cxx,4,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"// FIXME: It's slightly absurd to create a new diagnostics engine here, but; // the other options that are available today are worse:; //; // 1. Teach DiagnosticsConsumers to emit diagnostics to the engine they are a; // part of. The DiagnosticsEngine would need to know not to send; // diagnostics back to the consumer that failed. This would require us to; // rework ChainedDiagnosticsConsumer and teach the engine about multiple; // consumers, which is difficult today because most APIs interface with; // consumers rather than the engine itself.; //; // 2. Pass a DiagnosticsEngine to SDiagsWriter on creation - this would need; // to be distinct from the engine the writer was being added to and would; // normally not be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp:490,interface,interface,490,interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SerializedDiagnosticPrinter.cpp,1,['interface'],['interface']
Integrability,// FIXME: Kill this with fire once we have a new JIT linker: this is only here; // so that we can re-use RuntimeDyld's implementation without twisting the; // interface any further for ORC's purposes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp:159,interface,interface,159,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp,1,['interface'],['interface']
Integrability,"// FIXME: LiveIntervals will be updated to remove its dependence on; // LiveVariables to improve compilation time and eliminate bizarre pass; // dependencies. Until then, we can't change much in -O0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:54,depend,dependence,54,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,2,['depend'],"['dependence', 'dependencies']"
Integrability,"// FIXME: LiveVariables should not be necessary here!; // PPCTLSDynamicCallPass uses LiveIntervals which previously dependent on; // LiveVariables. This (unnecessary) dependency has been removed now,; // however a stage-2 clang build fails without LiveVariables computed here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:116,depend,dependent,116,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,2,['depend'],"['dependency', 'dependent']"
Integrability,"// FIXME: Load constants into registers (e.g. with fld1) to not break; // instructions like x87.; // Ideally we would like the only limitation on executing instructions to be the; // availability of the CPU resources (e.g. execution ports) needed to execute; // them, instead of the availability of their data dependencies.; // To achieve that, one approach is to generate instructions that do not have; // data dependencies between them.; //; // For some instructions, this is trivial:; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // For the above snippet, haswell just renames rax four times and executes the; // four instructions two at a time on P23 and P0126.; //; // For some instructions, we just need to make sure that the source is; // different from the destination. For example, IDIV8r reads from GPR and; // writes to AX. We just need to ensure that the Var is assigned a; // register which is different from AX:; // idiv bx; // idiv bx; // idiv bx; // idiv bx; // The above snippet will be able to fully saturate the ports, while the same; // with ax would issue one uop every `latency(IDIV8r)` cycles.; //; // Some instructions make this harder because they both read and write from; // the same register:; // inc rax; // inc rax; // inc rax; // inc rax; // This has a data dependency from each instruction to the next, limit the; // number of instructions that can be issued in parallel.; // It turns out that this is not a big issue on recent Intel CPUs because they; // have heuristics to balance port pressure. In the snippet above, subsequent; // instructions will end up evenly distributed on {P0,P1,P5,P6}, but some CPUs; // might end up executing them all on P0 (just because they can), or try; // avoiding P5 because it's usually under high pressure from vector; // instructions.; // This issue is even more important for high-latency instructions because; // they increase the idle time of the CPU, e.g. :",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp:310,depend,dependencies,310,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp,2,['depend'],['dependencies']
Integrability,"// FIXME: Locals can be backed by caller allocas (sret, byval).; // Note: trackAssignments doesn't respect dbg.declare's IR positions (as it; // doesn't ""understand"" dbg.declares). However, this doesn't appear to break; // any rules given this description of dbg.declare from; // llvm/docs/SourceLevelDebugging.rst:; //; // It is not control-dependent, meaning that if a call to llvm.dbg.declare; // exists and has a valid location argument, that address is considered to; // be the true home of the variable across its entire lifetime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:342,depend,dependent,342,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: Looking up dependency modules by filename is horrible. Let's; // start fixing this with prebuilt, explicit and implicit modules and see; // how it goes...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp:21,depend,dependency,21,interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp,1,['depend'],['dependency']
Integrability,// FIXME: Make CFI on member function calls compatible with cross-DSO CFI.; // There are currently two problems:; // - Virtual function call checks need to pass a pointer to the function; // address to llvm.type.test and a pointer to the address point to the; // diagnostic function. Currently we pass the same pointer to both; // places.; // - Non-virtual function call checks may need to check multiple type; // identifiers.; // Fixing both of those may require changes to the cross-DSO CFI; // interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp:497,interface,interface,497,interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/SanitizerArgs.cpp,1,['interface'],['interface']
Integrability,// FIXME: Many of these should probably return false but MIPS16 isn't; // supported by the integrated assembler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp:91,integrat,integrated,91,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsELFObjectWriter.cpp,1,['integrat'],['integrated']
Integrability,"// FIXME: Missing: @protocol, @selector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:20,protocol,protocol,20,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['protocol'],['protocol']
Integrability,// FIXME: Move this out of the main ASTRecordWriter interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:52,interface,interface,52,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,3,['interface'],['interface']
Integrability,// FIXME: ObjCClassRef/ObjCProtocolRef for forward class/protocol; // declarations is a mismatch with the compiler semantics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:57,protocol,protocol,57,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['protocol'],['protocol']
Integrability,"// FIXME: On AArch64, this depends on the type.; // Basically, the addressable offsets are up to 4095 * Ty.getSizeInBytes().; // and the offset has to be a multiple of the related size in bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp:27,depend,depends,27,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,1,['depend'],['depends']
Integrability,"// FIXME: Once remat is capable of dealing with instructions with register; // operands, expand this into two nodes instead of using a wrapper node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:135,wrap,wrapper,135,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['wrap'],['wrapper']
Integrability,"// FIXME: Once the integrated assembler supports full register names, tie this; // to the verbose-asm setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp:19,integrat,integrated,19,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCInstPrinter.cpp,1,['integrat'],['integrated']
Integrability,// FIXME: Override value name discarding when asan or msan is used because the; // backend passes depend on the name of the alloca in order to print out; // names.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:98,depend,depend,98,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['depend'],['depend']
Integrability,"// FIXME: Parameters of pointer to functions (y below) that are themselves; // parameters (p below) can have their ParentDC set to the translation-unit; // - thus we can not consistently check if the ParentDC of such a parameter; // is Dependent or/and a FunctionOrMethod.; // For e.g. this code, during Template argument deduction tries to; // find an instantiated decl for (T y) when the ParentDC for y is; // the translation unit.; // e.g. template <class T> void Foo(auto (*p)(T y) -> decltype(y())) {}; // float baz(float(*)()) { return 0.0; }; // Foo(baz);; // The better fix here is perhaps to ensure that a ParmVarDecl, by the time; // it gets here, always has a FunctionOrMethod as its ParentDC??; // For now:; // - as long as we have a ParmVarDecl whose parent is non-dependent and; // whose type is not instantiation dependent, do nothing to the decl; // - otherwise find its instantiated decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:236,Depend,Dependent,236,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,3,"['Depend', 'depend']","['Dependent', 'dependent']"
Integrability,// FIXME: Privatize once interface is stable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:25,interface,interface,25,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['interface'],['interface']
Integrability,// FIXME: Provide support for variadic template functions.; // Ignore type-dependent call expressions entirely.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:75,depend,dependent,75,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['depend'],['dependent']
Integrability,// FIXME: Remove dependence on DwarfEmitterImpl/AsmPrinter and emit DIEs; // directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerUnit.cpp:17,depend,dependence,17,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerUnit.cpp,1,['depend'],['dependence']
Integrability,// FIXME: RequireCompleteDeclContext doesn't check dependent contexts; // properly. Work around it here for now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:51,depend,dependent,51,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['depend'],['dependent']
Integrability,// FIXME: RequiresExpr should store dependent diagnostics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp:36,depend,dependent,36,interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConcept.cpp,1,['depend'],['dependent']
Integrability,// FIXME: Return false directly if we don't have an interface dependency on the; // translation unit containing D.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:52,interface,interface,52,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"// FIXME: See ScheduleDAGSDNodes::EmitCopyFromReg. For now, scheduler; // emits a copy from the physical register to a virtual register unless; // it requires a cross class copy (cost < 0). That means we are only; // treating ""expensive to copy"" register dependency as physical register; // dependency. This may change in the future though.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:255,depend,dependency,255,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,2,['depend'],['dependency']
Integrability,"// FIXME: Should perform GVN again after PRE does something. PRE can move; // computations into blocks where they become fully redundant. Note that; // we can't do this until PRE's critical edge splitting updates memdep.; // Actually, when this happens, we should just fully integrate PRE into GVN.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:275,integrat,integrate,275,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['integrat'],['integrate']
Integrability,"// FIXME: Should use MipsCCState::getSpecialCallingConvForCallee, but it; // depends on looking directly at the call target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsCallLowering.cpp:77,depend,depends,77,interpreter/llvm-project/llvm/lib/Target/Mips/MipsCallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsCallLowering.cpp,1,['depend'],['depends']
Integrability,"// FIXME: Strictly speaking MFHC1 only reads the top 32-bits however, we; // claim to read the whole 64-bits as part of a white lie used to; // temporarily work around a widespread bug in the -mfp64 support.; // The problem is that none of the 32-bit fpu ops mention the fact; // that they clobber the upper 32-bits of the 64-bit FPR. Fixing that; // requires a major overhaul of the FPU implementation which can't; // be done right now due to time constraints.; // MFHC1 is one of two instructions that are affected since they are; // the only instructions that don't read the lower 32-bits.; // We therefore pretend that it reads the bottom 32-bits to; // artificially create a dependency and prevent the scheduler; // changing the behaviour of the code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp:680,depend,dependency,680,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp,1,['depend'],['dependency']
Integrability,"// FIXME: Teach the constant evaluator to deal with the non-dependent parts; // of value-dependent expressions, and use it here to determine whether the; // initializer is a potential constant expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:60,depend,dependent,60,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,2,['depend'],['dependent']
Integrability,// FIXME: The .addReg(DstReg) is a white lie used to temporarily work; // around a widespread bug in the -mfp64 support.; // The problem is that none of the 32-bit fpu ops mention the fact; // that they clobber the upper 32-bits of the 64-bit FPR. Fixing that; // requires a major overhaul of the FPU implementation which can't; // be done right now due to time constraints.; // MTHC1 is one of two instructions that are affected since they are; // the only instructions that don't read the lower 32-bits.; // We therefore pretend that it reads the bottom 32-bits to; // artificially create a dependency and prevent the scheduler; // changing the behaviour of the code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp:593,depend,dependency,593,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEInstrInfo.cpp,1,['depend'],['dependency']
Integrability,"// FIXME: The C++ standard does not clearly specify what happens in the; // case where the object type is dependent, and implementations vary. In; // Clang, we treat a name after a . or -> as a template-name if lookup; // finds a non-dependent member or member of the current instantiation that; // is a type template, or finds no such members and lookup in the context; // of the postfix-expression finds a type template. In the latter case, the; // name is nonetheless dependent, and we may resolve it to a member of an; // unknown specialization when we come to instantiate the template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:106,depend,dependent,106,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,3,['depend'],['dependent']
Integrability,// FIXME: The LEB128 routines are copied and only slightly modified out of; // LEB128.h.; /// Adds the unsigned in \p Value to the hash encoded as a ULEB128.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DIEHash.cpp:21,rout,routines,21,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DIEHash.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DIEHash.cpp,1,['rout'],['routines']
Integrability,"// FIXME: The ScheduleDAG currently loses information about which of a; // node's values is consumed by each dependence. Consequently, if the node; // defines multiple register classes, we don't know which to pressurize; // here. Instead the following loop consumes the register defs in an; // arbitrary order. At least it handles the common case of clustered loads; // to the same class. For precise liveness, each SDep needs to indicate the; // result number. But that tightly couples the ScheduleDAG with the; // SelectionDAG making updates tricky. A simpler hack would be to attach a; // value type or register class to SDep.; //; // The most important aspect of register tracking is balancing the increase; // here with the reduction further below. Note that this SU may use multiple; // defs in PredSU. The can't be determined here, but we've already; // compensated by reducing NumRegDefsLeft in PredSU during; // ScheduleDAGSDNodes::AddSchedEdges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:109,depend,dependence,109,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['depend'],['dependence']
Integrability,// FIXME: The cross-recipe dependency on VPReductionPHIRecipe is temporary; // and will be removed by breaking up the recipe further.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp:27,depend,dependency,27,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanRecipes.cpp,1,['depend'],['dependency']
Integrability,"// FIXME: The order of traversal here matters and depends on the order of; // lookup results, which happens to be (mostly) oldest-to-newest, but we; // shouldn't rely on that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:50,depend,depends,50,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['depend'],['depends']
Integrability,// FIXME: The standalone executor is currently just a wrapper of `ClangTool`.; // Merge `ClangTool` implementation into the this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/StandaloneExecution.h:54,wrap,wrapper,54,interpreter/llvm-project/clang/include/clang/Tooling/StandaloneExecution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/StandaloneExecution.h,1,['wrap'],['wrapper']
Integrability,"// FIXME: The tied operands checking is not yet integrated with the; // framework for reporting multiple near misses. To prevent invalid; // formats from being matched with an alias if a tied-operands check; // would otherwise have disallowed it, we just disallow such constructs; // in TableGen completely.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:48,integrat,integrated,48,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['integrat'],['integrated']
Integrability,"// FIXME: These are defined in one place, but properties in class extensions; // end up being back-patched into the main interface. See; // Sema::HandlePropertyInClassExtension for the offending code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp:121,interface,interface,121,interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTCommon.cpp,1,['interface'],['interface']
Integrability,// FIXME: These need linker information via a; // TBD new interface.; /*DynamicExportSymbols=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp:58,interface,interface,58,interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOCodeGenerator.cpp,3,['interface'],['interface']
Integrability,"// FIXME: These operations were unfortunately named. fminnum/fmaxnum do not; // follow the IEEE behavior for signaling nans and follow libm's fmin/fmax,; // and currently there isn't a nice wrapper in APFloat for the version with; // correct snan handling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp:190,wrap,wrapper,190,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Utils.cpp,1,['wrap'],['wrapper']
Integrability,// FIXME: These two aren't really implemented and just exist in the feature; // list for __builtin_cpu_supports. So omit their dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp:127,depend,dependencies,127,interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/X86TargetParser.cpp,1,['depend'],['dependencies']
Integrability,"// FIXME: This call uses the word ""API"" as the description of the bug;; // it should be replaced by a better error message (if this unlikely; // situation continues to exist as a separate bug type).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp:115,message,message,115,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CStringChecker.cpp,1,['message'],['message']
Integrability,"// FIXME: This can trigger the instantiation of the initializer of a; // variable, which can cause the expression to become value-dependent; // or error-dependent. Do we need to propagate the new dependence bits?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:130,depend,dependent,130,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,3,['depend'],"['dependence', 'dependent']"
Integrability,// FIXME: This computed padding is likely wrong since it depends on inverse; // usage order.; //; // FIXME: It is also possible that if we're allowed to use all of the memory; // could end up using more than the maximum due to alignment padding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp:57,depend,depends,57,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPromoteAlloca.cpp,1,['depend'],['depends']
Integrability,// FIXME: This currently depends on the order we add facts. Ideally we; // would first add all known facts and only then try to add additional; // facts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:25,depend,depends,25,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['depend'],['depends']
Integrability,"// FIXME: This cutoff value is CPU dependent and should be moved to; // TargetTransformInfo once we consider enabling this on other platforms.; // The value is expressed as a ProfileSummaryInfo integer percentile cutoff.; // Defaults to 999950, i.e. all blocks colder than 99.995 percentile are split.; // The default was empirically determined to be optimal when considering cutoff; // values between 99%-ile to 100%-ile with respect to iTLB and icache metrics on; // Intel CPUs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunctionSplitter.cpp:35,depend,dependent,35,interpreter/llvm-project/llvm/lib/CodeGen/MachineFunctionSplitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunctionSplitter.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: This doesn't consider value-dependent cases, because doing so is; // very difficult. Ideally, we should handle them more gracefully.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:38,depend,dependent,38,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['depend'],['dependent']
Integrability,// FIXME: This emits a different error message than; // diag::err_attribute_wrong_decl_type + ExpectedKernelFunction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:39,message,message,39,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['message'],['message']
Integrability,"// FIXME: This error message could be improved, it would be nice; // to say what the bounds actually are.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:21,message,message,21,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['message'],['message']
Integrability,"// FIXME: This implementation works under the assumption that load/store queue; // entries are reserved at 'instruction dispatched' stage, and released at; // 'instruction executed' stage. This currently matches the behavior of LSUnit.; //; // The current design minimizes the number of events generated by the; // Dispatch/Execute stages, at the cost of doing extra bookkeeping in method; // `onEvent`. However, it introduces a subtle dependency between this view and; // how the LSUnit works.; //; // In future we should add a new ""memory queue"" event type, so that we stop; // making assumptions on how LSUnit internally works (See PR39828).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp:436,depend,dependency,436,interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,1,['depend'],['dependency']
Integrability,// FIXME: This implements a workaround with @property declarations also being; // installed in the DeclContext for the @interface. Eventually this code; // should be removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:120,interface,interface,120,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['interface'],['interface']
Integrability,"// FIXME: This is a horrible workaround to fix the incremental builds.; // The enumerated modules are built by clang impicitly based on #include of; // a header which is contained within that module. The build system has; // no way to track dependencies on them and trigger a rebuild.; // A possible solution can be to disable completely the implicit build of; // modules and each module to be built by rootcling. We need to teach; // rootcling how to build modules with no IO support.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:241,depend,dependencies,241,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['depend'],['dependencies']
Integrability,// FIXME: This is a temporary workaround for the case where clang-format; // sets BreakBeforeParameter to avoid bin packing and this creates a; // completely unnecessary line break after a template type that isn't; // line-wrapped.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:223,wrap,wrapped,223,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['wrap'],['wrapped']
Integrability,"// FIXME: This is broken. CXXRecordDecl::getMostRecentDecl() returns a; // different ""most recent"" declaration from this function for the same; // declaration, because we don't override getMostRecentDeclImpl(). But; // it's not clear that we should override that, because the most recent; // declaration as a CXXRecordDecl sometimes is the injected-class-name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:340,inject,injected-class-name,340,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['inject'],['injected-class-name']
Integrability,// FIXME: This is just a wrapper around throwing an exception.; // Eventually inter-procedural analysis should handle this easily.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NoReturnFunctionChecker.cpp:25,wrap,wrapper,25,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NoReturnFunctionChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NoReturnFunctionChecker.cpp,1,['wrap'],['wrapper']
Integrability,"// FIXME: This is not a generic approach for an interface. We should rework; // this part.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx:48,interface,interface,48,core/foundation/src/FoundationUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/FoundationUtils.cxx,1,['interface'],['interface']
Integrability,// FIXME: This is not quite correct recovery as we don't transform SS; // into the corresponding dependent form (and we don't diagnose missing; // 'template' keywords within SS as a result).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:97,depend,dependent,97,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: This is poor design, the OCD should have a pointer to the category; // decl. Additionally, note that Category can be null for the @implementation; // w/o an @interface case. Sema should just create one for us as it does for; // @implementation so everyone else can live life under a clear blue sky.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:168,interface,interface,168,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['interface'],['interface']
Integrability,"// FIXME: This is possible bug in clang, which will instantiate one and; // the same CXXStaticMemberVar several times. This happens when there are; // two dependent expressions and the first uses another declaration from; // the redeclaration chain. This will force Sema in to instantiate the; // definition (usually the most recent decl in the chain) and then the; // second expression might referece the definition (which was already); // instantiated, but Sema seems not to keep track of these kinds of; // instantiations, even though the points of instantiation are the same!; //; // This should be investigated further when we merge with newest clang.; // This is triggered by running the roottest: ./root/io/newstl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp:155,depend,dependent,155,interpreter/cling/lib/Interpreter/Transaction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Transaction.cpp,1,['depend'],['dependent']
Integrability,"// FIXME: This is pretty much broken by design: hasFP() might be called really; // early, before the stack layout was calculated and thus hasFP() might return; // true or false here depending on the time of call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp:182,depend,depending,182,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.cpp,1,['depend'],['depending']
Integrability,"// FIXME: This is totally the wrong concept. We should not expose an interface; // to be able to tell which component is in the pch and which needs extra; // scaffolding for interactive use. Moreover, some of the ROOT components are; // partially in the pch and this option makes it impossible to express that.; // We should be able to get the list of headers in the pch early and scan; // through them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:69,interface,interface,69,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['interface'],['interface']
Integrability,// FIXME: This logic should be sunk into a target-specific interface so that; // we don't have to recompute the register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:59,interface,interface,59,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['interface'],['interface']
Integrability,"// FIXME: This message sounds scary, should be scary, but incorrectly states; // that all configs are super dangerous. In reality, many of them should be; // accessible to the user. We should create a user-facing subset of config; // options under a different frontend flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp:15,message,message,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp,1,['message'],['message']
Integrability,// FIXME: This method shares a lot of code with; // MCExternalSymbolizer::tryAddingSymbolicOperand. It may be possible; // refactor the MCExternalSymbolizer interface to allow more of this; // implementation to be shared.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/Disassembler/AArch64ExternalSymbolizer.cpp:157,interface,interface,157,interpreter/llvm-project/llvm/lib/Target/AArch64/Disassembler/AArch64ExternalSymbolizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/Disassembler/AArch64ExternalSymbolizer.cpp,1,['interface'],['interface']
Integrability,// FIXME: This needs linker information via a TBD new interface,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:54,interface,interface,54,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['interface'],['interface']
Integrability,"// FIXME: This routine (and other evaluation parts) are *incredibly* sloppy; // about dealing with modifiers. This will ultimately bite us, one day.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp:15,rout,routine,15,interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,1,['rout'],['routine']
Integrability,"// FIXME: This routine is being called mid-way through the loop pass manager; // as loop passes destroy this analysis. That's actually fine, but we have no; // way of expressing that here. Once all of the passes that destroy this are; // hoisted out of the loop pass manager we can add back verification here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp:15,rout,routine,15,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopSimplify.cpp,1,['rout'],['routine']
Integrability,"// FIXME: This should go into the Lexer, but we need to figure out how; // to handle ranges for refactoring in general first - there is no obvious; // good way how to integrate this into the Lexer yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp:167,integrat,integrate,167,interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,1,['integrat'],['integrate']
Integrability,"// FIXME: This whole routine is a hack to work around the lack of proper; // source information in nested-name-specifiers (PR5791). Since we do have; // a beginning source location, we can visit the first component of the; // nested-name-specifier, if it's a single-token component.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:21,rout,routine,21,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['rout'],['routine']
Integrability,// FIXME: This will produce an error if the definition of the interface has; // been imported from a module but is not visible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:62,interface,interface,62,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['interface'],['interface']
Integrability,"// FIXME: This won't track ""self"" in messages to super.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:37,message,messages,37,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,1,['message'],['messages']
Integrability,// FIXME: Try to resolve dependent field references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h:25,depend,dependent,25,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,2,['depend'],['dependent']
Integrability,"// FIXME: Unnamed fields can be handled in various different ways, for; // example, unnamed unions inject all members into the struct namespace!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:99,inject,inject,99,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['inject'],['inject']
Integrability,// FIXME: Use appropriate wrappers for poll.h and mman.h; // to support Windows and remove this linux-only guard.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/X86Counter.cpp:26,wrap,wrappers,26,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/X86Counter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/X86/X86Counter.cpp,2,['wrap'],['wrappers']
