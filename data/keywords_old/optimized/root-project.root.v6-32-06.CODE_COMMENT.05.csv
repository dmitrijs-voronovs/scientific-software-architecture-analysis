quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Bulk locate request for a collection of files; ///; /// param fc: collection of files to be located; /// param addDummyUrl: append a dummy noop URL if the file is not staged or; /// redirector == endpoint; /// returns: < 0 in case of errors, number of files processed; /// otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFileStager.cxx:320,error,errors,320,net/netxng/src/TNetXNGFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFileStager.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calc discriminator and its error for every cell and save it to; /// the cell.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx:113,error,error,113,tmva/tmva/src/PDEFoamDiscriminant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate an UPPER limit on the error made by the classification done; /// by this node. If the S/S+B of the node is f, then according to the; /// training sample, the error rate (fraction of misclassified events by; /// this node) is (1-f); /// Now f has a statistical error according to the binomial distribution; /// hence the error on f can be estimated (same error as the binomial error; /// for efficiency calculations; /// \f$ (\sigma = \sqrt{\frac{(eff(1-eff)}{nEvts}}) \f$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:118,error,error,118,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,6,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return reduced chi-squared between a curve and a histogram.; ///; /// \param[in] curvename Name of the curve or nullptr for last curve; /// \param[in] histname Name of the histogram to compare to or nullptr for last added histogram; /// \param[in] nFitParam If non-zero, reduce the number of degrees of freedom by this; /// number. This means that the curve was fitted to the data with nFitParam floating; /// parameters, which needs to be reflected in the calculation of \f$\chi^2 / \mathrm{ndf}\f$.; ///; /// \return \f$ \chi^2 / \mathrm{ndf} \f$ between the plotted curve and the data.; ///; /// \note The \f$ \chi^2 \f$ is calculated between a *plot of the original distribution* and the data.; /// It therefore has more rounding errors than directly calculating the \f$ \chi^2 \f$ from a PDF or; /// function. To do this, use RooAbsReal::createChi2(RooDataHist&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:834,error,errors,834,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate average cell target in every cell and save them to the; /// cell. Cell element 0 will contain the average target and cell; /// element 1 will contain the error on the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx:250,error,error,250,tmva/tmva/src/PDEFoamTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize; /// Throughout the calculation, we use Kahan's algorithm for summing to; /// prevent loss of precision - this is a factor four more expensive than; /// straight addition, but since evaluating the PDF is usually much more; /// expensive than that, we tolerate the additional cost...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:416,toler,tolerate,416,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,1,['toler'],['tolerate']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate contribution to internal error due to error on 'x' coordinates; /// at point i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:121,error,error,121,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate current value of object, with error tracing wrapper",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:126,error,error,126,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate pull. Use asymmetric error if defined in measurement,; /// otherwise use symmetric error. If measurement has no error; /// return zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:117,error,error,117,roofit/roofitcore/src/RooPullVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the checksum of the indicated dataset at 'path' and save it to the; /// appropriate file 'md5path'. The MD5 string is returned in 'md5sum'.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:268,error,error,268,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the error on the Mva value; ///; /// If `fSigBgSeparated == true` the error is calculated from the; /// number of events in the signal and background PDEFoam cells.; ///; /// If `fSigBgSeparated == false`, the error is taken directly from; /// the PDEFoam cell.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:100,error,error,100,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; /// To be called at the end of the MC run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx:133,toler,tolerance,133,math/foam/src/TFoamMaxwt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; /// using information stored in two histograms.; /// To be called at the end of the MC run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx:133,toler,tolerance,133,math/foam/src/TFoamMaxwt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamMaxwt.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates the WERR, external parameter errors; ///; /// and the global correlation coefficients, to be called; /// whenever a new covariance matrix is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:126,error,errors,126,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,"['avail', 'error']","['available', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates the external error matrix from the internal matrix; ///; /// Note that if the matrix is declared like Double_t matrix[5][5]; /// in the calling program, one has to call mnemat with, eg; ///; /// gMinuit->mnemat(&matrix[0][0],5);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:110,error,error,110,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Called when the client is not alive anymore (i.e. when kKeepAlive; /// has failed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:116,alive,alive,116,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['alive'],['alive']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Called when the client is not alive anymore; terminate the session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:116,alive,alive,116,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,2,['alive'],['alive']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result.; ///; /// List of possible commands in the `cmdList`:; ///; /// <table>; /// <tr><th> Type of CmdArg <th> Effect on \f$ \chi^2 \f$; /// <tr><td>; /// <tr><td> `DataError()` <td> Choose between:; /// - RooAbsData::Expected: Expected Poisson error (\f$ \sqrt{n_\text{expected}} \f$ from the PDF).; /// - RooAbsData::SumW2: The observed error from the square root of the sum of weights,; /// i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; /// - RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \f$ n_\text{observed} \f$.; /// If for a given bin \f$ n_\text{expected} \f$ is lower than the \f$ n_\text{observed} \f$, the lower uncertainty is taken; /// (e.g., the difference between the mean and the 16 % quantile).; /// If \f$ n_\text{expected} \f$ is higher than \f$ n_\text{observed} \f$, the higher uncertainty is taken; /// (e.g., the difference between the 84 % quantile and the mean).; /// - RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data.; /// <tr><td>; /// `Extended()` <td> Use expected number of events of an extended p.d.f as normalization; /// <tr><td>; /// NumCPU() <td> Activate parallel processing feature; /// <tr><td>; /// Range() <td> Calculate \f$ \chi^2 \f$ only in selected region; /// <tr><td>; /// Verbose() <td> Verbose output of GOF framework; /// <tr><td>; /// IntegrateBins() <td> Integrate PDF within each bin. This sets the desired precision. Only useful for binned fits.; /// <tr><td> `SumCoefRange()` <td> Set the range in which to interpret the coefficients of RooAddPdf components; /// <tr><td> `SplitRange()` <td> Fit ranges used in different categories get named after the category.; /// Using `Range(""range""), SplitRan",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:427,error,error,427,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Can edit main transparency -- not available for assemblies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:120,avail,available,120,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Can edit main-color -- not available for assemblies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx:113,avail,available,113,graf3d/eve/src/TEveGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveGeoNode.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cancellation is the mechanism by which a thread can terminate the; /// execution of another thread. Returns 0 on success, otherwise an error; /// number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:221,error,error,221,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:162,failure,failure,162,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cancels a dataset staging request. Returns kTRUE on success, kFALSE on; /// failure. Dataset not found equals to a failure. PROOF-Lite; /// re-implementation of the equivalent function in TProofServ.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:162,failure,failure,162,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,2,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Carry out the fit of the given function to the given histograms.; ///; /// If option ""I"" is used, the fit function will be averaged over the; /// bin (the default is to evaluate it simply at the bin center).; ///; /// If option ""R"" is used, the fit range will be taken from the fit; /// function (the default is to use the entire histogram).; ///; /// If option ""S"" a TFitResult object is returned and it can be used to obtain; /// additional fit information, like covariance or correlation matrix.; ///; /// Note that all parameter values, limits, and step sizes are copied; /// from the input fit function f1 (so they should be set before calling; /// this method. This is particularly relevant for the step sizes, taken; /// to be the ""error"" set on input, as a null step size usually fixes the; /// corresponding parameter. That is protected against, but in such cases; /// an arbitrary starting step size will be used, and the reliability of; /// the fit should be questioned). If parameters are to be fixed, this; /// should be done by specifying non-null parameter limits, with lower; /// limits larger than upper limits.; ///; /// On output, f1 contains the fitted parameters and errors, as well as; /// the number of degrees of freedom, and the goodness-of-fit estimator; /// as given by S. Baker and R. Cousins, Nucl. Instr. Meth. A221 (1984) 437.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:825,error,error,825,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,3,"['error', 'reliab']","['error', 'errors', 'reliability']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cast obj of this class type up to baseclass cl if up is true.; /// Cast obj of this class type down from baseclass cl if up is false.; /// If this class is not a baseclass of cl return 0, else the pointer; /// to the cl part of this (up) or to this (down).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:181,down,down,181,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,4,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change category state by specifying a state name.; /// If printError is set, a message will be printed if; /// the specified state name does not represent a valid state.; /// \return bool to signal an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h:287,error,error,287,roofit/roofitcore/inc/RooAbsCategoryLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change category state to state specified by another category state.; /// If printError is set, a message will be printed if; /// the specified index does not represent a valid state.; /// \note The state name of the other category is ignored.; /// \return bool to signal an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h:360,error,error,360,roofit/roofitcore/inc/RooAbsCategoryLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change category state to the state name of another category.; /// If printError is set, a message will be printed if; /// the specified state name does not represent a valid state.; /// \note The state index of the other category is ignored.; /// \return bool to signal an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h:359,error,error,359,roofit/roofitcore/inc/RooAbsCategoryLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change dirty flag propagation mask for specified server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:116,mask,mask,116,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change effective to entity newuid. Current entity is saved.; /// Real entity is not touched. Use RestoreSaved to go back to; /// previous settings.; /// Return 0 on success, < 0 (== -errno) if any error occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdpriv.cxx:283,error,error,283,net/rpdutils/src/rpdpriv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdpriv.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change permanently to entity newuid. Requires super-userprivileges.; /// Provides a way to drop permanently su privileges.; /// Return 0 on success, < 0 (== -errno) if any error occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdpriv.cxx:258,error,error,258,net/rpdutils/src/rpdpriv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdpriv.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change state of scrollbar element (either up or down).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGScrollBar.cxx:134,down,down,134,gui/gui/src/TGScrollBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGScrollBar.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change the error combo box entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:97,error,error,97,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change the histogram for template number `<parm>`. Notes:; /// - Parameter constraints and settings are retained from a possible previous fit.; /// - Modifying the dimension or number of bins results in an error (in this case; /// rather instantiate a new TFractionFitter object)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:292,error,error,292,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change the histogram to be fitted to. Notes:; /// - Parameter constraints and settings are retained from a possible previous fit.; /// - Modifying the dimension or number of bins results in an error (in this case; /// rather instantiate a new TFractionFitter object)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:279,error,error,279,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:409,avail,available,409,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// The buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:260,avail,available,260,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:260,error,error,260,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,2,"['down', 'error']","['down', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Changes the attributes of the specified window ""id"" according the; /// values provided in ""attr"". The mask data member of ""attr"" specifies; /// which window attributes are defined in the attributes argument.; /// This mask is the bitwise inclusive OR of the valid attribute mask; /// bits; if it is zero, the attributes are ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:188,mask,mask,188,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Changes the components specified by the mask in gval for the specified GC.; ///; /// \param [in] gc specifies the GC to be changed; /// \param [in] gval specifies the mask and the values to be set; ///; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:126,mask,mask,126,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check current GL error state, outputting details via ROOT; /// Error method if one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:103,error,error,103,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check for the 'ls.txt' for 'group' and 'user' and fill the path for the; /// ls file in 'out'.; /// If 'dsname' is defined, open the file and extract the relevant line.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:287,failure,failure,287,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if a (key,value) pair exists with key as key.; /// Returns a TPair* (need to downcast from TObject). Use Key() and; /// Value() to get the pointers to the key and value, respectively.; /// Returns 0 if not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:169,down,downcast,169,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['down'],['downcast']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if a (key,value) pair exists with keyname as name of the key.; /// Returns a TPair* (need to downcast from TObject). Use Key() and; /// Value() to get the pointers to the key and value, respectively.; /// Returns 0 if not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:185,down,downcast,185,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['down'],['downcast']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if a point in local sphere coordinates is close to a boundary within; /// shape tolerance. Return values:; /// - 0 - not close to boundary; /// - 1 - close to Rmin boundary; /// - 2 - close to Rmax boundary; /// - 3,4 - close to phi1/phi2 boundary; /// - 5,6 - close to theta1/theta2 boundary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoSphere.cxx:172,toler,tolerance,172,geom/geom/src/TGeoSphere.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoSphere.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if class ""classname"" is known to the interpreter (in fact,; /// this check is not needed anymore, so classname is ignored). If; /// not it will load library ""libname"". If the library couldn't be found with original; /// libname and if the name was not prefixed with lib, try to prefix with ""lib"" and search again.; /// If DynamicPathName still couldn't find the library, return -1.; /// If check is true it will only check if libname exists and is; /// readable.; /// Returns 0 on successful loading, -1 in case libname does not; /// exist or in case of error and -2 in case of version mismatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:646,error,error,646,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if it is finite with a mask in order to be consistent in presence of; /// fast math.; /// Inspired from the CMSSW FWCore/Utilities package",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:115,mask,mask,115,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if our datahist is already in the workspace.; /// In case of error, return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:153,error,error,153,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if segment of two projected points is valid.; ///; /// Move slightly one of the points if by shifting it by no more than; /// tolerance the segment can become acceptable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx:218,toler,tolerance,218,graf3d/eve/src/TEveProjections.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx,2,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the local cache information for group, user, dsName is up-to-date; /// If not, make the relevant updates; /// Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:269,failure,failure,269,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the requesting {host,user} can be granted immediate; /// login on the base of the information found in /etc/hosts.equiv; /// and/or $HOME/.rhosts. The two files must be trustable, i.e. owned; /// and modifiable only by 'root' and by 'user', respectively (0600).; /// Returns 1 in case access can be granted, 0 in any other case; /// (errout contains a code for error logging on the client side); ///; /// NB: entries granting access in one of the two files cannot be; /// overriden in the other file; so, system admins cannot close; /// access from a host and user cannot stop access to their; /// account if the administrator has decided so; as an example,; /// if this entry is found in /etc/hosts.equiv; ///; /// remote.host.dom auser; ///; /// (allowing user named 'auser' from host 'remote.host.dom' to; /// login to any non-root local account without specifying a; /// password) the following entries in $home/.rhosts are ignored; ///; /// remote.host.dom -auser; /// -remote.host.dom; ///; /// and access to 'auser' is always granted. This is a ""feature""; /// of ruserok.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:456,error,error,456,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check if two numbers differ with less than a tolerance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx:131,toler,tolerance,131,geom/geom/src/TGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check overlaps within a tolerance value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx:110,toler,tolerance,110,geom/geom/src/TGeoParallelWorld.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoParallelWorld.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check that passed value is positive and not 'not-a-number'. If; /// not, print an error, until the error counter reaches its set; /// maximum.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:168,error,error,168,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check the boundary errors reference file created by CheckBoundaryErrors method.; /// The shape for which the crossing failed is drawn with the starting point in red; /// and the extrapolated point to boundary (+/- failing push/pull) in yellow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:105,error,errors,105,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check the number of entries in each list. If not the same and the list; /// is not empty prompt an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:185,error,error,185,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a class has a dictionary or ROOT can load one.; /// This is equivalent to ask HasDictionary() or whether a library is known; /// where it can be loaded from, or whether a Dictionary function is; /// available because the class's dictionary library was already loaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:299,avail,available,299,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check whether dot is available in $PATH or in the directory set; /// by SetDotPath()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:107,avail,available,107,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Check whether or not the address described by the last 3 parameters; /// matches the content of the branch. If a Data Model Evolution conversion; /// is involved, reset the fInfo of the branch.; /// The return values are:; //; /// - kMissingBranch (-5) : Missing branch; /// - kInternalError (-4) : Internal error (could not find the type corresponding to a data type number); /// - kMissingCompiledCollectionProxy (-3) : Missing compiled collection proxy for a compiled collection; /// - kMismatch (-2) : Non-Class Pointer type given does not match the type expected by the branch; /// - kClassMismatch (-1) : Class Pointer type given does not match the type expected by the branch; /// - kMatch (0) : perfect match; /// - kMatchConversion (1) : match with (I/O) conversion; /// - kMatchConversionCollection (2) : match with (I/O) conversion of the content of a collection; /// - kMakeClass (3) : MakeClass mode so we can not check.; /// - kVoidPtr (4) : void* passed so no check was made.; /// - kNoCheck (5) : Underlying TBranch not yet available so no check was made.; /// In addition this can be multiplexed with the two bits:; /// - kNeedEnableDecomposedObj : in order for the address (type) to be 'usable' the branch needs to be in Decomposed Object (aka MakeClass) mode.; /// - kNeedDisableDecomposedObj : in order for the address (type) to be 'usable' the branch needs to not be in Decomposed Object (aka MakeClass) mode.; /// This bits can be masked out by using kDecomposedObjMask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:394,error,error,394,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,3,"['avail', 'error', 'mask']","['available', 'error', 'masked']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// CheckFile() returns kTRUE on success and kFALSE on failure. In; /// case the file exists but is not cached, CheckFile() returns; /// kFALSE and errno is set to EAGAIN.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:137,failure,failure,137,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// CheckPoints",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoPolyShape.cxx:86,CheckPoint,CheckPoints,86,graf3d/eve7/src/REveGeoPolyShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveGeoPolyShape.cxx,2,['CheckPoint'],['CheckPoints']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Checking of consistency of sender/receiver methods/arguments.; /// Returns -1 on error, otherwise number or arguments of signal function.; /// Static method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx:167,error,error,167,core/base/src/TQObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Checks if an entity with the specified name is defined in Cling.; /// Returns kUnknown if the entity is not defined.; /// Returns kWithClassDefInline if the entity exists and has a ClassDefInline; /// Returns kKnown if the entity is defined.; ///; /// By default, structs, namespaces, classes, enums and unions are looked for.; /// If the flag isClassOrNamespaceOnly is true, classes, structs and; /// namespaces only are considered. I.e. if the name is an enum or a union,; /// the returned value is false.; ///; /// In the case where the class is not loaded and belongs to a namespace; /// or is nested, looking for the full class name is outputting a lots of; /// (expected) error messages. Currently the only way to avoid this is to; /// specifically check that each level of nesting is already loaded.; /// In case of templates the idea is that everything between the outer; /// '<' and '>' has to be skipped, e.g.: `aap<pippo<noot>::klaas>::a_class`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:764,error,error,764,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Classify a given point. See TGeoChecker::CheckPoint().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:127,CheckPoint,CheckPoint,127,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['CheckPoint'],['CheckPoint']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Clean dir for package 'pack'; /// Return -1 in case of error, 0 otherwise; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:141,error,error,141,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Clear the stack of evaluation error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:116,error,error,116,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Close a parallel socket. If option is ""force"", calls shutdown(id,2) to; /// shut down the connection. This will close the connection also; /// for the parent of this process. Also called via the dtor (without; /// option ""force"", call explicitly Close(""force"") if this is desired).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:167,down,down,167,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Close the socket. If option is ""force"", calls shutdown(id,2) to; /// shut down the connection. This will close the connection also; /// for the parent of this process. Also called via the dtor (without; /// option ""force"", call explicitly Close(""force"") if this is desired).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:160,down,down,160,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Closing down client: cleanup and close X connection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx:94,down,down,94,gui/gui/src/TGClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Collect and analyze available input from socket s.; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:106,avail,available,106,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['avail', 'failure']","['available', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Collect and analyze available input from the socket.; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx:106,avail,available,106,net/net/src/TApplicationRemote.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx,2,"['avail', 'failure']","['available', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Combines an image with a rectangle of the specified drawable. The; /// section of the image defined by the x, y, width, and height arguments; /// is drawn on the specified part of the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] img the image you want combined with the rectangle; /// \param [in] dx the offset in X from the left edge of the image; /// \param [in] dy the offset in Y from the top edge of the image; /// \param [in] x, y coordinates, which are relative to the origin of the; /// drawable and are the coordinates of the subimage; /// \param [in] w, h the width and height of the subimage, which define the; /// rectangle dimensions; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground and background.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:828,mask,mask,828,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Combines the specified rectangle of ""src"" with the specified rectangle; /// of ""dest"" according to the ""gc"".; ///; /// \param [in] src source rectangle; /// \param [in] dest destination rectangle; /// \param [in] gc graphics context; /// \param [in] src_x, src_y specify the x and y coordinates, which are relative; /// to the origin of the source rectangle and specify; /// upper-left corner.; /// \param [in] width, height the width and height, which are the dimensions of both; /// the source and destination rectangles; /// \param [in] dest_x, dest_y specify the upper-left corner of the destination; /// rectangle; ///; /// GC components in use: function, plane-mask, subwindow-mode,; /// graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:753,mask,mask,753,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Common part (between TProofServ and TXProofServ) of the setup phase.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:187,error,error,187,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compare another uri with given field mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx:123,mask,mask,123,gui/guihtml/src/TGHtmlUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Complete current transaction (commit = kTRUE) or rollback; /// Switches on autocommit mode of ODBC driver",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:135,rollback,rollback,135,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['rollback'],['rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compress the message. The message will only be compressed if the; /// compression level > 0 and the if the message is > 256 bytes.; /// Returns -1 in case of error (when compression fails or; /// when the message increases in size in some pathological cases),; /// otherwise returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:244,error,error,244,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computation of Voigt function (normalised).; /// Voigt is a convolution of the two functions:; /// \f[; /// gauss(xx) = \frac{1}{(\sqrt{2\pi} sigma)} e^{\frac{xx^{2}}{(2 sigma{^2})}}; /// \f]; /// and; /// \f[; /// lorentz(xx) = \frac{ \frac{1}{\pi} \frac{lg}{2} }{ (xx^{2} + \frac{lg^{2}}{4}) }; /// \f]; /// \.; ///; /// The Voigt function is known to be the real part of Faddeeva function also; /// called complex error function [2].; ///; /// The algorithm was developed by J. Humlicek [1].; /// This code is based on fortran code presented by R. J. Wells [2].; /// Translated and adapted by Miha D. Puc; ///; /// To calculate the Faddeeva function with relative error less than 10^(-r).; /// r can be set by the user subject to the constraints 2 <= r <= 5.; ///; /// - [1] J. Humlicek, JQSRT, 21, 437 (1982).; /// - [2] [R.J. Wells ""Rapid Approximation to the Voigt/Faddeeva Function and its Derivatives"" JQSRT 62 (1999), pp 29-48.](http://www-atm.physics.ox.ac.uk/user/wells/voigt.html)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:503,error,error,503,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computation of the error function erf(x).; /// Erf(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between 0 and x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:105,error,error,105,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute and return the chisquare of this histogram with respect to a function; /// The chisquare is computed by weighting each histogram point by the bin error; /// By default the full range of the histogram is used.; /// Use option ""R"" for restricting the chisquare calculation to the given range of the function; /// Use option ""L"" for using the chisquare based on the poisson likelihood (Baker-Cousins Chisquare); /// Use option ""P"" for using the Pearson chisquare based on the expected bin errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:240,error,error,240,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute integral (normalized cumulative sum of bins) w/o under/overflows; /// The result is stored in fIntegral and used by the GetRandom functions.; /// This function is automatically called by GetRandom when the fIntegral; /// array does not exist or when the number of entries in the histogram; /// has changed since the previous call to GetRandom.; /// The resulting integral is normalized to 1.; /// If the routine is called with the onlyPositive flag set an error will; /// be produced in case of negative bin content and a NaN value returned; /// \return 1 if success, 0 if integral is zero, NAN if onlyPositive-test fails",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:550,error,error,550,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute lower limit, check first if limit has been computed; /// status is a boolean flag which will b set to false in case of error; /// and is true if calculation is successful; /// in case of error return also a lower limit value of zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx:213,error,error,213,roofit/roostats/src/LikelihoodInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute machine round-off double precision error as the smallest number that; /// if added to 1.0 is different than 1.0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx:129,error,error,129,geom/geom/src/TGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute safe linear step that can be made such that the error; /// between linear-helix extrapolation is less than EPSIL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:142,error,error,142,geom/geom/src/TGeoHelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the X distribution of quantiles in the other variable Y; /// name is the name of the returned histogram; /// prob is the probability content for the quantile (0.5 is the default for the median); /// An approximate error for the quantile is computed assuming that the distribution in; /// the other variable is normal. According to this approximate formula the error on the quantile is; /// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; /// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; /// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; /// a normal distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:308,error,error,308,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the Y distribution of quantiles in the other variable X; /// name is the name of the returned histogram; /// prob is the probability content for the quantile (0.5 is the default for the median); /// An approximate error for the quantile is computed assuming that the distribution in; /// the other variable is normal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:308,error,error,308,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the gradient (derivative) wrt a parameter ipar; ///; /// \param ipar index of parameter for which the derivative is computed; /// \param x point, where the derivative is computed; /// \param eps - if the errors of parameters have been computed, the step used in; /// numerical differentiation is eps*parameter_error.; ///; /// if the errors have not been computed, step=eps is used; /// default value of eps = 0.01; /// Method is the same as in Derivative() function; ///; /// If a parameter is fixed, the gradient on this parameter = 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:298,error,errors,298,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the gradient wrt parameters; /// If the TF1 object is based on a formula expression (TFormula); /// and TFormula::GenerateGradientPar() has been successfully called; /// automatic differentiation using CLAD is used instead of the default; /// numerical differentiation; ///; /// \param x point, were the gradient is computed; /// \param grad used to return the computed gradient, assumed to be of at least fNpar size; /// \param eps if the errors of parameters have been computed, the step used in; /// numerical differentiation is eps*parameter_error.; ///; /// if the errors have not been computed, step=eps is used; /// default value of eps = 0.01; /// Method is the same as in Derivative() function; ///; /// If a parameter is fixed, the gradient on this parameter = 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:534,error,errors,534,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Compute upper limit, check first if limit has been computed; /// status is a boolean flag which will b set to false in case of error; /// and is true if calculation is successful; /// in case of error return also a lower limit value of zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx:213,error,error,213,roofit/roostats/src/LikelihoodInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes capacity of this shape [length^3] by sampling with 1% error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:149,error,error,149,geom/geom/src/TGeoCompositeShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes confidence intervals at level cl. Default is 0.95; /// The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH1,2,3.; /// For Graphs, confidence intervals are computed for each point,; /// the value of the graph at that point is set to the function value at that; /// point, and the graph y-errors (or z-errors) are set to the value of; /// the confidence interval at that point.; /// For Histograms, confidence intervals are computed for each bin center; /// The bin content of this bin is then set to the function value at the bin; /// center, and the bin error is set to the confidence interval value.; //; /// NOTE: confidence intervals are approximate for nonlinear models!; ///; /// Allowed combinations:; ///; /// Fitted object | Passed object; /// --------------------------|------------------; /// TGraph | TGraphErrors, TH1; /// TGraphErrors, AsymmErrors | TGraphErrors, TH1; /// TH1 | TGraphErrors, TH1; /// TGraph2D | TGraph2DErrors, TH2; /// TGraph2DErrors | TGraph2DErrors, TH2; /// TH2 | TGraph2DErrors, TH2; /// TH3 | TH3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:400,error,errors,400,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes confidence intervals at level cl. Default is 0.95; ///; /// The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH1,2,3.; /// For Graphs, confidence intervals are computed for each point,; /// the value of the graph at that point is set to the function value at that; /// point, and the graph y-errors (or z-errors) are set to the value of; /// the confidence interval at that point.; /// For Histograms, confidence intervals are computed for each bin center; /// The bin content of this bin is then set to the function value at the bin; /// center, and the bin error is set to the confidence interval value.; /// NOTE: confidence intervals are approximate for nonlinear models!; ///; /// Allowed combinations:; ///; /// - Fitted object Passed object; /// - TGraph TGraphErrors, TH1; /// - TGraphErrors, AsymmErrors TGraphErrors, TH1; /// - TH1 TGraphErrors, TH1; /// - TGraph2D TGraph2DErrors, TH2; /// - TGraph2DErrors TGraph2DErrors, TH2; /// - TH2 TGraph2DErrors, TH2; /// - TH3 TH3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:405,error,errors,405,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the complementary error function erfc(x).; /// Erfc(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between x and infinity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:113,error,error,113,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the derivative of the error wrt the neuron weight.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx:117,error,error,117,math/mlp/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the derivative of the error wrt the synapse weight.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx:117,error,error,117,math/mlp/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the error for output neurons.; /// Returns 0 for other neurons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx:99,error,error,99,math/mlp/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Configure the camera state.; /// - fov - set directly field-of-view in degrees (default = 30);; /// - dolly - additional move along the camera forward direction;; /// - center - new camera center (can be 0 for no change);; /// - hRotate - additional ""up/down"" rotation in radians;; /// - vRotate - additional ""left/right"" rotation in radians.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx:340,down,down,340,graf3d/gl/src/TGLPerspectiveCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Configure the camera state.; /// - zoom - set directly (default = 0.78);; /// - dolly - additional move along the camera forward direction;; /// - center - new camera center (can be 0 for no change);; /// - hRotate - additional ""up/down"" rotation in radians;; /// - vRotate - additional ""left/right"" rotation in radians.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx:318,down,down,318,graf3d/gl/src/TGLOrthoCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Configures _typeversion tag in JSON; /// One can specify name of the JSON tag like ""_typeversion"" or ""$tv"" which will be used to store class version; /// Such tag can be used to correctly recover objects from JSON; /// If empty string is provided (default), class version will not be stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:274,recover,recover,274,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['recover'],['recover']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:456,error,errors,456,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a RooVoigtian PDF, which represents the convolution of a; /// Breit-Wigner with a Gaussian.; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param _x The observable for the PDF.; /// \param _mean The mean of the distribution.; /// \param _width The **full width at half maximum (FWHM)** of the Breit-Wigner; /// (often referred to as \f$\Gamma\f$ or \f$2\gamma\f$).; /// \param _sigma The width of the Gaussian distribution.; /// \param doFast Use the faster look-up-table-based method for the evaluation; /// of the complex error function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx:679,error,error,679,roofit/roofit/src/RooVoigtian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooVoigtian.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new interpolation. The value of the function will be; /// \f[; /// A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i).; /// \f]; /// \param name Name of the object.; /// \param title Title (for e.g. plotting); /// \param nominal Nominal value of the function.; /// \param lowSet Set of down variations.; /// \param highSet Set of up variations.; /// \param paramSet Parameters that control the interpolation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:416,down,down,416,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:379,avail,available,379,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct an lvalue variable representing the error of RooRealVar input",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:132,error,error,132,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct fChain, also adding friends if needed and injecting knowledge of offsets if available.; /// \param[in] treeNames Name of the tree for each file in `fileNames`.; /// \param[in] fileNames Files to be opened.; /// \param[in] friendInfo Information about TTree friends, if any.; /// \param[in] nEntries Number of entries to be processed.; /// \param[in] friendEntries Number of entries in each friend. Expected to have same ordering as friendInfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:172,avail,available,172,tree/treeplayer/src/TTreeProcessorMT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct filled RooCurve represented error band represent the error added in quadrature defined by the curves arguments; /// plusVar and minusVar corresponding to one-sigma variations of each parameter. The resulting error band, combined used the correlation matrix C; /// is multiplied with the significance parameter Z to construct the equivalent of a Z sigma error band (in Gaussian approximation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:124,error,error,124,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,4,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct filled RooCurve represented error band that captures alpha% of the variations; /// of the curves passed through argument variations, where the percentage alpha corresponds to; /// the central interval fraction of a significance Z",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:124,error,error,124,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:231,toler,tolerance,231,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:210,toler,tolerance,210,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct parser on given input stream. Use given errorPrefix to; /// prefix any parsing error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:136,error,errorPrefix,136,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,2,['error'],"['error', 'errorPrefix']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Construct the pull of the RooRealVar 'meas'.; ///; /// \param[in] name Name of the pull variable.; /// \param[in] title The title (for plotting).; /// \param[in] meas The measurement. This variable needs to have an error, and therefore is a RooRealVar.; /// \param[in] truth The true value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:301,error,error,301,roofit/roofitcore/src/RooPullVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with range in y.; ///; /// The first five parameters are similar to TH1D::TH1D.; /// Only the values of Y between ylow and yup will be considered at filling time.; /// ylow and yup will also be the maximum and minimum values; /// on the y scale when drawing the profile.; ///; /// See TProfile::BuildOptions for more explanations on errors; ///; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:454,error,errors,454,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; /// See TProfile::BuildOptions for more explanations on errors; ///; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:202,error,errors,202,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; ///; /// See TProfile::BuildOptions for more explanations on errors; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:207,error,errors,207,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; ///; /// See TProfile::BuildOptions() for more explanations on errors; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:209,error,errors,209,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile2D histograms with range in z.; ///; /// The first eight parameters are similar to TH2D::TH2D.; /// Only the values of Z between ZMIN and ZMAX will be considered at filling time.; /// zmin and zmax will also be the maximum and minimum values; /// on the z scale when drawing the profile2D.; ///; /// See TProfile2D::BuildOptions for more explanations on errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:463,error,errors,463,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for one histogram and a fit.; ///; /// \param h1 The histogram; /// \param option Steers the error calculation; /// \param fitres Explicit fit result to be used for calculation. Uses last fit if left empty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:191,error,error,191,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for two histograms; ///; /// \param h1 First histogram; /// \param h2 Second histogram; /// \param option Steers the error calculation, as well as ratio / difference",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:215,error,error,215,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking descriptive name of owner/user which; /// is used as prefix for any warning or error messages; /// generated by this parser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:184,error,error,184,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with four vectors of doubles in input.; ///; /// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; /// and the errors from vectors vex and vey.; /// The number of points in the graph is the minimum of number of points; /// in vx and vy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:240,error,errors,240,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with four vectors of floats in input.; ///; /// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; /// and the errors from vectors vex and vey.; /// The number of points in the graph is the minimum of number of points; /// in vx and vy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:239,error,errors,239,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with multiple vectors of doubles in input and multiple y error dimensions; /// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; /// and the errors from vectors `tvExL`, `tvExH` and `tvEyL/H[yErrorDimension]`.; /// The number of points in the graph is the minimum of number of points; /// in `tvX` and `tvY`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:155,error,error,155,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with multiple vectors of floats in input and multiple y error dimension.; /// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; /// and the errors from vectors `tvExL`, `tvExH` and `tvEyL/H[yErrorDimension]`.; /// The number of points in the graph is the minimum of number of points; /// in `tvX` and `tvY`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:154,error,error,154,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with six vectors of doubles in input and a single y error dimension.; /// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; /// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; /// and the errors from vectors `tvExL`, `tvExH` and `tvEyL`, `tvEyH`.; /// The number of points in the graph is the minimum of number of points; /// in `tvX` and `tvY`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:150,error,error,150,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with six vectors of doubles in input; /// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; /// and the errors from vectors vexl/h and veyl/h.; /// The number of points in the graph is the minimum of number of points; /// in vx and vy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:233,error,errors,233,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with six vectors of floats in input and a single y error dimension.; /// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; /// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; /// and the errors from vectors `tvExL`, `tvExH` and `tvEyL`, `tvEyH`.; /// The number of points in the graph is the minimum of number of points; /// in `tvX` and `tvY`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:149,error,error,149,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with six vectors of floats in input; /// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; /// and the errors from vectors vexl/h and veyl/h.; /// The number of points in the graph is the minimum of number of points; /// in vx and vy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:232,error,errors,232,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Convert given string to an Int_t. Returns true if an error; /// occurred in conversion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:139,error,error,139,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copies graphics context from org to dest. Only the values specified; /// in mask are copied. Both org and dest must exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:162,mask,mask,162,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copies graphics context from org to dest. Only the values specified; /// in mask are copied. If mask = 0 then copy all fields. Both org and; /// dest must exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:162,mask,mask,162,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copies the specified components from the source GC ""org"" to the; /// destination GC ""dest"". The ""mask"" defines which component to copy; /// and it is a data member of GCValues_t.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:183,mask,mask,183,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy a file. If overwrite is true and file already exists the; /// file will be overwritten. Returns 0 when successful, -1 in case; /// of file open failure, -2 in case the file already exists and overwrite; /// was false and -3 in case of error during copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:235,failure,failure,235,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,2,"['error', 'failure']","['error', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy a macro, and its possible associated .h[h] file,; /// to the cache directory, from where the workers can get the file.; /// If headerRequired is 1, return -1 in case the header is not found.; /// If headerRequired is 0, try to copy header too.; /// If headerRequired is -1, don't look for header, only copy macro.; /// If the selector pionter is not 0, consider the macro to be a selector; /// and try to load the selector and set it to the pointer.; /// The mask 'opt' is an or of ESendFileOpt:; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; /// Return -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:550,mask,mask,550,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,2,"['error', 'mask']","['error', 'mask']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy errors from `fE*** `to `arrays[***]`; /// or to `f***` Copy points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:91,error,errors,91,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy errors from `fE***` to `arrays[***]`; /// or to `f***` Copy points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:91,error,errors,91,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy errors from `fEX` and `fEY` to `arrays[0]` and `arrays[1]`; /// or to `fEX` and `fEY` if `arrays == 0` and `ibegin != iend`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:91,error,errors,91,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy from an existing proxy.; /// It will accept any RooTemplateProxy instance, and attempt a dynamic_cast on its payload.; /// \param[in] theName Name of this proxy.; /// \param[in] owner Pointer to the owner this proxy should be registered to.; /// \param[in] other Instance of a different proxy whose payload should be copied.; /// \param[in] allowWrongTypes Instead of throwing a std::invalid_argument, only issue an; /// error message when payload with wrong type is found. This is unsafe, but may be necessary; /// when reading back legacy types. Defaults to false.; /// \throw std::invalid_argument if the types of the payloads are incompatible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:512,error,error,512,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy the files of dataset 'dset' to 'destdir' and create a new dataset named 'dsetdst'; /// decribing them.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:226,error,error,226,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy the files of dataset 'dset' to another directory; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx:172,error,error,172,proof/proofbench/src/TProofBenchDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBenchDataSet.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Copy the specified macro in the cache directory. The macro file is; /// uploaded if new or updated. If existing, the corresponding header; /// basename(macro).h or .hh, is also uploaded. For the other arguments; /// see TProof::Load().; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:374,error,error,374,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Count failures for 'method'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/THostAuth.cxx:92,failure,failures,92,net/auth/src/THostAuth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/THostAuth.cxx,1,['failure'],['failures']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Count number of visible nodes down to a given level.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:116,down,down,116,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Count the total number of nodes starting from a volume, nlevels down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:150,down,down,150,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Count total number of subnodes starting from this volume, nlevels down; /// - option = 0 (default) - count only once per volume; /// - option = 1 - count every time; /// - option = 2 - count volumes on visible branches; /// - option = 3 - return maximum level counted already with option = 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:152,down,down,152,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cracks the free-format input; ///; /// Cracks the free-format input, expecting zero or more; /// alphanumeric fields (which it joins into COMAND(1:LNC)); /// followed by one or more numeric fields separated by; /// blanks and/or one comma. The numeric fields are put into; /// the LLIST (but at most MXP) elements of PLIST.; ///; /// IERR :; /// - = 0 if no errors,; /// - = 1 if error(s).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:444,error,errors,444,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'.; /// Called by MakeProject when option 'par' is given.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:242,error,error,242,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-dim curve of the value of the specified real-valued expression; /// as a function of x. Use the optional precision parameter to control; /// how precisely the smooth curve is rasterized. Use the optional argument set; /// to specify how the expression should be normalized. Use the optional scale; /// factor to rescale the expression after normalization.; /// If shiftToZero is set, the entire curve is shifted down to make the lowest; /// point of the curve go through zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:509,down,down,509,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-dim curve of the value of the specified real-valued; /// expression as a function of x. Use the optional precision; /// parameter to control how precisely the smooth curve is; /// rasterized. If shiftToZero is set, the entire curve is shifted; /// down to make the lowest point in of the curve go through zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:345,down,down,345,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2-dimensional ellipse centered at (x1,x2) that represents the confidence; /// level contour for a measurement with errors (s1,s2) and correlation coefficient rho.; /// The resulting curve is defined as the unique ellipse that passes through these points:; ///; /// (x1+rho*s1,x2+s2) , (x1-rho*s1,x2-s2) , (x1+s1,x2+rho*s2) , (x1-s1,x2-rho*s2); ///; /// and is described by the implicit equation:; ///; /// x*x 2*rho*x*y y*y; /// ----- - --------- + ----- = 1 - rho*rho; /// s1*s1 s1*s2 s2*s2; ///; /// The input parameters s1,s2 must be > 0 and also |rho| <= 1.; /// The degenerate case |rho|=1 corresponds to a straight line and; /// is handled as a special case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx:210,error,errors,210,roofit/roofitcore/src/RooEllipse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2D contour around the minimum for the parameter ipar and jpar; /// if a minimum does not exist or is invalid it will return false; /// A array for x and y points should be provided; /// Pass optionally the confidence level, default is 0.683; /// it is assumed that ErrorDef() defines the right error definition; /// (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx:360,Error,ErrorDef,360,math/mathcore/src/FitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitResult.cxx,3,"['Error', 'error']","['ErrorDef', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2D contour around the minimum for the parameter ipar and jpar; /// if a minimum does not exist or is invalid it will return false; /// on exit a TGraph is filled with the contour points; /// the number of contour points is determined by the size of the TGraph.; /// if the size is zero a default number of points = 20 is used; /// pass optionally the confidence level, default is 0.683; /// it is assumed that ErrorDef() defines the right error definition; /// (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx:505,Error,ErrorDef,505,hist/hist/src/TFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx,3,"['Error', 'error']","['ErrorDef', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a GLwidget, it is an error if it is already created.; /// This is needed for frame-swapping on mac.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEmbeddedViewer.cxx:114,error,error,114,graf3d/gl/src/TGLEmbeddedViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEmbeddedViewer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooPlot of the distribution of the fitted errors of the given parameter.; /// The frame is created with a range [lo,hi] and plotted data will be binned in 'nbins' bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:137,error,errors,137,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a THtml object.; /// In case output directory does not exist an error; /// will be printed and gHtml stays 0 also zombie bit will be set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:157,error,error,157,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a Tree for the main TDSetElement and for all the friends.; /// Returns the main tree or 0 in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx:197,error,error,197,proof/proofplayer/src/TEventIter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TEventIter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a \f$ \chi^2 \f$ from a series of x and y values stored in a dataset.; /// The y values can either be the event weights (default), or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// The following named arguments are supported; ///; /// | | Options to control construction of the \f$ \chi^2 \f$; /// |-|-----------------------------------------; /// | `YVar(RooRealVar& yvar)` | Designate given column in dataset as Y value; /// | `Integrate(bool flag)` | Integrate function over range specified by X errors rather than take value at bin center.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:311,error,errors,311,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a dithered version of the color map and lightness images for; /// display modes with reduced number of colors. The Floyd-Steinberg error; /// diffusion dithering algorithm is used.; /// This routine is called in PseudoColor modes only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:224,error,error,224,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a file descriptor event handler. If mask=kRead then we; /// want to monitor the file for read readiness, if mask=kWrite; /// then we monitor the file for write readiness, if mask=kRead|kWrite; /// then we monitor both read and write readiness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx:129,mask,mask,129,core/base/src/TSysEvtHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx,3,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a graphics context using the values set in gval (but only for; /// those entries that are in the mask).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:190,mask,mask,190,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the asymmetry between the specified TH1 objects; /// which may have fixed or variable bin widths, but which must both have; /// the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; /// calculated using Binomial statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addAsymmetryBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:300,Error,Error,300,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the contents of the specified TH1 object; /// which may have fixed or variable bin widths. Error bars are; /// calculated using Poisson statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:201,Error,Error,201,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a list of available font files and allowed font sizes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx:103,avail,available,103,graf3d/gl/src/TGLFontManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new TTree BranchObject.; ///; /// Build a TBranchObject for an object of class classname.; /// addobj is the address of a pointer to an object of class classname.; /// IMPORTANT: classname must derive from TObject.; /// The class dictionary must be available (ClassDef in class header).; ///; /// This option requires access to the library where the corresponding class; /// is defined. Accessing one single data member in the object implies; /// reading the full object.; /// See the next Branch constructor for a more efficient storage; /// in case the entry consists of arrays of identical objects.; ///; /// By default the branch buffers are stored in the same file as the Tree.; /// use TBranch::SetFile to specify a different file; ///; /// IMPORTANT NOTE about branch names:; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` instead of simply `subbranch`.; /// This situation happens when the top level object; /// has two or more members referencing the same class.; /// For example, if a Tree has two branches B1 and B2 corresponding; /// to objects of the same class MyClass, one can do:; /// ~~~ {.cpp}; /// tree.Branch(""B1."",""MyClass"",&b1,8000,1);; /// tree.Branch(""B2."",""MyClass"",&b2,8000,1);; /// ~~~; /// if MyClass has 3 members a,b,c, the two instructions above will generate; /// subbranches called B1.a, B1.b ,B1.c, B2.a, B2.b, B2.c; ///; /// bufsize is the buffer size in bytes for this branch; /// The default value is 32000 bytes and should be ok for most cases.; /// You can specify a larger value (e.g. 256000) if your Tree is not split; /// and each entry is large (Megabytes); /// A small value for bufsize is optimum if you intend to access; /// the entrie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:344,avail,available,344,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a packetizer for dataset 'dset'; /// Return null on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx:145,failure,failure,145,proof/proofplayer/src/TPacketizerMulti.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerMulti.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a parallel server socket object for a named service. Set reuse; /// to true to force reuse of the server socket (i.e. do not wait for the; /// time out to pass). Using backlog one can set the desirable queue length; /// for pending connections.; /// Use tcpwindowsize to specify the size of the receive buffer, it has; /// to be specified here to make sure the window scale option is set (for; /// tcpwindowsize > 65KB and for platforms supporting window scaling).; /// Use IsValid() to check the validity of the; /// server socket. In case server socket is not valid use GetErrorCode(); /// to obtain the specific error value. These values are:; /// 0 = no error (socket is valid); /// -1 = low level socket() call failed; /// -2 = low level bind() call failed; /// -3 = low level listen() call failed; /// Every valid server socket is added to the TROOT sockets list which; /// will make sure that any open sockets are properly closed on; /// program termination.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPServerSocket.cxx:708,error,error,708,net/net/src/TPServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPServerSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a parallel server socket object on a specified port. Set reuse; /// to true to force reuse of the server socket (i.e. do not wait for the; /// time out to pass). Using backlog one can set the desirable queue length; /// for pending connections.; /// Use tcpwindowsize to specify the size of the receive buffer, it has; /// to be specified here to make sure the window scale option is set (for; /// tcpwindowsize > 65KB and for platforms supporting window scaling).; /// Use IsValid() to check the validity of the; /// server socket. In case server socket is not valid use GetErrorCode(); /// to obtain the specific error value. These values are:; /// 0 = no error (socket is valid); /// -1 = low level socket() call failed; /// -2 = low level bind() call failed; /// -3 = low level listen() call failed; /// Every valid server socket is added to the TROOT sockets list which; /// will make sure that any open sockets are properly closed on; /// program termination.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPServerSocket.cxx:708,error,error,708,net/net/src/TPServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPServerSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a picture pixmap from data on file. The picture attributes; /// are used for input and output. Returns kTRUE in case of success,; /// kFALSE otherwise. If mask does not exist it is set to kNone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:248,mask,mask,248,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a picture pixmap from data. The picture attributes; /// are used for input and output. Returns kTRUE in case of success,; /// kFALSE otherwise. If mask does not exist it is set to kNone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:240,mask,mask,240,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a pixture pixmap from data. The picture attributes; /// are used for input and output. Returns kTRUE in case of success,; /// kFALSE otherwise. If mask does not exist it is set to kNone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:240,mask,mask,240,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a pthread. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:139,error,error,139,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a secure temporary file by appending a unique; /// 6 letter string to base. The file will be created in; /// a standard (system) directory or in the directory; /// provided in dir. Optionally one can provide suffix; /// append to the final name - like extension "".txt"" or "".html"".; /// The full filename is returned in base; /// and a filepointer is returned for safely writing to the file; /// (this avoids certain security problems). Returns 0 in case; /// of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:555,error,error,555,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a server socket object for a named service. Set reuse to true; /// to force reuse of the server socket (i.e. do not wait for the time; /// out to pass). Using backlog one can set the desirable queue length; /// for pending connections.; /// Use tcpwindowsize to specify the size of the receive buffer, it has; /// to be specified here to make sure the window scale option is set (for; /// tcpwindowsize > 65KB and for platforms supporting window scaling).; /// Use IsValid() to check the validity of the; /// server socket. In case server socket is not valid use GetErrorCode(); /// to obtain the specific error value. These values are:; /// 0 = no error (socket is valid); /// -1 = low level socket() call failed; /// -2 = low level bind() call failed; /// -3 = low level listen() call failed; /// Every valid server socket is added to the TROOT sockets list which; /// will make sure that any open sockets are properly closed on; /// program termination.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx:699,error,error,699,net/net/src/TServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a server socket object on a specified port. Set reuse to true; /// to force reuse of the server socket (i.e. do not wait for the time; /// out to pass). Using backlog one can set the desirable queue length; /// for pending connections. If port is 0 a port scan will be done to; /// find a free port. This option is mutual exlusive with the reuse option.; /// Use tcpwindowsize to specify the size of the receive buffer, it has; /// to be specified here to make sure the window scale option is set (for; /// tcpwindowsize > 65KB and for platforms supporting window scaling).; /// Use IsValid() to check the validity of the; /// server socket. In case server socket is not valid use GetErrorCode(); /// to obtain the specific error value. These values are:; /// 0 = no error (socket is valid); /// -1 = low level socket() call failed; /// -2 = low level bind() call failed; /// -3 = low level listen() call failed; /// Every valid server socket is added to the TROOT sockets list which; /// will make sure that any open sockets are properly closed on; /// program termination.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx:817,error,error,817,net/net/src/TServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".; ///; /// Returns 0 in case of error or if a sub-directory (hierarchy) with the requested; /// name already exists.; /// returnExistingDirectory returns a pointer to an already existing sub-directory instead of 0.; /// Returns a pointer to the created sub-directory or to the top sub-directory of; /// the hierarchy (in the above example, the returned TDirectory * always points; /// to ""a"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:191,error,error,191,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."".; ///; /// Returns 0 in case of error or if a sub-directory (hierarchy) with the requested; /// name already exists.; /// returnExistingDirectory returns a pointer to an already existing sub-directory with the same name.; /// Returns a pointer to the created sub-directory or to the top sub-directory of; /// the hierarchy (in the above example, the returned TDirectory * always points; /// to ""a"").; /// In particular, the steps to create first a/b/c and then a/b/d without receiving; /// errors are:; /// ~~~ {.cpp}; /// TFile * file = new TFile(""afile"",""RECREATE"");; /// file->mkdir(""a"");; /// file->cd(""a"");; /// gDirectory->mkdir(""b/c"");; /// gDirectory->cd(""b"");; /// gDirectory->mkdir(""d"");; /// ~~~; /// or; /// ~~~ {.cpp}; /// TFile * file = new TFile(""afile"",""RECREATE"");; /// file->mkdir(""a"");; /// file->cd(""a"");; /// gDirectory->mkdir(""b/c"");; /// gDirectory->mkdir(""b/d"", """", true);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:191,error,error,191,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create an I/O buffer object. Mode should be either TBuffer::kRead or; /// TBuffer::kWrite. By default the I/O buffer has a size of; /// TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; /// to TBuffer via the buf argument. By default this buffer will be adopted; /// unless adopt is false.; ///; /// If the new buffer is _not_ adopted and no memory allocation routine; /// is provided, a Fatal error will be issued if the Buffer attempts to; /// expand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx:500,error,error,500,core/base/src/TBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create an I/O buffer object.; /// Mode should be either TBuffer::kRead or; /// TBuffer::kWrite. By default the I/O buffer has a size of; /// TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; /// to TBuffer via the buf argument. By default this buffer will be adopted; /// unless adopt is false.; /// If the new buffer is <b>not</b> adopted and no memory allocation routine; /// is provided, a Fatal error will be issued if the Buffer attempts to; /// expand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:505,error,error,505,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create an application environment. The application environment; /// provides an interface to the graphics system and eventloop; /// (be it X, Windows, macOS or BeOS). After creating the application; /// object start the eventloop by calling its Run() method. The command; /// line options recognized by TApplication are described in the GetOptions(); /// method. The recognized options are removed from the argument array.; /// The original list of argument options can be retrieved via the Argc(); /// and Argv() methods. The appClassName ""proofserv"" is reserved for the; /// PROOF system. The ""options"" and ""numOptions"" arguments are not used,; /// except if you want to by-pass the argv processing by GetOptions(); /// in which case you should specify numOptions<0. All options will; /// still be available via the Argv() method for later use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:886,avail,available,886,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty histogram that can be filled with the addBin(); /// and addAsymmetryBin() methods. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:295,error,error,295,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object of type fClass with the default ctor at the specified; /// index. Returns 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:190,error,error,190,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create and draw a TH2 with the error contours in the parameters `var1` and `var2`.; /// \param[in] var1 The first parameter (x axis).; /// \param[in] var2 The second parameter (y axis).; /// \param[in] n1 First contour.; /// \param[in] n2 Optional contour. 0 means don't draw.; /// \param[in] n3 Optional contour. 0 means don't draw.; /// \param[in] n4 Optional contour. 0 means don't draw.; /// \param[in] n5 Optional contour. 0 means don't draw.; /// \param[in] n6 Optional contour. 0 means don't draw.; /// \param[in] npoints Number of points for evaluating the contour.; ///; /// Up to six contours can be drawn using the arguments `n1` to `n6` to request the desired; /// coverage in units of \f$ \sigma = n^2 \cdot \mathrm{ErrorDef} \f$.; /// See ROOT::Math::Minimizer::ErrorDef().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:117,error,error,117,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,3,"['Error', 'error']","['ErrorDef', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create and return RooHist containing residuals w.r.t to given curve.; /// If normalize is true, the residuals are normalized by the histogram; /// errors creating a RooHist with pull values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:233,error,errors,233,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create error type combo box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:93,error,error,93,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; /// added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; /// 1 in this mode, a warning message is printed. If SumW2 errors are selected the histograms are added; /// and the histograms errors are added in quadrature, taking the weights into account.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:149,error,errors,149,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:127,Error,Errors,127,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,"['Error', 'error']","['Errors', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create makefile at 'filemake' for PAR package 'pack'.; ///; /// Called by MakeProject when option 'par' is given.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:232,error,error,232,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create or recreate the dataset lists for 'uri'.; /// The list are saved in text form in 'uri'/ls.txt for fast browsing and in; /// 'uri'/ls.root in form of TMacro for optimized and portable transfer.; /// Return 0 on success, 1 if the file was empty, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:343,error,error,343,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create structure to store sum of squares of weights.; ///; /// if histogram is already filled, the sum of squares of weights; /// is filled with the existing bin contents; ///; /// The error per bin will be computed as sqrt(sum of squares of weight); /// for each bin.; ///; /// This function is automatically called when the histogram is created; /// if the static function TH1::SetDefaultSumw2 has been called before.; /// If flag = false the structure containing the sum of the square of weights; /// is rest and it will be empty, but it is not deleted (i.e. GetSumw2()->fN = 0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:271,error,error,271,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create the largest dataset for the run.; /// Defaults for; /// dataset name, filename root; /// are; /// ""BenchDataSet"", ""event""; /// respectively.; /// These can be changed via dset and fnroot, respectively.; /// The string 'fnroot' defines the location of the files, interpreted as an URL.; /// Examples:; /// fnroot files; /// 'event' `<datadir>`/event_`<ord>`_`<#>`.root; /// '/mss/event' /mss/event_`<ord>`_`<#>`.root; /// 'root://srv//mss/event?remote=1'; /// root://srv//mss/event_`<ord>`_`<#>`?remote=1.root; /// Default selector is TSelEventGen. Use SetDataGenSel and SetDataGenPar to change it; /// and to pass the list of PARs defining the alternative selector.; /// The argument 'nevt' controls the number of events per file (-1 for the default,; /// which is 30000).; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:898,error,error,898,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create the selector object and save the relevant files and binary information; /// in the cache so that the worker can pick it up.; /// Returns 0 and fill fSelector in case of success. Returns -1 and sets; /// fSelector to 0 in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:322,failure,failure,322,proof/proofplayer/src/TProofPlayerLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:450,error,error,450,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a TGraph object describing the n-sigma contour of a; /// TMinuit fit. The contour of the parameters pa1 and pa2 is calculated; /// using npoints (>=4) points. The TMinuit status will be; /// - 0 on success and; /// - -1 if errors in the calling sequence (pa1, pa2 not variable); /// - 1 if less than four points can be found; /// - 2 if npoints<4; /// - n>3 if only n points can be found (n < npoints); /// The status can be obtained via TMinuit::GetStatus().; ///; /// To get the n-sigma contour the ERRDEF parameter in Minuit has to set; /// to n^2. The fcn function has to be set before the routine is called.; ///; /// The TGraph object is created via the interpreter. The user must cast it; /// to a TGraph*. Note that the TGraph is created with npoints+1 in order to; /// close the contour (setting last point equal to first point).; ///; /// You can find an example in $ROOTSYS/tutorials/fit/fitcont.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:317,error,errors,317,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a graphics context using the provided GCValues_t *gval structure.; /// The mask data member of gval specifies which components in the GC are; /// to be set using the information in the specified values structure.; /// It returns a graphics context handle GContext_t that can be used with any; /// destination drawable or O if the creation falls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:169,mask,mask,169,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a picture pict from data in bitmap format. The picture; /// attributes ""attr"" are used for input and output. Returns kTRUE in; /// case of success, kFALSE otherwise. If the mask ""pict_mask"" does not; /// exist it is set to kNone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:267,mask,mask,267,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a picture pict from data in file ""filename"". The picture; /// attributes ""attr"" are used for input and output. Returns kTRUE in; /// case of success, kFALSE otherwise. If the mask ""pict_mask"" does not; /// exist it is set to kNone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:269,mask,mask,269,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a socket or a parallel socket and authenticates to the; /// remote server specified in 'url' on remote 'port' as 'user'.; ///; /// url: [[proto][p][auth]://]host[/?options]; ///; /// where proto = ""sockd"", ""rootd"", ""proofd""; /// indicates the type of remote server; /// if missing ""sockd"" is assumed (""sockd"" indicates; /// any remote server session using TServerSocket); /// [p] = for parallel sockets (forced internally for; /// rootd); /// [auth] = ""up"" or ""k"" to force UsrPwd or Krb5 authentication; /// [options] = ""m"" or ""s"", when proto=proofd indicates whether; /// we are master or slave (used internally by TSlave); ///; /// An already opened connection can be used by passing its socket; /// in opensock.; ///; /// If 'err' is defined, '*err' on return from a failed call contains an error; /// code (see NetErrors.h).; ///; /// Example:; ///; /// TSocket::CreateAuthSocket(""qwerty"",""pk://machine.fq.dn:5052"",3); ///; /// creates an authenticated parallel socket of size 3 to a sockd; /// server running on remote machine machine.fq.dn on port 5052;; /// authentication will attempt protocol Kerberos first.; ///; /// NB: may hang if the remote server is not of the correct type;; /// at present TSocket has no way to find out the type of the; /// remote server automatically; ///; /// Returns pointer to an authenticated socket or 0 if creation or; /// authentication is unsuccessful.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:888,error,error,888,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a socket or a parallel socket and authenticates to the; /// remote server.; ///; /// url: [[proto][p][auth]://][user@]host[:port][/service][?options]; ///; /// where proto = ""sockd"", ""rootd"", ""proofd""; /// indicates the type of remote server;; /// if missing ""sockd"" is assumed (""sockd"" indicates; /// any remote server session using TServerSocket); /// [p] = for parallel sockets (forced internally for; /// rootd; ignored for proofd); /// [auth] = ""up"" or ""k"" to force UsrPwd or Krb5 authentication; /// [port] = is the remote port number; /// [service] = service name used to determine the port; /// (for backward compatibility, specification of; /// port as priority); /// options = ""m"" or ""s"", when proto=proofd indicates whether; /// we are master or slave (used internally by; /// TSlave); ///; /// An already opened connection can be used by passing its socket; /// in opensock.; ///; /// If 'err' is defined, '*err' on return from a failed call contains an error; /// code (see NetErrors.h).; ///; /// Example:; ///; /// TSocket::CreateAuthSocket(""pk://qwerty@machine.fq.dn:5052"",3); ///; /// creates an authenticated parallel socket of size 3 to a sockd; /// server running on remote machine machine.fq.dn on port 5052;; /// authentication will attempt protocol Kerberos first.; ///; /// NB: may hang if the remote server is not of the correct type;; /// at present TSocket has no way to find out the type of the; /// remote server automatically; ///; /// Returns pointer to an authenticated socket or 0 if creation or; /// authentication is unsuccessful.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:1060,error,error,1060,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cross entropy error for a softmax output neuron, for a given event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:100,error,error,100,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Cross entropy error for sigmoid output neurons, for a given event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:100,error,error,100,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Custom diag client for clang that verifies that each implicitly build module; /// is a system module. If not, it will let the current rootcling invocation; /// fail with an error. All other diags beside module build remarks will be; /// forwarded to the passed child diag client.; ///; /// The reason why we need this is that if we built implicitly a C++ module; /// that belongs to a ROOT dictionary, then we will miss information generated; /// by rootcling in this file (e.g. the source code comments to annotation; /// attributes transformation will be missing in the module file).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:259,error,error,259,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Custom streamer for the workspace. Stream contents of workspace; /// and code repository. When reading, read code repository first; /// and compile missing classes before proceeding with streaming; /// of workspace contents to avoid errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:319,error,errors,319,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Declare code to the interpreter, without any of the interpreter actions; /// that could trigger a re-interpretation of the code. I.e. make cling; /// behave like a compiler: no dynamic lookup, no input wrapping for; /// subsequent execution, no automatic provision of declarations but just a; /// plain `#include`.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:440,failure,failure,440,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Decode the Zip64 extended extra field. If global is true, decode the; /// extra field coming from the central directory, if false decode the; /// extra field coming from the local file header. Returns -1 in case of; /// error, -2 in case Zip64 extra block was not found and 0 in case of; /// success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:306,error,error,306,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Decompose 'expression' as pointing to something inside the leaf; /// Returns:; /// - -2 Error: some information is missing (message already printed); /// - -1 Error: Syntax is incorrect (message already printed); /// - 0; /// - >0 the value returns is the action code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:174,Error,Error,174,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,2,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define a named RooArgSet with given constituents. If importMissing is true, any constituents; /// of aset that are not in the workspace will be imported, otherwise an error is returned; /// for missing components",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:253,error,error,253,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define a new state with given label. The next available; /// integer is assigned as index value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx:132,avail,available,132,roofit/roofitcore/src/RooAbsCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define a state with given name and index. Category; /// state labels may not contain semicolons.; /// \return True in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:212,error,error,212,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define a state with given name.; /// The lowest available positive integer is assigned as index. Category; /// state labels may not contain semicolons.; /// \return True in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:134,avail,available,134,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define multiple states in a single call. Use like:; /// ```; /// myCat.defineTypes({ {""0Lep"", 0}, {""1Lep"", 1}, {""2Lep"", 2}, {""3Lep"", 3} });; /// ```; /// Note: When labels or indices are defined multiple times, an error message is printed,; /// and the corresponding state is ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:300,error,error,300,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Define the options (their key words) that can be set in the option string.; ///; /// - UseRandomisedTrees choose at each node splitting a random set of variables; /// - UseNvars use UseNvars variables in randomised trees; /// - SeparationType the separation criterion applied in the node splitting.; /// known:; /// - GiniIndex; /// - MisClassificationError; /// - CrossEntropy; /// - SDivSqrtSPlusB; /// - nEventsMin: the minimum number of events in a node (leaf criteria, stop splitting); /// - nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; /// step size is determined by the events); /// - UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; /// (from the training) in the leaf node; /// - NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; /// misclassification error rate); /// - PruneMethod The Pruning method:; /// known:; /// - NoPruning // switch off pruning completely; /// - ExpectedError; /// - CostComplexity; /// - PruneStrength a parameter to adjust the amount of pruning. Should be large enough such that overtraining is avoided"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:989,error,error,989,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Defines usage of transactions statements for writing objects data to database.; /// | Index | Description |; /// |-------|-------------|; /// | kTransactionsOff=0 - no transaction operation are allowed |; /// | kTransactionsAuto=1 - automatic mode. Each write operation, produced by TSQLFile, will be supplied by START; /// TRANSACTION and COMMIT calls. If any error happen, ROLLBACK will returns database to previous state |; /// | kTransactionsUser=2 - transactions are delegated to user. Methods StartTransaction(), Commit() and Rollback(); /// should be called by user. |; ///; /// Default UseTransactions option is kTransactionsAuto",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:447,error,error,447,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,3,"['ROLLBACK', 'Rollback', 'error']","['ROLLBACK', 'Rollback', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Defines which input events the window is interested in. By default; /// events are propagated up the window stack. This mask can also be; /// set at window creation time via the SetWindowAttributes_t::fEventMask; /// attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:206,mask,mask,206,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Defines which input events the window is interested in. By default; /// events are propageted up the window stack. This mask can also be; /// set at window creation time via the SetWindowAttributes_t::fEventMask; /// attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:206,mask,mask,206,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Delete Public Key file; /// Returns: 0 if ok; /// 1 if error unlinking (check errno);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:141,error,error,141,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Delete item with fUserData == ptr. Search tree downwards starting; /// at item.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:133,down,downwards,133,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,1,['down'],['downwards']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Delete text between start and end positions. Returns false in; /// case of failure (start and end not being within bounds).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGText.cxx:161,failure,failure,161,gui/gui/src/TGText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGText.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Deletes the y error with the index `e`.; /// Note that you must keep at least 1 error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:100,error,error,100,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Deprecated and error prone model selection interface.; /// It's use is trongly discouraged. 'mid' is the model ID (1 to 7).; /// This method is provided for backwards compatibility/developer use only. */; /// - x : number of observed events in the experiment; /// - y : number of observed events in background region; /// - z : number of MC events observed; /// - bm : estimate of the background; /// - em : estimate of the efficiency; /// - e : true efficiency (considered known); /// - mid : internal model id (really, you should not use this method at all); /// - sde : efficiency estimate's standard deviation; /// - sdb : background estimate's standard deviation; /// - tau : ratio parameter (read TRolke.cxx for details); /// - b : background expectation value (considered known); /// - m : number of MC events generated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx:101,error,error,101,math/physics/src/TRolke.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRolke.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Destroy logical shape defined by unique 'ID'.; /// Returns kTRUE if found/destroyed - kFALSE otherwise.; ///; /// If mustFind is true, an error is reported if the logical is not; /// found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:224,error,error,224,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Destroy the GLwidget, it is an error if it does not exist.; /// This is needed for frame-swapping on mac.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEmbeddedViewer.cxx:117,error,error,117,graf3d/gl/src/TGLEmbeddedViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEmbeddedViewer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Determine cl's declaration file name. Usually it's just; /// cl->GetDeclFileName(), but sometimes conversions need to be done; /// like include/ to abc/cde/inc/. If no declaration file name is; /// available, look for b/inc/C.h for class A::B::C. out_fsys will contain; /// the file system's (i.e. local machine's) full path name to the file.; /// The function returns false if the class's header file cannot be found.; ///; /// If your software cannot be mapped into this scheme then derive your; /// own class from TFileDefinition and pass it to THtml::SetFileDefinition().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:284,avail,available,284,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Determine cl's implementation file name. Usually it's just; /// cl->GetImplFileName(), but sometimes conversions need to be done.; /// If no implementation file name is available look for b/src/C.cxx for; /// class A::B::C. out_fsys will contain the file system's (i.e. local; /// machine's) full path name to the file.; /// The function returns false if the class's source file cannot be found.; ///; /// If your software cannot be mapped into this scheme then derive your; /// own class from TFileDefinition and pass it to THtml::SetFileDefinition().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:255,avail,available,255,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Determine for given input error matrix covariance matrix of unfolded; /// spectrum from toy simulation given the passed covariance matrix on measured spectrum; /// ""cov"" - covariance matrix on the measured spectrum, to be propagated; /// ""ntoys"" - number of pseudo experiments used for the propagation; /// ""seed"" - seed for pseudo experiments; /// Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:112,error,error,112,hist/hist/src/TSVDUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Determine the branch / leaf and its type; reset fProxy / fSetupStatus on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:159,error,error,159,tree/treeplayer/src/TTreeReaderArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Direct access to the unique_ptr holding the integrator that's used to sample the bins.; /// This can be used to change options such as sampling accuracy or to entirely exchange the integrator.; ///; /// #### Example: Use the 61-point Gauss-Kronrod integration rule; /// ```{.cpp}; /// ROOT::Math::IntegratorOneDimOptions intOptions = pdf.integrator()->Options();; /// intOptions.SetNPoints(6); // 61-point integration rule; /// intOptions.SetRelTolerance(1.E-9); // Smaller tolerance -> more subdivisions; /// pdf.integrator()->SetOptions(intOptions);; /// ```; /// \see ROOT::Math::IntegratorOneDim::SetOptions for more details on integration options.; /// \note When RooBinSamplingPdf is loaded from files, integrator options will fall back to the default values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:560,toler,tolerance,560,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Display the current content starting from line 'from' to line 'to'; /// inclusive.; /// A negative value for 'from' indicates lines counted from the end; /// (tail action); 'to' is ignored in such a case.; /// TProofLog::Prt is called to display: the location (screen, file, box); /// is defined there.; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:433,error,error,433,proof/proof/src/TProofLog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Displays xml parsing error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:107,error,error,107,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Divide this histogram by h1.; ///; /// `this = this/h1`; /// if errors are defined (see TH1::Sumw2), errors are also recalculated.; /// Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; /// The resulting errors are calculated assuming uncorrelated histograms.; /// See the other TH1::Divide that gives the possibility to optionally; /// compute binomial errors.; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Scale; ///; /// The function return kFALSE if the divide operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:150,error,errors,150,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,5,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Divide this histogram by h; /// this = this/(h); /// Note that if h has Sumw2 set, Sumw2 is automatically called for; /// this if not already set.; /// The resulting errors are calculated assuming uncorrelated content.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:252,error,errors,252,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Download a PROOF archive (PAR file) from the master package repository.; /// The PAR file is downloaded in the current directory or in the directory; /// specified by 'dstdir'. If a package with the same name already exists; /// at destination, a check on the MD5 sum is done and the user warned or; /// prompted for action, depending is the file is equal or different.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Down,Download,86,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,"['Down', 'down', 'error']","['Download', 'downloaded', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw (support for TChain::Draw()).; /// Returns -1 in case of error or number of selected events in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:148,error,error,148,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw 2D histograms errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:105,error,errors,105,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw a cell array.; /// x1,y1 : left down corner; /// x2,y2 : right up corner; /// nx,ny : array size; /// ic : array; ///; /// Draw a cell array. The drawing is done with the pixel presicion; /// if (X2-X1)/NX (or Y) is not a exact pixel number the position of; /// the top rigth corner may be wrong.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:123,down,down,123,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw a cell array.; ///; /// \param[in] x1,y1 : left down corner; /// \param[in] x2,y2 : right up corner; /// \param[in] nx,ny : array size; /// \param[in] ic : array of ARGB32 colors; ///; /// Draw a cell array. The drawing is done with the pixel precision; /// if (X2-X1)/NX (or Y) is not a exact pixel number the position of; /// the top right corner may be wrong.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:139,down,down,139,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw a cell array.; //; /// \param [in] x1,y1 : left down corner; /// \param [in] x2,y2 : right up corner; /// \param [in] nx,ny : array size; /// \param [in] ic : array; ///; /// Draw a cell array. The drawing is done with the pixel precision; /// if (X2-X1)/NX (or Y) is not a exact pixel number the position of; /// the top right corner may be wrong.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:139,down,down,139,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for selected entries.; /// Returns -1 in case of error or number of selected events in case of success.; ///; /// This function accepts TCut objects as arguments.; /// Useful to use the string operator +, example:; /// ~~~{.cpp}; /// ntuple.Draw(""x"",cut1+cut2+cut3);; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:158,error,error,158,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries that matches the selection.; /// Returns -1 in case of error or number of selected events in case of success.; ///; /// See the documentation of TTree::Draw for the complete details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:186,error,error,186,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries.; /// Returns -1 in case of error or number of selected events in case of success.; /// For more see TTree::Draw().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:159,error,error,159,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries.; /// Returns -1 in case of error or number of selected events in case of success.; /// This function accepts a TCut objects as argument.; /// Use the operator+ to concatenate cuts.; /// Example:; /// dset.Draw(""x"",cut1+cut2+cut3);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:159,error,error,159,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries.; ///; /// \return -1 in case of error or number of selected events in case of success.; ///; /// This function accepts TCut objects as arguments.; /// Useful to use the string operator +; ///; /// Example:; ///; /// ~~~ {.cpp}; /// ntuple.Draw(""x"",cut1+cut2+cut3);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:164,error,error,164,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw text using TrueType fonts. If TrueType fonts are not available the; /// text is drawn with TGWin32::DrawText.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:144,avail,available,144,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw text using TrueType fonts. If TrueType fonts are not available the; /// text is drawn with TGX11::DrawText.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx:144,avail,available,144,graf2d/x11ttf/src/TGX11TTF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draw the object if it is a canvas.; /// Return 0 in case of success, 1 if it is not a canvas or libProofDraw; /// is not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:207,avail,available,207,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws a box between [x1,y1] and [x2,y2] according to the ""mode"".; ///; /// \param [in] x1,y1 left down corner; /// \param [in] x2,y2 right up corner; /// \param [in] mode drawing mode:; /// - mode = 0 hollow (kHollow); /// - mode = 1 solid (kSolid)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:184,down,down,184,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws a cell array. The drawing is done with the pixel precision; /// if (x2-x1)/nx (or y) is not a exact pixel number the position of; /// the top right corner may be wrong.; ///; /// \param [in] x1,y1 left down corner; /// \param [in] x2,y2 right up corner; /// \param [in] nx,ny array size; /// \param [in] ic array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:294,down,down,294,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws either the KDE functions or its errors; // @param opt : Drawing options:; // - """" (default) - draw just the kde; // - ""same"" draw on top of existing pad; // - ""Errors"" draw a TGraphErrors with the point and errors; // -""confidenceinterval"" draw KDE + conf interval functions (default is 95%); // -""confidenceinterval@0.90"" draw KDE + conf interval functions at 90%; // - Extra options can be passed in opt for the drawing of the corresponding TF1 or TGraph; //; // NOTE: The functions GetDrawnFunction(), GetDrawnUpperFunction(), GetDrawnLowerFunction(); // and GetGraphWithErrors() return the corresponding drawn objects (which are managed by the TKDE); // They can be used to changes style, color, etc..; ////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:124,error,errors,124,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,3,"['Error', 'error']","['Errors', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws multiple line segments. Each line is specified by a pair of points.; ///; /// \param [in] id Drawable identifier; /// \param [in] gc graphics context; /// \param [in] *seg specifies an array of segments; /// \param [in] nseg specifies the number of segments in the array; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:411,mask,mask,411,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,; /// clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:194,mask,mask,194,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Draws the current TEfficiency object; ///; /// \param[in] opt; /// - 1-dimensional case: same options as TGraphAsymmErrors::Draw(); /// but as default ""AP"" is used; /// - 2-dimensional case: by default use an histogram and in this case same options as TH2::Draw(); /// if using instad option ""GRAPH"" a TGraph2DAsymmErrors is used and; /// the same options as for TGraph2D applies; /// - 3-dimensional case: not yet supported; ///; /// Specific TEfficiency drawing options:; /// - E0 - plot bins where the total number of passed events is zero; /// (the error interval will be [0,1] )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:639,error,error,639,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Dummy error handler for X11. Used by FindUsableVisual().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:92,error,error,92,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Each character image, as defined by the font in the GC, is treated as an; /// additional mask for a fill operation on the drawable.; ///; /// \param [in] id the drawable; /// \param [in] gc the GC; /// \param [in] x, y coordinates, which are relative to the origin of the specified; /// drawable and define the origin of the first character; /// \param [in] s the character string; /// \param [in] len the number of characters in the string argument; ///; /// GC components in use: function, plane-mask, fill-style, font,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:175,mask,mask,175,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Emit ValueChanged(Long_t) signal. This signal is emitted when; /// fButtonToNum is false. The val has the following meaning:; /// val % 100 is the step size; /// val % 10000 / 100 != 0 indicates log step; /// val / 10000 != 0 indicates button down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:329,down,down,329,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Emit ValueSet(Long_t) signal. This signal is emitted when the; /// number entry value is changed. The val has the following meaning:; /// val % 100 is the step size; /// val % 10000 / 100 != 0 indicates log step; /// val / 10000 != 0 indicates button down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:337,down,down,337,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Emit a signal for OnError, where text is the error and it returns the; /// Parse Error Code, see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:131,error,error,131,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Emit a signal for OnFactalError, where text is the error and it; /// returns the Parse Error Code, see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:137,error,error,137,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Enable calculation of errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx:108,error,errors,108,hist/hist/src/THn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.; /// Provided for backward compatibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:462,error,error,462,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify a list of objects to be passed to the SETUP; /// functions via 'loadopts'; the objects must be streamable.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:536,error,error,536,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:651,failure,failure,651,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['error', 'failure']","['error', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Encode null terminated str using the session private key indcated by Key; /// and sends it over the network.; /// Returns number of bytes sent.or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:246,error,error,246,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Encode null terminated str using the session private key indicated by enc; /// and sends it over the network; /// Returns number of bytes sent, or -1 in case of error.; /// enc = 1 for private encoding, enc = 2 for public encoding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:247,error,error,247,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Entry point of worker threads for multi-threaded MakeAll().; /// info points to an (internal) THtmlThreadInfo object containing the current; /// THtml object, and whether ""force"" was passed to MakeAll().; /// The thread will poll GetNextClass() until no further class is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:357,avail,available,357,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Error callback function. Errors while parsing a xml file will be stored; /// at fmt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:86,Error,Error,86,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,2,['Error'],"['Error', 'Errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Error on the output for a given event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:86,Error,Error,86,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,2,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Error on the whole dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:86,Error,Error,86,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Establishes a passive grab on the keyboard. In the future, the; /// keyboard is actively grabbed, the last-keyboard-grab time is set; /// to the time at which the key was pressed (as transmitted in the; /// KeyPress event), and the KeyPress event is reported if all of the; /// following conditions are true:; ///; /// - the keyboard is not grabbed and the specified key (which can; /// itself be a modifier key) is logically pressed when the; /// specified modifier keys are logically down, and no other; /// modifier keys are logically down;; /// - either the grab window ""id"" is an ancestor of (or is) the focus; /// window, or ""id"" is a descendant of the focus window and contains; /// the pointer;; /// - a passive grab on the same key combination does not exist on any; /// ancestor of grab_window; ///; /// \param [in] id window id; /// \param [in] keycode specifies the KeyCode or AnyKey; /// \param [in] modifier specifies the set of keymasks or AnyModifier; the mask is; /// the bitwise inclusive OR of the valid keymask bits; /// \param [in] grab a switch between grab/ungrab key; /// grab = kTRUE grab the key and modifier; /// grab = kFALSE ungrab the key and modifier",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:572,down,down,572,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,"['down', 'mask']","['down', 'mask']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates F* (optimum scoring function) for all events for the given sets.; /// The result is used in ErrorRateReg().; /// --- NOT USED ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:188,Error,ErrorRateReg,188,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['Error'],['ErrorRateReg']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters.; /// It calculates the area under the bkg rejection vs signal efficiency curve.; /// The value returned is 1-area.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:100,error,error,100,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters.; /// It calculates the area under the bkg rejection vs signal efficiency curve.; /// The value returned is 1-area.; /// This works but is less efficient than calculating the Risk using RiskPerf().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:100,error,error,100,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters.; /// It calculates the area under the bkg rejection vs signal efficiency curve.; /// The value returned is 1-area.; ///; /// See comment under ErrorRateRoc().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:100,error,error,100,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,2,"['Error', 'error']","['ErrorRateRoc', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters.; /// using the `<Perf>` subsample.; /// Return the tau index giving the lowest error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:100,error,error,100,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters; /// This code is pretty messy at the moment.; /// Cleanup is needed.; /// -- NOT USED ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:100,error,error,100,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate parameterization error at point x. Optional argument coeff is; /// a vector of coefficients for the parameterisation, fNCoefficients; /// elements long.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:112,error,error,112,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Exception handler: we do not try to recover here, just exit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:122,recover,recover,122,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['recover'],['recover']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute HESSE. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:149,error,errors,149,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute IMPROVE. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:151,error,errors,151,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute MIGRAD. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:150,error,errors,150,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute MINOS for given list of parameters. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:178,error,errors,178,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute MINOS. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:149,error,errors,149,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute Ping to SQL Connection using the mysql_ping function.; /// Returns 0 if successful, non-zero in case an error occured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:94,Ping,Ping,94,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,2,"['Ping', 'error']","['Ping', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute Ping to SQL Connection.; /// Since mysql_ping tries to reconnect by itself,; /// a double call to the mysql function is implemented.; /// Returns kTRUE if successful",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:94,Ping,Ping,94,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['Ping'],['Ping']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute SEEK. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:148,error,errors,148,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute SIMPLEX. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:151,error,errors,151,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a Minuit command; ///; /// Equivalent to MNEXCM except that the command is given as a character string.; /// See TMinuit::mnhelp for the full list of available commands; /// See also the; /// [complete documentation of all the available commands](https://root.cern/sites/d35c7d8c.web.cern.ch/files/minuit.pdf); ///; /// Returns the status of the execution:; /// - 0: command executed normally; /// - 1: command is blank, ignored; /// - 2: command line unreadable, ignored; /// - 3: unknown command, ignored; /// - 4: abnormal termination (e.g., MIGRAD not converged); /// - 5: command is a request to read PARAMETER definitions; /// - 6: 'SET INPUT' command; /// - 7: 'SET TITLE' command; /// - 8: 'SET COVAR' command; /// - 9: reserved; /// - 10: END command; /// - 11: EXIT or STOP command; /// - 12: RETURN command",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:244,avail,available,244,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,error,errors,280,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a macro in the interpreter. Equivalent to the command line; /// command "".x filename"". If the filename has ""+"" or ""++"" appended; /// the macro will be compiled by ACLiC. The filename must have the format:; /// [path/]macro.C[+|++[g|O]][(args)].; /// The possible error codes are defined by TInterpreter::EErrorCode.; /// If padUpdate is true (default) update the current pad.; /// Returns the macro return value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:357,error,error,357,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:285,error,errors,285,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute action corresponding to one event.; ///; /// This member function is called when a object is clicked with the locator; ///; /// If Left button clicked in the object area, while the button is kept down; /// the cube representing the surrounding frame for the corresponding; /// new latitude and longitude position is drawn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:290,down,down,290,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute sql query.; /// Useful for commands like DROP TABLE or INSERT, where result set; /// is not interested. Return kTRUE if no error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:217,error,error,217,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute the give python script as if it were a macro (effectively an; /// execfile in __main__), and create Cling equivalents for any newly available; /// python classes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:226,avail,available,226,bindings/tpython/src/TPython.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute the specified drawing action on a data set (TDSet).; /// Event- or Entry-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// Returns -1 in case of error or number of selected events otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:269,error,error,269,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute the specified drawing action on a data set which is stored on the; /// master with name 'dsetname'.; /// The syntax for dsetname is name[#[dir/]objname], e.g.; /// ""mydset"" analysis of the first tree in the top dir of the dataset; /// named ""mydset""; /// ""mydset#T"" analysis tree ""T"" in the top dir of the dataset; /// named ""mydset""; /// ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset; /// named ""mydset""; /// ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the; /// dataset named ""mydset""; /// The last argument 'enl' specifies an entry- or event-list to be used as; /// event selection.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:758,error,error,758,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Execute this macro with params, if params is 0, default parameters; /// (set via SetParams) are used.; /// error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine().; /// Returns the result of the macro (return value or value of the last; /// expression), cast to a Long_t.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx:193,error,error,193,core/base/src/TMacro.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Expand (or shrink) the I/O buffer to newsize bytes.; /// If copy is true (the default), the existing content of the; /// buffer is preserved, otherwise the buffer is returned zero-ed out.; ///; /// In order to avoid losing data, if the current length is greater than; /// the requested size, we only shrink down to the current length.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx:393,down,down,393,core/base/src/TBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:405,error,error,405,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Explicitely make the member with the specified index the current member.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx:186,error,error,186,io/io/src/TArchiveFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Explicitely make the specified member the current member.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx:171,error,error,171,io/io/src/TArchiveFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Extract errors, produced by last ODBC function call",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:94,error,errors,94,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt in optfb information about wanted feedback settings.; /// Feedback are removed from the input string opt.; /// If action == 0, set up feedback accordingly, if action == 1 clean related; /// feedback settings (using info in optfb, if available, or reparsing opt).; ///; /// Feedback requirements are in the form; ///; /// <previous_option>fb=name1,name2,name3,... <next_option>; /// <previous_option>feedback=name1,name2,name3,...;<next_option>; ///; /// The special name 'stats' triggers feedback about events and packets.; /// The separator from the next option is either a ' ' or a ';'.; /// Called interanally by TProof::Process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:336,avail,available,336,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt information about output handling settings.; /// The understood keywords are:; /// of=`<file>`, outfile=`<file>` output file location; /// ds=`<dsname>`, dataset=`<dsname>` dataset name ('of' and 'ds' are; /// mutually exclusive,execution stops; /// if both are found); /// sft[=`<opt>`], savetofile[=`<opt>`] control saving to file; ///; /// For 'mvf', the `<opt>` integer has the following meaning:; /// `<opt>` = `<how>`*10 + `<force>`; /// `<force>` = 0 save to file if memory threshold is reached; /// (the memory threshold is set by the cluster; /// admin); in case an output file is defined, the; /// files are merged at the end;; /// 1 save results to file.; /// `<how>` = 0 save at the end of the query; /// 1 save results after each packet (to reduce the; /// loss in case of crash).; ///; /// Setting 'ds' automatically sets 'mvf=1'; it is still possible to set 'mvf=11'; /// to save results after each packet.; ///; /// The separator from the next option is either a ' ' or a ';'; ///; /// All recognized settings are removed from the input string opt.; /// If action == 0, set up the output file accordingly, if action == 1 clean related; /// output file settings.; /// If the final target file is local then 'target' is set to the final local path; /// when action == 0 and used to retrieve the file with TFile::Cp when action == 1.; ///; /// Output file settings are in the form; ///; /// `<previous_option>`of=name `<next_option>`; /// `<previous_option>`outfile=name,...;`<next_option>`; ///; /// The separator from the next option is either a ' ' or a ';'; /// Called interanally by TProof::Process.; ///; /// Returns 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1759,error,error,1759,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Extract requested segments from the cached content.; /// Such cache can be produced when server suddenly returns full data instead of segments; /// Returns -1 in case of error, 0 in case of success",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:256,error,error,256,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// FactalError callback function. Factal errors while parsing a xml file; /// will be stored at fmt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:124,error,errors,124,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill 1D histogram errors into vector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:104,error,errors,104,hist/hist/src/TSVDUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill Doubles 'lowest' and 'highest' with the lowest and highest value of; /// observable 'var' in this dataset. If the return value is true and error; /// occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:230,error,error,230,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill a RooDataHist with values sampled from this function at the; /// bin centers. If extendedMode is true, the p.d.f. values is multiplied; /// by the number of expected events in each bin; ///; /// An optional scaling by a given scaleFactor can be performed.; /// Returns a pointer to the input RooDataHist, or zero; /// in case of an error.; ///; /// If correctForBinSize is true the RooDataHist; /// is filled with the functions density (function value times the; /// bin volume) rather than function value.; ///; /// If showProgress is true; /// a process indicator is printed on stdout in steps of one percent,; /// which is mostly useful for the sampling of expensive functions; /// such as likelihoods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:423,error,error,423,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill all branches.; ///; /// This function loops on all the branches of this tree. For; /// each branch, it copies to the branch buffer (basket) the current; /// values of the leaves data types. If a leaf is a simple data type,; /// a simple conversion to a machine independent format has to be done.; ///; /// This machine independent version of the data is copied into a; /// basket (each branch has its own basket). When a basket is full; /// (32k worth of data by default), it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave po",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:880,error,error,880,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill all empty histogram bins in the range [ixlo,ixhi] where nbins is the; /// total number of histogram bins. This method samples the mid-point of the; /// range and if the mid-point value is within small tolerance of the interpolated; /// mid-point value fills all remaining elements through linear interpolation.; /// If the tolerance is exceeded, the algorithm is recursed on the two subranges; /// [xlo,xmid] and [xmid,xhi]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:292,toler,tolerance,292,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,2,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill expectedClass and expectedType with information on the data type of the; /// object/values contained in this branch (and thus the type of pointers; /// expected to be passed to Set[Branch]Address; /// return 0 in case of success and > 0 in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:339,failure,failure,339,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,4,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill polygon with function values at vertexes; ///; /// \param[in] n number of vertexes; /// \param[in] p polygon; /// \param[in] f function values at nodes; ///; /// Errors:; /// - illegal number of vertexes in polygon; /// - illegal call of FillPolygon: no levels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:253,Error,Errors,253,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the ROOT histogram 'hist' with values sampled from this; /// function at the bin centers. Our value is calculated by first; /// integrating out any variables in projectedVars and then scaling; /// the result by scaleFactor. Returns a pointer to the input; /// histogram, or zero in case of an error. The input histogram can; /// be any TH1 subclass, and therefore of arbitrary; /// dimension. Variables are matched with the (x,y,...) dimensions of; /// the input histogram according to the order in which they appear; /// in the input plotVars list. If scaleForDensity is true the; /// histogram is filled with a the functions density rather than; /// the functions value (i.e. the value at the bin center is multiplied; /// with bin volume)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:384,error,error,384,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the THnBase with the bins of hist that have content; /// or error != 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:151,error,error,151,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the files available in the file system below fPathInfo.fInputPath",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:101,avail,available,101,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the range (x1,x2) with points calculated using func(&x). No point will; /// be added at x1, and a point will always be added at x2. The density of points; /// will be calculated so that the maximum deviation from a straight line; /// approximation is prec*(ymax-ymin) down to the specified minimum horizontal spacing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:359,down,down,359,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fills the region closed by the specified path. The path is closed; /// automatically if the last point in the list does not coincide with the; /// first point.; ///; /// \param [in] id window identifier; /// \param [in] gc graphics context; /// \param [in] *points specifies an array of points; /// \param [in] npnt specifies the number of points in the array; ///; /// GC components in use: function, plane-mask, fill-style, fill-rule,; /// subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC; /// mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:494,mask,mask,494,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h].; /// using the GC you specify.; ///; /// GC components in use are: function, plane-mask, fill-style,; /// subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, and tile-stipple-y-origin.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:243,mask,mask,243,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize a query.; /// Returns -1 in case error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:128,error,error,128,proof/proofplayer/src/TProofPlayerLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize query with reference ref.; /// If force, force retrieval if the query is found in the local list; /// but has already been finalized (default kFALSE).; /// If ref = 0, finalize current query.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:319,error,error,319,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the qry-th query in fQueries.; /// If force, force retrieval if the query is found in the local list; /// but has already been finalized (default kFALSE).; /// If query < 0, finalize current query.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:325,error,error,325,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup afetr forking.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:159,error,error,159,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup. If master, create the TProof instance to talk; /// the worker or submaster nodes.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:227,error,error,227,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Finalize the server setup. If master, create the TProof instance to talk; /// to the worker or submaster nodes.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:230,error,error,230,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find a directory named ""apath"".; ///; /// It apath is null or empty, returns ""this"" directory.; /// Otherwise use the name ""apath"" to find a directory.; /// The absolute path syntax is:; ///; /// file.root:/dir1/dir2; ///; /// where file.root is the file and /dir1/dir2 the desired subdirectory; /// in the file. Relative syntax is relative to ""this"" directory. E.g:; /// ../aa.; /// Returns 0 in case path does not exist.; /// If printError is true, use Error with 'funcname' to issue an error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:541,Error,Error,541,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find a directory using apath.; /// It apath is null or empty, returns ""this"" directory.; /// Otherwise use apath to find a directory.; /// The absolute path syntax is: `file.root:/dir1/dir2`; ///; /// where file.root is the file and /dir1/dir2 the desired subdirectory; /// in the file. Relative syntax is relative to ""this"" directory. E.g: `../aa`.; /// Returns 0 in case path does not exist.; /// If printError is true, use Error with 'funcname' to issue an error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:512,Error,Error,512,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find a template decl within N nested namespaces, 0<=N<inf; /// Assumes 1 and only 1 template present and 1 and only 1 entity contained; /// by the namespace. Example: `ns1::ns2::..::%nsN::%myTemplate`; /// Returns nullptr in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:319,error,error,319,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find centre of a MIN-MAX scope and scale factors; ///; /// Output:; /// - SCALE(3) - scale factors; /// - CENTER(3) - centre; /// - IREP - reply (-1 if error in min-max)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:238,error,error,238,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find item with GetText == name. Search tree downwards starting at item.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldNameFrame.cxx:130,down,downwards,130,gui/guibuilder/src/TGuiBldNameFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldNameFrame.cxx,1,['down'],['downwards']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find item with fUserData == ptr. Search tree downwards starting; /// at item.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:131,down,downwards,131,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,1,['down'],['downwards']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find level lines for face; ///; /// \param[in] np number of nodes; /// \param[in] f face; /// \param[in] t additional function; ///; /// Error: number of points for line not equal 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:223,Error,Error,223,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find points along a contour where FCN is minimum; ///; /// Find NPTU points along a contour where the function; ///; /// FMIN (X(KE1),X(KE2)) = AMIN+UP; ///; /// where FMIN is the minimum of FCN with respect to all; /// the other NPAR-2 variable parameters (if any).; ///; /// IERRF on return will be equal to the number of points found:; /// - NPTU if normal termination with NPTU points found; /// - -1 if errors in the calling sequence (KE1, KE2 not variable); /// - 0 if less than four points can be found (using MNMNOT); /// - n>3 if only n points can be found (n < NPTU); ///; /// input arguments: parx, pary, devs, ngrid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:494,error,errors,494,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find the end header of the ZIP archive. Returns 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:147,error,error,147,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find the index number corresponding to the state name.; /// \see hasLabel() for checking if a given label has been defined.; /// \return Index of the category or std::numeric_limits<int>::min() on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx:283,failure,failure,283,roofit/roofitcore/src/RooAbsCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find the nearest point to xvalue. Return -1 if distance; /// exceeds tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:155,toler,tolerance,155,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find the server-specific readv config params. Returns kFALSE in case of; /// error, kTRUE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:163,error,error,163,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Find the tree which contains entry, and set it as the current tree.; ///; /// Returns the entry number in that tree.; ///; /// The input argument entry is the entry serial number in the whole chain.; ///; /// In case of error, LoadTree returns a negative number:; /// * -1: The chain is empty.; /// * -2: The requested entry number is less than zero or too large for the chain.; /// * -3: The file corresponding to the entry could not be correctly open; /// * -4: The TChainElement corresponding to the entry is missing or; /// the TTree is missing from the file.; /// * -5: Internal error, please report the circumstance when this happen; /// as a ROOT issue.; /// * -6: An error occurred within the notify callback.; ///; /// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new sub-tree.; /// See TNotifyLink for more information on the notification mechanism.; ///; /// \note This is the only routine which sets the value of fTree to a non-zero pointer.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:306,error,error,306,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// FindRankUp is FindRank in reverse.; /// Whereas FindRank looks for the object and computes the rank; /// along the way while walking DOWN the tree, FindRankUp already; /// knows where the object is and has to walk UP the tree from the; /// object to compute the rank.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:219,DOWN,DOWN,219,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['DOWN'],['DOWN']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fit a THnSparse with function f; ///; /// since the data is sparse by default a likelihood fit is performed; /// merging all the regions with empty bins for better performance efficiency; ///; /// Since the THnSparse is not drawn no graphics options are passed; /// Here is the list of possible options; ///; /// = ""I"" Use integral of function in bin instead of value at bin center; /// = ""X"" Use chi2 method (default is log-likelihood method); /// = ""U"" Use a User specified fitting algorithm (via SetFCN); /// = ""Q"" Quiet mode (minimum printing); /// = ""V"" Verbose mode (default is between Q and V); /// = ""E"" Perform better Errors estimation using Minos technique; /// = ""B"" Use this option when you want to fix one or more parameters; /// and the fitting function is like ""gaus"", ""expo"", ""poln"", ""landau"".; /// = ""M"" More. Improve fit results; /// = ""R"" Use the Range specified in the function range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:713,Error,Errors,713,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fit a projected item(s) from a Tree.; /// Returns -1 in case of error or number of selected events in case of success.; ///; /// The formula is a TF1 expression.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// By default the temporary histogram created is called htemp.; /// If varexp contains >>hnew , the new histogram created is called hnew; /// and it is kept in the current directory.; /// Example:; /// ~~~{.cpp}; /// tree.Fit(""pol4"",""sqrt(x)>>hsqrt"",""y>0""); /// will fit sqrt(x) and save the histogram as ""hsqrt"" in the current; /// directory.; /// ~~~; ///; /// The function returns the status of the histogram fit (see TH1::Fit); /// If no entries were selected, the function returns -1;; /// (i.e. fitResult is null if the fit is OK)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:150,error,error,150,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fit histogram with function fname.; ///; ///; /// fname is the name of a function available in the global ROOT list of functions; /// `gROOT->GetListOfFunctions`; /// The list include any TF1 object created by the user plus some pre-defined functions; /// which are automatically created by ROOT the first time a pre-defined function is requested from `gROOT`; /// (i.e. when calling `gROOT->GetFunction(const char *name)`).; /// These pre-defined functions are:; /// - `gaus, gausn` where gausn is the normalized Gaussian; /// - `landau, landaun`; /// - `expo`; /// - `pol1,...9, chebyshev1,...9`.; ///; /// For printing the list of all available functions do:; ///; /// TF1::InitStandardFunctions(); // not needed if `gROOT->GetFunction` is called before; /// gROOT->GetListOfFunctions()->ls(); ///; /// `fname` can also be a formula that is accepted by the linear fitter containing the special operator `++`,; /// representing linear components separated by `++` sign, for example `x++sin(x)` for fitting `[0]*x+[1]*sin(x)`; ///; /// This function finds a pointer to the TF1 object with name `fname` and calls TH1::Fit(TF1 *, Option_t *, Option_t *,; /// Double_t, Double_t). See there for the fitting options and the details about fitting histograms",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:168,avail,available,168,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fit this graph with function f1.; ///; /// \param[in] f1 pointer to the function object; /// \param[in] option string defining the fit options (see table below).; /// \param[in] goption specify a list of graphics options. See TGraph::Draw and TGraphPainter for a complete list of these possible options.; /// \param[in] rxmin lower fitting range; /// \param[in] rxmax upper fitting range; ///; /// \anchor GFitOpt; /// ### Graph Fitting Options; /// The list of fit options is given in parameter option.; ///; /// option | description; /// -------|------------; /// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; /// ""W"" | Ignore all point errors when fitting a TGraphErrors or TGraphAsymmErrors; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""Q"" | Quiet mode (minimum printing); /// ""V"" | Verbose mode (default is between Q and V); /// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting ra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:866,error,errors,866,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fit this multigraph with function f1.; ///; /// In this function all graphs of the multigraph are fitted simultaneously; ///; /// f1 is an already predefined function created by TF1.; /// Predefined functions such as gaus, expo and poln are automatically; /// created by ROOT.; ///; /// The list of fit options is given in parameter `option`which may takes the; /// following values:; ///; /// - ""W"" Ignore all the point errors; /// - ""U"" Use a User specified fitting algorithm (via SetFCN); /// - ""Q"" Quiet mode (minimum printing); /// - ""V"" Verbose mode (default is between Q and V); /// - ""B"" Use this option when you want to fix one or more parameters; /// and the fitting function is like ""gaus"",""expo"",""poln"",""landau"".; /// - ""R"" Use the Range specified in the function range; /// - ""N"" Do not store the graphics function, do not draw; /// - ""0"" Do not plot the result of the fit. By default the fitted function; /// is drawn unless the option""N"" above is specified.; /// - ""+"" Add this new fitted function to the list of fitted functions; /// (by default, any previous function is deleted); /// - ""C"" In case of linear fitting, not calculate the chisquare (saves time); /// - ""F"" If fitting a polN, switch to minuit fitter; /// - ""ROB"" In case of linear fitting, compute the LTS regression; /// coefficients (robust(resistant) regression), using; /// the default fraction of good points; /// - ""ROB=0.x"" - compute the LTS regression coefficients, using; /// 0.x as a fraction of good points; ///; /// When the fit is drawn (by default), the parameter goption may be used; /// to specify a list of graphics options. See TGraph::Paint for a complete; /// list of these options.; ///; /// In order to use the Range option, one must first create a function; /// with the expression to be fitted. For example, if your graph; /// has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:507,error,errors,507,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fits this 2D graph with function f2; ///; /// f2 is an already predefined function created by TF2.; ///; /// See TGraph::Fit for the available fitting options and fitting notes; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:219,avail,available,219,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Floating point error checking and tracing for given float value; //bool RooResolutionModel::traceEvalHook(double value) const; //{; // // check for a math error or negative value; // return TMath::IsNaN(value) ;; //}; ////////////////////////////////////////////////////////////////////////////////; /// Return the list of servers used by our normalization integral",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:101,error,error,101,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Flush the current write buffer to the file.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx:160,error,error,160,io/io/src/TFileCacheWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Flush the write cache if active.; ///; /// Return kTRUE in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:153,error,error,153,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Flush to disk all the baskets of this branch and any of subbranches.; /// Return the number of bytes written or -1 in case of write error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:218,error,error,218,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// For a given transform (first parameter), fills the histogram (second parameter); /// with the transform output data, specified in the third parameter; /// If the 2nd parameter h_output is empty, a new histogram (TH1D or TH2D) is created; /// and the user is responsible for deleting it.; ///; /// Available options:; /// - ""RE"" - real part of the output; /// - ""IM"" - imaginary part of the output; /// - ""MAG"" - magnitude of the output; /// - ""PH"" - phase of the output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:383,Avail,Available,383,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:379,error,error,379,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,3,"['error', 'recover']","['error', 'errors', 'recover']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// For axis = 1,2 or 3 returns the mean value of the histogram along; /// X,Y or Z axis.; ///; /// For axis = 11, 12, 13 returns the standard error of the mean value; /// of the histogram along X, Y or Z axis; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned mean is; /// the (unbinned) one calculated at fill time. If a range has been set, however,; /// the mean is calculated using the bins in range, as described above; THIS; /// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; /// the range. To ensure that the returned mean (and all other statistics) is; /// always that of the binned data stored in the histogram, call TH1::ResetStats.; /// See TH1::GetStats.; ///; /// Return mean value of this histogram along the X axis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:225,error,error,225,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// For the event currently being fetched into the miss cache, find the IO; /// (offset / length tuple) to pull in the current basket for a given branch.; ///; /// Returns:; /// - IOPos describing the IO operation necessary for the basket on this branch; /// - On failure, IOPos.length will be set to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:346,failure,failure,346,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Fork a child.; /// If successful, return 0 in the child process and the child pid in the parent; /// process. The child pid is registered for reaping.; /// Return <0 in the parent process in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:285,failure,failure,285,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:129,error,error,129,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,6,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Forwards the execution to the TDSet.; /// Returns -1 in case of error or number of selected events in case of success.; /// See TDSet::Browse().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:150,error,error,150,proof/proof/src/TProofChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Forwards the execution to the TDSet.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; /// See TDSet::Process().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:162,error,error,162,proof/proof/src/TProofChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Function for internal use, checking parameter validity; /// An invalid parameter results in an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:181,error,error,181,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Function that is called at the end of redirectServers(). Can be overloaded; /// to inject some class-dependent behavior after server redirection, e.g.; /// resetting of caches. The return value is meant to be an error flag, so in; /// case something goes wrong the function should return `true`. If you; /// overload this function, don't forget to also call the function of the; /// base class.; ///; /// \see redirectServers() For a detailed explanation of the function parameters.; ///; // \param[in] newServerList One of the original parameters passed to redirectServers().; // \param[in] mustReplaceAll One of the original parameters passed to redirectServers().; // \param[in] nameChange One of the original parameters passed to redirectServers().; // \param[in] isRecursiveStep One of the original parameters passed to redirectServers().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:298,error,error,298,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Function to resize a canvas so that the plot inside is shown in real aspect; /// ratio; ///; /// \param[in] axis 1 for resizing horizontally (x-axis) in order to get real; /// aspect ratio, 2 for the resizing vertically (y-axis); /// \return false if error is encountered, true otherwise; ///; /// ~~~ {.cpp}; /// hpxpy->Draw();; /// c1->SetRealAspectRatio();; /// ~~~; ///; /// - For defining the concept of real aspect ratio, it is assumed that x and y; /// axes are in same units, e.g. both in MeV or both in ns.; /// - You can resize either the width of the canvas or the height, but not both; /// at the same time; /// - Call this function AFTER drawing AND zooming (SetUserRange) your TGraph or; /// Histogram, otherwise it cannot infer your actual axes lengths; /// - This function ensures that the TFrame has a real aspect ratio, this does not; /// mean that the full pad (i.e. the canvas or png output) including margins has; /// exactly the same ratio; /// - This function does not work if the canvas is divided in several subpads",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:337,error,error,337,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Function used internally to check the consistency between the; /// various histograms. Checks are performed on nonexistent or empty; /// histograms, the precise histogram class, and the number of bins.; /// In addition, integrals over the ""allowed"" bin ranges are computed.; /// Any inconsistency results in a error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:396,error,error,396,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// General error handler function. It calls the user set error handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:94,error,error,94,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// General purpose call to go through the existing datasets.; /// If `<user>` is 0 or ""*"", act on all datasets for the given `<group>`.; /// If `<group>` is 0 or ""*"", act on all datasets.; /// If `<dsName>` is defined, only the information about the specified dataset; /// is processed.; /// Action depends on option; available options:; ///; /// kExport Return a TMap object containing all the information about; /// datasets in the form:; /// { `<group>`, `<map of users>` }; /// |; /// { `<map of datasets>`, `<dataset>`}; /// (`<dataset>` are TFileCollection objects); /// kShowDefault as kExport with in addition a default selection including; /// the datasets from the current user, the ones from the group; /// and the common ones; ///; /// kPrint print the dataset content; no output is returned; /// kList get a list of available dataset names; /// kForceScan Re-open files while processing kPrint (do not use the; /// pre-processed information); /// kNoHeaderPrint Labelling header is not printed; /// kQuotaUpdate update {group, user} quotas; no output is returned; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:401,avail,available,401,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with events sampled from our distribution.; /// Generate the specified number of events or expectedEvents() if not specified.; /// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; /// constant and not be used for event generation.; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; /// \return RooDataSet *, owned by caller.; ///; /// Any variables of this PDF that are not in whatVars will use their; /// current values and be treated as fixed parameters. Returns zero; /// in case of an error.; ///; /// <table>; /// <tr><th> Type of CmdArg <th> Effect on generate; /// <tr><td> `Name(const char* name)` <td> Name of the output dataset; /// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; /// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; /// <tr><td> `Extended()` <td> If no number of events to be generated is given,; /// use expected number of events from extended likelihood term.; /// This evidently only works for extended PDFs.; /// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; /// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; /// RooHistPdfs etc); /// \note Datasets that are generated in binned mode are returned as weighted unbinned datasets. This means that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:741,error,error,741,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with events sampled from our distribution.; /// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; /// constant and not be used for event generation; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg to change behaviour of generateBinned(); /// \return RooDataHist *, to be managed by caller.; ///; /// Generate the specified number of events or expectedEvents() if not specified.; ///; /// Any variables of this PDF that are not in whatVars will use their; /// current values and be treated as fixed parameters. Returns zero; /// in case of an error. The caller takes ownership of the returned; /// dataset.; ///; /// The following named arguments are supported; /// | Type of CmdArg | Effect on generation; /// |---------------------------|-----------------------; /// | `Name(const char* name)` | Name of the output dataset; /// | `Verbose(bool flag)` | Print informational messages during event generation; /// | `NumEvents(int nevt)` | Generate specified number of events; /// | `Extended()` | The actual number of events generated will be sampled from a Poisson distribution with mu=nevt. This can be *much* faster for peaked PDFs, but the number of events is not exactly what was requested.; /// | `ExpectedData()` | Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:757,error,error,757,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with; /// events sampled from our distribution.; ///; /// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; /// Any variables of this PDF that are not in `whatVars` will use their; /// current values and be treated as fixed parameters.; /// \param[in] nEvents Generate the specified number of events or else try to use; /// expectedEvents() if nEvents <= 0 (default).; /// \param[in] verbose Show which generator strategies are being used.; /// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; /// instead of generating single events.; /// \param[in] binnedTag; /// \param[in] expectedData Call setExpectedData on the genContext.; /// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; /// if PDF is extended.; /// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; /// dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1047,error,error,1047,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with; /// events sampled from our distribution.; ///; /// \param[in] whatVars Variables that values should be generated for.; /// \param[in] nEvents How many events to generate. If `nEvents <=0`, use the value returned by expectedEvents() as target.; /// \param[in] expectedData If set to true (false by default), the returned histogram returns the 'expected'; /// data sample, i.e. no statistical fluctuations are present.; /// \param[in] extended For each bin, generate Poisson(x, mu) events, where `mu` is chosen such that *on average*,; /// one would obtain `nEvents` events. This means that the true number of events will fluctuate around the desired value,; /// but the generation happens a lot faster.; /// Especially if the PDF is sharply peaked, the multinomial event generation necessary to generate *exactly* `nEvents` events can; /// be very slow.; ///; /// The binning used for generation of events is the currently set binning for the variables.; /// It can e.g. be changed using; /// ```; /// x.setBins(15);; /// x.setRange(-5., 5.);; /// pdf.generateBinned(RooArgSet(x), 1000);; /// ```; ///; /// Any variables of this PDF that are not in `whatVars` will use their; /// current values and be treated as fixed parameters.; /// \return RooDataHist* owned by the caller. Returns `nullptr` in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1460,error,error,1460,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset using a prototype dataset as a model,; /// with values of the variables in `whatVars` sampled from our distribution.; ///; /// \param[in] whatVars Generate for these variables.; /// \param[in] prototype Use this dataset; /// as a prototype: the new dataset will contain the same number of; /// events as the prototype (by default), and any prototype variables not in; /// whatVars will be copied into the new dataset for each generated; /// event and also used to set our PDF parameters. The user can specify a; /// number of events to generate that will override the default. The result is a; /// copy of the prototype dataset with only variables in whatVars; /// randomized. Variables in whatVars that are not in the prototype; /// will be added as new columns to the generated dataset.; /// \param[in] nEvents Number of events to generate. Defaults to 0, which means number; /// of event in prototype dataset.; /// \param[in] verbose Show which generator strategies are being used.; /// \param[in] randProtoOrder Randomise order of retrieval of events from proto dataset.; /// \param[in] resampleProto Resample from the proto dataset.; /// \return The new dataset. Returns zero in case of an error. The caller takes ownership of the; /// returned dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1304,error,error,1304,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate an out-of-bounds error. Always returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx:112,error,error,112,core/cont/src/TArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TArray.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generate the specified number of events with nEvents>0 and; /// and return a dataset containing the generated events. With nEvents<=0,; /// generate the number of events in the prototype dataset, if available,; /// or else the expected number of events, if non-zero.; /// If extendedMode = true generate according to a Poisson(nEvents); /// The returned dataset belongs to the caller. Return zero in case of an error.; /// Generation of individual events is delegated to a virtual generateEvent(); /// method. A virtual initGenerator() method is also called just before the; /// first call to generateEvent().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:285,avail,available,285,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generates a random integer N according to a Poisson law.; /// Prob(N) = exp(-mean)*mean^N/Factorial(N); ///; /// Use a different procedure according to the mean value.; /// The algorithm is the same used by CLHEP.; /// For lower value (mean < 25) use the rejection method based on; /// the exponential.; /// For higher values use a rejection method comparing with a Lorentzian; /// distribution, as suggested by several authors.; /// This routine returns now an unsigned 64 bit integer; /// For large values, larger than 1.84e+19, we print an error message; /// advising to use the Trandom::PoissonD for such large values,; /// and return the max value UINT64_MAX",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:629,error,error,629,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generic (non-data based) selector processing: the Process() method of the; /// specified selector (.C) or TSelector object is called 'n' times.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:269,error,error,269,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generic (non-data based) selector processing: the Process() method of the; /// specified selector is called 'n' times.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:244,error,error,244,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Generic stress steering function; returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:148,error,error,148,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get AttFill pointer for specified error dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:120,error,error,120,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get AttLine pointer for specified error dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:120,error,error,120,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get Fill Color for specified error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:115,error,error,115,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get Fill Style for specified error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:115,error,error,115,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get Line Color for specified error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:115,error,error,115,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get Line Style for specified error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:115,error,error,115,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get Line Width for specified error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:115,error,error,115,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get a font by name. If font is not found, fixed font is returned,; /// if fixed font also does not exist return 0 and print error.; /// The loaded font needs to be freed using TVirtualX::DeleteFont().; /// If fixedDefault is false the ""fixed"" font will not be substituted; /// as fallback when the asked for font does not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx:210,error,error,210,gui/gui/src/TGClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get a font from the font pool. Fonts must be freed via; /// TGClient::FreeFont(). Returns 0 in case of error or if font; /// does not exist. If fixedDefault is false the ""fixed"" font; /// will not be substituted as fallback when the asked for font; /// does not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx:189,error,error,189,gui/gui/src/TGClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get a map {server-name, list-of-files} for collection 'fc' to be used in; /// TPacketizerFile. Returns a pointer to the map (ownership of the caller).; /// Or (TMap *)0 and an error message in emsg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:262,error,error,262,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get actual end-point url for a path; /// Returns 0 in case of success and 1 if any error occured",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFileStager.cxx:169,error,error,169,net/net/src/TNetFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFileStager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get actual endpoint URL; ///; /// param path: the entry-point URL; /// param endpath: the actual endpoint URL; /// returns: 0 in the case of success and 1 if any error occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFileStager.cxx:248,error,error,248,net/netxng/src/TNetXNGFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFileStager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get all high errors `e` on y coordinates as an array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:99,error,errors,99,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get all high errors on y coordinates as an array summed according to `fSumErrorsMode`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:99,error,errors,99,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get all low errors `e` on y coordinates as an array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:98,error,errors,98,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get all low errors on y coordinates as an array summed according to `fSumErrorsMode`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:98,error,errors,98,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get all parameter info (name, value, errors)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:123,error,errors,123,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get availabe font size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx:90,avail,availabe,90,graf3d/gl/src/TGLFontManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFontManager.cxx,2,['avail'],['availabe']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get bin error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:94,error,error,94,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get entry from the file to memory.; ///; /// - getall = 0 : get only active branches; /// - getall = 1 : get all branches; ///; /// Return the total number of bytes read,; /// 0 bytes read indicates a failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:287,failure,failure,287,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get error e on y coordinate for point `i`.; /// In case of asymmetric errors the mean of the square sum is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get error matrix element (return all zero if matrix is not available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:90,error,error,90,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get error on x coordinate for point `i`.; /// In case of asymmetric errors the mean of the square sum is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get error on y coordinate for point `i`.; /// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.; /// In case of asymmetric errors the mean of the square sum is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get final URL for file being opened asynchronously.; /// Returns 0 is the information is not yet available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:183,avail,available,183,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get fit errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:94,error,errors,94,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get from the master the list of names of the packages available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:140,avail,available,140,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error e on y coordinate for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:95,error,error,95,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on X.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:95,error,error,95,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on X[i].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:95,error,error,95,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on Y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:95,error,error,95,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on Y[i].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:95,error,error,95,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on x coordinate for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:95,error,error,95,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get high error on y coordinate for point `i`.; /// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:95,error,error,95,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get index value of a RooAbsCategory stored in set with given name. If none is found, value of defVal is returned.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:208,error,error,208,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get instance of the effective manager for 'url'; /// Return 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:151,failure,failure,151,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get list of available packages; /// Returns a pointer to a TList object, transferring ownership to the caller",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:98,avail,available,98,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get list of shared libraries loaded at the start of the executable.; /// Returns 0 in case list cannot be obtained or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:215,error,error,215,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error e on y coordinate for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:94,error,error,94,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on X.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:94,error,error,94,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on X[i].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:94,error,error,94,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on Y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:94,error,error,94,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on Y[i].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:94,error,error,94,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on x coordinate for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:94,error,error,94,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get low error on y coordinate for point `i`.; /// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:94,error,error,94,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get picture with specified pixmap and mask from pool.; /// Picture must be freed using TGPicturePool::FreePicture().; /// If picture is not found 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGPicture.cxx:124,mask,mask,124,gui/gui/src/TGPicture.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGPicture.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get port # to which server socket is bound. In case of error returns -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx:141,error,error,141,net/net/src/TServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get socket options. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:128,error,error,128,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get square of the error of bin addressed by linidx as; /// \f$\sum weight^{2}\f$; /// If errors are not enabled (via Sumw2() or CalculateErrors()); /// return contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:104,error,error,104,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get state name of a RooAbsCategory stored in set with given name. If none is found, value of defVal is returned.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:207,error,error,207,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get statistics about CPU time, real time and bytes read.; /// If verbose, print the resuls (always available via GetCpuTime(), GetRealTime(); /// and GetBytesRead()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:185,avail,available,185,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get string value of a RooStringVar stored in set with given name. If none is found, value of defVal is returned.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:207,error,error,207,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the HTTP header. Depending on the return code we can see if; /// the file exists and if the server uses mod_root.; /// Returns -1 in case of an error, -2 in case the file does not exists,; /// -3 in case HEAD is not supported (dCache HTTP door) and; /// 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:234,error,error,234,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the error matrix in a pointer to a NxN array.; /// excluding the fixed parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:94,error,error,94,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the full path to PAR, looking also in the global dirs.; /// Returns -1 if not found, 0 if available in global dirs, 1 if it can be; /// uploaded from the local package dir.; /// For the cases >= 0, par is filled with the path of the PAR file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:180,avail,available,180,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the list a libraries on which the specified lib depends. The; /// returned string contains as first element the lib itself.; /// Returns 0 in case the lib does not exist or does not have; /// any dependencies. If useDyld is true, we iterate through all available; /// libraries and try to construct the dependency chain by resolving each; /// symbol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:343,avail,available,343,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the name of a column given its index (column>=0).; /// In case of error the column name is """".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:156,error,error,156,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the names of the virtual machines in the pool.; /// Return a TList of TObjString or 0 in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx:187,failure,failure,187,proof/proof/src/TCondor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TCondor.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the next token, it is stored in this TString.; /// Returns true if new token is available, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:170,avail,available,170,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the specified font.; /// The font can be one of the following forms:; /// XLFD (see X documentation); /// ""Family [size [style] [style ...]]""; /// Returns 0 if error or no font can be found.; /// If fixedDefault is false the ""fixed"" font will not be substituted; /// as fallback when the asked for font does not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:250,error,error,250,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get the value from the specified parameter from the specified collection.; /// Returns -1 in case of error (i.e. list is 0, parameter does not exist; /// or value type does not match), 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:187,error,error,187,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,5,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get value of a RooAbsReal stored in set with given name. If none is found, value of defVal is returned.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:198,error,error,198,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get value of static flag controlling whether exception should be thrown upon an; /// error during regular expression compilation by the PCRE engine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:171,error,error,171,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Get various ipar parameter attributes:; ///; /// - cname: parameter name; /// - value: parameter value; /// - verr: parameter error; /// - vlow: lower limit; /// - vhigh: upper limit; ///; /// WARNING! parname must be suitably dimensioned in the calling function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:212,error,error,212,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// GetN() returns the number of allocated cells if any.; /// GetN() > 0 shows how many cells; /// can be available via GetP() method.; /// GetN() == 0 then GetP() must return 0 as well",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx:188,avail,available,188,graf3d/g3d/src/TPoints3DABC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// GetP() returns the pointer to the float point array; /// of points if available; /// The number of the available cells can be found via; /// GetN() method.; /// GetN() > 0 shows how many cells",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx:156,avail,available,156,graf3d/g3d/src/TPoints3DABC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Gets last dataset modification time. Returns -1 on error, or number of; /// seconds since epoch on success",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:137,error,error,137,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Give next available particle's id.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx:96,avail,available,96,test/RootShower/MyEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Given a base index name (without any modifiers) return a pointer; /// to the token described, and the character within that token.; ///; /// Valid input forms include:; ///; /// N.M Token number N (with numbering starting at 1) and; /// character number M (with numbering starting at 0).; ///; /// M.X Like above, but token is markup and X is an attribute.; ///; /// begin The start of all text; ///; /// end The end of all text; ///; /// N.last Last character of token number N.; ///; /// N.end One past last character of token number N.; ///; /// sel.first First character of the selection.; ///; /// sel.last Last character of the selection.; ///; /// sel.end On past last character of the selection.; ///; /// insert The character holding the insertion cursor.; ///; /// @X,Y The character a location X,Y of the clipping window.; ///; /// &DOM The DOM Address of a token.; ///; /// Zero is returned if we are successful and non-zero if there is; /// any kind of error.; ///; /// If the given token doesn't exist (for example if there are only 10; /// tokens and 11.5 is requested) then *ppToken is left pointing to NULL.; /// But the function still returns 0 for success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx:1052,error,error,1052,gui/guihtml/src/TGHtmlIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Given a list of elements, compute the minimum and maximum width needed; /// to render the list. Stop the search at the first element seen that is; /// in the following set:; ///; /// <tr> <td> <th> </tr> </td> </th> </table>; ///; /// Return a pointer to the element that stopped the search, or to NULL; /// if we ran out of data.; ///; /// Sometimes the value returned for both min and max will be larger than; /// the true minimum and maximum. This is rare, and only occurs if the; /// element string contains figures with flow-around text.; ///; /// p - Start the search here; /// pMin - Return the minimum width here; /// pMax - Return the maximum width here; /// lineWidth - Total width available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx:778,avail,available,778,gui/guihtml/src/TGHtmlTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Given a particular IO description (offset / length) representing a 'miss' of; /// the TTreeCache's primary cache, calculate all the corresponding IO that; /// should be performed.; ///; /// `all` indicates that this function should search the set of _all_ branches; /// in this TTree. When set to false, we only search through branches that; /// have previously incurred a miss.; ///; /// Returns:; /// - TBranch pointer corresponding to the basket that will be retrieved by; /// this IO operation.; /// - If no corresponding branch could be found (or an error occurs), this; /// returns nullptr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:641,error,error,641,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Go downwards from current level via ibranch as low in the tree as possible.; /// Return value flags if the operation was successful.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:89,down,downwards,89,geom/geom/src/TGeoElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx,1,['down'],['downwards']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Go in parallel mode with at most ""nodes"" slaves. Since the fSlaves; /// list is sorted by slave performace the active list will contain first; /// the most performant nodes. Returns the number of active slaves.; /// If random is TRUE, and nodes is less than the number of available workers,; /// a random selection is done.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:358,avail,available,358,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Go upwards from the current location until the next branching, then down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx:154,down,down,154,geom/geom/src/TGeoElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoElement.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// GrabIndex returns a static string (so use it or copy it immediately, do not; /// call GrabIndex twice in the same expression) containing the size of the; /// array data member.; /// In case of error, or if the size is not specified, GrabIndex returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:279,error,error,279,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Graph2D constructor with a TH2 (h2) as input.; /// Only the h2's bins within the X and Y axis ranges are used.; /// Empty bins, recognized when both content and errors are zero, are excluded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:247,error,errors,247,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle Input Events.; ///; /// Handle input events, like button up/down in current canvas.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:153,down,down,153,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle X11 I/O error (happens when connection to display server; /// is broken).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:101,error,error,101,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle X11 error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:97,error,error,97,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message from the open file 'f'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:93,avail,available,93,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle available message in the open file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:93,avail,available,93,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,4,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle masked events only if window wid is the window for which the; /// event was reported or if wid is a parent of the event window. The not; /// masked event are handled directly. The masked events are:; /// kButtonPress, kButtonRelease, kKeyPress, kKeyRelease, kEnterNotify,; /// kLeaveNotify, kMotionNotify.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx:93,mask,masked,93,gui/gui/src/TGClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx,3,['mask'],['masked']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Handle the 'up' and 'down' arrow key events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCommandPlugin.cxx:107,down,down,107,gui/gui/src/TGCommandPlugin.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCommandPlugin.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Histogram is resized along axis such that x is in the axis range.; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The algorithm works for 1-d, 2-D and 3-D histograms.; /// The axis must be extendable before invoking this function.; /// Ex:; ///; /// ~~~ {.cpp}; /// h->GetXaxis()->SetCanExtend(kTRUE);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:449,error,errors,449,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,error,error,89,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,"['error', 'failure']","['error', 'failures']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// If error messages are disabled, the interpreter should suppress its; /// failures and warning messages from stdout. Return the previous state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:89,error,error,89,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,"['error', 'failure']","['error', 'failures']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// If the class supports it, generate an offset array base.; ///; /// This class only returns `nullptr` on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeaf.cxx:190,error,error,190,tree/tree/src/TLeaf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeaf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Implementation of squared-error ramp loss function (eq 39,40 in ref 1); /// This is used for binary Classifications where y = {+1,-1} for (sig,bkg)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:112,error,error,112,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Implements a default starting-point heuristic. While interior-point theory; /// places fairly loose restrictions on the choice of starting point, the choice; /// of heuristic can significantly affect the robustness and efficiency of the; /// algorithm.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:290,robust,robustness,290,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['robust'],['robustness']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Implements one parameter definition; ///; /// Called from MNREAD and user-callable; /// Implements one parameter definition, that is:; /// parses the string CRDBUF and calls MNPARM; ///; /// output conditions:; /// - ICONDN = 0 all OK; /// - ICONDN = 1 error, attempt to define parameter is ignored; /// - ICONDN = 2 end of parameter definitions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:339,error,error,339,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:661,error,error,661,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Import a clone of a generic TObject into workspace generic object container. Imported; /// object can be retrieved by name through the obj() method. The object is cloned upon; /// importation and the input argument does not need to live beyond the import call; ///; /// Returns true if an error has occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:375,error,error,375,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Import a clone of a generic TObject into workspace generic object container.; /// The imported object will be stored under the given alias name rather than its; /// own name. Imported object can be retrieved its alias name through the obj() method.; /// The object is cloned upon importation and the input argument does not need to live beyond the import call; /// This method is mostly useful for importing objects that do not have a settable name such as TMatrix; ///; /// Returns true if an error has occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:580,error,error,580,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Import a dataset (RooDataSet or RooDataHist) into the workspace. The workspace will contain a copy of the data.; /// The dataset and its variables can be renamed upon insertion with the options below; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `Rename(const char* suffix)` <td> Rename dataset upon insertion; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Change names of observables in dataset upon insertion; /// <tr><td> `Silence` <td> Be quiet, except in case of errors; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:609,error,errors,609,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Import code of class 'tc' into the repository. If code is already in repository it is only imported; /// again if doReplace is false. The names and location of the source files is determined from the information; /// in TClass. If no location is found in the TClass information, the files are searched in the workspace; /// search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; /// files respectively. If files cannot be found, abort with error status, otherwise update the internal; /// class-to-file map and import the contents of the files, if they are not imported yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:583,error,error,583,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// In case of a program crash, it will be possible to recover the data in the; /// tree up to the last AutoSave point.; /// This function may be called before filling a TTree to specify when the; /// branch buffers and TTree header are flushed to disk as part of; /// TTree::Fill().; /// The default is -300000000, ie the TTree will write data to disk once it; /// exceeds 300 MBytes.; /// CASE 1: If fAutoSave is positive the watermark is reached when a multiple of; /// fAutoSave entries have been filled.; /// CASE 2: If fAutoSave is negative the watermark is reached when -fAutoSave; /// bytes can be written to the file.; /// CASE 3: If fAutoSave is 0, AutoSave() will never be called automatically; /// as part of TTree::Fill().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:137,recover,recover,137,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['recover'],['recover']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Includes all given headers in the interpreter. Returns true when we could; /// include the headers and otherwise false on an error when including.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:211,error,error,211,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate object 'newobj' in the list 'outlist'.; /// The object is merged with an object of the same name already existing in; /// the list, or just added.; /// The boolean merged is set to kFALSE when the object is just added to 'outlist';; /// this happens if the Merge() method does not exist or if a object named as 'obj'; /// is not already in the list. If the obj is not 'merged' than it should not be; /// deleted, unless outlist is not owner of its objects.; /// Return 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:587,error,error,587,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the received object 'obj' into the output list fOutput.; /// The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' optimizing the memory; /// consumption.; /// Returns -1 in case of error, 1 if the object has been merged into another; /// one (so that its ownership has not been taken and can be deleted), and 0; /// otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:321,error,error,321,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Increment iteration counter for statement, where parameter can be set.; /// Statement with parameters of previous iteration; /// automatically will be applied to database.; /// Actually a NO-OP for SQLite, as parameters stay bound when step-ping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteStatement.cxx:327,ping,ping,327,sql/sqlite/src/TSQLiteStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteStatement.cxx,1,['ping'],['ping']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Init the packetizer; /// Return 0 on success (fPacketizer is correctly initialized), -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:177,failure,failure,177,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialization of the primitive type arrays if the new size is bigger than the available space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:165,avail,available,165,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize Win32 system. Returns kFALSE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:137,failure,failure,137,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize X11 system. Returns kFALSE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:135,failure,failure,135,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,2,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize parser parameters, such as, disactivate non-standards libxml1; /// features, on/off validation, clear error and warning messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:199,error,error,199,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize random machine using seed from /dev/urandom; /// (or current time if /dev/urandom not available).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:183,avail,available,183,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the dataset manager from directives or from defaults; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:182,failure,failure,182,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the X system. Returns kFALSE in case of failure.; /// It is implementation dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:138,failure,failure,138,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Insert src text from start_src to end_src into text at position ins_pos.; /// Returns false in case of failure (start_src, end_src out of range for; /// src, and ins_pos out of range for this).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGText.cxx:189,failure,failure,189,gui/gui/src/TGText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGText.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:99,Error,ErrorHandler,99,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['Error'],['ErrorHandler']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler. User has to specify the class name as; /// part of the location, just like for the global Info(), Warning() and; /// Error() functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:99,Error,ErrorHandler,99,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,2,['Error'],"['Error', 'ErrorHandler']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:113,error,error,113,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Internal function compute integral and optionally the error between the limits; /// specified by the bin number values working for all histograms (1D, 2D and 3D)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:140,error,error,140,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Issue a stage request for a single file; ///; /// param path: the path of the file to stage; /// param opt: defines 'option' and 'priority' for 'Prepare': the format is; /// opt = ""option=o priority=p""; /// returns: 0 for success, -1 for error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx:324,error,error,324,net/netxng/src/TNetXNGSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Issue error message. Use ""location"" to specify the method where the; /// error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:92,error,error,92,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Issue fatal error message. Use ""location"" to specify the method where the; /// fatal error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:98,error,error,98,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Issue stage requests for multiple files; ///; /// param pathlist: list of paths of files to stage; /// param opt: defines 'option' and 'priority' for 'Prepare': the; /// format is opt = ""option=o priority=p""; /// returns: 0 for success, -1 for error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx:330,error,error,330,net/netxng/src/TNetXNGSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Issue system error message. Use ""location"" to specify the method where; /// the system error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:99,error,error,99,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It creates the parse context of the xml file, where the xml file name is; /// filename. If context is created sucessfully, it will call Parse(); /// It returns parse error code, see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:252,error,error,252,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It opens the online reference guide, generated with Doxygen, for the; /// chosen scope (class/namespace/struct) or member (method/function/; /// data member/enumeration/enumerator. If the user types incorrect value,; /// it will return an error or warning.; ///; /// \param[in] strippedClass the scope or scope::member",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:325,error,error,325,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It parse the contents, instead of a file.; /// It will return error if is attempted to parse a second file while; /// a parse is in progres.; /// It returns parse code error, see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:148,error,error,148,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It returns the error along X at point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:101,error,error,101,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It returns the error along X at point `i`. For TGraphErrors this method is; /// the same as GetErrorX.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:101,error,error,101,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It returns the error along Y at point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:101,error,error,101,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// It returns the error along Y at point `i`. For TGraphErrors this method is; /// the same as GetErrorY.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:101,error,error,101,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Join suspends the execution of the calling thread until the; /// thread identified by th terminates, either by calling pthread_exit; /// or by being cancelled. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:281,error,error,281,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Kill this thread. Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:139,error,error,139,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Let cling process a command line.; ///; /// If the command is executed and the error is 0, then the return value; /// is the int value corresponding to the result of the executed command; /// (float and double return values will be truncated).; ///; // Method for handling the interpreter exceptions.; // the MetaProcessor is passing in as argument to teh function, because; // cling::Interpreter::CompilationResult is a nested class and it cannot be; // forward declared, thus this method cannot be a static member function; // of TCling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:165,error,error,165,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Let the interpreter issue a generic error, and set its error state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:122,error,error,122,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Level = 3 (to be consistent with minuit) prints parameters and parameter; /// errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:164,error,errors,164,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// List all available databases. Always returns 0 for SQLite,; /// as only one DB exists per file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx:95,avail,available,95,sql/sqlite/src/TSQLiteServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// List all available databases. Wild is for wildcarding ""t%"" list all; /// databases starting with ""t"".; /// Returns a pointer to a TSQLResult object if successful, 0 otherwise.; /// The result object must be deleted by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:95,avail,available,95,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,3,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// List contents of package directory. If all is true show all package; /// directories also on slaves. If everything is ok all package directories; /// should be the same. If redir is kTRUE the result is redirected to the log; /// file (option available for internal actions).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:328,avail,available,328,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Lists all datasets that match given uri.; /// The 'optStr' can contain a comma-separated list of servers for which the; /// information is wanted. If ':lite:' (case insensitive) is specified in 'optStr'; /// only the global information in the TFileCollection is retrieved; useful to only; /// get the list of available datasets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:395,avail,available,395,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load a library file in cling's memory.; /// if 'system' is true, the library is never unloaded.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,failure,failure,214,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load a macro in the interpreter's memory. Equivalent to the command line; /// command "".L filename"". If the filename has ""+"" or ""++"" appended; /// the macro will be compiled by ACLiC. The filename must have the format:; /// [path/]macro.C[+|++[g|O]].; /// The possible error codes are defined by TInterpreter::EErrorCode.; /// If check is true it will only check if filename exists and is; /// readable.; /// Returns 0 on successful loading and -1 in case filename does not; /// exist or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:355,error,error,355,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load a shared library. Returns 0 on successful loading, 1 in; /// case lib was already loaded, -1 in case lib does not exist; /// or in case of error and -2 in case of version mismatch.; /// When entry is specified the loaded lib is; /// searched for this entry point (return -1 when entry does not exist,; /// 0 otherwise). When the system flag is kTRUE, the library is considered; /// a permanent system library that should not be unloaded during the; /// course of the session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:230,error,error,230,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load basket buffers in memory without unziping.; /// This function is called by TTreeCloner.; /// The function returns 0 in case of success, 1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:240,error,error,240,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load library containing the specified class. Returns 0 in case of error; /// and 1 in case if success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:152,error,error,152,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load map between class and library. If rootmapfile is specified a; /// specific rootmap file can be added (typically used by ACLiC).; /// In case of error -1 is returned, 0 otherwise.; /// The interpreter uses this information to automatically load the shared; /// library for a class (autoload mechanism), see the AutoLoad() methods below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:235,error,error,235,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load plugin handlers specified via macros in a list of plugin; /// directories. The `$ROOTSYS/etc/plugins` is the default top plugin directory; /// specified in `$ROOTSYS/etc/system.rootrc`. The macros must have names; /// like `<BaseClass>/PX0_<PluginClass>.C`, e.g. //`TSQLServer/P20_TMySQLServer.C`,; /// to allow easy sorting and grouping. If the BaseClass is in a namespace; /// the directory must have the name NameSpace@@BaseClass as : is a reserved; /// pathname character on some operating systems. Macros not beginning with; /// 'P' and ending with "".C"" are ignored. If base is specified only plugin; /// macros for that base class are loaded. The macros typically; /// should look like:; /// ~~~ {.cpp}; /// void P10_TDCacheFile(); /// {; /// gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; /// ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; /// }; /// ~~~; /// In general these macros should not cause side effects, by changing global; /// ROOT state via, e.g. gSystem calls, etc. However, in specific cases; /// this might be useful, e.g. adding a library search path, adding a specific; /// dependency, check on some OS or ROOT capability or downloading; /// of the plugin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1274,down,downloading,1274,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['down'],['downloading']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load specified package. Executes the PROOF-INF/SETUP.C script; /// on all active nodes. If notOnClient = true, don't load package; /// on the client. The default is to load the package also on the client.; /// The argument 'loadopts' specify a list of objects to be passed to the SETUP.; /// The objects in the list must be streamable; the SETUP macro will be executed; /// like this: SETUP.C(loadopts).; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:542,error,error,542,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load text from a text buffer. Return false in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx:140,failure,failure,140,gui/gui/src/TGTextView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextView.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load the declarations from text into the interpreter.; /// Note that this cannot be (top level) statements; text must contain; /// top level declarations.; /// Returns true on success, false on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:280,failure,failure,280,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load the plugin library for this handler. Returns 0 on successful loading; /// and -1 in case the library does not exist or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:221,error,error,221,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load the plugin library for this handler. Sets status to 0 on successful loading; /// and -1 in case the library does not exist or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:228,error,error,228,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Load the specified macro on master, workers and, if notOnClient is; /// kFALSE, on the client. The macro file is uploaded if new or updated.; /// Additional files to be uploaded (or updated, if needed) can be specified; /// after a comma, e.g. ""mymacro.C+,thisheader.h,thatheader.h"".; /// If existing in the same directory, a header basename(macro).h or .hh, is also; /// uploaded.; /// The default is to load the macro also on the client; notOnClient can be used; /// to avoid loading on the client.; /// On masters, if uniqueWorkers is kTRUE, the macro is loaded on unique workers; /// only, and collection is not done; if uniqueWorkers is kFALSE, collection; /// from the previous request is done, and broadcasting + collection from the; /// other workers is done.; /// The wrks arg can be used on the master to limit the set of workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:979,error,error,979,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loads a new data set into the class instance.; /// Returns 1 in case of error, 0 otherwise.; /// \param[in] data; /// \param[in] options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:158,error,error,158,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loads the C++ modules that we require to run any ROOT program. This is just; /// supposed to make a C++ module from a modulemap available to the interpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:214,avail,available,214,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Lock the mutex. Returns 0 when no error, EDEADLK when mutex was already; /// locked by this thread and this mutex is not reentrant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:120,error,error,120,core/thread/src/TMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Locks the directory. Waits if lock is hold by an other process.; /// Returns 0 on success, -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx:191,error,error,191,proof/proof/src/TLockPath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:90,error,error,90,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with TObject object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:90,error,error,90,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Log evaluation error message. Evaluation errors may be routed through a different; /// protocol than generic RooFit warning message (which go straight through RooMsgService); /// because evaluation errors can occur in very large numbers in the use of likelihood; /// evaluations. In logEvalError mode, controlled by global method enableEvalErrorLogging(); /// messages reported through this function are not printed but all stored in a list,; /// along with server values at the time of reporting. Error messages logged in this; /// way can be printed in a structured way, eliminating duplicates and with the ability; /// to truncate the list by printEvalErrors. This is the standard mode of error logging; /// during MINUIT operations. If enableEvalErrorLogging() is false, all errors; /// reported through this method are passed for immediate printing through RooMsgService.; /// A string with server names and values is constructed automatically for error logging; /// purposes, unless a custom string with similar information is passed as argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:101,error,error,101,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,7,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Look for the leaf corresponding to the start of expression.; /// It returns the corresponding leaf if any.; /// It also modify the following arguments:; ///; /// - leftover: contain from expression that was not used to determine the leaf; /// - final:; /// * paran_level: number of un-matched open parenthesis; /// * cast_queue: list of cast to be done; /// * aliases: list of aliases used; /// - Return <0 in case of failure; ///; /// - Return 0 if a leaf has been found; /// - Return 2 if info about the TTree itself has been requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:504,failure,failure,504,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:190,error,error,190,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loop on Tree and return TSQLResult object containing entries passing; /// selection. If varexp is 0 (or """") then print only first 8 columns.; /// If varexp = ""*"" print all columns. Otherwise a columns selection can; /// be made using ""var1:var2:var3"". In case of error 0 is returned otherwise; /// a TSQLResult object which must be deleted by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:349,error,error,349,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loop on all leaves of this branch to back fill Basket buffer.; ///; /// Use this routine instead of TBranch::Fill when filling a branch individually; /// to catch up with the number of entries already in the TTree.; ///; /// First it calls TBranch::Fill and then if the number of entries of the branch; /// reach one of TTree cluster's boundary, the basket is flushed.; ///; /// The function returns the number of bytes committed to the memory basket.; /// If a write error occurs, the number of bytes returned is -1.; /// If no data are written, because e.g. the branch is disabled,; /// the number of bytes returned is 0.; ///; /// To insure that the baskets of each cluster are located close by in the; /// file, when back-filling multiple branches make sure to call BackFill; /// for the same entry for all the branches consecutively; /// ~~~ {.cpp}; /// for( auto e = 0; e < tree->GetEntries(); ++e ) { // loop over entries.; /// for( auto branch : branchCollection) {; /// ... Make change to the data associated with the branch ...; /// branch->BackFill();; /// }; /// }; /// // Since we loop over all the branches for each new entry; /// // all the baskets for a cluster are consecutive in the file.; /// ~~~; /// rather than doing all the entries of one branch at a time.; /// ~~~ {.cpp}; /// // Do NOT do things in the following order, it will lead to; /// // poorly clustered files.; /// for(auto branch : branchCollection) {; /// for( auto e = 0; e < tree->GetEntries(); ++e ) { // loop over entries.; /// ... Make change to the data associated with the branch ...; /// branch->BackFill();; /// }; /// }; /// // Since we loop over all the entries for one branch; /// // all the baskets for that branch are consecutive.; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:554,error,error,554,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loop on all leaves of this branch to fill Basket buffer.; ///; /// If TBranchIMTHelper is non-null and it is time to WriteBasket, then we will; /// use TBB to compress in parallel.; ///; /// The function returns the number of bytes committed to the memory basket.; /// If a write error occurs, the number of bytes returned is -1.; /// If no data are written, because e.g. the branch is disabled,; /// the number of bytes returned is 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:366,error,error,366,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loop on all leaves of this branch to fill the basket buffer.; ///; /// The function returns the number of bytes committed to the; /// individual branches. If a write error occurs, the number of; /// bytes returned is -1. If no data are written, because, e.g.,; /// the branch is disabled, the number of bytes returned is 0.; ///; /// Note: We not not use any member functions from TLeafElement!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:252,error,error,252,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Loop over columns of our tree data and fill the input histogram. Returns a pointer to the; /// input histogram, or zero in case of an error. The input histogram can be any TH1 subclass, and; /// therefore of arbitrary dimension. Variables are matched with the (x,y,...) dimensions of the input; /// histogram according to the order in which they appear in the input plotVars list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:220,error,error,220,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Main application eventloop. First process files given on the command; /// line and then go into the main application event loop, unless the -q; /// command line option was specified in which case the program terminates.; /// When return is true this method returns even when -q was specified.; ///; /// When QuitOpt is true and return is false, terminate the application with; /// an error code equal to either the ProcessLine error (if any) or the; /// return value of the command casted to a long.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:470,error,error,470,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Main minimization procedure; ///; /// This function is called after setting theoretical function; /// by means of TFumili::SetUserFunc and initializing parameters.; /// Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval); /// If FCN is undefined then user has to provide data arrays by calling; /// TFumili::SetData procedure.; ///; /// TFumili::Minimize return following values:; /// - 0 - fit is converged; /// - -2 - function is not decreasing (or bad derivatives); /// - -3 - error estimations are infinite; /// - -4 - maximum number of iterations is exceeded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:590,error,error,590,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that dataset is in the form to be processed. This may mean; /// retrieving the relevant info from the dataset manager or from the; /// attached input list.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:285,error,error,285,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the input data objects are available to the workers in a; /// dedicated file in the cache; the objects are taken from the dedicated list; /// and / or the specified file.; /// If the fInputData is empty the specified file is sent over.; /// If there is no specified file, a file named ""inputdata.root"" is created locally; /// with the content of fInputData and sent over to the master.; /// If both fInputData and the specified file are not empty, a copy of the file; /// is made locally and augmented with the content of fInputData.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:128,avail,available,128,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the needed 'event' files are available at 'src'; /// If 'src' is ""download"", the files are download under <tutdir>/event .; /// By default 10 files are checked; maximum is 50 (idx 1->50 not 0->49).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:130,avail,available,130,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,3,"['avail', 'down']","['available', 'download']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the needed H1 files are available at 'src'; /// If 'src' is ""download"", the files are download under <tutdir>/h1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:125,avail,available,125,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,3,"['avail', 'down']","['available', 'download']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the needed files are available under the specified; /// tutorial directory, setting the relevant variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:122,avail,available,122,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Make the histogram axes extendable / not extendable according to the bit mask; /// returns the previous bit mask specifying which axes are extendable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:159,mask,mask,159,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Makes sure that the current point is a local minimum; ///; /// Makes sure that the current point is a local; /// minimum and that the error matrix exists,; /// or at least something good enough for MINOS and MNCONT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:220,error,error,220,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Map event mask to or from X.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:96,mask,mask,96,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Map event mask to or from gdk.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:96,mask,mask,96,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Massive location of files. Returns < 0 on error, or number of files; /// processed. Results are returned on the TFileCollection itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx:128,error,error,128,net/net/src/TFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Match one pattern element, pointed at by pat, against the character at; /// **strp. Return 0 on a failure, 1 on success. *strp is advanced to skip; /// over the matched character on a successful match. Closure is handled one; /// level up by patcmp().; ///; /// ""start"" points at the character at the left edge of the line. This might; /// not be the same thing as *strp if the search is starting in the middle; /// of the string. An end-of- line anchor matches end of string only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/Match.cxx:184,failure,failure,184,core/base/src/Match.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/Match.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge all TFileCollection objects in li into this TFileCollection object.; /// Updates counters at the end.; /// Returns the number of merged collections or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:257,error,error,257,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge all histograms in the collection in this histogram.; /// This function computes the min/max for the axes,; /// compute a new number of bins, if necessary,; /// add bin contents, errors and statistics.; /// If overflows are present and limits are different the function will fail.; /// The function returns the total number of entries in the result histogram; /// if the merge is successful, -1 otherwise.; ///; /// IMPORTANT remark. The 2 axis x and y may have different number; /// of bins and different limits, BUT the largest bin width must be; /// a multiple of the smallest bin width and the upper limit must also; /// be a multiple of the bin width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:270,error,errors,270,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge all histograms in the collection in this histogram.; ///; /// This function computes the min/max for the axes,; /// compute a new number of bins, if necessary,; /// add bin contents, errors and statistics.; /// If overflows are present and limits are different the function will fail.; /// The function returns the total number of entries in the result histogram; /// if the merge is successful, -1 otherwise.; ///; /// IMPORTANT remark. The 2 axis x and y may have different number; /// of bins and different limits, BUT the largest bin width must be; /// a multiple of the smallest bin width and the upper limit must also; /// be a multiple of the bin width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:275,error,errors,275,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge the THStack in the TList into this stack.; /// Returns the total number of histograms in the result or -1 in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx:212,error,error,212,hist/hist/src/THStack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge the files. If no output file was specified it will write into; /// the file ""FileMerger.root"" in the working directory. Returns true; /// on success, false in case of error.; /// The type is defined by the bit values in EPartialMergeType:; /// kRegular : normal merge, overwritting the output file; /// kIncremental : merge the input file with the content of the output file (if already exising) (default); /// kResetable : merge only the objects with a MergeAfterReset member function.; /// kNonResetable : merge only the objects without a MergeAfterReset member function.; /// kDelayWrite : delay the TFile write (to reduce the number of write when reusing the file); /// kAll : merge all type of objects (default); /// kAllIncremental : merge incrementally all type of objects.; /// kOnlyListed : merge only the objects specified in fObjectNames list; /// kSkipListed : skip objects specified in fObjectNames list; /// kKeepCompression: keep compression level unchanged for each input; ///; /// If the type is not set to kIncremental, the output file is deleted at the end of this operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:259,error,error,259,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Merge the files.; ///; /// If no output file was specified it will write into; /// the file ""FileMerger.root"" in the working directory. Returns true; /// on success, false in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:269,error,error,269,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to build a package.; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:131,error,error,131,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the download dir; create if not existing; /// Return -1 in case of error (not found; not created), 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:104,down,download,104,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,2,"['down', 'error']","['download', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the path of the PAR file for package 'pack'.; /// Return -1 in case of error (not found), 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:171,error,error,171,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to get the path of the dir for package 'pack'.; /// Return -1 in case of error (not found), 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:166,error,error,166,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option const char *; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:159,error,error,159,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to load a package taking an option list; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:151,error,error,151,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Method to unload a package.; /// Return -1 on error, 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:132,error,error,132,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimization function for Graphs using a Chisquare method.; /// In case of a TGraphErrors object, ex, the error along x, is projected; /// along the y-direction by calculating the function at the points x-exlow and; /// x+exhigh.; ///; /// The chisquare is computed as the sum of the quantity below at each point:; ///; /// (y - f(x))**2; /// -----------------------------------; /// ey**2 + (0.5*(exl + exh)*f'(x))**2; ///; /// where x and y are the point coordinates and f'(x) is the derivative of function f(x).; /// This method to approximate the uncertainty in y because of the errors in x, is called; /// ""effective variance"" method.; /// The improvement, compared to the previously used method (f(x+ exhigh) - f(x-exlow))/2; /// is of (error of x)**2 order.; ///; /// NOTE:; ///; /// 1. By using the ""effective variance"" method a simple linear regression; /// becomes a non-linear case , which takes several iterations; /// instead of 0 as in the linear case .; ///; /// 2. The effective variance technique assumes that there is no correlation; /// between the x and y coordinate .; ///; /// In case the function lies below (above) the data point, ey is ey_low (ey_high).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:192,error,error,192,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimization function for H1s using a Chisquare method.; /// Default method (function evaluated at center of bin); /// for each point the cache contains the following info; /// - 1D : bc,e,xc (bin content, error, x of center of bin); /// - 2D : bc,e,xc,yc; /// - 3D : bc,e,xc,yc,zc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:292,error,error,292,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimization function for H1s using a Chisquare method.; /// The ""I""ntegral method is used; /// for each point the cache contains the following info; /// - 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); /// - 2D : bc,e,xc,xw,yc,yw; /// - 3D : bc,e,xc,xw,yc,yw,zc,zw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:272,error,error,272,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimization function for H1s using a Likelihood method.; /// Basically, it forms the likelihood by determining the Poisson; /// probability that given a number of entries in a particular bin,; /// the fit would predict it's value. This is then done for each bin,; /// and the sum of the logs is taken as the likelihood.; ///; /// Default method (function evaluated at center of bin); /// for each point the cache contains the following info; /// - 1D : bc,e,xc (bin content, error, x of center of bin); /// - 2D : bc,e,xc,yc; /// - 3D : bc,e,xc,yc,zc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:562,error,error,562,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimization function for H1s using a Likelihood method.; /// Basically, it forms the likelihood by determining the Poisson; /// probability that given a number of entries in a particular bin,; /// the fit would predict it's value. This is then done for each bin,; /// and the sum of the logs is taken as the likelihood.; ///; /// The ""I""ntegral method is used; /// for each point the cache contains the following info; /// - 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); /// - 2D : bc,e,xc,xw,yc,yw; /// - 3D : bc,e,xc,xw,yc,yw,zc,zw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:542,error,error,542,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Minimizes a given NLL variable by finding the optimal parameters with the; /// RooMinimzer. The NLL variable can be created with RooAbsPdf::createNLL.; /// If you are looking for a function that combines likelihood creation with; /// fitting, see RooAbsPdf::fitTo.; /// \param[in] nll The negative log-likelihood variable to minimize.; /// \param[in] data The dataset that was also used for the NLL. It's a necessary; /// parameter because it is used in the asymptotic error correction.; /// \param[in] cfg Configuration struct with all the configuration options for; /// the RooMinimizer. These are a subset of the options that you can; /// also pass to RooAbsPdf::fitTo via the RooFit command arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:555,error,error,555,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Misclassification error criterion: 1-max(p, 1-p) (p: purity= s/(s+b))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx:104,error,error,104,tmva/tmva/src/MisClassificationError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MisClassificationError.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move content one item-size down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:113,down,down,113,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move content one page down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:108,down,down,108,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move one line down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx:100,down,down,100,gui/gui/src/TGCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx,3,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move one screen down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx:102,down,down,102,gui/gui/src/TGTextEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move position one page down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx:109,down,down,109,gui/gui/src/TGCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move selected package entry one position down in the list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:127,down,down,127,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Move view window :; /// - l,L - left; /// - h,H - right; /// - u,U - down; /// - i,I - up",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:155,down,down,155,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraph2DAsymmErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and errors are scaled; /// If option contains ""z"" the z values and errors are scaled; /// If option contains ""xyz"" all three x, y and z values and errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:110,error,errors,110,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,5,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraph2DErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and errors are scaled; /// If option contains ""z"" the z values and errors are scaled; /// If option contains ""xyz"" all three x, y and z values and errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx:110,error,errors,110,hist/hist/src/TGraph2DErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx,5,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraphAsymmErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and errors are scaled; /// If option contains ""xy"" both x and y values and errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:110,error,errors,110,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraphBentErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and errors are scaled; /// If option contains ""xy"" both x and y values and errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx:110,error,errors,110,hist/hist/src/TGraphBentErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphBentErrors.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraphErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and errors are scaled; /// If option contains ""xy"" both x and y values and errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:110,error,errors,110,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply the values and errors of a TGraphMultiErrors by a constant c1.; ///; /// If option contains ""x"" the x values and errors are scaled; /// If option contains ""y"" the y values and (multiple) errors are scaled; /// If option contains ""xy"" both x and y values and (multiple) errors are scaled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:110,error,errors,110,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply this histogram by a constant c1.; ///; /// `this = c1*this`; ///; /// Note that both contents and errors (if any) are scaled.; /// This function uses the services of TH1::Add; ///; /// IMPORTANT NOTE: Sumw2() is called automatically when scaling.; /// If you are not interested in the histogram statistics you can call; /// Sumw2(kFALSE) or use the option ""nosw2""; ///; /// One can scale a histogram such that the bins integral is equal to; /// the normalization parameter via TH1::Scale(Double_t norm), where norm; /// is the desired normalization divided by the integral of the histogram.; ///; /// If option contains ""width"" the bin contents and errors are divided; /// by the bin width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:193,error,errors,193,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Multiply this histogram by h1.; ///; /// `this = this*h1`; ///; /// If errors of this are available (TH1::Sumw2), errors are recalculated.; /// Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Multiply; ///; /// The function return kFALSE if the Multiply operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:157,error,errors,157,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,4,"['avail', 'error']","['available', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Must be implemented by actual GRID job implementation. Returns -1 in; /// case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridJob.cxx:168,error,error,168,net/net/src/TGridJob.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGridJob.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// No analytical calculation available (yet) of integrals over subranges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChiSquarePdf.cxx:112,avail,available,112,roofit/roofit/src/RooChiSquarePdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChiSquarePdf.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first eight parameters are similar to TH2D::TH2D.; /// All values of z are accepted at filling time.; /// To fill a profile2D histogram, one must use TProfile2D::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable z is between fZmin and fZmax.; /// If a minimum or maximum value is set for the Z scale before filling,; /// then all values below zmin or above zmax will be discarded.; /// Setting the minimum or maximum value for the Z scale before filling; /// has the same effect as calling the special TProfile2D constructor below; /// where zmin and zmax are specified.; ///; /// H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S'; /// (spread option), or e(I,J) if CHOPT=' ' (error on mean).; ///; /// See TProfile2D::BuildOptions for explanation of parameters; ///; /// see other constructors below with all possible combinations of; /// fix and variable bin size like in TH2D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:834,error,errors,834,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first eleven parameters are similar to TH3D::TH3D.; /// All values of t are accepted at filling time.; /// To fill a profile3D histogram, one must use TProfile3D::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable t is between fTmin and fTmax.; /// If a minimum or maximum value is set for the T scale before filling,; /// then all values below tmin or above tmax will be discarded.; /// Setting the minimum or maximum value for the T scale before filling; /// has the same effect as calling the special TProfile3D constructor below; /// where tmin and tmax are specified.; ///; /// H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; /// (spread option), or e(I,J,K) if CHOPT=' ' (error on mean).; ///; /// See TProfile3D::BuildOptions for explanation of parameters; ///; /// see other constructors below with all possible combinations of; /// fix and variable bin size like in TH3D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:837,error,errors,837,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first five parameters are similar to TH1D::TH1D.; /// All values of y are accepted at filling time.; /// To fill a profile histogram, one must use TProfile::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable y is between fYmin and fYmax.; /// If a minimum or maximum value is set for the Y scale before filling,; /// then all values below ymin or above ymax will be discarded.; /// Setting the minimum or maximum value for the Y scale before filling; /// has the same effect as calling the special TProfile constructor below; /// where ymin and ymax are specified.; ///; /// H(j) is printed as the channel contents. The errors displayed are s(j) if `option`='S'; /// (spread option), or e(j) if `CHOPT`='' (error on mean).; ///; /// See TProfile::BuildOptions() for explanation of parameters; ///; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:828,error,errors,828,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Notify availability of a query result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,avail,availability,93,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['avail'],['availability']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Notify error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:93,error,error,93,proof/proof/src/TProofOutputFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Notify the display that there has been an error.; /// Write out the BEL character.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:128,error,error,128,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Now let calculate what physical instance we really need.; /// Some redundant code is used to speed up the cases where; /// they are no dimensions.; ///; /// We know that instance is less that fCumulUsedSize[0] so; /// we can skip the modulo when virt_dim is 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:153,redundant,redundant,153,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['redundant'],['redundant']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function.; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Richardson-Lucy deconvolution algorithm. The result; /// is placed in the vector pointed by source pointer. On successful completion; /// it returns 0. On error it returns pointer to the string describing error.; /// If desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times (see Gold deconvolution).; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given above; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// ### Richardson-Lucy deconvolution algorithm:; ///; /// For discrete systems it has the form:; /**; \f[; x^{(n)}(i) = x^{(n-1)}(i) \sum_{j=0}^{N-1}h(i,j)\frac{y(j)}{\sum_{k=0}^{M-1}h(j,k)x^{(n-1)}(k)} \\; i \in \left<0,M-1\right>; \f]; */; /// for positive input data and response matrix this iterative method forces; /// the deconvoluted spectra to be non-negative. The Richardson-Lucy; /// iteration converges to the maximum likelihood solution for Poisson statistics; /// in the data.; ///; /// #### References:; ///; /// 1. Abreu M.C. et al., A four-dimensional deconvolution method to correct NA38; /// experimental data, NIM A 405 (1998) 139.; /// 2. Lucy L.B., A.J. 79 (1974) 745.; /// 3. Richardson W.H., J. Opt. Soc. Am. 62 (1972) 55.; ///; /// ### Examples of Richardson-Lucy deconvolution method:; ///; /// ### Example 11 - script DeconvolutionRL_wide.C :; ///; /// When we employ Richardson-Lucy deconvolution algorithm to our data from; /// F",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:393,error,error,393,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional deconvolution function; ///; /// This function calculates deconvolution from source spectrum according to; /// response spectrum using Gold deconvolution algorithm. The result is placed; /// in the vector pointed by source pointer. On successful completion it; /// returns 0. On error it returns pointer to the string describing error. If; /// desired after every numberIterations one can apply boosting operation; /// (exponential function with exponent given by boost coefficient) and repeat; /// it numberRepetitions times.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - response: pointer to the vector of response spectrum; /// - ssize: length of source and response spectra; /// - numberIterations, for details we refer to the reference given below; /// - numberRepetitions, for repeated boosted deconvolution; /// - boost, boosting coefficient; ///; /// The goal of this function is the improvement of the resolution in spectra,; /// decomposition of multiplets. The mathematical formulation of; /// the convolution system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N-1} h(i-k)x(k), i=0,1,2,...,N-1; /// \f]; ///; /// where h(i) is the impulse response function, x, y are input and output; /// vectors, respectively, N is the length of x and h vectors. In matrix form; /// we have:; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(2N-2) \\; y(2N-1); \end{bmatrix}; =; \begin{bmatrix}; h(0) & 0 & 0 & \dots & 0 \\; h(1) & h(0) & 0 & \dots & \dots \\; \dots & h(1) & h(0) & \dots & \dots \\; \dots & \dots & h(1) & \dots & \dots \\; \dots & \dots & \dots & \dots & \dots \\; h(N-1) & \dots & \dots &\dots & 0 \\; 0 & h(N-1) & \dots & \dots & h(0) \\; 0 & 0 & h(N-1) & \dots & h(1) \\; \dots & \dots & \dots & \dots & \dots \\; 0 & 0 & 0 & \dots & h(N-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N-1); \end{bmatrix}; \",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:381,error,error,381,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional markov spectrum smoothing function; ///; /// This function calculates smoothed spectrum from source spectrum based on; /// Markov chain method. The result is placed in the array pointed by source; /// pointer. On successful completion it returns 0. On error it returns pointer; /// to the string describing error.; ///; /// #### Parameters:; ///; /// - source: pointer to the array of source spectrum; /// - ssize: length of source array; /// - averWindow: width of averaging smoothing window; ///; /// The goal of this function is the suppression of the statistical fluctuations.; /// The algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution:; ///; /// \f[; /// U_2 = \frac{p_{1,2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1}...U_2U_1; /// \f]; /// \f$ U_1\f$ being defined from the normalization condition; /// \f$ \sum_{i=1}^{n} U_i=1\f$. \f$ n \f$ is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm 1} = A_i\sum_{k=1}^{m} exp\left[ \frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// #### Reference:; ///; /// 1. Z.K. Silagadze, A new algorithm for automatic photopeak searches.; /// NIM A 376 (1996), 451.; ///; /// ### Example 14 - script Smoothing.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smoothing.C; /// End_Macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:354,error,error,354,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// One-dimensional unfolding function; ///; /// This function unfolds source spectrum according to response matrix columns.; /// The result is placed in the vector pointed by source pointer.; /// The coefficients of the resulting vector represent contents of the columns; /// (weights) in the input vector. On successful completion it returns 0. On; /// error it returns pointer to the string describing error. If desired after; /// every numberIterations one can apply boosting operation (exponential; /// function with exponent given by boost coefficient) and repeat it; /// numberRepetitions times. For details we refer to [1].; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum; /// - respMatrix: pointer to the matrix of response spectra; /// - ssizex: length of source spectrum and # of rows of the response; /// matrix. ssizex must be >= ssizey.; /// - ssizey: length of destination coefficients and # of columns of the response; /// matrix.; /// - numberIterations: number of iterations; /// - numberRepetitions: number of repetitions for boosted deconvolution.; /// It must be greater or equal to one.; /// - boost: boosting coefficient, applies only if numberRepetitions is; /// greater than one.; ///; /// ### Unfolding:; ///; /// The goal is the decomposition of spectrum to a given set of component spectra.; ///; /// The mathematical formulation of the discrete linear system is:; ///; /// \f[; /// y(i) = \sum_{k=0}^{N_y-1} h(i,k)x(k), i = 0,1,2,...,N_x-1; /// \f]; /**; \f[; \begin{bmatrix}; y(0) \\; y(1) \\; \dots \\; y(N_x-1); \end{bmatrix}; =; \begin{bmatrix}; h(0,0) & h(0,1) & \dots & h(0,N_y-1) \\; h(1,0) & h(1,1) & \dots & h(1,N_y-1) \\; \dots \\; h(N_x-1,0) & h(N_x-1,1) & \dots & h(N_x-1,N_y-1); \end{bmatrix}; \begin{bmatrix}; x(0) \\; x(1) \\; \dots \\; x(N_y-1); \end{bmatrix}; \f]; */; ///; /// #### References:; ///; /// 1. Jandel M., Morhac; M., Kl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:437,error,error,437,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open a directory and return an opaque pointer to a dir structure.; /// Returns nullptr in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:184,error,error,184,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open a directory via httpd. Returns an opaque pointer to a dir; /// structure. Returns 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:186,error,error,186,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open a directory; ///; /// param dir: the name of the directory to open; /// returns: a non-zero pointer (with no special purpose) in case of; /// success, 0 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx:255,error,error,255,net/netxng/src/TNetXNGSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open a file for reading through the file cache.; ///; /// The file will be downloaded to the cache and opened from there.; /// If the download fails, it will be opened remotely.; /// The file will be downloaded to the directory specified by SetCacheFileDir().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:161,down,downloaded,161,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,3,['down'],"['download', 'downloaded']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open archive and read end-header and directory. Returns -1 in case; /// of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:161,error,error,161,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open connection to display server (if such a thing exist on the; /// current platform). On X11 this method returns on success the X; /// display socket descriptor (> 0), 0 in case of batch mode and < 0; /// in case of failure (cannot connect to display dpyName). It also; /// initializes the TGX11 class via Init(). Called from TGClient ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:304,failure,failure,304,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Open size parallel sockets back to client. Returns 0 in case of error,; /// and number of parallel sockets in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx:150,error,error,150,net/rpdutils/src/netpar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Opens connection to display server (if such a thing exist on the; /// current platform). The encoding and interpretation of the display; /// name.; ///; /// On X11 this method returns on success the X display socket descriptor; /// >0, 0 in case of batch mode, and <0 in case of failure (cannot connect; /// to display dpyName).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:365,failure,failure,365,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Options to be set in the option string:; ///; /// - LearningRate <float> DNN learning rate parameter.; /// - DecayRate <float> Decay rate for learning parameter.; /// - TestRate <int> Period of validation set error computation.; /// - BatchSize <int> Number of event per batch.; ///; /// - ValidationSize <string> How many events to use for validation. ""0.2""; /// or ""20%"" indicates that a fifth of the; /// training data should be used. ""100""; /// indicates that 100 events should be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx:295,error,error,295,tmva/tmva/src/MethodDNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDNN.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Our own error handler (not used yet)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:94,error,error,94,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Output content of collection as LaTex table. By default a table with two columns is created: the left; /// column contains the name of each variable, the right column the value.; ///; /// The following optional named arguments can be used to modify the default behavior; /// <table>; /// <tr><th> Argument <th> Effect; /// <tr><td> `Columns(Int_t ncol)` <td> Fold table into multiple columns, i.e. ncol=3 will result in 3 x 2 = 6 total columns; /// <tr><td> `Sibling(const RooAbsCollection& other)` <td> Define sibling list.; /// The sibling list is assumed to have objects with the same; /// name in the same order. If this is not the case warnings will be printed. If a single; /// sibling list is specified, 3 columns will be output: the (common) name, the value of this; /// list and the value in the sibling list. Multiple sibling lists can be specified by; /// repeating the Sibling() command.; /// <tr><td> `Format(const char* str)` <td> Classic format string, provided for backward compatibility; /// <tr><td> `Format()` <td> Formatting arguments.; /// <table>; /// <tr><td> const char* what <td> Controls what is shown. ""N"" adds name, ""E"" adds error,; /// ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; /// <tr><td> `FixedPrecision(int n)` <td> Controls precision, set fixed number of digits; /// <tr><td> `AutoPrecision(int n)` <td> Controls precision. Number of shown digits is calculated from error; /// and n specified additional digits (1 is sensible default); /// <tr><td> `VerbatimName(bool flag)` <td> Put variable name in a \\verb+ + clause.; /// </table>; /// <tr><td> `OutputFile(const char* fname)` <td> Send output to file with given name rather than standard output; ///; /// </table>; ///; /// Example use:; /// ```; /// list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) );; /// ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:1239,error,error,1239,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::attachToTree to also attach; /// branches for errors and/or asymmetric errors; /// attribute StoreError and/or StoreAsymError are set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:153,error,errors,153,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::fillTreeBranch to also; /// fill tree branches with (asymmetric) errors; /// if requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:172,error,errors,172,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Overloadable function in which derived classes can implement; /// consistency checks of the variables. If this function returns; /// true, indicating an error, the fitter or generator will abort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:239,error,error,239,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Override TH1::Rebin as TH2::RebinX; /// Rebinning in variable binning as for TH1 is not allowed; /// If a non-null pointer is given an error is flagged; /// see RebinX and Rebin2D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:221,error,error,221,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// Compute the errors on the coefficients. For this to be done, the; /// curvature matrix of the non-orthogonal functions, is computed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:119,error,errors,119,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Paint a simple graph, without errors bars.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:116,error,errors,116,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Paints the 2D graph as error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx:109,error,error,109,hist/histpainter/src/TGraph2DPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraph2DPainter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parameter error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:96,error,error,96,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse a command line received from the client, making sure that the files; /// needed for the execution, if any, are available. The line is either a C++; /// statement or an interpreter command starting with a ""."".; /// Return the return value of the command casted to a long.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:203,avail,available,203,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse a file open mode given as a string into a canonically formatted; /// output mode string and an integer code that the xroot client can use; ///; /// param in: the file open mode as a string (in); /// modestr: open mode string after parsing (out); /// mode: correctly parsed option mode code (out); /// assumeRead: if the open mode is not recognised assume read (in); /// returns: 0 in case the mode was successfully parsed,; /// -1 in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:534,failure,failure,534,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse a string boolean expression and do a syntax check. Find top; /// level boolean operator and returns its type. Fill the two; /// substrings to which this operator applies. The returned integer is :; /// - -1 : parse error; /// - 0 : no boolean operator; /// - 1 : union - represented as '+' in expression; /// - 2 : difference (subtraction) - represented as '-' in expression; /// - 3 : intersection - represented as '*' in expression.; /// Parentheses should be used to avoid ambiguities. For instance :; /// - A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C); /// eliminate not needed parentheses",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:307,error,error,307,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:654,error,error,654,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse string cname containing color name, like ""green"" or ""#00FF00"".; /// It returns a filled in ColorStruct_t. Returns kFALSE in case parsing; /// failed, kTRUE in case of success. On success, the ColorStruct_t; /// fRed, fGreen and fBlue fields are all filled in and the mask is set; /// for all three colors, but fPixel is not set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:359,mask,mask,359,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the XML file where filename is the XML file name.; /// It will create a TXMLDocument if the file is parsed without; /// any error. It returns parse code error in case of parse error,; /// see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx:216,error,error,216,io/xmlparser/src/TDOMParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TDOMParser.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the arguments from var, sel and opt and fill the selector and; /// object name accordingly.; /// Return 0 in case of success, 1 if libProofDraw is not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:243,avail,available,243,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the headers relative to the class; /// Returns 1 in case of success, 0 in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,failure,failure,174,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the input string and set the init bits accordingly; /// Format is; /// dir:`<datasetdir>` [mss:`<mss-url>`] [opt:`<base-options>`]; /// The `<datasetdir>` is mandatory.; /// See TDataSetManager::ParseInitOpts for the available; /// base options.; /// The base options are already initialized by the base constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:309,avail,available,309,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the opts string and set the init bits accordingly; /// Available options:; /// Cq: set kCheckQuota; /// Ar: set kAllowRegister; /// Av: set kAllowVerify; /// Ti: set kTrustInfo; /// Sb: set kIsSandbox; /// Ca: set kUseCache or kDoNotUseCache; /// The opts string may also contain additional unrelated info: in such a case; /// the field delimited by the prefix ""opt:"" is analyzed, e.g. if opts is; /// ""/tmp/dataset opt:Cq:-Ar: root://lxb6046.cern.ch"" only the substring; /// ""Cq:-Ar:"" will be parsed .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:147,Avail,Available,147,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Parses the configuration file. The objects can be specified following; /// the rules of the RooFactoryWSTool, plus some more flexibility.; ///; /// The official format for the datacards is "".rs"".; ///; /// All the instructions end with a "";"" (like in C++).; ///; /// Carriage returns and white lines are irrelevant but advised since they; /// improve readability (like in C++).; ///; /// The `(Roo)ClassName::objname(description)` can be replaced with the more; /// ""pythonic"" `objname = (Roo)ClassName(description)`.; ///; /// The comments can be specified with a ""//"" if on a single line or with; /// ""multiple lines"" in C/C++ like comments.; ///; /// The `""#include path/to/file.rs""` statement triggers the inclusion of a; /// configuration fragment.; ///; /// The `""import myobject:myworkspace:myrootfile""` will add to the Workspace; /// the object myobject located in myworkspace recorded in myrootfile.; /// Alternatively, one could choose the `""import myobject:myrootfile""` in case; /// no Workspace is present.; ///; /// The `""echo""` statement prompts a message on screen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:1121,echo,echo,1121,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Percent-encode and return the given string according to RFC 3986; /// in principle, this function cannot fail or produce an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:210,error,error,210,core/base/src/TUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a 2-D \f$ \chi^2 \f$ fit using a series of x and y values stored in the dataset `xydata`.; /// The y values can either be the event weights, or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:322,error,errors,322,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a \f$ \chi^2 \f$ fit to given histogram. By default the fit is executed through the MINUIT; /// commands MIGRAD, HESSE in succession; ///; /// The following named arguments are supported; ///; /// <table>; /// <tr><th> <th> Options to control construction of chi2; /// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:984,error,error,984,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a line search from position START; ///; /// along direction STEP, where the length of vector STEP; /// gives the expected position of minimum.; /// - FSTART is value of function at START; /// - SLOPE (if non-zero) is df/dx along STEP at START; /// - TOLER is initial tolerance of minimum in direction STEP; ///; /// SLAMBG and ALPHA control the maximum individual steps allowed.; /// The first step is always =1. The max length of second step is SLAMBG.; /// The max size of subsequent steps is the maximum previous successful; /// step multiplied by ALPHA + the size of most recent successful step,; /// but cannot be smaller than SLAMBG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:344,TOLER,TOLER,344,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,"['TOLER', 'toler']","['TOLER', 'tolerance']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset' scanning over the number of workers; /// per node.; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:205,error,error,205,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a test using dataset 'dset'; /// Return 0 on success, -1 on error; /// Open the file for the results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:154,error,error,154,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform basic syntax on given factory expression. If function returns; /// true syntax errors are found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:173,error,errors,173,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:422,error,error,422,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run scanning over the number of workers per node; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:183,error,error,183,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the CPU run; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,error,error,138,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the fit and evaluate the parameters; /// Returns 0 if the fit is ok, 1 if there are errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:178,error,errors,178,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs a MINOS error analysis on one parameter; ///; /// The parameter ILAX is varied, and the minimum of the; /// function with respect to the other parameters is followed; /// until it crosses the value FMIN+UP.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:103,error,error,103,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs a MINOS error analysis; ///; /// Performs a MINOS error analysis on those parameters for; /// which it is requested on the MINOS command by calling; /// MNMNOT for each parameter requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:103,error,error,103,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `this = this + c1*f1`; /// if errors are defined (see TH1::Sumw2), errors are also recalculated.; ///; /// By default, the function is computed at the centre of the bin.; /// if option ""I"" is specified (1-d histogram only), the integral of the; /// function in each bin is used instead of the value of the function at; /// the centre of the bin.; ///; /// Only bins inside the function range are recomputed.; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Add; ///; /// The function return kFALSE if the Add operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:140,error,errors,140,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `this = this + c1*h1`; /// If errors are defined (see TH1::Sumw2), errors are also recalculated.; ///; /// Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// Note also that adding histogram with labels is not supported, histogram will be; /// added merging them by bin number independently of the labels.; /// For adding histogram with labels one should use TH1::Merge; ///; /// SPECIAL CASE (Average/Efficiency histograms); /// For histograms representing averages or efficiencies, one should compute the average; /// of the two histograms and not the sum. One can mark a histogram to be an average; /// histogram by setting its bit kIsAverage with; /// myhist.SetBit(TH1::kIsAverage);; /// Note that the two histograms must have their kIsAverage bit set; ///; /// IMPORTANT NOTE1: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Add; ///; /// IMPORTANT NOTE2: if h1 has a normalisation factor, the normalisation factor; /// is used , ie this = this + c1*factor*h1; /// Use the other TH1::Add function if you do not want this feature; ///; /// IMPORTANT NOTE3: You should be careful about the statistics of the; /// returned histogram, whose statistics may be binned or unbinned,; /// depending on whether c1 is negative, whether TAxis::kAxisRange is true,; /// and whether TH1::ResetStats has been called on either this or h1.; /// See TH1::GetStats.; ///; /// The function return kFALSE if the Add operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:140,error,errors,140,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `this = this/(c1*f1)`; /// if errors are defined (see TH1::Sumw2), errors are also recalculated.; ///; /// Only bins inside the function range are recomputed.; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Divide; ///; /// The function return kFALSE if the divide operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:140,error,errors,140,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `y = y + c1*f(x,y)`; /// Errors are not recalculated.; ///; /// \param f may be a 1-D function TF1 or 2-d function TF2; /// \param c1 a scaling factor, 1 by default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:135,Error,Errors,135,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `z = z + c1*f(x,y,z)`; /// Errors are not recalculated.; ///; /// \param f may be a 2-D function TF2 or 3-d function TF3; /// \param c1 a scaling factor, 1 by default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:137,Error,Errors,137,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: this = this*c*f1; /// if errors are defined, errors are also recalculated.; ///; /// Only bins inside the function range are recomputed.; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after; /// calling Multiply()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:135,error,errors,135,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation:; ///; /// `this = this*c1*f1`; ///; /// If errors are defined (see TH1::Sumw2), errors are also recalculated.; ///; /// Only bins inside the function range are recomputed.; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Multiply; ///; /// The function return kFALSE if the Multiply operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:153,error,errors,153,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Physically remove the dataset 'dset', i.e. remove the dataset and the files; /// it describes; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:212,error,error,212,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Ping PROOF slaves. Returns the number of slaves that responded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Ping,Ping,86,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['Ping'],['Ping']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Ping PROOF. Returns 1 if master server responded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Ping,Ping,86,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['Ping'],['Ping']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Ping the remote master or slave servers.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:86,Ping,Ping,86,proof/proof/src/TSlave.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx,2,"['Ping', 'error']","['Ping', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Plot function or PDF on frame with support for visualization of the uncertainty encoded in the given fit result fr.; /// \param[in] frame RooPlot to plot on; /// \param[in] fr The RooFitResult, where errors can be extracted; /// \param[in] Z The desired significance (width) of the error band; /// \param[in] params If non-zero, consider only the subset of the parameters in fr for the error evaluation; /// \param[in] argList Optional `RooCmdArg` that can be applied to a regular plotOn() operation; /// \param[in] linMethod By default (linMethod=true), a linearized error is shown.; /// \return The RooPlot the band was plotted on (for chaining of plotting commands).; ///; /// The linearized error is calculated as follows:; /// \f[; /// \mathrm{error}(x) = Z * F_a(x) * \mathrm{Corr}(a,a') * F_{a'}^\mathrm{T}(x),; /// \f]; ///; /// where; /// \f[; /// F_a(x) = \frac{ f(x,a+\mathrm{d}a) - f(x,a-\mathrm{d}a) }{2},; /// \f]; /// with \f$ f(x) \f$ the plotted curve and \f$ \mathrm{d}a \f$ taken from the fit result, and; /// \f$ \mathrm{Corr}(a,a') \f$ = the correlation matrix from the fit result, and \f$ Z \f$ = requested signifance (\f$ Z \sigma \f$ band); ///; /// The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; /// not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made; ///; /// Alternatively, a more robust error is calculated using a sampling method. In this method a number of curves; /// is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; /// from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; /// for each value of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:286,error,errors,286,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Plot the distribution of the fit errors for the specified parameter on a newly created frame.; ///; /// <table>; /// <tr><th> Optional arguments <th>; /// <tr><td> FrameRange(double lo, double hi) <td> Set range of frame to given specification; /// <tr><td> FrameBins(int bins) <td> Set default number of bins of frame to given number; /// <tr><td> Frame() <td> Pass supplied named arguments to RooAbsRealLValue::frame() function. See there; /// for list of allowed arguments; /// </table>; ///; /// If no frame specifications are given, the AutoRange() feature will be used to set a default range.; /// Any other named argument is passed to the RooAbsData::plotOn() call. See that function for allowed options.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:119,error,errors,119,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Pop a rendering style off of the stack.; ///; /// The top-most style on the stack should have a tag equal to ""tag"".; /// If not, then we have an HTML coding error. Perhaps something; /// like this: ""Some text <em>Enphasized</i> more text"". It is an; /// interesting problem to figure out how to respond sanely to this; /// kind of error. Our solution is to keep popping the stack until; /// we find the correct tag, or until the stack is empty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx:243,error,error,243,gui/guihtml/src/TGHtmlSizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Pops the top-most color-set.; /// If only one entry is available, error is printed and the entry remains.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx:141,avail,available,141,graf3d/gl/src/TGLRnrCtx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRnrCtx.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:574,avail,available,574,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,2,"['avail', 'failure']","['available', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:568,avail,available,568,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,2,"['avail', 'failure']","['available', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print 2D graph and errors values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:105,error,errors,105,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print all outstanding logged evaluation error on the given ostream. If maxPerNode; /// is zero, only the number of errors for each source (object with unique name) is listed.; /// If maxPerNode is greater than zero, up to maxPerNode detailed error messages are shown; /// per source of errors. A truncation message is shown if there were more errors logged; /// than shown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:126,error,error,126,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,5,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print error string corresponding to ecode, prepending location",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx:92,error,error,92,net/auth/src/TRootAuth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print error string depending on error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:92,error,error,92,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,10,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print extras of variable: (asymmetric) error, constant flag, limits and binning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:125,error,error,125,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print graph and errors values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:102,error,errors,102,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,5,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print info about this histogram to the specified output stream.; ///; /// Standard: number of entries; /// Shape: error CL and maximum value; /// Verbose: print our bin contents and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:200,error,error,200,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print one bin. If ""idx"" is != -1 use that to determine the bin,; /// otherwise (if ""idx"" == -1) use the coordinate in ""bin"".; /// If ""options"" contains:; /// - '0': only print bins with an error or content != 0; /// Return whether the bin was printed (depends on options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:275,error,error,275,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print result of the fit, by default chi2, parameter values and errors.; /// if option ""V"" is given print also error matrix and correlation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx:149,error,errors,149,hist/hist/src/TFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print some global quantities for this histogram.; /// \param[in] option; /// - ""base"" is given, number of bins and ranges are also printed; /// - ""range"" is given, bin contents and errors are also printed; /// for all bins in the current range (default 1-->nbins); /// - ""all"" is given, bin contents and errors are also printed; /// for all bins including under and overflows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:267,error,errors,267,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx:163,error,error,163,proof/proof/src/TProofServLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print the ProofServ logo on standard output.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:163,failure,failure,163,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Print the Remote Server logo on standard output.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:167,failure,failure,167,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Prints fit results.; ///; /// ikode is the type of printing parameters; /// p is function value; ///; /// - ikode = 1 - print values, errors and limits; /// - ikode = 2 - print values, errors and steps; /// - ikode = 3 - print values, errors, steps and derivatives; /// - ikode = 4 - print only values and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:220,error,errors,220,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Prints the values of the parameters at the time of the call; ///; /// also prints other relevant information such as function value,; /// estimated distance to minimum, parameter errors, step sizes.; ///; /// According to the value of IKODE, the printout is:; /// IKODE=INKODE=; /// - 0 only info about function value; /// - 1 parameter values, errors, limits; /// - 2 values, errors, step sizes, internal values; /// - 3 values, errors, step sizes, first derivs.; /// - 4 values, parabolic errors, MINOS errors; ///; /// when INKODE=5, MNPRIN chooses IKODE=1,2, or 3, according to fISW[1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:265,error,errors,265,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,6,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process TDSet on currently active PROOF session.; /// The last argument 'enl' specifies an entry- or event-list to be used as; /// event selection.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:273,error,error,273,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector (.C) file or; /// Tselector object; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:312,error,error,312,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector (.C) file.; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:288,error,error,288,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TDSet) using the specified selector object.; /// Entry- or event-lists should be set in the data set object using; /// TDSet::SetEntryList.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:285,error,error,285,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TFileCollection) using the specified selector (.C) file; /// or TSelector object.; /// The default tree is analyzed (i.e. the first one found). To specify another; /// tree, the default tree can be changed using TFileCollection::SetDefaultMetaData .; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:395,error,error,395,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process a data set (TFileCollection) using the specified selector object; /// The default tree is analyzed (i.e. the first one found). To specify another; /// tree, the default tree can be changed using TFileCollection::SetDefaultMetaData .; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:366,error,error,366,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process all entries in this chain and draw histogram corresponding to; /// expression varexp.; /// Returns -1 in case of error or number of selected events in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:207,error,error,207,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process all entries in this chain, calling functions in filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; /// See TTree::Process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:191,error,error,191,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process interpreter command directly via CINT interpreter.; /// Only executable statements are allowed (no variable declarations),; /// In all other cases use TROOT::ProcessLine().; /// The possible error codes are defined by TInterpreter::EErrorCode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:285,error,error,285,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process interpreter command via TApplication::ProcessLine().; /// On Win32 the line will be processed asynchronously by sending; /// it to the CINT interpreter thread. For explicit synchronous processing; /// use ProcessLineSync(). On non-Win32 platforms there is no difference; /// between ProcessLine() and ProcessLineSync().; /// The possible error codes are defined by TInterpreter::EErrorCode. In; /// particular, error will equal to TInterpreter::kProcessing until the; /// CINT interpreted thread has finished executing the line.; /// Returns the result of the command, cast to a Longptr_t.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:432,error,error,432,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process interpreter command via TApplication::ProcessLine().; /// On Win32 the line will be processed synchronously (i.e. it will; /// only return when the CINT interpreter thread has finished executing; /// the line). On non-Win32 platforms there is no difference between; /// ProcessLine() and ProcessLineSync().; /// The possible error codes are defined by TInterpreter::EErrorCode.; /// Returns the result of the command, cast to a Longptr_t.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:419,error,error,419,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF worker with TSelector object; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:187,error,error,187,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF worker.; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:166,error,error,166,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF. Runs on super master.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:181,error,error,181,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of an error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:224,error,error,224,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process specified TDSet on PROOF.; /// This method is called on client and on the PROOF master.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx:221,error,error,221,proof/proofplayer/src/TProofPlayerLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayerLite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector file 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// Process specified TDSet on PROOF worker with TSelector object; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:347,error,error,347,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process the specified TSelector object 'nentries' times.; /// Used to test the PROOF interator mechanism for cycle-driven selectors in a; /// local session.; /// The return value is -1 in case of error and TSelector::GetStatus(); /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:282,error,error,282,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process the up/down button messages. If fButtonToNum is false the; /// following message is sent: kC_COMMAND, kCM_BUTTON, widget id, param; /// param % 100 is the step size; /// param % 10000 / 100 != 0 indicates log step; /// param / 10000 != 0 indicates button down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:101,down,down,101,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,2,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process this chain executing the code in selector.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:176,error,error,176,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:199,error,error,199,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:199,error,error,199,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the code in the specified selector.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The TSelector class has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If the Tree (Chain) has an associated EventList, the loop is on the nentries; /// of the EventList, starting at firstentry, otherwise the loop is on the; /// specified Tree entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:189,error,error,189,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the code in the specified selector.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The TSelector class has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If the Tree (Chain) has an associated EventList, the loop is on the nentries; /// of the EventList, starting at firstentry, otherwise the loop is on the; /// specified Tree entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:189,error,error,189,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Produce TList object with list of available ODBC data sources; /// User must delete TList object afterwards; /// Name of data source can be used later for connection:; /// TSQLServer::Connect(""odbcn://<data_source_name>"", ""user"", ""pass"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:120,avail,available,120,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Produce TList object with list of available ODBC drivers; /// User must delete TList object afterwards; /// Name of driver can be used in connecting to data base in form; /// TSQLServer::Connect(""odbcd://DRIVER={<drivername>};DBQ=<dbname>;UID=user;PWD=pass;"", 0, 0);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:120,avail,available,120,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Produce TList object with list of available; /// ODBC drivers (isdrivers = kTRUE) or data sources (isdrivers = kFALSE)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:120,avail,available,120,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Profile histogram is resized along axis such that x is in the axis range.; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the rebinned histogram.; /// Takes into account errors (Sumw2) if any.; /// The axis must be rebinnable before invoking this function.; /// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:457,error,errors,457,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Profile histogram is resized along axis such that x is in the axis range.; ///; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The axis must be extendable before invoking this function.; ///; /// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:462,error,errors,462,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Profile histogram is resized along x axis such that x is in the axis range.; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The axis must be extendable before invoking this function.; ///; /// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:459,error,errors,459,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a 1-D histogram along X.; ///; /// The projection is always of the type TH1D.; /// The projection is made from the channels along the Y axis; /// ranging from firstybin to lastybin included.; /// By default, all bins including under- and overflow are included.; /// The number of entries in the projection is estimated from the; /// number of effective entries for all the cells included in the projection.; ///; /// To exclude the underflow bins in Y, use firstybin=1.; /// To exclude the overflow bins in Y, use lastybin=nx.; ///; /// if option ""e"" is specified, the errors are computed.; /// if option ""d"" is specified, the projection is drawn in the current pad.; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProjectionX("" "",firstybin,lastybin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProjectionX("" "",firstybin,lastybin,""[-cutg]"");; /// It is possible to apply several cuts:; /// myhist->ProjectionX("" "",firstybin,lastybin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TH1D named ""name"" exists in the current directory or pad; /// the histogram is reset and filled again with the projected contents of the TH2.; ///; /// NOTE that the X axis attributes of the TH2 are copied to the X axis of the projection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:684,error,errors,684,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a 1-D histogram along Y.; ///; /// The projection is always of the type TH1D.; /// The projection is made from the channels along the X axis; /// ranging from firstxbin to lastxbin included.; /// By default, all bins including under- and overflow are included.; /// The number of entries in the projection is estimated from the; /// number of effective entries for all the cells included in the projection; ///; /// To exclude the underflow bins in X, use firstxbin=1.; /// To exclude the overflow bins in X, use lastxbin=nx.; ///; /// if option ""e"" is specified, the errors are computed.; /// if option ""d"" is specified, the projection is drawn in the current pad.; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProjectionY("" "",firstxbin,lastxbin,""[-cutg]"");; /// It is possible to apply several cuts:; /// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; /// a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; /// In the case of axis incompatibility, an error is reported and a NULL pointer is returned.; ///; /// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:683,error,errors,683,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a profile histogram along X.; ///; /// The projection is made from the channels along the Y axis; /// ranging from firstybin to lastybin included.; /// By default, bins 1 to ny are included; /// When all bins are included, the number of entries in the projection; /// is set to the number of entries of the 2-D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// if option ""d"" is specified, the profile is drawn in the current pad.; ///; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; ///; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProfileX("" "",firstybin,lastybin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProfileX("" "",firstybin,lastybin,""[-cutg]"");; /// It is possible to apply several cuts ("","" means logical AND):; /// myhist->ProfileX("" "",firstybin,lastybin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TProfile named ""name"" exists in the current directory or pad with; /// a compatible axis the profile is reset and filled again with the projected contents of the TH2.; /// In the case of axis incompatibility an error is reported and a NULL pointer is returned.; ///; /// NOTE that the X axis attributes of the TH2 are copied to the X axis of the profile.; ///; /// NOTE that the default under- / overflow behavior differs from what ProjectionX; /// does! Profiles take the bin center into",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:807,error,error,807,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a profile histogram along X.; ///; /// The projection is made from the channels along the Y axis; /// ranging from firstybin to lastybin included.; /// The result is a 1D profile which contains the combination of all the considered bins along Y; /// By default, bins 1 to ny are included; /// When all bins are included, the number of entries in the projection; /// is set to the number of entries of the 2-D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:688,error,error,688,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a profile histogram along X; ///; /// The projection is made from the channels along the X axis; /// ranging from firstybin to lastybin included.; /// The result is a 1D profile which contains the combination of all the considered bins along X; /// By default, bins 1 to ny are included; /// When all bins are included, the number of entries in the projection; /// is set to the number of entries of the 2-D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:687,error,error,687,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 2-D histogram into a profile histogram along Y.; ///; /// The projection is made from the channels along the X axis; /// ranging from firstxbin to lastxbin included.; /// By default, bins 1 to nx are included; /// When all bins are included, the number of entries in the projection; /// is set to the number of entries of the 2-D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// if option ""d"" is specified, the profile is drawn in the current pad.; ///; /// if option ""o"" , the original axis range of the target axis will be; /// kept, but only bins inside the selected range will be filled.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; ///; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProfileY("" "",firstybin,lastybin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProfileY("" "",firstybin,lastybin,""[-cutg]"");; /// It is possible to apply several cuts:; /// myhist->ProfileY("" "",firstybin,lastybin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TProfile named ""name"" exists in the current directory or pad with; /// a compatible axis the profile is reset and filled again with the projected contents of the TH2.; /// In the case of axis incompatibility an error is reported and a NULL pointer is returned.; ///; /// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the profile.; ///; /// NOTE that the default under- / overflow behavior differs from what ProjectionX; /// does! Profiles take the bin center into account, so here ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:813,error,error,813,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-D histogram into a 1-D histogram along X.; ///; /// The projection is always of the type TH1D.; /// The projection is made from the cells along the X axis; /// ranging from iymin to iymax and izmin to izmax included.; /// By default, underflow and overflows are included in both the Y and Z axis.; /// By Setting iymin=1 and iymax=NbinsY the underflow and/or overflow in Y will be excluded; /// By setting izmin=1 and izmax=NbinsZ the underflow and/or overflow in Z will be excluded; ///; /// if option ""e"" is specified, the errors are computed.; /// if option ""d"" is specified, the projection is drawn in the current pad.; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// NOTE that if a TH1D named ""name"" exists in the current directory or pad; /// the histogram is reset and filled again with the projected contents of the TH3.; ///; /// implemented using Project3D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:623,error,errors,623,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-D histogram into a 1-D histogram along Y.; ///; /// The projection is always of the type TH1D.; /// The projection is made from the cells along the Y axis; /// ranging from ixmin to ixmax and izmin to izmax included.; /// By default, underflow and overflow are included in both the X and Z axis.; /// By setting ixmin=1 and ixmax=NbinsX the underflow and/or overflow in X will be excluded; /// By setting izmin=1 and izmax=NbinsZ the underflow and/or overflow in Z will be excluded; ///; /// if option ""e"" is specified, the errors are computed.; /// if option ""d"" is specified, the projection is drawn in the current pad.; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// NOTE that if a TH1D named ""name"" exists in the current directory or pad,; /// the histogram is reset and filled again with the projected contents of the TH3.; ///; /// implemented using Project3D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:622,error,errors,622,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-D histogram into a 1-D histogram along Z.; ///; /// The projection is always of the type TH1D.; /// The projection is made from the cells along the Z axis; /// ranging from ixmin to ixmax and iymin to iymax included.; /// By default, bins 1 to nx and 1 to ny are included; /// By default, underflow and overflow are included in both the X and Y axis.; /// By Setting ixmin=1 and ixmax=NbinsX the underflow and/or overflow in X will be excluded; /// By setting iymin=1 and/or iymax=NbinsY the underflow and/or overflow in Y will be excluded; ///; /// if option ""e"" is specified, the errors are computed.; /// if option ""d"" is specified, the projection is drawn in the current pad.; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// NOTE that if a TH1D named ""name"" exists in the current directory or pad,; /// the histogram is reset and filled again with the projected contents of the TH3.; ///; /// implemented using Project3D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:680,error,errors,680,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-D profile into a 2D-profile histogram depending on the option parameter.; ///; /// option may contain a combination of the characters x,y,z:; ///; /// - option = ""xy"" return the x versus y projection into a TProfile2D histogram; /// - option = ""yx"" return the y versus x projection into a TProfile2D histogram; /// - option = ""xz"" return the x versus z projection into a TProfile2D histogram; /// - option = ""zx"" return the z versus x projection into a TProfile2D histogram; /// - option = ""yz"" return the y versus z projection into a TProfile2D histogram; /// - option = ""zy"" return the z versus y projection into a TProfile2D histogram; ///; /// NB: the notation ""a vs b"" means ""a"" vertical and ""b"" horizontal along X; ///; /// The resulting profile contains the combination of all the considered bins along X; /// By default, all bins are included considering also underflow/overflows; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; ///; /// To select a bin range along an axis, use TAxis::SetRange, eg; /// `h3.GetYaxis()->SetRange(23,56);`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:1057,error,error,1057,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project all bins into a ndim-dimensional THn / THnSparse (whatever; /// *this is) or if (ndim < 4 and !wantNDim) a TH1/2/3 histogram,; /// keeping only axes in dim (specifying ndim dimensions).; /// If ""option"" contains:; /// - ""E"" errors will be calculated.; /// - ""A"" ranges of the target axes will be ignored.; /// - ""O"" original axis range of the target axes will be; /// kept, but only bins inside the selected range; /// will be filled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:318,error,errors,318,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project this profile into a 1-D histogram along X; ///; /// The projection is always of the type TH1D.; ///; /// - if option ""E"" is specified the errors of the projected histogram are computed and set; /// to be equal to the errors of the profile.; /// Option ""E"" is defined as the default one in the header file.; /// - if option """" is specified the histogram errors are simply the sqrt of its content; /// - if option ""B"" is specified, the content of bin of the returned histogram; /// will be equal to the GetBinEntries(bin) of the profile,; /// otherwise (default) it will be equal to GetBinContent(bin); /// - if option ""C=E"" the bin contents of the projection are set to the; /// bin errors of the profile; /// - if option ""W"" is specified the bin content of the projected histogram is set to the; /// product of the bin content of the profile and the entries.; /// With this option the returned histogram will be equivalent to the one obtained by; /// filling directly a TH1D using the 2-nd value as a weight.; /// This makes sense only for profile filled with weights =1. If not, the error of the; /// projected histogram obtained with this option will not be correct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:232,error,errors,232,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,5,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project this profile2D into a 2-D histogram along X,Y.; ///; /// The projection is always of the type TH2D.; ///; /// - if option ""E"" is specified the errors of the projected histogram are computed and set; /// to be equal to the errors of the profile.; /// Option ""E"" is defined as the default one in the header file.; /// - if option """" is specified the histogram errors are simply the sqrt of its content; /// - if option ""B"" is specified, the content of bin of the returned histogram; /// will be equal to the GetBinEntries(bin) of the profile,; /// - if option ""C=E"" the bin contents of the projection are set to the; /// bin errors of the profile; /// - if option ""W"" is specified the bin content of the projected histogram is set to the; /// product of the bin content of the profile and the entries.; /// With this option the returned histogram will be equivalent to the one obtained by; /// filling directly a TH2D using the 3-rd value as a weight.; /// This option makes sense only for profile filled with all weights =1.; /// When the profile is weighted (filled with weights different than 1) the; /// bin error of the projected histogram (obtained using this option ""W"") cannot be; /// correctly computed from the information stored in the profile. In that case the; /// obtained histogram contains as bin error square the weighted sum of the square of the; /// profiled observable (TProfile2D::fSumw2[bin] )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:237,error,errors,237,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,6,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Project this profile3D into a 3-D histogram along X,Y,Z.; ///; /// The projection is always of the type TH3D.; ///; /// - if option ""E"" is specified, the errors are computed. (default); /// - if option ""B"" is specified, the content of bin of the returned histogram; /// will be equal to the GetBinEntries(bin) of the profile,; /// - if option ""C=E"" the bin contents of the projection are set to the; /// bin errors of the profile; /// - if option ""E"" is specified the errors of the projected histogram are computed and set; /// to be equal to the errors of the profile.; /// Option ""E"" is defined as the default one in the header file.; /// - if option """" is specified the histogram errors are simply the sqrt of its content; /// - if option ""B"" is specified, the content of bin of the returned histogram; /// will be equal to the GetBinEntries(bin) of the profile,; /// - if option ""C=E"" the bin contents of the projection are set to the; /// bin errors of the profile; /// - if option ""W"" is specified the bin content of the projected histogram is set to the; /// product of the bin content of the profile and the entries.; /// With this option the returned histogram will be equivalent to the one obtained by; /// filling directly a TH2D using the 3-rd value as a weight.; /// This option makes sense only for profile filled with all weights =1.; /// When the profile is weighted (filled with weights different than 1) the; /// bin error of the projected histogram (obtained using this option ""W"") cannot be; /// correctly computed from the information stored in the profile. In that case the; /// obtained histogram contains as bin error square the weighted sum of the square of the; /// profiled observable (TProfile2D::fSumw2[bin] ); ///; /// Note that the axis range is not considered when doing the projection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:240,error,errors,240,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,8,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Protected function to perform the merge operation of a graph with asymmetric errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:163,error,errors,163,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Protected function to perform the merge operation of a graph with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:152,error,errors,152,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Protected function to perform the merge operation of a graph with multiple asymmetric errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:172,error,errors,172,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Put error/warning into TMsgBox and also forward to console.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:90,error,error,90,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read 'len' bytes from offset 'ofs' of the local file 'fin'.; /// Returns a TObjString with the content or 0, in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:206,failure,failure,206,proof/proof/src/TProofMgrLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read Zip64 end of central directory locator. Returns -1 in case of error,; /// -2 in case end locator magic is not found (i.e. not a zip64 file) and; /// offset of Zip64 end of central directory record in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:153,error,error,153,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read Zip64 end of central directory record. Returns -1 in case of error; /// and 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:152,error,error,152,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a buffer from the file at the offset 'pos' in the file.; ///; /// Returns kTRUE in case of failure.; /// Compared to ReadBuffer(char*, Int_t), this routine does _not_; /// change the cursor on the physical file representation (fD); /// if the data is in this TFile's cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:182,failure,failure,182,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a buffer from the file. This is the basic low level read operation.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:189,failure,failure,189,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a class.rules file which contains one rule per line with comment; /// starting with a #; /// - Returns the number of rules loaded.; /// - Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:251,error,error,251,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a data chunk of the given size, starting from the given offset; ///; /// param buffer: a pointer to a buffer big enough to hold the data; /// param position: offset from the beginning of the file; /// param length: number of bytes to be read; /// returns: kTRUE in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:364,failure,failure,364,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a data chunk of the given size; ///; /// param buffer: a pointer to a buffer big enough to hold the data; /// param length: number of bytes to be read; /// returns: kTRUE in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:273,failure,failure,273,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a hunk of data from the socket, up until a terminator. The hunk is; /// limited by whatever the TERMINATOR callback chooses as its; /// terminator. For example, if terminator stops at newline, the hunk; /// will consist of a line of data; if terminator stops at two; /// newlines, it can be used to read the head of an HTTP response.; /// Upon determining the boundary, the function returns the data (up to; /// the terminator) in hunk.; ///; /// In case of read error, -1 is returned. In case of having read some; /// data, but encountering EOF before seeing the terminator, the data; /// that has been read is returned, but it will (obviously) not contain the; /// terminator.; ///; /// The TERMINATOR function is called with three arguments: the; /// beginning of the data read so far, the beginning of the current; /// block of peeked-at data, and the length of the current block.; /// Depending on its needs, the function is free to choose whether to; /// analyze all data or just the newly arrived data. If TERMINATOR; /// returns 0, it means that the terminator has not been seen.; /// Otherwise it should return a pointer to the character immediately; /// following the terminator.; ///; /// The idea is to be able to read a line of input, or otherwise a hunk; /// of text, such as the head of an HTTP request, without crossing the; /// boundary, so that the next call to RecvRaw() etc. reads the data; /// after the hunk. To achieve that, this function does the following:; ///; /// 1. Peek at incoming data.; ///; /// 2. Determine whether the peeked data, along with the previously; /// read data, includes the terminator.; ///; /// 3a. If yes, read the data until the end of the terminator, and; /// exit.; ///; /// 3b. If no, read the peeked data and goto 1.; ///; /// The function is careful to assume as little as possible about the; /// implementation of peeking. For example, every peek is foll",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:554,error,error,554,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a line from the socket. Reads at most one less than the number of; /// characters specified by maxsize. Reading stops when a newline character; /// is found, The newline (\\n) and cr (\\r), if any, are removed.; /// Returns -1 in case of error, or the number of characters read (>= 0); /// otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:329,error,error,329,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a list of buffers given in pos[] and len[] and return it in a single; /// buffer.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:203,error,error,203,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a string token. Returns true if an error occurred in reading; /// or conversion. If a the read token is enclosed in quotation; /// marks those are stripped in the returned value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:126,error,error,126,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read a token and convert it to an Int_t. Returns true; /// if an error occurred in reading or conversion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:151,error,error,151,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read all branches of a BranchElement and return total number of bytes.; ///; /// - If entry = 0, then use current entry number + 1.; /// - If entry < 0, then reset entry number to 0.; ///; /// Returns the number of bytes read from the input buffer.; /// - If entry does not exist, then returns 0.; /// - If an I/O error occurs, then returns -1.; ///; /// See IMPORTANT REMARKS in TTree::GetEntry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:400,error,error,400,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read all branches of a BranchObject and return total number of bytes.; ///; /// - If entry = 0 take current entry number + 1; /// - If entry < 0 reset entry number to 0; ///; /// The function returns the number of bytes read from the input buffer.; ///; /// - If entry does not exist the function returns 0.; /// - If an I/O error occurs, the function returns -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx:411,error,error,411,tree/tree/src/TBranchObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read all branches of entry and return total number of bytes read.; ///; /// - `getall = 0` : get only active branches; /// - `getall = 1` : get all branches; ///; /// The function returns the number of bytes read from the input buffer.; /// If entry does not exist the function returns 0.; /// If an I/O error occurs, the function returns -1.; ///; /// If the Tree has friends, also read the friends entry.; ///; /// To activate/deactivate one or more branches, use TBranch::SetBranchStatus; /// For example, if you have a Tree with several hundred branches, and you; /// are interested only by branches named ""a"" and ""b"", do; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""*"",0); //disable all branches; /// mytree.SetBranchStatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:390,error,error,390,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read all leaves of entry and return total number of bytes read.; ///; /// The input argument ""entry"" is the entry number in the current tree.; /// In case of a TChain, the entry number in the current Tree must be found; /// before calling this function. For example:; ///; ///~~~ {.cpp}; /// TChain* chain = ...;; /// Long64_t localEntry = chain->LoadTree(entry);; /// branch->GetEntry(localEntry);; ///~~~; ///; /// The function returns the number of bytes read from the input buffer.; /// If entry does not exist, the function returns 0.; /// If an I/O error occurs, the function returns -1.; ///; /// See IMPORTANT REMARKS in TTree::GetEntry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:641,error,error,641,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read and parse a rootmapfile in its new format, and return 0 in case of; /// success, -1 if the file has already been read, and -3 in case its format; /// is the old one (e.g. containing ""Library.ClassName""), -4 in case of syntax; /// error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:321,error,error,321,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read and parse the resource file for a certain level.; /// Returns -1 on case of error, 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx:167,error,error,167,core/base/src/TEnv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read basket buffers in memory and cleanup.; ///; /// Read a basket buffer. Check if buffers of previous ReadBasket; /// should not be dropped. Remember, we keep buffers in memory up to; /// fMaxVirtualSize.; /// The function returns 0 in case of success, 1 in case of error; /// This function was modified with the addition of the parallel; /// unzipping, it will try to get the unzipped file from the cache; /// receiving only a pointer to that buffer (so we shall not; /// delete that pointer), although we get a new buffer in case; /// it's not found in the cache.; /// There is a lot of code duplication but it was necessary to assure; /// the expected behavior when there is no cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:354,error,error,354,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos if the request is in the list of; /// prefetched blocks read from fBuffer.; /// Otherwise try to fill the cache from the list of selected branches,; /// and recheck if pos is now in the list.; /// Returns:; /// - -1 in case of read failure,; /// - 0 in case not in cache,; /// - 1 in case read from cache.; /// This function overloads TFileCacheRead::ReadBuffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:346,failure,failure,346,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos.; ///; /// If pos is in the list of prefetched blocks read from fBuffer,; /// otherwise need to make a normal read from file. Returns -1 in case of; /// read error, 0 in case not in cache, 1 in case read from cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:272,error,error,272,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read group config file 'cf'.; /// If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; ///; /// expects the following directives:; /// Group definition:; /// group `<groupname>` `<user>`+; /// disk quota; /// property `<groupname>` diskquota `<quota in GB>`; /// average filesize (to be used when the file size is not available); /// averagefilesize `<average size>`{G,g,M,m,K,k}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:423,avail,available,423,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:407,error,error,407,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read lines containing 'pattern' in 'file'.; /// Returns a TObjString with the content or 0, in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx:189,failure,failure,189,proof/proof/src/TProofMgrLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgrLite.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read multiple byte range request from web server.; /// Uses HTTP 1.0 daemon wihtout mod-root.; /// Returns -2 in case file does not exist, -1 in case; /// of error and 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:244,error,error,244,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read object derived from TObject class; /// If it is not TObject or in case of error, return 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TKeySQL.cxx:165,error,error,165,io/sql/src/TKeySQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TKeySQL.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read one character from stdin. Block if not available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:130,avail,available,130,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read request from web server. Returns -1 in case of error,; /// 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:138,error,error,138,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read scattered data chunks in one operation; ///; /// param buffer: a pointer to a buffer big enough to hold all of the; /// requested data; /// param position: position[i] is the seek position of chunk i of len; /// length[i]; /// param length: length[i] is the length of the chunk at offset; /// position[i]; /// param nbuffs: number of chunks; /// returns: kTRUE in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:463,failure,failure,463,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP 1.0 daemon (without; /// mod-root installed). This routine connects to the remote host, sends the; /// request and returns the buffer. Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:298,error,error,298,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP daemon. This; /// routine connects to the remote host, sends the request and returns; /// the buffer. Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:265,error,error,265,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/davix/src/TDavixFile.cxx:169,error,error,169,net/davix/src/TDavixFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/davix/src/TDavixFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via dCache daemon.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:178,error,error,178,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via rootd daemon.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:177,error,error,177,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte ranges from remote file via HTTP 1.0 daemon (without; /// mod-root installed). Read the nbuf blocks described in arrays pos and len,; /// where pos[i] is the seek position of block i of length len[i].; /// Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer; /// This function is overloaded by TNetFile, TWebFile, etc.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:470,failure,failure,470,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte ranges from remote file via HTTP daemon.; /// Reads the nbuf blocks described in arrays pos and len,; /// where pos[i] is the seek position of block i of length len[i].; /// Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer; /// This function is overloaded by TNetFile, TWebFile, etc.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:438,failure,failure,438,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the contents of the argset in ASCII form from given stream.; ///; /// The stream is read to end-of-file and each line is assumed to be; /// of the form; /// \code; /// <argName> = <argValue>; /// \endcode; /// Lines starting with argNames not matching any element in the list; /// will be ignored with a warning message. In addition limited C++ style; /// preprocessing and flow control is provided. The following constructions; /// are recognized:; /// \code; /// include ""include.file""; /// \endcode; /// Include given file, recursive inclusion OK; /// \code; /// if (<boolean_expression>); /// <name> = <value>; /// ....; /// else if (<boolean_expression>); /// ....; /// else; /// ....; /// endif; /// \endcode; ///; /// All expressions are evaluated by RooFormula, and may involve any of; /// the sets variables.; /// \code; /// echo <Message>; /// \endcode; /// Print console message while reading from stream; /// \code; /// abort; /// \endcode; /// Force termination of read sequence with error status; ///; /// The value of each argument is read by the arguments readFromStream; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:925,echo,echo,925,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,2,"['echo', 'error']","['echo', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the directory of the ZIP archive. Returns -1 in case of error,; /// 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:147,error,error,147,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the end header of the ZIP archive including the archive comment; /// at the current file position. Check that it really was a single-disk; /// archive with all the entries as expected. Most importantly, figure; /// out where the central directory begins. Returns -1 in case of error,; /// 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:368,error,error,368,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the member header of the ZIP archive. Sets the position where; /// the data starts in the member object. Returns -1 in case of error,; /// 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:218,error,error,218,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the nbuf blocks described in arrays pos and len,; /// where pos[i] is the seek position of block i of length len[i].; /// Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer.; /// This function is overloaded by TNetFile, TWebFile, etc.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:372,failure,failure,372,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the nbuf blocks described in arrays pos and len.; ///; /// The value pos[i] is the seek position of block i of length len[i].; /// Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer.; /// This function is overloaded by TNetFile, TWebFile, etc.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:381,failure,failure,381,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Read the next token and convert it to a double. Returns true; /// if an error occurred in reading or conversion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:158,error,error,158,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together.; ///; /// if newname is not blank a new profile hnew is created.; /// else the current histogram is modified (default); /// The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; /// have to be merged into one bin of hnew; /// If the original profile has errors stored (via Sumw2), the resulting; /// profile has new errors correctly calculated.; ///; /// examples: if hpxpy is an existing TProfile2D profile with 40 x 40 bins; /// ~~~ {.cpp}; /// hpxpy->Rebin2D(); // merges two bins along the xaxis and yaxis in one; /// // Carefull: previous contents of hpxpy are lost; /// hpxpy->Rebin2D(3,5); // merges 3 bins along the xaxis and 5 bins along the yaxis in one; /// // Carefull: previous contents of hpxpy are lost; /// hpxpy->RebinX(5); //merges five bins along the xaxis in one in hpxpy; /// TProfile2D *hnew = hpxpy->RebinY(5,""hnew""); // creates a new profile hnew; /// // merging 5 bins of hpxpy along the yaxis in one bin; /// ~~~; ///; /// NOTE : If nxgroup/nygroup is not an exact divider of the number of bins,; /// along the xaxis/yaxis the top limit(s) of the rebinned profile; /// is changed to the upper edge of the xbin=newxbins*nxgroup resp.; /// ybin=newybins*nygroup and the remaining bins are added to; /// the overflow bin.; /// Statistics will be recomputed from the new bin contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:453,error,errors,453,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together.; ///; /// if newname is not blank a new temporary histogram hnew is created.; /// else the current histogram is modified (default); /// The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; /// have to me merged into one bin of hnew; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if hpxpy is an existing TH2 histogram with 40 x 40 bins; /// ~~~ {.cpp}; /// hpxpy->Rebin2D(); // merges two bins along the xaxis and yaxis in one in hpxpy; /// // Carefull: previous contents of hpxpy are lost; /// hpxpy->RebinX(5); //merges five bins along the xaxis in one in hpxpy; /// TH2 *hnew = hpxpy->RebinY(5,""hnew""); // creates a new histogram hnew; /// // merging 5 bins of h1 along the yaxis in one bin; /// ~~~; ///; /// NOTE : If nxgroup/nygroup is not an exact divider of the number of bins,; /// along the xaxis/yaxis the top limit(s) of the rebinned histogram; /// is changed to the upper edge of the xbin=newxbins*nxgroup resp.; /// ybin=newybins*nygroup and the corresponding bins are added to; /// the overflow bin.; /// Statistics will be recomputed from the new bin contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:467,error,errors,467,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this histogram grouping nxgroup/nygroup/nzgroup bins along the xaxis/yaxis/zaxis together.; ///; /// if newname is not blank a new temporary histogram hnew is created.; /// else the current histogram is modified (default); /// The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; /// have to me merged into one bin of hnew; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if hpxpy is an existing TH3 histogram with 40 x 40 x 40 bins; /// hpxpypz->Rebin3D(); // merges two bins along the xaxis and yaxis in one in hpxpypz; /// // Carefull: previous contents of hpxpy are lost; /// hpxpypz->RebinX(5); //merges five bins along the xaxis in one in hpxpypz; /// TH3 *hnew = hpxpypz->RebinY(5,""hnew""); // creates a new histogram hnew; /// // merging 5 bins of h1 along the yaxis in one bin; ///; /// NOTE : If nxgroup/nygroup is not an exact divider of the number of bins,; /// along the xaxis/yaxis the top limit(s) of the rebinned histogram; /// is changed to the upper edge of the xbin=newxbins*nxgroup resp.; /// ybin=newybins*nygroup and the corresponding bins are added to; /// the overflow bin.; /// Statistics will be recomputed from the new bin contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:481,error,errors,481,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this histogram; ///; /// #### case 1 xbins=0; ///; /// If newname is blank (default), the current histogram is modified and; /// a pointer to it is returned.; ///; /// If newname is not blank, the current histogram is not modified, and a; /// new histogram is returned which is a Clone of the current histogram; /// with its name set to newname.; ///; /// The parameter ngroup indicates how many bins of this have to be merged; /// into one bin of the result.; ///; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; /// h1->Rebin(5); //merges five bins in one in h1; /// TH1F *hnew = dynamic_cast<TH1F*>(h1->Rebin(5,""hnew"")); // creates a new histogram hnew; /// // merging 5 bins of h1 in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned histogram is reduced; /// to the upper edge of the last bin that can make a complete; /// group. The remaining bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// #### case 2 xbins!=0; ///; /// A new histogram is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created histogram.; /// The array xbins must contain ngroup+1 elements that represent the low-edges; /// of the bins.; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// NOTE: The bin edges specified in xbins should correspond to bin edges; /// in the original histogram. If a bin edge in the new histogram is; /// in the middle of a bin in the original histogram, all entries i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:592,error,errors,592,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this profile grouping ngroup bins together.; ///; /// ## case 1 xbins=0; /// if newname is not blank a new temporary profile hnew is created.; /// else the current profile is modified (default); /// The parameter ngroup indicates how many bins of this have to me merged; /// into one bin of hnew; /// If the original profile has errors stored (via Sumw2), the resulting; /// profile has new errors correctly calculated.; ///; /// examples: if hp is an existing TProfile histogram with 100 bins; ///; /// ~~~ {.cpp}; /// hp->Rebin(); //merges two bins in one in hp: previous contents of hp are lost; /// hp->Rebin(5); //merges five bins in one in hp; /// TProfile *hnew = hp->Rebin(5,""hnew""); // creates a new profile hnew; /// //merging 5 bins of hp in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned profile is changed; /// to the upper edge of the bin=newbins*ngroup and the corresponding; /// bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// ## case 2 xbins!=0; /// a new profile is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created profile; /// The array xbins must contain ngroup+1 elements that represent the low-edge; /// of the bins.; /// The data of the old bins are added to the new bin which contains the bin center; /// of the old bins. It is possible that information from the old binning are attached; /// to the under-/overflow bins of the new binning.; ///; /// examples: if hp is an existing TProfile with 100 bins; ///; /// ~~~ {.cpp}; /// Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; /// hp->Rebin(24,""hpnew"",xbins); //creates a new variable bin size profile hpnew; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:421,error,errors,421,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Recalculates the summed y error arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:112,error,error,112,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive 'len' bytes at 'buf'; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock; /// -3 if the operation would block; /// -4 if connection broken; /// -errno if any another failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:304,failure,failure,304,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive 'len' bytes at 'buf'; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock; /// -errno if any another failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:238,failure,failure,238,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a TMessage object. The user must delete the TMessage object.; /// Returns length of message in bytes (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking socket would; /// block (i.e. there is nothing to be read). In those case mess == 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:266,error,error,266,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a TMessage object. The user must delete the TMessage object.; /// Returns length of message in bytes (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking socket; /// would block (i.e. there is nothing to be read) or -5 if pipe broken; /// or reset by peer (EPIPE || ECONNRESET). In those case mess == 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:266,error,error,266,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a character string message of maximum max length. Returns in; /// kind the message type. Returns length of received string+4 (can be 0 if; /// other side of connection is closed) or -1 in case of error or -4 in; /// case a non-blocking socket would block (i.e. there is nothing to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:290,error,error,290,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a character string message of maximum max length. The expected; /// message must be of type kMESS_STRING. Returns length of received string; /// (can be 0 if otherside of connection is closed) or -1 in case of error; /// or -4 in case a non-blocking socket would block (i.e. there is nothing; /// to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:304,error,error,304,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a file, either sent by a client or a master server.; /// If bin is true it is a binary file, other wise it is an ASCII; /// file and we need to check for Windows \\r tokens. Returns -1 in; /// case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:295,error,error,295,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a raw buffer of specified length bytes. Using option kPeek; /// one can peek at incoming data. Returns number of received bytes.; /// Returns -1 in case of error. In case of opt == kOob: -2 means; /// EWOULDBLOCK and -3 EINVAL. In case of non-blocking mode (kNoBlock); /// -4 means EWOULDBLOCK. Returns -5 if pipe broken or reset by; /// peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:250,error,error,250,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive buffer and decode it in str using key indicated by Key type.; /// Return number of received bytes or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:209,error,error,209,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive buffer of specified length over parallel sockets.; /// Returns len in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx:198,error,error,198,net/rpdutils/src/netpar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received or 0 in case connection is closed. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx:223,error,error,223,net/rpdutils/src/net.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:189,error,error,189,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receive str from sock and decode it using key indicated by key type; /// Return number of received bytes or -1 in case of error.; /// dec = 1 for private decoding, dec = 2 for public decoding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:208,error,error,208,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receives a status and a message type. Returns length of received; /// integers, 2*sizeof(Int_t) (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking; /// socket would block (i.e. there is nothing to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:253,error,error,253,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Receives client protocol and returns daemon protocol.; /// Returns: 0 if ok; /// -1 if any error occured; /// -2 if special action (e.g. cleanup): no need to continue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:177,error,error,177,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x and y axis parameters with variable bin sizes.; ///; /// The X and Y axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:243,error,errors,243,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x and y axis parameters.; ///; /// The X and Y axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:219,error,errors,219,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x axis parameters with variable bin sizes.; ///; /// The X axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:231,error,errors,231,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x axis parameters.; ///; /// The X axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:207,error,errors,207,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x, y and z axis parameters with variable bin sizes.; ///; /// The X, Y and Z axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1,; /// zBins is supposed to be of length nz+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:249,error,errors,249,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x, y and z axis parameters.; ///; /// The X, Y and Z axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:225,error,errors,225,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redirect stdout to 'logfile'. This log file will be flushed to the; /// client or master after each command.; /// If donotredir != 0 just reopen the file for usage in TProofServ (already redirected).; /// On success return a pointer to the open log file. Return 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/pmain.cxx:353,failure,failure,353,main/src/pmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/pmain.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Redirect stdout to 'logfile'. This log file will be flushed to the; /// client or master after each command.; /// On success return a pointer to the open log file. Return 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/roots.cxx:262,failure,failure,262,main/src/roots.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/roots.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings and verification, if required.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:790,failure,failure,790,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings, if needed.; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:177,failure,failure,177,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Release current lock, make sure it the same as the 'lock' argument.; /// Returns TRUE on success, FALSE on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx:193,failure,failure,193,graf3d/gl/src/TGLLockable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLLockable.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Release memory cache for dataset 'dset'; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:158,error,error,158,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Release semaphore. Returns 0 if OK, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:128,error,error,128,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reload the library map entries coming from all the loaded shared libraries,; /// after first unloading the current ones.; /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:223,error,error,223,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove URL at given position. Returns kTRUE on success, kFALSE on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileInfo.cxx:152,error,error,152,core/base/src/TFileInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileInfo.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket.; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:271,error,error,271,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:660,error,error,660,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove a specific package.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:165,error,error,165,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove all packages.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,error,error,159,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove element from the scene.; /// It is not an error if the element is not found in the scene.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx:135,error,error,135,graf3d/eve/src/TEveScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove element represented by object rnrObj from the scene.; /// It is not an error if the element is not found in the scene.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx:164,error,error,164,graf3d/eve/src/TEveScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveScene.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove object from this collection and recursively remove the object; /// from all other objects (and collections).; /// This function overrides TCollection::RecursiveRemove that calls; /// the Remove function. THashList::Remove cannot be called because; /// it uses the hash value of the hash table. This hash value; /// is not available anymore when RecursiveRemove is called from; /// the TObject destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:415,avail,available,415,core/cont/src/THashList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx,6,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the branch b from the Tree cache.; /// if subbranches is true all the branches of the subbranches are; /// also removed from the cache.; ///; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:301,error,error,301,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the branch with name 'bname' from the Tree cache.; /// If bname=""*"" all branches are removed from the cache.; /// if subbranches is true all the branches of the subbranches are; /// also removed from the cache.; ///; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:376,error,error,376,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode, like from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:453,failure,failure,453,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode, like from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore. A TWebFile cannot be reopened in update mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:453,failure,failure,453,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen a file with a different access mode.; ///; /// For example, it is possible to change from READ to; /// UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. Thus the; /// mode argument can be either ""READ"" or ""UPDATE"". The method returns; /// 0 in case the mode was successfully modified, 1 in case the mode; /// did not change (was already as requested or wrong input arguments); /// and -1 in case of failure, in which case the file cannot be used; /// anymore. The current directory (gFile) is changed to this file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:496,failure,failure,496,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reopen the file with the new access mode; ///; /// param mode: the new access mode; /// returns: 0 in case the mode was successfully modified, 1 in case; /// the mode did not change (was already as requested or wrong; /// input arguments) and -1 in case of failure, in which case; /// the file cannot be used anymore",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:343,failure,failure,343,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace all direct servers of this object with the new servers in `newServerList`.; /// This substitutes objects that we receive values from with new objects that have the same name.; /// \see recursiveRedirectServers() Use recursive version if servers that are only indirectly serving this object should be replaced as well.; /// \see redirectServers() If only the direct servers of an object need to be replaced.; ///; /// Note that changing the types of objects is generally allowed, but can be wrong if the interface of an object changes.; /// For example, one can reparametrise a model by substituting a variable with a function:; /// \f[; /// f(x\, |\, a) = a \cdot x \rightarrow f(x\, |\, b) = (2.1 \cdot b) \cdot x; /// \f]; /// If an object, however, expects a PDF, and this is substituted with a function that isn't normalised, wrong results might be obtained; /// or it might even crash the program. The types of the objects being substituted are not checked.; ///; /// \param[in] newSetOrig Set of new servers that should be used instead of the current servers.; /// \param[in] mustReplaceAll A warning is printed and error status is returned if not all servers could be; /// substituted successfully.; /// \param[in] nameChange If false, an object named ""x"" is only replaced with an object also named ""x"" in `newSetOrig`.; /// If the object in `newSet` is called differently, set `nameChange` to true and use setAttribute() on the x object:; /// ```; /// objectToReplaceX.setAttribute(""ORIGNAME:x""); /// ```; /// Now, the renamed object will be selected based on the attribute ""ORIGNAME:<name>"".; /// \param[in] isRecursionStep Internal switch used when called from recursiveRedirectServers().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:1216,error,error,1216,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace bin errors by values in array error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:98,error,errors,98,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace contents of this histogram by multiplication of h1 by h2.; ///; /// `this = (c1*h1)*(c2*h2)`; ///; /// If errors of this are available (TH1::Sumw2), errors are recalculated.; /// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Multiply; ///; /// The function return kFALSE if the Multiply operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:200,error,errors,200,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,4,"['avail', 'error']","['available', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace contents of this histogram by multiplication of h1 by h2; /// this = (c1*h1)/(c2*h2); /// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for; /// this if not already set.; /// The resulting errors are calculated assuming uncorrelated content.; /// However, if option =""B"" is specified, Binomial errors are computed.; /// In this case c1 and c2 do not make real sense and they are ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:305,error,errors,305,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace contents of this histogram by the addition of h1 and h2.; ///; /// `this = c1*h1 + c2*h2`; /// if errors are defined (see TH1::Sumw2), errors are also recalculated; ///; /// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// Note also that adding histogram with labels is not supported, histogram will be; /// added merging them by bin number independently of the labels.; /// For adding histogram ith labels one should use TH1::Merge; ///; /// SPECIAL CASE (Average/Efficiency histograms); /// For histograms representing averages or efficiencies, one should compute the average; /// of the two histograms and not the sum. One can mark a histogram to be an average; /// histogram by setting its bit kIsAverage with; /// myhist.SetBit(TH1::kIsAverage);; /// Note that the two histograms must have their kIsAverage bit set; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Add; ///; /// IMPORTANT NOTE2: You should be careful about the statistics of the; /// returned histogram, whose statistics may be binned or unbinned,; /// depending on whether c1 is negative, whether TAxis::kAxisRange is true,; /// and whether TH1::ResetStats has been called on either this or h1.; /// See TH1::GetStats.; ///; /// ANOTHER SPECIAL CASE : h1 = h2 and c2 < 0; /// do a scaling this = c1 * h1 / (bin Volume); ///; /// The function returns kFALSE if the Add operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:192,error,errors,192,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Replace contents of this histogram by the division of h1 by h2.; ///; /// `this = c1*h1/(c2*h2)`; ///; /// If errors are defined (see TH1::Sumw2), errors are also recalculated; /// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; /// The resulting errors are calculated assuming uncorrelated histograms.; /// However, if option =""B"" is specified, Binomial errors are computed.; /// In this case c1 and c2 do not make real sense and they are ignored.; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Divide; ///; /// Please note also that in the binomial case errors are calculated using standard; /// binomial statistics, which means when b1 = b2, the error is zero.; /// If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; /// use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; /// error for the case b1=b2.; ///; /// The function return kFALSE if the divide operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:196,error,errors,196,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,9,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reset error counter to given value, limiting the number; /// of future error messages for this pdf to 'resetValue'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:92,error,error,92,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,6,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reset this histogram: contents, errors, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:118,error,errors,118,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,15,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Reset this histogram: contents, errors, etc.; /// \param[in] option; /// - if ""ICE"" is specified, resets only Integral, Contents and Errors.; /// - if ""ICES"" is specified, resets only Integral, Contents, Errors and Statistics; /// This option is used; /// - if ""M"" is specified, resets also Minimum and Maximum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:118,error,errors,118,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,"['Error', 'error']","['Errors', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Resets function value and errors to UNDEFINED; ///; /// - If IOPT=1,; /// - If IOPT=0, sets only MINOS errors to undefined; /// Called from MNCLER and whenever problem changes, for example; /// after SET LIMITS, SET PARAM, CALL FCN 6",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:112,error,errors,112,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the condition of the coefficient matrix. If the condition number; /// is very large, then the matrix is ill-conditioned and is almost singular.; /// The computation of the inverse is prone to large numerical errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:303,error,errors,303,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the content of the associated file. The approximate number; /// of lines to be retrieved is given by 'lines', with the convention that; /// 0 means 'all', a positive number means the first 'lines' and a negative; /// number means the last '-lines'. Default is -1000.; /// If opt == TProofLog::kGrep only the lines containing 'pattern' are; /// retrieved (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:581,error,error,581,proof/proof/src/TProofLog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the content of the log file associated with worker 'ord'.; /// If 'ord' is ""*"" (default), all the workers are retrieved. If 'all'; /// is true, the whole files are retrieved; else a max of; /// fgMaxTransferSize (about 1000 lines) per file is read, starting from; /// the end (i.e. the last ~1000 lines).; /// The received buffer is added to the file fname, if the latter is defined.; /// If opt == TProofLog::kGrep only the lines containing 'pattern' are; /// retrieved (remote grep functionality); to filter out a pattern 'pat' use; /// pattern = ""-v pat"".; /// Return 0 on success, -1 in case of any error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:698,error,error,698,proof/proof/src/TProofLog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the type of data stored by branch; put its dictionary into; /// dict, return its type name. If no dictionary is available, at least; /// its type name should be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:207,avail,available,207,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return 'nSigma' binomial confidence interval for (n,m). The result is return in asym1 and asym2.; /// If the return values is false and error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:222,error,error,222,roofit/roofitcore/src/RooHistError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Error on Integral of a parametric function between a and b; /// due to the parameter uncertainties and their covariance matrix from the fit.; /// In addition to the integral limits, this method takes as input a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo->Fit(func, ""S"");; /// func->IntegralError(x1,x2,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full covariance matrix; /// dim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:93,Error,Error,93,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Error on Integral of a parametric function with dimension larger than one; /// between a[] and b[] due to the parameters uncertainties.; /// For a TF1 with dimension larger than 1 (for example a TF2 or TF3); /// TF1::IntegralMultiple is used for the integral calculation; ///; /// In addition to the integral limits, this method takes as input a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo2d->Fit(func2, ""S"");; /// func2->IntegralError(a,b,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect res",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:93,Error,Error,93,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:457,error,error,457,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:453,error,error,453,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Integral of function between a and b using the given parameter values and; /// relative and absolute tolerance.; ///; /// The default integrator defined in ROOT::Math::IntegratorOneDimOptions::DefaultIntegrator() is used; /// If ROOT contains the MathMore library the default integrator is set to be; /// the adaptive ROOT::Math::GSLIntegrator (based on QUADPACK) or otherwise the; /// ROOT::Math::GaussIntegrator is used; /// See the reference documentation of these classes for more information about the; /// integration algorithms; /// To change integration algorithm just do :; /// ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(IntegratorName);; /// Valid integrator names are:; /// - Gauss : for ROOT::Math::GaussIntegrator; /// - GaussLegendre : for ROOT::Math::GaussLegendreIntegrator; /// - Adaptive : for ROOT::Math::GSLIntegrator adaptive method (QAG); /// - AdaptiveSingular : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:194,toler,tolerance,194,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return Mva-Value.; ///; /// In case of `fSigBgSeparated==false` (one unified PDEFoam was; /// trained) the function returns the content of the cell, which; /// corresponds to the current TMVA::Event, i.e. D =; /// N_sig/(N_bg+N_sig).; ///; /// In case of `fSigBgSeparated==true` (two separate PDEFoams were; /// trained) the function returns; ///; /// D = Density_sig/(Density_sig+Density_bg); ///; /// where 'Density_sig' is the content of the cell in the signal; /// PDEFoam (fFoam[0]) and 'Density_bg' is the content of the cell; /// in the background PDEFoam (fFoam[1]).; ///; /// In both cases the error on the discriminant is stored in 'err'; /// and 'errUpper'. (Of course err and errUpper must be non-zero; /// and point to valid address to make this work.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:689,error,error,689,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooAbsRealLValue representing the error associated; /// with this variable. The callers takes ownership of the; /// return object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:129,error,error,129,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:631,error,error,631,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a bit mask of metadata about the current typedef.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx:99,mask,mask,99,core/metacling/src/TClingTypedefInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a constant value object with given value.; /// Return previously created object if available,; /// otherwise create a new one on the fly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx:176,avail,available,176,roofit/roofitcore/src/RooRealConstant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a histogram containing the asymmetry of this histogram with h2,; /// where the asymmetry is defined as:; ///; /// ~~~ {.cpp}; /// Asymmetry = (h1 - h2)/(h1 + h2) where h1 = this; /// ~~~; ///; /// works for 1D, 2D, etc. histograms; /// c2 is an optional argument that gives a relative weight between the two; /// histograms, and dc2 is the error on this weight. This is useful, for example,; /// when forming an asymmetry between two histograms from 2 different data sets that; /// need to be normalized to each other in some way. The function calculates; /// the errors assuming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)).; ///; /// example: assuming 'h1' and 'h2' are already filled; ///; /// ~~~ {.cpp}; /// h3 = h1->GetAsymmetry(h2); /// ~~~; ///; /// then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; /// h1 and h2 are left intact.; ///; /// Note that it is the user's responsibility to manage the created histogram.; /// The name of the returned histogram will be `Asymmetry_nameOfh1-nameOfh2`; ///; /// code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun; ///; /// clone the histograms so top and bottom will have the; /// correct dimensions:; /// Sumw2 just makes sure the errors will be computed properly; /// when we form sums and ratios below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:433,error,error,433,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:312,Error,Error,312,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the list of branches of the current tree.; ///; /// Warning: If there is no current TTree yet, this routine will open the; /// first in the chain.; ///; /// Returns 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:276,failure,failure,276,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a space separated list of loaded shared libraries.; /// Regexp is a wildcard expression, see TRegexp::MakeWildcard.; /// This list is of a format suitable for a linker, i.e it may contain; /// -Lpathname and/or -lNameOfLib.; /// Option can be any of:; /// - S: shared libraries loaded at the start of the executable, because; /// they were specified on the link line.; /// - D: shared libraries dynamically loaded after the start of the program.; /// - L: this option is ignored, and available for backward compatibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:577,avail,available,577,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return a valid index in fImage tables to avoid seg-fault by accessing out of; /// indices out of array's ranges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:137,fault,fault,137,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['fault'],['fault']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return an error estimate on the upper(lower) limit. This is the error on; /// either CLs or CLsplusb divided by an estimate of the slope at this; /// point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:96,error,error,96,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile histogram; ///; /// Computing errors: A moving field; ///; /// The computation of errors for a TProfile has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; ///; /// - prior to version 3.00, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - in version 3.00 (18 Dec 2000), the algorithm is protected for values of; /// eprim2 very small and the bin errors set to the average bin errors, following; /// recommendations from a group of users.; /// - in version 3.01 (19 Apr 2001), it is realized that the algorithm above; /// should be applied only to low statistic bins.; /// - in version 3.02 (26 Sep 2001), the same group of users recommend instead; /// to take two times the average error on all bins for these low; /// statistics bins giving a very small value for eprim2.; /// - in version 3.04 (Nov 2002), the algorithm is modified/protected for the case; /// when a TProfile is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile with a large number of; /// bins (eg 100000).; /// - in version 3.05/06, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; ///; /// Ideas for improvements of this algorithm are welcome. No suggestions; /// received since our call for advice to roottalk in Jul 2002.; /// see for instance: http://root.cern/root/roottalk/roottalk02/2916.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:97,error,error,97,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,8,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile2D histogram.; ///; /// ### Computing errors: A moving field; ///; /// The computation of errors for a TProfile2D has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; /// - prior to version 3.10, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - The algorithm is modified/protected for the case; /// when a TProfile2D is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile2D with a large number of; /// bins (eg 100000).; /// - in version 3.10/02, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; /// (see also comments in TProfile::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:97,error,error,97,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,5,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile3D histogram.; ///; /// ### Computing errors: A moving field; ///; /// The computation of errors for a TProfile3D has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; ///; /// - prior to version 3.10, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - The algorithm is modified/protected for the case; /// when a TProfile3D is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile3D with a large number of; /// bins (eg 100000).; /// - in version 3.10/02, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; /// (see also comments in TProfile::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:97,error,error,97,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,5,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return content of global bin error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1K.cxx:115,error,error,115,hist/hist/src/TH1K.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1K.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return cryptographic random number; /// Fill provided buffer with random values; /// Returns number of bytes written to buffer or -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:230,error,error,230,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return current evaluation error logging mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:112,error,error,112,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return error of parameter ipar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:93,error,error,93,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return error of standard deviation estimation for Normal distribution; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// Value returned is standard deviation of sample standard deviation.; /// Note that it is an approximated value which is valid only in the case that the; /// original data distribution is Normal. The correct one would require; /// the 4-th momentum value, which cannot be accurately estimated from a histogram since; /// the x-information for all entries is not kept.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned value is; /// the (unbinned) one calculated at fill time. If a range has been set, however,; /// the value is calculated using the bins in range, as described above; THIS; /// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; /// the range. To ensure that the returned value (and all other statistics) is; /// always that of the binned data stored in the histogram, call TH1::ResetStats.; /// See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:93,error,error,93,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return errors after MINOs; /// not implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:93,error,errors,93,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:369,error,error,369,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return hash value for this object.; ///; /// Note: If this routine is overloaded in a derived class, this derived class; /// should also add; /// ~~~ {.cpp}; /// ROOT::CallRecursiveRemoveIfNeeded(*this); /// ~~~; /// Otherwise, when RecursiveRemove is called (by ~TObject or example) for this; /// type of object, the transversal of THashList and THashTable containers will; /// will have to be done without call Hash (and hence be linear rather than; /// logarithmic complexity). You will also see warnings like; /// ~~~; /// Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:613,Error,Error,613,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return information about the font families that are available on the; /// current display.; ///; /// An array of strings is returned holding a list of all the available font; /// families. The array is terminated with a NULL pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:138,avail,available,138,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral of bin contents in range [binx1,binx2] and its error.; ///; /// By default the integral is computed as the sum of bin contents in the range.; /// if option ""width"" is specified, the integral is the sum of; /// the bin contents multiplied by the bin width in x.; /// the error is computed using error propagation from the bin errors assuming that; /// all the bins are uncorrelated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:149,error,error,149,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral of bin contents in range [binx1,binx2],[biny1,biny2],[binz1,binz2]; /// for a 3-D histogram. Calculates also the integral error using error propagation; /// from the bin errors assuming that all the bins are uncorrelated.; /// By default the integral is computed as the sum of bin contents in the range.; /// if option ""width"" is specified, the integral is the sum of; /// the bin contents multiplied by the bin width in x, y and in z.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:224,error,error,224,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral of bin contents in range [firstxbin,lastxbin],[firstybin,lastybin]; /// for a 2-D histogram. Calculates also the integral error using error propagation; /// from the bin errors assuming that all the bins are uncorrelated.; /// By default the integral is computed as the sum of bin contents in the range.; /// if option ""width"" is specified, the integral is the sum of; /// the bin contents multiplied by the bin width in x and in y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:224,error,error,224,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return internet address of host to which the server socket is bound,; /// i.e. the local host. In case of error TInetAddress::IsValid() returns; /// kFALSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx:192,error,error,192,net/net/src/TServerSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TServerSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return internet address of local host to which the socket is bound.; /// In case of error TInetAddress::IsValid() returns kFALSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:170,error,error,170,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return linearly interpolated value of curve at xvalue. If distance; /// to nearest point is less than tolerance, return nearest point value; /// instead",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:188,toler,tolerance,188,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return list of user tables; /// Parameter wild specifies wildcard for table names.; /// It either contains exact table name to verify that table is exists or; /// wildcard with ""%"" (any number of symbols) and ""_"" (exactly one symbol).; /// Example of valid wildcards: ""%"", ""%name"",""___user__"".; /// If wild=="""", list of all available tables will be produced.; /// List contain just tables names in the TObjString.; /// List must be deleted by the user.; /// Example code of method usage:; ///; /// TList* lst = serv->GetTablesList();; /// TIter next(lst);; /// TObject* obj;; /// while (obj = next()); /// std::cout << ""Table: "" << obj->GetName() << std::endl;; /// delete lst;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:410,avail,available,410,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return local apparent sidereal time (LAST) in hour-angle, given a; /// longitude in degrees. Return value will always be between 0 and 24; /// (hours). Sidereal time is most accurately calculated from UT1. If fSec; /// and fNanoSec are in UTC (which they are by default), the optional; /// argument UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:488,error,error,488,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return local mean sidereal time (LMST) in hour-angle, given a longitude; /// in degrees. Return value will always be between 0 and 24 (hours).; /// Sidereal time is most accurately calculated from UT1. If fSec and; /// fNanoSec are in UTC (which they are by default), the optional argument; /// UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:484,error,error,484,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return lower error associated to bin number bin.; ///; /// The error will depend on the statistic option used will return; /// the binContent - lower interval value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:99,error,error,99,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return number of available instances in the formula.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:103,avail,available,103,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return number of available instances in the formulas.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:103,avail,available,103,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return numbers of sockets that are ready for reading or writing.; /// Wait a maximum of timeout milliseconds.; /// Return 0 if timed-out. Return < 0 in case of error.; /// If rdready and/or wrready are not 0, the lists of sockets with; /// something to read and/or write are also returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:246,error,error,246,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return option to compute profile errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:119,error,errors,119,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return option to compute profile2D errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:121,error,errors,121,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return parameter index given a name (return -1 for not existing parameters); /// non need to print an error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:188,error,error,188,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to socket for which an event is waiting.; /// Select can be interrupt by a call to Interrupt() (e.g. connected with a; /// Ctrl-C handler); a call to ResetInterrupt() before Select() is advisable; /// in such a case.; /// Return 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:343,error,error,343,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to socket for which an event is waiting.; /// Wait a maximum of timeout milliseconds.; /// If return is due to timeout it returns (TSocket *)-1.; /// Select() can be interrupt by a call to Interrupt() (e.g. connected with a; /// Ctrl-C handler); a call to ResetInterrupt() before Select() is advisable; /// in such a case.; /// Return 0 in case of any other error situation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:459,error,error,459,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return squared event weight of the current event. If this RooDataSet has no; /// weight errors set, this will be the same as `weight() * weight()`, like; /// expected for an unbinned dataset. When weight errors are set, it is assumed; /// that the RooDataSet represents a weighted binned dataset and; /// weightSquared() is the corresponding sum of weight squares for the bin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:174,error,errors,174,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return standard error of mean of this histogram along the X axis.; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// Also note, that although the definition of standard error doesn't include the; /// assumption of normality, many uses of this feature implicitly assume it.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned value is; /// the (unbinned) one calculated at fill time. If a range has been set, however,; /// the value is calculated using the bins in range, as described above; THIS; /// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; /// the range. To ensure that the returned value (and all other statistics) is; /// always that of the binned data stored in the histogram, call TH1::ResetStats.; /// See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:102,error,error,102,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return status from rootd server and message kind. Returns -1 in; /// case of error otherwise 8 (sizeof 2 words, status and kind).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:163,error,error,163,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return system error string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:100,error,error,100,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the amount of column available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:114,avail,available,114,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:108,error,errors,108,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,8,"['Error', 'error']","['ErrorType', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the chisquare of this graph with respect to f1.; /// The chisquare is computed as the sum of the quantity below at each point:; /// \f[; /// \frac{(y-f1(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f1'(x))^{2}}; /// \f]; /// where x and y are the graph point coordinates and f1'(x) is the derivative of function f1(x).; /// This method to approximate the uncertainty in y because of the errors in x, is called; /// ""effective variance"" method.; /// In case of a pure TGraph, the denominator is 1.; /// In case of a TGraphErrors or TGraphAsymmErrors the errors are taken; /// into account.; /// By default the range of the graph is used whatever function range.; /// Use option ""R"" to use the function range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:472,error,errors,472,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the addition contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddition.cxx:105,error,error,105,roofit/roofitcore/src/RooAddition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddition.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the formula contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:105,error,error,105,roofit/roofitcore/src/RooFormulaVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the error of the current weight.; /// @param[in] etype Switch between simple Poisson or sum-of-weights statistics",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:97,error,error,97,roofit/roofitcore/src/RooVectorDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); /// of this PDF for the given number of observed events.; ///; /// For successful operation, the PDF implementation must indicate that; /// it is extendable by overloading `canBeExtended()`, and must; /// implement the `expectedEvents()` function.; ///; /// \param[in] sumEntries The number of observed events.; /// \param[in] nset The normalization set when asking the pdf for the expected; /// number of events.; /// \param[in] observedSumW2 The number of observed events when weighting with; /// squared weights. If non-zero, the weight-squared error; /// correction is applied to the extended term.; /// \param[in] doOffset Offset the extended term by a counterterm where the; /// expected number of events equals the observed number of events.; /// This constant shift results in a term closer to zero that is; /// approximately chi-square distributed. It is useful to do this; /// also when summing multiple NLL terms to avoid numeric precision; /// loss that happens if you sum multiple terms of different orders; /// of magnitude.; ///; /// The weight-squared error correction works as follows:; /// adjust poisson such that; /// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; /// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; /// (the effective weight of the Poisson term),; /// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; /// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; /// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; /// Since here we compute the likelihood with the weight square, we need to multiply by t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:750,error,error,750,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the local port # to which the socket is bound.; /// In case of error return -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:156,error,error,156,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the log of the current value with given normalization; /// An error message is printed if the argument of the log is negative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:155,error,error,155,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of entries matching the selection.; /// Return -1 in case of errors.; ///; /// If the selection uses any arrays or containers, we return the number; /// of entries where at least one element match the selection.; /// GetEntries is implemented using the selector class TSelectorEntries,; /// which can be used directly (see code in TTreePlayer::GetEntries) for; /// additional option.; /// If SetEventList was used on the TTree or TChain, only that subset; /// of entries will be considered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:165,error,errors,165,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of events that is associated with the range [xlo,xhi]; /// This method is only fully functional for ranges not equal to the full; /// range if the object that inserted the normalization data provided; /// a link to an external object that can calculate the event count in; /// in sub ranges. An error will be printed if this function is used; /// on sub-ranges while that information is not available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:399,error,error,399,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of logged evaluation errors since the last clearing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:125,error,errors,125,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the selected error type (E,E1-5).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:106,error,error,106,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for function obj, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:147,avail,available,147,core/meta/src/TListOfFunctions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the set of overloads for this name, collecting all available ones.; /// Can construct and insert new TFunction-s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx:144,avail,available,144,core/meta/src/TListOfFunctions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfFunctions.cxx,4,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:138,error,error,138,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if contents of this RooHist is identical within given; /// relative tolerance to that of 'other'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:166,toler,tolerance,166,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if curve is identical to other curve allowing for given; /// absolute tolerance on each point compared point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:168,toler,tolerance,168,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:146,toler,tolerances,146,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,5,"['error', 'toler']","['errors', 'tolerance', 'tolerances']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return true when index out of bounds and print error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TOrdCollection.cxx:133,error,error,133,core/cont/src/TOrdCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TOrdCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return upper and lower bound of bin 'bin'. If the return value; /// is true an error occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx:165,error,error,165,roofit/roofitcore/src/RooBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return upper error associated to bin number bin.; ///; /// The error will depend on the statistic option used will return; /// the binContent - upper interval value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:99,error,error,99,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return value of error associated to bin number bin.; ///; /// if the sum of squares of weights has been defined (via Sumw2),; /// this function returns the sqrt(sum of w2).; /// otherwise it returns the sqrt(contents) for this bin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:102,error,error,102,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Return value, i.e. error on input variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:105,error,error,105,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns 1 if window system server supports extension given by the; /// argument, returns 0 in case extension is not supported and returns -1; /// in case of error (like server not initialized).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:243,error,error,243,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns 1 if window system server supports extension given by the; /// argument, returns 0 in case extension is not supported and returns -1; /// in case of error (like server not initialized).; /// Examples:; /// - ""Apple-WM"" - does server run on MacOS X;; /// - ""XINERAMA"" - does server support Xinerama.; /// See also the output of xdpyinfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:243,error,error,243,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns GC mask as a string - used in SavePrimitive().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:97,mask,mask,97,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a TList of TSystemFile objects representing the contents; /// of the directory. It's the responsibility of the user to delete; /// the list (the list owns the contained objects).; /// Returns 0 in case of errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx:299,error,errors,299,core/base/src/TSystemDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystemDirectory.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns all group info in the UserGroup_t structure. The only active; /// fields in the UserGroup_t structure for this call are:; /// - fGid and fGroup; /// If group = 0, returns current user's group. The returned structure; /// must be deleted by the user. In case of error 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:355,error,error,355,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns all group info in the UserGroup_t structure. The only active; /// fields in the UserGroup_t structure for this call are:; /// - fGid and fGroup; /// The returned structure must be deleted by the user. In case of; /// error 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:311,error,error,311,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns all user info in the UserGroup_t structure. If user = 0, returns; /// current user's id info. The returned structure must be deleted by the; /// user. In case of error 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:256,error,error,256,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns all user info in the UserGroup_t structure. The returned; /// structure must be deleted by the user. In case of error 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:206,error,error,206,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns an estimate of the error on \f$CL_{b}\f$ assuming a binomial; /// error on \f$CL_{b}\f$:; /// \f[; /// \sigma_{CL_{b}} = \sqrt{CL_{b} \left( 1 - CL_{b} \right) / n_{toys}}; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx:113,error,error,113,roofit/roostats/src/HybridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns an estimate of the error on \f$CL_{s+b}\f$ assuming a binomial; /// error on \f$CL_{s+b}\f$:; /// \f[; /// \sigma_{CL_{s+b}} = \sqrt{CL_{s+b} \left( 1 - CL_{s+b} \right) / n_{toys}}; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx:113,error,error,113,roofit/roostats/src/HybridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns an estimate of the error on \f$CL_{s}\f$ through combination of the; /// errors on \f$CL_{b}\f$ and \f$CL_{s+b}\f$:; /// \f[; /// \sigma_{CL_s} = CL_s; /// \sqrt{\left( \frac{\sigma_{CL_{s+b}}}{CL_{s+b}} \right)^2 + \left( \frac{\sigma_{CL_{b}}}{CL_{b}} \right)^2}; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:113,error,error,113,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns an estimate of the error on \f$CL_{s}\f$ through combination; /// of the errors on \f$CL_{b}\f$ and \f$CL_{s+b}\f$:; /// \f[; /// \sigma_{CL_s} = CL_s \sqrt{\left( \frac{\sigma_{CL_{s+b}}}{CL_{s+b}} \right)^2 + \left( \frac{\sigma_{CL_{b}}}{CL_{b}} \right)^2}; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx:113,error,error,113,roofit/roostats/src/HybridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns checksum of specified file in digest argument. Returns -1 in; /// case of error, 0 otherwise. This method preserves the modtime of the; /// file so it can be safely used in conjunction with methods that keep; /// track of the file's modtime. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:168,error,error,168,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns checksum of specified file. The returned TMD5 object must; /// be deleted by the user. Returns 0 in case the file does not exists; /// or in case of error. This function preserves the modtime of the file; /// so it can be safely used in conjunction with methods that keep track; /// of the file's modtime. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:243,error,error,243,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns checksum of the current content. The returned TMD5 object must; /// be deleted by the user. Returns 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx:207,error,error,207,core/base/src/TMacro.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns checksum stored in ASCII in specified file. Use to read files; /// created via WriteChecksum(). The returned TMD5 object must be deleted; /// by the user. Returns 0 in case the file cannot be opened or in case of; /// error. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:312,error,error,312,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu and memory used by this process into the ProcInfo_t structure.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:188,error,error,188,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns cpu load average and load info into the CpuInfo_t structure.; /// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; /// interval over which the CPU load will be measured, in ms (default 1000).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,error,error,182,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns error code. Meaning depends on context where it is called.; /// If no error condition returns 0 else a value < 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:94,error,error,94,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns error code. Meaning depends on context where it is called.; /// If no error condition returns 0 else a value < 0.; /// For example see TServerSocket ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:94,error,error,94,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,4,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns image mask pixmap (alpha channel).; /// The pixmap must deleted by user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:100,mask,mask,100,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of TSlaveInfo's. In case of error return 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:127,error,error,127,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of entries in tree or objects in file. Returns -1 in; /// case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:167,error,error,167,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of entries in tree or objects in file.; /// If not yet defined and 'openfile' is TRUE, get the number from the file; /// (may considerably slow down the application).; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:245,down,down,245,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,2,"['down', 'error']","['down', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns number of slaves active in parallel mode. Returns 0 in case; /// there are no active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:209,error,error,209,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns ram and swap memory usage info into the MemInfo_t structure.; /// Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:182,error,error,182,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:142,error,error,142,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Standard Deviation (Sigma).; /// The Sigma estimate is computed as; /// \f[; /// \sqrt{\frac{1}{N}(\sum(x_i-x_{mean})^2)}; /// \f]; /// For axis = 1,2 or 3 returns the Sigma value of the histogram along; /// X, Y or Z axis; /// For axis = 11, 12 or 13 returns the error of StdDev estimation along; /// X, Y or Z axis for Normal distribution; ///; /// Note that the mean value/sigma is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned standard; /// deviation is the (unbinned) one calculated at fill time. If a range has been; /// set, however, the standard deviation is calculated using the bins in range,; /// as described above; THIS IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use; /// TAxis::SetRange(0, 0) to unset the range. To ensure that the returned standard; /// deviation (and all other statistics) is always that of the binned data stored; /// in the histogram, call TH1::ResetStats. See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:362,error,error,362,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the X maximum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the X minimum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Y maximum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Y minimum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Z maximum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Z minimum with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:113,error,errors,113,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the available number of logical cores.; ///; /// - Checks if there is CFS bandwidth control in place (linux, via cgroups,; /// assuming standard paths); /// - Otherwise, returns the number of logical cores provided by; /// std::thread::hardware_concurrency(); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:98,avail,available,98,core/imt/inc/ROOT/RTaskArena.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the combined error along X at point i by computing the average; /// of the lower and upper variance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:107,error,error,107,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the combined error along Y at point i by computing the average; /// of the lower and upper variance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:107,error,error,107,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the combined error along Z at point i by computing the average; /// of the lower and upper variance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:107,error,error,107,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the components specified by the mask in ""gval"" for the; /// specified GC ""gc"" (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:126,mask,mask,126,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the current error handler function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:106,error,error,106,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the first derivative of the function at point x,; /// computed by Richardson's extrapolation method (use 2 derivative estimates; /// to compute a third, more accurate estimation); /// first, derivatives with steps h and h/2 are computed by central difference formulas; /// \f[; /// D(h) = \frac{f(x+h) - f(x-h)}{2h}; /// \f]; /// the final estimate; /// \f[; /// D = \frac{4D(h/2) - D(h)}{3}; /// \f]; /// ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition""; ///; /// if the argument params is null, the current function parameters are used,; /// otherwise the parameters in params are used.; ///; /// the argument eps may be specified to control the step size (precision).; /// the step size is taken as eps*(xmax-xmin).; /// the default value (0.001) should be good enough for the vast majority; /// of functions. Give a smaller value if your function has many changes; /// of the second derivative in the function range.; ///; /// Getting the error via TF1::DerivativeError:; /// (total error = roundoff error + interpolation error); /// the estimate of the roundoff error is taken as follows:; /// \f[; /// err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; /// \f]; /// where k is the double precision, ai are coefficients used in; /// central difference formulas; /// interpolation error is decreased by making the step size h smaller.; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1062,error,error,1062,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,6,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the high error along X at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:103,error,error,103,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the high error along Y at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:103,error,error,103,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the high error along Z at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:103,error,error,103,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; /// Normalization can be turned off.; /// compute also the error on the integral",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:234,error,error,234,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the inverse error function.; /// x must be <-1<x<1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:106,error,error,106,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the inverse of the complementary error function.; /// x must be 0<x<2; /// implement using the quantile of the normal distribution; /// instead of ErfInverse for better numerical precision for large x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:127,error,error,127,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the low error along X at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:102,error,error,102,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the low error along Y at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:102,error,error,102,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the low error along Z at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx:102,error,error,102,hist/hist/src/TGraph2DAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DAsymmErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the lower error on the efficiency in the given global bin; ///; /// The result depends on the current confidence level fConfLevel and the; /// chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; /// more details.; ///; /// Note: If the histograms are filled with weights, only bayesian methods and the; /// normal approximation are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:104,error,error,104,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the mangled name as defined by CINT, or 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:147,error,error,147,core/meta/src/TFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the prototype of a function as defined by CINT, or 0 in; /// case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:163,error,error,163,core/meta/src/TFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the root window the pointer is logically on and the pointer; /// coordinates relative to the root window's origin.; /// The pointer coordinates returned to win_x and win_y are relative to; /// the origin of the specified window. In this case, QueryPointer returns; /// the child that contains the pointer, if any, or else kNone to; /// childw. QueryPointer returns the current logical state of the; /// keyboard buttons and the modifier keys in mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:539,mask,mask,539,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the root window the pointer is logically on and the pointer; /// coordinates relative to the root window's origin.; ///; /// \param [in] id specifies the window; /// \param [in] rootw the root window that the pointer is in; /// \param [in] childw the child window that the pointer is located in, if any; /// \param [in] root_x, root_y the pointer coordinates relative to the root window's; /// origin; /// \param [in] win_x, win_y the pointer coordinates relative to the specified; /// window ""id""; /// \param [in] mask the current state of the modifier keys and pointer; /// buttons",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:609,mask,mask,609,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the second derivative of the function at point x,; /// computed by Richardson's extrapolation method (use 2 derivative estimates; /// to compute a third, more accurate estimation); /// first, derivatives with steps h and h/2 are computed by central difference formulas; /// \f[; /// D(h) = \frac{f(x+h) - 2f(x) + f(x-h)}{h^{2}}; /// \f]; /// the final estimate; /// \f[; /// D = \frac{4D(h/2) - D(h)}{3}; /// \f]; /// ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition""; ///; /// if the argument params is null, the current function parameters are used,; /// otherwise the parameters in params are used.; ///; /// the argument eps may be specified to control the step size (precision).; /// the step size is taken as eps*(xmax-xmin).; /// the default value (0.001) should be good enough for the vast majority; /// of functions. Give a smaller value if your function has many changes; /// of the second derivative in the function range.; ///; /// Getting the error via TF1::DerivativeError:; /// (total error = roundoff error + interpolation error); /// the estimate of the roundoff error is taken as follows:; /// \f[; /// err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; /// \f]; /// where k is the double precision, ai are coefficients used in; /// central difference formulas; /// interpolation error is decreased by making the step size h smaller.; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1074,error,error,1074,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,6,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the third derivative of the function at point x,; /// computed by Richardson's extrapolation method (use 2 derivative estimates; /// to compute a third, more accurate estimation); /// first, derivatives with steps h and h/2 are computed by central difference formulas; /// \f[; /// D(h) = \frac{f(x+2h) - 2f(x+h) + 2f(x-h) - f(x-2h)}{2h^{3}}; /// \f]; /// the final estimate; /// \f[; /// D = \frac{4D(h/2) - D(h)}{3}; /// \f]; /// ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition""; ///; /// if the argument params is null, the current function parameters are used,; /// otherwise the parameters in params are used.; ///; /// the argument eps may be specified to control the step size (precision).; /// the step size is taken as eps*(xmax-xmin).; /// the default value (0.001) should be good enough for the vast majority; /// of functions. Give a smaller value if your function has many changes; /// of the second derivative in the function range.; ///; /// Getting the error via TF1::DerivativeError:; /// (total error = roundoff error + interpolation error); /// the estimate of the roundoff error is taken as follows:; /// \f[; /// err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; /// \f]; /// where k is the double precision, ai are coefficients used in; /// central difference formulas; /// interpolation error is decreased by making the step size h smaller.; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1088,error,error,1088,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,6,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the upper error on the efficiency in the given global bin; ///; /// The result depends on the current confidence level fConfLevel and the; /// chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; /// more details.; ///; /// Note: If the histograms are filled with weights, only bayesian methods and the; /// normal approximation are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:104,error,error,104,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the value of error associated to bin number bin.; /// If the sum of squares of weights has been defined (via Sumw2),; /// this function returns the sqrt(sum of w2).; /// otherwise it returns the sqrt(contents) for this bin.; /// Bins are in range [1:nbins] and for bin < 0 in range [-9:-1] it returns errors for overflow bins.; /// See also TH2Poly::GetBinContent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:107,error,error,107,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if there are no errors in TChain::LoadTree()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:115,error,errors,115,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true, if the target error equals -1, as set in; /// Finalize() in case of no events in the cell",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx:114,error,error,114,tmva/tmva/src/PDEFoamTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamTarget.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback all SQL operations, done after start transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Rollback,Rollback,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback all operations, done after StartTransaction() call.; /// Database should return to initial state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:86,Rollback,Rollback,86,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback changes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:86,Rollback,Rollback,86,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['Rollback'],['Rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rollback transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:86,Rollback,Rollback,86,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['Rollback'],['Rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Rounds `x` downward, returning the largest integral value that is not greater than `x`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:97,down,downward,97,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,1,['down'],['downward']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Run an automatic scan until the desired accuracy is reached.; /// Start by default from the full interval (min,max) of the POI and then via bisection find the line crossing; /// the target line.; /// Optionally, a hint can be provided and the scan will be done closer to that value.; /// If by bisection the desired accuracy will not be reached, a fit to the points is performed.; /// \param[out] limit The limit.; /// \param[out] limitErr The error of the limit.; /// \param[in] absAccuracy Desired absolute accuracy.; /// \param[in] relAccuracy Desired relative accuracy.; /// \param[in] hint Hint to start from or nullptr for no hint.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:530,error,error,530,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Run the macros available in $ROOTSYS/tutorials/gui",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx:101,avail,available,101,test/stressGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Runs authentication on socket s.; /// Invoked when dynamic loading is needed.; /// Returns 1 on success, 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx:196,failure,failure,196,net/auth/src/TRootAuth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TRootAuth.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Same as above but does not print the error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:123,error,error,123,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Same constructor as above (for TFormula based function) but passing an option strings; /// available options; /// VEC - vectorize the formula expressions (not possible for lambda based expressions); /// NL - function is not stores in the global list of functions; /// GL - function will be always stored in the global list of functions ,; /// independently of the global setting of TF1::DefaultAddToGlobalList; ///////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:177,avail,available,177,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Samples a random number from the standard Normal (Gaussian) Distribution; /// with the given mean and sigma.; /// Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger; /// This is one of the fastest existing method for generating normal random variables.; /// It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous; /// version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia); /// implemented for example in GSL and available in the MathMore library.; ///; /// REFERENCE: - W. Hoermann and G. Derflinger (1990):; /// The ACR Method for generating normal random variables,; /// OR Spektrum 12 (1990), 181-185.; ///; /// Implementation taken from; /// UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:582,avail,available,582,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save Canvas contents in a file in one of various formats.; ///; /// \anchor TPadPrint; /// option can be:; ///; /// - `ps`: a Postscript file is produced (default). [See special cases](\ref TPadPrintPS).; /// - `Portrait`: Postscript file is produced (Portrait); /// - `Landscape`: Postscript file is produced (Landscape); /// - `eps`: an Encapsulated Postscript file is produced; /// - `Preview`: an [Encapsulated Postscript file with preview](\ref TPadPrintPreview) is produced.; /// - `pdf`: a PDF file is produced NOTE: TMathText will be converted to TLatex; q.e.d., symbols only available in TMathText will not render properly.; /// - `Title:`: The character string after `Title:` becomes a table; /// of content entry (for PDF files).; /// - `EmbedFonts`: a [PDF file with embedded fonts](\ref TPadPrintEmbedFonts) is generated.; /// - `svg`: a SVG file is produced; /// - `tex`: a TeX file is produced; /// - `Standalone`: a [standalone TeX file](\ref TPadPrintStandalone) is produced.; /// - `gif`: a GIF file is produced; /// - `gif+NN`: an animated GIF file is produced, where NN is delay in 10ms units NOTE: See other variants for looping animation in TASImage::WriteImage; /// - `xpm`: a XPM file is produced; /// - `png`: a PNG file is produced; /// - `jpg`: a JPEG file is produced. NOTE: JPEG's lossy compression will make all sharp edges fuzzy.; /// - `tiff`: a TIFF file is produced; /// - `cxx`: a C++ macro file is produced; /// - `xml`: a XML file; /// - `json`: a JSON file; /// - `root`: a ROOT binary file; ///; /// `filename` = 0 - filename is defined by `GetName` and its; /// extension is defined with the option; ///; /// When Postscript output is selected (`ps`, `eps`), the canvas is saved; /// to `filename.ps` or `filename.eps`. The aspect ratio of the canvas is preserved; /// on the Postscript file. When the ""ps"" option is selected, the Postscript; /// page will be landscape forma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:670,avail,available,670,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save input variable mask; ///; /// If the lx vector size is not the same as inputVars,; /// resize it and fill it with 1; /// NOTE: Always set all to 1; /// if (fRFLx.size() != m_inputVars->size()) {",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:106,mask,mask,106,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/dataset.list` file the name of the last updated; /// or created or modified dataset; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:231,error,error,231,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save into the `<datasetdir>/kDataSet_DataSetList` file the name of the updated; /// or created or modified dataset. For still existing datasets, fill the; /// modification date in seconds anf the checksum.; /// Returns 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:325,error,error,325,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save performance information from TPerfStats to file 'pf'.; /// If 'ref' is defined, do it for query 'ref'.; /// Return 0 on sucecss, -1 in case of any error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:238,error,error,238,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save the histogram as .csv, .tsv or .txt. In case of any other extension, fall; /// back to TObject::SaveAs, which saves as a .C macro (but with the file name; /// extension specified by the user); ///; /// The Under/Overflow bins are also exported (as first and last lines); /// The fist 2 columns are the lower and upper edges of the bins; /// Column 3 contains the bin contents; /// The last column contains the error in y. If errors are not present, the column; /// is left empty; ///; /// The result can be immediately imported into Excel, gnuplot, Python or whatever,; /// without the needing to install pyroot, etc.; ///; /// \param filename the name of the file where to store the histogram; /// \param option some tuning options; ///; /// The file extension defines the delimiter used:; /// - `.csv` : comma; /// - `.tsv` : tab; /// - `.txt` : space; ///; /// If option = ""title"" a title line is generated. If the y-axis has a title,; /// this title is displayed as column 3 name, otherwise, it shows ""BinContent""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:501,error,error,501,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save the pad content in a file.; ///; /// The file's format used to save the pad is determined by the `filename` extension:; ///; /// - if `filename` is empty, the file produced is `padname.ps`; /// - if `filename` starts with a dot, the padname is added in front; /// - if `filename` ends with `.ps`, a Postscript file is produced; /// - if `filename` ends with `.eps`, an Encapsulated Postscript file is produced; /// - if `filename` ends with `.pdf`, a PDF file is produced NOTE: TMathText will be converted to TLatex; q.e.d., symbols only available in TMathText will not render properly.; /// - if `filename` ends with `.svg`, a SVG file is produced; /// - if `filename` ends with `.tex`, a TeX file is produced; /// - if `filename` ends with `.gif`, a GIF file is produced; /// - if `filename` ends with `.gif+NN`, an animated GIF file is produced See comments in TASImage::WriteImage for meaning of NN and other .gif sufix variants; /// - if `filename` ends with `.xpm`, a XPM file is produced; /// - if `filename` ends with `.png`, a PNG file is produced; /// - if `filename` ends with `.bmp`, a BMP file is produced; /// - if `filename` ends with `.jpg` or `.jpeg` a JPEG file is produced NOTE: JPEG's lossy compression will make all sharp edges fuzzy.; /// - if `filename` ends with `.tiff`, a TIFF file is produced; /// - if `filename` ends with `.C`, `.cxx`,`.cpp` or `.cc`, a C++ macro file is produced; /// - if `filename` ends with `.root`, a Root file is produced; /// - if `filename` ends with `.xml`, a XML file is produced; /// - if `filename` ends with `.json`, a JSON file is produced; ///; /// \remarks; /// - The parameter `option` is not used.; /// - This method calls [TPad::Print(const char *filename, Option_t *option)](\ref TPadPrint); /// the value of `option` is determined by the `filename` extension.; /// - Postscript and PDF formats allow to have [several pictures in one file](\ref",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:629,avail,available,629,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Save this object in the file specified by filename.; ///; /// - if ""filename"" contains "".root"" the object is saved in filename as root; /// binary file.; ///; /// - if ""filename"" contains "".xml"" the object is saved in filename as a xml; /// ascii file.; ///; /// - if ""filename"" contains "".cc"" the object is saved in filename as C code; /// independant from ROOT. The code is generated via SavePrimitive().; /// Specific code should be implemented in each object to handle this; /// option. Like in TF1::SavePrimitive().; ///; /// - otherwise the object is written to filename as a CINT/C++ script. The; /// C++ code to rebuild this object is generated via SavePrimitive(). The; /// ""option"" parameter is passed to SavePrimitive. By default it is an empty; /// string. It can be used to specify the Draw option in the code generated; /// by SavePrimitive.; ///; /// The function is available via the object context menu.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:968,avail,available,968,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scale contents and errors of this histogram by c:; /// this = this * c; /// It does not modify the histogram's number of entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:105,error,errors,105,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scan again along the dynamic path for library maps. Entries for the loaded; /// shared libraries are unloaded first. This can be useful after reseting; /// the dynamic path through TSystem::SetDynamicPath(); /// In case of error -1 is returned, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:309,error,error,309,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scan through outputs and fix+log all nans and negative values.; /// \param[in,out] outputs Array to be scanned & fixed.; /// \param[in] begin Begin of event range. Only needed to print the correct event number; /// where the error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:311,error,error,311,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by 'uri' following the 'opts' directives; ///; /// The 'opts' string contains up to 4 directive fields separated by ':'; ///; /// 'selection' field :; /// A, allfiles: process all files; /// D, staged: process only staged (on Disk) files (if 'allfiles:' is not specified; /// the default is to process only files marked as non-staged); /// 'pre-action field':; /// O, open: open the files marked as staged when processing only files; /// marked as non-staged; /// T, touch: open and touch the files marked as staged when processing; /// only files marked as non-staged; /// I, nostagedcheck: do not check the actual stage status on selected files; ///; /// 'process' field:; /// N, noaction: do nothing on the selected files; /// P, fullproc: open the selected files and extract the meta information; /// L, locateonly: only locate the selected files; /// S, stageonly: issue a stage request for the selected files not yet staged; ///; /// 'auxiliary' field; /// V, verbose: notify the actions; ///; /// Returns 0 on success, -1 if any failure occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:1150,failure,failure,1150,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by `<uri>` and returns the number of missing files.; /// Returns -1 if any failure occurs, >= 0 on success.; /// For more details, see documentation of; /// ScanDataSet(TFileCollection *dataset, const char *option)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:189,failure,failure,189,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Scans the dataset indicated by `<uri>` and returns the number of missing files.; /// Returns -1 if any failure occurs.; /// For more details, see documentation of; /// ScanDataSet(TFileCollection *dataset, const char *option)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:189,failure,failure,189,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Search lines containing 'txt', starting from line 'from'. Return; /// their blanck-separated list into 'res'.; /// Return the number of lines found, or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx:252,error,error,252,proof/proof/src/TProofLog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLog.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send 'len' bytes at 'buf'; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock; /// -3 if the operation would block; /// -4 if connection broken; /// -errno if any another failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:301,failure,failure,301,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send 'len' bytes at 'buf'; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock; /// -errno if any another failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:235,failure,failure,235,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a TMessage object. Returns the number of bytes in the TMessage; /// that were sent and -1 in case of error. In case the TMessage::What; /// has been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.; /// Returns -4 in case of kNoBlock and errno == EWOULDBLOCK.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:192,error,error,192,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a TMessage object. Returns the number of bytes in the TMessage; /// that were sent and -1 in case of error. In case the TMessage::What; /// has been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.; /// Returns -4 in case of kNoBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).; /// support for streaming TStreamerInfo added by Rene Brun May 2008; /// support for streaming TProcessID added by Rene Brun June 2008",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:192,error,error,192,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a character string buffer. Use kind to set the TMessage ""what"" field.; /// Returns the number of bytes in the string str that were sent and -1 in; /// case of error. In case the kind has been or'ed with kMESS_ACK, the call; /// will only return after having received an acknowledgement, making the; /// sending process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:250,error,error,250,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:264,error,error,264,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,"['down', 'error', 'mask']","['downloaded', 'error', 'mask']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to the server. Return 0 on success, -1 in case of error.; /// If defined, the full path of the remote path will be rfile.; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx:148,error,error,148,net/net/src/TApplicationRemote.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx,3,"['down', 'error', 'mask']","['downloaded', 'error', 'mask']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:437,error,error,437,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a raw buffer of specified length. Returns the number of bytes; /// send and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:181,error,error,181,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a raw buffer of specified length. Returns the number of bytes; /// sent or -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:180,error,error,180,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a raw buffer of specified length. Using option kOob one can send; /// OOB data. Returns the number of bytes sent or -1 in case of error.; /// Returns -4 in case of kNoBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:221,error,error,221,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a single message opcode. Use kind (opcode) to set the; /// TMessage ""what"" field. Returns the number of bytes that were sent; /// (always sizeof(Int_t)) and -1 in case of error. In case the kind has; /// been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:262,error,error,262,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send a status and a single message opcode. Use kind (opcode) to set the; /// TMessage ""what"" field. Returns the number of bytes that were sent; /// (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has; /// been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:277,error,error,277,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send an object. Returns the number of bytes sent and -1 in case of error.; /// In case the ""kind"" has been or'ed with kMESS_ACK, the call will only; /// return after having received an acknowledgement, making the sending; /// synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:153,error,error,153,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send binary data via given websocket id. Returns:; ///; /// * -1 - in case of error; /// * 0 - when operation was executed immediately; /// * 1 - when send operation will be performed in different thread",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx:164,error,error,164,net/http/src/THttpWSHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send binary data with text header via given websocket id. Returns:; ///; /// * -1 - in case of error,; /// * 0 - when operation was executed immediately,; /// * 1 - when send operation will be performed in different thread,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx:181,error,error,181,net/http/src/THttpWSHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send buffer of specified length over the parallel sockets.; /// Returns len in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx:199,error,error,199,net/rpdutils/src/netpar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster.; /// If logtomacro is TRUE the text result of the action is saved in the fMacroLog; /// TMacro, accessible via TMacro::GetMacroLog();; /// Returns -1 in case of error, >=0 in case of succes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:485,error,error,485,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command, however commands; /// like "".x file.C"" or "".L file.C"" will not cause the file.C to be; /// transfered to the PROOF cluster. In that case use TProof::Exec().; /// Returns the status send by the remote server as part of the; /// kPROOF_LOGDONE message. Typically this is the return code of the; /// command on the remote side. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:548,error,error,548,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster. Returns -1 in case of error, >=0 in case of; /// succes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:334,error,error,334,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// If plusMaster is kTRUE then exeucte on slaves and master too.; /// Command can be any legal command line command. Commands like; /// "".x file.C"" or "".L file.C"" will cause the file file.C to be send; /// to the PROOF cluster. Returns -1 in case of error, >=0 in case of; /// succes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:401,error,error,401,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send error code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:91,error,error,91,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send interrupt OOB byte to master or slave servers.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:174,error,error,174,proof/proof/src/TSlave.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send interrupt OOB byte to server.; /// Returns 0 if ok, -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx:157,error,error,157,net/net/src/TApplicationRemote.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:150,error,error,150,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send object to master or slave servers. Returns number of slaves object; /// was sent to, -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:190,error,error,190,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send object to server.; /// Return 0 on success, -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx:149,error,error,149,net/net/src/TApplicationRemote.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationRemote.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send print command to master server. Returns number of slaves message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:196,error,error,196,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send string via given websocket id. Returns:; ///; /// * -1 - in case of error,; /// * 0 - when operation was executed immediately,; /// * 1 - when send operation will be performed in different thread,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx:159,error,error,159,net/http/src/THttpWSHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpWSHandler.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Send to all active slaves servers the current slave group size; /// and their unique id. Returns number of active slaves.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:235,error,error,235,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:142,echo,echo,142,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,"['Echo', 'echo', 'error']","['Echo', 'echo', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sends an object to master and workers and expect them to send back a; /// message with the output of its TObject::Print(). Returns -1 on error, the; /// number of workers that received the objects on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:223,error,error,223,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Current pad.; ///; /// When a canvas/pad is divided via TPad::Divide, one can directly; /// set the current path to one of the subdivisions.; /// See TPad::Divide for the convention to number sub-pads.; ///; /// Returns the new current pad, or 0 in case of failure.; ///; /// For example:; /// ~~~ {.cpp}; /// c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; /// ~~~; /// To set the current pad to the bottom right pad, do; /// ~~~ {.cpp}; /// c1.cd(6);; /// ~~~; /// Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; /// to c1 itself.; ///; /// Note2: after a statement like c1.cd(6), the global variable gPad; /// points to the current pad. One can use gPad to set attributes; /// of the current pad.; ///; /// Note3: One can get a pointer to one of the sub-pads of pad with:; /// TPad *subpad = (TPad*)pad->GetPad(subpadnumber);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:347,failure,failure,347,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Fill Color and Alpha of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:114,error,error,114,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Fill Color of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,error,error,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Fill Style of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,error,error,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Line Color and Alpha of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:114,error,error,114,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Line Color of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,error,error,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Line Style of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,error,error,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Line Width of error e (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,error,error,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Profile histogram structure and options.; ///; /// \param[in] ymin minimum value allowed for y; /// \param[in] ymax maximum value allowed for y; /// if (ymin = ymax = 0) there are no limits on the allowed y values (ymin = -inf, ymax = +inf); /// \param[in] option this is the option for the computation of the y error of the profile ( TProfile::GetBinError ); /// possible values for the options are:; /// - ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); /// where S(Y) is the standard deviation (RMS) of the Y data in the bin; /// and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); /// (i.e the errors are the standard error on the bin content of the profile); /// - 's' Errors are the standard deviation of Y, S(Y); /// - 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); /// The only difference is only when the standard deviation in Y is zero.; /// In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; /// 1./SQRT(12*N).; /// This approximation assumes that the Y values are integer (e.g. ADC counts); /// and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; /// takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); /// - 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j; /// W is obtained as from TProfile::GetBinEntries(ibin); /// This errors corresponds to the standard deviation of weighted mean where each; /// measurement Y is uncorrelated and has an error sigma, which is expressed in the; /// weight used to fill the Profile: w = 1/sigma^2; /// The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ); ///; /// In the case of Profile filled weights and with TProfile::Sumw2() called,; /// STD(Y) is the standard deviation of the weighted sample Y and N is in this cas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:402,error,error,402,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,8,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Profile2D histogram structure and options.; ///; /// - zmin: minimum value allowed for z; /// - zmax: maximum value allowed for z; /// if (zmin = zmax = 0) there are no limits on the allowed z values (zmin = -inf, zmax = +inf); ///; /// - option: this is the option for the computation of the t error of the profile ( TProfile2D::GetBinError ); /// possible values for the options are documented in TProfile2D::SetErrorOption; ///; /// See TProfile::BuildOptions for a detailed description",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:385,error,error,385,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Profile3D histogram structure and options.; ///; /// - tmin: minimum value allowed for t; /// - tmax: maximum value allowed for t; /// if (tmin = tmax = 0) there are no limits on the allowed t values (tmin = -inf, tmax = +inf); ///; /// - option: this is the option for the computation of the t error of the profile ( TProfile3D::GetBinError ); /// possible values for the options are documented in TProfile3D::SetErrorOption; ///; /// see also TProfile::BuildOptions for a detailed description",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:385,error,error,385,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Spectrum; ///; /// \param[in] nl number of levels; /// \param[in] fmin MIN function value; /// \param[in] fmax MAX function value; /// \param[in] ic initial color index (for 1st level); /// \param[in] idc color index increment; ///; /// \param[out] irep reply (0 O.K., -1 error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:362,error,error,362,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set TAttFill parameters of error e by copying from another TAttFill (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:113,error,error,113,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set TAttLine parameters of error e by copying from another TAttLine (-1 = Global and x errors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:113,error,error,113,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set Width and Height of canvas to ww and wh respectively. If ww and/or wh; /// are greater than the current canvas window a scroll bar is automatically; /// generated. Use this function to zoom in a canvas and navigate via; /// the scroll bars. The Width and Height in this method are different from those; /// given in the TCanvas constructors where these two dimension include the size; /// of the window decoration whereas they do not in this method.; /// When both ww==0 and wh==0, auto resize mode will be enabled again and; /// canvas drawing area will automatically fit available window size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:663,avail,available,663,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set a bin content.; /// \param[in] row Coordinates of the bin to be set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErrLo Low error of the bin content.; /// \param[in] wgtErrHi High error of the bin content.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:225,error,error,225,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set a bin content.; /// \param[in] row Coordinates to compute the bin from.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Optional error of the bin content.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:231,error,error,231,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:112,error,error,112,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set an alias for this session. If reconnection is supported, the alias; /// will be communicated to the remote coordinator so that it can be recovered; /// when reconnecting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:227,recover,recovered,227,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['recover'],['recovered']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set an image printing resolution in Dots Per Inch units.; ///; /// \param[in] name - the name of jpeg file.; /// \param[in] set - dpi resolution.; ///; /// Returns kFALSE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:268,error,error,268,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set batch mode for ROOT; /// If the argument evaluates to `true`, the session does not use interactive graphics.; /// If web graphics runs in server mode, the web widgets are still available via URL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:267,avail,available,267,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set bin by bin weights for template number `<parm>` (the parameter numbering; /// follows that of the input template vector).; /// Weights can be ""unset"" by passing a null pointer.; /// Consistency of the weights histogram with the data histogram is checked at; /// this point, and an error in case of problems.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:371,error,error,371,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] binNumber Optional bin number to set. If empty, currently active bin is set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Error of the new bin content. If the weight need not have an error, use 0. or a negative number.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:306,Error,Error,306,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Optional error of the bin content.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:222,error,error,222,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set branch status to Process or DoNotProcess; ///; /// \param[in] bname is the name of a branch. if bname=""*"", apply to all branches.; /// \param[in] status = 1 branch will be processed,; /// = 0 branch will not be processed; /// \param[out] found; ///; /// See IMPORTANT REMARKS in TTree::SetBranchStatus and TChain::SetBranchAddress; ///; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:548,error,error,548,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set byte count at position cntpos in the buffer. Generate warning if; /// count larger than kMaxMapCount. The count is excluded its own size.; /// \note If underflow or overflow, an Error ir raised (stricter checks in Debug mode)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:268,Error,Error,268,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set clipping rectangles in graphics context. X, Y specify the origin; /// of the rectangles. Recs specifies an array of rectangles that define; /// the clipping mask and n is the number of rectangles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:247,mask,mask,247,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set console echo mode:; ///; /// - mode = kTRUE - echo input symbols; /// - mode = kFALSE - noecho input symbols",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:98,echo,echo,98,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,2,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set console mode:; ///; /// mode = kTRUE - echo input symbols; /// mode = kFALSE - noecho input symbols",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:129,echo,echo,129,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set content to error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:101,error,error,101,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set correspondence between function and color levels; ///; /// \param[in] nl number of levels; /// \param[in] fl function levels; /// \param[in] icl colors for levels; ///; /// \param[out] irep return code (0 OK, -1 error).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:302,error,error,302,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set current canvas & pad. Returns the new current pad,; /// or 0 in case of failure.; /// See TPad::cd() for an explanation of the parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:162,failure,failure,162,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set current entry.; ///; /// Returns -2 if entry does not exist (just as TChain::LoadTree()).; /// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; ///; /// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new tree.; ///; /// \note This function is overloaded in TChain.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:202,error,error,202,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set default level down to which visualization is performed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:104,down,down,104,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set drawing mode :; /// - option=0 (default) all nodes drawn down to vislevel; /// - option=1 leaves and nodes at vislevel drawn; /// - option=2 path is drawn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx:147,down,down,147,geom/geompainter/src/TGeoPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoPainter.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e ey values for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e ey values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e eyH value for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e eyH values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e eyL value for point `i`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error e eyL values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:90,error,error,90,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error for parameter number ipar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:90,error,error,90,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error of bin with index ""bin"" to ""e"", enable errors if needed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:90,error,error,90,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set error option.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:90,error,error,90,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set errors for all active parameters; /// when calling this function, the array errors must have at least fNpar values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:90,error,errors,90,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set evaluation error logging mode. Options are; ///; /// PrintErrors - Print each error through RooMsgService() as it occurs; /// CollectErrors - Accumulate errors, but do not print them. A subsequent call; /// to printEvalErrors() will print a summary; /// CountErrors - Accumulate error count, but do not print them.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:101,error,error,101,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set ex and ey values for point pointed by the mouse.; ///; /// Up to 3 y error dimensions possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:159,error,error,159,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set foreground color in graphics context (shortcut for ChangeGC with; /// only foreground mask set).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:176,mask,mask,176,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set global pointers to error handler functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:109,error,error,109,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set index value of a RooAbsCategoryLValue stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:177,error,error,177,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set interest mask for socket sock to interest. If the socket is not; /// in the active list move it or add it there.; /// If interest=kRead then we want to monitor the socket for read readiness,; /// if interest=kWrite then we monitor the socket for write readiness,; /// if interest=kRead|kWrite then we monitor both read and write readiness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:99,mask,mask,99,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set interest mask to 'mask'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx:99,mask,mask,99,core/base/src/TSysEvtHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set light source; ///; /// \param[in] nl source number: 1 off all light sources, 0 set diffused light; /// \param[in] yl intensity of the light source; /// \param[in] xscr, yscr, zscr direction of the light (in respect of the screen); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:366,error,error,366,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum error and rebuild tracks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:98,error,error,98,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:467,error,error,467,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set on error handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:93,error,error,93,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set option to compute profile errors.; ///; /// The computation of the bin errors is based on the parameter option:; ///; /// -' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Y),; /// i.e. the standard error of the bin contents.; /// Note that if TProfile::Approximate() is called, an approximation is used when; /// the spread in Y is 0 and the number of bin entries is > 0; /// -'s' The bin errors are the standard deviations of the Y bin values; /// Note that if TProfile::Approximate() is called, an approximation is used when; /// the spread in Y is 0 and the number of bin entries is > 0; /// -'i' Errors are as in default case (standard errors of the bin contents); /// The only difference is for the case when the spread in Y is zero.; /// In this case for N > 0 the error is 1./SQRT(12.*N); /// -'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; /// W is the sum in the bin of the weights of the profile.; /// This option is for combining measurements y +/- dy,; /// and the profile is filled with values y and weights w = 1/dy**2; ///; /// See TProfile::BuildOptions for a detailed explanation of all options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:116,error,errors,116,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,10,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set option to compute profile2D errors.; ///; /// The computation of the bin errors is based on the parameter option:; /// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Z),; /// i.e. the standard error of the bin contents.; /// Note that if TProfile::Approximate() is called, an approximation is used when; /// the spread in Z is 0 and the number of bin entries is > 0; /// - 's' The bin errors are the standard deviations of the Z bin values; /// Note that if TProfile::Approximate() is called, an approximation is used when; /// the spread in Z is 0 and the number of bin entries is > 0; /// - 'i' Errors are as in default case (standard errors of the bin contents); /// The only difference is for the case when the spread in Z is zero.; /// In this case for N > 0 the error is 1./SQRT(12.*N); /// - 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; /// W is the sum in the bin of the weights of the profile.; /// This option is for combining measurements z +/- dz,; /// and the profile is filled with values y and weights z = 1/dz**2; ///; /// See TProfile::BuildOptions for a detailed explanation of all options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:118,error,errors,118,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,10,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set option to compute profile3D errors.; ///; /// The computation of the bin errors is based on the parameter option:; /// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (T),; /// i.e. the standard error of the bin contents.; /// Note that if TProfile3D::Approximate() is called, an approximation is used when; /// the spread in T is 0 and the number of bin entries is > 0; /// - 's' The bin errors are the standard deviations of the T bin values; /// Note that if TProfile3D::Approximate() is called, an approximation is used when; /// the spread in T is 0 and the number of bin entries is > 0; /// - 'i' Errors are as in default case (standard errors of the bin contents); /// The only difference is for the case when the spread in T is zero.; /// In this case for N > 0 the error is 1./SQRT(12.*N); /// - 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; /// W is the sum in the bin of the weights of the profile.; /// This option is for combining measurements t +/- dt,; /// and the profile is filled with values t and weights w = 1/dt**2; ///; /// See TProfile::BuildOptions for explanation of all options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:118,error,errors,118,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,10,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set option(s) to draw axis with labels.; ///; /// option might have the following values:; ///; /// - ""a"" sort by alphabetic order; /// - "">"" sort by decreasing values; /// - ""<"" sort by increasing values; /// - ""h"" draw labels horizontal; /// - ""v"" draw labels vertical; /// - ""u"" draw labels up (end of label right adjusted); /// - ""d"" draw labels down (start of label left adjusted)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:436,down,down,436,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,3,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set option(s) to draw axis with labels; /// option can be:; /// - ""a"" sort by alphabetic order; /// - "">"" sort by decreasing values; /// - ""<"" sort by increasing values; /// - ""h"" draw labels horizontal; /// - ""v"" draw labels vertical; /// - ""u"" draw labels up (end of label right adjusted); /// - ""d"" draw labels down (start of label left adjusted)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:400,down,down,400,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set our state to our `n`th defined type.; /// \return true in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategoryLValue.cxx:159,error,error,159,roofit/roofitcore/src/RooAbsCategoryLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategoryLValue.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set parser stops in case of error:; /// - \b stop = true, stops on error; /// - \b stop = false, continue parsing on error...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:114,error,error,114,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set plane mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:96,mask,mask,96,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set state name of a RooAbsCategoryLValue stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:176,error,error,176,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set static flag controlling whether exception should be thrown upon an; /// error during regular expression compilation by the PCRE engine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:162,error,error,162,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set string value of a RooStringVar stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:170,error,error,170,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set surface property coefficients; ///; /// \param[in] qqa diffusion coefficient for diffused light [0.,1.]; /// \param[in] qqd diffusion coefficient for direct light [0.,1.]; /// \param[in] qqs diffusion coefficient for reflected light [0.,1.]; /// \param[in] nnqs power coefficient for reflected light (.GE.1); ///; /// Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:517,error,error,517,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the THtml object owning this object; if it's already set to; /// a different THtml object than issue an error message and signal to; /// the currently set object that we are not belonging to it anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:194,error,error,194,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the a files modification and access times. If actime = 0 it will be; /// set to the modtime. Returns 0 on success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:222,error,error,222,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the acceptable relative error for when sum of square; /// residuals is considered minimized. For a full account, refer to; /// the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:114,error,error,114,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the bin Error.; /// Re-implementation for TH2Poly given the different bin indexing in the; /// stored squared error array.; /// See also notes in TH1::SetBinError; ///; /// Bins are in range [1:nbins] and for bin < 0 in the range [-9:-1] the errors is set for the overflow bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:98,Error,Error,98,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the bin Error; /// Note that this resets the bin eror option to be of Normal Type and for the; /// non-empty bin the bin error is set by default to the square root of their content.; /// Note that in case the user sets after calling SetBinError explicitly a new bin content (e.g. using SetBinContent); /// he needs then to provide also the corresponding bin error (using SetBinError) since the bin error; /// will not be recalculated after setting the content and a default error = 0 will be used for those bins.; ///; /// See convention for numbering bins in TH1::GetBin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:98,Error,Error,98,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,5,"['Error', 'error']","['Error', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the cancellation response type of the calling thread to; /// deferred, i.e. cancel only at next cancellation point.; /// Returns 0 on success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:246,error,error,246,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the drawing mode.; /// mode : drawing mode; /// mode=1 copy; /// mode=2 xor; /// mode=3 invert; /// mode=4 set the suitable mode for cursor echo according to; /// the vendor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:230,echo,echo,230,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the drawing mode.; ///; /// \param [in] mode : drawing mode; /// - mode=1 copy; /// - mode=2 xor; /// - mode=3 invert; /// - mode=4 set the suitable mode for cursor echo according to; /// the vendor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:255,echo,echo,255,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the fgApproximate flag.; ///; /// When the flag is true, the function GetBinError; /// will approximate the bin error with the average profile error on all bins; /// in the following situation only; ///; /// - the number of bins in the profile3D is less than 10404 (eg 100x100x100); /// - the bin number of entries is small ( <5); /// - the estimated bin error is extremely small compared to the bin content; /// (see TProfile3D::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:202,error,error,202,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the file permission bits. Returns -1 in case or error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:138,error,error,138,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the input entry list (processing the entries of the chain will then be; /// limited to the entries in the list). This function creates a special kind; /// of entry list (TEntryListFromFile object) that loads lists, corresponding; /// to the chain elements, one by one, so that only one list is in memory at a time.; ///; /// If there is an error opening one of the files, this file is skipped and the; /// next file is loaded; ///; /// File naming convention:; ///; /// - by default, filename_elist.root is used, where filename is the; /// name of the chain element; /// - xxx$xxx.root - $ sign is replaced by the name of the chain element; ///; /// If the list name is not specified (by passing filename_elist.root/listname to; /// the TChain::SetEntryList() function, the first object of class TEntryList; /// in the file is taken.; ///; /// It is assumed, that there are as many list files, as there are elements in; /// the chain and they are in the same order",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:430,error,error,430,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the level for MINUIT error analysis to the given; /// value. This function overrides the default value; /// that is taken in the RooMinimizer constructor from; /// the defaultErrorLevel() method of the input function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:111,error,error,111,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the otuput file; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,error,error,138,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the output file; /// Return 0 on success, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx:138,error,error,138,proof/proofbench/src/TProofBench.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TProofBench.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the parse code:; /// - \b 0: Parse successful; /// - \b -1: Attempt to parse a second file while a parse is in progress; /// - \b -2: Parse context is not created; /// - \b -3: An error occurred while parsing file; /// - \b -4: A fatal error occurred while parsing file; /// - \b -5: Document is not well-formed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:270,error,error,270,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the process file creation mode mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:121,mask,mask,121,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the result from the fit; /// parameter values, errors, chi2, etc...; /// Optionally a pointer to a vector (with size fNpar) of the parameter indices in the FitResult can be passed; /// This is useful in the case of a combined fit with different functions, and the FitResult contains the global result; /// By default it is assume that indpar = {0,1,2,....,fNpar-1}.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:137,error,errors,137,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:320,failure,failure,320,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the size (in pixels) of the small lines drawn at the; /// end of the error bars (TH1 or TGraphErrors).; ///; /// The default value is 2 pixels.; /// Set np=0 to remove these lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:159,error,error,159,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:831,error,error,831,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the sum errors mode and recalculate summed errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:98,error,errors,98,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the system error string. This string will be used by GetError().; /// To be used in case one does not want or can use the system error; /// string (e.g. because error is generated by a third party POSIX like; /// library that does not use standard errno).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:101,error,error,101,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set the viewing range for the axis using bin numbers.; ///; /// \param first First bin of the range.; /// \param last Last bin of the range.; /// To set a range using the axis coordinates, use TAxis::SetRangeUser.; ///; /// If `first == last == 0` or if `first > last` or if the range specified does; /// not intersect at all with the maximum available range `[0, fNbins + 1]`,; /// then the viewing range is reset by removing the bit TAxis::kAxisRange. In this; /// case, the functions TAxis::GetFirst() and TAxis::GetLast() will return 1; /// and fNbins.; ///; /// If the range specified partially intersects with `[0, fNbins + 1]`, then the; /// intersection range is accepted. For instance, if `first == -2` and `last == fNbins`,; /// the accepted range will be `[0, fNbins]` (`fFirst = 0` and `fLast = fNbins`).; ///; /// \note For historical reasons, SetRange(0,0) resets the range even though bin 0 is; /// technically reserved for the underflow; in order to set the range of the axis; /// so that it only includes the underflow, use `SetRange(-1,0)`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:429,avail,available,429,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set value by specifying the index code of the desired state.; /// If printError is set, a message will be printed if; /// the specified index does not represent a valid state.; /// \return bool signalling if an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:297,error,error,297,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set value of a RooAbsRealLValue stored in set with given name to newVal; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:166,error,error,166,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set view direction (in spherical coordinates).; ///; /// Input; /// - PHI - longitude; /// - THETA - latitude (angle between +Z and view direction); /// - PSI - rotation in screen plane; ///; /// Output:; /// - IREP - reply (-1 if error in min-max); ///; /// Errors: error in min-max scope",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:317,error,error,317,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,3,"['Error', 'error']","['Errors', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Set whether ""dot"" (a GraphViz utility) is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:128,avail,available,128,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets TMethodCall to function inside Cling environment.; /// TFormula uses it to execute function.; /// After call, TFormula should be ready to evaluate formula.; /// Returns false on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:269,failure,failure,269,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets a new buffer in an existing TBuffer object. If newsiz=0 then the; /// new buffer is expected to have the same size as the previous buffer.; /// The current buffer position is reset to the start of the buffer.; /// If the TBuffer owned the previous buffer, it will be deleted prior; /// to accepting the new buffer. By default the new buffer will be; /// adopted unless adopt is false.; ///; /// If the new buffer is _not_ adopted and no memory allocation routine; /// is provided, a Fatal error will be issued if the Buffer attempts to; /// expand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx:580,error,error,580,core/base/src/TBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets clipping rectangles in graphics context. [x,y] specify the origin; /// of the rectangles. ""recs"" specifies an array of rectangles that define; /// the clipping mask and ""n"" is the number of rectangles.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:251,mask,mask,251,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets for parameter number ipar initial parameter value,; /// name parname, initial error verr and limits vlow and vhigh; /// - If vlow = vhigh but not equal to zero, parameter will be fixed.; /// - If vlow = vhigh = 0, parameter is released and its limits are discarded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:169,error,error,169,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets pointer to data array provided by user.; /// Necessary if SetFCN is not called.; ///; /// - numpoints: number of experimental points; /// - vecsize: size of data point vector + 2; /// (for N-dimensional fit vecsize=N+2); /// - exdata: data array with following format; ///; /// - exdata[0] = ExpValue_0 - experimental data value number 0; /// - exdata[1] = ExpSigma_0 - error of value number 0; /// - exdata[2] = X_0[0]; /// - exdata[3] = X_0[1]; ///; /// - exdata[vecsize-1] = X_0[vecsize-3]; /// - exdata[vecsize] = ExpValue_1; /// - exdata[vecsize+1] = ExpSigma_1; /// - exdata[vecsize+2] = X_1[0]; ///; /// - exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1); ///; /// - exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:461,error,error,461,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the buffer size.; ///; /// If the current prefetch list is too large to fit in; /// the new buffer some or all of the prefetch blocks are dropped. The; /// requested buffersize must be greater than zero.; /// It will be automatically clamped to minimum 100000 (if <= 10000) and maximum INT_MAX; /// Return values:; /// - 0 if the prefetch block lists remain unchanged; /// - 1 if some or all blocks have been removed from the prefetch list; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:544,error,error,544,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the button with id to be on/down, and if this is an; /// exclusive group, all other button in the group to be off/up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:119,down,down,119,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the derivative of the total error wrt the neuron weight.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx:119,error,error,119,math/mlp/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the derivative of the total error wrt the synapse weight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx:119,error,error,119,math/mlp/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TSynapse.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the drawing mode.; ///; /// \param [in] mode drawing mode.; /// - mode = 1 copy; /// - mode = 2 xor; /// - mode = 3 invert; /// - mode = 4 set the suitable mode for cursor echo according to the vendor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:263,echo,echo,263,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['echo'],['echo']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the error status.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:95,error,error,95,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the foreground color for the specified GC (shortcut for ChangeGC; /// with only foreground mask set).; ///; /// \param [in] gc specifies the GC; /// \param [in] foreground the foreground you want to set; ///; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:182,mask,mask,182,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the learning method.; /// Available methods are: kStochastic, kBatch,; /// kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS.; /// (look at the constructor for the complete description; /// of learning methods and parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:117,Avail,Available,117,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Setup of authetication in PROOF run after successful opening; /// of the socket. Provided for backward compatibility.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:236,failure,failure,236,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Setup of authetication related stuff in PROOF run after a; /// successful authentication.; /// Return 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:208,failure,failure,208,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Setup select masks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx:99,mask,masks,99,net/rpdutils/src/netpar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/netpar.cxx,1,['mask'],['masks']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Show available packages; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:91,avail,available,91,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Show available sessions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:91,avail,available,91,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Show available workers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:91,avail,available,91,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Shut down ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:91,down,down,91,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Signal emitted when keyboard key pressed; ///; /// entry - selected item; /// keysym - defined in ""KeySymbols.h""; /// mask - modifier key mask, defined in ""GuiTypes.h""; ///; /// const Mask_t kKeyShiftMask = BIT(0);; /// const Mask_t kKeyLockMask = BIT(1);; /// const Mask_t kKeyControlMask = BIT(2);; /// const Mask_t kKeyMod1Mask = BIT(3); // typically the Alt key; /// const Mask_t kButton1Mask = BIT(8);; /// const Mask_t kButton2Mask = BIT(9);; /// const Mask_t kButton3Mask = BIT(10);; /// const Mask_t kButton4Mask = BIT(11);; /// const Mask_t kButton5Mask = BIT(12);; /// const Mask_t kAnyModifier = BIT(15);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx:204,mask,mask,204,gui/gui/src/TGListTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListTree.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Signal emitted when keyboard key pressed; ///; /// frame - activated frame; /// keysym - defined in ""KeySymbols.h""; /// mask - modifier key mask, defined in ""GuiTypes.h""; ///; /// const Mask_t kKeyShiftMask = BIT(0);; /// const Mask_t kKeyLockMask = BIT(1);; /// const Mask_t kKeyControlMask = BIT(2);; /// const Mask_t kKeyMod1Mask = BIT(3); // typically the Alt key; /// const Mask_t kButton1Mask = BIT(8);; /// const Mask_t kButton2Mask = BIT(9);; /// const Mask_t kButton3Mask = BIT(10);; /// const Mask_t kButton4Mask = BIT(11);; /// const Mask_t kButton5Mask = BIT(12);; /// const Mask_t kAnyModifier = BIT(15);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx:206,mask,mask,206,gui/gui/src/TGCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGCanvas.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Simulate dynamic addition, for test purposes.; /// Here we decide how many workers to add, we create them and set the; /// environment.; /// This call is called regularly by Collect if the opton is enabled.; /// Returns the number of new workers added, or <0 on errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:348,error,errors,348,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called when the user select an item in the available styles' list.; /// Update the preview, the editor, the status bar. The current selected; /// style is changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:134,avail,available,134,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called whenever the end error size is modified by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:115,error,error,115,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called whenever the error along X is modified by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:111,error,error,111,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to 'robust fitting' option settings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:105,robust,robust,105,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['robust'],['robust']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to fAddSimple check box for drawing a simple histogram; /// without errors (== HIST draw option) in combination with some other; /// draw options. It draws an additional line on the top of the bins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:169,error,errors,169,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the ""Error"" check button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:109,Error,Error,109,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the histogram type, the coordinate type, the error type; /// and the Add combo box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:149,error,error,149,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the selection of the button 'Errors':; /// check button Values should be selected if Errors is selected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPaveStatsEditor.cxx:133,Error,Errors,133,gui/ged/src/TPaveStatsEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TPaveStatsEditor.cxx,2,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth bin contents of this 2-d histogram using kernel algorithms; /// similar to the ones used in the raster graphics community.; /// Bin contents in the active range are replaced by their smooth values.; /// The algorithm retains the input dimension by using Kernel Crop at the input boundaries.; /// Kernel Crop sets any pixel in the kernel that extends past the input to zero and adjusts the; /// normalization accordingly.; /// If Errors are defined via Sumw2, they are also scaled and computed.; /// However, note the resulting errors will be correlated between different-bins, so; /// the errors should not be used blindly to perform any calculation involving several bins,; /// like fitting the histogram. One would need to compute also the bin by bin correlation matrix.; ///; /// 3 kernels are proposed k5a, k5b and k3a.; /// k5a and k5b act on 5x5 cells (i-2,i-1,i,i+1,i+2, and same for j); /// k5b is a bit more stronger in smoothing; /// k3a acts only on 3x3 cells (i-1,i,i+1, and same for j).; /// By default the kernel ""k5a"" is used. You can select the kernels ""k5b"" or ""k3a""; /// via the option argument.; /// If TAxis::SetRange has been called on the x or/and y axis, only the bins; /// in the specified range are smoothed.; /// In the current implementation if the first argument is not used (default value=1).; ///; /// implementation by David McKee (dmckee@bama.ua.edu). Extended by Rene Brun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:522,Error,Errors,522,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,3,"['Error', 'error']","['Errors', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth bin contents of this histogram.; /// if option contains ""R"" smoothing is applied only to the bins; /// defined in the X axis range (default is to smooth all bins); /// Bin contents are replaced by their smooth values.; /// Errors (if any) are not modified.; /// the smoothing procedure is repeated ntimes (default=1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:316,Error,Errors,316,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth data with Lowess smoother; ///; /// This function performs the computations for the LOWESS smoother; /// (see the reference below). Lowess returns the output points; /// x and y which give the coordinates of the smooth.; ///; /// \param[in] grin Input graph; /// \param[in] option specific options; /// \param[in] span the smoother span. This gives the proportion of points in the plot; /// which influence the smooth at each value. Larger values give more smoothness.; /// \param[in] iter the number of robustifying iterations which should be performed.; /// Using smaller values of iter will make lowess run faster.; /// \param[in] delta values of x which lie within delta of each other replaced by a; /// single value in the output from lowess.; /// For delta = 0, delta will be calculated.; ///; /// References:; ///; /// - Cleveland, W. S. (1979) Robust locally weighted regression and smoothing; /// scatterplots. J. Amer. Statist. Assoc. 74, 829-836.; /// - Cleveland, W. S. (1981) LOWESS: A program for smoothing scatterplots; /// by robust locally weighted regression.; /// The American Statistician, 35, 54.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:597,robust,robustifying,597,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,3,"['Robust', 'robust']","['Robust', 'robust', 'robustifying']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Solves the system for a given set of residuals. Assembles the right-hand side appropriate; /// to the matrix factored in factor, solves the system using the factorization produced there,; /// partitions the solution vector into step components, then recovers the step components; /// eliminated during the block elimination that produced the augmented system form .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx:336,recover,recovers,336,math/quadp/src/TQpLinSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx,1,['recover'],['recovers']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sort bins with labels or set option(s) to draw axis with labels; /// \param[in] option; /// - ""a"" sort by alphabetic order; /// - "">"" sort by decreasing values; /// - ""<"" sort by increasing values; /// - ""h"" draw labels horizontal; /// - ""v"" draw labels vertical; /// - ""u"" draw labels up (end of label right adjusted); /// - ""d"" draw labels down (start of label left adjusted); ///; /// In case not all bins have labels sorting will work only in the case; /// the first `n` consecutive bins have all labels and sorting will be performed on; /// those label bins.; ///; /// \param[in] ax axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:428,down,down,428,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Sorts the points of this TGraph using in-place quicksort (see e.g. older glibc).; /// To compare two points the function parameter greaterfunc is used (see TGraph::CompareX for an; /// example of such a method, which is also the default comparison function for Sort). After; /// the sort, greaterfunc(this, i, j) will return kTRUE for all i>j if ascending == kTRUE, and; /// kFALSE otherwise.; ///; /// The last two parameters are used for the recursive quick sort, stating the range to be sorted; ///; /// Examples:; /// ~~~ {.cpp}; /// // sort points along x axis; /// graph->Sort();; /// // sort points along their distance to origin; /// graph->Sort(&TGraph::CompareRadius);; ///; /// Bool_t CompareErrors(const TGraph* gr, Int_t i, Int_t j) {; /// const TGraphErrors* ge=(const TGraphErrors*)gr;; /// return (ge->GetEY()[i]>ge->GetEY()[j]); }; /// // sort using the above comparison function, largest errors first; /// graph->Sort(&CompareErrors, kFALSE);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:992,error,errors,992,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Special plot method for 'X-Y' datasets used in \f$ \chi^2 \f$ fitting.; /// For general plotting, see RooAbsData::plotOn().; ///; /// These datasets; /// have one observable (X) and have weights (Y) and associated errors.; /// <table>; /// <tr><th> Contents options <th> Effect; /// <tr><td> YVar(RooRealVar& var) <td> Designate specified observable as 'y' variable; /// If not specified, the event weight will be the y variable; /// <tr><th> Histogram drawing options <th> Effect; /// <tr><td> DrawOption(const char* opt) <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> LineStyle(Int_t style) <td> Select line style by ROOT line style code, default is solid; /// <tr><td> LineColor(Int_t color) <td> Select line color by ROOT color code, default is black; /// <tr><td> LineWidth(Int_t width) <td> Select line with in pixels, default is 3; /// <tr><td> MarkerStyle(Int_t style) <td> Select the ROOT marker style, default is 21; /// <tr><td> MarkerColor(Int_t color) <td> Select the ROOT marker color, default is black; /// <tr><td> MarkerSize(double size) <td> Select the ROOT marker size; /// <tr><td> Rescale(double factor) <td> Apply global rescaling factor to histogram; /// <tr><th> Misc. other options <th> Effect; /// <tr><td> Name(const chat* name) <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> Invisible(bool flag) <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:300,error,errors,300,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Specifies the event ""ev"" is to be sent to the window ""id"".; /// This function requires you to pass an event mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:194,mask,mask,194,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Specify usage of DTD for this file.; /// Currently this option not available (always false).; /// Can be changed only for newly created file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:153,avail,available,153,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Split all argument 'arg' into individualized clones for each; /// defined state of 'splitCat'. The 'splitCats' category must be; /// subset of or equal to the master category supplied in the; /// customizer constructor.; ///; /// Splitting is only available on customizers created with a master index category",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:334,avail,available,334,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Split all arguments in 'set' into individualized clones for each; /// defined state of 'splitCat'. The 'splitCats' category must be; /// subset of or equal to the master category supplied in the; /// customizer constructor.; ///; /// Splitting is only available on customizers created with a master index category",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:338,avail,available,338,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Stage() returns kTRUE on success and kFALSE on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:133,failure,failure,133,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Start Test:; /// Open the TCanvas C and set the acceptable error (number of characters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx:145,error,error,145,test/stressGraphics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Start the PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). For a description; /// of the arguments see the TProof ctor. Returns the number of started; /// master or slave servers, returns 0 in case of error, in which case; /// fValid remains false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:434,error,error,434,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Start the thread. This starts the static method TThread::Function(); /// which calls the user function specified in the TThread ctor with; /// the arg argument.; /// If affinity is specified (>=0), a CPU affinity will be associated; /// with the current thread.; /// Returns 0 on success, otherwise an error number will; /// be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:388,error,error,388,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Start user transaction.; ///; /// This can be usesful, when big number of objects should be stored in; /// data base and commitment required only if all operations were successful.; /// In that case in the end of all operations method Commit() should be; /// called. If operation on user-level is looks like not successful,; /// method Rollback() will return database data and TSQLFile instance to; /// previous state.; /// In MySQL not all tables types support transaction mode of operation.; /// See SetTablesType() method for details .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:422,Rollback,Rollback,422,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['Rollback'],['Rollback']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Stat and fit parameters with errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx:115,error,errors,115,test/stressGraphics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function resetting system error number.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:119,error,error,119,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning system error number.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:119,error,error,119,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning the error of the last call to the of Derivative's; /// functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:116,error,error,116,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function that (de)activates multithreading unzipping; ///; /// The possible options are:; /// - kEnable _Enable_ it, which causes an automatic detection and launches the; /// additional thread if the number of cores in the machine is greater than; /// one; /// - kDisable _Disable_ will not activate the additional thread.; /// - kForce _Force_ will start the additional thread even if there is only one; /// core. the default will be taken as kEnable.; ///; /// Returns 0 if there was an error, 1 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:582,error,error,582,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function that returns the global day number from date. The input is; /// in TDatime format yyyymmdd (as obtained via TDatime::GetDate()).; /// This algorithm is only accurate for dates later than October 1582; /// (earliest date on Gregorian calendar) and it is checked that the date; /// is larger than 15821001 and conversion is correct.; /// In case of conversion failure 0 is returned.; /// No need to use when you know dates are larger than October 1582.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx:460,failure,failure,460,core/base/src/TDatime.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function to set the fgApproximate flag.; ///; ///When the flag is true, the function GetBinError; /// will approximate the bin error with the average profile error on all bins; /// in the following situation only; ///; /// - the number of bins in the profile is less than 1002; /// - the bin number of entries is small ( <5); /// - the estimated bin error is extremely small compared to the bin content; /// (see TProfile::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:220,error,error,220,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static function, set the fgApproximate flag.; ///; /// When the flag is true, the function GetBinError; /// will approximate the bin error with the average profile error on all bins; /// in the following situation only; /// - the number of bins in the profile2D is less than 10404 (eg 100x100); /// - the bin number of entries is small ( <5); /// - the estimated bin error is extremely small compared to the bin content; /// (see TProfile2D::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:219,error,error,219,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning the list of available applications",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:122,avail,available,122,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to determine the number of workers giving priority to users request.; /// Otherwise use the system information, if available, or just start; /// the minimal number, i.e. 2 .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:215,avail,available,215,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to kill the thread by id. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:166,error,error,166,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to kill thread by name. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:164,error,error,164,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to prompt for the user's passwd to be used for; /// authentication to rootd or proofd. Uses non-echoing command line; /// to get passwd. Returns passwd (which must de deleted by caller) or 0.; /// If non-interactive run (eg ProofServ) returns -1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:196,echo,echoing,196,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['echo'],['echoing']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to set a cancellation point. Returns 0 on success, otherwise; /// an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:169,error,error,169,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to set the cancellation response type of the calling thread; /// to deferred, i.e. cancel only at next cancellation point.; /// Returns 0 on success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:263,error,error,263,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to turn off thread cancellation. Returns 0 on success,; /// otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:173,error,error,173,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method to turn on thread cancellation. Returns 0 on success,; /// otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:172,error,error,172,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method which pops thread cleanup method off stack.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:196,error,error,196,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Static method which pushes thread cleanup method on stack.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:197,error,error,197,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Stop the cache learning phase; ///; /// Returns:; /// - 0 learning phase stopped or not active; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:194,error,error,194,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Store object in database. Return stored object id or -1 if error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:145,error,error,145,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Syntax:; ///; /// [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; ///; /// num's are floating point numbers; /// sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName; /// to appropriate values.; ///; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:350,error,error,350,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGColorSelect constructor.; /// The TGColorSelect widget is like a checkbutton but instead of the check; /// mark there is color area with a little down arrow.; /// When clicked on the arrow the TGColorPopup pops up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:234,down,down,234,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphAsymmErrors constructor importing its parameters from the TH1 object passed as argument; /// the low and high errors are set to the bin error of the histogram.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:202,error,errors,202,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors constructor importing its parameters from the TH1 object passed as argument.; /// The low and high errors are set to the bin error of the histogram.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:203,error,errors,203,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; ///; /// All values are initialized to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:168,error,errors,168,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of TArrayD objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:168,error,errors,168,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of std::vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:168,error,errors,168,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and a single y-error.; ///; /// If `exL`,`exH` or `eyL`,`eyH` are NULL, the corresponding values are preset to zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:172,error,error,172,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of TArrayD objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:151,error,errors,151,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of TArrayF objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:151,error,errors,151,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of std::vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:151,error,errors,151,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with `np` points and a single y-error.; ///; /// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; /// If `exL`,`exH` or `eyL`,`exH` are NULL, the corresponding values are preset to zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:155,error,error,155,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with name, title, `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of TArrayF objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:164,error,errors,164,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with name, title, `np` points and `ne` y-errors.; ///; /// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; /// The multiple y-errors are passed as std::vectors of std::vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:164,error,errors,164,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with name, title, `np` points and a single y-error.; ///; /// If `exL`,`exH` or `eyL`,`exH` are NULL, the corresponding values are preset to zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:168,error,error,168,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphMultiErrors normal constructor with np points and ne y-errors.; ///; /// All values are initialized to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:147,error,errors,147,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TGraphPolar constructor.; ///; /// \param[in] n number of points.; /// \param[in] theta angular values.; /// \param[in] r radial values.; /// \param[in] etheta errors on angular values.; /// \param[in] er errors on radial values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx:246,error,errors,246,graf2d/graf/src/TGraphPolar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolar.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Take ownership of the contents of 'comps'. Different from the overload that; /// taked the RooArgSet by `const&`, this version can also take an owning; /// RooArgSet without error, because the ownership will not be ambiguous afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:260,error,error,260,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// TausWorth generator from L'Ecuyer, uses as seed 3x32bits integers; /// Use a mask of 0xffffffffUL to make in work on 64 bit machines; /// Periodicity of about 10**26; /// Generate number in interval (0,1) : 0 and 1 are not included in the interval",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom2.cxx:163,mask,mask,163,math/mathcore/src/TRandom2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom2.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Taylor expansion series approximation for standard deviation (error propagation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:148,error,error,148,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Tell PROOF how many slaves to use in parallel. If random is TRUE a random; /// selection is done (if nodes is less than the available nodes).; /// Returns the number of parallel slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:210,avail,available,210,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Tell PROOF how many slaves to use in parallel. Returns the number of; /// parallel slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:199,error,error,199,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Template specializations for C++ std::optional and std::unique_ptr; ////////////////////////////////////////////////////////////////////////////////; /// The field for values that may or may not be present in an entry. Parent class for unique pointer field and; /// optional field. A nullable field cannot be instantiated itself but only its descendants.; /// The RNullableField takes care of the on-disk representation. Child classes are responsible for the in-memory; /// representation. Nullable fields use a (Split)Index[64|32] column to point to the available items.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RField/RFieldSTLMisc.hxx:641,avail,available,641,tree/ntuple/v7/inc/ROOT/RField/RFieldSTLMisc.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RField/RFieldSTLMisc.hxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Test or wait for available input; ///; /// \param[in] wait blocking wait on input; ///; /// Wait true - block, wait false - poll",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:103,avail,available,103,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Test the different modes available for text entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx:111,avail,available,111,test/stressGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The AdaCost boosting algorithm takes a simple cost Matrix (currently fixed for; /// all events... later could be modified to use individual cost matrices for each; /// events as in the original paper...; ///; /// true_signal true_bkg; /// ----------------------------------; /// sel_signal | Css Ctb_ss Cxx.. in the range [0,1]; /// sel_bkg | Cts_sb Cbb; ///; /// and takes this into account when calculating the mis class. cost (former: error fraction):; ///; /// err = sum_events ( weight* y_true*y_sel * beta(event)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:524,error,error,524,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:96,error,error,96,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelHist::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx:529,avail,available,529,proof/proofbench/src/TSelHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelHist.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:537,avail,available,537,tree/treeplayer/src/TSelectorEntries.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TTree::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx:526,avail,available,526,proof/proofbench/src/TSelEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEvent.cxx,3,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either t01::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.; ///; /// WARNING when a selector is used with a TChain, you must use; /// the pointer to the current TTree to call GetEntry(entry).; /// The entry is always the local entry number in the current tree.; /// Assuming that fChain is the pointer to the TChain being processed,; /// use: `fChain->GetTree()->GetEntry(entry)`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TSelector.cxx:524,avail,available,524,tree/tree/src/TSelector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TSelector.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The echo modes available are:; ///; /// <ul>; /// <li> kNormal - display characters as they are entered. This is the default.; /// <li> kNoEcho - do not display anything.; /// <li> kPassword - display asterisks instead of the characters actually entered.; /// </ul>; ///; /// It is always possible to cut and paste any marked text; only the widget's own; /// display is affected.; /// See also GetEchoMode(), GetDisplayText().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEntry.cxx:90,echo,echo,90,gui/gui/src/TGTextEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEntry.cxx,2,"['avail', 'echo']","['available', 'echo']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The error handler function. It prints the message on stderr and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:90,error,error,90,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The following finds the gradient directed path in parameter space.; /// More work is needed... FT, 24/9/2006; ///; /// The algorithm is currently as follows (if not otherwise stated, the sample; /// used below is [fPathIdx1,fPathIdx2]):; ///; /// 1. Set offset to -average(y(true)) and all coefs=0 => average of F(x)==0; /// 2. FindGDTau() : start scanning using several paths defined by different tau; /// choose the tau yielding the best path; /// 3. start the scanning the chosen path; /// 4. check error rate at a given frequency; /// data used for check: [fPerfIdx1,fPerfIdx2]; /// 5. stop when either of the following conditions are fullfilled:; /// 1. loop index==fGDNPathSteps; /// 2. error > fGDErrScale*errmin; /// 3. only in DEBUG mode: risk is not monotonously decreasing; ///; /// The algorithm will warn if:; /// 1. the error rate was still decreasing when loop finished -> increase fGDNPathSteps!; /// 2. minimum was found at an early stage -> decrease fGDPathStep; /// 3. DEBUG: risk > previous risk -> entered chaotic region (regularization is too small)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:588,error,error,588,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The following named arguments are supported; /// <table>; /// <tr><th> Type of CmdArg <th> Effect on parameter box; /// <tr><td> `Parameters(const RooArgSet& param)` <td> Only the specified subset of parameters will be shown. By default all non-constant parameters are shown.; /// <tr><td> `ShowConstants(bool flag)` <td> Also display constant parameters; /// <tr><td> `Format(const char* what,...)` <td> Parameter formatting options.; /// | Parameter | Format; /// | ---------------------- | --------------------------; /// | `const char* what` | Controls what is shown. ""N"" adds name (alternatively, ""T"" adds the title), ""E"" adds error, ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; /// | `FixedPrecision(int n)`| Controls precision, set fixed number of digits; /// | `AutoPrecision(int n)` | Controls precision. Number of shown digits is calculated from error + n specified additional digits (1 is sensible default); /// <tr><td> `Label(const chat* label)` <td> Add label to parameter box. Use `\n` for multi-line labels.; /// <tr><td> `Layout(double xmin, double xmax, double ymax)` <td> Specify relative position of left/right side of box and top of box.; /// Coordinates are given as position on the pad between 0 and 1.; /// The lower end of the box is calculated automatically from the number of lines in the box.; /// </table>; ///; ///; /// Example use:; /// ```; /// pdf.paramOn(frame, Label(""fit result""), Format(""NEU"",AutoPrecision(1)) ) ;; /// ```; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:718,error,error,718,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The option string is decoded, for available options see ""DeclareOptions"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:120,avail,available,120,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The parameter mode can be any combination of kKsSiourRmMen; /// - k : kurtosis printed; /// - K : kurtosis and kurtosis error printed; /// - s : skewness printed; /// - S : skewness and skewness error printed; /// - i : integral of bins printed; /// - I : integral of bins with option ""width"" printed; /// - o : number of overflows printed; /// - u : number of underflows printed; /// - r : rms printed; /// - R : rms and rms error printed; /// - m : mean value printed; /// - M : mean value mean error values printed; /// - e : number of entries printed; /// - n : name of histogram is printed; ///; /// Example: `gStyle->SetOptStat(""ne"");`; /// print only name of histogram and number of entries.; ///; /// - `gStyle->SetOptStat(""n"")` print only the name of the histogram; /// - `gStyle->SetOptStat(""nemr"")` is the default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:206,error,error,206,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,4,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx:120,error,error,120,proof/proof/src/TProofChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofChain.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The type of information about fit parameters printed in the histogram; /// statistics box can be selected via the parameter `mode`.; /// The parameter mode can be = `pcev`:; /// - p = 1; print Probability; /// - c = 1; print Chisquare/Number of degrees of freedom; /// - e = 1; print errors (if e=1, v must be 1); /// - v = 1; print name/values of parameters; /// Example: `gStyle->SetOptFit(1011);`; /// print fit probability, parameter names/values and errors.; /// - When ""v""=1 is specified, only the non-fixed parameters are shown.; /// - When ""v""=2 all parameters are shown.; ///; /// #### Notes:; ///; /// - never call `SetOptFit(000111);` but `SetOptFit(111)`, 000111 will; /// be taken as an octal number !!; /// - `gStyle->SetOptFit(1)` is a shortcut allowing to set the most common; /// case and is equivalent to `gStyle->SetOptFit(111)`; /// - At ROOT startup the option fit is set to `0`. So, to see the fit parameters; /// on all plot resulting from a fit, a call to `gStyle->SetOptFit()` with a; /// non null value should be done. One can put it in the `rootlogon.C` file to; /// always have it.; ///; /// see also SetOptStat below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:370,error,errors,370,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// The type of information printed in the histogram statistics box; /// can be selected via the parameter mode.; /// The parameter mode can be = `ksiourmen`; /// - k = 1; kurtosis printed; /// - k = 2; kurtosis and kurtosis error printed; /// - s = 1; skewness printed; /// - s = 2; skewness and skewness error printed; /// - i = 1; integral of bins printed; /// - i = 2; integral of bins with option ""width"" printed; /// - o = 1; number of overflows printed; /// - u = 1; number of underflows printed; /// - r = 1; rms printed; /// - r = 2; rms and rms error printed; /// - m = 1; mean value printed; /// - m = 2; mean and mean error values printed; /// - e = 1; number of entries printed; /// - n = 1; name of histogram is printed; ///; /// Example: `gStyle->SetOptStat(11);`; /// print only name of histogram and number of entries.; /// `gStyle->SetOptStat(1101);` displays the name of histogram, mean value and RMS.; ///; /// #### Notes:; ///; /// - never call `SetOptStat(000111);` but `SetOptStat(111)`, 000111 will; /// be taken as an octal number !!; /// - `SetOptStat(1)` is s shortcut allowing to set the most common case, and is; /// taken as `SetOptStat(1111)` (for backward compatibility with older versions.; /// If you want to print only the name of the histogram call `SetOptStat(1000000001)`.; /// - that in case of 2-D histograms, when selecting just underflow (10000); /// or overflow (100000), the stats box will show all combinations; /// of underflow/overflows and not just one single number!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:307,error,error,307,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,4,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This applies simple nor encryption with sa to the first 64 bytes; /// pw. Returns the hex of the result (max length 128).; /// This is foreseen for systms where crypt is not available; /// (on windows ...), to provide some protection of tokens.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:260,avail,available,260,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function allows to do discrete Fourier transforms of TH1 and TH2.; /// Available transform types and flags are described below.; ///; /// To extract more information about the transform, use the function; /// TVirtualFFT::GetCurrentTransform() to get a pointer to the current; /// transform object.; ///; /// \param[out] h_output histogram for the output. If a null pointer is passed, a new histogram is created; /// and returned, otherwise, the provided histogram is used and should be big enough; /// \param[in] option option parameters consists of 3 parts:; /// - option on what to return; /// - ""RE"" - returns a histogram of the real part of the output; /// - ""IM"" - returns a histogram of the imaginary part of the output; /// - ""MAG""- returns a histogram of the magnitude of the output; /// - ""PH"" - returns a histogram of the phase of the output; /// - option of transform type; /// - ""R2C"" - real to complex transforms - default; /// - ""R2HC"" - real to halfcomplex (special format of storing output data,; /// results the same as for R2C); /// - ""DHT"" - discrete Hartley transform; /// real to real transforms (sine and cosine):; /// - ""R2R_0"", ""R2R_1"", ""R2R_2"", ""R2R_3"" - discrete cosine transforms of types I-IV; /// - ""R2R_4"", ""R2R_5"", ""R2R_6"", ""R2R_7"" - discrete sine transforms of types I-IV; /// To specify the type of each dimension of a 2-dimensional real to real; /// transform, use options of form ""R2R_XX"", for example, ""R2R_02"" for a transform,; /// which is of type ""R2R_0"" in 1st dimension and ""R2R_2"" in the 2nd.; /// - option of transform flag; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most opt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:162,Avail,Available,162,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function allows to set all the possible options available in; /// TSpectrum2Painter and paint ""h2"".; ///; /// TSpectrum2Painter offers a large set of options/attributes. In the; /// ""option"" parameter each of them can be set to specific values via; /// ""operators"" in the option itself. for instance on can do:; ///; /// h2->Draw(""SPEC a(30,30,0)"");; ///; /// to draw h2 with TSpectrum2Painter using all the default attributes except; /// the viewing angles. The operators' names are case insensitive (one can use; /// ""a"" or ""A""). Operators parameters are separated by "","". The operators can; /// be put is any order in the option. Operators must be separated by "" "".; /// No "" "" characters should be put in an operator. This help page describes; /// all the available operators.; ///; /// The way ""h2"" will be painted is controlled with 2 parameters the ""Display; /// modes groups"" and the ""Display Modes"".; ///; /// ""Display modes groups"" can take the following values:; ///; /// - 0 = Simple - it covers simple display modes using one color only; /// - 1 = Light - in this group the shading is carried out according to; /// the position of the fictive light source; /// - 2 = Height - in this group the shading is carried out according to; /// the channel contents; /// - 3 = LightHeight - combination of two previous shading algorithms. One; /// can control the weight between both algorithms.; ///; /// ""Display modes"" can take the following values:; ///; /// - 1 = Points.; /// - 2 = Grid.; /// - 3 = Contours.; /// - 4 = Bars.; /// - 5 = LinesX.; /// - 6 = LinesY.; /// - 7 = BarsX.; /// - 8 = BarsY.; /// - 9 = Needles.; /// - 10 = Surface.; /// - 11 = Triangles.; ///; /// Using this function these parameters can be set using the ""dm"" operator; /// in the option. Example:; ///; /// h2->Draw(""SPEC dm(1,2)"");; ///; /// will paint the 2D histogram h2 using the ""Light Display mode group"" and; /// the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:139,avail,available,139,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class tree for one class in HTML; /// (inherited and succeeding classes, called recursively); ///; ///; /// Input: out - output file stream; /// classPtr - pointer to the class; /// dir - direction to traverse tree: up, down or both; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:331,down,down,331,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates derivative of error function of x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:125,error,error,125,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates error function of x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:111,error,error,111,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets errors of the volumes of fitted 2D peaks; /// - volumeErrors - gets vector of volumes errors of 2D peaks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:105,error,errors,105,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the amplitudes of fitted 2D peaks and 1D ridges; /// - amplitudeErrors - gets vector of amplitudes errors of 2D peaks; /// - amplitudeErrorsX1 - gets vector of amplitudes errors of 1D ridges in x direction; /// - amplitudesErrorY1 - gets vector of amplitudes errors of 1D ridges in y direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:204,error,errors,204,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,3,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - a1 - gets the fitted value of a1 parameter; /// - a1Err - gets error value of a1 parameter; /// - a2 - gets the fitted value of a2 parameter; /// - a2Err - gets error value of a2 parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:141,error,errors,141,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the background parameters and their errors; /// - a0 - gets the fitted value of a0 parameter; /// - a0Err - gets error value of a0 parameter; /// - ax - gets the fitted value of ax parameter; /// - axErr - gets error value of ax parameter; /// - ay - gets the fitted value of ay parameter; /// - ayErr - gets error value of ay parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:141,error,errors,141,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the errors of positions of fitted 2D peaks and 1D ridges; /// - positionErrorsX - gets vector of errors of x positions of 2D peaks; /// - positionErrorsY - gets vector of errors of y positions of 2D peaks; /// - positionErrorsX1 - gets vector of errors of x positions of 1D ridges; /// - positionErrorsY1 - gets vector of errors of y positions of 1D ridges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:109,error,errors,109,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,5,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the ro parameter and its error; /// - ro - gets the fitted value of ro parameter; /// - roErr - gets error value of ro parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:130,error,error,130,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma parameter and its error; /// - sigma - gets the fitted value of sigma parameter; /// - sigmaErr - gets error value of sigma parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:133,error,error,133,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma x parameter and its error; /// - sigmaX - gets the fitted value of sigma x parameter; /// - sigmaErrX - gets error value of sigma x parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,error,error,135,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the sigma y parameter and its error; /// - sigmaY - gets the fitted value of sigma y parameter; /// - sigmaErrY - gets error value of sigma y parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,error,error,135,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - t - gets the fitted value of t parameter; /// - tErr - gets error value of t parameter; /// - b - gets the fitted value of b parameter; /// - bErr - gets error value of b parameter; /// - s - gets the fitted value of s parameter; /// - sErr - gets error value of s parameter; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:135,error,errors,135,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function gets the tail parameters and their errors; /// - txy - gets the fitted value of txy parameter; /// - txyErr - gets error value of txy parameter; /// - tx - gets the fitted value of tx parameter; /// - txErr - gets error value of tx parameter; /// - ty - gets the fitted value of ty parameter; /// - tyErr - gets error value of ty parameter; /// - bx - gets the fitted value of bx parameter; /// - bxErr - gets error value of bx parameter; /// - by - gets the fitted value of by parameter; /// - byErr - gets error value of by parameter; /// - sxy - gets the fitted value of sxy parameter; /// - sxyErr - gets error value of sxy parameter; /// - sx - gets the fitted value of sx parameter; /// - sxErr - gets error value of sx parameter; /// - sy - gets the fitted value of sy parameter; /// - syErr - gets error value of sy parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:135,error,errors,135,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,9,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called by Graph2DFitChisquare.; /// It returns the error along X at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx:154,error,error,154,hist/hist/src/TGraph2DErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called by Graph2DFitChisquare.; /// It returns the error along Y at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx:154,error,error,154,hist/hist/src/TGraph2DErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called by Graph2DFitChisquare.; /// It returns the error along Z at point i.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx:154,error,error,154,hist/hist/src/TGraph2DErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2DErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called when a warning from the parser has occurred.; /// Message is the parse error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:181,error,error,181,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called when an error from the parser has occurred.; /// Message is the parse error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:118,error,error,118,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function may be called from a script to animate an X3D picture; /// px, py mouse position; ///command = 0 --- move to px,py; /// = w --- wireframe mode; /// = e --- hidden line mode; /// = r --- hidden surface mode; /// = u --- move object down; /// = i --- move object up; /// = o --- toggle controls style; /// = s --- toggle stereo display; /// = d --- toggle blue stereo view; /// = f --- toggle double buffer; /// = h --- move object right; /// = j --- move object forward; /// = k --- move object backward; /// = l --- move object left; /// = x a --- rotate about x; /// = y b --- rotate about y; /// = z c --- rotate about z; /// = 1 2 3 --- autorotate about x; /// = 4 5 6 --- autorotate about y; /// = 7 8 9 --- autorotate about z; /// = [ ] { } --- adjust focus; /// Example:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx:331,down,down,331,graf3d/x3d/src/TViewerX3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TViewerX3D.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function parses the xml file, by initializing the parser and checks; /// whether the parse context is created or not, it will check as well; /// whether the document is well formated.; /// It returns the parse error code, see TXMLParser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:301,error,error,301,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function returns the best format to print the error value (e); /// knowing the parameter value (v) and the format (f) used to print it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:137,error,error,137,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This function was adapted from the TGraphAsymmErrors class.; /// See TGraphAsymmErrors::Divide for the documentation; ///; /// Only the first error dimension is affected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:228,error,error,228,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This method check for treat the case where expression contains $Atl and load up; /// both fAliases and fExpr.; /// We return:; /// - -1 in case of failure; /// - 0 in case we did not find $Alt; /// - the action number in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:233,failure,failure,233,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This method compiles and loads a shared library containing; /// the code from the file ""filename"".; ///; /// The return value is true (1) in case of success and false (0); /// in case of error.; ///; /// The possible options are:; /// - k : keep the shared library after the session end.; /// - f : force recompilation.; /// - g : compile with debug symbol; /// - O : optimized the code; /// - c : compile only, do not attempt to load the library.; /// - s : silence all informational output; /// - v : output all information output; /// - d : debug ACLiC, keep all the output files.; /// - - : if buildir is set, use a flat structure (see buildir below); ///; /// If library_specified is specified, CompileMacro generates the file; /// ""library_specified"".soext where soext is the shared library extension for; /// the current platform.; ///; /// If build_dir is specified, it is used as an alternative 'root' for the; /// generation of the shared library. The library is stored in a sub-directories; /// of 'build_dir' including the full pathname of the script unless a flat; /// directory structure is requested ('-' option). With the '-' option the libraries; /// are created directly in the directory 'build_dir'; in particular this means that; /// 2 scripts with the same name in different source directory will over-write each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:273,error,error,273,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This method specifies the color threshold used by GetColor to retrieve a color.; ///; /// \param[in] t Color threshold. By default is equal to 1./31. or 1./255.; /// depending on the number of available color planes.; ///; /// When GetColor is called, it scans the defined colors and compare them to the; /// requested color.; /// If the Red Green and Blue values passed to GetColor are Rr Gr Br; /// and Rd Gd Bd the values of a defined color. These two colors are considered equal; /// if (abs(Rr-Rd) < t & abs(Br-Bd) < t & abs(Br-Bd) < t). If this test passes,; /// the color defined by Rd Gd Bd is returned by GetColor.; ///; /// To make sure GetColor will return a color having exactly the requested; /// R G B values it is enough to specify a nul :; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(0.);; /// ~~~; ///; /// To reset the color threshold to its default value it is enough to do:; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(-1.);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:279,avail,available,279,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This routine computes the X and Y coordinates for all elements of; /// a line that has been gathered using GetLine() above. It also figures; /// the ascent and descent for in-line images.; ///; /// The value returned is the Y coordinate of the bottom edge of the; /// new line. The X coordinates are computed by adding the left margin; /// plus any extra space needed for centering or right-justification.; ///; /// p_start - Start of tokens for this line; /// p_end - First token past end of this line. Maybe NULL; /// mbottom - Put the top of this line here; /// width - This is the space available to the line; /// actualWidth - This is the actual width needed by the line; /// lMargin - The current left margin; /// max_x - Write maximum X coordinate of ink here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:677,avail,available,677,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This routine implements the Sizer() function for `<INPUT>`,; /// `<SELECT>` and `<TEXTAREA>` markup.; ///; /// A side effect of sizing these markups is that widgets are; /// created to represent the corresponding input controls.; ///; /// The function normally returns 0. But if it is dealing with; /// a `<SELECT>` or `<TEXTAREA>` that is incomplete, 1 is returned.; /// In that case, the sizer will be called again at some point in; /// the future when more information is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:561,avail,available,561,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:601,avail,available,601,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Thread specific error handler function.; /// It calls the user set error handler in the main thread.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:102,error,error,102,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// To get the n-sigma contour the error def parameter ""up"" has to set to n^2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:117,error,error,117,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Total all the elements that are available for the current entry; /// for the secondary variable dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:118,avail,available,118,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Train the network.; /// nEpoch is the number of iterations.; /// option can contain:; /// - ""text"" (simple text output); /// - ""graph"" (evoluting graphical training curves); /// - ""update=X"" (step for the text/graph output update); /// - ""+"" will skip the randomisation and start from the previous values.; /// - ""current"" (draw in the current canvas); /// - ""minErrorTrain"" (stop when NN error on the training sample gets below minE; /// - ""minErrorTest"" (stop when NN error on the test sample gets below minE; /// All combinations are available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:475,error,error,475,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,3,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Transfer file from remote host. Returns number of bytes; /// received or < 0 in case of error. Error -1 connection is still; /// open, error -2 connection has been closed. In case of failure; /// fRestartAt is set to the number of bytes correclty transfered.; /// Calling GetFile() immediately afterwards will restart at fRestartAt.; /// If this is not desired call SetRestartAt(0) before calling GetFile().; /// If rootd reports that the file is locked, and you are sure this is not; /// the case (e.g. due to a crash), you can force unlock it by prepending; /// the file name with a '-'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:174,error,error,174,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Transfer file to remote host. Returns number of bytes; /// sent or < 0 in case of error. Error -1 connection is still; /// open, error -2 connection has been closed. In case of failure; /// fRestartAt is set to the number of bytes correclty transfered.; /// Calling PutFile() immediately afterwards will restart at fRestartAt.; /// If this is not desired call SetRestartAt(0) before calling PutFile().; /// If rootd reports that the file is locked, and you are sure this is not; /// the case (e.g. due to a crash), you can force unlock it by prepending; /// the remoteName with a '-'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:168,error,error,168,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the current state of the master to the active slave servers.; /// The current state includes: the current working directory, etc.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:289,error,error,289,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Transfer the initial (i.e. current) state of the master to all; /// slave servers. Currently the initial state includes: log level.; /// Returns the number of active slaves. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:282,error,error,282,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Translate Perl modifier flags into pcre flags.; /// The supported modStr characters are: g, i, m, o, s, x, and the; /// special d for debug. The meaning of the letters is:; /// - m; /// Treat string as multiple lines. That is, change ""^"" and ""$"" from; /// matching the start or end of the string to matching the start or; /// end of any line anywhere within the string.; /// - s; /// Treat string as single line. That is, change ""."" to match any; /// character whatsoever, even a newline, which normally it would not match.; /// Used together, as /ms, they let the ""."" match any character whatsoever,; /// while still allowing ""^"" and ""$"" to match, respectively, just after and; /// just before newlines within the string.; /// - i; /// Do case-insensitive pattern matching.; /// - x; /// Extend your pattern's legibility by permitting whitespace and comments.; /// - p; /// Preserve the string matched such that ${^PREMATCH}, ${^MATCH},; /// and ${^POSTMATCH} are available for use after matching.; /// - g and c; /// Global matching, and keep the Current position after failed matching.; /// Unlike i, m, s and x, these two flags affect the way the regex is used; /// rather than the regex itself. See Using regular expressions in Perl in; /// perlretut for further explanation of the g and c modifiers.; /// For more detail see: http://perldoc.perl.org/perlre.html#Modifiers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:1051,avail,available,1051,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Tries to construct xml node from input stream. Node should be; /// child of xmlparent node or it can be closing tag of xmlparent.; /// resvalue <= 0 if error; /// resvalue == 1 if this is endnode of parent; /// resvalue == 2 if this is child",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:238,error,error,238,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Try to determine if url contains an anchor specifying an archive member.; /// Returns kFALSE in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx:193,error,error,193,io/io/src/TArchiveFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Try to find matching graphics context. On success returns the amount; /// of matching bits (which may be zero if masks have no common bits),; /// -1 on failure (when there are common bits but not a single match).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:199,mask,masks,199,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,2,"['failure', 'mask']","['failure', 'masks']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Try to get user name and passwd from the ~/.rootnetrc or; /// ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; /// These files will only be used when their access masks are 0600.; /// Returns kTRUE if user and passwd were found for the machine; /// specified in the URL. If kFALSE, user and passwd are """".; /// The boolean pwhash is set to kTRUE if the returned passwd is to; /// be understood as password hash, i.e. if the 'password-hash' keyword; /// is found in the 'machine' lines; not implemented for 'secure'; /// and the .netrc file.; /// The format of these files are:; ///; /// # this is a comment line; /// machine `<machine fqdn>` login `<user>` password `<passwd>`; /// machine `<machine fqdn>` login `<user>` password-hash `<passwd>`; ///; /// and in addition ~/.rootnetrc also supports:; ///; /// secure `<machine fqdn>` login `<user>` password `<passwd>`; ///; /// `<machine fqdn>` may be a domain name or contain the wild card '*'.; ///; /// for the secure protocols. All lines must start in the first column.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:267,mask,masks,267,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['mask'],['masks']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Try to load the ClassInfo if available. This function may require parsing; /// the header file and/or loading data from the clang pcm. If further calls to; /// this function cannot affect the value of fClassInfo, fCanLoadClassInfo is set; /// to false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:115,avail,available,115,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Try to lock mutex. Returns 0 when no error, EDEADLK when mutex was; /// already locked by this thread and this mutex is not reentrant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:123,error,error,123,core/thread/src/TMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Turn off the cancellation state of the calling thread. Returns 0 on; /// success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:181,error,error,181,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Turn on support of errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:105,error,errors,105,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Turn on the cancellation state of the calling thread. Returns 0 on; /// success, otherwise an error number will be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx:180,error,error,180,core/thread/src/TPosixThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThread.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Tweak all ROOT colors to become brighter (if value > 0) or; /// darker (value < 0). Reasonable values for the value argument are; /// from -2.5 to 2.5 (error will be printed otherwise).; /// If value is zero, the original colors are restored.; ///; /// You should call REveManager::FullRedraw3D() afterwards or set; /// the argument full_redraw to true (default is false).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveUtil.cxx:238,error,error,238,graf3d/eve7/src/REveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveUtil.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Tweak all ROOT colors to become brighter (if value > 0) or; /// darker (value < 0). Reasonable values for the value argument are; /// from -2.5 to 2.5 (error will be printed otherwise).; /// If value is zero, the original colors are restored.; ///; /// You should call TEveManager::FullRedraw3D() afterwards or set; /// the argument full_redraw to true (default is false).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:238,error,error,238,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:573,Error,Errors,573,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:574,Error,Errors,574,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Error'],['Errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Uncompress the message. The message will only be uncompressed when; /// kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:198,error,error,198,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Undeclare obj called name.; /// Returns 1 in case of success, 0 for failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:154,failure,failure,154,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unlink, i.e. remove, a file or directory. Returns 0 when successful,; /// -1 in case of failure. Not supported for httpd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:174,failure,failure,174,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unload all packages.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,error,error,159,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unload specified package.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:164,error,error,164,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unlock the directory. Returns 0 in case of success,; /// -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx:157,error,error,157,proof/proof/src/TLockPath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TLockPath.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unlock the mutex. Returns 0 when no error, EPERM when mutex was already; /// unlocked by this thread.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx:122,error,error,122,core/thread/src/TMutex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TMutex.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Unzips a ROOT specific buffer... by reading the header at the beginning.; /// returns the size of the inflated buffer or -1 if error; /// Note!! : If *dest == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer; /// src is the original buffer with the record (header+compressed data); /// *dest is the inflated buffer (including the header)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:213,error,error,213,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update accumulated information about the elements of the collection; /// (e.g. fTotalSize). If 'avgsize' > 0, use an average file size of 'avgsize'; /// bytes when the size info is not available.; /// Also updates the meta data information by summarizing; /// the meta data of the contained objects.; /// Return -1 in case of any failure, 0 if the total size is exact, 1 if; /// incomplete, 2 if complete but (at least partially) estimated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx:271,avail,available,271,core/base/src/TFileCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFileCollection.cxx,2,"['avail', 'failure']","['available', 'failure']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx:93,error,error,93,hist/hist/src/TProfile2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2Poly.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of available data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:101,avail,available,101,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update list of available functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx:101,avail,available,101,gui/fitpanelv7/src/RFitPanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanel.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update tab file.; /// If ilck <= 0 open and lock the file; if ilck > 0, use file; /// descriptor ilck, which should correspond to an open and locked file.; /// If opt = -1 : delete file (backup saved in `<file>.bak`);; /// If opt = 0 : eliminate all inactive entries; /// (if line=""size"" act only if size > gMAXTABSIZE); /// if opt = 1 : append 'line'.; /// Returns -1 in case of error.; /// Returns offset for 'line' and token for opt = 1.; /// Returns new file size for opt = 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:466,error,error,466,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update the range of the available data and refresh the current view.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:110,avail,available,110,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Update values + mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx:102,mask,mask,102,gui/gui/src/TGGC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGGC.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1163,down,download,1163,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,3,"['down', 'error']","['download', 'downloaded', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Use the asymptotically correct approach to estimate errors in the presence of weights.; /// This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; /// Applies the calculated covaraince matrix to the RooMinimizer and returns; /// the quality of the covariance matrix.; /// See also the documentation of RooAbsPdf::fitTo(), where this function is used.; /// \param[in] minimizer The RooMinimizer to get the fit result from. The state; /// of the minimizer will be altered by this function: the covariance; /// matrix caltulated here will be applied to it via; /// RooMinimizer::applyCovarianceMatrix().; /// \param[in] data The dataset that was used for the fit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:138,error,errors,138,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Use the information in the TGTextLayout token to return the bounding box; /// for the character specified by index.; ///; /// The width of the bounding box is the advance width of the character, and; /// does not include and left- or right-bearing. Any character that extends; /// partially outside of the text layout is considered to be truncated at the; /// edge. Any character which is located completely outside of the text; /// layout is considered to be zero-width and pegged against the edge.; ///; /// The height of the bounding box is the line height for this font,; /// extending from the top of the ascent to the bottom of the descent.; /// Information about the actual height of the individual letter is not; /// available.; ///; /// A text layout that contains no characters is considered to contain a; /// single zero-width placeholder character.; ///; /// The return value is 0 if the index did not specify a character in the; /// text layout, or non-zero otherwise. In that case, *bbox is filled with; /// the bounding box of the character.; ///; /// layout -- Layout information, from a previous call to ComputeTextLayout().; /// index -- The index of the character whose bbox is desired.; /// x, y -- Filled with the upper-left hand corner, in pixels, of the; /// bounding box for the character specified by index, if non-NULL.; /// w, h -- Filled with the width and height of the bounding box for the; /// character specified by index, if non-NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:811,avail,available,811,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case a system (OS or GUI) related error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:141,error,error,141,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:115,error,error,115,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Use this function in case of a fatal error. It will abort the program.; /// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; /// - but for all reasonable settings it *will* abort.; // So let's be reasonable wrt Coverity:; // coverity[+kill]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:123,error,error,123,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Used for shuting down the workres after a query is finished.; /// Sends each of the workers from the workerList, a kPROOF_STOP message.; /// If the workerList == 0, shutdown all the workers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,down,down,103,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// User method.; /// It returns NORMALIZATION integral to be combined with the average weights; /// and content of the histograms in order to get proper absolute normalization; /// of the integrand and distributions.; /// It can be called after initialization, before or during the MC run.; /// \param IntNorm variable where the integral will be stored; /// \param ErrInt variable where the absolute error of the integral will be stored if internal rejection is active, otherwise set to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:483,error,error,483,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// User utility, miscellaneous and debug.; /// Checks all pointers in the tree of cells. This is useful auto diagnostic.; /// - level=0, no printout, failures causes STOP; /// - level=1, printout, failures lead to WARNINGS only",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:233,failure,failures,233,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,2,['failure'],['failures']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Uses the components of the specified GC to draw a line between the; /// specified set of points (x1, y1) and (x2, y2).; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,; /// and clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:253,mask,mask,253,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Using the current bin info, recompute the arrays for contents and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:152,error,errors,152,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that creates a projection of a function or p.d.f; /// to be plotted on a RooPlot.; /// \anchor createPlotProjAnchor; ///; /// Create a new object \f$ G \f$ that represents the normalized projection:; /// \f[; /// G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; /// {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; /// \f]; /// where \f$ F[x,y,p] \f$ is the function we represent, and; /// \f$ \{ p \} \f$ are the remaining variables (""parameters"").; ///; /// \param[in] dependentVars Dependent variables over which to normalise, \f$ \{x\} \f$.; /// \param[in] projectedVars Variables to project out, \f$ \{ y \} \f$.; /// \param[out] cloneSet Will be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object.; /// The latter will also be returned. The caller takes ownership of this set.; /// \param[in] rangeName Optional range for projection integrals; /// \param[in] condObs Conditional observables, which are not integrated for normalisation, even if they; /// are in `dependentVars` or `projectedVars`.; /// \return A pointer to the newly created object, or zero in case of an; /// error. The caller is responsible for deleting the `cloneSet` (which includes the returned projection object).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1247,error,error,1247,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Utility routine to get MINOS errors; ///; /// Called by user.; ///; /// NUMBER is the parameter number; ///; /// values returned by MNERRS:; /// - EPLUS, EMINUS are MINOS errors of parameter NUMBER,; /// - EPARAB is 'parabolic' error (from error matrix).; /// (Errors not calculated are set = 0); /// - GCC is global correlation coefficient from error matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:115,error,errors,115,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,6,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Utility routine to issue a Fatal error is the Value object is not valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:119,error,error,119,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Utility to calculate number of decimals to show; /// based on magnitude of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:161,error,error,161,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:130,error,errors,130,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Verify if all files in the specified dataset are available.; /// Print a list and return the number of missing files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:135,avail,available,135,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Verify if all files in the specified dataset are available.; /// Print a list and return the number of missing files.; /// Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:135,avail,available,135,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Wait for all windows to shut-down.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindowManager.cxx:115,down,down,115,graf3d/eve/src/TEveWindowManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveWindowManager.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Wait to be signaled or till the timer times out.; /// This method is given a relative time from now.; /// To wait for an absolute time since the beginning of the EPOCH, use; /// TCondition::TimedWait(ULong_t secs, ULong_t nanoSec).; /// Returns 0 if successfully signalled, 1 if time expired and -1 in; /// case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:401,error,error,401,core/thread/src/TCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Wait to be signaled or till the timer times out.; /// This method is given an absolute time since the beginning of; /// the EPOCH (use TThread::GetTime() to get this absolute time).; /// To wait for a relative time from now, use; /// TCondition::TimedWaitRelative(ULong_t ms).; /// Returns 0 if successfully signalled, 1 if time expired and -1 in; /// case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:446,error,error,446,core/thread/src/TCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Waits for this socket to change status. If interest=kRead,; /// the socket will be watched to see if characters become available for; /// reading; if interest=kWrite the socket will be watched to; /// see if a write will not block.; /// The argument 'timeout' specifies a maximum time to wait in millisec.; /// Default no timeout.; /// Returns 1 if a change of status of interest has been detected within; /// timeout; 0 in case of timeout; < 0 if an error occured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:205,avail,available,205,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,4,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// We let an horizontal bar go down and we stop when we have the integral; /// equal to the desired one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridPlot.cxx:114,down,down,114,roofit/roostats/src/HybridPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridPlot.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:173,failure,failure,173,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// When this static function is called with `sumw2=kTRUE`, all new; /// histograms will automatically activate the storage; /// of the sum of squares of errors, ie TH1::Sumw2 is automatically called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:236,error,errors,236,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Wipe all the data from the permanent buffer but keep, the in-memory object; /// alive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx:166,alive,alive,166,io/io/src/TMemFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx,2,['alive'],['alive']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write a buffer to the file. This is the basic low level write operation.; /// Returns kTRUE in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:189,failure,failure,189,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write a data chunk; ///; /// param buffer: the data to be written; /// param length: the size of the buffer; /// returns: kTRUE in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:225,failure,failure,225,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write buffer at position pos in the write buffer.; /// The function returns 1 if the buffer has been successfully entered into the write buffer.; /// The function returns 0 in case WriteBuffer() was recusively called via Flush().; /// The function returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx:356,error,error,356,io/io/src/TFileCacheWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write buffer of this basket on the current file.; ///; /// The function returns the number of bytes committed to the memory.; /// If a write error occurs, the number of bytes returned is -1.; /// If no data are written, the number of bytes returned is 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:227,error,error,227,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write error message and call a handler, if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:92,error,error,92,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write resource records to file fname for a certain level. Use; /// level kEnvAll to write all resources. Returns -1 on case of error,; /// 0 in case of success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx:213,error,error,213,core/base/src/TEnv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write specified byte range to remote file via dCache daemon.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:177,error,error,177,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write specified byte range to remote file via rootd daemon.; /// Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:176,error,error,176,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write the encoded object supported by this key.; /// The function returns the number of bytes committed to the file.; /// If a write error occurs, the number of bytes returned is -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:219,error,error,219,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Write to disk all the basket that have not yet been individually written and; /// create an event cluster boundary (by default).; ///; /// If the caller wishes to flush the baskets but not create an event cluster,; /// then set create_cluster to false.; ///; /// If ROOT has IMT-mode enabled, this will launch multiple TBB tasks in parallel; /// via TThreadExecutor to do this operation; one per basket compression. If the; /// caller utilizes TBB also, care must be taken to prevent deadlocks.; ///; /// For example, let's say the caller holds mutex A and calls FlushBaskets; while; /// TBB is waiting for the ROOT compression tasks to complete, it may decide to; /// run another one of the user's tasks in this thread. If the second user task; /// tries to acquire A, then a deadlock will occur. The example call sequence; /// looks like this:; ///; /// - User acquires mutex A; /// - User calls FlushBaskets.; /// - ROOT launches N tasks and calls wait.; /// - TBB schedules another user task, T2.; /// - T2 tries to acquire mutex A.; ///; /// At this point, the thread will deadlock: the code may function with IMT-mode; /// disabled if the user assumed the legacy code never would run their own TBB; /// tasks.; ///; /// SO: users of TBB who want to enable IMT-mode should carefully review their; /// locking patterns and make sure they hold no coarse-grained application; /// locks when they invoke ROOT.; ///; /// Return the number of bytes written or -1 in case of write error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1565,error,error,1565,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// Writes checksum in ASCII format to specified file. This file can; /// directly be read by ReadChecksum(). The md5 must have been finalized.; /// Returns -1 in case file cannot be opened or in case of error,; /// 0 otherwise. Static utility function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:286,error,error,286,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// [Draw 1D histograms error bars.](\ref HP09)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:106,error,error,106,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a class.; /// user must delete.; /// returns 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:121,error,error,121,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a variable.; /// user must delete.; /// returns 0 in case of error.; /// if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; /// context sensitive behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:121,error,error,121,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Print the content of the object; ///; /// Prints the statistics held by the object in one line. These include the mean,; /// mean error, RMS, the total number of values, the minimum and the maximum.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx:223,error,error,223,math/mathcore/src/TStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TStatistic.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Read a basket of events into the given buffer with byte swapping.; ///; /// \return On success, the number of events of the type held by this branch; /// that have been read into the buffer. -1 on failure.; ///; /// On success, the caller should be able to access the contents of buf as they; /// are with:; ///; /// ~~~{.cpp}; /// static_cast<T*>(buf.GetCurrent()); /// ~~~; ///; /// where T is the type stored on this branch.; ///; /// When `count_buf` points to a valid TBuffer and the branch has a branch count,; /// `count_buf` will be filled (via a call to GetEntriesSerialized) with the data; /// from the branchCount. After deserialization those value can be used to calculate; /// the number of elements corresponding to each entries.; ///; /// For each entry the number of elements is the multiplication of; /// ; /// ~~~{.cpp}; /// TLeaf *leaf = static_cast<TLeaf*>(branch->GetListOfLeaves()->At(0));; /// auto len = leaf->GetLen();; /// ~~~; ///; /// and the value in the BranchCount corresponding to that entry (can be obtained; /// from `branch->GetBranchCount()`).; ///; /// \note This interface is not meant to be exposed to end users, but rather it should; /// be wrapped by higher-level interfaces.; ///; /// \note See TBranch::GetEntriesSerialized() for an alternative that does not; /// perform byte swapping (useful to save one pass over data in some cases).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:290,failure,failure,290,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Read a basket of events into the given buffer without byte swapping.; ///; /// \return On success, the number of events of the type held by this branch; /// that have been read into the buffer. -1 on failure.; ///; /// On success, the caller still need to deserialize the content. For example for; /// a scalar branch and `N` the return value (i.e. number of entries); ///; /// ~~~{.cpp}; /// rawdata = static_cast<char*>(buf.GetCurrent());; /// for (std::size_t i = 0u; i < N; ++i, ++target); /// frombuf(rawdata, target); // `frombuf` also advances the `rawdata` pointer; /// ~~~; ///; /// where target is a pointer or array to the type stored on this branch.; ///; /// When `count_buf` points to a valid TBuffer and the branch has a branch count,; /// `count_buf` will be filled (via a call to GetEntriesSerialized()) with the data; /// from the branchCount. After deserialization those value can be used to calculate; /// the number of elements corresponding to each entries.; ///; /// For each entry the number of elements is the multiplication of; ///; /// ~~~{.cpp}; /// TLeaf *leaf = dynamic_cast<TLeaf*>(branch->GetListOfLeaves()->At(0));; /// auto len = leaf->GetLen();; /// ~~~; ///; /// and the value in the BranchCount corresponding to that entry (can be obtained; /// from `branch->GetBranchCount()`).; ///; /// \note This interface is not meant to be exposed to end users, but rather it should; /// be wrapped by higher-level interfaces.; ///; /// \note See TBranch::GetBulkEntries() for an alternative that also performs byte swapping.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:293,failure,failure,293,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:355,error,error,355,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Specify where web graphics shall be rendered; ///; /// The input parameter `webdisplay` defines where web graphics is rendered.; /// `webdisplay` parameter may contain:; ///; /// - ""firefox"": select Mozilla Firefox browser for interactive web display; /// - ""chrome"": select Google Chrome browser for interactive web display; /// - ""edge"": select Microsoft Edge browser for interactive web display; /// - ""native"": select one of the natively-supported web browsers firefox/chrome/edge for interactive web display; /// - ""qt5"": uses QWebEngine from Qt5, no real http server started (requires `qt5web` component build for ROOT); /// - ""qt6"": uses QWebEngine from Qt6, no real http server started (requires `qt6web` component build for ROOT); /// - ""cef"": uses Chromium Embeded Framework, no real http server started (requires `cefweb` component build for ROOT); /// - ""local"": select on of available local (without http server) engines like qt5/qt6/cef; /// - ""default"": system default web browser, invoked with `xdg-open` on Linux, `start` on Mac or `open` on Windows; /// - ""on"": try ""local"", then ""native"", then ""default"" option; /// - ""off"": turns off the web display and comes back to normal graphics in; /// interactive mode.; /// - ""server:port"": turns the web display into server mode with specified port. Web widgets will not be displayed,; /// only text message with window URL will be printed on standard output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:981,avail,available,981,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Static function creating a color palette based on an input text file.; ///; /// Every color in the file will take the same amount of space in the palette.; ///; /// \see https://doi.org/10.1038/s41467-020-19160-7; /// \note This function is designed to load into ROOT the colour-vision; /// deficiency friendly and perceptually uniform colour maps specially designed; /// in https://doi.org/10.5281/zenodo.4491293, namely the .txt files stored; /// in the subfolders of ScientificColourMaps7.zip, e.g. batlow/batlow.txt; ///; /// \param fileName: Name of a .txt file (ASCII) containing three floats per; /// line, separated by spaces, namely the r g b fractions of the color, each; /// value being in the range [0,1].; /// \param alpha the global opacity for all colors within this palette; /// \return a positive value on success and -1 on error.; /// \author Fernando Hueso-González",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:934,error,error,934,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \brief THnBase::GetBinCenter; /// \param idx an array of bin index in each dimension.; /// \return vector of bin centers in each dimension; empty in case of error.; /// \note Throws error if size is different from nDimensions.; /// \sa GetAxis(dim)::GetBinCenter(idx) as an alternative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:243,error,error,243,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \class TCollectionMethodBrowsable; /// \ingroup tree; ///; /// TCollectionMethodBrowsable extends TCollectionPropertyBrowsable by showing; /// all methods of the collection itself. If none are available - e.g. for STL; /// classes like std::list, a TVirtualBranchBrowsable object is created instead.; /// The methods' names will have a ""@"" prepended, to distinguish them from the; /// contained elements' methods.; ///; /// This browser helper object is not part of the default list of registered; /// generators (see TVirtualBranchBrowsable::RegisterDefaultGenerators()).; /// If you want to use it, you should call; /// TCollectionMethodBrowsable::Register();; /// As it extends the functionality of TVirtualBranchBrowsable, one might want; /// to unregister the generator of the ""@size()"" method by calling; /// TCollectionPropertyBrowsable::Unregister();; ////////////////////////////////////////////////////////////////////////////////; /// Constructor, see TMethodBrowsable's constructor.; /// Prepends ""@"" to the name to make this method work on the container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:279,avail,available,279,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \class TMethodBrowsable; /// \ingroup tree; ///; /// This helper object allows the browsing of methods of objects stored in; /// branches. They will be depicted by a leaf (or a branch, in case the method; /// returns an object) with a red exclamation mark. Only a subset of all; /// methods will be shown in the browser (see IsMethodBrowsable for the; /// criteria a method has to satisfy).; ///; /// Obviously, methods are only available if the library is loaded which; /// contains the dictionary for the class to be browsed!; ///; /// If a branch contains a collection, TMethodBrowsable tries to find out; /// what the contained element is (it will only create methods for the; /// contained elements, but never for the collection). If it fails to extract; /// the type of the contained elements, or if there is no guarantee that the; /// type has any other common denominator than TObject (e.g. in the case of; /// a TObjArray, which can hold any object deriving from TObject) no methods; /// will be added.; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.; /// Links a TBranchElement to a TMethod, allowing the TBrowser to; /// browse simple methods.; ///; /// The c'tor sets the name for a method ""Class::Method(params) const""; /// to ""Method(params)"", title to TMethod::GetPrototype",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:515,avail,available,515,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(ErrorType); /// \param etype error type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:119,Error,ErrorType,119,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,"['Error', 'error']","['ErrorType', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(double&,double&,RooAbsData::ErrorType) const; /// \param etype error type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:147,Error,ErrorType,147,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,"['Error', 'error']","['ErrorType', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// adjust the weight based on the error field all ready calculated by CalculateDelta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx:117,error,error,117,tmva/tmva/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// after the critical \f$ \alpha \f$ values (at which the corresponding nodes would; /// be pruned away) had been established in the ""InitMetaData"" we need now:; /// automatic pruning:; ///; /// find the value of \f$ \alpha \f$ for which the test sample gives minimal error,; /// on the tree with all nodes pruned that have \f$ \alpha_{critical} < \alpha \f$,; /// fixed parameter pruning; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:351,error,error,351,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// assignment operator; /// NOTE: this class does not copy the contained result and; /// the HypoTestCalculator, but only the pointers; /// It requires the original HTI to be alive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:258,alive,alive,258,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['alive'],['alive']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// calculate error field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:96,error,error,96,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the area (integral) under the ROC curve as a; /// overall quality measure of the classification; ///; /// making pdfs out of the MVA-output distributions doesn't work; /// reliably for cases where the MVA-output isn't a smooth distribution.; /// this happens ""frequently"" in BDTs for example when the number of; /// trees is small resulting in only some discrete possible MVA output values.; /// (I still leave the code here, but use this with care!!! The default; /// however is to use the distributions!!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:268,reliab,reliably,268,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['reliab'],['reliably']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the expected statistical error on the subtree below ""node""; /// which is used in the expected error pruning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:121,error,error,121,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// calculate/adjust the error field for this synapse",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx:107,error,error,107,tmva/tmva/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// compute \f$CL_{b}\f$ error; /// \f$CL_{b}\f$ = 1 - NullPValue(); /// must use opposite condition that routine above",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:107,error,error,107,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// converts string to integer.; /// if error, returns default value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLSetup.cxx:122,error,error,122,io/xml/src/TXMLSetup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLSetup.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// copy-constructor; /// NOTE: this class does not copy the contained result and; /// the HypoTestCalculator, but only the pointers; /// It requires the original HTI to be alive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:255,alive,alive,255,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['alive'],['alive']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// ctor. Important: both pixmaps pxmap and mask must be unique (not shared)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGPicture.cxx:126,mask,mask,126,gui/gui/src/TGPicture.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGPicture.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// debug function for printing event mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:120,mask,mask,120,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// declare options available for this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:102,avail,available,102,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string.; ///; /// know options:; /// - Method `<string>` Minimisation method. Available values are:; /// - MC Monte Carlo `<default>`; /// - GA Genetic Algorithm; /// - SA Simulated annealing; ///; /// - EffMethod `<string>` Efficiency selection method. Available values are:; /// - EffSel `<default>`; /// - EffPDF; ///; /// - VarProp `<string>` Property of variable 1 for the MC method (taking precedence over the; /// globale setting. The same values as for the global option are available. Variables 1..10 can be; /// set this way; ///; /// - CutRangeMin/Max `<float>` user-defined ranges in which cuts are varied",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:231,Avail,Available,231,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,3,"['Avail', 'avail']","['Available', 'available']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string.; ///; /// know options:; /// - VolumeRangeMode `<string>` Method to determine volume range; /// available values are:; /// - MinMax; /// - Unscaled; /// - RMS; /// - kNN; /// - Adaptive `<default>`; ///; /// - KernelEstimator `<string>` Kernel estimation function; /// available values are:; /// - Box `<default>`; /// - Sphere; /// - Teepee; /// - Gauss; /// - Sinc3; /// - Sinc5; /// - Sinc7; /// - Sinc9; /// - Sinc11; /// - Lanczos2; /// - Lanczos3; /// - Lanczos5; /// - Lanczos8; /// - Trim; ///; /// - DeltaFrac `<float>` Ratio of #%EventsMin/#%EventsMax for MinMax and RMS volume range; /// - NEventsMin `<int>` Minimum number of events for adaptive volume range; /// - NEventsMax `<int>` Maximum number of events for adaptive volume range; /// - MaxVIterations `<int>` Maximum number of iterations for adaptive volume range; /// - InitialScale `<float>` Initial scale for adaptive volume range; /// - GaussSigma `<float>` Width with respect to the volume size of Gaussian kernel estimator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:257,avail,available,257,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// know options.; ///; /// #### general; ///; /// - RuleFitModule `<string>`; /// available values are:; /// - RFTMVA - use TMVA implementation; /// - RFFriedman - use Friedmans original implementation; ///; /// #### Path search (fitting); ///; /// - GDTau `<float>` gradient-directed path: fit threshold, default; /// - GDTauPrec `<float>` gradient-directed path: precision of estimated tau; /// - GDStep `<float>` gradient-directed path: step size; /// - GDNSteps `<float>` gradient-directed path: number of steps; /// - GDErrScale `<float>` stop scan when error>scale*errmin; ///; /// #### Tree generation; ///; /// - fEventsMin `<float>` minimum fraction of events in a splittable node; /// - fEventsMax `<float>` maximum fraction of events in a splittable node; /// - nTrees `<float>` number of trees in forest.; /// - ForestType `<string>`; /// available values are:; /// - Random - create forest using random subsample and only random variables subset at each node; /// - AdaBoost - create forest with boosted events; ///; /// #### Model creation; ///; /// - RuleMinDist `<float>` min distance allowed between rules; /// - MinImp `<float>` minimum rule importance accepted; /// - Model `<string>` model to be used; /// available values are:; /// - ModRuleLinear `<default>`; /// - ModRule; /// - ModLinear; ///; /// #### Friedmans module; ///; /// - RFWorkDir `<string>` directory where Friedmans module (rf_go.exe) is installed; /// - RFNrules `<int>` maximum number of rules allowed; /// - RFNendnodes `<int>` average number of end nodes in the forest of trees",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:244,avail,available,244,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,4,"['avail', 'error']","['available', 'error']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; ///; /// know options:; ///; /// - TrainingMethod `<string>` Training method; /// available values are:; /// - BP Back-Propagation `<default>`; /// - GA Genetic Algorithm (takes a LONG time); ///; /// - LearningRate `<float>` NN learning rate parameter; /// - DecayRate `<float>` Decay rate for learning parameter; /// - TestRate `<int>` Test for overtraining performed at each #%th epochs; ///; /// - BPMode `<string>` Back-propagation learning mode; /// available values are:; /// - sequential `<default>`; /// - batch; ///; /// - BatchSize `<int>` Batch size: number of events/batch, only set if in Batch Mode,; /// - -1 for BatchSize=number_of_events",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:243,avail,available,243,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// evaluate the chi2 contribution (residual term) only for data with no coord-errors; /// This function is used in the specialized least square algorithms like FUMILI or L.M.; /// if we have error on the coordinates the residual weight depends on the function value and; /// the approximation used by Fumili and Levenberg-Marquardt cannot be used.; /// Also the expected error and bin integral options should not be used in this case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx:161,error,errors,161,math/mathcore/src/FitUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// find the index corresponding at the poi value xvalue; /// If no points is found return -1; /// Note that a tolerance is used of 10^-12 to find the closest point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:193,toler,tolerance,193,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// function to return the error on the observed CLb value for the i-th entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:109,error,error,109,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// function to return the error on the observed CLs value for the i-th entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:109,error,error,109,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// function to return the error on the observed CLs+b value for the i-th entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:109,error,error,109,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// function to return the estimated error on the value of the confidence level for the i^th entry in the results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:119,error,error,119,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// get error field of post-neuron weighted by synapse weight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx:90,error,error,90,tmva/tmva/src/TSynapse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSynapse.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// initialise ""meta data"" for the pruning, like the ""costcomplexity"", the; /// critical alpha, the minimal alpha down the tree, etc... for each node!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:196,down,down,196,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// initialize the error fields of all pre-neurons; /// this method should only be called in batch mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:101,error,error,101,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// no ranking available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:97,avail,available,97,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// pStart points to a `<table>`. Compute the number of columns, the; /// minimum and maximum size for each column and the overall minimum; /// and maximum size for this table and store these value in the; /// pStart structure. Return a pointer to the `</table>` element,; /// or to NULL if there is no `</table>`.; ///; /// The min and max size for column N (where the leftmost column has; /// N==1) is pStart->fMinW[1] and pStart->fMaxW[1]. The pStart->fMinW[0]; /// and pStart->fMaxW[0] entries contain the minimum and maximum widths; /// of the whole table, including any cell padding, cell spacing,; /// border width and ""hspace"". The values of pStart->fMinW[I] for I>=1; /// do not contain any cell padding, cell spacing or border width.; /// Only pStart->fMinW[0] contains these extra spaces.; ///; /// The back references from `</table>`, `</tr>`, `</td>` and `</th>` back to; /// the `<table>` markup are also filled in. And for each `<td>` and `<th>`; /// markup, the pTable and pEnd fields are set to their proper values.; ///; /// pStart - The `<table>` markup; /// lineWidth - Total width available to the table",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx:1184,avail,available,1184,gui/guihtml/src/TGHtmlTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// pass a single validation event through a pruned decision tree; /// on the way down the tree, fill in all the ""intermediate"" information; /// that would normally be there from training.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:164,down,down,164,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// performs TMlpANN training; /// available learning methods:; ///; /// - TMultiLayerPerceptron::kStochastic; /// - TMultiLayerPerceptron::kBatch; /// - TMultiLayerPerceptron::kSteepestDescent; /// - TMultiLayerPerceptron::kRibierePolak; /// - TMultiLayerPerceptron::kFletcherReeves; /// - TMultiLayerPerceptron::kBFGS; ///; /// TMultiLayerPerceptron wants test and training tree at once; /// so merge the training and testing trees from the MVA factory first:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:117,avail,available,117,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// process civetweb log message, can be used to detect critical errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:147,error,errors,147,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// rand() implementation using /udev/random or /dev/random, if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:146,avail,available,146,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,2,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// read keys for specified directory (when update == kFALSE); /// or update value for modified keys when update == kTRUE; /// Returns number of successfully read keys or -1 if error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:259,error,error,259,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// read object derived from TObject class, from key; /// if it is not TObject or in case of error, return nullptr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx:175,error,error,175,io/xml/src/TKeyXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TKeyXML.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// reads a float value with the available precision from a stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:115,avail,available,115,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// reads in at most one less than len characters from open; /// descriptor fd and stores them into the buffer pointed to by buf.; /// Reading stops after an EOF or a newline. If a newline is; /// read, it is stored into the buffer.; /// A '\0' is stored after the last character in the buffer.; /// The number of characters read is returned (newline included).; /// Returns < 0 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:472,error,error,472,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// recursive pruning of nodes using the Expected Error Pruning (EEP)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx:132,Error,Error,132,tmva/tmva/src/ExpectedErrorPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ExpectedErrorPruneTool.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// reset error fields",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:92,error,error,92,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// return current errors for a parameter; /// - ipar : parameter number; /// - eplus : upper error; /// - eminus : lower error; /// - eparab : parabolic error; /// - globcc : global correlation coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx:101,error,errors,101,tmva/tmva/src/MinuitWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// return current errors for a parameter; /// ipar : parameter number; /// eplus : upper error; /// eminus : lower error; /// eparab : parabolic error; /// globcc : global correlation coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:101,error,errors,101,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,4,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// return current values for a parameter; ///; /// - ipar : parameter number; /// - parname : parameter name; /// - value : initial parameter value; /// - verr : initial error for this parameter; /// - vlow : lower value for the parameter; /// - vhigh : upper value for the parameter; ///; /// WARNING! parname must be suitably dimensioned in the calling function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:253,error,error,253,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// return error of parameter ipar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:93,error,error,93,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// return parameter value and error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:113,error,error,113,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns *num*-th parameter from brackets in the expression; /// in case of an error (wrong number) returns 0.0; /// num - number of parameter (counted from 0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:164,error,error,164,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns error code of last operation; /// if res==0, no error; /// Each specific implementation of TSQLServer provides its own error coding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:94,error,error,94,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns error code of last operation; /// if res==0, no error; /// Each specific implementation of TSQLStatement provides its own error coding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:94,error,error,94,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns error message of last operation; /// if no errors, return 0; /// Each specific implementation of TSQLServer provides its own error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:94,error,error,94,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns error message of last operation; /// if no errors, return 0; /// Each specific implementation of TSQLStatement provides its own error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:94,error,error,94,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns the index of the terminal node to which point belongs; /// (index in the fAxis, fValue, etc arrays); /// returns -1 in case of failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:221,failure,failure,221,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// returns true if the *num*-th parameter was specified; /// otherwise returns fFALSE; /// in case of an error (wrong num) prints an error message and; /// returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:188,error,error,188,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// send ping messsage to server thread",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:91,ping,ping,91,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,1,['ping'],['ping']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set default level down to which visualization is performed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:104,down,down,104,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set drawing mode :; /// - option=0 (default) all nodes drawn down to vislevel; /// - option=1 leaves and nodes at vislevel drawn; /// - option=2 path is drawn; /// - option=4 visibility changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:147,down,down,147,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set error, this should only be done for an output neuron",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:90,error,error,90,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set initial values for a parameter; /// - ipar : parameter number; /// - parname : parameter name; /// - value : initial parameter value; /// - verr : initial error for this parameter; /// - vlow : lower value for the parameter; /// - vhigh : upper value for the parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx:245,error,error,245,tmva/tmva/src/MinuitWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set initial values for a parameter; ///; /// - ipar : parameter number; /// - parname : parameter name; /// - value : initial parameter value; /// - verr : initial error for this parameter; /// - vlow : lower value for the parameter; /// - vhigh : upper value for the parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:250,error,error,250,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set new values for error fields; /// if method is specified, displays error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:105,error,error,105,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set new values for error fields; /// if method specified, displays error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:105,error,error,105,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// set the integration type (possible type are) :; ///; /// - 1D integration ( used when only one nuisance and when the posterior is scanned):; /// adaptive , gauss, nonadaptive; /// - multidim:; /// - ADAPTIVE, adaptive numerical integration; /// The parameter numIters (settable with SetNumIters) is the max number of function calls.; /// It can be reduced to make the integration faster but it will be difficult to reach the required tolerance; /// - VEGAS MC integration method based on importance sampling - numIters is number of function calls; /// Extra Vegas parameter can be set using IntegratorMultiDimOptions class; /// - MISER MC integration method based on stratified sampling; /// See also http://en.wikipedia.org/wiki/Monte_Carlo_integration for VEGAS and MISER description; /// - PLAIN simple MC integration method, where the max number of calls can be specified using SetNumIters(numIters); ///; /// Extra integration types are:; ///; /// - TOYMC:; /// evaluate posterior by generating toy MC for the nuisance parameters. It is a MC; /// integration, where the function is sampled according to the nuisance. It is convenient to use when all; /// the nuisance are uncorrelated and it is efficient to generate them; /// The toy are generated by default for each poi values; /// (this method has been proposed and provided by J.P Chou); /// - 1-TOYMC : same method as before but in this case the toys are generated only one time and then used for; /// each poi value. It can be convenient when the generation time is much larger than the evaluation time,; /// otherwise it is recommended to re-generate the toy for each poi scanned point of the posterior function; /// - ROOFIT:; /// use roofit default integration methods which will produce a nested integral (not recommended for more; /// than 1 nuisance parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:520,toler,tolerance,520,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// several possibilities:; /// no prior nuisance given and no nuisance parameters: ok; /// no prior nuisance given but nuisance parameters: error; /// prior nuisance given for some nuisance parameters:; /// - nuisance parameters are constant, so they don't float in test statistic; /// - nuisance parameters are floating, so they do float in test statistic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestCalculatorGeneric.cxx:223,error,error,223,roofit/roostats/src/HypoTestCalculatorGeneric.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestCalculatorGeneric.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// static function returning the machine round-off error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx:134,error,error,134,geom/geom/src/TGeoShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoShape.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// static: Return the Error Definition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:105,Error,Error,105,hist/hist/src/TVirtualFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// static: Set the Error Definition (default=1); /// For Minuit this is the value passed with the ""SET ERR"" command; /// (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:102,Error,Error,102,hist/hist/src/TVirtualFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx,1,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// static: Set the tolerance used in the minimization algorithm; /// For example for MIGRAD this is tolerance value passed as second argument; /// (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx:102,toler,tolerance,102,hist/hist/src/TVirtualFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TVirtualFitter.cxx,2,['toler'],['tolerance']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// statistical error estimate for RS estimator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:98,error,error,98,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// submit ""ROLLBACK TRANSACTION"" query to database; /// return kTRUE, if successful",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx:94,ROLLBACK,ROLLBACK,94,sql/sqlite/src/TSQLiteServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/sqlite/src/TSQLiteServer.cxx,1,['ROLLBACK'],['ROLLBACK']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// submit ""ROLLBACK"" query to database; /// return kTRUE, if successful",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:94,ROLLBACK,ROLLBACK,94,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['ROLLBACK'],['ROLLBACK']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// the option string is decoded, for available options see ""DeclareOptions""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:120,avail,available,120,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,4,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// update synapse error fields and adjust the weights (if in sequential mode)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:101,error,error,101,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// updates the pvalue if sufficient data is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:127,avail,available,127,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; /// writes a float value with the available precision to a stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:116,avail,available,116,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////; /// Cleanup type description, redundant blanks removed; /// and redundant tail ignored; /// return *tail = pointer to last used character; /// if (mode==0) keep keywords; /// if (mode==1) remove keywords outside the template params; /// if (mode>=2) remove the keywords everywhere.; /// if (tail!=0) cut before the trailing *; ///; /// The keywords currently are: ""const"" , ""volatile"" removed; ///; ///; /// CleanType("" A<B, C< D, E> > *,F,G>"") returns ""A<B,C<D,E> >*""; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:190,redundant,redundant,190,core/foundation/src/TClassEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx,2,['redundant'],['redundant']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///1. Test if X11 supports shape combine mask.; ///2.a if no - go to 3.; ///2.b If yes - try to read both background image; /// and the mask. If any of operations failed - go to 3.; /// If both succeeded - return true.; ///3. Try to read image without transparency (mask not needed anymore).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:123,mask,mask,123,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,3,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Estimates the error rate with the current set of parameters; /// It uses a binary estimate of (y-F*(x)); /// (y-F*(x)) = (Num of events where sign(F)!=sign(y))/Neve; /// y = {+1 if event is signal, -1 otherwise}; /// --- NOT USED ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:105,error,error,105,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Execute MINUIT commands. MINImize, SIMplex, MIGrad and FUMili all; /// will call TFumili::Minimize method.; ///; /// For full command list see; /// MINUIT. Reference Manual. CERN Program Library Long Writeup D506.; ///; /// Improvement and errors calculation are not yet implemented as well; /// as Monte-Carlo seeking and minimization.; /// Contour commands are also unsupported.; ///; /// - command : command string; /// - args : array of arguments; /// - nargs : number of arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:331,error,errors,331,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Resets all parameter names, values and errors to zero; ///; /// Argument opt is ignored; ///; /// NB: this procedure doesn't reset parameter limits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:130,error,errors,130,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Returns all datasets for the `<group>` and `<user>` specified by `<uri>`.; /// If `<user>` is 0, it returns all datasets for the given `<group>`.; /// If `<group>` is 0, it returns all datasets.; /// The returned TMap contains:; /// `<group>` --> `<map of users>` --> `<map of datasets>` --> `<dataset>` (TFileCollection); ///; /// The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; /// Available options (to be .or.ed):; /// kShowDefault a default selection is shown that include the ones from; /// the current user, the ones from the group and the common ones; /// kPrint print the dataset content; /// kQuotaUpdate update quotas; /// kExport use export naming; ///; /// NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; /// NB2: for options ""kPrint"" and ""kQuoatUpdate"" return is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:500,Avail,Available,500,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,2,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:525,error,error,525,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,5,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:502,error,error,502,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,7,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Writes indicated dataset.; /// If option has the bit kFileMustExist set, the file must still exist,; /// otherwise the new dataset is not written (returns 3 in this case).; /// If checksum is non-zero the files current checksum is checked against it,; /// if it does not match the file is not written (the function returns 2 in this; /// case, if the file has disappeared it is also not written (i.e. checksum; /// implies the bit kFileMustExist set in option).; /// Returns != 0 for success, 0 for error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:590,error,error,590,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Adds 1 point to the fitter.; ///First parameter stands for the coordinates of the point, where the function is measured; ///Second parameter - the value being fitted; ///Third parameter - weight(measurement error) of this point (=1 by default)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:292,error,error,292,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Calculates robust distances.Then the samples with robust distances; ///greater than a cutoff value (0.975 quantile of chi2 distribution with; ///fNvar degrees of freedom, multiplied by a correction factor), are given; ///weiht=0, and new, reweighted estimates of location and scatter are calculated; ///The function returns the number of outliers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:96,robust,robust,96,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,2,['robust'],['robust']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Computes confidence intervals at level cl. Default is 0.95; ///The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH123.; ///For Graphs, confidence intervals are computed for each point,; ///the value of the graph at that point is set to the function value at that; ///point, and the graph y-errors (or z-errors) are set to the value of; ///the confidence interval at that point; ///For Histograms, confidence intervals are computed for each bin center; ///The bin content of this bin is then set to the function value at the bin; ///center, and the bin error is set to the confidence interval value.; ///Allowed combinations:; ///Fitted object Passed object; ///TGraph TGraphErrors, TH1; ///TGraphErrors, AsymmErrors TGraphErrors, TH1; ///TH1 TGraphErrors, TH1; ///TGraph2D TGraph2DErrors, TH2; ///TGraph2DErrors TGraph2DErrors, TH2; ///TH2 TGraph2DErrors, TH2; ///TH3 TH3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:393,error,errors,393,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Creates the fftw-plan; ///; ///NOTE: input and output arrays are overwritten during initialisation,; /// so don't set any points, before running this function!!!!!; ///; /// #### 1st parameter:; /// Possible flag_options:; ///; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; ///; /// This option should be chosen depending on how many transforms of the same size and; /// type are going to be done. Planning is only done once, for the first transform of this; /// size and type.; ///; /// #### 2nd parameter:; /// is dummy and doesn't need to be specified; ///; /// #### 3rd parameter:; /// transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DSTIII - kind=6; /// - DSTIV - kind=7",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx:1080,avail,available,1080,math/fftw/src/TFFTReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Find kNN nearest neighbors to the point in the first argument; ///Returns 1 on success, 0 on failure; ///Arrays ind and dist are provided by the user and are assumed to be at least kNN elements long",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:178,failure,failure,178,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///For robust lts fitting, returns the sample, on which the best fit was based",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:89,robust,robust,89,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['robust'],['robust']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///From original version.; /// Main event loop waiting till time arrives to pop down logo; /// or when forced by button press event.; ///From me: this even loop seems to be quite twisted and ugly.; ///The original code does not work now though - event queue is; ///growing and at some point you already not able to extract a; ///button press event (for example) and close a splashscreen window.; ///With my first version I also had problems - somehow I was missing; ///the first expose event (from time to time).; ///Now I empty the event queue on every iteration (selecting; ///interesting events only).; ///Why original version ignore this - I have no idea.; ///We have at least NoExpose events in a queue (generated by XCopyArea); ///and somebody obviously have to remove them eventually.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:162,down,down,162,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Generate files for IO-bound run; ///Input parameters; /// filename: The name of the file to be generated; /// sizenevents: Either the number of events to generate when; /// filetype==kPBFileBenchmark; /// or the size of the file to generate when; /// filetype==kPBFileCleanup; ///Returns; /// Either Number of entries in the file when; /// filetype==kPBFileBenchmark; /// or bytes written when filetype==kPBFileCleanup; ///return 0 in case error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx:525,error,error,525,proof/proofbench/src/TSelEventGen.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofbench/src/TSelEventGen.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Merge all histograms in the collection in this histogram.; ///; /// This function computes the min/max for the x axis,; /// compute a new number of bins, if necessary,; /// add bin contents, errors and statistics.; /// If overflows are present and limits are different the function will fail.; /// The function returns the total number of entries in the result histogram; /// if the merge is successful, -1 otherwise.; ///; /// IMPORTANT remark. The axis x may have different number; /// of bins and different limits, BUT the largest bin width must be; /// a multiple of the smallest bin width and the upper limit must also; /// be a multiple of the bin width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:276,error,errors,276,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Mouse down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TArcBall.cxx:91,down,down,91,graf3d/gl/src/TArcBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TArcBall.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///ROOT is ready to run, may pop down the logo if stay up time expires.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:115,down,down,115,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['down'],['down']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:423,avail,available,423,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:407,Avail,Available,407,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['Avail'],['Available']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Returns parameter errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:103,error,errors,103,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Returns the error of parameter `#ipar`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:97,error,error,97,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Returns the output (or input) array; /// we have 4 different cases:; ///; /// - fromInput = false; fOut = !NULL (transformed is not in place) : return fOut; /// - fromInput = false; fOut = NULL (transformed is in place) : return fIn; /// - fromInput = true; fOut = !NULL : return fIn; /// - fromInput = true; fOut = NULL return an error since input array is overwritten",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx:416,error,error,416,math/fftw/src/TFFTReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Splashscreen background image and (probably) a mask (if we want to use; ///shape combine - non-rect window).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:132,mask,mask,132,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['mask'],['mask']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///Surface is defined by three strings.; ///ROOT does not use exceptions in ctors,; ///so, I have to use MakeZombie to let; ///external user know about errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLParametric.cxx:234,error,errors,234,graf3d/gl/src/TGLParametric.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLParametric.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// calling ""NoMsg( errorLevel )"",; /// sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; /// all errors with ""level < errorLevel"" will be ignored.; ///; /// calling the function with a negative argument; /// (e.g., ""NoMsg( -1 )""); /// resets gErrorIgnoreLevel to its previous value.; ///; ///////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:166,error,errorLevel,166,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,4,['error'],"['errorLevel', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// returns a colon-separated string of directories; /// that CINT will search when you call `#include<...>`; ///; /// returns empty string on failure.; ///; ////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:289,failure,failure,289,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///\returns true if the module map was loaded, false on error or if the map was; /// already loaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:138,error,error,138,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///interface to TTreeCache to set the cache entry range; ///; /// Returns:; /// - 0 entry range set; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:195,error,error,195,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////////; ///returns the robust distances (helps to find outliers)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:97,robust,robust,97,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability,"///////////////////////////////////////////////////////////////////////////////; // Returns the DeclContext corresponding to fMethod's Decl.; // \Note that this might be a FunctionDecl or a UsingShadowDecl; we use the; // DeclContext of the UsingShadowDecl e.g. for constructing a derived class; // object, even if invoking a function made available by a using declaration; // of a constructor of a base class (ROOT-11010).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:340,avail,available,340,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['avail'],['available']
Availability,"///////////////////////////////////////////////////////////////////////////////; /// Convert strings like the following into byte counts; /// 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB, 3.7GiB, 5MiB; /// with some amount of forgiveness baked into the parsing.; /// For this routine we use the official SI unit where the [i] is reserved; /// for the 'legacy' power of two units. 1KB = 1000 bytes, 1KiB = 1024 bytes.; /// \param str the string to be parsed; /// \param value will be updated with the result if and only if the parse is successful and does not overflow for the type of value.; /// \return return a EFromHumanReadableSize enum value indicating the success or failure of the parse.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx:662,failure,failure,662,core/base/inc/ROOT/StringConv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx,1,['failure'],['failure']
Availability,"///////////////////////////////////////////////////////////////////////////////; /// Execute Python code from string; ///; /// \param[in] code Python code as string; /// \param[in] errorMessage Error message which shall be shown if the execution fails; /// \param[in] start Start symbol; ///; /// Helper function to run python code from string in local namespace with; /// error handling; /// `start` defines the start symbol defined in PyRun_String (Py_eval_input,; /// Py_single_input, Py_file_input)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:181,error,errorMessage,181,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,3,"['Error', 'error']","['Error', 'error', 'errorMessage']"
Availability,"///////////////////////////////////////////////////////////////////////////////; /// Execute Python code from string; ///; /// \param[in] code Python code as string; /// \param[in] globalNS Global Namespace for Python Session; /// \param[in] localNS Local Namespace for Python Session; ///; /// Overloaded static Helper function to run python code; /// from string and throw runtime error if the Python session; /// is unable to execute the code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:383,error,error,383,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['error'],['error']
Availability,"///////////////////////////////////////////////////////////////////////////////; /// Helper to load a single object from a file-resident TFolder, while; /// avoiding memory leaks.; /// @tparam AObjType Type of object to load.; /// @param inFile input file to load from. Expected to be a valid pointer; /// @param folderName Name of the TFolder to load from the file; /// @param objName Name of the object to load; /// @param notFoundError If set, print a detailed error if we didn't find something; /// @return Returns a pointer to a clone of the loaded object. Ownership assigned to the caller.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:464,error,error,464,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['error'],['error']
Availability,"///////////////////////////////////////////////////////////////////////////////; /// Unserialize Python object; ///; /// \param[in] path Path to serialized Python object; /// \param[in] obj Python object where the unserialized Python object is loaded; /// \return Error code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:264,Error,Error,264,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['Error'],['Error']
Availability,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:773,error,error,773,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// This function is analogous to ExpandFileName(const char *), except that; /// it receives a TString reference of the pathname to be expanded.; /// Returns kTRUE in case of error and kFALSE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:333,error,error,333,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// Send exactly length bytes from buffer. Returns -1 in case of error,; /// otherwise number of sent bytes. Returns -4 in case of kNoBlock and; /// errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer; /// (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:144,error,error,144,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['error'],['error']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// Wait for events on the file descriptors specified in the readready and; /// writeready masks or for timeout (in milliseconds) to occur.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:170,mask,masks,170,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['mask'],['masks']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// Write down the sources",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx:89,down,down,89,core/foundation/src/RConversionRuleParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/RConversionRuleParser.cxx,1,['down'],['down']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Create a new RNTupleInspector.; ///; /// \param[in] sourceNTuple A pointer to the RNTuple to be inspected.; ///; /// \return A pointer to the newly created RNTupleInspector.; ///; /// \note When this factory method is called, all required static information is collected from the RNTuple's fields; /// and underlying columns are collected at ones. This means that when any inconsistencies are encountered (e.g.; /// inconsistent compression across clusters), it will throw an error here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleInspector.hxx:566,error,error,566,tree/ntupleutil/v7/inc/ROOT/RNTupleInspector.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleInspector.hxx,1,['error'],['error']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Given a IO feature string, set the corresponding feature; /// \param [in] value Feature name to test.; ///; /// This allows one to set a feature given a specific string from the; /// TBasket::EIOBits enum.; ///; /// *NOTE* this function is quite slow and users are strongly encouraged to; /// use the type-safe `Set` version instead. This has been added for better; /// CLI interfaces.; ///; /// Returns true only if a new feature was set; otherwise emits an error message; /// and returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:549,error,error,549,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,1,['error'],['error']
Availability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Returns the names of the available columns.; /// \return the container of column names.; ///; /// This is not an action nor a transformation, just a query to the RDataFrame object.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto colNames = d.GetColumnNames();; /// // Print columns' names; /// for (auto &&colName : colNames) std::cout << colName << std::endl;; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RInterfaceBase.cxx:115,avail,available,115,tree/dataframe/src/RInterfaceBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RInterfaceBase.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// Private method for pathname expansion.; /// Returns kTRUE in case of error and kFALSE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:151,error,error,151,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////; /// Returns a range of size 1 as long as more rows are available in the SQL result set.; /// This inherently serialized the RDF independent of the number of slots.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:133,avail,available,133,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// We do not write to a database in the RDataSource and therefore can simply return an error for this callback",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:166,error,error,166,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Add a new defined column.; /// Registers the pair (columnName, columnReader) with the current RDataFrame,; /// then keeps a reference to the inserted objects to keep track of the; /// available columns for this node. Internally it recreates the collection with; /// the new column, and swaps it with the old one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx:273,avail,available,273,tree/dataframe/src/RDFColumnRegister.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Allow to refer to a column with a different name.; /// \param[in] alias name of the column alias; /// \param[in] columnName of the column to be aliased; /// \return the first node of the computation graph for which the alias is available.; ///; /// Aliasing an alias is supported.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto df_with_alias = df.Alias(""simple_name"", ""very_long&complex_name!!!"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:317,avail,available,317,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Build a RInterface from a RLoopManager.; /// This constructor is only available for RInterface<RLoopManager>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:159,avail,available,159,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Build the dataframe.; /// \param[in] tree The tree or chain to be studied.; /// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; ///; /// The default columns are looked at in case no column is specified in the; /// booking of actions or transformations.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:465,avail,available,465,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Build the dataframe.; /// \param[in] treeName Name of the tree contained in the directory; /// \param[in] dirPtr TDirectory where the tree is stored, e.g. a TFile.; /// \param[in] defaultColumns Collection of default columns.; ///; /// The default columns are looked at in case no column is specified in the; /// booking of actions or transformations.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:510,avail,available,510,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Build the dataframe.; /// \param[in] treeName Name of the tree contained in the directory; /// \param[in] fileglobs Collection of file names of filename globs; /// \param[in] defaultColumns Collection of default columns.; ///; /// The filename globs support the same type of expressions as TChain::Add(), and each glob is passed as-is; /// to TChain's constructor.; ///; /// The default columns are looked at in case no column is specified in the booking of actions or transformations.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:644,avail,available,644,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Build the dataframe.; /// \param[in] treeName Name of the tree contained in the directory; /// \param[in] filenameglob TDirectory where the tree is stored, e.g. a TFile.; /// \param[in] defaultColumns Collection of default columns.; ///; /// The filename glob supports the same type of expressions as TChain::Add(), and it is passed as-is to TChain's; /// constructor.; ///; /// The default columns are looked at in case no column is specified in the; /// booking of actions or transformations.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:653,avail,available,653,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Clear a specific IO feature from this set.; /// \param[in] input_bits The specific feature to disable.; ///; /// Removes a feature from the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:260,Error,Error,260,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,2,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a TGraphAsymmErrors object (*lazy action*).; /// \param[in] x The name of the column that will fill the x axis.; /// \param[in] y The name of the column that will fill the y axis.; /// \param[in] exl The name of the column of X low errors; /// \param[in] exh The name of the column of X high errors; /// \param[in] eyl The name of the column of Y low errors; /// \param[in] eyh The name of the column of Y high errors; /// \return the TGraphAsymmErrors wrapped in a RResultPtr.; ///; /// Columns can be of a container type (e.g. std::vector<double>), in which case the graph; /// is filled with each one of the elements of the container.; /// If Multithreading is enabled, the order in which points are inserted is undefined.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myGAE1 = myDf.GraphAsymmErrors(""xValues"", ""yValues"", ""exl"", ""exh"", ""eyl"", ""eyh"");; /// // Explicit column types; /// using f = float; /// auto myGAE2 = myDf.GraphAsymmErrors<f, f, f, f, f, f>(""xValues"", ""yValues"", ""exl"", ""exh"", ""eyl"", ""eyh"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned TGraphAsymmErrors is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:337,error,errors,337,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,4,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief In case the value in the given column is missing, provide a default value; /// \tparam T The type of the column; /// \param[in] column Column name where missing values should be replaced by the given default value; /// \param[in] defaultValue Value to provide instead of a missing value; /// \return The node of the graph that will provide a default value; ///; /// This operation is useful in case an entry of the dataset is incomplete,; /// i.e. if one or more of the columns do not have valid values. It does not; /// modify the values of the column, but in case any entry is missing, it; /// will provide the default value to downstream nodes instead.; ///; /// Use cases include:; /// * When processing multiple files, one or more of them is missing a column; /// * In horizontal joining with entry matching, a certain dataset has no; /// match for the current entry.; ///; /// ### Example usage:; ///; /// \code{.cpp}; /// // Assume a dataset with columns [idx, x] matching another dataset with; /// // columns [idx, y]. For idx == 42, the right-hand dataset has no match; /// ROOT::RDataFrame df{dataset};; /// auto df_default = df.DefaultValueFor(""y"", 33); /// .Define(""z"", [](int x, int y) { return x + y; }, {""x"", ""y""});; /// auto colz = df_default.Take<int>(""z"");; /// \endcode; ///; /// \code{.py}; /// df = ROOT.RDataFrame(dataset); /// df_default = df.DefaultValueFor(""y"", 33).Define(""z"", ""x + y""); /// colz = df_default.Take[int](""z""); /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:719,down,downstream,719,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['down'],['downstream']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:143,error,error,143,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Set a specific IO feature.; /// \param[in] input_bits The specific feature to enable.; ///; /// Sets a feature in the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.; ///; /// If the feature is supported by ROOT, this function returns true; otherwise,; /// it returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:238,Error,Error,238,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,2,['Error'],['Error']
Availability,"////////////////////////////////////////////////////////////////////////////; /// \brief Translate ROOT error/warning to Python.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:104,error,error,104,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // Bswapcpy //; // //; // Initial version: Apr 22, 2000 //; // //; // A set of inline byte swapping routines for arrays. //; // //; // The bswapcpy16() and bswapcpy32() routines are used for packing //; // arrays of basic types into a buffer in a byte swapped order. Use //; // of asm and the `bswap' opcode (available on i486 and up) reduces //; // byte swapping overhead on linux. //; // //; // Use of routines is similar to that of memcpy. //; // //; // ATTENTION: //; // //; // n - is a number of array elements to be copied and byteswapped. //; // (It is not the number of bytes!) //; // //; // Note: It is not safe to call these routines with n == 0. //; // //; // For arrays of short type (2 bytes in size) use bswapcpy16(). //; // For arrays of of 4-byte types (int, float) use bswapcpy32(). //; // //; // //; // Author: Alexandre V. Vaniachine <AVVaniachine@lbl.gov> //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h:392,avail,available,392,core/base/inc/Bswapcpy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:86,Error,Error,86,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,6,"['Error', 'error']","['Error', 'error', 'errorhanlder']"
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // GiniIndex //; // //; // Implementation of the GiniIndex as separation criterion //; // //; // Large Gini Indices (maximum 0.5) mean , that the sample is well //; // mixed (same amount of signal and bkg) //; // bkg. Small Indices mean, well separated. //; // general definition: //; // Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 //; // Where: M is a sample of whatever N elements (events) //; // that belong to K different classes //; // c(k) is the number of elements that belong to class k //; // for just Signal and Background classes this boils down to: //; // Gini(Sample) = 2s*b/(s+b)^2 //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h:654,down,down,654,tmva/tmva/inc/TMVA/GiniIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndex.h,1,['down'],['down']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // GiniIndexWithLaplace //; // //; // Implementation of the GiniIndex With Laplace correction //; // as separation criterion //; // //; // Large Gini Indices (maximum 0.5) mean , that the sample is well //; // mixed (same amount of signal and bkg) //; // bkg. Small Indices mean, well separated. //; // general definition: //; // Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 //; // Where: M is a sample of whatever N elements (events) //; // that belong to K different classes //; // c(k) is the number of elements that belong to class k //; // for just Signal and Background classes this boils down to: //; // The Laplace's correction to the probability distribution would //; // turn the c(1)/N into (c(1)+1)/(N+2) //; // using this the simple Gini Index for two classes //; // Gini(Sample) = 2s*b/(s+b)^2 //; // turns into //; // GiniLaplace(Sample) = 2(s*b+s+b+1)/(s+b+2)^2 //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h:696,down,down,696,tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/GiniIndexWithLaplace.h,1,['down'],['down']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // NetErrors //; // //; // This header file defines error codes generated by rootd/proofd. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/NetErrors.h:135,error,error,135,net/net/inc/NetErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/NetErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLOrthoCamera //; // //; // Orthographic projection camera. Currently limited to three types //; // defined at construction time - kXOY, kXOZ, kZOY - where this refers //; // to the viewport plane axis - e.g. kXOY has X axis horizontal, Y //; // vertical - i.e. looking down Z axis with Y vertical. //; //; // The plane types restriction could easily be removed to supported //; // arbitary ortho projections along any axis/orientation with free //; // rotations about them. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLOrthoCamera.h:357,down,down,357,graf3d/gl/inc/TGLOrthoCamera.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLOrthoCamera.h,1,['down'],['down']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLUtil //; // //; // Wrapper class for various misc static functions - error checking, //; // draw helpers etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h:158,error,error,158,graf3d/gl/inc/TGLUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraph2DAsymmErrors //; // //; // a 2D Graph with asymmetric error bars //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:147,error,error,147,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraph2DErrors //; // //; // a 2D Graph with error bars //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h:131,error,error,131,hist/hist/inc/TGraph2DErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraphAsymmErrors //; // //; // a Graph with asymmetric error bars //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphAsymmErrors.h:142,error,error,142,hist/hist/inc/TGraphAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphAsymmErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraphBentErrors //; // //; // a Graph with bent, asymmetric error bars //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphBentErrors.h:147,error,error,147,hist/hist/inc/TGraphBentErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphBentErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraphErrors //; // //; // a Graph with error bars //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphErrors.h:126,error,error,126,hist/hist/inc/TGraphErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphErrors.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TGraphMultiErrors //; // //; // a Graph with asymmetric error bars and multiple y errors //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:142,error,error,142,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,2,['error'],"['error', 'errors']"
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TMD5 //; // //; // This code implements the MD5 message-digest algorithm. //; // The algorithm is due to Ron Rivest. This code was //; // written by Colin Plumb in 1993, no copyright is claimed. //; // This code is in the public domain; do with it what you wish. //; // //; // Equivalent code is available from RSA Data Security, Inc. //; // This code has been tested against that, and is equivalent, //; // except that you don't need to include two pages of legalese //; // with every copy. //; // //; // To compute the message digest of a chunk of bytes, create an //; // TMD5 object, call Update() as needed on buffers full of bytes, and //; // then call Final(), which will, optionally, fill a supplied 16-byte //; // array with the digest. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h:382,avail,available,382,core/base/inc/TMD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TMath Base functions //; // //; // Define the functions Min, Max, Abs, Sign, Range for all types. //; // NB: These functions are unfortunately not available in a portable //; // way in std::. //; // //; // More functions are defined in TMath.h. TMathBase.h is designed to be //; // a stable file and used in place of TMath.h in the ROOT miniCore. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMathBase.h:233,avail,available,233,core/base/inc/TMathBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMathBase.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TMemoryRegulator //; // //; // Sets hooks in Cppyy's MemoryRegulator to keep track of the TObjects //; // that are constructed and destructed. For those objects, a map is //; // filled, where the key is the address of the object and the value is //; // the class to which the object belongs. //; // //; // The TMemoryRegulator object, created in PyROOTWrapper.cxx, is added //; // to the list of cleanups and its RecursiveRemove method is called by //; // ROOT to manage the memory of TObjects being deleted. //; // In RecursiveRemove, the object being deleted is already a TNamed, so //; // the information about its actual class is not available anymore. //; // To solve the problem, the map above is used to know the class of the //; // object, so that Cppyy's RecursiveRemove can be called passing the //; // class as argument. //; //////////////////////////////////////////////////////////////////////////; // Bindings; // CPyCppyy.h must be go first, since it includes Python.h, which must be; // included before any standard header",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:724,avail,available,724,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:444,error,error,444,core/gui/inc/TObjectSpy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TRandomGen; // @ingroup Random; // //; // Generic random number generator class which is template on the type //; // of engine. Using this class different random number generator all //; // implementing the TRandom interface can be built. //; // The available random number engine that can be presently used are //; // * ROOT::Math::MixMaxEngine to create random number generators //; // based on the MIXMAX family of generators. Different generators //; // can be created for different state N. //; // * ROOT::MATH::StdEngine to create genersators based on engines //; // provided by the C++ standard libraries; //; // Convenient typedef are defines to define the different types of; // generators. These typedef are; // * TRandomMixMax for the MixMaxEngine<240,0> (MIXMAX with state N=240); // * TRandomMixMax17 for the MixMaxEngine<17,0> (MIXMAX with state N=17); // * TRandomMixMax256 for the MixMaxEngine<256,2> (MIXMAX with state N=256 ); // * TRandomMT64 for the StdEngine<std::mt19937_64> ( MersenneTwister 64 bits); // * TRandomRanlux48 for the StdEngine<std::ranlux48> (Ranlux 48 bits); //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TRandomGen.h:336,avail,available,336,math/mathcore/inc/TRandomGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TRandomGen.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TRootIOCtor //; // //; // Helper class used to mark a constructor to be used by ROOT instead //; // of the default constructor. //; // If rootcint sees in a class declaration of the class MyClass: //; // MyClass(TRootIOCtor*); //; // This constructor will be used instead of the default constructor. //; // //; // Also the pragma: //; // #pragma link C++ ioctortype MyMarker; //; // can be used to tell rootcint that a constuctor taking a MyMarker* //; // should be used whenever available. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TRootIOCtor.h:566,avail,available,566,core/base/inc/TRootIOCtor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TRootIOCtor.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TStatistic //; // //; // Statistical variable, defined by its mean, RMS and related errors. //; // Named, streamable, storable and mergeable. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TStatistic.h:170,error,errors,170,math/mathcore/inc/TStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TStatistic.h,1,['error'],['errors']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:179,error,error,179,proof/proofplayer/inc/TStatus.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualGL //; // //; // The TVirtualGL class is an abstract base class defining the //; // OpenGL interface protocol. All interactions with OpenGL should be //; // done via the global pointer gVirtualGL. If the OpenGL library is //; // available this pointer is pointing to an instance of the TGLKernel //; // class which provides the actual interface to OpenGL. Using this //; // scheme of ABC we can use OpenGL in other parts of the framework //; // without having to link with the OpenGL library in case we don't //; // use the classes using OpenGL. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h:323,avail,available,323,core/base/inc/TVirtualGL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualMutex //; // //; // This class implements a mutex interface. The actual work is done via //; // TMutex which is available as soon as the thread library is loaded. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualMutex.h:206,avail,available,206,core/base/inc/TVirtualMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualMutex.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; // //; // rpderr //; // //; // This header file defines error codes generated by rootd/proofd. //; // NB: In case of change update also strings in net/inc/ErrStr.h //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpderr.h:132,error,error,132,net/rpdutils/res/rpderr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpderr.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; // TEntryListFromFile; //; // Manages entry lists from different files, when they are not loaded; // in memory at the same time.; //; // This entry list should only be used when processing a TChain (see; // TChain::SetEntryList() function). File naming convention:; // - by default, filename_elist.root is used, where filename is the; // name of the chain element.; // - xxx$xxx.root - $ sign is replaced by the name of the chain element; // If the list name is not specified (by passing filename_elist.root/listname to; // the TChain::SetEntryList() function, the first object of class TEntryList; // in the file is taken.; // It is assumed that there are as many lists, as there are chain elements,; // and they are in the same order.; //; // If one of the list files can't be opened, or there is an error reading a list; // from the file, this list is skipped and the entry loop continues on the next; // list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryListFromFile.h:878,error,error,878,tree/tree/inc/TEntryListFromFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TEntryListFromFile.h,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; /// Assert that presumedLocalReadersCount really matches the local read count.; /// Print an error message if not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:169,error,error,169,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,1,['error'],['error']
Availability,"//////////////////////////////////////////////////////////////////////////; /// Class destructor.; /// This method is in charge of shutting down any remaining worker,; /// closing off connections and reap the terminated children processes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:140,down,down,140,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['down'],['down']
Availability,"//////////////////////////////////////////////////////////////////////////; /// Create new display for the canvas; /// The parameter `where` specifies which program could be used for display creation; /// Possible values:; ///; /// - `cef` Chromium Embeded Framework, local display, local communication; /// - `qt5` Qt5 WebEngine (when running via rootqt5), local display, local communication; /// - `browser` default system web-browser, communication via random http port from range 8800 - 9800; /// - `<prog>` any program name which will be started instead of default browser, like firefox or /usr/bin/opera; /// one could also specify $url in program name, which will be replaced with canvas URL; /// - `native` either any available local display or default browser; ///; /// Canvas can be displayed in several different places",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx:726,avail,available,726,graf2d/gpadv7/src/RCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RCanvas.cxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; /// Error sender",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:80,Error,Error,80,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,1,['Error'],['Error']
Availability,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:490,avail,available,490,core/multiproc/src/MPSendRecv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; /// \brief Advance the processor to the next available entry.; ///; /// \return The new (global) entry number of after advancing, or kInvalidNTupleIndex if the last entry has been; /// processed.; ///; /// Checks if the end of the currently connected RNTuple is reached. If this is the case, either the next RNTuple; /// is connected or the iterator has reached the end.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleProcessor.hxx:121,avail,available,121,tree/ntuple/v7/inc/ROOT/RNTupleProcessor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleProcessor.hxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; /// \brief Build a dataframe that generates numEntries entries.; /// \param[in] numEntries The number of entries to generate.; ///; /// An empty-source dataframe constructed with a number of entries will; /// generate those entries on the fly when some action is triggered,; /// and it will do so for all the previously-defined columns.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:482,avail,available,482,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; /// \brief Build dataframe associated to data source.; /// \param[in] ds The data source object.; /// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; ///; /// A dataframe associated to a data source will query it to access column values.; /// \see ROOT::RDF::RInterface for the documentation of the methods available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:437,avail,available,437,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TExecutorCRTP; /// \brief This class defines an interface to execute the same task; /// multiple times, possibly in parallel and with different arguments every; /// time.; ///; /// ###ROOT::TExecutorCRTP<SubC>::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// The Map function forwards the call to MapImpl, to be implemented by the child classes.; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers, where n typically defaults to the number of available cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::TExecutorCRTP derived classes; /// never delete what they return, they simply forget it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func. The ordering of the elements corresponds to the ordering of; /// the argu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:791,avail,available,791,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:873,avail,available,873,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,2,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; //; // TGLClipSet; //; // A collection of all available clipping objects, to be used by higher; // level objects. For the time being by TGLViewer/Scene.; //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLClip.h:122,avail,available,122,graf3d/gl/inc/TGLClip.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLClip.h,1,['avail'],['available']
Availability,"//////////////////////////////////////////////////////////////////////////; //; // TVirtualFFT; //; // TVirtualFFT is an interface class for Fast Fourier Transforms.; //; //; //; // The default FFT library is FFTW. To use it, FFTW3 library should already; // be installed, and ROOT should be have fftw3 module enabled, with the directories; // of fftw3 include file and library specified (see installation instructions).; // Function SetDefaultFFT() allows to change the default library.; //; // Available transform types:; // FFT:; // - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, -1 in the exponent; // - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, +1 in the exponent; // - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); // in one or more dimensions,; // - ""C2R"" - inverse transforms to ""R2C"", taking complex input; // (storing the non-redundant half of a logically Hermitian array); // to real output; // - ""R2HC"" - a real-input DFT with output in ""halfcomplex"" format,; // i.e. real and imaginary parts for a transform of size n stored as; // r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; // - ""HC2R"" - computes the reverse of FFTW_R2HC, above; // - ""DHT"" - computes a discrete Hartley transform; //; // Sine/cosine transforms:; // Different types of transforms are specified by parameter kind of the SineCosine() static; // function. 4 different kinds of sine and cosine transforms are available; // DCT-I (REDFT00 in FFTW3 notation)- kind=0; // DCT-II (REDFT10 in FFTW3 notation)- kind=1; // DCT-III(REDFT01 in FFTW3 notation)- kind=2; // DCT-IV (REDFT11 in FFTW3 notation)- kind=3; // DST-I (RODFT00 in FFTW3 notation)- kind=4; // DST-II (RODFT10 in FFTW3 notation)- kind=5; // DST-III(RODFT01 in FFTW3 notation)- kind=6; // DST-IV (RODFT11 in FFTW3 notation)- kind=7; // Formulas and detailed descriptions can be found in the chapter; // ""What FFTW rea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h:496,Avail,Available,496,core/base/inc/TVirtualFFT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h,2,"['Avail', 'redundant']","['Available', 'redundant']"
Availability,"/////////////////////////////////////////////////////////////////////////; /// Decompose path to elements; /// Returns array of names for each element in the path, first element either ""/"" or "".""; /// If returned array empty - it is error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserData.cxx:233,error,error,233,gui/browserv7/src/RBrowserData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowserData.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// Define input data for subsequent calls to DoUnfold(tau); /// \param[in] input input distribution with uncertainties; /// \param[in] scaleBias (default=nullptr) scale factor applied to the bias; /// \param[in] oneOverZeroError (default=nullptr) for bins with zero error, this number defines 1/error.; /// \param[in] hist_vyy (default=nullptr) if non-zero, this defines the data covariance matrix; /// \param[in] hist_vyy_inv (default=nullptr) if non-zero and hist_vyy is; /// set, defines the inverse of the data covariance matrix. This; /// feature can be useful for repeated unfoldings in cases where the; /// inversion of the input covariance matrix is lengthy; ///; /// Return value: nError1+10000*nError2; /// <ul>; /// <li>nError1: number of bins where the uncertainty is zero.; /// these bins either are not used for the unfolding (if; /// oneOverZeroError==nullptr) or 1/uncertainty is set to oneOverZeroError.</li>; /// <li>nError2: return values>10000 are fatal errors, because the; /// unfolding can not be done. The number nError2 corresponds to the; /// number of truth bins which are not constrained by data points.; /// </li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:341,error,error,341,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////; /// Get global correlatiocn coefficients, summing up all contributions; ///; /// \param[out] rhoi histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[out] invEmat (default=nullptr) inverse of error matrix; ///; /// return the global correlation coefficients, including all error; /// sources. If <b>invEmat</b> is nonzero, the inverse of the error; /// matrix is returned in that histogram; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:326,error,error,326,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// Get total error matrix, summing up all contributions; ///; /// \param[out] ematrix histogram which will be filled; /// \param[in] binMap (default=nullptr) remapping of histogram bins; ///; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:88,error,error,88,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// Initialize bin contents and bin errors for a given histogram; ///; /// \param[out] h histogram; /// \param[in] x new histogram content; ///; /// all histgram errors are set to zero, all contents are set to <b>x</b>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:110,error,errors,110,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// Input vector of measurements; ///; /// \param[out] out histogram to store the measurements. Bin content; /// and bin errors are overwritte.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// Bins which had an uncertainty of zero in the call to SetInput(); /// maye acquire bin contents or bin errors different from the; /// original settings in SetInput().; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:195,error,errors,195,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// Matrix calculations required to propagate systematic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:131,error,errors,131,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// Specify a correlated systematic uncertainty; ///; /// \param[in] sysError alternative matrix or matrix of absolute/relative shifts; /// \param[in] name identifier of the error source; /// \param[in] histmap mapping of the histogram axes; /// \param[in] mode format of the error source; ///; /// <b>sysError</b> corresponds to a one-sigma variation. If; /// may be given in various forms, specified by <b>mode</b>; /// <ul>; /// <li><b>mode=kSysErrModeMatrix</b> the histogram <b>sysError</b>; /// corresponds to an alternative response matrix.</li>; /// <li><b>mode=kSysErrModeShift</b> the content of the histogram <b>sysError</b> are the absolute shifts of the response matrix; /// <li><b>mode=kSysErrModeRelative</b> the content of the histogram <b>sysError</b>; /// specifies the relative uncertainties; /// </ul>; /// Internally, all three cases are transformed to the case <b>mode=kSysErrModeMatrix</b>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:248,error,error,248,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// Specify a source of background; ///; /// \param[in] bgr background distribution with uncorrelated errors; /// \param[in] name identifier for this background source; /// \param[in] scale normalisation factor applied to the background; /// \param[in] scaleError normalisation uncertainty; ///; /// The contribution <b>scale</b>*<b>bgr</b> is subtracted from the; /// measurement prior to unfolding. The following contributions are; /// added to the input covarianc ematrix; /// <ul>; /// <li>using the uncorrelated histogram errors <b>dbgr</b>, the contribution; /// (<b>scale</b>*<b>dbgr<sub>i</sub></b>)<sup>2</sup> is added to the; /// diagonals of the covariance</li>; /// <li>using the histogram contents, the background normalisation uncertainty contribution; /// <b>dscale</b>*<b>bgr<sub>i</sub></b> <b>dscale</b>*<b>bgr<sub>j</sub></b>; /// is added to the covariance matrix</li>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:176,error,errors,176,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// add up an error matrix, also respecting the bin mapping; ///; /// \param[inout] ematrix error matrix histogram; /// \param[in] emat error matrix stored with internal mapping (member fXToHist); /// \param[in] binMap mapping of histogram bins; /// \param[in] doClear if true, ematrix is cleared prior to adding; /// elements of emat to it.; ///; /// the array <b>binMap</b> is explained with the method GetOutput(). The; /// matrix emat must have dimension NxN where N=fXToHist.size(); /// The flag <b>doClear</b> may be used to add covariance matrices from; /// several uncertainty sources.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:88,error,error,88,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,3,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// calculate total chi**2 including all systematic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:126,error,errors,126,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// checks if specified JSON node is array (compressed or not compressed); /// returns length of array (or -1 if failure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:187,failure,failure,187,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['failure'],['failure']
Availability,"////////////////////////////////////////////////////////////////////////; /// correlated one-sigma shifts correspinding to a given systematic uncertainty; ///; /// \param[out] hist_delta histogram to store shifts; /// \param[in] name identifier of the background source; /// \param[in] binMap (default=nullptr) remapping of histogram bins; ///; /// returns true if the error source was found.; /// <br>; /// This method returns the shifts of the unfolding result induced by; /// varying the identified systematic source by one sigma.; /// <br/>; /// the array <b>binMap</b> is explained with the method GetOutput().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:369,error,error,369,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// covariance matrix contribution from error on regularisation; /// parameter; ///; /// \param[inout] ematrix output histogram; /// \param[in] binMap (default=nullptr) remapping of histogram bins; /// \param[in] clearEmat (default=true) if true, clear the histogram; ///; /// this method returns the covariance contributions to the unfolding result; /// from the assigned uncertainty on the parameter tau, see method; /// SetTauError().; /// <br>; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearEmat</b> may be used to add covariance matrices from; /// several uncertainty sources.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:114,error,error,114,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// determine total error matrix on the vector Ax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:94,error,error,94,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// determine total error matrix on the vector x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:94,error,error,94,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// get background into a histogram; ///; /// \param[inout] bgrHist target histogram, content and errors will be altered; /// \param[in] bgrSource (default=nullptr) name of backgrond source or zero; /// to add all sources of background; /// \param[in] binMap (default=nullptr) remap histogram bins; /// \param[in] includeError (default=3) include uncorrelated(1),; /// correlated (2) or both (3) sources of uncertainty in the; /// histogram errors; /// \param[in] clearHist (default=true) reset histogram before adding; /// up the specified background sources; ///; /// the array <b>binMap</b> is explained with the method GetOutput().; /// The flag <b>clearHist</b> may be used to add background from; /// several sources in successive calls to GetBackground().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:172,error,errors,172,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// get output distribution, possibly cumulated over several bins; ///; /// \param[out] output existing output histogram. content and errors; /// will be updated.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// If nonzero, the array <b>binMap</b> must have dimension n+2, where n; /// corresponds to the number of bins on the truth axis of the response; /// matrix (the histogram specified with the TUnfold; /// constructor). The indexes of <b>binMap</b> correspond to the truth; /// bins (including underflow and overflow) of the response matrix.; /// The element binMap[i] specifies the histogram number in; /// <b>output</b> where the corresponding truth bin will be stored. It is; /// possible to specify the same <b>output</b> bin number for multiple; /// indexes, in which case these bins are added. Set binMap[i]=-1 to; /// ignore an unfolded truth bin. The uncertainties are; /// calculated from the corresponding parts of the covariance matrix,; /// properly taking care of added truth bins.; /// <br/>; /// If the pointer <b>binMap</b> is zero, the bins are mapped; /// one-to-one. Truth bin zero (underflow) is stored in the; /// <b>output</b> underflow, truth bin 1 is stored in bin number 1, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:208,error,errors,208,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// get unfolding result on detector level; ///; /// \param[out] out histogram to store the correlation coefficiencts. The bin; /// contents and errors are overwritten.; /// \param[in] binMap (default=nullptr) array for mapping truth bins to histogram bins; ///; /// This method returns the unfolding output folded by the response; /// matrix, i.e. the vector Ax.; ///; /// The use of <b>binMap</b> is explained with the documentation of; /// the GetOutput() method; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:219,error,errors,219,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// map delta to hist_delta, possibly summing up bins; ///; /// \param[out] hist_delta result histogram; /// \param[in] delta vector to be mapped to the histogram; /// \param[in] binMap mapping of histogram bins; ///; /// grooups of bins of <b>delta</b> are mapped to bins of; /// <b>hist_delta</b>. The histogram contents are set to the sum over; /// the group of bins. The histogram errors are reset to zero.; /// <br/>; /// The array <b>binMap</b> is explained with the method GetOutput()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:459,error,errors,459,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['errors']
Availability,"////////////////////////////////////////////////////////////////////////; /// propagate an error matrix on the input vector to the unfolding result; ///; /// \param[in] vyy input error matrix; /// \param[inout] ematrix histogram to be updated; /// \param[in] binMap mapping of histogram bins; /// \param[in] clearEmat if set, clear histogram before adding this; /// covariance contribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:91,error,error,91,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////////////; /// propagate uncorrelated systematic errors to a covariance matrix; ///; /// \param[in] m_0 coefficients for error propagation; /// \param[in] m_1 coefficients for error propagation; ///; /// returns the covariance matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:112,error,errors,112,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,3,['error'],"['error', 'errors']"
Availability,"////////////////////////////////////////////////////////////////////////; /// retreive a background source in a new histogram; ///; /// \param[in] histogramName name of the histogram; /// \param[in] bgrSource the background source to retreive; /// \param[in] histogramTitle (default=nullptr) title of the histogram; /// \param[in] distributionName (default=nullptr) identifier of the distribution to be extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; /// \param[in] includeError (default=3) type of background errors to; /// be included (+1 uncorrelated bgr errors, +2 correlated bgr errors); ///; /// returns a new histogram. See method GetOutput() for a detailed; /// description of the arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:707,error,errors,707,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,3,['error'],['errors']
Availability,"///////////////////////////////////////////////////////////////////////; /// Draws a TGraphErrors with KDE values and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:118,error,errors,118,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,1,['error'],['errors']
Availability,"///////////////////////////////////////////////////////////////////////; /// Static function creating a color table with several connected linear gradients.; ///; /// - Number: The number of end point colors that will form the gradients.; /// Must be at least 2.; /// - Stops: Where in the whole table the end point colors should lie.; /// Each entry must be on [0, 1], each entry must be greater than; /// the previous entry.; /// - Red, Green, Blue: The end point color values.; /// Each entry must be on [0, 1]; /// - NColors: Total number of colors in the table. Must be at least 1.; /// - alpha: the opacity factor, between 0 and 1. Default is no transparency (1).; /// - setPalette: activate the newly created palette (true by default). If false,; /// the caller is in charge of calling TColor::SetPalette using the; /// return value of the function (first palette color index) and; /// reconstructing the Int_t palette[NColors+1] array.; ///; /// Returns a positive value (the index of the first color of the palette) on; /// success and -1 on error.; ///; /// The table is constructed by tracing lines between the given points in; /// RGB space. Each color value may have a value between 0 and 1. The; /// difference between consecutive ""Stops"" values gives the fraction of; /// space in the whole table that should be used for the interval between; /// the corresponding color values.; ///; /// Normally the first element of Stops should be 0 and the last should be 1.; /// If this is not true, fewer than NColors will be used in proportion with; /// the total interval between the first and last elements of Stops.; ///; /// This definition is similar to the povray-definition of gradient; /// color tables.; ///; /// For instance:; /// ~~~ {.cpp}; /// UInt_t Number = 3;; /// Double_t Red[3] = { 0.0, 1.0, 1.0 };; /// Double_t Green[3] = { 0.0, 0.0, 1.0 };; /// Double_t Blue[3] = { 1.0, 0.0, 1.0 };; /// Double_t Stops[3] = { 0.0, 0.4, 1.0 };; /// ~~~; /// This defines a table in which t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:1060,error,error,1060,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['error'],['error']
Availability,"///////////////////////////////////////////////////////////////////////; /// return a TGraphErrors with the KDE values and errors; /// The return object is managed by the user",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:123,error,errors,123,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,1,['error'],['errors']
Availability,"/////////////////////////////////////////////////////////////////////; /// Check if there is draw data available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:103,avail,available,103,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['avail'],['available']
Availability,"/////////////////////////////////////////////////////////////////////; /// Search for specified string in the stream; /// return number of symbols before string was found, -1 if error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:178,error,error,178,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////; /// This function calculates background spectrum from source spectrum.; /// The result is placed in the vector pointed by spectrum pointer.; /// The goal is to separate the useful information (peaks) from useless; /// information (background).; ///; /// - method is based on Sensitive Nonlinear Iterative Peak (SNIP) clipping; /// algorithm.; /// - new value in the channel ""i"" is calculated; ///; /// \f[; /// v_p(i) = min \left\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Rya",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:993,error,error,993,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,2,['error'],['error']
Availability,"////////////////////////////////////////////////////////////////; //; // if you call the function twice with a non-negative argument; // (without an intervening call with a negative argument); // it will complain because it is almost certainly an error; // that will cause the function to loose track of the previous; // value of gErrorIgnoreLevel.; //; // most common causes: 1. suspiciously placed ""return;"" statement; // 2. calling a function that calls ""NoMsg()""; //; //////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:247,error,error,247,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['error'],['error']
Availability,"///////////////////////////////////; //; // note that because of the strange way this function works,; // CINT will print; //; // Error: No symbol asdf in current scope FILE:/var/tmp/gaaa001HR LINE:1; //; // if ""varName"" is not defined. (in this case, varName==""asdf""); // i don't know how to suppress this.; //; ///////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:130,Error,Error,130,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['Error'],['Error']
Availability,"///////////////////////////////; /// Plot dataset on specified frame.; ///; /// By default:; /// - An unbinned dataset will use the default binning of the target frame.; /// - A binned dataset will retain its intrinsic binning.; ///; /// The following optional named arguments can be used to modify the behaviour:; /// \note Please follow the function links in the left column to learn about PyROOT specifics for a given option.; ///; /// <table>; ///; /// <tr><th> <th> Data representation options; /// <tr><td> RooFit::Asymmetry(const RooCategory& c); /// <td> Show the asymmetry of the data in given two-state category [F(+)-F(-)] / [F(+)+F(-)].; /// Category must have two states with indices -1 and +1 or three states with indices -1,0 and +1.; /// <tr><td> RooFit::Efficiency(const RooCategory& c); /// <td> Show the efficiency F(acc)/[F(acc)+F(rej)]. Category must have two states with indices 0 and 1; /// <tr><td> RooFit::DataError(Int_t); /// <td> Select the type of error drawn:; /// - `Auto(default)` results in Poisson for unweighted data and SumW2 for weighted data; /// - `Poisson` draws asymmetric Poisson confidence intervals.; /// - `SumW2` draws symmetric sum-of-weights error ( \f$ \left( \sum w \right)^2 / \sum\left(w^2\right) \f$ ); /// - `None` draws no error bars; /// <tr><td> RooFit::Binning(int nbins, double xlo, double xhi); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const RooAbsBinning&); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const char* name); /// <td> Use binning with specified name to draw dataset; /// <tr><td> RooFit::RefreshNorm(); /// <td> Force refreshing for PDF normalization information in frame.; /// If set, any subsequent PDF will normalize to this dataset, even if it is; /// not the first one added to the frame. By default only the 1st dataset; /// added to a frame will update the normalization information; /// <tr><td> RooFit::Rescale(double f); /// <td> Rescale drawn hist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:1026,error,error,1026,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['error'],['error']
Availability,"///////; /// Set Profile histogram structure and options.; ///; /// \param[in] ymin minimum value allowed for y; /// \param[in] ymax maximum value allowed for y; /// if (ymin = ymax = 0) there are no limits on the allowed y values (ymin = -inf, ymax = +inf); /// \param[in] option this is the option for the computation of the y error of the profile ( TProfile::GetBinError ); /// possible values for the options are:; /// - ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); /// where S(Y) is the standard deviation (RMS) of the Y data in the bin; /// and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); /// (i.e the errors are the standard error on the bin content of the profile); /// - 's' Errors are the standard deviation of Y, S(Y); /// - 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); /// The only difference is only when the standard deviation in Y is zero.; /// In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; /// 1./SQRT(12*N).; /// This approximation assumes that the Y values are integer (e.g. ADC counts); /// and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; /// takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); /// - 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j; /// W is obtained as from TProfile::GetBinEntries(ibin); /// This errors corresponds to the standard deviation of weighted mean where each; /// measurement Y is uncorrelated and has an error sigma, which is expressed in the; /// weight used to fill the Profile: w = 1/sigma^2; /// The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ); ///; /// In the case of Profile filled weights and with TProfile::Sumw2() called,; /// STD(Y) is the standard deviation of the weighted sample Y and N is in this case the; /// number of effective entries (TProfile::GetBinEffectiveEntries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1047,error,error,1047,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['error'],['error']
Availability,"///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - No",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2626,avail,available,2626,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,///; /// Offload information.; ///; /// The host offloading kind - a combination of kinds encoded in a mask.; /// Multiple programming models may be supported simultaneously by the same; /// host.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Action.h:103,mask,mask,103,interpreter/llvm-project/clang/include/clang/Driver/Action.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Action.h,1,['mask'],['mask']
Availability,"///; /// This method determines whether the two coalescing candidates can be merged.; /// In order to be merged, all instructions must be able to; /// 1. Move to the beginning of the SourceRegion.BranchTargetBlock;; /// 2. Move to the end of the TargetRegion.BranchBlock.; /// Merging involves moving the instructions in the; /// TargetRegion.BranchTargetBlock (also SourceRegion.BranchBlock).; ///; /// This function first try to move instructions from the; /// TargetRegion.BranchTargetBlock down, to the beginning of the; /// SourceRegion.BranchTargetBlock. This is not possible if any register defined; /// in TargetRegion.BranchTargetBlock is used in a PHI node in the; /// SourceRegion.BranchTargetBlock. In this case, check whether the statement; /// can be moved up, to the end of the TargetRegion.BranchBlock (immediately; /// before the branch statement). If it cannot move, then these blocks cannot; /// be merged.; ///; /// Note that there is no analysis for moving instructions past the fall-through; /// blocks because they are confirmed to be empty. An assert is thrown if they; /// are not.; ///; /// \param[in] SourceRegion The candidate to move statements from; /// \param[in] TargetRegion The candidate to move statements to; /// \return true if all instructions in SourceRegion.BranchBlock can be merged; /// into a block in TargetRegion, false otherwise.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:494,down,down,494,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['down'],['down']
Availability,"///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (the bin error) returned by `TH1::GetBinError`; ///; /// \f[; /// Chi2 = \sum_{i}{ \left(\frac{y(i) - f(x(i) | p )}{e(i)} \right)^2 }; /// \f]; ///; /// where `y(i)` is the bin content for each bin `i`, `x(i)` is the bin center and `e(i)` is the bin error (`sqrt(y(i)` for; /// an un-weighted histogram). Bins with zero errors are excluded from the fit. See also later the note on the treatment; /// of empty bins. When using option ""I"" the residual is computed not using the function value at the bin center, `f(x(i)|p)`,; /// but the integral of the function in the bin, Integral{ f(x|p)dx }, divided by the bin volume.; /// When using option `P` (Pearson chi2), the expected error computed as `e(i) = sqrt(f(x(i)|p))` is used.; /// In this case empty bins are considered in the fit.; /// Both chi-square methods should not be used when the bin content represent counts, especially in case of low bin statistics,; /// because they could return a biased result.; ///; /// \anchor HFitNLL; /// ### Likelihood Fits; ///; /// When using option ""L"" a likelihood fit is used instead of the default chi-square fit.; /// The likelihood is built assuming a Poisson probability density function for each bin.; /// The negative log-likelihood to be minimized is; ///; /// \f[; /// NLL = - \sum_{i}{ \log {\mathrm P} ( y(i) | f(x(i) | p ) ) }; /// \f]; /// where `P(y|f)` is the Poisson distribution of observing a count `y(i)` in the bin when the expected count is `f(x(i)|p)`.; /// The exact likelihood used is the Poisson likelihood described in this paper:; /// S. Baker and R. D. Cousins, “Clarification of the use of chi-square and likelihood functions in fits to histograms,”; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7314,error,error,7314,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"///< *OPTION={GetMethod=""GetEchoMode"";SetMethod=""SetEchoMode"";Items=(kNormal=""Normal"",kNoEcho=""No Echo"",kPassword=""Password"")}*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEntry.h:98,Echo,Echo,98,gui/gui/inc/TGTextEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGTextEntry.h,1,['Echo'],['Echo']
Availability,"///< <b>""En""</b> Draw Errors with current marker type and size (0 <= n <=6).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h:22,Error,Errors,22,hist/histpainter/inc/Hoption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hoption.h,1,['Error'],['Errors']
Availability,"///< Absolute convergence tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:26,toler,tolerance,26,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['toler'],['tolerance']
Availability,"///< Absolute error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:14,error,error,14,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['error'],['error']
Availability,///< Add IR name where available,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h:23,avail,available,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBasicBlock.h,1,['avail'],['available']
Availability,"///< An error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,error,error,8,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['error'],['error']
Availability,"///< An error which causes further processing to be unreliable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:8,error,error,8,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['error'],['error']
Availability,"///< Array of errors of the fNpar parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TF1.h:14,error,errors,14,hist/hist/inc/TF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TF1.h,1,['error'],['errors']
Availability,///< Available enum attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:5,Avail,Available,5,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['Avail'],['Available']
Availability,"///< Available for inspection, not emission.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h:5,Avail,Available,5,interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,1,['Avail'],['Available']
Availability,"///< Bin error approximation option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile2D.h:9,error,error,9,hist/hist/inc/TProfile2D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile2D.h,2,['error'],['error']
Availability,"///< Bin errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse_Internal.h:9,error,errors,9,hist/hist/inc/THnSparse_Internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse_Internal.h,1,['error'],['errors']
Availability,"///< Bordermode (-1=down, 0 = no border, 1=up)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TPad.h:20,down,down,20,graf2d/gpad/inc/TPad.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TPad.h,2,['down'],['down']
Availability,"///< Calculate the absolute sum of all errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:39,error,errors,39,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< Calculate the difference divided by the error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:45,error,error,45,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['error'],['error']
Availability,"///< Calculate the square sum of all errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:37,error,errors,37,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< Cause of the failure, e.g. unsupported type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:18,failure,failure,18,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,1,['failure'],['failure']
Availability,"///< CheckBox connected to error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH2Editor.h:27,error,error,27,gui/ged/inc/TH2Editor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH2Editor.h,1,['error'],['error']
Availability,///< Consider undef mask elements (-1) as placeholders for; ///< future shuffle elements and mark them as ones as being used; ///< in future. Non-undef elements are considered as unused since; ///< they're already marked as used in the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:20,mask,mask,20,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['mask'],['mask']
Availability,"///< Current number of training epochs without; ///< considerable decrease in the test error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:87,error,error,87,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['error'],['error']
Availability,"///< Data std deviation (robust estimation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h:25,robust,robust,25,hist/hist/inc/TKDE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h,1,['robust'],['robust']
Availability,"///< Error Level for Contour",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TAdvancedGraphicsDialog.h:5,Error,Error,5,gui/fitpanel/inc/TAdvancedGraphicsDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TAdvancedGraphicsDialog.h,1,['Error'],['Error']
Availability,"///< Error combo box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH1Editor.h:5,Error,Error,5,gui/ged/inc/TH1Editor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TH1Editor.h,1,['Error'],['Error']
Availability,"///< Error from parametrization",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:5,Error,Error,5,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['Error'],['Error']
Availability,"///< Error from test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:5,Error,Error,5,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['Error'],['Error']
Availability,"///< Error from the last estimation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:5,Error,Error,5,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Error'],['Error']
Availability,"///< Error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:5,Error,Error,5,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['Error'],['Error']
Availability,"///< Error type store in associated RooDataHist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.h:5,Error,Error,5,roofit/roofitcore/src/RooChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.h,1,['Error'],['Error']
Availability,"///< Error while reading from the socket",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:5,Error,Error,5,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['Error'],['Error']
Availability,"///< Error: couldn't parse standard",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h:5,Error,Error,5,math/mathcore/src/CDT/CDTUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h,1,['Error'],['Error']
Availability,"///< Errors from Poisson interval at 68.3% (1 sigma)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:5,Error,Errors,5,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['Error'],['Errors']
Availability,"///< Errors from Poisson interval at 95% CL (~ 2 sigma)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:5,Error,Errors,5,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['Error'],['Errors']
Availability,"///< Errors with Normal (Wald) approximation: errorUp=errorLow= sqrt(N)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:5,Error,Errors,5,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,3,"['Error', 'error']","['Errors', 'errorLow', 'errorUp']"
Availability,"///< Fatal error: whoever sends this message is terminating execution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:11,error,error,11,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['error'],['error']
Availability,"///< GD path: error rate (or performance)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:14,error,error,14,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['error'],['error']
Availability,"///< High side of asymmetric error associated with current value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:29,error,error,29,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['error'],['error']
Availability,"///< How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum =; ///< Absolute Addition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:11,error,errors,11,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< If non-zero, provides a pointer to a; ///< string instance in which error messages will be returned. If the; ///< string is non-empty upon return an error occurred while invoking the; ///< program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h:73,error,error,73,interpreter/llvm-project/llvm/include/llvm/Support/Program.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h,4,['error'],['error']
Availability,"///< Indicates that this statepoint is a transition from; ///< GC-aware code to code that is not GC-aware.; /// Mark the deopt arguments associated with the statepoint as only being; /// ""live-in"". By default, deopt arguments are ""live-through"". ""live-through""; /// requires that they the value be live on entry, on exit, and at any point; /// during the call. ""live-in"" only requires the value be available at the; /// start of the call. In particular, ""live-in"" values can be placed in; /// unused argument registers or other non-callee saved registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:398,avail,available,398,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['avail'],['available']
Availability,"///< Indices of subsets of n-bit masks (n is from 1 to 30)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h:33,mask,masks,33,hist/histpainter/src/TPainter3dAlgorithms.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h,1,['mask'],['masks']
Availability,"///< Interval for the computation of the test error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:46,error,error,46,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['error'],['error']
Availability,///< K-V bit mask,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h:13,mask,mask,13,interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,2,['mask'],['mask']
Availability,///< K-V bit mask; /// Compare routine for std::lower_bound,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h:13,mask,mask,13,interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,1,['mask'],['mask']
Availability,"///< List of objects available during processing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TSelector.h:21,avail,available,21,tree/tree/inc/TSelector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TSelector.h,1,['avail'],['available']
Availability,"///< LoadTree return less than -6, likely a 'newer' error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:52,error,error,52,tree/treeplayer/inc/TTreeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h,1,['error'],['error']
Availability,"///< Low side of asymmetric error associated with current value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:28,error,error,28,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['error'],['error']
Availability,///< Mask of live-out registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h:5,Mask,Mask,5,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,1,['Mask'],['Mask']
Availability,///< Mask of preserved registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h:5,Mask,Mask,5,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,1,['Mask'],['Mask']
Availability,"///< Masks invalid values in the array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:5,Mask,Masks,5,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,1,['Mask'],['Masks']
Availability,///< Merge elements from two source vectors into one; ///< with any shuffle mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:76,mask,mask,76,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['mask'],['mask']
Availability,"///< Min relative error accepted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,error,error,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['error'],['error']
Availability,"///< Number of 'sigmas' error bars represent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHist.h:24,error,error,24,roofit/roofitcore/inc/RooHist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHist.h,1,['error'],['error']
Availability,///< Number of entries in this set.; /// Available enum function attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:41,Avail,Available,41,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['Avail'],['Available']
Availability,"///< Number of error occurrences",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.h:15,error,error,15,roofit/roofitcore/src/RooAdaptiveIntegratorND.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.h,1,['error'],['error']
Availability,"///< Number of errors remaining to print",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:15,error,errors,15,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['error'],['errors']
Availability,///< Number of errors reported,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:15,error,errors,15,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['error'],['errors']
Availability,"///< Number of training epochs without considerable; ///< decrease in the test error for convergence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:79,error,error,79,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['error'],['error']
Availability,"///< Only take errors from first dimension",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:15,error,errors,15,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< Option for bin statistical errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:32,error,errors,32,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['error'],['errors']
Availability,"///< Option to compute errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile.h:23,error,errors,23,hist/hist/inc/TProfile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile.h,3,['error'],['errors']
Availability,"///< Options (in string format) to be passed down to the Merge functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h:45,down,down,45,io/io/inc/TFileMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h,1,['down'],['down']
Availability,///< Other IR Constant for ISel (shuffle masks),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h:41,mask,masks,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,1,['mask'],['masks']
Availability,"///< Packed IDs for the different error sources; ///@}; /// Dummy objects the class will use and delete; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h:34,error,error,34,hist/hist/inc/TLimitDataSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h,1,['error'],['error']
Availability,"///< Packed error sources for background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h:12,error,error,12,hist/hist/inc/TLimitDataSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h,1,['error'],['error']
Availability,"///< Packed error sources for signal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h:12,error,error,12,hist/hist/inc/TLimitDataSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TLimitDataSource.h,1,['error'],['error']
Availability,"///< Parse error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h:11,error,error,11,io/xmlparser/inc/TXMLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h,1,['error'],['error']
Availability,"///< Per cent of bin width for errors along X",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStyle.h:31,error,errors,31,core/base/inc/TStyle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStyle.h,1,['error'],['errors']
Availability,"///< Pointer to worker streamer; /// Issue Error about invalid proxy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h:43,Error,Error,43,io/io/inc/TCollectionProxyFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TCollectionProxyFactory.h,1,['Error'],['Error']
Availability,///< Present this diagnostic as a fatal error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:40,error,error,40,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['error'],['error']
Availability,///< Present this diagnostic as an error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:35,error,error,35,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['error'],['error']
Availability,"///< Qualified field name causing the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:38,error,error,38,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,1,['error'],['error']
Availability,"///< RealVar with the original error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooErrorVar.h:31,error,error,31,roofit/roofitcore/inc/RooErrorVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooErrorVar.h,1,['error'],['error']
Availability,"///< Relative convergence tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:26,toler,tolerance,26,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['toler'],['tolerance']
Availability,"///< Relative error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:14,error,error,14,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['error'],['error']
Availability,"///< Relative error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:14,error,error,14,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['error'],['error']
Availability,"///< Report errors on destruction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp:12,error,errors,12,interpreter/cling/lib/Utils/Diagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Diagnostics.cpp,1,['error'],['errors']
Availability,"///< Set of masks (30+29+28+...+1)=465; ///@}; ///@{; /// @name Marching Cubes; /// Construction of iso-surfaces, see publication CERN-CN-95-17",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h:12,mask,masks,12,hist/histpainter/src/TPainter3dAlgorithms.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.h,1,['mask'],['masks']
Availability,///< Shuffle elements of single source vector with any; ///< shuffle mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:69,mask,mask,69,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['mask'],['mask']
Availability,"///< Size of lines at the end of error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStyle.h:33,error,error,33,core/base/inc/TStyle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStyle.h,1,['error'],['error']
Availability,"///< Size of the page payload and the trailing checksum (if available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx:60,avail,available,60,tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,1,['avail'],['available']
Availability,"///< Some other error - hopefully the error message helps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:16,error,error,16,tree/treeplayer/inc/TTreeReaderValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h,2,['error'],['error']
Availability,"///< Stop when parse error occurs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h:21,error,error,21,io/xmlparser/inc/TXMLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h,1,['error'],['error']
Availability,"///< Stores the error mode, sym, asym or func",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:16,error,error,16,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['error'],['error']
Availability,"///< Structure mask type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:15,mask,mask,15,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,///< Swift error parameter,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h:11,error,error,11,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,1,['error'],['error']
Availability,"///< Symmetric error associated with current value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:15,error,error,15,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['error'],['error']
Availability,"///< Tab containing the available methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TAdvancedGraphicsDialog.h:24,avail,available,24,gui/fitpanel/inc/TAdvancedGraphicsDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TAdvancedGraphicsDialog.h,1,['avail'],['available']
Availability,"///< Tell the client there was an error while processing; /* Generic messages, including errors */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:34,error,error,34,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,2,['error'],"['error', 'errors']"
Availability,"///< Test sample, Error in quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,Error,Error,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['Error'],['Error']
Availability,"///< Text of the error message lead to an 'invalid' state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h:17,error,error,17,tree/tree/inc/TTreeCloner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h,1,['error'],['error']
Availability,"///< The AttFill attributes of the different errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:45,error,errors,45,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< The AttLine attributes of the different errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:45,error,errors,45,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< The amount of different y-errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:31,error,errors,31,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,///< The cast is used with a masked load/store.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:29,mask,masked,29,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['mask'],['masked']
Availability,"///< The mask is expected to be for permutation of 1-2 vectors,; ///< check for the mask elements for the first argument (mask; ///< indices are in range [0:VF)).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:9,mask,mask,9,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,3,['mask'],['mask']
Availability,"///< The mask is expected to be for permutation of 2 vectors, check; ///< for the mask elements for the second argument (mask indices; ///< are in range [VF:2*VF))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:9,mask,mask,9,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,3,['mask'],['mask']
Availability,"///< The number of available values in the array (provided their mask is set)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:19,avail,available,19,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,2,"['avail', 'mask']","['available', 'mask']"
Availability,"///< The string defining the error strategy for training",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:29,error,error,29,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['error'],['error']
Availability,"///< To keep track of the errorcodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h:26,error,errorcodes,26,io/xmlparser/inc/TXMLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/inc/TXMLParser.h,1,['error'],['errorcodes']
Availability,"///< Total error count of all tasks done by this helper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchIMTHelper.h:11,error,error,11,tree/tree/src/TBranchIMTHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchIMTHelper.h,1,['error'],['error']
Availability,"///< Total sum of weights squared; -1 if no errors are calculated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnBase.h:44,error,errors,44,hist/hist/inc/THnBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnBase.h,1,['error'],['errors']
Availability,"///< Training sample, error in quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:22,error,error,22,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['error'],['error']
Availability,///< True once available.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:15,avail,available,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['avail'],['available']
Availability,"///< Two dimensional array of Y high errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:37,error,errors,37,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< Two dimensional array of Y low errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:36,error,errors,36,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///< Use `TH1::GetBinErrorUp` and `TH1::GetBinErrorLow` for the error, depending on y values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:64,error,error,64,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['error'],['error']
Availability,"///< Use the error wall RooFit::EvalErrorWall to drive the fitter away from disallowed parameter values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RooStatsUtils.h:13,error,error,13,roofit/roostats/inc/RooStats/RooStatsUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RooStatsUtils.h,1,['error'],['error']
Availability,"///< Use the regular `TH1::GetBinError` as the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:47,error,error,47,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['error'],['error']
Availability,"///< Use the square root of the function value as the error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:54,error,error,54,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['error'],['error']
Availability,"///< [fNPeaks] array of amplitude errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:34,error,errors,34,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of amplitudes errors of 1D ridges in x direction, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,error,errors,35,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of amplitudes errors of 1D ridges in y direction, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,error,errors,35,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of amplitudes errors of 2D peaks, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:35,error,errors,35,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of error values of x positions of 2D peaks, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,error,error,24,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< [fNPeaks] array of error values of y positions of 2D peaks, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:24,error,error,24,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< [fNPeaks] array of errors of peak areas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:24,error,errors,24,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of position errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:33,error,errors,33,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of volumes errors of 2D peaks, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:32,error,errors,32,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of x positions errors of 1D ridges, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:36,error,errors,36,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< [fNPeaks] array of y positions errors of 1D ridges, output parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:36,error,errors,36,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['errors']
Availability,"///< absolute tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:14,toler,tolerance,14,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,2,['toler'],['tolerance']
Availability,"///< absolute tolerance deviation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h:14,toler,tolerance,14,tmva/tmva/inc/TMVA/ROCCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h,1,['toler'],['tolerance']
Availability,"///< absolute tolerance deviation; // Methods pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h:14,toler,tolerance,14,tmva/tmva/inc/TMVA/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RootFinder.h,1,['toler'],['tolerance']
Availability,"///< acceptable error for Keys cutoffs being equal; ///< topCutoff (a) considered == bottomCutoff (b) iff; ///< (std::abs(a - b) < std::abs(fDelta * (a + b)/2));; ///< Theoretically, the Abs is not needed here, but; ///< floating-point arithmetic does not always work; ///< perfectly, and the Abs doesn't hurt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:16,error,error,16,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['error'],['error']
Availability,"///< acceptable error for Keys interval determination",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:16,error,error,16,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,2,['error'],['error']
Availability,"///< all available fit functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx:9,avail,available,9,gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,1,['avail'],['available']
Availability,"///< and its error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:13,error,error,13,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,1,['error'],['error']
Availability,"///< apply correction to errors for weights fits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:25,error,errors,25,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"///< bin error approximation option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile.h:9,error,error,9,hist/hist/inc/TProfile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TProfile.h,1,['error'],['error']
Availability,"///< bit mask specifying which fields are valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:9,mask,mask,9,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,2,['mask'],['mask']
Availability,"///< buffer containing the error message; /// for the POSIX version of strerror_r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx:27,error,error,27,roofit/roofitcore/src/BidirMMapPipe.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx,1,['error'],['error']
Availability,"///< container of error values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h:18,error,error,18,gui/fitpanel/inc/TFitParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h,1,['error'],['error']
Availability,"///< contains robust value for linear fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h:14,robust,robust,14,gui/fitpanel/inc/TFitEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h,1,['robust'],['robust']
Availability,"///< curve test tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:16,toler,tolerance,16,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,2,['toler'],['tolerance']
Availability,"///< cut on discriminant error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h:25,error,error,25,tmva/tmva/inc/TMVA/MethodPDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDEFoam.h,1,['error'],['error']
Availability,"///< denotes the error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:17,error,error,17,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['error'],['error']
Availability,"///< do full error analysis using Minos",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:13,error,error,13,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['error']
Availability,"///< enable line, fill, marker, error showing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx:32,error,error,32,graf2d/primitivesv7/inc/ROOT/RLegend.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RLegend.hxx,1,['error'],['error']
Availability,"///< end error size number entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:9,error,error,9,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['error'],['error']
Availability,"///< error along abscissa number entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:5,error,error,5,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['error'],['error']
Availability,"///< error calculation mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h:5,error,error,5,tmva/tmva/inc/TMVA/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h,1,['error'],['error']
Availability,"///< error check box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPaveStatsEditor.h:5,error,error,5,gui/ged/inc/TPaveStatsEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPaveStatsEditor.h,1,['error'],['error']
Availability,"///< error definition (=1. for getting 1 sigma error for chi2 fits)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerOptions.h:5,error,error,5,math/mathcore/inc/Math/MinimizerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerOptions.h,2,['error'],['error']
Availability,"///< error estimate of last derivative calculation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:5,error,error,5,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,1,['error'],['error']
Availability,"///< error field of neuron",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:5,error,error,5,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,1,['error'],['error']
Availability,"///< error of p-value for the alternate hypothesis (small number means disfavoured)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestResult.h:5,error,error,5,roofit/roostats/inc/RooStats/HypoTestResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestResult.h,1,['error'],['error']
Availability,"///< error of p-value for the null hypothesis (small number means disfavoured)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestResult.h:5,error,error,5,roofit/roostats/inc/RooStats/HypoTestResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestResult.h,1,['error'],['error']
Availability,"///< error rate is sufficiently low <--- stores boolean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:5,error,error,5,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['error'],['error']
Availability,"///< error rates per tau",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:5,error,error,5,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['error'],['error']
Availability,"///< error reporting with exceptions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:5,error,error,5,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< error value of b parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of b parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of b parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of background a0 parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,2,['error'],['error']
Availability,"///< error value of background a1 parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of background a2 parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of background ax parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of background ay parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of correlation coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of s parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of s parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of s parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of s parameter for 2D peaks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of sigma parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of sigma x parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of sigma y parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of t parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h:5,error,error,5,hist/spectrum/inc/TSpectrumFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumFit.h,1,['error'],['error']
Availability,"///< error value of t parameter for 1D ridges in x direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of t parameter for 1D ridges in y direction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error value of t parameter for 2D peaks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h:5,error,error,5,hist/spectrum/inc/TSpectrum2Fit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Fit.h,1,['error'],['error']
Availability,"///< error values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h:5,error,error,5,gui/fitpanel/inc/TFitParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h,1,['error'],['error']
Availability,"///< error, only set for output neurons",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h:5,error,error,5,tmva/tmva/inc/TMVA/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuron.h,1,['error'],['error']
Availability,"///< errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:5,error,errors,5,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,2,['error'],['errors']
Availability,"///< estimation of the level error of the classifier; // analysing the train dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:29,error,error,29,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['error'],['error']
Availability,"///< false if is found some error in mvaS or mvaB",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h:28,error,error,28,tmva/tmva/inc/TMVA/ROCCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h,1,['error'],['error']
Availability,"///< fit correlation test tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:26,toler,tolerance,26,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,1,['toler'],['tolerance']
Availability,"///< fit errors check box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:9,error,errors,9,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['error'],['errors']
Availability,"///< fit parameter test tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:24,toler,tolerance,24,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,1,['toler'],['tolerance']
Availability,"///< flag for error normalization",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:14,error,error,14,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['error']
Availability,"///< flag for indicating is errors are normalized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:28,error,errors,28,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['error'],['errors']
Availability,"///< flag if values available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx:20,avail,available,20,graf2d/gpadv7/inc/ROOT/RFrame.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx,1,['avail'],['available']
Availability,"///< flag to control if errors have been validated (Hesse has been run in case of Minuit)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:24,error,errors,24,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['error'],['errors']
Availability,"///< general I/O error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:17,error,error,17,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< get correct parabolic errors estimate (call Hesse after minimizing)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:27,error,errors,27,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"///< global map of available frames",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TGedEditor.h:19,avail,available,19,gui/ged/inc/TGedEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TGedEditor.h,1,['avail'],['available']
Availability,"///< histogram test tolerance (KS dist != prob)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:20,toler,tolerance,20,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,1,['toler'],['tolerance']
Availability,"///< initial show mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:18,mask,mask,18,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,1,['mask'],['mask']
Availability,"///< integration error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:17,error,error,17,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['error'],['error']
Availability,"///< intermediate fitter; // sum of weights (this should become centrally available through the dataset)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:74,avail,available,74,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['avail'],['available']
Availability,"///< is genetics available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx:17,avail,available,17,gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,1,['avail'],['available']
Availability,"///< key or button mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:19,mask,mask,19,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,"///< label 'Available Styles:'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:12,Avail,Available,12,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['Avail'],['Available']
Availability,"///< list of available data sources",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx:13,avail,available,13,gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanelModel.hxx,1,['avail'],['available']
Availability,"///< list of available styles",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:13,avail,available,13,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['avail'],['available']
Availability,"///< local error field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h:11,error,error,11,tmva/tmva/inc/TMVA/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h,1,['error'],['error']
Availability,"///< logical failure (e.g. pipe closed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:13,failure,failure,13,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['failure'],['failure']
Availability,"///< loss type used in AdaBoostR2 (Linear,Quadratic or Exponential); //Double_t fTransitionPoint; ///< break-down point for gradient regression",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:109,down,down,109,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['down'],['down']
Availability,"///< map contains the two Minos errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:32,error,errors,32,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,2,['error'],['errors']
Availability,"///< mask for actions, only actions copied to child rec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/TRootSniffer.h:5,mask,mask,5,net/http/inc/TRootSniffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/TRootSniffer.h,1,['mask'],['mask']
Availability,"///< mask specifying which attributes are defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,mask,mask,5,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,"///< mask telling which color components are valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,mask,mask,5,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,"///< mask used to create lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx:5,mask,mask,5,hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histdrawv7/inc/ROOT/RHistStatBox.hxx,1,['mask'],['mask']
Availability,"///< minimize tolerance to reach solution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerOptions.h:14,toler,tolerance,14,math/mathcore/inc/Math/MinimizerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerOptions.h,1,['toler'],['tolerance']
Availability,"///< minuit error level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h:12,error,error,12,tmva/tmva/inc/TMVA/MinuitFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h,1,['error'],['error']
Availability,"///< my event mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:14,mask,mask,14,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,"///< ntuple var: misclassification error fraction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:35,error,error,35,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,2,['error'],['error']
Availability,"///< number of signal events (used in error calculation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h:38,error,error,38,tmva/tmva/inc/TMVA/ROCCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h,1,['error'],['error']
Availability,"///< number of updates contributing to error field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h:39,error,error,39,tmva/tmva/inc/TMVA/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TSynapse.h,1,['error'],['error']
Availability,"///< original patameters' errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h:26,error,errors,26,gui/fitpanel/inc/TFitParametersDialog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitParametersDialog.h,2,['error'],['errors']
Availability,"///< pages per pipe end; // if FlushThresh pages are filled, the code forces a flush; 3/4; // of the pages available seems to work quite well",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:107,avail,available,107,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['avail'],['available']
Availability,"///< per-event error returned by MVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h:15,error,error,15,tmva/tmva/inc/TMVA/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h,2,['error'],['error']
Availability,"///< ping message ID",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h:5,ping,ping,5,graf2d/win32gdk/inc/TGWin32ProxyBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h,1,['ping'],['ping']
Availability,"///< pipe error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:10,error,error,10,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< pipe error Write end",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:10,error,error,10,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< pipe error read end",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:10,error,error,10,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< plane mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:11,mask,mask,11,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['mask'],['mask']
Availability,"///< read error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:10,error,error,10,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///< relative tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:14,toler,tolerance,14,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['toler'],['tolerance']
Availability,"///< relative tolerance; // extra options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:14,toler,tolerance,14,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['toler'],['tolerance']
Availability,"///< returns the smallest error so far",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:26,error,error,26,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['error'],['error']
Availability,"///< size of the test (eg. specified rate of Type I error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:52,error,error,52,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,4,['error'],['error']
Availability,"///< statistics error check box; // widgets for fit options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPaveStatsEditor.h:16,error,error,16,gui/ged/inc/TPaveStatsEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TPaveStatsEditor.h,1,['error'],['error']
Availability,"///< stats errors check box",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h:11,error,errors,11,gui/ged/inc/TStyleManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/inc/TStyleManager.h,1,['error'],['errors']
Availability,"///< status of algorithm (error if not zero)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:26,error,error,26,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['error'],['error']
Availability,"///< stop scan at error = scale*errmin; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:18,error,error,18,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['error'],['error']
Availability,"///< switch on/off option 'improve errors'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h:35,error,errors,35,gui/fitpanel/inc/TFitEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h,1,['error'],['errors']
Availability,"///< switch on/off robust option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h:19,robust,robust,19,gui/fitpanel/inc/TFitEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h,1,['robust'],['robust']
Availability,"///< tolerance parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h:5,toler,tolerance,5,tmva/tmva/inc/TMVA/MethodSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h,1,['toler'],['tolerance']
Availability,"///< tolerance to the function value at the minimum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h:5,toler,tolerance,5,tmva/tmva/inc/TMVA/MinuitFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitFitter.h,1,['toler'],['tolerance']
Availability,///< total sum square of the errors; /**; * Stores the data values the same way as the coordinates.; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:29,error,errors,29,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['error'],['errors']
Availability,///< triangle's three neighbors; /**; * Factory method; * @note needed for c++03 compatibility (no uniform initialization; * available); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h:125,avail,available,125,math/mathcore/src/CDT/CDTUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDTUtils.h,1,['avail'],['available']
Availability,"///< use all errors equal to 1, i.e. fit without errors (default is false)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h:13,error,errors,13,math/mathcore/inc/Fit/DataOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h,2,['error'],['errors']
Availability,"///< use asymmetric errors in the value when available, selecting them according to the on sign of residual (default is true)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h:20,error,errors,20,math/mathcore/inc/Fit/DataOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h,2,"['avail', 'error']","['available', 'errors']"
Availability,"///< use empty bins (default is false) with a fixed error of 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h:52,error,error,52,math/mathcore/inc/Fit/DataOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h,1,['error'],['error']
Availability,"///< use errors on the x coordinates when available (default is true)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h:9,error,errors,9,math/mathcore/inc/Fit/DataOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h,2,"['avail', 'error']","['available', 'errors']"
Availability,"///< use expected errors from the function and not from the data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h:18,error,errors,18,math/mathcore/inc/Fit/DataOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/DataOptions.h,1,['error'],['errors']
Availability,"///< value test tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h:16,toler,tolerance,16,roofit/roofitcore/res/RooUnitTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/res/RooUnitTest.h,1,['toler'],['tolerance']
Availability,"///< which error function is to be used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:11,error,error,11,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['error'],['error']
Availability,"///< write error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:11,error,error,11,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"///<! Array of summed Y high errors for fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:29,error,errors,29,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///<! Array of summed Y low errors for fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h:28,error,errors,28,hist/hist/inc/TGraphMultiErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphMultiErrors.h,1,['error'],['errors']
Availability,"///<! Cached vector with sum of the weight used to compute integral error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/SamplingDistribution.h:68,error,error,68,roofit/roostats/inc/RooStats/SamplingDistribution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/SamplingDistribution.h,1,['error'],['error']
Availability,"///<! Coefficient error counter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h:18,error,error,18,roofit/roofitcore/inc/RooAddModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h,2,['error'],['error']
Availability,"///<! Counter to silence error messages when filling dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h:25,error,error,25,roofit/roofitcore/inc/RooDataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h,1,['error'],['error']
Availability,"///<! Error flag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/inc/TBufferXML.h:6,Error,Error,6,io/xml/inc/TBufferXML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/inc/TBufferXML.h,1,['Error'],['Error']
Availability,"///<! Error id value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TBufferSQL2.h:6,Error,Error,6,io/sql/inc/TBufferSQL2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TBufferSQL2.h,1,['Error'],['Error']
Availability,"///<! External weight array - high error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTreeDataStore.h:35,error,error,35,roofit/roofitcore/inc/RooTreeDataStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTreeDataStore.h,2,['error'],['error']
Availability,"///<! External weight array - low error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTreeDataStore.h:34,error,error,34,roofit/roofitcore/inc/RooTreeDataStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTreeDataStore.h,2,['error'],['error']
Availability,"///<! [fDim] Dynamic Mask for cell division",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:21,Mask,Mask,21,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,2,['Mask'],['Mask']
Availability,"///<! buffer containing the last derivative of the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TNeuron.h:51,error,error,51,math/mlp/inc/TNeuron.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TNeuron.h,1,['error'],['error']
Availability,"///<! connection id for the command, when 0 specified command will be submitted to any available connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:87,avail,available,87,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['avail'],['available']
Availability,"///<! error code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLatex.h:6,error,error,6,graf2d/graf/inc/TLatex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLatex.h,1,['error'],['error']
Availability,"///<! stored value of setlocale(LC_NUMERIC), which should be recovered at the end",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h:61,recover,recovered,61,io/io/inc/TBufferJSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h,1,['recover'],['recovered']
Availability,"///<! the derivative of the total error wrt the synapse weight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TSynapse.h:34,error,error,34,math/mlp/inc/TSynapse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/inc/TSynapse.h,1,['error'],['error']
Availability,"///<[_arrSize] High-side error on weight array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h:25,error,error,25,roofit/roofitcore/inc/RooDataHist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h,1,['error'],['error']
Availability,"///<[_arrSize] Low-side error on weight array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h:24,error,error,24,roofit/roofitcore/inc/RooDataHist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h,1,['error'],['error']
Availability,"///<[fNpoints] array of X errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h:26,error,errors,26,hist/hist/inc/TGraph2DErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h,2,['error'],['errors']
Availability,"///<[fNpoints] array of X high errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:31,error,errors,31,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,4,['error'],['errors']
Availability,"///<[fNpoints] array of X low errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:30,error,errors,30,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,4,['error'],['errors']
Availability,"///<[fNpoints] array of Y errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h:26,error,errors,26,hist/hist/inc/TGraph2DErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h,2,['error'],['errors']
Availability,"///<[fNpoints] array of Y high errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:31,error,errors,31,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,3,['error'],['errors']
Availability,"///<[fNpoints] array of Y low errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:30,error,errors,30,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,3,['error'],['errors']
Availability,"///<[fNpoints] array of Z errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h:26,error,errors,26,hist/hist/inc/TGraph2DErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DErrors.h,1,['error'],['errors']
Availability,"///<[fNpoints] array of Z high errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:31,error,errors,31,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,1,['error'],['errors']
Availability,"///<[fNpoints] array of Z low errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:30,error,errors,30,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,1,['error'],['errors']
Availability,"///@{; /// \name Mutation APIs; ///; /// These methods provide APIs for submitting updates to the DominatorTree and; /// the PostDominatorTree.; ///; /// Note: There are two strategies to update the DominatorTree and the; /// PostDominatorTree:; /// 1. Eager UpdateStrategy: Updates are submitted and then flushed; /// immediately.; /// 2. Lazy UpdateStrategy: Updates are submitted but only flushed when you; /// explicitly call Flush APIs. It is recommended to use this update strategy; /// when you submit a bunch of updates multiple times which can then; /// add up to a large number of updates between two queries on the; /// DominatorTree. The incremental updater can reschedule the updates or; /// decide to recalculate the dominator tree in order to speedup the updating; /// process depending on the number of updates.; ///; /// Although GenericDomTree provides several update primitives,; /// it is not encouraged to use these APIs directly.; /// Submit updates to all available trees.; /// The Eager Strategy flushes updates immediately while the Lazy Strategy; /// queues the updates.; ///; /// Note: The ""existence"" of an edge in a CFG refers to the CFG which DTU is; /// in sync with + all updates before that single update.; ///; /// CAUTION!; /// 1. It is required for the state of the LLVM IR to be updated; /// *before* submitting the updates because the internal update routine will; /// analyze the current state of the CFG to determine whether an update; /// is valid.; /// 2. It is illegal to submit any update that has already been submitted,; /// i.e., you are supposed not to insert an existent edge or delete a; /// nonexistent edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:979,avail,available,979,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,1,['avail'],['available']
Availability,///@}; ///@{; /// Add the specified ID to the set of analyses used by this pass if they are; /// available..,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h:97,avail,available,97,interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,1,['avail'],['available']
Availability,"///@}; //____________________________________________________________________________; //; // Max Pooling Layer Propagation; //____________________________________________________________________________; /** @name Forward Propagation in Max Pooling Layer; */; ///@{; /** Downsample the matrix \p C to the matrix \p A, using max; * operation, such that the winning indices are stored in matrix; * \p B. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:272,Down,Downsample,272,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['Down'],['Downsample']
Availability,"///@}; //____________________________________________________________________________; //; // Max Pooling Layer Propagation; //____________________________________________________________________________; /** @name Forward Propagation in Max Pooling Layer; */; ///@{; /** Downsample the matrix \p C to the matrix \p A, using max; * operation, such that the winning indices are stored in matrix; * \p B. No winning indices needed for cuDNN. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:272,Down,Downsample,272,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,1,['Down'],['Downsample']
Availability,"///Apply Weight correction for error matrix computation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:31,error,error,31,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['error']
Availability,"///\ Shut down the interpreter runtime.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,down,down,10,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['down'],['down']
Availability,"///\brief A type, value pair.; //; /// Type-safe value access and setting. Simple (built-in) casting is; /// available, but better extract the value using the template; /// parameter that matches the Value's type.; ///; /// The class represents a llvm::GenericValue with its corresponding; /// clang::QualType. Use-cases are expression evaluation, value printing; /// and parameters for function calls.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:109,avail,available,109,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,1,['avail'],['available']
Availability,"///\brief Close a handle to a shared library.; ///; /// \param [in] Lib - Handle to library from previous call to DLOpen; /// \param [out] Err - Write errors to this string when given; ///; /// \returns the library handle; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:151,error,errors,151,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,1,['error'],['errors']
Availability,"///\brief Code generator is unavailable; not an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:48,error,error,48,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['error'],['error']
Availability,"///\brief Compilation error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:22,error,error,22,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['error'],['error']
Availability,"///\brief Compiles the given input.; ///; /// This interface helps to run everything that cling can run. From; /// declaring header files to running or evaluating single statements.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param[in] input - The input to be compiled.; ///\param[in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param[out] T - The cling::Transaction of the compiled input.; ///\param[in] disableValuePrinting - Whether to echo the expression result.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:829,echo,echo,829,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['echo'],['echo']
Availability,"///\brief Exception that pulls cling out of runtime-compilation (llvm + clang); /// errors.; ///; /// If user code provokes an llvm::unreachable it will cause this exception; /// to be thrown.; /// Note that this exception is *not* thrown during the execution of the; /// user's code but during its compilation (at runtime).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:84,error,errors,84,interpreter/cling/include/cling/Interpreter/Exception.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h,1,['error'],['errors']
Availability,"///\brief First error value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:16,error,error,16,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['error'],['error']
Availability,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:17,error,error,17,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,2,['error'],['error']
Availability,"///\brief Loads a shared library.; ///; ///\param [in] libStem - The file to load.; ///\param [in] permanent - If false, the file can be unloaded later.; ///\param [in] resolved - Whether libStem is an absolute path or resolved; /// from a previous call to DynamicLibraryManager::lookupLibrary; ///; ///\returns kLoadLibSuccess on success, kLoadLibAlreadyLoaded if the library; /// was already loaded, kLoadLibError if the library cannot be found or any; /// other error was encountered.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h:465,error,error,465,interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLibraryManager.h,1,['error'],['error']
Availability,"///\brief Look for a tag decl based on its name; ///; ///\param declName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultDecl pointer that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:281,error,error,281,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['error'],['error']
Availability,"///\brief Look for a tag decl based on its name; ///; ///\param typeName name of the class, enum, uniorn or namespace being; /// looked for; ///\param resultType reference to QualType that will be updated with the answer; ///\param P Parse to use for the search; ///\param diagOnOff whether the error diagnostics are printed or not.; ///\return returns true if the answer is authoritative or false if a more; /// detailed search is needed (usually this is for class template; /// instances).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:295,error,error,295,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['error'],['error']
Availability,"///\brief Lookup a class declaration by name, starting from the global; /// namespace, also handles struct, union, namespace, and enum.; ///; ///\param [in] className - The name of the class, struct, union,; /// namespace, or enum to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\param [out] resultType - The type of the class, struct, union,; /// or enum to lookup; NULL otherwise.; ///\param [in] instantiateTemplate - When true, will attempt to instantiate; /// a class template satisfying the rquest.; ///\returns The found declaration or null.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:297,failure,failures,297,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a class template declaration by name, starting from; /// the global namespace, also handles struct, union, namespace, and enum.; ///; ///\param [in] Name - The name of the class template to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns The found declaration or null.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:270,failure,failures,270,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a data member based on its Decl(Context), name.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] dataName - the name of the data member to find.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The value/data member found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:286,failure,failures,286,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function based on its Decl(Context), name (return any; ///function that matches the name (and constness if requested).; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:477,failure,failures,477,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function based on its Decl(Context), name and parameters.; /// where the result if any must have exactly the arguments requested.; ///; ///\param[in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param[in] funcName - the name of the function to find.; ///\param[in] funcProto - the function parameter list (without enclosing; /// parantheses). Example: ""size_t,int"".; ///\param[in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:601,failure,failures,601,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function based on its Decl(Context), name and parameters.; /// where the result if any must have exactly the arguments requested.; ///; ///\param[in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param[in] funcName - the name of the function to find.; ///\param[in] funcProto - the list of types of the function parameters; ///\param[in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:557,failure,failures,557,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function based on its Decl(Context), name and parameters.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] funcProto - the function parameter list (without enclosing; /// parantheses). Example: ""size_t,int"".; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:533,failure,failures,533,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function based on its Decl(Context), name and parameters.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] funcName - the name of the function to find.; ///\param [in] funcProto - the list of types of the function parameters; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:489,failure,failures,489,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a function template based on its Decl(Context), name.; ///; ///\param [in] scopeDecl - the scope (namespace or tag) that is searched for; /// the function.; ///\param [in] templateName - the name of the function template to find.; ///\param [in] objectIsConst - if true search fo function that can; /// be called on a const object ; default to false.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///\returns The function template found or null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:423,failure,failures,423,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup a type by name, starting from the global; /// namespace.; ///; ///\param [in] typeName - The type to lookup.; ///\param [in] diagOnOff - Whether to diagnose lookup failures.; ///\returns On a failed lookup retval.isNull() will be true.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:181,failure,failures,181,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Lookup given argument list and return each argument as an; /// expression.; ///; ///\param[in] argList - The string representation of the argument list.; ///\param[out] argExprs - The corresponding expressions to the argList.; ///\param [in] diagOnOff - whether to diagnose lookup failures.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:291,failure,failures,291,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief Make available to child all decls in parent's decl context; /// that corresponds to child decl context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp:15,avail,available,15,interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp,1,['avail'],['available']
Availability,"///\brief Open a handle to a shared library. On Unix the lib is opened with; /// RTLD_LAZY|RTLD_GLOBAL flags.; ///; /// \param [in] Path - Library to open; /// \param [out] Err - Write errors to this string when given; ///; /// \returns the library handle; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:185,error,errors,185,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,1,['error'],['errors']
Availability,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:320,error,error,320,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,1,['error'],['error']
Availability,"///\brief Process the input coming from the prompt and possibly returns; /// result of the execution of the last statement.; /// @param[in] input_line - the user input; /// @param[out] compRes - whether compilation was successful; /// @param[out] result - the cling::Value as result of the; /// execution of the last statement; /// @param[in] disableValuePrinting - whether to suppress echoing of the; /// expression result; ///; ///\returns 0 on success or the indentation of the next input line should; /// have in case of multi input mode.; ///\returns -1 if quit was requiested.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h:386,echo,echoing,386,interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaProcessor.h,1,['echo'],['echoing']
Availability,"///\brief Provides storage for the input and tracks down whether the (, [, {; /// are balanced.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h:52,down,down,52,interpreter/cling/include/cling/MetaProcessor/InputValidator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/InputValidator.h,1,['down'],['down']
Availability,"///\brief Reports the last Windows API error (currently to cling::errs); ///; /// \param [in] Prefix - Prefix the message with this; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:39,error,error,39,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,1,['error'],['error']
Availability,"///\brief Return true if error was diagnosed false otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h:25,error,error,25,interpreter/cling/include/cling/Interpreter/Exception.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Exception.h,1,['error'],['error']
Availability,"///\brief Returns the next available valid free source location.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:27,avail,available,27,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['avail'],['available']
Availability,"///\brief Run once the list of registered atexit functions. This is useful; /// when an external process wants to control carefully the teardown because; /// the registered atexit functions require alive interpreter service.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:198,alive,alive,198,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['alive'],['alive']
Availability,"///\brief Store all further diagnostics; ///; ///\param[in] Diags - The DiagnosticsEngine instance to override; ///\param[in] Own - Whether the DiagnosticsEngine owns this instance; ///\param[in] Report - Report the collected error on destruction; ///\param[in] Reset - Soft reset the DiagnosticsEngine on destruction; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:226,error,error,226,interpreter/cling/include/cling/Utils/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h,1,['error'],['error']
Availability,"///\brief Store all of the errors sent to a DiagnosticsEngine; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:27,error,errors,27,interpreter/cling/include/cling/Utils/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h,1,['error'],['errors']
Availability,"///\brief Tells the execution to run all registered atexit functions once.; ///; /// This rountine should be used with caution only when an external process; /// wants to carefully control the teardown. For example, if the process; /// has registered its own atexit functions which need the interpreter; /// service to be available when they are being executed.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:322,avail,available,322,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h,1,['avail'],['available']
Availability,"///\brief Test whether a function with the given name exists.; ///; ///\param [in] scopeDecl - scope in which to look for the function.; ///\param [in] funcName - name of the function to look for.; ///\param [in] diagOnOff - whether to diagnose lookup failures.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:252,failure,failures,252,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['failure'],['failures']
Availability,"///\brief The 'logging' stream. Currently returns cling::errs().; /// This matches clang & gcc prinitng to stderr for certain information.; /// If the host process needs to keep stderr for itself or actual errors,; /// then the function can be edited to return a separate stream.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:206,error,errors,206,interpreter/cling/include/cling/Utils/Output.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h,1,['error'],['errors']
Availability,"///\brief The Transaction had no module (probably an error in CodeGen).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:53,error,error,53,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['error'],['error']
Availability,"///\brief The clang code generator, being recovered.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h:42,recover,recovered,42,interpreter/cling/lib/Interpreter/DeclUnloader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.h,1,['recover'],['recovered']
Availability,"///\brief Transforms the declaration, forward to Transform(D).; ///; ///\param[in] D - The declaration to be transformed.; ///\param[in] T - The declaration's transaction.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:307,error,error,307,interpreter/cling/lib/Interpreter/ASTTransformer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h,1,['error'],['error']
Availability,"///\brief Transforms the declaration.; ///; /// Subclasses override it in order to provide the needed behavior.; ///; ///\param[in] D - The declaration to be transformed.; ///\returns The transformation result which will be emitted. Return nullptr; /// if this declaration should not be emitted. Returning error will abort; /// the transaction.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:306,error,error,306,interpreter/cling/lib/Interpreter/ASTTransformer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h,1,['error'],['error']
Availability,"///\brief Tries to attach a value printing mechanism to the given decl group; /// ref.; ///; ///\param[in] FD - wrapper function that the value printer will attached to.; ///; ///\returns true if the attachment was considered as success. I.e. even if; /// even if the value printer wasn't attached because of the compilation; /// options disallowint it - it will return still true. Returns false on; /// critical error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:413,error,error,413,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,1,['error'],['error']
Availability,"///\brief Unloads (forgets) a transaction from AST and JITed symbols.; ///; /// If one of the declarations caused error in clang it is rolled back from; /// the AST. This is essential feature for the error recovery subsystem.; /// This is also a key entry point for the code unloading.; ///; ///\param[in] T - the transaction to unload.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:114,error,error,114,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,3,"['error', 'recover']","['error', 'recovery']"
Availability,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:87,error,errors,87,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,2,['error'],"['error', 'errors']"
Availability,"///\brief Whether or not to extend the static scope with new information; /// about the names available only at runtime; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:94,avail,available,94,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h,1,['avail'],['available']
Availability,"///\{; ///\name Global Palettes; /// Register a palette in the set of global palettes, making it available to `GetPalette()`.; /// This function is not thread safe; any concurrent call to global Palette manipulation must be synchronized!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx:97,avail,available,97,graf2d/gpadv7/inc/ROOT/RPalette.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx,1,['avail'],['available']
Availability,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:502,error,error,502,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['error'],['error']
Availability,"///\}; /// Find the adjusted bin index (returning `kUnderflowBin` for underflow and `kOverflowBin`; /// for overflow) for the given coordinate.; /// \note Passing a bin border coordinate can either return the bin above or; /// below the bin border. I.e. don't do that for reliable results!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:272,reliab,reliable,272,hist/histv7/inc/ROOT/RAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx,1,['reliab'],['reliable']
Availability,"///apply the weight correction for error matrix computation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:35,error,error,35,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['error']
Availability,"///do analysis for parabolic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:29,error,errors,29,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"///do minos errors analysis on the parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:12,error,errors,12,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"///normalize errors using chi2/ndf for chi2 fits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:13,error,errors,13,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['error'],['errors']
Availability,"///print error matrix and correlations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:9,error,error,9,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['error'],['error']
Availability,"///return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:53,error,error,53,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['error'],['error']
Availability,"///set Minos errors computation to be performed after fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:13,error,errors,13,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"///set parabolic errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:17,error,errors,17,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['error'],['errors']
Availability,"//::Error(""AdaptiveIntegratorMultiDim::DoIntegral()"", ""Logic error: idvax0 < 1!"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:4,Error,Error,4,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"//::Error(""GetServiceByPort"", ""no service \""%d\"" with protocol \""%s\"""",; // port, kProtocolName);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:4,Error,Error,4,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['Error'],['Error']
Availability,"//::Error(""TClingCallFunc::SetFunc"", ""Could not find method %s(%s)"", method,; // arglist);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Error,Error,4,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['Error'],['Error']
Availability,"//::Error(""TClingCallFunc::SetFuncProto"", ""Could not find method %s(%s)"",; // method, proto);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:4,Error,Error,4,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,2,['Error'],['Error']
Availability,"//; // .loophead:; // ll.w destreg, (alignedaddr); // and scratch2, destreg, mask; // move scratch1, destreg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp:77,mask,mask,77,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"//; // .loophead:; // lr.w destreg, (alignedaddr); // and scratch2, destreg, mask; // mv scratch1, destreg; // [sext scratch2 if signed min/max]; // ifnochangeneeded scratch2, incr, .looptail",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp:77,mask,mask,77,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandAtomicPseudoInsts.cpp,1,['mask'],['mask']
Availability,"//; // A bit messy here.; // I believe the binary error classification is appropriate here.; // The problem is stability.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:50,error,error,50,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"//; // Analyse the result now ...; // Type of action after the analysis:; // 0 = return, 1 = negotiation, 2 = send kROOTD_BYE + 3,; // 3 = print failure and return",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:145,failure,failure,145,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['failure'],['failure']
Availability,"//; // Check for lookup failure.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:24,failure,failure,24,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,4,['failure'],['failure']
Availability,"//; // Convert the passed decl into a nested name specifier,; // a scope spec, and a decl context.; //; // Do this 'early' to save on the expansive parser setup,; // in case of failure.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:177,failure,failure,177,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['failure'],['failure']
Availability,"//; // Estimate the error rate using cross validation; // Well, not quite full cross validation since we only; // use ONE model.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:20,error,error,20,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"//; // Event masks; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:13,mask,masks,13,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['masks']
Availability,"//; // Failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:7,Failure,Failure,7,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['Failure'],['Failure']
Availability,"//; // Find how many points to scan and how often to calculate the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:67,error,error,67,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"//; // If we are talking to an old rootd server we get a fatal; // error here and we need to reopen the connection,; // communicating first the size of the parallel socket",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:67,error,error,67,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,1,['error'],['error']
Availability,"//; // Mean Squared Error.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestLossFunctions.cxx:20,Error,Error,20,tmva/tmva/test/DNN/TestLossFunctions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestLossFunctions.cxx,3,['Error'],['Error']
Availability,"//; // Removed a lot fo code as errors are not common on windows that actually would mean anythign here...; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c:32,error,errors,32,graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,1,['error'],['errors']
Availability,"//; // Set tau and coefs; // Downscale tau slightly in order to avoid numerical problems; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:29,Down,Downscale,29,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['Down'],['Downscale']
Availability,"//; // TODO: Build other specialized builders here.; //; // Initialize all the builders, keeping track of errors. If all valid; // builders agree that we can use bundling, set the flag to true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:106,error,errors,106,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['error'],['errors']
Availability,"//; // Tell Sema we are not in the process of doing an instantiation.; // fSFINAETrap will reset any SFINAE error count of a SFINAE context from ""above"".; // fSFINAETrap will reset this value to the previous one; the line below is overwriting; // the value set by fSFINAETrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp:108,error,error,108,interpreter/cling/lib/Interpreter/LookupHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/LookupHelper.cpp,1,['error'],['error']
Availability,"//; // Test backpropagation for linear net.; //; //Since batch norm is not supported for plain Cuda - the BNOrm layer will be a dummy layer; // and an error message should be produced",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx:151,error,error,151,tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx,1,['error'],['error']
Availability,//; // The objects created and saved by LLVMCreateDisasm() then used by; // LLVMDisasmInstruction().; //; // The LLVM target corresponding to the disassembler.; // FIXME: using std::unique_ptr<const llvm::Target> causes a malloc error; // when this LLVMDisasmContext is deleted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h:229,error,error,229,interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h,1,['error'],['error']
Availability,"//; // To improve error logging for UsrPwd on the client side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:18,error,error,18,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['error'],['error']
Availability,"//; // Version 0 corresponds to the table created with the following command:; // ('group' instead of 'proofgroup'; no 'querytag', 'vmemmxw',; // 'rmemmxw', 'vmemmxm', 'rmemmxm', 'numfiles', 'dataset'); //; // CREATE TABLE proofquerylog (; // id int(11) NOT NULL auto_increment,; // user varchar(32) NOT NULL,; // group varchar(32) default NULL,; // begin datetime default NULL,; // end datetime default NULL,; // walltime int(11) default NULL,; // cputime float default NULL,; // bytesread bigint(20) default NULL,; // events bigint(20) default NULL,; // totevents bigint(20) default NULL,; // workers int(11) default NULL,; // PRIMARY KEY (id) );; //; // Return 0 on success, -1 on any failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:688,failure,failure,688,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['failure'],['failure']
Availability,"//; // auto condition = [&](bool doingAlt=false) { // returns true if need more toys; // if(std::isnan(target)) return false;; // auto pval = pCLs_toys(target_nSigma);; // if (!std::isnan(pval.first)) {; // double diff = std::abs(pval.first - target);; // double err = pval.second;; // if (err > 1e-4 && diff <= 2 * pval.second) {; // return true; // more toys needed; // // decide which type we'd want to generate; // // if it matches the type we are generating, then return true; // auto pNull = pNull_toys(target_nSigma);; // auto pAlt = pAlt_toys(target_nSigma);; // if ((doingAlt ? pAlt.second : pNull.second) < 1e-4) return false; // stop if error gets too small; // bool doAlt = (pAlt.second * pNull.first > pNull.second * pAlt.first);; // return doAlt == doingAlt;; // }; // }; // return false;; // };; // while(condition()) {; // bool doAlt = false;; // double relErrThreshold = 2;; // if(nullToys.size()<size_t(nToys)) {; // addToys(false,nToys);continue;; // } else if(altToys.size()<size_t(nToys)) {; // addToys(true,nToys);continue;; // } else {; // // see which have bigger errors ... generate more of that ...; // auto pNull = pNull_toys(target_nSigma);; // auto pAlt = pAlt_toys(target_nSigma);; // doAlt = (pAlt.second*pNull.first > pNull.second*pAlt.first);; // if( (doAlt ? pAlt.second : pNull.second) < 1e-4 ) break; // stop if error gets too small; // auto pCLs = pCLs_toys(target_nSigma);; // relErrThreshold = (doAlt) ? (pNull.second/pNull.first) : (pAlt.second/pAlt.first);; // relErrThreshold = std::min(2.,std::abs(relErrThreshold));; // std::cout << ""Current pCLs = "" << pCLs.first << "" +/- "" << pCLs.second; // << "" (pNull = "" << pNull.first << "" +/- "" << pNull.second; // << "" , pAlt = "" << pAlt.first << "" +/- "" << pAlt.second << "") ... generating more "" << (doAlt ?; // ""alt"" : ""null"") << "" toys "" << relErrThreshold << std::endl;; //; // }; // if( addToys(doAlt, nToys/*, seed, -1, target_nSigma,relErrThreshold*/) == 0) {; // break; // no toys got added, so stop loopi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNLLVar.cxx:648,error,error,648,roofit/xroofit/src/xRooNLLVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNLLVar.cxx,1,['error'],['error']
Availability,"//; // construct from user parameters + errors (before minimization); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnUserParameterState.cxx:40,error,errors,40,math/minuit2/src/MnUserParameterState.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnUserParameterState.cxx,1,['error'],['errors']
Availability,"//; // error, coefs etc; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:7,error,error,7,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"//; // get derivative dx/dy; // for error propagation; // dx/dy = E A# Vyy^-1 ( = B )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:36,error,error,36,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['error'],['error']
Availability,"//; // get error matrix on x; // fDXDY * Vyy * fDXDY#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:11,error,error,11,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['error'],['error']
Availability,"//; // guessLibraryShortName() is passed a name of a dynamic library and returns a; // guess on what the short name is. Then name is returned as a substring of the; // StringRef Name passed in. The name of the dynamic library is recognized as; // a framework if it has one of the two following forms:; // Foo.framework/Versions/A/Foo; // Foo.framework/Foo; // Where A and Foo can be any string. And may contain a trailing suffix; // starting with an underbar. If the Name is recognized as a framework then; // isFramework is set to true else it is set to false. If the Name has a; // suffix then Suffix is set to the substring in Name that contains the suffix; // else it is set to a NULL StringRef.; //; // The Name of the dynamic library is recognized as a library name if it has; // one of the two following forms:; // libFoo.A.dylib; // libFoo.dylib; //; // The library may have a suffix trailing the name Foo of the form:; // libFoo_profile.A.dylib; // libFoo_profile.dylib; // These dyld image suffixes are separated from the short name by a '_'; // character. Because the '_' character is commonly used to separate words in; // filenames guessLibraryShortName() cannot reliably separate a dylib's short; // name from an arbitrary image suffix; imagine if both the short name and the; // suffix contains an '_' character! To better deal with this ambiguity,; // guessLibraryShortName() will recognize only ""_debug"" and ""_profile"" as valid; // Suffix values. Calling code needs to be tolerant of guessLibraryShortName(); // guessing incorrectly.; //; // The Name of the dynamic library is also recognized as a library name if it; // has the following form:; // Foo.qtx; //; // If the Name of the dynamic library is none of the forms above then a NULL; // StringRef is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp:1176,reliab,reliably,1176,interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp,2,"['reliab', 'toler']","['reliably', 'tolerant']"
Availability,"//; //--------------------; // loop over the paths; //--------------------; // The number of MAXIMUM loops is given by nscan.; // At each loop, the paths being far away from the minimum; // are rejected. Hence at each check (every netst events), the number; // of paths searched will be reduced.; // The maximum 'distance' from the minimum error rate is; // 1 sigma. See RiskPerfTst() for details.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:340,error,error,340,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['error'],['error']
Availability,"//; /// \anchor HFitRes; /// ### Fit Result; ///; /// The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; /// By default the TFitResultPtr contains only the status of the fit which is return by an; /// automatic conversion of the TFitResultPtr to an integer. One can write in this case directly:; ///; /// ~~~ {.cpp}; /// Int_t fitStatus = h->Fit(myFunc);; /// ~~~; ///; /// If the option ""S"" is instead used, TFitResultPtr behaves as a smart; /// pointer to the TFitResult object. This is useful for retrieving the full result information from the fit, such as the covariance matrix,; /// as shown in this example code:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,""S"");; /// TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; /// Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; /// Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; /// Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; /// r->Print(""V""); // print full information of fit including covariance matrix; /// r->Write(); // store the result in a file; /// ~~~; ///; /// The fit parameters, error and chi-square (but not covariance matrix) can be retrieved also; /// directly from the fitted function that is passed to this call.; /// Given a pointer to an associated fitted function `myfunc`, one can retrieve the function/fit; /// parameters with calls such as:; ///; /// ~~~ {.cpp}; /// Double_t chi2 = myfunc->GetChisquare();; /// Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; /// Double_t err0 = myfunc->GetParError(0); //error on first parameter; /// ~~~; ///; /// ##### Associated functions; ///; /// One or more object ( can be added to the list; /// of functions (fFunctions) associated to each histogram.; /// When TH1::Fit is invoked, the fitted function is added to the histogram list of functions (fFunctions).; /// If the histogram is made persistent, the list of as",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:10577,error,error,10577,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"//= ErrorRateRoc();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:4,Error,ErrorRateRoc,4,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['Error'],['ErrorRateRoc']
Availability,"//= pseudo-None type for masking out objects on the python side ===============",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx:25,mask,masking,25,bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx,1,['mask'],['masking']
Availability,"//=- AArch64RedundantCopyElimination.cpp - Remove useless copy for AArch64 -=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // This pass removes unnecessary copies/moves in BBs based on a dominating; // condition.; //; // We handle three cases:; // 1. For BBs that are targets of CBZ/CBNZ instructions, we know the value of; // the CBZ/CBNZ source register is zero on the taken/not-taken path. For; // instance, the copy instruction in the code below can be removed because; // the CBZW jumps to %bb.2 when w0 is zero.; //; // %bb.1:; // cbz w0, .LBB0_2; // .LBB0_2:; // mov w0, wzr ; <-- redundant; //; // 2. If the flag setting instruction defines a register other than WZR/XZR, we; // can remove a zero copy in some cases.; //; // %bb.0:; // subs w0, w1, w2; // str w0, [x1]; // b.ne .LBB0_2; // %bb.1:; // mov w0, wzr ; <-- redundant; // str w0, [x2]; // .LBB0_2; //; // 3. Finally, if the flag setting instruction is a comparison against a; // constant (i.e., ADDS[W|X]ri, SUBS[W|X]ri), we can remove a mov immediate; // in some cases.; //; // %bb.0:; // subs xzr, x0, #1; // b.eq .LBB0_1; // .LBB0_1:; // orr x0, xzr, #0x1 ; <-- redundant; //; // This pass should be run after register allocation.; //; // FIXME: This could also be extended to check the whole dominance subtree below; // the comparison if the compile time regression is acceptable.; //; // FIXME: Add support for handling CCMP instructions.; // FIXME: If the known register value is zero, we should be able to rewrite uses; // to use WZR/XZR directly in some cases.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp:758,redundant,redundant,758,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,3,['redundant'],['redundant']
Availability,"//=- SyntheticCountsPropagation.cpp - Propagate function counts --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a transformation that synthesizes entry counts for; // functions and attaches !prof metadata to functions with the synthesized; // counts. The presence of !prof metadata with counter name set to; // 'synthesized_function_entry_count' indicate that the value of the counter is; // an estimation of the likely execution count of the function. This transform; // is applied only in non PGO mode as functions get 'real' profile-based; // function entry counts in the PGO mode.; //; // The transformation works by first assigning some initial values to the entry; // counts of all functions and then doing a top-down traversal of the; // callgraph-scc to propagate the counts. For each function the set of callsites; // and their relative block frequency is gathered. The relative block frequency; // multiplied by the entry count of the caller and added to the callee's entry; // count. For non-trivial SCCs, the new counts are computed from the previous; // counts and updated in one shot.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp:1010,down,down,1010,interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SyntheticCountsPropagation.cpp,1,['down'],['down']
Availability,"//=- WebAssemblyFixBrTableDefaults.cpp - Fix br_table default branch targets -//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file This file implements a pass that eliminates redundant range checks; /// guarding br_table instructions. Since jump tables on most targets cannot; /// handle out of range indices, LLVM emits these checks before most jump; /// tables. But br_table takes a default branch target as an argument, so it; /// does not need the range checks.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixBrTableDefaults.cpp:435,redundant,redundant,435,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixBrTableDefaults.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixBrTableDefaults.cpp,1,['redundant'],['redundant']
Availability,"//=--- RegUsageInfoPropagate.cpp - Register Usage Informartion Propagation --=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// This pass is required to take advantage of the interprocedural register; /// allocation infrastructure.; ///; /// This pass iterates through MachineInstrs in a given MachineFunction and at; /// each callsite queries RegisterUsageInfo for RegMask (calculated based on; /// actual register allocation) of the callee function, if the RegMask detail; /// is available then this pass will update the RegMask of the call instruction.; /// This updated RegMask will be used by the register allocator while allocating; /// the current MachineFunction.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp:739,avail,available,739,interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegUsageInfoPropagate.cpp,1,['avail'],['available']
Availability,"//== DynamicTypeChecker.cpp ------------------------------------ -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker looks for cases where the dynamic type of an object is unrelated; // to its static type. The type information utilized by this check is collected; // by the DynamicTypePropagation checker. This check does not report any type; // error for ObjC Generic types, in order to avoid duplicate erros from the; // ObjC Generics checker. This checker is not supposed to modify the program; // state, it is just the observer of the type information provided by other; // checkers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypeChecker.cpp:625,error,error,625,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypeChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypeChecker.cpp,1,['error'],['error']
Availability,"//== GenericTaintChecker.cpp ----------------------------------- -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker defines the attack surface for generic taint propagation.; //; // The taint information produced by it might be useful to other checkers. For; // example, checkers should report errors which involve tainted data more; // aggressively, even if the involved symbols are under constrained.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:574,error,errors,574,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['error'],['errors']
Availability,"//== MIGChecker.cpp - MIG calling convention checker ------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines MIGChecker, a Mach Interface Generator calling convention; // checker. Namely, in MIG callback implementation the following rules apply:; // - When a server routine returns an error code that represents success, it; // must take ownership of resources passed to it (and eventually release; // them).; // - Additionally, when returning success, all out-parameters must be; // initialized.; // - When it returns any other error code, it must not take ownership,; // because the message and its out-of-line parameters will be destroyed; // by the client that called the function.; // For now we only check the last rule, as its violations lead to dangerous; // use-after-free exploits.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp:577,error,error,577,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,2,['error'],['error']
Availability,"//== ObjCSelfInitChecker.cpp - Checker for 'self' initialization -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines ObjCSelfInitChecker, a builtin check that checks for uses of; // 'self' before proper initialization.; //; //===----------------------------------------------------------------------===//; // This checks initialization methods to verify that they assign 'self' to the; // result of an initialization call (e.g. [super init], or [self initWith..]); // before using 'self' or any instance variable.; //; // To perform the required checking, values are tagged with flags that indicate; // 1) if the object is the one pointed to by 'self', and 2) if the object; // is the result of an initializer (e.g. [super init]).; //; // Uses of an object that is true for 1) but not 2) trigger a diagnostic.; // The uses that are currently checked are:; // - Using instance variables.; // - Returning the object.; //; // Note that we don't check for an invalid 'self' that is the receiver of an; // obj-c message expression to cut down false positives where logging functions; // get information from self (like its class) or doing ""invalidation"" on self; // when the initialization fails.; //; // Because the object that 'self' points to gets invalidated when a call; // receives a reference to 'self', the checker keeps track and passes the flags; // for 1) and 2) to the new object that 'self' points to after the call.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:1312,down,down,1312,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,1,['down'],['down']
Availability,"//==- SystemZMachineScheduler.h - SystemZ Scheduler Interface ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // -------------------------- Post RA scheduling ---------------------------- //; // SystemZPostRASchedStrategy is a scheduling strategy which is plugged into; // the MachineScheduler. It has a sorted Available set of SUs and a pickNode(); // implementation that looks to optimize decoder grouping and balance the; // usage of processor resources. Scheduler states are saved for the end; // region of each MBB, so that a successor block can learn from it.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:581,Avail,Available,581,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,1,['Avail'],['Available']
Availability,"//==- TLSVariableHoist.h ------ Remove Redundant TLS Loads -------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies/eliminates Redundant TLS Loads if related option is set.; // For example:; // static __thread int x;; // int g();; // int f(int c) {; // int *px = &x;; // while (c--); // *px += g();; // return *px;; // }; //; // will generate Redundant TLS Loads by compiling it with; // clang++ -fPIC -ftls-model=global-dynamic -O2 -S; //; // .LBB0_2: # %while.body; // # =>This Inner Loop Header: Depth=1; // callq _Z1gv@PLT; // movl %eax, %ebp; // leaq _ZL1x@TLSLD(%rip), %rdi; // callq __tls_get_addr@PLT; // addl _ZL1x@DTPOFF(%rax), %ebp; // movl %ebp, _ZL1x@DTPOFF(%rax); // addl $-1, %ebx; // jne .LBB0_2; // jmp .LBB0_3; // .LBB0_4: # %entry.while.end_crit_edge; // leaq _ZL1x@TLSLD(%rip), %rdi; // callq __tls_get_addr@PLT; // movl _ZL1x@DTPOFF(%rax), %ebp; //; // The Redundant TLS Loads will hurt the performance, especially in loops.; // So we try to eliminate/move them if required by customers, let it be:; //; // # %bb.0: # %entry; // ...; // movl %edi, %ebx; // leaq _ZL1x@TLSLD(%rip), %rdi; // callq __tls_get_addr@PLT; // leaq _ZL1x@DTPOFF(%rax), %r14; // testl %ebx, %ebx; // je .LBB0_1; // .LBB0_2: # %while.body; // # =>This Inner Loop Header: Depth=1; // callq _Z1gv@PLT; // addl (%r14), %eax; // movl %eax, (%r14); // addl $-1, %ebx; // jne .LBB0_2; // jmp .LBB0_3; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TLSVariableHoist.h:39,Redundant,Redundant,39,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TLSVariableHoist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TLSVariableHoist.h,4,['Redundant'],['Redundant']
Availability,"//==-- llvm/CodeGen/ExecutionDomainFix.h - Execution Domain Fix -*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Execution Domain Fix pass.; ///; /// Some X86 SSE instructions like mov, and, or, xor are available in different; /// variants for different operand types. These variant instructions are; /// equivalent, but on Nehalem and newer cpus there is extra latency; /// transferring data between integer and floating point domains. ARM cores; /// have similar issues when they are configured with both VFP and NEON; /// pipelines.; ///; /// This pass changes the variant instructions to minimize domain crossings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:480,avail,available,480,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['avail'],['available']
Availability,"//==--- MachineLateInstrsCleanup.cpp - Late Instructions Cleanup Pass -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This simple pass removes any identical and redundant immediate or address; // loads to the same register. The immediate loads removed can originally be; // the result of rematerialization, while the addresses are redundant frame; // addressing anchor points created during Frame Indices elimination.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp:426,redundant,redundant,426,interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLateInstrsCleanup.cpp,2,['redundant'],['redundant']
Availability,"//=== ErrnoModeling.cpp -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines a checker `ErrnoModeling`, which is used to make the system; // value 'errno' available to other checkers.; // The 'errno' value is stored at a special memory region that is accessible; // through the `errno_modeling` namespace. The memory region is either the; // region of `errno` itself if it is a variable, otherwise an artifically; // created region (in the system memory space). If `errno` is defined by using; // a function which returns the address of it (this is always the case if it is; // not a variable) this function is recognized and evaluated. In this way; // `errno` becomes visible to the analysis and checkers can change its value.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp:474,avail,available,474,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp,1,['avail'],['available']
Availability,"//=== HexagonSplitConst32AndConst64.cpp - split CONST32/Const64 into HI/LO ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // When the compiler is invoked with no small data, for instance, with the -G0; // command line option, then all CONST* opcodes should be broken down into; // appropriate LO and HI instructions. This splitting is done by this pass.; // The only reason this is not done in the DAG lowering itself is that there; // is no simple way of getting the register allocator to allot the same hard; // register to the result of LO and HI instructions. This pass is always; // scheduled after register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp:525,down,down,525,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp,1,['down'],['down']
Availability,"//=== MallocChecker.cpp - A malloc/free checker -------------------*- C++ -*--//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a variety of memory management related checkers, such as; // leak, double free, and use-after-free.; //; // The following checkers are defined here:; //; // * MallocChecker; // Despite its name, it models all sorts of memory allocations and; // de- or reallocation, including but not limited to malloc, free,; // relloc, new, delete. It also reports on a variety of memory misuse; // errors.; // Many other checkers interact very closely with this checker, in fact,; // most are merely options to this one. Other checkers may register; // MallocChecker, but do not enable MallocChecker's reports (more details; // to follow around its field, ChecksEnabled).; // It also has a boolean ""Optimistic"" checker option, which if set to true; // will cause the checker to model user defined memory management related; // functions annotated via the attribute ownership_takes, ownership_holds; // and ownership_returns.; //; // * NewDeleteChecker; // Enables the modeling of new, new[], delete, delete[] in MallocChecker,; // and checks for related double-free and use-after-free errors.; //; // * NewDeleteLeaksChecker; // Checks for leaks related to new, new[], delete, delete[].; // Depends on NewDeleteChecker.; //; // * MismatchedDeallocatorChecker; // Enables checking whether memory is deallocated with the correspending; // allocation function in MallocChecker, such as malloc() allocated; // regions are only freed by free(), new by delete, new[] by delete[].; //; // InnerPointerChecker interacts very closely with MallocChecker, but unlike; // the above checkers, it has it's own file, hence the ma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:785,error,errors,785,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['error'],['errors']
Availability,"//===- AArch64FrameLowering.cpp - AArch64 Frame Lowering -------*- C++ -*-====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the AArch64 implementation of TargetFrameLowering class.; //; // On AArch64, stack frames are structured as follows:; //; // The stack grows downward.; //; // All of the individual frame areas on the frame below are optional, i.e. it's; // possible to create a function so that the particular area isn't present; // in the frame.; //; // At function entry, the ""frame"" looks as follows:; //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- sp; // | | Lower address; //; //; // After the prologue has run, the frame has the following general structure.; // Note that this doesn't depict the case where a red-zone is used. Also,; // technically the last frame area (VLAs) doesn't get created until in the; // main function body, after the prologue is run. However, it's depicted here; // for completeness.; //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------|; // | |; // | (Win64 only) varargs from reg |; // | |; // |-----------------------------------|; // | |; // | callee-saved gpr registers | <--.; // | | | On Darwin platforms these; // |- - - - - - - - - - - - - - - - - -| | callee saves are swapped,; // | prev_lr | | (frame record first); // | prev_fp | <--'; // | async context if needed |; // | (a.k.a. ""frame record"") |; // |-----------------------------------| <- fp(=x29); // | |; // | callee-saved fp/simd/SVE regs |; // | |; // |----------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:543,down,downward,543,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['down'],['downward']
Availability,"//===- AArch64LoopIdiomTransform.cpp - Loop idiom recognition -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass implements a pass that recognizes certain loop idioms and; // transforms them into more optimized versions of the same loop. In cases; // where this happens, it can be a significant performance win.; //; // We currently only recognize one loop that finds the first mismatched byte; // in an array and returns the index, i.e. something like:; //; // while (++i != n) {; // if (a[i] != b[i]); // break;; // }; //; // In this example we can actually vectorize the loop despite the early exit,; // although the loop vectorizer does not support it. It requires some extra; // checks to deal with the possibility of faulting loads when crossing page; // boundaries. However, even with these checks it is still profitable to do the; // transformation.; //; //===----------------------------------------------------------------------===//; //; // TODO List:; //; // * Add support for the inverse case where we scan for a matching element.; // * Permit 64-bit induction variable types.; // * Recognize loops that increment the IV *after* comparing bytes.; // * Allow 32-bit sign-extends of the IV used by the GEP.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:1003,fault,faulting,1003,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['fault'],['faulting']
Availability,"//===- AArch64SpeculationHardening.cpp - Harden Against Missspeculation --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass to insert code to mitigate against side channel; // vulnerabilities that may happen under control flow miss-speculation.; //; // The pass implements tracking of control flow miss-speculation into a ""taint""; // register. That taint register can then be used to mask off registers with; // sensitive data when executing under miss-speculation, a.k.a. ""transient; // execution"".; // This pass is aimed at mitigating against SpectreV1-style vulnarabilities.; //; // It also implements speculative load hardening, i.e. using the taint register; // to automatically mask off loaded data.; //; // As a possible follow-on improvement, also an intrinsics-based approach as; // explained at https://lwn.net/Articles/759423/ could be implemented on top of; // the current design.; //; // For AArch64, the following implementation choices are made to implement the; // tracking of control flow miss-speculation into a taint register:; // Some of these are different than the implementation choices made in; // the similar pass implemented in X86SpeculativeLoadHardening.cpp, as; // the instruction set characteristics result in different trade-offs.; // - The speculation hardening is done after register allocation. With a; // relative abundance of registers, one register is reserved (X16) to be; // the taint register. X16 is expected to not clash with other register; // reservation mechanisms with very high probability because:; // . The AArch64 ABI doesn't guarantee X16 to be retained across any call.; // . The only way to request X16 to be used as a programmer is through; // inline assembly. In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:668,mask,mask,668,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,2,['mask'],['mask']
Availability,"//===- ARMFrameLowering.cpp - ARM Frame Information -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the ARM implementation of TargetFrameLowering class.; //; //===----------------------------------------------------------------------===//; //; // This file contains the ARM implementation of TargetFrameLowering class.; //; // On ARM, stack frames are structured as follows:; //; // The stack grows downward.; //; // All of the individual frame areas on the frame below are optional, i.e. it's; // possible to create a function so that the particular area isn't present; // in the frame.; //; // At function entry, the ""frame"" looks as follows:; //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- sp; // | | Lower address; //; //; // After the prologue has run, the frame has the following general structure.; // Technically the last frame area (VLAs) doesn't get created until in the; // main function body, after the prologue is run. However, it's depicted here; // for completeness.; //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- (sp at function entry); // | |; // | varargs from registers |; // | |; // |-----------------------------------|; // | |; // | prev_lr |; // | prev_fp |; // | (a.k.a. ""frame record"") |; // | |; // |- - - - - - - - - - - - - - - - - -| <- fp (r7 or r11); // | |; // | callee-saved gpr registers |; // | |; // |-----------------------------------|; // | |; // | callee-saved fp/simd regs |; // | |; // |-----------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:701,down,downward,701,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['down'],['downward']
Availability,"//===- ASTDiff.h - AST differencing API -----------------------*- C++ -*- -===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file specifies an interface that can be used to compare C++ syntax; // trees.; //; // We use the gumtree algorithm which combines a heuristic top-down search that; // is able to match large subtrees that are equivalent, with an optimal; // algorithm to match small subtrees.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h:538,down,down,538,interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,1,['down'],['down']
Availability,"//===- ASTImportError.h - Define errors while importing AST -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ASTImportError class which basically defines the kind; // of error while importing AST .; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImportError.h:33,error,errors,33,interpreter/llvm-project/clang/include/clang/AST/ASTImportError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImportError.h,2,['error'],"['error', 'errors']"
Availability,"//===- AddressSanitizer.cpp - memory error detector -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is a part of AddressSanitizer, an address basic correctness; // checker.; // Details of the algorithm:; // https://github.com/google/sanitizers/wiki/AddressSanitizerAlgorithm; //; // FIXME: This sanitizer does not yet handle scalable vectors; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:37,error,error,37,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['error'],['error']
Availability,"//===- AsmWriter.cpp - Printing LLVM as an assembly file ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This library implements `print` family of functions in classes like; // Module, Function, Value, etc. In-memory representation of those classes is; // converted to IR strings.; //; // Note that these routines must be extremely tolerant of various errors in the; // LLVM code, because it can be used for debugging transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:610,toler,tolerant,610,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,2,"['error', 'toler']","['errors', 'tolerant']"
Availability,"//===- BinaryStreamError.cpp - Error extensions for streams -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BinaryStreamError.cpp:31,Error,Error,31,interpreter/llvm-project/llvm/lib/Support/BinaryStreamError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BinaryStreamError.cpp,1,['Error'],['Error']
Availability,"//===- BinaryStreamError.h - Error extensions for Binary Streams *- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamError.h:29,Error,Error,29,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamError.h,1,['Error'],['Error']
Availability,"//===- BugDriver.cpp - Top-Level BugPoint class implementation ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class contains all of the shared state and information that is used by; // the BugPoint tool to track down errors in optimizations. This class is the; // main driver class that invokes all sub-functionality.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp:490,down,down,490,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,2,"['down', 'error']","['down', 'errors']"
Availability,"//===- BugDriver.h - Top-Level BugPoint class -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class contains all of the shared state and information that is used by; // the BugPoint tool to track down errors in optimizations. This class is the; // main driver class that invokes all sub-functionality.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h:490,down,down,490,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,2,"['down', 'error']","['down', 'errors']"
Availability,"//===- CallGraph.h - AST-based Call graph -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the AST-based CallGraph.; //; // A call graph for functions whose definitions/bodies are available in the; // current translation unit. The graph has a ""virtual"" root node that contains; // edges to all externally available functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h:491,avail,available,491,interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CallGraph.h,2,['avail'],['available']
Availability,"//===- CallPrinter.cpp - DOT printer for call graph -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines '-dot-callgraph', which emit a callgraph.<fnname>.dot; // containing the call graph of a module.; //; // There is also a pass available to directly call dotty ('-view-callgraph').; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallPrinter.cpp:527,avail,available,527,interpreter/llvm-project/llvm/lib/Analysis/CallPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CallPrinter.cpp,1,['avail'],['available']
Availability,"//===- CheckerRegistry.cpp - Maintains all available checkers -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:43,avail,available,43,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,1,['avail'],['available']
Availability,"//===- CheckerRegistry.h - Maintains all available checkers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerRegistryData.cpp:41,avail,available,41,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerRegistryData.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CheckerRegistryData.cpp,1,['avail'],['available']
Availability,"//===- CheckerRegistry.h - Maintains all available checkers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Contains the logic for parsing the TableGen file Checkers.td, and parsing the; // specific invocation of the analyzer (which checker/package is enabled, values; // of their options, etc). This is in the frontend library because checker; // registry functions are called from here but are defined in the dependent; // library libStaticAnalyzerCheckers, but the actual data structure that holds; // the parsed information is in the Core library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h:41,avail,available,41,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,1,['avail'],['available']
Availability,"//===- CodeGenTarget.cpp - CodeGen Target Class Wrapper -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class wraps target description classes used by the various code; // generation TableGen backends. This makes it easier to access the data and; // provides a single place that needs to check it for validity. All of these; // classes abort on error conditions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp:629,error,error,629,interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,1,['error'],['error']
Availability,"//===- CodeGenTarget.h - Target Class Wrapper -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines wrappers for the Target class and related global; // functionality. This makes it easier to access the data and provides a single; // place that needs to check it for validity. All of these classes abort; // on error conditions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h:612,error,error,612,interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h,1,['error'],['error']
Availability,"//===- CodeViewError.cpp - Error extensions for CodeView --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewError.cpp:27,Error,Error,27,interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/CodeView/CodeViewError.cpp,1,['Error'],['Error']
Availability,"//===- CodeViewError.h - Error extensions for CodeView ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/CodeViewError.h:25,Error,Error,25,interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/CodeViewError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/CodeViewError.h,1,['Error'],['Error']
Availability,"//===- CompilationDatabase.cpp --------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains implementations of the CompilationDatabase base class; // and the FixedCompilationDatabase.; //; // FIXME: Various functions that take a string &ErrorMessage should be upgraded; // to Expected.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp:547,Error,ErrorMessage,547,interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CompilationDatabase.cpp,1,['Error'],['ErrorMessage']
Availability,"//===- ComplexDeinterleavingPass.cpp --------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Identification:; // This step is responsible for finding the patterns that can be lowered to; // complex instructions, and building a graph to represent the complex; // structures. Starting from the ""Converging Shuffle"" (a shuffle that; // reinterleaves the complex components, with a mask of <0, 2, 1, 3>), the; // operands are evaluated and identified as ""Composite Nodes"" (collections of; // instructions that can potentially be lowered to a single complex; // instruction). This is performed by checking the real and imaginary components; // and tracking the data flow for each component while following the operand; // pairs. Validity of each node is expected to be done upon creation, and any; // validation errors should halt traversal and prevent further graph; // construction.; // Instead of relying on Shuffle operations, vector interleaving and; // deinterleaving can be represented by vector.interleave2 and; // vector.deinterleave2 intrinsics. Scalable vectors can be represented only by; // these intrinsics, whereas, fixed-width vectors are recognized for both; // shufflevector instruction and intrinsics.; //; // Replacement:; // This step traverses the graph built up by identification, delegating to the; // target to validate and generate the correct intrinsics, and plumbs them; // together connecting each end of the new intrinsics graph to the existing; // use-def chain. This step is assumed to finish successfully, as all; // information is expected to be correct by this point.; //; //; // Internal data structure:; // ComplexDeinterleavingGraph:; // Keeps references to all the valid Compos",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp:668,mask,mask,668,interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp,1,['mask'],['mask']
Availability,"//===- ConstantMerge.cpp - Merge duplicate global constants ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to a pass that merges duplicate global; // constants together into a single constant that is shared. This is useful; // because some passes (ie TraceValues) insert a lot of string constants into; // the program, regardless of whether or not an existing string is available.; //; // Algorithm: ConstantMerge is designed to build up a map of available constants; // and eliminate duplicates when it is initialized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp:678,avail,available,678,interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,2,['avail'],['available']
Availability,"//===- ConstantMerge.h - Merge duplicate global constants -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to a pass that merges duplicate global; // constants together into a single constant that is shared. This is useful; // because some passes (ie TraceValues) insert a lot of string constants into; // the program, regardless of whether or not an existing string is available.; //; // Algorithm: ConstantMerge is designed to build up a map of available constants; // and eliminate duplicates when it is initialized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h:678,avail,available,678,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h,2,['avail'],['available']
Availability,"//===- CrashDebugger.cpp - Debug compilation crashes ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the bugpoint internals that narrow down compilation crashes; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp:436,down,down,436,interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,1,['down'],['down']
Availability,"//===- DIAError.h - Error extensions for PDB DIA implementation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAError.h:20,Error,Error,20,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAError.h,1,['Error'],['Error']
Availability,"//===- DbiStreamBuilder.cpp - PDB Dbi Stream Creation -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The data structures defined in this file are based on the reference; // implementation which is available at; // https://github.com/Microsoft/microsoft-pdb/blob/master/PDB/dbi/gsi.cpp; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GSIStreamBuilder.cpp:479,avail,available,479,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GSIStreamBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GSIStreamBuilder.cpp,1,['avail'],['available']
Availability,"//===- DeadStoreElimination.h - Fast Dead Store Elimination -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a trivial dead store elimination that only considers; // basic-block local redundant stores.; //; // FIXME: This should eventually be extended to be a post-dominator tree; // traversal. Doing so would be pretty trivial.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h:479,redundant,redundant,479,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h,1,['redundant'],['redundant']
Availability,"//===- DependencyDirectivesScanner.cpp ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp:565,down,down,565,interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,1,['down'],['down']
Availability,"//===- DomPrinter.cpp - DOT printer for the dominance trees ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines '-dot-dom' and '-dot-postdom' analysis passes, which emit; // a dom.<fnname>.dot or postdom.<fnname>.dot file for each function in the; // program, with a graph of the dominance/postdominance tree of that; // function.; //; // There are also passes available to directly call dotty ('-view-dom' or; // '-view-postdom'). By appending '-only' like '-dot-dom-only' only the; // names of the bbs are printed, but the content is hidden.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomPrinter.cpp:647,avail,available,647,interpreter/llvm-project/llvm/lib/Analysis/DomPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DomPrinter.cpp,1,['avail'],['available']
Availability,"//===- Dominators.cpp - Dominator Calculation -----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements simple dominator construction algorithms for finding; // forward dominators. Postdominators are available in libanalysis, but are not; // included in libvmcore, because it's not needed. Forward dominators are; // needed to support the Verifier pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Dominators.cpp:500,avail,available,500,interpreter/llvm-project/llvm/lib/IR/Dominators.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Dominators.cpp,1,['avail'],['available']
Availability,"//===- DynamicTypePropagation.cpp ------------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains two checkers. One helps the static analyzer core to track; // types, the other does type inference on Obj-C generics and report type; // errors.; //; // Dynamic Type Propagation:; // This checker defines the rules for dynamic type gathering and propagation.; //; // Generics Checker for Objective-C:; // This checker tries to find type errors that the compiler is not able to catch; // due to the implicit conversions that were introduced for backward; // compatibility.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp:539,error,errors,539,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,2,['error'],['errors']
Availability,"//===- EarlyCSE.cpp - Simple and fast CSE pass ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs a simple dominator tree walk that eliminates trivially; // redundant instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp:461,redundant,redundant,461,interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/EarlyCSE.cpp,1,['redundant'],['redundant']
Availability,"//===- ElimAvailExtern.cpp - DCE unreachable internal functions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transform is designed to eliminate available external global; // definitions from the program, turning them into declarations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp:423,avail,available,423,interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,1,['avail'],['available']
Availability,"//===- ElimAvailExtern.h - Optimize Global Variables ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transform is designed to eliminate available external global; // definitions from the program, turning them into declarations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h:423,avail,available,423,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h,1,['avail'],['available']
Availability,"//===- Error.cpp - system_error extensions for Object -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines a new error_category for the Object library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/Error.cpp:7,Error,Error,7,interpreter/llvm-project/llvm/lib/Object/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/Error.cpp,1,['Error'],['Error']
Availability,"//===- Error.cpp - system_error extensions for PDB --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/GenericError.cpp:7,Error,Error,7,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/GenericError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/GenericError.cpp,1,['Error'],['Error']
Availability,"//===- Error.cpp - system_error extensions for llvm-cxxdump -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines a new error_category for the llvm-cxxdump tool.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.cpp:7,Error,Error,7,interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.cpp,1,['Error'],['Error']
Availability,"//===- Error.cpp - tblgen error handling helper routines --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains error handling helper routines to pretty-print diagnostic; // messages from tblgen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp:7,Error,Error,7,interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,3,"['Error', 'error']","['Error', 'error']"
Availability,"//===- Error.h - system_error extensions for Object -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This declares a new error_category for the Object library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/Error.h:7,Error,Error,7,interpreter/llvm-project/llvm/include/llvm/Object/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/Error.h,1,['Error'],['Error']
Availability,"//===- Error.h - system_error extensions for llvm-cxxdump -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This declares a new error_category for the llvm-cxxdump tool.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.h:7,Error,Error,7,interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cxxdump/Error.h,1,['Error'],['Error']
Availability,"//===- Error.h --------------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/Error.h:7,Error,Error,7,interpreter/llvm-project/llvm/tools/llvm-dwarfutil/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfutil/Error.h,1,['Error'],['Error']
Availability,"//===- ErrorCollector.cpp -------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===-----------------------------------------------------------------------===/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.cpp:7,Error,ErrorCollector,7,interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.cpp,1,['Error'],['ErrorCollector']
Availability,"//===- ErrorCollector.h -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===-----------------------------------------------------------------------===/; ///; /// This class collects errors that should be reported or ignored in aggregate.; ///; /// Like llvm::Error, an ErrorCollector cannot be copied. Unlike llvm::Error,; /// an ErrorCollector may be destroyed if it was originally constructed to treat; /// errors as non-fatal. In this case, all Errors are consumed upon destruction.; /// An ErrorCollector may be initially constructed (or escalated) such that; /// errors are treated as fatal. This causes a crash if an attempt is made to; /// delete the ErrorCollector when some Errors have not been retrieved via; /// makeError().; ///; //===-----------------------------------------------------------------------===/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.h:7,Error,ErrorCollector,7,interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ifs/ErrorCollector.h,12,"['Error', 'error']","['Error', 'ErrorCollector', 'Errors', 'errors']"
Availability,"//===- ExtractAPI/AvailabilityInfo.h - Availability Info --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the AvailabilityInfo struct that collects availability; /// attributes of a symbol.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/AvailabilityInfo.h:18,Avail,AvailabilityInfo,18,interpreter/llvm-project/clang/include/clang/ExtractAPI/AvailabilityInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/AvailabilityInfo.h,4,"['Avail', 'avail']","['Availability', 'AvailabilityInfo', 'availability']"
Availability,"//===- FaultMaps.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FaultMaps.cpp:7,Fault,FaultMaps,7,interpreter/llvm-project/llvm/lib/CodeGen/FaultMaps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FaultMaps.cpp,1,['Fault'],['FaultMaps']
Availability,"//===- FaultMaps.h - The ""FaultMaps"" section --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FaultMaps.h:7,Fault,FaultMaps,7,interpreter/llvm-project/llvm/include/llvm/CodeGen/FaultMaps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FaultMaps.h,2,['Fault'],['FaultMaps']
Availability,"//===- FileCheck.cpp - Check that File's Contents match what is expected --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // FileCheck does a line-by line check of a file that validates whether it; // contains the expected content. This is useful for regression tests etc.; //; // This program exits with an exit status of 2 on error, exit status of 0 if; // the file matched the expected contents, and exit status of 1 if it did not; // contain the expected contents.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp:586,error,error,586,interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/FileCheck/FileCheck.cpp,1,['error'],['error']
Availability,"//===- GCDAntipatternChecker.cpp ---------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines GCDAntipatternChecker which checks against a common; // antipattern when synchronous API is emulated from asynchronous callbacks; // using a semaphore:; //; // dispatch_semaphore_t sema = dispatch_semaphore_create(0);; //; // AnyCFunctionCall(^{; // // code…; // dispatch_semaphore_signal(sema);; // }); // dispatch_semaphore_wait(sema, *); //; // Such code is a common performance problem, due to inability of GCD to; // properly handle QoS when a combination of queues and semaphores is used.; // Good code would either use asynchronous API (when available), or perform; // the necessary action in asynchronous callback.; //; // Currently, the check is performed using a simple heuristical AST pattern; // matching.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GCDAntipatternChecker.cpp:950,avail,available,950,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GCDAntipatternChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GCDAntipatternChecker.cpp,1,['avail'],['available']
Availability,"//===- GVN.cpp - Eliminate redundant values and loads ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs global value numbering to eliminate fully redundant; // instructions. It also performs simple dead load elimination.; //; // Note that this pass does the value numbering itself; it does not use the; // ValueNumbering analysis passes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:27,redundant,redundant,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,2,['redundant'],['redundant']
Availability,"//===- GVN.h - Eliminate redundant values and loads -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's Global Value Numbering pass; /// which eliminates fully redundant instructions. It also does somewhat Ad-Hoc; /// PRE and dead load elimination.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h:25,redundant,redundant,25,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,2,['redundant'],['redundant']
Availability,"//===- GVNHoist.cpp - Hoist scalar and load expressions -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass hoists expressions from branches to a common dominator. It uses; // GVN (global value numbering) to discover expressions computing the same; // values. The primary goals of code-hoisting are:; // 1. To reduce the code size.; // 2. In some cases reduce critical path (by exposing more ILP).; //; // The algorithm factors out the reachability of values such that multiple; // queries to find reachability of values are fast. This is based on finding the; // ANTIC points in the CFG which do not change during hoisting. The ANTIC points; // are basically the dominance-frontiers in the inverse graph. So we introduce a; // data structure (CHI nodes) to keep track of values flowing out of a basic; // block. We only do this for values with multiple occurrences in the function; // as they are the potential hoistable candidates. This approach allows us to; // hoist instructions to a basic block with more than two successors, as well as; // deal with infinite loops in a trivial way.; //; // Limitations: This pass does not hoist fully redundant expressions because; // they are already handled by GVN-PRE. It is advisable to run gvn-hoist before; // and after gvn-pre because gvn-pre creates opportunities for more instructions; // to be hoisted.; //; // Hoisting may affect the performance in some cases. To mitigate that, hoisting; // is disabled in the following cases.; // 1. Scalars across calls.; // 2. geps when corresponding load/store cannot be hoisted.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:1427,redundant,redundant,1427,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,1,['redundant'],['redundant']
Availability,"//===- GlobalISelCombinerMatchTableEmitter.cpp - --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Generate a combiner implementation for GlobalISel from a declarative; /// syntax using GlobalISelMatchTable.; ///; /// Usually, TableGen backends use ""assert is an error"" as a means to report; /// invalid input. They try to diagnose common case but don't try very hard and; /// crashes can be common. This backend aims to behave closer to how a language; /// compiler frontend would behave: we try extra hard to diagnose invalid inputs; /// early, and any crash should be considered a bug (= a feature or diagnostic; /// is missing).; ///; /// While this can make the backend a bit more complex than it needs to be, it; /// pays off because MIR patterns can get complicated. Giving useful error; /// messages to combine writers can help boost their productivity.; ///; /// As with anything, a good balance has to be found. We also don't want to; /// write hundreds of lines of code to detect edge cases. In practice, crashing; /// very occasionally, or giving poor errors in some rare instances, is fine.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:554,error,error,554,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,3,['error'],"['error', 'errors']"
Availability,"//===- GlobalsStream.cpp - PDB Index of Symbols by Name ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The on-disk structores used in this file are based on the reference; // implementation which is available at; // https://github.com/Microsoft/microsoft-pdb/blob/master/PDB/dbi/gsi.h; //; // When you are reading the reference source code, you'd find the; // information below useful.; //; // - ppdb1->m_fMinimalDbgInfo seems to be always true.; // - SMALLBUCKETS macro is defined.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GlobalsStream.cpp:479,avail,available,479,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GlobalsStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/GlobalsStream.cpp,1,['avail'],['available']
Availability,"//===- HWAddressSanitizer.cpp - memory access error detector --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file is a part of HWAddressSanitizer, an address basic correctness; /// checker based on tagged addressing.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp:46,error,error,46,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/HWAddressSanitizer.cpp,1,['error'],['error']
Availability,"//===- HexagonPacketizer.cpp - VLIW packetizer ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a simple VLIW packetizer using DFA. The packetizer works on; // machine basic blocks. For each instruction I in BB, the packetizer consults; // the DFA to see if machine resources are available to execute I. If so, the; // packetizer checks if I depends on any instruction J in the current packet.; // If no dependency is found, I is added to current packet and machine resource; // is marked as taken. If any dependency is found, a target API call is made to; // prune the dependence.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:583,avail,available,583,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['avail'],['available']
Availability,"//===- HexagonVectorLoopCarriedReuse.cpp ----------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass removes the computation of provably redundant expressions that have; // been computed earlier in a previous iteration. It relies on the use of PHIs; // to identify loop carried dependences. This is scalar replacement for vector; // types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp:429,redundant,redundant,429,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp,1,['redundant'],['redundant']
Availability,"//===- HexagonVectorLoopCarriedReuse.h ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass removes the computation of provably redundant expressions that have; // been computed earlier in a previous iteration. It relies on the use of PHIs; // to identify loop carried dependences. This is scalar replacement for vector; // types.; //; //-----------------------------------------------------------------------------; // Motivation: Consider the case where we have the following loop structure.; //; // Loop:; // t0 = a[i];; // t1 = f(t0);; // t2 = g(t1);; // ...; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // cond_branch <Loop>; //; // This can be converted to; // t00 = a[0];; // t10 = f(t00);; // t20 = g(t10);; // Loop:; // t2 = t20;; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // t20 = t5; // cond_branch <Loop>; //; // SROA does a good job of reusing a[i+1] as a[i] in the next iteration.; // Such a loop comes to this pass in the following form.; //; // LoopPreheader:; // X0 = a[0];; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // t1 = f(X2) <-- I1; // t2 = g(t1); // ...; // X1 = a[i+1]; // t4 = f(X1) <-- I2; // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // In this pass, we look for PHIs such as X2 whose incoming values come only; // from the Loop Preheader and over the backedge and additionaly, both these; // values are the results of the same operation in terms of opcode. We call such; // a PHI node a dependence chain or DepChain. In this case, the dependence of X2; // over X1 is carried over only one iteration and so the DepChain is only one; // PHI node long.; //; // Then, we traverse the uses of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h:429,redundant,redundant,429,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,1,['redundant'],['redundant']
Availability,"//===- ImplicitNullChecks.cpp - Fold null checks into memory accesses -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass turns explicit null checks of the form; //; // test %r10, %r10; // je throw_npe; // movl (%r10), %esi; // ...; //; // to; //; // faulting_load_op(""movl (%r10), %esi"", throw_npe); // ...; //; // With the help of a runtime that understands the .fault_maps section,; // faulting_load_op branches to throw_npe if executing movl (%r10), %esi incurs; // a page fault.; // Store and LoadStore are also supported.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ImplicitNullChecks.cpp:748,fault,fault,748,interpreter/llvm-project/llvm/lib/CodeGen/ImplicitNullChecks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ImplicitNullChecks.cpp,1,['fault'],['fault']
Availability,"//===- IndirectCallPromotion.cpp - Optimizations based on value profiling -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the transformation that promotes indirect calls to; // conditional direct calls when the indirect-call value profile metadata is; // available.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp:537,avail,available,537,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/IndirectCallPromotion.cpp,1,['avail'],['available']
Availability,"//===- InductiveRangeCheckElimination.cpp - -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The InductiveRangeCheckElimination pass splits a loop's iteration space into; // three disjoint ranges. It does that in a way such that the loop running in; // the middle loop provably does not need range checks. As an example, it will; // convert; //; // len = < known positive >; // for (i = 0; i < n; i++) {; // if (0 <= i && i < len) {; // do_something();; // } else {; // throw_out_of_bounds();; // }; // }; //; // to; //; // len = < known positive >; // limit = smin(n, len); // // no first segment; // for (i = 0; i < limit; i++) {; // if (0 <= i && i < len) { // this check is fully redundant; // do_something();; // } else {; // throw_out_of_bounds();; // }; // }; // for (i = limit; i < n; i++) {; // if (0 <= i && i < len) {; // do_something();; // } else {; // throw_out_of_bounds();; // }; // }; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp:974,redundant,redundant,974,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp,1,['redundant'],['redundant']
Availability,"//===- InterferenceCache.h - Caching per-block interference ----*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // InterferenceCache remembers per-block interference from LiveIntervalUnions,; // fixed RegUnit interference, and register masks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h:504,mask,masks,504,interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterferenceCache.h,1,['mask'],['masks']
Availability,"//===- IntervalPartition.h - Interval partition Calculation -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the IntervalPartition class, which; // calculates and represents the interval partition of a function, or a; // preexisting interval partition.; //; // In this way, the interval partition may be used to reduce a flow graph down; // to its degenerate single node interval partition (unless it is irreducible).; //; // TODO: The IntervalPartition class should take a bool parameter that tells; // whether it should add the ""tails"" of an interval to an interval itself or if; // they should be represented as distinct intervals.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h:644,down,down,644,interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,1,['down'],['down']
Availability,"//===- JMCInstrumenter.cpp - JMC Instrumentation --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // JMCInstrumenter pass:; // - instrument each function with a call to __CheckForDebuggerJustMyCode. The; // sole argument should be defined in .msvcjmc. Each flag is 1 byte initilized; // to 1.; // - create the dummy COMDAT function __JustMyCode_Default to prevent linking; // error if __CheckForDebuggerJustMyCode is not available.; // - For MSVC:; // add ""/alternatename:__CheckForDebuggerJustMyCode=__JustMyCode_Default"" to; // ""llvm.linker.options""; // For ELF:; // Rename __JustMyCode_Default to __CheckForDebuggerJustMyCode and mark it as; // weak symbol.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/JMCInstrumenter.cpp:658,error,error,658,interpreter/llvm-project/llvm/lib/CodeGen/JMCInstrumenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/JMCInstrumenter.cpp,2,"['avail', 'error']","['available', 'error']"
Availability,"//===- LCSSA.h - Loop-closed SSA transform Pass -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass transforms loops by placing phi nodes at the end of the loops for; // all values that are live across the loop boundary. For example, it turns; // the left into the right code:; //; // for (...) for (...); // if (c) if (c); // X1 = ... X1 = ...; // else else; // X2 = ... X2 = ...; // X3 = phi(X1, X2) X3 = phi(X1, X2); // ... = X3 + 4 X4 = phi(X3); // ... = X4 + 4; //; // This is still valid LLVM; the extra phi nodes are purely redundant, and will; // be trivially eliminated by InstCombine. The major benefit of this; // transformation is that it makes many other loop optimizations, such as; // LoopUnswitching, simpler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LCSSA.h:824,redundant,redundant,824,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LCSSA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LCSSA.h,1,['redundant'],['redundant']
Availability,"//===- LegacyPassManager.h - Legacy Container for Passes --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the legacy PassManager class. This class is used to hold,; // maintain, and optimize execution of Passes. The PassManager class ensures; // that analysis results are available before a pass runs, and that Pass's are; // destroyed when the PassManager is destroyed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h:567,avail,available,567,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,1,['avail'],['available']
Availability,"//===- ListReducer.h - Trim down list while retaining property --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class is to be used as a base class for operations that want to zero in; // on a subset of the input which still causes the bug we are tracking.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h:28,down,down,28,interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h,1,['down'],['down']
Availability,"//===- LiveRangeCalc.h - Calculate live ranges -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The LiveRangeCalc class can be used to implement the computation of; // live ranges from scratch.; // It caches information about values in the CFG to speed up repeated; // operations on the same live range. The cache can be shared by; // non-overlapping live ranges. SplitKit uses that when computing the live; // range of split products.; //; // A low-level interface is available to clients that know where a variable is; // live, but don't know which value it has as every point. LiveRangeCalc will; // propagate values down the dominator tree, and even insert PHI-defs where; // needed. SplitKit uses this faster interface when possible.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:755,avail,available,755,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,2,"['avail', 'down']","['available', 'down']"
Availability,"//===- LoopAnalysisManager.h - Loop analysis management ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides classes for managing per-loop analyses. These are; /// typically used as part of a loop pass pipeline over the loop nests of; /// a function.; ///; /// Loop analyses are allowed to make some simplifying assumptions:; /// 1) Loops are, where possible, in simplified form.; /// 2) Loops are *always* in LCSSA form.; /// 3) A collection of analysis results are available:; /// - LoopInfo; /// - DominatorTree; /// - ScalarEvolution; /// - AAManager; ///; /// The primary mechanism to provide these invariants is the loop pass manager,; /// but they can also be manually provided in order to reason about a loop from; /// outside of a dedicated pass manager.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:775,avail,available,775,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['avail'],['available']
Availability,"//===- LoopPassManager.h - Loop pass management -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides classes for managing a pipeline of passes over loops; /// in LLVM IR.; ///; /// The primary loop pass pipeline is managed in a very particular way to; /// provide a set of core guarantees:; /// 1) Loops are, where possible, in simplified form.; /// 2) Loops are *always* in LCSSA form.; /// 3) A collection of Loop-specific analysis results are available:; /// - LoopInfo; /// - DominatorTree; /// - ScalarEvolution; /// - AAManager; /// 4) All loop passes preserve #1 (where possible), #2, and #3.; /// 5) Loop passes run over each loop in the loop nest from the innermost to; /// the outermost. Specifically, all inner loops are processed before; /// passes run over outer loops. When running the pipeline across an inner; /// loop creates new inner loops, those are added and processed in this; /// order as well.; ///; /// This process is designed to facilitate transformations which simplify,; /// reduce, and remove loops. For passes which are more oriented towards; /// optimizing loops, especially optimizing loop *nests* instead of single; /// loops in isolation, this framework is less interesting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:762,avail,available,762,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['avail'],['available']
Availability,"//===- LoopStrengthReduce.cpp - Strength Reduce IVs in Loops --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; // Terminology note: this code has a lot of handling for ""post-increment"" or; // ""post-inc"" users. This is not talking about post-increment addressing modes;; // it is instead talking about code like this:; //; // %i = phi [ 0, %entry ], [ %i.next, %latch ]; // ...; // %i.next = add %i, 1; // %c = icmp eq %i.next, %n; //; // The SCEV for %i is {0,+,1}<%L>. The SCEV for %i.next is {1,+,1}<%L>, however; // it's useful to think about these as the same register, with some uses using; // the value of the register before the add and some using it after. In this; // example, the icmp is a post-increment user, since it uses %i.next, which is; // the value of the induction variable after the increment. The other common; // case of post-increment users is users outside the loop.; //; // TODO: More sophistication in the way Formulae are generated and filtered.; //; // TODO: Handle multiple loops at a time.; //; // TODO: Should the addressing mode BaseGV be changed to a ConstantExpr instead; // of a GlobalValue?; //; // TODO: When truncation is free, truncate ICmp users' operands",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:797,avail,available,797,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['avail'],['available']
Availability,"//===- LoopStrengthReduce.h - Loop Strength Reduce Pass ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h:797,avail,available,797,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,1,['avail'],['available']
Availability,"//===- LowerMatrixIntrinsics.h - Lower matrix intrinsics. -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass lowers matrix intrinsics down to vector operations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LowerMatrixIntrinsics.h:418,down,down,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LowerMatrixIntrinsics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LowerMatrixIntrinsics.h,1,['down'],['down']
Availability,"//===- MSFError.cpp - Error extensions for MSF files ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFError.cpp:22,Error,Error,22,interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/MSF/MSFError.cpp,1,['Error'],['Error']
Availability,"//===- MSFError.h - Error extensions for MSF Files --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFError.h:20,Error,Error,20,interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFError.h,1,['Error'],['Error']
Availability,"//===- MVETailPredication.cpp - MVE Tail Predication ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Armv8.1m introduced MVE, M-Profile Vector Extension, and low-overhead; /// branches to help accelerate DSP applications. These two extensions,; /// combined with a new form of predication called tail-predication, can be used; /// to provide implicit vector predication within a low-overhead loop.; /// This is implicit because the predicate of active/inactive lanes is; /// calculated by hardware, and thus does not need to be explicitly passed; /// to vector instructions. The instructions responsible for this are the; /// DLSTP and WLSTP instructions, which setup a tail-predicated loop and the; /// the total number of data elements processed by the loop. The loop-end; /// LETP instruction is responsible for decrementing and setting the remaining; /// elements to be processed and generating the mask of active lanes.; ///; /// The HardwareLoops pass inserts intrinsics identifying loops that the; /// backend will attempt to convert into a low-overhead loop. The vectorizer is; /// responsible for generating a vectorized loop in which the lanes are; /// predicated upon an get.active.lane.mask intrinsic. This pass looks at these; /// get.active.lane.mask intrinsic and attempts to convert them to VCTP; /// instructions. This will be picked up by the ARM Low-overhead loop pass later; /// in the backend, which performs the final transformation to a DLSTP or WLSTP; /// tail-predicated loop.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp:1197,mask,mask,1197,interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp,3,['mask'],['mask']
Availability,"//===- MachineCopyPropagation.cpp - Machine Copy Propagation Pass ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is an extremely simple MachineInstr-level copy propagation pass.; //; // This pass forwards the source of COPYs to the users of their destinations; // when doing so is legal. For example:; //; // %reg1 = COPY %reg0; // ...; // ... = OP %reg1; //; // If; // - %reg0 has not been clobbered by the time of the use of %reg1; // - the register class constraints are satisfied; // - the COPY def is the only value that reaches OP; // then this pass replaces the above with:; //; // %reg1 = COPY %reg0; // ...; // ... = OP %reg0; //; // This pass also removes some redundant COPYs. For example:; //; // %R1 = COPY %R0; // ... // No clobber of %R1; // %R0 = COPY %R1 <<< Removed; //; // or; //; // %R1 = COPY %R0; // ... // No clobber of %R0; // %R1 = COPY %R0 <<< Removed; //; // or; //; // $R0 = OP ...; // ... // No read/clobber of $R0 and $R1; // $R1 = COPY $R0 // $R0 is killed; // Replace $R0 with $R1 and remove the COPY; // $R1 = OP ...; // ...; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp:946,redundant,redundant,946,interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCopyPropagation.cpp,1,['redundant'],['redundant']
Availability,"//===- MatchDataInfo.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Contains utilities related to handling ""match data"" for GlobalISel; /// Combiners. Match data allows for setting some arbitrary data in the ""match""; /// phase and pass it down to the ""apply"" phase.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/MatchDataInfo.h:561,down,down,561,interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/MatchDataInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/MatchDataInfo.h,1,['down'],['down']
Availability,"//===- MemAlloc.h - Memory allocation functions -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines counterparts of C library allocation functions defined in; /// the namespace 'std'. The new allocation functions crash on allocation; /// failure instead of returning null pointer.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemAlloc.h:552,failure,failure,552,interpreter/llvm-project/llvm/include/llvm/Support/MemAlloc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemAlloc.h,1,['failure'],['failure']
Availability,"//===- MsgPackReader.h - Simple MsgPack reader ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is a MessagePack reader.; ///; /// See https://github.com/msgpack/msgpack/blob/master/spec.md for the full; /// standard.; ///; /// Typical usage:; /// \code; /// StringRef input = GetInput();; /// msgpack::Reader MPReader(input);; /// msgpack::Object Obj;; ///; /// while (true) {; /// Expected<bool> ReadObj = MPReader.read(&Obj);; /// if (!ReadObj); /// // Handle error...; /// if (!ReadObj.get()); /// break; // Reached end of input; /// switch (Obj.Kind) {; /// case msgpack::Type::Int:; // // Use Obj.Int; /// break;; /// // ...; /// }; /// }; /// \endcode; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h:768,error,error,768,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,1,['error'],['error']
Availability,"//===- MustExecute.h - Is an instruction known to execute--------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Contains a collection of routines for determining if a given instruction is; /// guaranteed to execute if a given point in control flow is reached. The most; /// common example is an instruction within a loop being provably executed if we; /// branch to the header of it's containing loop.; ///; /// There are two interfaces available to determine if an instruction is; /// executed once a given point in the control flow is reached:; /// 1) A loop-centric one derived from LoopSafetyInfo.; /// 2) A ""must be executed context""-based one implemented in the; /// MustBeExecutedContextExplorer.; /// Please refer to the class comments for more information.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:716,avail,available,716,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['avail'],['available']
Availability,"//===- Nodes.h - syntax nodes for C/C++ grammar constructs ----*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Syntax tree nodes for C, C++ and Objective-C grammar constructs.; //; // Nodes provide access to their syntactic components, e.g. IfStatement provides; // a way to get its condition, then and else branches, tokens for 'if' and; // 'else' keywords.; // When using the accessors, please assume they can return null. This happens; // because:; // - the corresponding subnode is optional in the C++ grammar, e.g. an else; // branch of an if statement,; // - syntactic errors occurred while parsing the corresponding subnode.; // One notable exception is ""introducer"" keywords, e.g. the accessor for the; // 'if' keyword of an if statement will never return null.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h:843,error,errors,843,interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h,1,['error'],['errors']
Availability,"//===- ObjCARCOpts.cpp - ObjC ARC Optimization ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file defines ObjC ARC optimizations. ARC stands for Automatic; /// Reference Counting and is a system for managing reference counts for objects; /// in Objective C.; ///; /// The optimizations performed include elimination of redundant, partially; /// redundant, and inconsequential reference count operations, elimination of; /// redundant weak pointer operations, and numerous minor simplifications.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp:626,redundant,redundant,626,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCOpts.cpp,3,['redundant'],['redundant']
Availability,"//===- ObjCAutoreleaseWriteChecker.cpp ----------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines ObjCAutoreleaseWriteChecker which warns against writes; // into autoreleased out parameters which cause crashes.; // An example of a problematic write is a write to @c error in the example; // below:; //; // - (BOOL) mymethod:(NSError *__autoreleasing *)error list:(NSArray*) list {; // [list enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {; // NSString *myString = obj;; // if ([myString isEqualToString:@""error""] && error); // *error = [NSError errorWithDomain:@""MyDomain"" code:-1];; // }];; // return false;; // }; //; // Such code will crash on read from `*error` due to the autorelease pool; // in `enumerateObjectsUsingBlock` implementation freeing the error object; // on exit from the function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAutoreleaseWriteChecker.cpp:570,error,error,570,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAutoreleaseWriteChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAutoreleaseWriteChecker.cpp,8,['error'],"['error', 'errorWithDomain']"
Availability,"//===- PublicsStream.cpp - PDB Public Symbol Stream -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The data structures defined in this file are based on the reference; // implementation which is available at; // https://github.com/Microsoft/microsoft-pdb/blob/master/PDB/dbi/gsi.h; //; // When you are reading the reference source code, you'd find the; // information below useful.; //; // - ppdb1->m_fMinimalDbgInfo seems to be always true.; // - SMALLBUCKETS macro is defined.; //; // The reference doesn't compile, so I learned just by reading code.; // It's not guaranteed to be correct.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PublicsStream.cpp:479,avail,available,479,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PublicsStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PublicsStream.cpp,1,['avail'],['available']
Availability,"//===- RISCVFoldMasks.cpp - MI Vector Pseudo Mask Peepholes ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass performs various peephole optimisations that fold masks into vector; // pseudo instructions after instruction selection.; //; // Currently it converts; // PseudoVMERGE_VVM %false, %false, %true, %allonesmask, %vl, %sew; // ->; // PseudoVMV_V_V %false, %true, %vl, %sew; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVFoldMasks.cpp:45,Mask,Mask,45,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVFoldMasks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVFoldMasks.cpp,2,"['Mask', 'mask']","['Mask', 'masks']"
Availability,"//===- RawError.h - Error extensions for raw PDB implementation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/RawError.h:20,Error,Error,20,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/RawError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/RawError.h,1,['Error'],['Error']
Availability,"//===- ReduceRegisterMasks.cpp - Specialized Delta Pass -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce custom register masks from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp:489,mask,masks,489,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp,1,['mask'],['masks']
Availability,"//===- RegionInfo.h - SESE region analysis ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Calculate a program structure tree built out of single entry single exit; // regions.; // The basic ideas are taken from ""The Program Structure Tree - Richard Johnson,; // David Pearson, Keshav Pingali - 1994"", however enriched with ideas from ""The; // Refined Process Structure Tree - Jussi Vanhatalo, Hagen Voelyer, Jana; // Koehler - 2009"".; // The algorithm to calculate these data structures however is completely; // different, as it takes advantage of existing information already available; // in (Post)dominace tree and dominance frontier passes. This leads to a simpler; // and in practice hopefully better performing algorithm. The runtime of the; // algorithms described in the papers above are both linear in graph size,; // O(V+E), whereas this algorithm is not, as the dominance frontier information; // itself is not, but in practice runtime seems to be in the order of magnitude; // of dominance tree calculation.; //; // WARNING: LLVM is generally very concerned about compile time such that; // the use of additional analysis passes in the default; // optimization sequence is avoided as much as possible.; // Specifically, if you do not need the RegionInfo, but dominance; // information could be sufficient please base your work only on; // the dominator tree. Most passes maintain it, such that using; // it has often near zero cost. In contrast RegionInfo is by; // default not available, is not maintained by existing; // transformations and there is no intention to do so.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:577,Ping,Pingali,577,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,3,"['Ping', 'avail']","['Pingali', 'available']"
Availability,"//===- RegisterScavenging.cpp - Machine register scavenging ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file implements the machine register scavenger. It can provide; /// information, such as unused registers, at any point in a machine basic; /// block. It also provides a mechanism to make registers available by evicting; /// them to spill slots.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp:598,avail,available,598,interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterScavenging.cpp,1,['avail'],['available']
Availability,"//===- RegisterScavenging.h - Machine register scavenging -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file declares the machine register scavenger class. It can provide; /// information such as unused register at any point in a machine basic block.; /// It also provides a mechanism to make registers available by evicting them; /// to spill slots.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h:599,avail,available,599,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterScavenging.h,1,['avail'],['available']
Availability,"//===- RemoveRedundantDebugValues.cpp - Remove Redundant Debug Value MIs --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RemoveRedundantDebugValues.cpp:47,Redundant,Redundant,47,interpreter/llvm-project/llvm/lib/CodeGen/RemoveRedundantDebugValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RemoveRedundantDebugValues.cpp,1,['Redundant'],['Redundant']
Availability,"//===- ResourcePriorityQueue.cpp - A DFA-oriented priority queue -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ResourcePriorityQueue class, which is a; // SchedulingPriorityQueue that prioritizes instructions using DFA state to; // reduce the length of the critical path through the basic block; // on VLIW platforms.; // The scheduler is basically a top-down adaptable list scheduler with DFA; // resource tracking added to the cost function.; // DFA is queried as a state machine to model ""packets/bundles"" during; // schedule. Currently packets/bundles are discarded at the end of; // scheduling, affecting only order of instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:652,down,down,652,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['down'],['down']
Availability,"//===- ScalarizeMaskedMemIntrin.cpp - Scalarize unsupported masked mem ----===//; // intrinsics; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass replaces masked memory intrinsics - when unsupported by the target; // - with a chain of basic blocks, that deal with the elements one-by-one if the; // appropriate mask bit is set.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ScalarizeMaskedMemIntrin.cpp:60,mask,masked,60,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ScalarizeMaskedMemIntrin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ScalarizeMaskedMemIntrin.cpp,3,['mask'],"['mask', 'masked']"
Availability,"//===- ScalarizeMaskedMemIntrin.h - Scalarize unsupported masked mem ----===//; // intrinsics; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass replaces masked memory intrinsics - when unsupported by the target; // - with a chain of basic blocks, that deal with the elements one-by-one if the; // appropriate mask bit is set.; //; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ScalarizeMaskedMemIntrin.h:58,mask,masked,58,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ScalarizeMaskedMemIntrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ScalarizeMaskedMemIntrin.h,3,['mask'],"['mask', 'masked']"
Availability,"//===- ScheduleDAGRRList.cpp - Reg pressure reduction list scheduler ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements bottom-up and top-down register pressure reduction list; // schedulers, using standard algorithms. The basic approach uses a priority; // queue of available nodes to schedule. One at a time, nodes are taken from; // the priority queue (thus in priority order), checked for legality to; // schedule, and emitted if legal.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:417,down,down,417,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,2,"['avail', 'down']","['available', 'down']"
Availability,"//===- ScheduleDAGVLIW.cpp - SelectionDAG list scheduler for VLIW -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:405,down,down,405,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,2,"['avail', 'down']","['available', 'down']"
Availability,"//===- SimplifyCFG.cpp ----------------------------------------------------===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the control flow graph (CFG) simplifications; // presented as part of the 'Getting Started With LLVM: Basics' tutorial at the; // US LLVM Developers Meeting 2019. It also contains additional material.; //; // The current file contains three different CFG simplifications. There are; // multiple versions of each implementation (e.g. _v1 and _v2), which implement; // additional functionality (e.g. preserving analysis like the DominatorTree) or; // use additional utilities to simplify the code (e.g. LLVM's PatternMatch.h).; // The available simplifications are:; // 1. Trivially Dead block Removal (removeDeadBlocks_v[1,2]).; // This simplifications removes all blocks without predecessors in the CFG; // from a function.; // 2. Conditional Branch Elimination (eliminateCondBranches_v[1,2,3]); // This simplification replaces conditional branches with constant integer; // conditions with unconditional branches.; // 3. Single Predecessor Block Merging (mergeIntoSinglePredecessor_v[1,2]); // This simplification merges blocks with a single predecessor into the; // predecessor, if that block has a single successor.; //; // TODOs; // * Preserve LoopInfo.; // * Add fixed point iteration to delete all dead blocks; // * Add implementation using reachability to discover dead blocks.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp:941,avail,available,941,interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/IRTransforms/SimplifyCFG.cpp,1,['avail'],['available']
Availability,"//===- TLSVariableHoist.cpp -------- Remove Redundant TLS Loads ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies/eliminate Redundant TLS Loads if related option is set.; // The example: Please refer to the comment at the head of TLSVariableHoist.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp:44,Redundant,Redundant,44,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp,2,['Redundant'],['Redundant']
Availability,"//===- TestPasses.cpp - ""buggy"" passes used to test bugpoint --------------===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains ""buggy"" passes that are used to test bugpoint, to check; // that it is narrowing down testcases correctly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint-passes/TestPasses.cpp:487,down,down,487,interpreter/llvm-project/llvm/tools/bugpoint-passes/TestPasses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint-passes/TestPasses.cpp,1,['down'],['down']
Availability,"//===- TextAPIError.cpp - Tapi Error ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// \brief Implements TAPI Error.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextAPIError.cpp:31,Error,Error,31,interpreter/llvm-project/llvm/lib/TextAPI/TextAPIError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextAPIError.cpp,2,['Error'],['Error']
Availability,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1819,avail,available,1819,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['avail'],['available']
Availability,"//===- VarLocBasedImpl.cpp - Tracking Debug Value MIs with VarLoc class----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file VarLocBasedImpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:455,avail,available,455,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,['avail'],"['availability', 'available']"
Availability,"//===- bugpoint.cpp - The LLVM Bugpoint utility ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program is an automated compiler debugger tool. It is used to narrow; // down miscompilations and crash problems to a specific pass in the compiler,; // and the specific Module or Function input that is causing the problem.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/bugpoint.cpp:461,down,down,461,interpreter/llvm-project/llvm/tools/bugpoint/bugpoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/bugpoint.cpp,1,['down'],['down']
Availability,"//===- clang/Lex/DependencyDirectivesScanner.h ---------------------*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h:565,down,down,565,interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,1,['down'],['down']
Availability,"//===- fpcmp.cpp - A fuzzy ""cmp"" that permits floating point noise --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // fpcmp is a tool that basically works like the 'cmp' tool, except that it can; // tolerate errors due to floating point noise, with the -r and -a options.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/fpcmp/fpcmp.cpp:464,toler,tolerate,464,interpreter/llvm-project/llvm/utils/fpcmp/fpcmp.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/fpcmp/fpcmp.cpp,2,"['error', 'toler']","['errors', 'tolerate']"
Availability,"//===- lib/Support/ErrorHandling.cpp - Callbacks for errors ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an API used to indicate fatal error conditions. Non-fatal; // errors (most of them) should be handled through LLVMContext.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp:19,Error,ErrorHandling,19,interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ErrorHandling.cpp,4,"['Error', 'error']","['ErrorHandling', 'error', 'errors']"
Availability,"//===- lli.cpp - LLVM Interpreter / Dynamic compiler ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This utility provides a simple wrapper around the LLVM Execution Engines,; // which allow the direct execution of LLVM programs through a Just-In-Time; // compiler, or through an interpreter if no JIT is available for this platform.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp:587,avail,available,587,interpreter/llvm-project/llvm/tools/lli/lli.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp,1,['avail'],['available']
Availability,"//===- llvm/ADT/SuffixTree.h - Tree for substrings --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // A data structure for fast substring queries.; //; // Suffix trees represent the suffixes of their input strings in their leaves.; // A suffix tree is a type of compressed trie structure where each node; // represents an entire substring rather than a single character. Each leaf; // of the tree is a suffix.; //; // A suffix tree can be seen as a type of state machine where each state is a; // substring of the full string. The tree is structured so that, for a string; // of length N, there are exactly N leaves in the tree. This structure allows; // us to quickly find repeated substrings of the input string.; //; // In this implementation, a ""string"" is a vector of unsigned integers.; // These integers may result from hashing some data type. A suffix tree can; // contain 1 or many strings, which can then be queried as one large string.; //; // The suffix tree is implemented using Ukkonen's algorithm for linear-time; // suffix tree construction. Ukkonen's algorithm is explained in more detail; // in the paper by Esko Ukkonen ""On-line construction of suffix trees. The; // paper is available at; //; // https://www.cs.helsinki.fi/u/ukkonen/SuffixT1withFigs.pdf; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SuffixTree.h:1472,avail,available,1472,interpreter/llvm-project/llvm/include/llvm/Support/SuffixTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SuffixTree.h,1,['avail'],['available']
Availability,"//===- llvm/AttributeMask.h - Mask for Attributes ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; // This file declares the AttributeMask class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h:30,Mask,Mask,30,interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h,1,['Mask'],['Mask']
Availability,"//===- llvm/CodeGen/LivePhysRegs.h - Live Physical Register Set -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file implements the LivePhysRegs utility for tracking liveness of; /// physical registers. This can be used for ad-hoc liveness tracking after; /// register allocation. You can start with the live-ins/live-outs at the; /// beginning/end of a block and update the information while walking the; /// instructions inside the block. This implementation tracks the liveness on a; /// sub-register granularity.; ///; /// We assume that the high bits of a physical super-register are not preserved; /// unless the instruction has an implicit-use operand reading the super-; /// register.; ///; /// X86 Example:; /// %ymm0 = ...; /// %xmm0 = ... (Kills %xmm0, all %xmm0s sub-registers, and %ymm0); ///; /// %ymm0 = ...; /// %xmm0 = ..., implicit %ymm0 (%ymm0 and all its sub-registers are alive); //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h:1181,alive,alive,1181,interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LivePhysRegs.h,1,['alive'],['alive']
Availability,"//===- llvm/CodeGen/TargetSchedule.h - Sched Machine Model ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper around MCSchedModel that allows the interface to; // benefit from information currently only available in TargetInstrInfo.; // Ideally, the scheduling interface would be fully defined in the MC layer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:504,avail,available,504,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['avail'],['available']
Availability,"//===- llvm/MC/LaneBitmask.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// A common definition of LaneBitmask for use in TableGen and CodeGen.; ///; /// A lane mask is a bitmask representing the covering of a register with; /// sub-registers.; ///; /// This is typically used to track liveness at sub-register granularity.; /// Lane masks for sub-register indices are similar to register units for; /// physical registers. The individual bits in a lane mask can't be assigned; /// any specific meaning. They can be used to check if two sub-register; /// indices overlap.; ///; /// Iff the target has a register such that:; ///; /// getSubReg(Reg, A) overlaps getSubReg(Reg, B); ///; /// then:; ///; /// (getSubRegIndexLaneMask(A) & getSubRegIndexLaneMask(B)) != 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/LaneBitmask.h:481,mask,mask,481,interpreter/llvm-project/llvm/include/llvm/MC/LaneBitmask.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/LaneBitmask.h,3,['mask'],"['mask', 'masks']"
Availability,"//===- llvm/Pass.h - Base class for Passes ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a base class that indicates that a specified class is a; // transformation pass implementation.; //; // Passes are designed this way so that it is possible to run passes in a cache; // and organizationally optimal order without having to specify it at the front; // end. This allows arbitrary passes to be strung together and have them; // executed as efficiently as possible.; //; // Passes should extend one of the classes below, depending on the guarantees; // that it can make about what will be modified as it is run. For example, most; // global optimizations should derive from FunctionPass, because they do not add; // or delete functions, they operate on the internals of the function.; //; // Note that this file #includes PassSupport.h and PassAnalysisSupport.h (at the; // bottom), so the APIs exposed by these files are also automatically available; // to all users of this file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:1253,avail,available,1253,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['avail'],['available']
Availability,"//===- llvm/Support/DebugCounter.h - Debug counter support ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides an implementation of debug counters. Debug; /// counters are a tool that let you narrow down a miscompilation to a specific; /// thing happening.; ///; /// To give a use case: Imagine you have a file, very large, and you; /// are trying to understand the minimal transformation that breaks it. Bugpoint; /// and bisection is often helpful here in narrowing it down to a specific pass,; /// but it's still a very large file, and a very complicated pass to try to; /// debug. That is where debug counting steps in. You can instrument the pass; /// with a debug counter before it does a certain thing, and depending on the; /// counts, it will either execute that thing or not. The debug counter itself; /// consists of a skip and a count. Skip is the number of times shouldExecute; /// needs to be called before it returns true. Count is the number of times to; /// return true once Skip is 0. So a skip=47, count=2 ,would skip the first 47; /// executions by returning false from shouldExecute, then execute twice, and; /// then return false again.; /// Note that a counter set to a negative number will always execute.; /// For a concrete example, during predicateinfo creation, the renaming pass; /// replaces each use with a renamed use.; ////; /// If I use DEBUG_COUNTER to create a counter called ""predicateinfo"", and; /// variable name RenameCounter, and then instrument this renaming with a debug; /// counter, like so:; ///; /// if (!DebugCounter::shouldExecute(RenameCounter); /// <continue or return or whatever not executing looks like>; ///; /// Now I can, from the command line, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h:498,down,down,498,interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,2,['down'],['down']
Availability,"//===- llvm/Support/Error.h - Recoverable error handling --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an API used to report recoverable errors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:20,Error,Error,20,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,5,"['Error', 'Recover', 'error', 'recover']","['Error', 'Recoverable', 'error', 'errors', 'recoverable']"
Availability,"//===- llvm/Support/ErrorHandling.h - Fatal error handling ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an API used to indicate fatal error conditions. Non-fatal; // errors (most of them) should be handled through LLVMContext.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h:20,Error,ErrorHandling,20,interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorHandling.h,4,"['Error', 'error']","['ErrorHandling', 'error', 'errors']"
Availability,"//===- llvm/Support/ErrorOr.h - Error Smart Pointer -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; ///; /// Provides ErrorOr<T> smart pointer.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorOr.h:20,Error,ErrorOr,20,interpreter/llvm-project/llvm/include/llvm/Support/ErrorOr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ErrorOr.h,3,['Error'],"['Error', 'ErrorOr']"
Availability,"//===- llvm/Support/FileSystem.h - File System OS Concept -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the llvm::sys::fs namespace. It is designed after; // TR2/boost filesystem (v3), but modified to remove exception handling and the; // path class.; //; // All functions return an error_code and their actual work via the last out; // argument. The out argument is defined if and only if errc::success is; // returned. A function may return any error code in the generic or system; // category. However, they shall be equivalent to any error conditions listed; // in each functions respective documentation if the condition applies. [ note:; // this does not guarantee that error_code will be in the set of explicitly; // listed codes, but it does guarantee that if any of the explicitly listed; // errors occur, the correct error_code will be used ]. All functions may; // return errc::not_enough_memory if there is not enough memory to complete the; // operation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h:745,error,error,745,interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,3,['error'],"['error', 'errors']"
Availability,"//===- llvm/Support/TimeProfiler.h - Hierarchical Time Profiler -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides lightweight and dependency-free machinery to trace execution; // time around arbitrary code. Two API flavors are available.; //; // The primary API uses a RAII object to trigger tracing:; //; // \code; // {; // TimeTraceScope scope(""my_event_name"");; // ...my code...; // }; // \endcode; //; // If the code to be profiled does not have a natural lexical scope then; // it is also possible to start and end events with respect to an implicit; // per-thread stack of profiling entries:; //; // \code; // timeTraceProfilerBegin(""my_event_name"");; // ...my code...; // timeTraceProfilerEnd(); // must be called on all control flow paths; // \endcode; //; // Time profiling entries can be given an arbitrary name and, optionally,; // an arbitrary 'detail' string. The resulting trace will include 'Total'; // entries summing the time spent for each name. Thus, it's best to choose; // names to be fairly generic, and rely on the detail field to capture; // everything else of interest.; //; // To avoid lifetime issues name and detail strings are copied into the event; // entries at their time of creation. Care should be taken to make string; // construction cheap to prevent 'Heisenperf' effects. In particular, the; // 'detail' argument may be a string-returning closure:; //; // \code; // int n;; // {; // TimeTraceScope scope(""my_event_name"",; // [n]() { return (Twine(""x="") + Twine(n)).str(); });; // ...my code...; // }; // \endcode; // The closure will not be called if tracing is disabled. Otherwise, the; // resulting string will be directly moved into the entry.; //; // The main process should be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h:510,avail,available,510,interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,1,['avail'],['available']
Availability,"//===- llvm/TableGen/Error.h - tblgen error handling helpers ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains error handling helper routines to pretty-print diagnostic; // messages from tblgen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h:21,Error,Error,21,interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h,3,"['Error', 'error']","['Error', 'error']"
Availability,"//===- llvm/Target/TargetSchedule.cpp - Sched Machine Model ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a wrapper around MCSchedModel that allows the interface; // to benefit from information currently only available in TargetInstrInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp:507,avail,available,507,interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp,1,['avail'],['available']
Availability,"//===- llvm/Testing/Support/Error.cpp -------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Testing/Support/Error.cpp:28,Error,Error,28,interpreter/llvm-project/llvm/lib/Testing/Support/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Testing/Support/Error.cpp,1,['Error'],['Error']
Availability,"//===- llvm/Testing/Support/Error.h ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Testing/Support/Error.h:28,Error,Error,28,interpreter/llvm-project/llvm/include/llvm/Testing/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Testing/Support/Error.h,1,['Error'],['Error']
Availability,"//===- llvm/TextAPI/TextAPIError.h - TAPI Error -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// \brief Define TAPI specific error codes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/TextAPIError.h:42,Error,Error,42,interpreter/llvm-project/llvm/include/llvm/TextAPI/TextAPIError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/TextAPIError.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"//===- llvm/Transforms/Vectorize/LoopVectorizationLegality.h ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file defines the LoopVectorizationLegality class. Original code; /// in Loop Vectorizer has been moved out to its own file for modularity; /// and reusability.; ///; /// Currently, it works for innermost loop vectorization. Extending this to; /// outer loop vectorization is a TODO item.; ///; /// Also provides:; /// 1) LoopVectorizeHints class which keeps a number of loop annotations; /// locally for easy look up. It has the ability to write them back as; /// loop metadata, upon request.; /// 2) LoopVectorizationRequirements class for lazy bail out for the purpose; /// of reporting useful failure to vectorize message.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:996,failure,failure,996,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['failure'],['failure']
Availability,"//===-- AMDGPUGlobalISelDivergenceLowering.cpp ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// GlobalISel pass that selects divergent i1 phis as lane mask phis.; /// Lane mask merging uses same algorithm as SDAG in SILowerI1Copies.; /// Handles all cases of temporal divergence.; /// For divergent non-phi i1 and uniform i1 uses outside of the cycle this pass; /// currently depends on LCSSA to insert phis with one incoming.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp:450,mask,mask,450,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp,2,['mask'],['mask']
Availability,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:522,avail,available,522,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,1,['avail'],['available']
Availability,"//===-- Error.cpp -----------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.cpp:8,Error,Error,8,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.cpp,1,['Error'],['Error']
Availability,"//===-- Error.h -------------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h:8,Error,Error,8,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Error.h,1,['Error'],['Error']
Availability,"//===-- ErrorHandling.h - Error handler -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ErrorHandling.h:8,Error,ErrorHandling,8,interpreter/llvm-project/llvm/tools/llvm-profgen/ErrorHandling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-profgen/ErrorHandling.h,2,['Error'],"['Error', 'ErrorHandling']"
Availability,"//===-- ExternalFunctions.cpp - Implement External Functions --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains both code to deal with invoking ""external"" functions, but; // also contains code that implements ""exported"" external functions.; //; // There are currently two mechanisms for handling external functions in the; // Interpreter. The first is to implement lle_* wrapper functions that are; // specific to well-known library functions which manually translate the; // arguments from GenericValues and make the call. If such a wrapper does; // not exist, and libffi is available, then the Interpreter will attempt to; // invoke the function using libffi, after finding its address.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp:866,avail,available,866,interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp,1,['avail'],['available']
Availability,"//===-- FaultMapParser.h - Parser for the ""FaultMaps"" section --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/FaultMapParser.h:8,Fault,FaultMapParser,8,interpreter/llvm-project/llvm/include/llvm/Object/FaultMapParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/FaultMapParser.h,2,['Fault'],"['FaultMapParser', 'FaultMaps']"
Availability,"//===-- FindBugs.cpp - Run Many Different Optimizations -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an interface that allows bugpoint to choose different; // combinations of optimizations to run on the selected input. Bugpoint will; // run these optimizations and record the success/failure of each. This way; // we can hopefully spot bugs in the optimizations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp:584,failure,failure,584,interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp,1,['failure'],['failure']
Availability,"//===-- GlobalDCE.cpp - DCE unreachable internal functions ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transform is designed to eliminate unreachable internal globals from the; // program. It uses an aggressive algorithm, searching out globals that are; // known to be alive. After it finds all of the globals which are needed, it; // deletes whatever is left over. This allows it to delete recursive chunks of; // the program which are unreachable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp:554,alive,alive,554,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalDCE.cpp,1,['alive'],['alive']
Availability,"//===-- GlobalDCE.h - DCE unreachable internal functions ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transform is designed to eliminate unreachable internal globals from the; // program. It uses an aggressive algorithm, searching out globals that are; // known to be alive. After it finds all of the globals which are needed, it; // deletes whatever is left over. This allows it to delete recursive chunks of; // the program which are unreachable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalDCE.h:554,alive,alive,554,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalDCE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalDCE.h,1,['alive'],['alive']
Availability,"//===-- HexagonPeephole.cpp - Hexagon Peephole Optimiztions ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // This peephole pass optimizes in the following cases.; // 1. Optimizes redundant sign extends for the following case; // Transform the following pattern; // %170 = SXTW %166; // ...; // %176 = COPY %170:isub_lo; //; // Into; // %176 = COPY %166; //; // 2. Optimizes redundant negation of predicates.; // %15 = CMPGTrr %6, %2; // ...; // %16 = NOT_p killed %15; // ...; // JMP_c killed %16, <%bb.1>, implicit dead %pc; //; // Into; // %15 = CMPGTrr %6, %2;; // ...; // JMP_cNot killed %15, <%bb.1>, implicit dead %pc;; //; // Note: The peephole pass makes the instrucstions like; // %170 = SXTW %166 or %16 = NOT_p killed %15; // redundant and relies on some form of dead removal instructions, like; // DCE or DIE to actually eliminate them.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp:367,redundant,redundant,367,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp,3,['redundant'],['redundant']
Availability,"//===-- IndirectCallPromotionAnalysis.cpp - Find promotion candidates ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Helper methods for identifying profitable indirect call promotion; // candidates for an instruction when the indirect-call value profile metadata; // is available.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp:531,avail,available,531,interpreter/llvm-project/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IndirectCallPromotionAnalysis.cpp,1,['avail'],['available']
Availability,"//===-- IntelJITEventsWrapper.h - Intel JIT Events API Wrapper --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper for the Intel JIT Events API. It allows for the; // implementation of the jitprofiling library to be swapped with an alternative; // implementation (for testing). To include this file, you must have the; // jitprofiling.h header available; it is available in Intel(R) VTune(TM); // Amplifier XE 2011.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h:640,avail,available,640,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h,2,['avail'],['available']
Availability,"//===-- IteratorModeling.cpp --------------------------------------*- C++ -*--//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines a modeling-checker for modeling STL iterator-like iterators.; //; //===----------------------------------------------------------------------===//; //; // In the code, iterator can be represented as a:; // * type-I: typedef-ed pointer. Operations over such iterator, such as; // comparisons or increments, are modeled straightforwardly by the; // analyzer.; // * type-II: structure with its method bodies available. Operations over such; // iterator are inlined by the analyzer, and results of modeling; // these operations are exposing implementation details of the; // iterators, which is not necessarily helping.; // * type-III: completely opaque structure. Operations over such iterator are; // modeled conservatively, producing conjured symbols everywhere.; //; // To handle all these types in a common way we introduce a structure called; // IteratorPosition which is an abstraction of the position the iterator; // represents using symbolic expressions. The checker handles all the; // operations on this structure.; //; // Additionally, depending on the circumstances, operators of types II and III; // can be represented as:; // * type-IIa, type-IIIa: conjured structure symbols - when returned by value; // from conservatively evaluated methods such as; // `.begin()`.; // * type-IIb, type-IIIb: memory regions of iterator-typed objects, such as; // variables or temporaries, when the iterator object is; // currently treated as an lvalue.; // * type-IIc, type-IIIc: compound values of iterator-typed objects, when the; // iterator object is treated as an rvalue taken of a; // particular lvalue, eg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp:796,avail,available,796,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,1,['avail'],['available']
Availability,"//===-- LCSSA.cpp - Convert loops into loop-closed SSA form ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass transforms loops by placing phi nodes at the end of the loops for; // all values that are live across the loop boundary. For example, it turns; // the left into the right code:; //; // for (...) for (...); // if (c) if (c); // X1 = ... X1 = ...; // else else; // X2 = ... X2 = ...; // X3 = phi(X1, X2) X3 = phi(X1, X2); // ... = X3 + 4 X4 = phi(X3); // ... = X4 + 4; //; // This is still valid LLVM; the extra phi nodes are purely redundant, and will; // be trivially eliminated by InstCombine. The major benefit of this; // transformation is that it makes many other loop optimizations, such as; // LoopUnswitching, simpler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp:824,redundant,redundant,824,interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LCSSA.cpp,1,['redundant'],['redundant']
Availability,"//===-- LibCallsShrinkWrap.cpp ----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass shrink-wraps a call to function if the result is not used.; // The call can set errno but is otherwise side effect free. For example:; // sqrt(val);; // is transformed to; // if (val < 0); // sqrt(val);; // Even if the result of library call is not being used, the compiler cannot; // safely delete the call because the function can set errno on error; // conditions.; // Note in many functions, the error condition solely depends on the incoming; // parameter. In this optimization, we can generate the condition can lead to; // the errno to shrink-wrap the call. Since the chances of hitting the error; // condition is low, the runtime call is effectively eliminated.; //; // These partially dead calls are usually results of C++ abstraction penalty; // exposed by inlining.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp:739,error,error,739,interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,3,['error'],['error']
Availability,"//===-- Lint.cpp - Check for common errors in LLVM IR ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass statically checks for common and easily-identified constructs; // which produce undefined or likely unintended behavior in LLVM IR.; //; // It is not a guarantee of correctness, in two ways. First, it isn't; // comprehensive. There are checks which could be done statically which are; // not yet implemented. Some of these are indicated by TODO comments, but; // those aren't comprehensive either. Second, many conditions cannot be; // checked statically. This pass does no dynamic instrumentation, so it; // can't check for all possible problems.; //; // Another limitation is that it assumes all code will be executed. A store; // through a null pointer in a basic block which is never reached is harmless,; // but this pass will warn about it anyway. This is the main reason why most; // of these checks live here instead of in the Verifier pass.; //; // Optimization passes may make conditions that this pass checks for more or; // less obvious. If an optimization pass appears to be introducing a warning,; // it may be that the optimization pass is merely exposing an existing; // condition in the code.; //; // This code may be run before instcombine. In many cases, instcombine checks; // for the same kinds of things and turns instructions with undefined behavior; // into unreachable (or equivalent). Because of this, this pass makes some; // effort to look through bitcasts and so on.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:36,error,errors,36,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,1,['error'],['errors']
Availability,"//===-- M68kCollapseMOVEMPass.cpp - Expand MOVEM pass -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// `MOVEM` is an instruction that moves multiple registers a time according to; /// the given mask. Thus sometimes it's pretty expensive.; /// This file contains a pass that collapses sequential MOVEM instructions into; /// a single one.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kCollapseMOVEMPass.cpp:487,mask,mask,487,interpreter/llvm-project/llvm/lib/Target/M68k/M68kCollapseMOVEMPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kCollapseMOVEMPass.cpp,1,['mask'],['mask']
Availability,"//===-- MipsNaClELFStreamer.cpp - ELF Object Output for Mips NaCl ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements MCELFStreamer for Mips NaCl. It emits .o object files; // as required by NaCl's SFI sandbox. It inserts address-masking instructions; // before dangerous control-flow and memory access instructions. It inserts; // address-masking instructions after instructions that change the stack; // pointer. It ensures that the mask and the dangerous instruction are always; // emitted in the same bundle. It aligns call + branch delay to the bundle end,; // so that return address is always aligned to the start of next bundle.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp:516,mask,masking,516,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp,3,['mask'],"['mask', 'masking']"
Availability,"//===-- NVPTXReplaceImageHandles.cpp - Replace image handles for Fermi ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // On Fermi, image handles are not supported. To work around this, we traverse; // the machine code and replace image handles with concrete symbols. For this; // to work reliably, inlining of all function call must be performed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXReplaceImageHandles.cpp:550,reliab,reliably,550,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXReplaceImageHandles.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXReplaceImageHandles.cpp,1,['reliab'],['reliably']
Availability,"//===-- ODRHash.cpp - Hashing to diagnose ODR failures ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements the ODRHash class, which calculates a hash based; /// on AST nodes, which is stable across different runs.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRHash.cpp:46,failure,failures,46,interpreter/llvm-project/clang/lib/AST/ODRHash.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ODRHash.cpp,1,['failure'],['failures']
Availability,"//===-- ODRHash.h - Hashing to diagnose ODR failures ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the declaration of the ODRHash class, which calculates; /// a hash based on AST nodes, which is stable across different runs.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ODRHash.h:44,failure,failures,44,interpreter/llvm-project/clang/include/clang/AST/ODRHash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ODRHash.h,1,['failure'],['failures']
Availability,"//===-- PGOMemOPSizeOpt.cpp - Optimizations based on value profiling ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the transformation that optimizes memory intrinsics; // such as memcpy using the size value profile. When memory intrinsic size; // value profile metadata is available, a single memory intrinsic is expanded; // to a sequence of guarded specialized versions that are called with the; // hottest size(s), for later expansion into more optimal inline sequences.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp:556,avail,available,556,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOMemOPSizeOpt.cpp,1,['avail'],['available']
Availability,"//===-- PerfJITEventListener.cpp - Tell Linux's perf about JITted code ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a JITEventListener object that tells perf about JITted; // functions, including source line information.; //; // Documentation for perf jit integration is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jitdump-specification.txt; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp:556,avail,available,556,interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,1,['avail'],['available']
Availability,"//===-- RISCVInsertWriteVXRM.cpp - Insert Write of RISC-V VXRM CSR --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts writes to the VXRM CSR as needed by vector instructions.; // Each instruction that uses VXRM carries an operand that contains its required; // VXRM value. This pass tries to optimize placement to avoid redundant writes; // to VXRM.; //; // This is done using 2 dataflow algorithms. The first is a forward data flow; // to calculate where a VXRM value is available. The second is a backwards; // dataflow to determine where a VXRM value is anticipated.; //; // Finally, we use the results of these two dataflows to insert VXRM writes; // where a value is anticipated, but not available.; //; // FIXME: This pass does not split critical edges, so there can still be some; // redundancy.; //; // FIXME: If we are willing to have writes that aren't always needed, we could; // reduce the number of VXRM writes in some cases.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp:603,redundant,redundant,603,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp,3,"['avail', 'redundant']","['available', 'redundant']"
Availability,"//===-- RISCVMakeCompressible.cpp - Make more instructions compressible ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass searches for instructions that are prevented from being compressed; // by one of the following:; //; // 1. The use of a single uncompressed register.; // 2. A base register + offset where the offset is too large to be compressed; // and the base register may or may not be compressed.; //; //; // For case 1, if a compressed register is available, then the uncompressed; // register is copied to the compressed register and its uses are replaced.; //; // For example, storing zero uses the uncompressible zero register:; // sw zero, 0(a0) # if zero; // sw zero, 8(a0) # if zero; // sw zero, 4(a0) # if zero; // sw zero, 24(a0) # if zero; //; // If a compressed register (e.g. a1) is available, the above can be transformed; // to the following to improve code size:; // li a1, 0; // c.sw a1, 0(a0); // c.sw a1, 8(a0); // c.sw a1, 4(a0); // c.sw a1, 24(a0); //; //; // For case 2, if a compressed register is available, then the original base; // is copied and adjusted such that:; //; // new_base_register = base_register + adjustment; // base_register + large_offset = new_base_register + small_offset; //; // For example, the following offsets are too large for c.sw:; // lui a2, 983065; // sw a1, -236(a2); // sw a1, -240(a2); // sw a1, -244(a2); // sw a1, -248(a2); // sw a1, -252(a2); // sw a0, -256(a2); //; // If a compressed register is available (e.g. a3), a new base could be created; // such that the addresses can accessed with a compressible offset, thus; // improving code size:; // lui a2, 983065; // addi a3, a2, -256; // c.sw a1, 20(a3); // c.sw a1, 16(a3); // c.sw a1, 12(a3); // c.sw a1, 8",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp:730,avail,available,730,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,1,['avail'],['available']
Availability,"//===-- ResourceScriptToken.h -----------------------------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This declares the .rc script tokens and defines an interface for tokenizing; // the input data. The list of available tokens is located at; // ResourceScriptTokenList.def.; //; // Note that the tokenizer does not support preprocessor directives. The; // preprocessor should do its work on the .rc file before running llvm-rc.; //; // As for now, it is possible to parse ASCII files only (the behavior on; // UTF files might be undefined). However, it already consumes UTF-8 BOM, if; // there is any. Thus, ASCII-compatible UTF-8 files are tokenized correctly.; //; // Ref: msdn.microsoft.com/en-us/library/windows/desktop/aa380599(v=vs.85).aspx; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h:489,avail,available,489,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h,1,['avail'],['available']
Availability,"//===-- ResourceScriptToken.h -----------------------------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This declares the .rc script tokens.; // The list of available tokens is located at ResourceScriptTokenList.h.; //; // Ref: msdn.microsoft.com/en-us/library/windows/desktop/aa380599(v=vs.85).aspx; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsResource/ResourceScriptToken.h:434,avail,available,434,interpreter/llvm-project/llvm/include/llvm/WindowsResource/ResourceScriptToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsResource/ResourceScriptToken.h,1,['avail'],['available']
Availability,"//===-- SARIFDiagnosticPrinter.h - SARIF Diagnostic Client -------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a concrete diagnostic client, which prints the diagnostics to; // standard error in SARIF format.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/SARIFDiagnosticPrinter.h:466,error,error,466,interpreter/llvm-project/clang/include/clang/Frontend/SARIFDiagnosticPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/SARIFDiagnosticPrinter.h,1,['error'],['error']
Availability,"//===-- SILowerI1Copies.cpp - Lower I1 Copies -----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass lowers all occurrences of i1 values (with a vreg_1 register class); // to lane masks (32 / 64-bit scalar registers). The pass assumes machine SSA; // form and a wave-level control flow graph.; //; // Before this pass, values that are semantically i1 and are defined and used; // within the same basic block are already represented as lane masks in scalar; // registers. However, values that cross basic blocks are always transferred; // between basic blocks in vreg_1 virtual registers and are lowered by this; // pass.; //; // The only instructions that use or define vreg_1 virtual registers are COPY,; // PHI, and IMPLICIT_DEF.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp:472,mask,masks,472,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.cpp,2,['mask'],['masks']
Availability,"//===-- SILowerI1Copies.h --------------------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition of the PhiLoweringHelper class that implements lane; /// mask merging algorithm for divergent i1 phis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h:473,mask,mask,473,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,1,['mask'],['mask']
Availability,"//===-- SILowerWWMCopies.cpp - Lower Copies after regalloc ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Lowering the WWM_COPY instructions for various register classes.; /// AMDGPU target generates WWM_COPY instruction to differentiate WWM; /// copy from COPY. This pass generates the necessary exec mask manipulation; /// instructions to replicate 'Whole Wave Mode' and lowers WWM_COPY back to; /// COPY.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerWWMCopies.cpp:578,mask,mask,578,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerWWMCopies.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerWWMCopies.cpp,1,['mask'],['mask']
Availability,"//===-- SIOptimizeExecMaskingPreRA.cpp ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass performs exec mask handling peephole optimizations which needs; /// to be done before register allocation to reduce register pressure.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp:419,mask,mask,419,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp,1,['mask'],['mask']
Availability,"//===-- StackFrameLayoutAnalysisPass.cpp; //------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // StackFrameLayoutAnalysisPass implementation. Outputs information about the; // layout of the stack frame, using the remarks interface. On the CLI it prints; // a textual representation of the stack frame. When possible it prints the; // values that occupy a stack slot using any available debug information. Since; // output is remarks based, it is also available in a machine readable file; // format, such as YAML.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp:667,avail,available,667,interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp,2,['avail'],['available']
Availability,"//===-- StripDeadPrototypes.cpp - Remove unused function declarations ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass loops over all of the functions in the input module, looking for; // dead declarations and removes them. Dead declarations are declarations of; // functions for which no implementation is available (i.e., declarations for; // unused library functions).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/StripDeadPrototypes.cpp:580,avail,available,580,interpreter/llvm-project/llvm/lib/Transforms/IPO/StripDeadPrototypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/StripDeadPrototypes.cpp,1,['avail'],['available']
Availability,"//===-- StripDeadPrototypes.h - Remove unused function declarations -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass loops over all of the functions in the input module, looking for; // dead declarations and removes them. Dead declarations are declarations of; // functions for which no implementation is available (i.e., declarations for; // unused library functions).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/StripDeadPrototypes.h:581,avail,available,581,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/StripDeadPrototypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/StripDeadPrototypes.h,1,['avail'],['available']
Availability,"//===-- SystemZTDC.cpp - Utilize Test Data Class instruction --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass looks for instructions that can be replaced by a Test Data Class; // instruction, and replaces them when profitable.; //; // Roughly, the following rules are recognized:; //; // 1: fcmp pred X, 0 -> tdc X, mask; // 2: fcmp pred X, +-inf -> tdc X, mask; // 3: fcmp pred X, +-minnorm -> tdc X, mask; // 4: tdc (fabs X), mask -> tdc X, newmask; // 5: icmp slt (bitcast float X to int), 0 -> tdc X, mask [ie. signbit]; // 6: icmp sgt (bitcast float X to int), -1 -> tdc X, mask; // 7: icmp ne/eq (call @llvm.s390.tdc.*(X, mask)) -> tdc X, mask/~mask; // 8: and i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 & M2); // 9: or i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 | M2); // 10: xor i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 ^ M2); //; // The pass works in 4 steps:; //; // 1. All fcmp and icmp instructions in a function are checked for a match; // with rules 1-3 and 5-7. Their TDC equivalents are stored in; // the ConvertedInsts mapping. If the operand of a fcmp instruction is; // a fabs, it's also folded according to rule 4.; // 2. All and/or/xor i1 instructions whose both operands have been already; // mapped are mapped according to rules 8-10. LogicOpsWorklist is used; // as a queue of instructions to check.; // 3. All mapped instructions that are considered worthy of conversion (ie.; // replacing them will actually simplify the final code) are replaced; // with a call to the s390.tdc intrinsic.; // 4. All intermediate results of replaced instructions are removed if unused.; //; // Instructions that match rules 1-3 are considered unworthy of conversion; // on their own (since a comparison instruc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp:599,mask,mask,599,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,6,['mask'],['mask']
Availability,"//===-- VEFrameLowering.cpp - VE Frame Information ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the VE implementation of TargetFrameLowering class.; //; // On VE, stack frames are structured as follows:; //; // The stack grows downward.; //; // All of the individual frame areas on the frame below are optional, i.e. it's; // possible to create a function so that the particular area isn't present; // in the frame.; //; // At function entry, the ""frame"" looks as follows:; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- sp; // | | Lower address; //; // VE doesn't use on demand stack allocation, so user code generated by LLVM; // needs to call VEOS to allocate stack frame. VE's ABI want to reduce the; // number of VEOS calls, so ABI requires to allocate not only RSA (in general; // CSR, callee saved register) area but also call frame at the prologue of; // caller function.; //; // After the prologue has run, the frame has the following general structure.; // Note that technically the last frame area (VLAs) doesn't get created until; // in the main function body, after the prologue is run. However, it's depicted; // here for completeness.; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:533,down,downward,533,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['down'],['downward']
Availability,"//===-- WebAssemblyFrameLowering.cpp - WebAssembly Frame Lowering ----------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the WebAssembly implementation of; /// TargetFrameLowering class.; ///; /// On WebAssembly, there aren't a lot of things to do here. There are no; /// callee-saved registers to save, and no spill slots.; ///; /// The stack grows downward.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFrameLowering.cpp:644,down,downward,644,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFrameLowering.cpp,1,['down'],['downward']
Availability,"//===-- WindowsError.h - Support for mapping windows errors to posix-------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/WindowsError.h:53,error,errors,53,interpreter/llvm-project/llvm/include/llvm/Support/WindowsError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/WindowsError.h,1,['error'],['errors']
Availability,"//===-- X86FixupInstTunings.cpp - replace instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file does a tuning pass replacing slower machine instructions; // with faster ones. We do this here, as opposed to during normal ISel, as; // attempting to get the ""right"" instruction can break patterns. This pass; // is not meant search for special cases where an instruction can be transformed; // to another, it is only meant to do transformations where the old instruction; // is always replacable with the new instructions. For example:; //; // `vpermq ymm` -> `vshufd ymm`; // -- BAD, not always valid (lane cross/non-repeated mask); //; // `vpermilps ymm` -> `vshufd ymm`; // -- GOOD, always replaceable; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupInstTuning.cpp:912,mask,mask,912,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupInstTuning.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupInstTuning.cpp,1,['mask'],['mask']
Availability,"//===-- X86LoadValueInjectionRetHardening.cpp - LVI RET hardening for x86 --==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// Description: Replaces every `ret` instruction with the sequence:; /// ```; /// pop <scratch-reg>; /// lfence; /// jmp *<scratch-reg>; /// ```; /// where `<scratch-reg>` is some available scratch register, according to the; /// calling convention of the function being mitigated.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionRetHardening.cpp:562,avail,available,562,interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionRetHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionRetHardening.cpp,1,['avail'],['available']
Availability,"//===-- X86PreTileConfig.cpp - Tile Register Pre-configure-----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to pre-config the shapes of AMX registers; /// AMX register needs to be configured before use. The shapes of AMX register; /// are encoded in the 1st and 2nd machine operand of AMX pseudo instructions.; ///; /// The instruction ldtilecfg is used to config the shapes. It must be reachable; /// for all variable shapes. ldtilecfg will be inserted more than once if we; /// cannot find a dominating point for all AMX instructions.; ///; /// The configure register is caller saved according to ABI. We need to insert; /// ldtilecfg again after the call instruction if callee clobbers any AMX; /// registers.; ///; /// This pass calculates all points that ldtilecfg need to be inserted to and; /// insert them. It reports error if the reachability conditions aren't met.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp:1113,error,error,1113,interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp,1,['error'],['error']
Availability,"//===-- X86ShuffleDecode.cpp - X86 shuffle decode logic -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Define several functions to decode x86 specific shuffle semantics into a; // generic vector mask.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp:475,mask,mask,475,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.cpp,1,['mask'],['mask']
Availability,"//===-- X86ShuffleDecode.h - X86 shuffle decode logic -----------*-C++-*---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Define several functions to decode x86 specific shuffle semantics into a; // generic vector mask.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.h:475,mask,mask,475,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86ShuffleDecode.h,1,['mask'],['mask']
Availability,"//===-- echo.cpp - tool for testing libLLVM and llvm-c API ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the --echo command in llvm-c-test.; //; // This command uses the C API to read a module and output an exact copy of it; // as output. It is used to check that the resulting module matches the input; // to validate that the C API can read and write modules properly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-c-test/echo.cpp:8,echo,echo,8,interpreter/llvm-project/llvm/tools/llvm-c-test/echo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-c-test/echo.cpp,2,['echo'],['echo']
Availability,"//===-- examples/ParallelJIT/ParallelJIT.cpp - Exercise threaded-safe JIT -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Parallel JIT; //; // This test program creates two LLVM functions then calls them from three; // separate threads. It requires the pthreads library.; // The three threads are created and then block waiting on a condition variable.; // Once all threads are blocked on the conditional variable, the main thread; // wakes them up. This complicated work is performed so that all three threads; // call into the JIT at the same time (or the best possible approximation of the; // same time). This test had assertion errors until I got the locking right.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp:894,error,errors,894,interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,1,['error'],['errors']
Availability,"//===-- llvm-config.cpp - LLVM project configuration utility --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tool encapsulates information about an LLVM project configuration for; // use by other project's build environments (to determine installed path,; // available features, required libraries, etc.).; //; // Note that although this tool *may* be used by some parts of LLVM's build; // itself (i.e., the Makefiles use it to compute required libraries when linking; // tools), this tool is primarily designed to support external projects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:538,avail,available,538,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['avail'],['available']
Availability,"//===-- llvm-symbolizer.cpp - Simple addr2line-like symbolizer ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This utility works much like ""addr2line"". It is able of transforming; // tuples (module name, module offset) to code locations (function name,; // file, line number, column number). It is targeted for compiler-rt tools; // (especially AddressSanitizer and ThreadSanitizer) that can use it; // to symbolize stack traces in their error reports.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-symbolizer/llvm-symbolizer.cpp:711,error,error,711,interpreter/llvm-project/llvm/tools/llvm-symbolizer/llvm-symbolizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-symbolizer/llvm-symbolizer.cpp,1,['error'],['error']
Availability,"//===-- llvm/BinaryFormat/COFF.h --------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains an definitions used in Windows COFF Files.; //; // Structures and enums defined within this file where created using; // information from Microsoft's publicly available PE/COFF format document:; //; // Microsoft Portable Executable and Common Object File Format Specification; // Revision 8.1 - February 15, 2008; //; // As of 5/2/2010, hosted by Microsoft at:; // http://www.microsoft.com/whdc/system/platform/firmware/pecoff.mspx; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h:561,avail,available,561,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,1,['avail'],['available']
Availability,"//===--- ASTDumperUtils.h - Printing of AST nodes -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements AST utilities for traversal down the tree.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTDumperUtils.h:432,down,down,432,interpreter/llvm-project/clang/include/clang/AST/ASTDumperUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTDumperUtils.h,1,['down'],['down']
Availability,"//===--- Availability.h - Classes for availability --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This files defines some classes that implement availability checking.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Availability.h:9,Avail,Availability,9,interpreter/llvm-project/clang/include/clang/AST/Availability.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Availability.h,3,"['Avail', 'avail']","['Availability', 'availability']"
Availability,"//===--- ByteCodeGenError.h - Byte code generation error --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.cpp:51,error,error,51,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.cpp,1,['error'],['error']
Availability,"//===--- ByteCodeGenError.h - Byte code generation error ----------*- C -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.h:51,error,error,51,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeGenError.h,1,['error'],['error']
Availability,"//===--- CRC.cpp - Cyclic Redundancy Check implementation -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains implementations of CRC functions.; //; // The implementation technique is the one mentioned in:; // D. V. Sarwate. 1988. Computation of cyclic redundancy checks via table; // look-up. Commun. ACM 31, 8 (August 1988); //; // See also Ross N. Williams ""A Painless Guide to CRC Error Detection; // Algorithms"" (https://zlib.net/crc_v3.txt) or Hacker's Delight (2nd ed.); // Chapter 14 (Figure 14-7 in particular) for how the algorithm works.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CRC.cpp:677,Error,Error,677,interpreter/llvm-project/llvm/lib/Support/CRC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CRC.cpp,1,['Error'],['Error']
Availability,"//===--- CallAndMessageChecker.cpp ------------------------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines CallAndMessageChecker, a builtin checker that checks for various; // errors of call and objc message expressions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:465,error,errors,465,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,1,['error'],['errors']
Availability,"//===--- Context.h - Context for the constexpr VM ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the constexpr execution context.; //; // The execution context manages cached bytecode and the global context.; // It invokes the compiler and interpreter, propagating errors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Context.h:559,error,errors,559,interpreter/llvm-project/clang/lib/AST/Interp/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Context.h,1,['error'],['errors']
Availability,"//===--- CrashRecoveryContext.cpp - Crash Recovery ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp:42,Recover,Recovery,42,interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CrashRecoveryContext.cpp,1,['Recover'],['Recovery']
Availability,"//===--- CrashRecoveryContext.h - Crash Recovery ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h:40,Recover,Recovery,40,interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CrashRecoveryContext.h,1,['Recover'],['Recovery']
Availability,"//===--- DAGDeltaAlgorithm.cpp - A DAG Minimization Algorithm --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //===----------------------------------------------------------------------===//; //; // The algorithm we use attempts to exploit the dependency information by; // minimizing top-down. We start by constructing an initial root set R, and; // then iteratively:; //; // 1. Minimize the set R using the test predicate:; // P'(S) = P(S union pred*(S)); //; // 2. Extend R to R' = R union pred(R).; //; // until a fixed point is reached.; //; // The idea is that we want to quickly prune entire portions of the graph, so we; // try to find high-level nodes that can be eliminated with all of their; // dependents.; //; // FIXME: The current algorithm doesn't actually provide a strong guarantee; // about the minimality of the result. The problem is that after adding nodes to; // the required set, we no longer consider them for elimination. For strictly; // well formed predicates, this doesn't happen, but it commonly occurs in; // practice when there are unmodelled dependencies. I believe we can resolve; // this by allowing the required set to be minimized as well, but need more test; // cases first.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp:469,down,down,469,interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,1,['down'],['down']
Availability,"//===--- DLangDemangle.cpp ------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines a demangler for the D programming language as specified; /// in the ABI specification, available at:; /// https://dlang.org/spec/abi.html#name_mangling; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp:501,avail,available,501,interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,1,['avail'],['available']
Availability,"//===--- DiagnosticError.h - Diagnostic payload for llvm::Error -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticError.h:58,Error,Error,58,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticError.h,1,['Error'],['Error']
Availability,"//===--- Diagnostics.cpp - Helper class for error diagnostics ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Diagnostics.cpp:44,error,error,44,interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Diagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Diagnostics.cpp,1,['error'],['error']
Availability,"//===--- Diagnostics.h - Helper class for error diagnostics -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Diagnostics class to manage error messages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h:42,error,error,42,interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h,2,['error'],['error']
Availability,"//===--- ExprConstant.cpp - Expression Constant Evaluator -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Expr constant evaluator.; //; // Constant expression evaluation produces four main results:; //; // * A success/failure flag indicating whether constant folding was successful.; // This is the 'bool' return value used by most of the code in this file. A; // 'false' return value indicates that constant folding has failed, and any; // appropriate diagnostic has already been produced.; //; // * An evaluated result, valid only if constant folding has not failed.; //; // * A flag indicating if evaluation encountered (unevaluated) side-effects.; // These arise in cases such as (sideEffect(), 0) and (sideEffect() || 1),; // where it is possible to determine the evaluated result regardless.; //; // * A set of notes indicating why the evaluation was not a constant expression; // (under the C++11 / C++1y rules only, at the moment), or, if folding failed; // too, why the expression could not be folded.; //; // If we are checking for a potential constant expression, failure to constant; // fold a potential constant sub-expression will be indicated by a 'false'; // return value (the expression could not be folded) and no diagnostic (the; // expression is not necessarily non-constant).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:520,failure,failure,520,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,['failure'],['failure']
Availability,"//===--- MSVCErrorWorkarounds.h - Enable future<Error> in MSVC --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // MSVC's promise/future implementation requires types to be default; // constructible, so this header provides analogues of Error an Expected; // that are default constructed in a safely destructible state.; //; // FIXME: Kill off this header and migrate all users to Error/Expected once we; // move to MSVC versions that support non-default-constructible types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h:48,Error,Error,48,interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSVCErrorWorkarounds.h,3,['Error'],['Error']
Availability,"//===--- ModelConsumer.cpp - ASTConsumer for consuming model files --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements an ASTConsumer for consuming model files.; ///; /// This ASTConsumer handles the AST of a parsed model file. All top level; /// function definitions will be collected from that model file for later; /// retrieval during the static analysis. The body of these functions will not; /// be injected into the ASTUnit of the analyzed translation unit. It will be; /// available through the BodyFarm which is utilized by the AnalysisDeclContext; /// class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp:779,avail,available,779,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp,1,['avail'],['available']
Availability,"//===--- SemaAvailability.cpp - Availability attribute handling -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file processes the availability attribute.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp:32,Avail,Availability,32,interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAvailability.cpp,2,"['Avail', 'avail']","['Availability', 'availability']"
Availability,"//===--- TestAST.h - Build clang ASTs for testing -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // In normal operation of Clang, the FrontendAction's lifecycle both creates; // and destroys the AST, and code should operate on it during callbacks in; // between (e.g. via ASTConsumer).; //; // For tests it is often more convenient to parse an AST from code, and keep it; // alive as a normal local object, with assertions as straight-line code.; // TestAST provides such an interface.; // (ASTUnit can be used for this purpose, but is a production library with; // broad scope and complicated API).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestAST.h:658,alive,alive,658,interpreter/llvm-project/clang/include/clang/Testing/TestAST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestAST.h,1,['alive'],['alive']
Availability,"//===--- TextDiagnosticPrinter.h - Text Diagnostic Client -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a concrete diagnostic client, which prints the diagnostics to; // standard error.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticPrinter.h:466,error,error,466,interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticPrinter.h,1,['error'],['error']
Availability,"//===--- TransAPIUses.cpp - Transformations to ARC mode -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // checkAPIUses:; //; // Emits error/fix with some API uses that are obsolete or not safe in ARC mode:; //; // - NSInvocation's [get/set]ReturnValue and [get/set]Argument are only safe; // with __unsafe_unretained objects.; // - Calling -zone gets replaced with 'nil'.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAPIUses.cpp:411,error,error,411,interpreter/llvm-project/clang/lib/ARCMigrate/TransAPIUses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAPIUses.cpp,1,['error'],['error']
Availability,"//===--- TransProtectedScope.cpp - Transformations to ARC mode ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Adds brackets in case statements that ""contain"" initialization of retaining; // variable, thus emitting the ""switch case is in protected scope"" error.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp:527,error,error,527,interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp,1,['error'],['error']
Availability,"//===--- UnicodeNameMappingGenerator.cpp - Unicode name data generator ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is used to generate lib/Support/UnicodeNameToCodepointGenerated.cpp; // using UnicodeData.txt and NameAliases.txt available at; // https://unicode.org/Public/15.1.0/ucd/; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp:506,avail,available,506,interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,1,['avail'],['available']
Availability,"//===--- Warnings.cpp - C-Language Front-end ------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Command line warning options handler.; //; //===----------------------------------------------------------------------===//; //; // This file is responsible for handling all warning options. This includes; // a number of -Wfoo options and their variants, which are driven by TableGen-; // generated data, and the special cases -pedantic, -pedantic-errors, -w,; // -Werror and -Wfatal-errors.; //; // Each warning option controls any number of actual warnings.; // Given a warning option 'foo', the following are valid:; // -Wfoo, -Wno-foo, -Werror=foo, -Wfatal-errors=foo; //; // Remark options are also handled here, analogously, except that they are much; // simpler because a remark can't be promoted to an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp:731,error,errors,731,interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Warnings.cpp,4,['error'],"['error', 'errors']"
Availability,"//===----- PostRAHazardRecognizer.cpp - hazard recognizer -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This runs the hazard recognizer and emits noops when necessary. This; /// gives targets a way to run the hazard recognizer without running one of; /// the schedulers. Example use cases for this pass would be:; ///; /// - Targets that need the hazard recognizer to be run at -O0.; /// - Targets that want to guarantee that hazards at the beginning of; /// scheduling regions are handled correctly. The post-RA scheduler is; /// a top-down scheduler, but when there are multiple scheduling regions; /// in a basic block, it visits the regions in bottom-up order. This; /// makes it impossible for the scheduler to gauranttee it can correctly; /// handle hazards at the beginning of scheduling regions.; ///; /// This pass traverses all the instructions in a program in top-down order.; /// In contrast to the instruction scheduling passes, this pass never resets; /// the hazard recognizer to ensure it can correctly handles noop hazards at; /// the beginning of blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp:828,down,down,828,interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp,2,['down'],['down']
Availability,"//===----- SchedulePostRAList.cpp - list scheduler ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:405,down,down,405,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,2,"['avail', 'down']","['available', 'down']"
Availability,"//===----- lib/Support/Error.cpp - Error and associated utilities ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Error.cpp:23,Error,Error,23,interpreter/llvm-project/llvm/lib/Support/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Error.cpp,2,['Error'],['Error']
Availability,"//===----- llvm/CodeGen/GlobalISel/LostDebugLocObserver.cpp -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// Tracks DebugLocs between checkpoints and verifies that they are transferred.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LostDebugLocObserver.cpp:409,checkpoint,checkpoints,409,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LostDebugLocObserver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LostDebugLocObserver.cpp,1,['checkpoint'],['checkpoints']
Availability,"//===----- llvm/CodeGen/GlobalISel/LostDebugLocObserver.h -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Tracks DebugLocs between checkpoints and verifies that they are transferred.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LostDebugLocObserver.h:416,checkpoint,checkpoints,416,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LostDebugLocObserver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LostDebugLocObserver.h,1,['checkpoint'],['checkpoints']
Availability,"//===------------- Support/UnicodeNameToCodepointGenerated.cpp ------------===//; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements mapping the name of a unicode code point to its value.; //; // This file was generated using ./bin/UnicodeNameMappingGenerator.; // Do not edit manually.; //; //===----------------------------------------------------------------------===//; /*; UNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE. See Terms of Use <https://www.unicode.org/copyright.html>; for definitions of Unicode Inc.’s Data Files and Software. NOTICE TO USER: Carefully read the following legal agreement.; BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S; DATA FILES (""DATA FILES""), AND/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp:888,DOWN,DOWNLOADING,888,interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,1,['DOWN'],['DOWNLOADING']
Availability,"//===-------------- BPFMIChecking.cpp - MI Checking Legality -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs checking to signal errors for certain illegal usages at; // MachineInstruction layer. Specially, the result of XADD{32,64} insn should; // not be used. The pass is done at the PreEmit pass right before the; // machine code is emitted at which point the register liveness information; // is still available.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp:420,error,errors,420,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,2,"['avail', 'error']","['available', 'errors']"
Availability,"//===-------------- BPFMIPeephole.cpp - MI Peephole Cleanups -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs peephole optimizations to cleanup ugly code sequences at; // MachineInstruction layer.; //; // Currently, there are two optimizations implemented:; // - One pre-RA MachineSSA pass to eliminate type promotion sequences, those; // zero extend 32-bit subregisters to 64-bit registers, if the compiler; // could prove the subregisters is defined by 32-bit operations in which; // case the upper half of the underlying 64-bit registers were zeroed; // implicitly.; //; // - One post-RA PreEmit pass to do final cleanup on some redundant; // instructions generated due to bad RA on subregister.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp:923,redundant,redundant,923,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,1,['redundant'],['redundant']
Availability,"//===-------------- PPCMIPeephole.cpp - MI Peephole Cleanups -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass performs peephole optimizations to clean up ugly code; // sequences at the MachineInstruction layer. It runs at the end of; // the SSA phases, following VSX swap removal. A pass of dead code; // elimination follows this one for quick clean-up of any dead; // instructions introduced here. Although we could do this as callbacks; // from the generic peephole pass, this would have a couple of bad; // effects: it might remove optimization opportunities for VSX swap; // removal, and it would miss cleanups made possible following VSX; // swap removal.; //; // NOTE: We run the verifier after this pass in Asserts/Debug builds so it; // is important to keep the code valid after transformations.; // Common causes of errors stem from violating the contract specified; // by kill flags. Whenever a transformation changes the live range of; // a register, that register should be added to the work list using; // addRegToUpdate(RegsToUpdate, <Reg>). Furthermore, if a transformation; // is changing the definition of a register (i.e. removing the single; // definition of the original vreg), it needs to provide a dummy; // definition of that register using addDummyDef(<MBB>, <Reg>).; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:1106,error,errors,1106,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,1,['error'],['errors']
Availability,"//===--------------- OrcError.h - Orc Error Types ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Define an error category, error codes, and helper utilities for Orc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/OrcError.h:38,Error,Error,38,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/OrcError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/OrcError.h,3,"['Error', 'error']","['Error', 'error']"
Availability,"//===---------------- OrcError.cpp - Error codes for ORC ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Error codes for ORC.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/OrcError.cpp:37,Error,Error,37,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/OrcError.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/OrcError.cpp,2,['Error'],['Error']
Availability,"//===--------------------- InstructionTables.cpp ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the method InstructionTables::execute().; /// Method execute() prints a theoretical resource pressure distribution based; /// on the information available in the scheduling model, and without running; /// the pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp:562,avail,available,562,interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,1,['avail'],['available']
Availability,"//===----------------------- FaultMapParser.cpp ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/FaultMapParser.cpp:29,Fault,FaultMapParser,29,interpreter/llvm-project/llvm/lib/Object/FaultMapParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/FaultMapParser.cpp,1,['Fault'],['FaultMapParser']
Availability,"//===---------------------------------------------------------------------------; /// RegisterPass<t> template - This template class is used to notify the system; /// that a Pass is available for use, and registers it into the internal; /// database maintained by the PassManager. Unless this template is used, opt,; /// for example will not be able to see the pass and attempts to create the pass; /// will fail. This template is used in the follow manner (at global scope, in; /// your .cpp file):; ///; /// static RegisterPass<YourPassClassName> tmp(""passopt"", ""My Pass Name"");; ///; /// This statement will cause your pass to be created by calling the default; /// constructor exposed by the pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassSupport.h:182,avail,available,182,interpreter/llvm-project/llvm/include/llvm/PassSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassSupport.h,1,['avail'],['available']
Availability,"//===----------------------------------------------------------------------===//; // AtomicCmpXchgInst Class; //===----------------------------------------------------------------------===//; /// An instruction that atomically checks whether a; /// specified value is in a memory location, and, if it is, stores a new value; /// there. The value returned by this instruction is a pair containing the; /// original value as first element, and an i1 indicating success (true) or; /// failure (false) as second element.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:482,failure,failure,482,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['failure'],['failure']
Availability,//===----------------------------------------------------------------------===//; // Bottom-Up Scheduling; //===----------------------------------------------------------------------===//; /// ReleasePred - Decrement the NumSuccsLeft count of a predecessor. Add it to; /// the AvailableQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:277,Avail,AvailableQueue,277,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,['Avail'],['AvailableQueue']
Availability,//===----------------------------------------------------------------------===//; // Branch processing.; //===----------------------------------------------------------------------===//; /// RecoverCastedSymbol - A helper function for ProcessBranch that is used; /// to try to recover some path-sensitivity for casts of symbolic; /// integers that promote their values (which are currently not tracked well).; /// This function returns the SVal bound to Condition->IgnoreCasts if all the; // cast(s) did was sign-extend the original value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:191,Recover,RecoverCastedSymbol,191,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,2,"['Recover', 'recover']","['RecoverCastedSymbol', 'recover']"
Availability,"//===----------------------------------------------------------------------===//; // Calling Convention Implementation; //===----------------------------------------------------------------------===//; // Eight general-purpose registers a0-a7 used for passing integer arguments,; // with a0-a1 reused to return values. Generally, the GPRs are used to pass; // fixed-point arguments, and floating-point arguments when no FPR is available; // or with soft float ABI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:427,avail,available,427,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,1,['avail'],['available']
Availability,"//===----------------------------------------------------------------------===//; // Calling Convention Implementation; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; // TODO: Implement a generic logic using tblgen that can support this.; // Mips O32 ABI rules:; // ---; // i32 - Passed in A0, A1, A2, A3 and stack; // f32 - Only passed in f32 registers if no int reg has been used yet to hold; // an argument. Otherwise, passed in A1, A2, A3 and stack.; // f64 - Only passed in two aliased f32 registers if no int reg has been used; // yet to hold an argument. Otherwise, use A2, A3 and stack. If A1 is; // not used, it must be shadowed. If only A3 is available, shadow it and; // go to stack.; // vXiX - Received as scalarized i32s, passed in A0 - A3 and the stack.; // vXf32 - Passed in either a pair of registers {A0, A1}, {A2, A3} or {A0 - A3}; // with the remainder spilled to the stack.; // vXf64 - Passed in either {A0, A1, A2, A3} or {A2, A3} and in both cases; // spilling the remainder to the stack.; //; // For vararg functions, all arguments are passed in A0, A1, A2, A3 and stack.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:770,avail,available,770,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,1,['avail'],['available']
Availability,//===----------------------------------------------------------------------===//; // CastInst SubClass Constructors; //===----------------------------------------------------------------------===//; /// Check that the construction parameters for a CastInst are correct. This; /// could be broken out into the separate constructors but it is useful to have; /// it in one place and to eliminate the redundant code for getting the sizes; /// of the types involved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:398,redundant,redundant,398,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['redundant'],['redundant']
Availability,"//===----------------------------------------------------------------------===//; // Command line option processing entry point.; //; // Returns true on success. Otherwise, this will print the error message to; // stderr and exit if \p Errs is not set (nullptr by default), or print the; // error message to \p Errs and return false if \p Errs is provided.; //; // If EnvVar is not nullptr, command-line options are also parsed from the; // environment variable named by EnvVar. Precedence is given to occurrences; // from argv. This precedence is currently implemented by parsing argv after; // the environment variable, so it is only implemented correctly for options; // that give precedence to later occurrences. If your program supports options; // that give precedence to earlier occurrences, you will need to extend this; // function to support it correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:193,error,error,193,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,['error'],['error']
Availability,"//===----------------------------------------------------------------------===//; // Diagnose initialization failures; //===----------------------------------------------------------------------===//; /// Emit notes associated with an initialization that failed due to a; /// ""simple"" conversion failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:109,failure,failures,109,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['failure'],"['failure', 'failures']"
Availability,//===----------------------------------------------------------------------===//; // Direct Assignment; //===----------------------------------------------------------------------===//; /// tryAssign - Try to assign VirtReg to an available register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp:230,avail,available,230,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,1,['avail'],['available']
Availability,//===----------------------------------------------------------------------===//; // Error Reporting; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp:85,Error,Error,85,interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,1,['Error'],['Error']
Availability,//===----------------------------------------------------------------------===//; // Error recovery.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:85,Error,Error,85,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,2,"['Error', 'recover']","['Error', 'recovery']"
Availability,"//===----------------------------------------------------------------------===//; // Execution domains.; //===----------------------------------------------------------------------===//; //; // Some instructions go down the NEON pipeline, some go down the VFP pipeline,; // and some can go down both. The vmov instructions go down the VFP pipeline,; // but they can be changed to vorr equivalents that are executed by the NEON; // pipeline.; //; // We use the following execution domain numbering:; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:215,down,down,215,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,4,['down'],['down']
Availability,//===----------------------------------------------------------------------===//; // GetElementPtrInst Class; //===----------------------------------------------------------------------===//; // checkGEPType - Simple wrapper function to give a better assertion failure; // message on bad indexes for a gep instruction.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:261,failure,failure,261,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['failure'],['failure']
Availability,"//===----------------------------------------------------------------------===//; // Helper Routines.; //===----------------------------------------------------------------------===//; /// parseToken - If the current token has the specified kind, eat it and return; /// success. Otherwise, emit the specified error and return failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:309,error,error,309,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,2,"['error', 'failure']","['error', 'failure']"
Availability,"//===----------------------------------------------------------------------===//; // Helper functions.; //===----------------------------------------------------------------------===//; // atoull - Convert an ascii string of decimal digits into the unsigned long; // long representation... this does not have to do input error checking,; // because we know that the input will be matched by a suitable regex...; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLLexer.cpp:321,error,error,321,interpreter/llvm-project/llvm/lib/AsmParser/LLLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLLexer.cpp,1,['error'],['error']
Availability,"//===----------------------------------------------------------------------===//; // Helpers.; //===----------------------------------------------------------------------===//; // Parse misexpect tolerance argument value.; // Valid option values are integers in the range [0, 100)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:196,toler,tolerance,196,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['toler'],['tolerance']
Availability,"//===----------------------------------------------------------------------===//; // Implement the public interfaces to this file...; //===----------------------------------------------------------------------===//; /// lintFunction - Check a function for errors, printing messages on stderr.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:256,error,errors,256,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,1,['error'],['errors']
Availability,"//===----------------------------------------------------------------------===//; // LinkModules entrypoint.; //===----------------------------------------------------------------------===//; /// This function links two modules together, with the resulting Dest module; /// modified to be the composite of the two input modules. If an error occurs,; /// true is returned and ErrorMsg (if not null) is set to indicate the problem.; /// Upon failure, the Dest module could be in a modified state, and shouldn't be; /// relied on to be consistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp:335,error,error,335,interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp,3,"['Error', 'error', 'failure']","['ErrorMsg', 'error', 'failure']"
Availability,"//===----------------------------------------------------------------------===//; // Output Stream Adaptors; //===----------------------------------------------------------------------===//; /// A raw_ostream that writes to an std::string. This is a simple adaptor; /// class. This class does not encounter output errors.; /// raw_string_ostream operates without a buffer, delegating all memory; /// management to the std::string. Thus the std::string is always up-to-date,; /// may be used directly and there is no need to call flush().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:314,error,errors,314,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['error'],['errors']
Availability,"//===----------------------------------------------------------------------===//; // Overview:; // The Pass Manager Infrastructure manages passes. It's responsibilities are:; //; // o Manage optimization pass execution order; // o Make required Analysis information available before pass P is run; // o Release memory occupied by dead passes; // o If Analysis information is dirtied by a pass then regenerate Analysis; // information before it is consumed by another pass.; //; // Pass Manager Infrastructure uses multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:266,avail,available,266,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['avail'],['available']
Availability,//===----------------------------------------------------------------------===//; // PMDataManager implementation; /// Augement AvailableAnalysis by adding analysis made available by pass P.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:128,Avail,AvailableAnalysis,128,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,2,"['Avail', 'avail']","['AvailableAnalysis', 'available']"
Availability,//===----------------------------------------------------------------------===//; // Pointer Evaluation; //===----------------------------------------------------------------------===//; /// Attempts to compute the number of bytes available at the pointer; /// returned by a function with the alloc_size attribute. Returns true if we; /// were successful. Places an unsigned number into `Result`.; ///; /// This expects the given CallExpr to be a call to a function with an; /// alloc_size attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:231,avail,available,231,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['avail'],['available']
Availability,"//===----------------------------------------------------------------------===//; // PowerPC 970 Hazard Recognizer; //; // This models the dispatch group formation of the PPC970 processor. Dispatch; // groups are bundles of up to five instructions that can contain various mixes; // of instructions. The PPC970 can dispatch a peak of 4 non-branch and one; // branch instruction per-cycle.; //; // There are a number of restrictions to dispatch group formation: some; // instructions can only be issued in the first slot of a dispatch group, & some; // instructions fill an entire dispatch group. Additionally, only branches can; // issue in the 5th (last) slot.; //; // Finally, there are a number of ""structural"" hazards on the PPC970. These; // conditions cause large performance penalties due to misprediction, recovery,; // and replay logic that has to happen. These cases include setting a CTR and; // branching through it in the same dispatch group, and storing to an address,; // then loading from the same address within a dispatch group. To avoid these; // conditions, we insert no-op instructions when appropriate.; //; // FIXME: This is missing some significant cases:; // 1. Modeling of microcoded instructions.; // 2. Handling of serialized operations.; // 3. Handling of the esoteric cases in ""Resource-based Instruction Grouping"".; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp:814,recover,recovery,814,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,1,['recover'],['recovery']
Availability,"//===----------------------------------------------------------------------===//; // PragmaNamespace Implementation.; //===----------------------------------------------------------------------===//; /// FindHandler - Check to see if there is already a handler for the; /// specified name. If not, return the handler for the null identifier if it; /// exists, otherwise return null. If IgnoreNull is true (the default) then; /// the null handler isn't returned on failure to match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Pragma.cpp:464,failure,failure,464,interpreter/llvm-project/clang/lib/Lex/Pragma.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Pragma.cpp,1,['failure'],['failure']
Availability,"//===----------------------------------------------------------------------===//; // Preprocessor Macro Directive Handling.; //===----------------------------------------------------------------------===//; /// ReadMacroParameterList - The ( starting a parameter list of a macro; /// definition has just been read. Lex the rest of the parameters and the; /// closing ), updating MI with what we learn. Return true if an error occurs; /// parsing the param list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp:420,error,error,420,interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPDirectives.cpp,1,['error'],['error']
Availability,//===----------------------------------------------------------------------===//; // Public Constructor Functions; //===----------------------------------------------------------------------===//; /// createVLIWDAGScheduler - This creates a top-down list scheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:245,down,down,245,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['down'],['down']
Availability,//===----------------------------------------------------------------------===//; // Recoverable Backend Errors; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp:85,Recover,Recoverable,85,interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp,2,"['Error', 'Recover']","['Errors', 'Recoverable']"
Availability,//===----------------------------------------------------------------------===//; // Register mask functions; //===----------------------------------------------------------------------===//; /// Check whether use of reg in MI is live-through. Live-through means that; /// the value is alive on exit from Machine instruction. The example of such; /// use is a deopt value in statepoint instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:94,mask,mask,94,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,2,"['alive', 'mask']","['alive', 'mask']"
Availability,"//===----------------------------------------------------------------------===//; // Remove dead symbols from existing constraints; //===----------------------------------------------------------------------===//; /// Scan all symbols referenced by the constraints. If the symbol is not alive; /// as marked in LSymbols, mark it as dead in DSymbols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:287,alive,alive,287,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['alive'],['alive']
Availability,"//===----------------------------------------------------------------------===//; // SuperRegClassIterator; //===----------------------------------------------------------------------===//; //; // Iterate over the possible super-registers for a given register class. The; // iterator will visit a list of pairs (Idx, Mask) corresponding to the; // possible classes of super-registers.; //; // Each bit mask will have at least one set bit, and each set bit in Mask; // corresponds to a SuperRC such that:; //; // For all Reg in SuperRC: Reg:Idx is in RC.; //; // The iterator can include (O, RC->getSubClassMask()) as the first entry which; // also satisfies the above requirement, assuming Reg:0 == Reg.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:317,Mask,Mask,317,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,3,"['Mask', 'mask']","['Mask', 'mask']"
Availability,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// ReleaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:89,Down,Down,89,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['Down'],['Down']
Availability,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// releaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:89,Down,Down,89,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['Down'],['Down']
Availability,"//===----------------------------------------------------------------------===//; // Trace Selection Strategies; //===----------------------------------------------------------------------===//; //; // A trace selection strategy is implemented as a sub-class of Ensemble. The; // trace through a block B is computed by two DFS traversals of the CFG; // starting from B. One upwards, and one downwards. During the upwards DFS,; // pickTracePred() is called on the post-ordered blocks. During the downwards; // DFS, pickTraceSucc() is called in a post-order.; //; // We never allow traces that leave loops, but we do allow traces to enter; // nested loops. We also never allow traces to contain back-edges.; //; // This means that a loop header can never appear above the center block of a; // trace, except as the trace head. Below the center block, loop exiting edges; // are banned.; //; // Return true if an edge from the From loop to the To loop is leaving a loop.; // Either of To and From can be null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:391,down,downwards,391,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,2,['down'],['downwards']
Availability,//===----------------------------------------------------------------------===//; // Type Attribute Processing; //===----------------------------------------------------------------------===//; /// Build an AddressSpace index from a constant expression and diagnose any; /// errors related to invalid address_spaces. Returns true on successfully; /// building an AddressSpace index.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:275,error,errors,275,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['error'],['errors']
Availability,//===----------------------------------------------------------------------===//; // USR generation.; //===----------------------------------------------------------------------===//; /// \returns true on error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp:205,error,error,205,interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp,1,['error'],['error']
Availability,//===----------------------------------------------------------------------===//; // Vector Mask Decoding; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ShuffleDecodeConstantPool.cpp:92,Mask,Mask,92,interpreter/llvm-project/llvm/lib/Target/X86/X86ShuffleDecodeConstantPool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ShuffleDecodeConstantPool.cpp,4,['Mask'],['Mask']
Availability,"//===----------------------------------------------------------------------===//; // Vector shuffle lowering; //; // This is an experimental code path for lowering vector shuffles on x86. It is; // designed to handle arbitrary vector shuffles and blends, gracefully; // degrading performance as necessary. It works hard to recognize idiomatic; // shuffles and lower them to optimal instruction patterns without leaving; // a framework that allows reasonably efficient handling of all vector shuffle; // patterns.; //===----------------------------------------------------------------------===//; /// Tiny helper function to identify a no-op mask.; ///; /// This is a somewhat boring predicate function. It checks whether the mask; /// array input, which is assumed to be a single-input shuffle mask of the kind; /// used by the X86 shuffle instructions (not a fully general; /// ShuffleVectorSDNode mask) requires any shuffles to occur. Both undef and an; /// in-place shuffle are 'no-op's.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:641,mask,mask,641,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,4,['mask'],['mask']
Availability,"//===----------------------------------------------------------------------===//; // Verification and Construction; //===----------------------------------------------------------------------===//; /// HeaderMap::Create - This attempts to load the specified file as a header; /// map. If it doesn't look like a HeaderMap, it gives up and returns null.; /// If it looks like a HeaderMap but is obviously corrupted, it puts a reason; /// into the string error argument and returns null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp:452,error,error,452,interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp,1,['error'],['error']
Availability,"//===----------------------------------------------------------------------===//; //--- IntervalMapImpl::BranchNode ---//; //===----------------------------------------------------------------------===//; //; // A branch node stores references to 1--N subtrees all of the same height.; //; // The key array in a branch node holds the rightmost stop key of each subtree.; // It is redundant to store the last stop key since it can be found in the; // parent node, but doing so makes tree balancing a lot simpler.; //; // It is unusual for a branch node to only have one subtree, but it can happen; // in the root node if it is smaller than the normal nodes.; //; // When all of the leaf nodes from all the subtrees are concatenated, they must; // satisfy the same constraints as a single leaf node. They must be sorted,; // sane, and fully coalesced.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:380,redundant,redundant,380,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['redundant'],['redundant']
Availability,"//===----------------------------------------------------------------------===//; //--- IntervalMapImpl::NodeRef ---//; //===----------------------------------------------------------------------===//; //; // B+-tree nodes can be leaves or branches, so we need a polymorphic node; // pointer that can point to both kinds.; //; // All nodes are cache line aligned and the low 6 bits of a node pointer are; // always 0. These bits are used to store the number of elements in the; // referenced node. Besides saving space, placing node sizes in the parents; // allow tree balancing algorithms to run without faulting cache lines for nodes; // that may not need to be modified.; //; // A NodeRef doesn't know whether it references a leaf node or a branch node.; // It is the responsibility of the caller to use the correct types.; //; // Nodes are never supposed to be empty, and it is invalid to store a node size; // of 0 in a NodeRef. The valid range of sizes is 1-64.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:605,fault,faulting,605,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['fault'],['faulting']
Availability,"//===----------------------------------------------------------------------===//; /// Represent the analysis usage information of a pass. This tracks analyses; /// that the pass REQUIRES (must be available when the pass runs), REQUIRES; /// TRANSITIVE (must be available throughout the lifetime of the pass), and; /// analyses that the pass PRESERVES (the pass does not invalidate the results; /// of these analyses). This information is provided by a pass to the Pass; /// infrastructure through the getAnalysisUsage virtual function.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h:196,avail,available,196,interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,2,['avail'],['available']
Availability,//===----------------------------------------------------------------------===//; /// ScheduleDAGRRList - The actual register reduction list scheduler; /// implementation. This supports both top-down and bottom-up scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:195,down,down,195,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['down'],['down']
Availability,//===----------------------------------------------------------------------===//; /// ScheduleDAGVLIW - The actual DFA list scheduler implementation. This; /// supports / top-down scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:175,down,down,175,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['down'],['down']
Availability,"//===----------------------------------------------------------------------===//; /// These values represent a non-pipelined step in; /// the execution of an instruction. Cycles represents the number of; /// discrete time slots needed to complete the stage. Units represent; /// the choice of functional units that can be used to complete the; /// stage. Eg. IntUnit1, IntUnit2. NextCycles indicates how many; /// cycles should elapse from the start of this stage to the start of; /// the next stage in the itinerary. A value of -1 indicates that the; /// next stage should start immediately after the current one.; /// For example:; ///; /// { 1, x, -1 }; /// indicates that the stage occupies FU x for 1 cycle and that; /// the next stage starts immediately after this one.; ///; /// { 2, x|y, 1 }; /// indicates that the stage occupies either FU x or FU y for 2; /// consecutive cycles and that the next stage starts one cycle; /// after this stage starts. That is, the stage requirements; /// overlap in time.; ///; /// { 1, x, 0 }; /// indicates that the stage occupies FU x for 1 cycle and that; /// the next stage starts in this same cycle. This can be used to; /// indicate that the instruction requires multiple stages at the; /// same time.; ///; /// FU reservation can be of two different kinds:; /// - FUs which instruction actually requires; /// - FUs which instruction just reserves. Reserved unit is not available for; /// execution of other instruction. However, several instructions can reserve; /// the same unit several times.; /// Such two types of units reservation is used to model instruction domain; /// change stalls, FUs using the same resource (e.g. same register file), etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:1419,avail,available,1419,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['avail'],['available']
Availability,//===----------------------------------------------------------------------===//; /// Utility class that carries the DWARF compile/type unit and the debug info; /// entry in an object.; ///; /// When accessing information from a debug info entry we always need to DWARF; /// compile/type unit in order to extract the info correctly as some information; /// is relative to the compile/type unit. Prior to this class the DWARFUnit and; /// the DWARFDebugInfoEntry was passed around separately and there was the; /// possibility for error if the wrong DWARFUnit was used to extract a unit; /// relative offset. This class helps to ensure that this doesn't happen and; /// also simplifies the attribute extraction calls by not having to specify the; /// DWARFUnit for each call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h:530,error,error,530,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,1,['error'],['error']
Availability,"//===----------------------------------------------------------------------===//; ///; /// Helpers for implementing custom MachineSchedStrategy classes. These take; /// care of the book-keeping associated with list scheduling heuristics.; ///; //===----------------------------------------------------------------------===//; /// ReadyQueue encapsulates vector of ""ready"" SUnits with basic convenience; /// methods for pushing and removing nodes. ReadyQueue's are uniquely identified; /// by an ID. SUnit::NodeQueueId is a mask of the ReadyQueues the SUnit is in.; ///; /// This is a convenience class that may be used by implementations of; /// MachineSchedStrategy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:523,mask,mask,523,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['mask'],['mask']
Availability,"//===----------------------------------------------------------------------===//; //; // Mips Asm Directives; //; // -- Frame directive ""frame Stackpointer, Stacksize, RARegister""; // Describe the stack frame.; //; // -- Mask directives ""(f)mask bitmask, offset""; // Tells the assembler which registers are saved and where.; // bitmask - contain a little endian bitset indicating which registers are; // saved on function prologue (e.g. with a 0x80000000 mask, the; // assembler knows the register 31 (RA) is saved at prologue.; // offset - the position before stack pointer subtraction indicating where; // the first saved register on prologue is located. (e.g. with a; //; // Consider the following function prologue:; //; // .frame $fp,48,$ra; // .mask 0xc0000000,-8; // addiu $sp, $sp, -48; // sw $ra, 40($sp); // sw $fp, 36($sp); //; // With a 0xc0000000 mask, the assembler knows the register 31 (RA) and; // 30 (FP) are saved at prologue. As the save order on prologue is from; // left to right, RA is saved first. A -8 offset means that after the; // stack pointer subtration, the first register in the mask (RA) will be; // saved at address 48-8=40.; //; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; // Mask directives; //===----------------------------------------------------------------------===//; // Create a bitmask with all callee saved registers for CPU or Floating Point; // registers. For CPU registers consider RA, GP and FP for saving if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:221,Mask,Mask,221,interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,7,"['Mask', 'mask']","['Mask', 'mask']"
Availability,"//===----------------------------------------------------------------------===//; //; // createScalarizeMaskedMemIntrinPass - Replace masked load, store, gather; // and scatter intrinsics with scalar code when target doesn't support them.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:134,mask,masked,134,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['mask'],['masked']
Availability,"//===---------------------------------------------------------------------===//; // Custom compiler command implementation of AbstractIntepreter interface; //; // Allows using a custom command for compiling the bitcode, thus allows, for; // example, to compile a bitcode fragment without linking or executing, then; // using a custom wrapper script to check for compiler errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:371,error,errors,371,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['error'],['errors']
Availability,"//===--------------------------------------------------------------------===//; // API to update (Post)DominatorTree information based on modifications to; // the CFG...; /// Inform the dominator tree about a sequence of CFG edge insertions and; /// deletions and perform a batch update on the tree.; ///; /// This function should be used when there were multiple CFG updates after; /// the last dominator tree update. It takes care of performing the updates; /// in sync with the CFG and optimizes away the redundant operations that; /// cancel each other.; /// The functions expects the sequence of updates to be balanced. Eg.:; /// - {{Insert, A, B}, {Delete, A, B}, {Insert, A, B}} is fine, because; /// logically it results in a single insertions.; /// - {{Insert, A, B}, {Insert, A, B}} is invalid, because it doesn't make; /// sense to insert the same edge twice.; ///; /// What's more, the functions assumes that it's safe to ask every node in the; /// CFG about its children and inverse children. This implies that deletions; /// of CFG edges must not delete the CFG nodes before calling this function.; ///; /// The applyUpdates function can reorder the updates and remove redundant; /// ones internally (as long as it is done in a deterministic fashion). The; /// batch updater is also able to detect sequences of zero and exactly one; /// update -- it's optimized to do less work in these cases.; ///; /// Note that for postdominators it automatically takes care of applying; /// updates on reverse edges internally (so there's no need to swap the; /// From and To pointers when constructing DominatorTree::UpdateType).; /// The type of updates is the same for DomTreeBase<T> and PostDomTreeBase<T>; /// with the same template parameter T.; ///; /// \param Updates An ordered sequence of updates to perform. The current CFG; /// and the reverse of these updates provides the pre-view of the CFG.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:508,redundant,redundant,508,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,2,['redundant'],['redundant']
Availability,//===--------------------------------------------------------------------===//; // C++ Variadic Templates (C++0x [temp.variadic]); //===--------------------------------------------------------------------===//; /// Determine whether an unexpanded parameter pack might be permitted in this; /// location. Useful for error recovery.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:315,error,error,315,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,2,"['error', 'recover']","['error', 'recovery']"
Availability,//===--------------------------------------------------------------------===//; // Diagnostic Emission and Error recovery.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:107,Error,Error,107,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,2,"['Error', 'recover']","['Error', 'recovery']"
Availability,"//===--------------------------------------------------------------------===//; // ExternalASTSource interface.; //===--------------------------------------------------------------------===//; /// Return the amount of memory used by memory buffers, breaking down; /// by heap-backed versus mmap'ed memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp:258,down,down,258,interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp,1,['down'],['down']
Availability,"//===--------------------------------------------------------------------===//; // FileID manipulation methods.; //===--------------------------------------------------------------------===//; /// Return the buffer for the specified FileID.; ///; /// If there is an error opening this buffer the first time, return; /// std::nullopt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:266,error,error,266,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['error'],['error']
Availability,//===--------------------------------------------------------------------===//; // LiveIn Management; //===--------------------------------------------------------------------===//; /// addLiveIn - Add the specified register as a live-in. Note that it; /// is an error to add the same register to the same set more than once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:263,error,error,263,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,1,['error'],['error']
Availability,"//===--------------------------------------------------------------------===//; // Portable bit mask operations.; //===--------------------------------------------------------------------===//; //; // These methods all operate on arrays of uint32_t, each holding 32 bits. The; // fixed word size makes it easier to work with literal bit vector constants; // in portable code.; //; // The LSB in each word is the lowest numbered bit. The size of a portable; // bit mask is always a whole multiple of 32 bits. If no bit mask size is; // given, the bit mask is assumed to cover the entire BitVector.; /// setBitsInMask - Add '1' bits from Mask to this vector. Don't resize.; /// This computes ""*this |= Mask"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h:96,mask,mask,96,interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,6,"['Mask', 'mask']","['Mask', 'mask']"
Availability,"//===--------------------------------------------------------------------===//; // Queries about the code at a SourceLocation.; //===--------------------------------------------------------------------===//; /// Return a pointer to the start of the specified location; /// in the appropriate spelling MemoryBuffer.; ///; /// \param Invalid If non-NULL, will be set \c true if an error occurs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:379,error,error,379,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['error'],['error']
Availability,//===--------------------------------------------------------------------===//; // These are the builtin types that are always available.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h:127,avail,available,127,interpreter/llvm-project/llvm/include/llvm/IR/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h,1,['avail'],['available']
Availability,"//===--------------------------------------------------------------------===//; /// MemIndexedMode enum - This enum defines the load / store indexed; /// addressing modes.; ///; /// UNINDEXED ""Normal"" load / store. The effective address is already; /// computed and is available in the base pointer. The offset; /// operand is always undefined. In addition to producing a; /// chain, an unindexed load produces one value (result of the; /// load); an unindexed store does not produce a value.; ///; /// PRE_INC Similar to the unindexed mode where the effective address is; /// PRE_DEC the value of the base pointer add / subtract the offset.; /// It considers the computation as being folded into the load /; /// store operation (i.e. the load / store does the address; /// computation as well as performing the memory transaction).; /// The base operand is always undefined. In addition to; /// producing a chain, pre-indexed load produces two values; /// (result of the load and the result of the address; /// computation); a pre-indexed store produces one value (result; /// of the address computation).; ///; /// POST_INC The effective address is the value of the base pointer. The; /// POST_DEC value of the offset operand is then added to / subtracted; /// from the base after memory transaction. In addition to; /// producing a chain, post-indexed load produces two values; /// (the result of the load and the result of the base +/- offset; /// computation); a post-indexed store produces one value (the; /// the result of the base +/- offset computation).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:269,avail,available,269,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,1,['avail'],['available']
Availability,"//===------------------------------------------------------------------===//; // Instruction encodings. These are the standard/most common forms for X86; // instructions.; //; /// PseudoFrm - This represents an instruction that is a pseudo instruction; /// or one that has not been implemented yet. It is illegal to code generate; /// it, but tolerated for intermediate implementation stages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:343,toler,tolerated,343,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['toler'],['tolerated']
Availability,"//===------------------------------------------------------------------===//; // Instruction encodings. These are the standard/most common forms for; // Mips instructions.; //; // Pseudo - This represents an instruction that is a pseudo instruction; // or one that has not been implemented yet. It is illegal to code generate; // it, but tolerated for intermediate implementation stages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsBaseInfo.h:338,toler,tolerated,338,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsBaseInfo.h,1,['toler'],['tolerated']
Availability,//===------------------------------------------------------------------===//; /// FP Instruction Classification... Zero is non-fp instruction.; /// FPTypeMask - Mask for all of the FP types...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:161,Mask,Mask,161,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['Mask'],['Mask']
Availability,"//===----------------------------------------------------===//; // Mutating operations. A tree root can be manipulated as; // long as its reference has not ""escaped"" from internal; // methods of a factory object (see below). When a tree; // pointer is externally viewable by client code, the; // internal ""mutable bit"" is cleared to mark the tree; // immutable. Note that a tree that still has its mutable; // bit set may have children (subtrees) that are themselves; // immutable.; //===----------------------------------------------------===//; /// markImmutable - Clears the mutable flag for a tree. After this happens,; /// it is an error to call setLeft(), setRight(), and setHeight().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:637,error,error,637,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['error'],['error']
Availability,"//===----------------------------------; // A shared list of common encodings; //===----------------------------------; // These occupy indices in the range [0, N] whenever an encoding is referenced; // from a compressed 2nd level index table. In practice the linker only; // creates ~128 of these, so that indices are available to embed encodings in; // the 2nd level index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp:319,avail,available,319,interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/MachODump.cpp,1,['avail'],['available']
Availability,"//====== Dynamic mask used in Explore for edge determination",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:17,mask,mask,17,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,2,['mask'],['mask']
Availability,"//=============================================; // matrix inversion starts here; //; // the matrix is split into several parts; // D1 0 0; // A = ( 0 D2 B# ); // 0 B C; //; // D1,D2 are diagonal matrices; //; // first, the D1 part is inverted by calculating 1/D1; // dim(D1)= iDiagonal; // next, the other parts are inverted using Schur complement; //; // 1/D1 0 0; // Ainv = ( 0 E G# ); // 0 G F^-1; //; // where F = C + (-B/D2) B#; // G = (F^-1) (-B/D2); // E = 1/D2 + (-B#/D2) G); //; // the inverse of F is calculated using a Cholesky decomposition; //; // Error handling:; // (a) if rankPtr==nullptr: user requests inverse; //; // if D1 is not strictly positive, return NULL; // if D2 is not strictly positive, return NULL; // if F is not strictly positive (Cholesky decomposition failed); // return NULL; // else; // return Ainv as defined above; //; // (b) if rankPtr !=nullptr: user requests pseudo-inverse; // if D2 is not strictly positive or F is not strictly positive; // calculate singular-value decomposition of; // D2 B#; // ( ) = O D O^-1; // B C; // if some eigenvalues are negative, return NULL; // else calculate pseudo-inverse; // *rankPtr = rank(D1)+rank(D); // else; // calculate pseudo-inverse of D1 (D1_ii==nullptr) ? 0 : 1/D1_ii; // *rankPtr=rank(D1)+nrow(D2)+nrow(C); // return Ainv as defined above",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:562,Error,Error,562,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['Error'],['Error']
Availability,//@}; /// Attempts to produce a RecoveryExpr after some AST node cannot be created.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:32,Recover,RecoveryExpr,32,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['Recover'],['RecoveryExpr']
Availability,"//A 2D graph with error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h:18,error,error,18,hist/hist/inc/TGraph2DAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraph2DAsymmErrors.h,2,['error'],['error']
Availability,"//A graph with asymmetric error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphAsymmErrors.h:26,error,error,26,hist/hist/inc/TGraphAsymmErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphAsymmErrors.h,1,['error'],['error']
Availability,"//A graph with bent, asymmetric error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphBentErrors.h:32,error,error,32,hist/hist/inc/TGraphBentErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphBentErrors.h,1,['error'],['error']
Availability,"//A graph with error bars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphErrors.h:15,error,error,15,hist/hist/inc/TGraphErrors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphErrors.h,1,['error'],['error']
Availability,"//Adjust point coords and scale down to range of [-1 ... 1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TArcBall.cxx:32,down,down,32,graf3d/gl/src/TArcBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TArcBall.cxx,1,['down'],['down']
Availability,"//Background and (probably) shape combine mask, if we can.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:42,mask,mask,42,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['mask'],['mask']
Availability,"//Bertrand! Many thanks for this simple but ... smart and not so obvious (??) idea; //with a mask :) Without you I'll have two separate xpms :)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:93,mask,mask,93,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['mask'],['mask']
Availability,"//Bool_t haveArrayVariable = kFALSE;; //Bool_t *varIsArray = new Bool_t[nvars];; // If there are NaNs in the tree:; // => warn if used variables/cuts/weights contain nan (no problem if event is cut out); // => fatal if cut value is nan or (event not cut out and nans somewhere); // Count & collect all these warnings/errors and output them at the end.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:317,error,errors,317,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['error'],['errors']
Availability,"//Calculate the error function arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx:16,error,error,16,roofit/roofit/src/RooNovosibirsk.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNovosibirsk.cxx,2,['error'],['error']
Availability,"//Constructor from a TH1 objects.; //The buffer of the histo, if available, can be used for; // the estimation of the parent distribution using smoothing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranEmpDist.cxx:65,avail,available,65,math/unuran/src/TUnuranEmpDist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranEmpDist.cxx,1,['avail'],['available']
Availability,"//ELSE ERROR HANDLING; - no need for it - I check in Parse(); //cut off any last spaces, tabs or end of lines",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:7,ERROR,ERROR,7,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,1,['ERROR'],['ERROR']
Availability,"//Else part - error message was issued already by TGCocoa.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContextPrivate.cxx:14,error,error,14,graf3d/gl/src/TGLContextPrivate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContextPrivate.cxx,1,['error'],['error']
Availability,"//Enforce/limit what can be a Tuple.; //Actually, at the moment you can only use; //the fill function for TNtuple/TNtupleD; //(enforced by hidden definition and explicit instantiations).; //But in future this can potentially change.; //TODO: there is no line number in any of error messages.; //It can be improved, though, we can have mixed line endings; //so I can not rely on this numbering (for example, my vim shows these lines:; //aaaa\r\r\nbbb as; //aaaa; //bbbb; //Though it can be also treated as; //aaaa; //; //bbb; //or even as; //aaaa; //; //; //bbb - so line numbers can be useless and misleading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx:276,error,error,276,tree/tree/src/TreeUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx,1,['error'],['error']
Availability,//Error block for array out of bounds,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp:2,Error,Error,2,interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.cpp,2,['Error'],['Error']
Availability,"//Error while creating a pixmap, we; //do not need our context and font anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:2,Error,Error,2,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['Error'],['Error']
Availability,"//Error(""Compile"",""can only be called once; this first call generates both the optimized and memberwise actions."");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:2,Error,Error,2,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Error'],['Error']
Availability,"//Error(""DefinedVariable"",""Bracket unbalanced"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:2,Error,Error,2,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['Error'],['Error']
Availability,"//Error(""New"", ""cannot create object of class %s version %d"", GetName(), fClassVersion);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:2,Error,Error,2,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,3,['Error'],['Error']
Availability,"//Error(""ReadBufferClones"",""The element type %d is not supported yet\n"",compinfo->fType);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx:2,Error,Error,2,io/io/src/TStreamerInfoReadBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx,1,['Error'],['Error']
Availability,"//Error(0,""Could not find the clang::Type for %s\n"",cl.GetNormalizedName());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:2,Error,Error,2,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['Error'],['Error']
Availability,"//Event interest mask, either bit 1 (read), 2 (write) or both can be set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TSysEvtHandler.h:17,mask,mask,17,core/base/inc/TSysEvtHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TSysEvtHandler.h,1,['mask'],['mask']
Availability,"//Exception for standard weight error, which need not be stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:32,error,error,32,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['error'],['error']
Availability,"//Exception for standard wgt^2 errors, which need not be stored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:31,error,errors,31,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['error'],['errors']
Availability,"//Expect import failures:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testWorkspace.cxx:16,failure,failures,16,roofit/roofitcore/test/testWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testWorkspace.cxx,1,['failure'],['failures']
Availability,"//FIXME Should we remove these Decls from ImportedDecls?; // Set the error for the mapped to Decl, which is in the ""to"" context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:69,error,error,69,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['error'],['error']
Availability,"//FIXME: should this be success or failure?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:35,failure,failure,35,interpreter/cling/lib/MetaProcessor/MetaSema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/MetaSema.cpp,1,['failure'],['failure']
Availability,"//Finds a minimum of a function, if the function is unimodal between xmin and xmax; //This method uses a combination of golden section search and parabolic interpolation; //Details about convergence and properties of this algorithm can be; //found in the book by R.P.Brent ""Algorithms for Minimization Without Derivatives""; //or in the ""Numerical Recipes"", chapter 10.2; // convergence is reached using tolerance = 2 *( epsrel * abs(x) + epsabs); //; //type: 0-returns MinimumX; // 1-returns Minimum; // 2-returns MaximumX; // 3-returns Maximum; // 4-returns X corresponding to fy; //if ok=true the method has converged",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BrentMethods.cxx:403,toler,tolerance,403,math/mathcore/src/BrentMethods.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BrentMethods.cxx,1,['toler'],['tolerance']
Availability,"//GCValues_t gcv;; //unsigned int mask = GCTileStipXOrigin | GCTileStipYOrigin;; //; //gcv.ts_x_origin = -fVvisible.fX;; //gcv.ts_y_origin = -fVisibleStart.fY;; //XChangeGC(GetDisplay(), _backGC, mask, &gcv);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:34,mask,mask,34,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,2,['mask'],['mask']
Availability,"//GdkModifierType mask;; //GdkWindow *retw = gdk_window_get_pointer((GdkWindow *) gCws->window,; // &ix, &iy, &mask);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:18,mask,mask,18,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['mask'],['mask']
Availability,"//If there is only one datapoint available put it in the middle of the bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx:33,avail,available,33,graf2d/graf/src/TCandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx,1,['avail'],['available']
Availability,"//Left mouse down in a plot area starts rotation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:13,down,down,13,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['down'],['down']
Availability,"//MATH_INFO_MSG(""Fitter::ExamineFCN"",""Objective function is not of a known type - FitData and ModelFunction objects are not available"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:124,avail,available,124,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['avail'],['available']
Availability,"//Merge all histograms in the collection in this histogram.; //This function computes the min/max for the axes,; //compute a new number of bins, if necessary,; //add bin contents, errors and statistics.; //If overflows are present and limits are different the function will fail.; //The function returns the total number of entries in the result histogram; //if the merge is successful, -1 otherwise.; //; //IMPORTANT remark. The 2 axis x and y may have different number; //of bins and different limits, BUT the largest bin width must be; //a multiple of the smallest bin width and the upper limit must also; //be a multiple of the bin width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h:180,error,errors,180,hist/hist/src/TProfileHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h,1,['error'],['errors']
Availability,"//Mouse down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TArcBall.h:8,down,down,8,graf3d/gl/inc/TArcBall.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TArcBall.h,1,['down'],['down']
Availability,"//N.B: need to clear the count in case of previous errors !; // the clear needs also to be done after calling setEvalErrorLoggingMode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx:51,error,errors,51,roofit/roostats/src/MetropolisHastings.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx,1,['error'],['errors']
Availability,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is a private member of %s \n"",",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,error,error,29,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['error'],['error']
Availability,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not int \n"",; // member.MemberOf()->Name(), member.Name(), current);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,error,error,29,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,2,['error'],['error']
Availability,"//NOTE: *** Need to print an error;; //fprintf(stderr,""*** Datamember %s::%s: size of array (%s) is not known \n"",; // member.MemberOf()->Name(), member.Name(), indexvar);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:29,error,error,29,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['error'],['error']
Availability,"//R__t.Streamer(R__b);\n"");; //VP if (i == 0); //VP Error(0, ""*** Datamember %s::%s: object has no Streamer() method (need manual intervention)\n"",; //VP fullname, field_iter->getName().str());; //VP fprintf(fp, "" //%s.Streamer(R__b);\n"", m.Name());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:52,Error,Error,52,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['Error'],['Error']
Availability,"//Readiness mask, either bit 1 (read), 2 (write) or both can be set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TSysEvtHandler.h:12,mask,mask,12,core/base/inc/TSysEvtHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TSysEvtHandler.h,1,['mask'],['mask']
Availability,"//SemaRef.PushOnScopeChains(Result, SemaRef.TUScope, /*Add to ctx*/true);; // Say that we can handle the situation. Clang should try to recover",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx:136,recover,recover,136,core/metacling/src/TClingCallbacks.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallbacks.cxx,1,['recover'],['recover']
Availability,"//Set the point center and its errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:31,error,errors,31,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability,"//SetInhiDiv; ////////////////////////////////////////////////////////////////////////////////; /// User utility, miscellaneous and debug.; /// Checks all pointers in the tree of cells. This is useful auto-diagnostic.; /// level=0, no printout, failures causes STOP; /// level=1, printout, failures lead to WARNINGS only",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:245,failure,failures,245,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,2,['failure'],['failures']
Availability,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:10,error,error,10,core/meta/src/TDictAttributeMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx,1,['error'],['error']
Availability,"//Stupid asimage provides us upside-down image.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx:36,down,down,36,graf3d/gl/src/TGLPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx,1,['down'],['down']
Availability,"//SysWarning(""Setup"", ""failed to set keepalive option on input socket"");; // Install SigPipe handler to handle kKeepAlive failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:122,failure,failure,122,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['failure'],['failure']
Availability,"//SysWarning(""Setup"", ""failed to set no-delay option on input socket"");; // Check every two hours if client is still alive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:117,alive,alive,117,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['alive'],['alive']
Availability,"//THE ALGORITHM COMPUTING THE ERRORS IS WRONG. HELP REQUIRED",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:30,ERROR,ERRORS,30,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['ERROR'],['ERRORS']
Availability,"//TMetaUtils::Error(0,""Could not cast Attribute to AnnotatedAttribute\n"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:14,Error,Error,14,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['Error'],['Error']
Availability,"//TMetaUtils::Error(0,""Could not find property name-value separator (%s)\n"",ROOT::TMetaUtils::PropertyNameValSeparator.c_str());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:14,Error,Error,14,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['Error'],['Error']
Availability,"//TODO: Check for error before returning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:18,error,error,18,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['error'],['error']
Availability,"//Test the bare CDF with some known values from publicly available tables:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx:57,avail,available,57,roofit/roofit/test/testRooPoisson.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooPoisson.cxx,1,['avail'],['available']
Availability,"//To suppress error messages from TGaxis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:14,error,error,14,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,2,['error'],['error']
Availability,"//Unfolding with support for systematic error propagation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h:40,error,error,40,hist/unfold/inc/TUnfoldSys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldSys.h,1,['error'],['error']
Availability,"//Unreasonable normalisations. A zero integral can be tolerated if the function vanishes, though.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:54,toler,tolerated,54,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['toler'],['tolerated']
Availability,"//We assume that the class was written with a standard streamer; //We attempt to recover if a version count was not written",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:81,recover,recover,81,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['recover'],['recover']
Availability,"//We need a mask, but; //it's creation failed.; //It's an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:12,mask,mask,12,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,2,"['error', 'mask']","['error', 'mask']"
Availability,"//We still can show an empty splashscreen with; //our nice logo! ;) - so this error is not fatal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:78,error,error,78,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['error'],['error']
Availability,"//When GetStopOnError is enabled, stop the parse when an error occurs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:57,error,error,57,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['error'],['error']
Availability,"//When error occurs, write fErrorCode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx:7,error,error,7,io/xmlparser/src/TSAXParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TSAXParser.cxx,1,['error'],['error']
Availability,"//Whether to use out-of-bag samples to estimate; //the generalization error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h:70,error,error,70,tmva/pymva/inc/TMVA/MethodPyRandomForest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h,1,['error'],['error']
Availability,"//Windows seems to need an implementation where two different std::sorts are written; //down in two different blocks. Switching between the two comparators using a ternary; //operator does not compile on windows, although the signature is identical.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:88,down,down,88,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['down'],['down']
Availability,"//With reference counting and autorelease pools, it's possible that; //TGCocoa::DestroyWindow was called and window was correctly deleted,; //but it's still on screen and if used in some functions (like FindWindowForPointerEvent); //and this ends in a segmentation fault.; //fIsDeleted property is here to solve this problem.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/QuartzWindow.h:265,fault,fault,265,graf2d/cocoa/inc/QuartzWindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/QuartzWindow.h,1,['fault'],['fault']
Availability,"//[fNpar] Array of errors of the fNpar parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/v5/TF1Data.h:19,error,errors,19,hist/hist/inc/v5/TF1Data.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/v5/TF1Data.h,1,['error'],['errors']
Availability,//_____________________________________________________________; /**; API class for Contours Error analysis (2-dim errors);; minimization has to be done before and Minimum must be valid;; possibility to ask only for the points or the points and associated Minos; errors;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnContours.h:93,Error,Error,93,math/minuit2/inc/Minuit2/MnContours.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnContours.h,3,"['Error', 'error']","['Error', 'errors']"
Availability,"//_________________________________________________________________; /**; GSLRandomEngine; Base class for all GSL random engines,; normally user instantiate the derived classes; which creates internally the generator. The main GSL generators (see; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Random-number-generator-algorithms.html"">; here</A>) are available as derived classes; In addition to generate uniform numbers it provides method for; generating numbers according to pre-defined distributions; using the GSL functions from; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Random-Number-Distributions.html"">; GSL random number distributions</A>. @ingroup Random; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h:363,avail,available,363,math/mathmore/inc/Math/GSLRndmEngines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLRndmEngines.h,1,['avail'],['available']
Availability,//__________________________________________________________________; /**; API class for Minos Error analysis (asymmetric errors);; minimization has to be done before and Minimum must be valid;; possibility to ask only for one side of the Minos Error;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMinos.h:95,Error,Error,95,math/minuit2/inc/Minuit2/MnMinos.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMinos.h,3,"['Error', 'error']","['Error', 'errors']"
Availability,//_______________________________________________________________________; /**; Method to see if a file is available to save results; \return Boolean with the status.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Envelope.cxx:107,avail,available,107,tmva/tmva/src/Envelope.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Envelope.cxx,1,['avail'],['available']
Availability,"//_________________________________________________________________________; /**; API class for minimization using the Simplex method, which does not need and use; the derivatives of the function, but only function values.; More information on the minimization method is available; <A HREF=""http://seal.web.cern.ch/mathlibs/documents/minuit/mntutorial.pdf"">here</A>. It allows for user interaction: set/change parameters, do minimization,; change parameters, re-do minimization etc.;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnSimplex.h:271,avail,available,271,math/minuit2/inc/Minuit2/MnSimplex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnSimplex.h,1,['avail'],['available']
Availability,"//____________________________________________________________________________; /**; Test class for class Vavilov and its subclasses. For test purposes,; the class contains a number of static function that return the tabulated; values of the Vavilov pdf given by; S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. B. List 24.6.2010. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h:630,Avail,Available,630,math/mathmore/test/VavilovTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h,1,['Avail'],['Available']
Availability,"//____________________________________________________________________________; /**; class for the individual Minuit Parameter with Name and number;; contains the input numbers for the minimization or the output result; from minimization;; possible interactions: Fix/release, set/remove limits, set Value/error;. From version 5.20: use string to store the name to avoid limitation of; name length of 20 characters; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinuitParameter.h:305,error,error,305,math/minuit2/inc/Minuit2/MinuitParameter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MinuitParameter.h,1,['error'],['error']
Availability,"//____________________________________________________________________________; //; // Max Pooling Layer Propagation; //____________________________________________________________________________; /** @name Forward Propagation in Max Pooling Layer; */; ///@{; /** Downsample the matrix \p C to the matrix \p A, using max; * operation, such that the winning indices are stored in matrix; * \p B. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:265,Down,Downsample,265,tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,1,['Down'],['Downsample']
Availability,//_____________________________________________________________________________; /**; class which holds the external user and/or internal Minuit representation; of the parameters and errors;; transformation internal <-> external on demand;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameterState.h:183,error,errors,183,math/minuit2/inc/Minuit2/MnUserParameterState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnUserParameterState.h,1,['error'],['errors']
Availability,"//______________________________________________________________________________; // Inclusive minimum error level a message needs to get handled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:103,error,error,103,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['error'],['error']
Availability,"//______________________________________________________________________________; // Use this function in case a system (OS or GUI) related error occured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:140,error,error,140,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['error'],['error']
Availability,"//______________________________________________________________________________; // Use this function in case an error occured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:114,error,error,114,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['error'],['error']
Availability,"//______________________________________________________________________________; // Use this function in case of a fatal error. It will abort the program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:122,error,error,122,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['error'],['error']
Availability,"//______________________________________________________________________________; // bool TBackCompFitter::Scan2D(unsigned int ipar, unsigned int jpar, TGraph2D * gr,; // double xmin = 0, double xmax = 0, double ymin = 0, double ymax = 0) {; // // scan the parameters ipar between values of [xmin,xmax] and; // // jpar between values of [ymin,ymax] and; // // a graph2D must be given which will be on return filled with the scan resul; // // If the graph size is zero, a default size n = 20x20 will be used; // //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*; // if (!gr) return false;; // if (!fMinimizer) {; // Error(""Scan"",""Minimizer is not available - cannot scan before fitting"");; // return false;; // }; // unsigned int npoints = gr->GetN();; // if (npoints == 0) {; // npoints = 40;; // gr->Set(npoints);; // }; // // to be implemented; // for (unsigned int ix = 0; ix < npoints; ++ix) {; // return fMinimizer->Scan( ipar, npoints, gr->GetX(), gr->GetY(), xmin, xmax);; // }; ////////////////////////////////////////////////////////////////////////////////; /// Create a 2D contour around the minimum for the parameter ipar and jpar; /// if a minimum does not exist or is invalid it will return false; /// on exit a TGraph is filled with the contour points; /// the number of contour points is determined by the size of the TGraph.; /// if the size is zero a default number of points = 20 is used; /// pass optionally the confidence level, default is 0.683; /// it is assumed that ErrorDef() defines the right error definition; /// (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:641,Error,Error,641,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,5,"['Error', 'avail', 'error']","['Error', 'ErrorDef', 'available', 'error']"
Availability,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:89,error,error,89,proof/proof/src/TSlaveLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx,2,"['Error', 'error']","['ErrorHandler', 'error']"
Availability,"//______________________________________________________________________________; //; // Generic Gradient Descent Class; //______________________________________________________________________________; //; /*** \class TGradientDescent; *; * Generic implementation of gradient descent minimization.; *; * The TGradientDescent class implements an architecture and input data; * independent implementation of the gradient descent minimization algorithm.; *; * Provides Train(...) and TrainMomentum(...) functions that perform a complete; * training of a neural network. Those are mainly used for testing since for; * production a more fine grained control of the training process is desirable.; * This is provided by the Step(...), StepMomentum(...) and StepNesterov(...); * functions that perform a single minimization step.; *; * The main training characteristics are defined by the provided learning rate,; * the test interval, and the convergence steps required for convergence. The; * test interval defines how often the error on the validation set is computed,; * and the values with which the step counter is increased each time the; * HasConverged() member function is called. A convergence step is defined as; * a step in which the test error is NOT less than 0.999 times the current; * minimal test error that has been reached. If between two subsequent calls; * to HasConverged(Double_t) the test error has not been sufficiently reduced; * it is assumed that a number of convergence steps equal to the test interval; * has been performed.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h:1024,error,error,1024,tmva/tmva/inc/TMVA/DNN/Minimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h,4,['error'],['error']
Availability,"//______________________________________________________________________________; //; // Mean Squared Error; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestLossFunctions.h:102,Error,Error,102,tmva/tmva/test/DNN/TestLossFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestLossFunctions.h,1,['Error'],['Error']
Availability,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:659,avail,available,659,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['avail'],['available']
Availability,"//______________________________________________________________________________; //; // llvm error handler through exceptions; see also cling/UserInterface; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:94,error,error,94,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"//_______________________________________________________________________________; /**; Class describing a geometrical plane in 3 dimensions.; A Plane3D is a 2 dimensional surface spanned by two linearly independent vectors.; The plane is described by the equation; \f$ a*x + b*y + c*z + d = 0 \f$ where (a,b,c) are the components of the; normal vector to the plane \f$ n = (a,b,c) \f$ and \f$ d = - n \dot x \f$, where x is any point; belonging to plane.; More information on the mathematics describing a plane in 3D is available on; <A HREF=http://mathworld.wolfram.com/Plane.html>MathWord</A>.; The Plane3D class contains the 4 scalar values in T which represent the; four coefficients, fA, fB, fC, fD. fA, fB, fC are the normal components normalized to 1,; i.e. fA**2 + fB**2 + fC**2 = 1. @ingroup GenVector. @sa Overview of the @ref GenVector ""physics vector library""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Plane3D.h:521,avail,available,521,math/genvector/inc/Math/GenVector/Plane3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/Plane3D.h,1,['avail'],['available']
Availability,"//_________________________________________________________________________________; /*Double_t testAddRowWise(); {; const size_t ntests = 10;. Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 50 + 1;; n = rand() % 50 + 1;. TMatrixT<Double_t> A(m,n), B(m,n), theta(n,1);; //randomMatrix(A);; randomMatrix(theta);; TCudaMatrix ACuda(A), BCuda(B), thetaCuda(theta);. TReference<Double_t>::AddRowWise(A, theta);; TCuda<false>::AddRowWise(ACuda,thetaCuda);; TMatrixT<Double_t> ARef(ACuda);. Double_t error = maximumRelativeError(A, ARef);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________; /*Double_t testHadamard(); {; const size_t ntests = 10;; Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 10 + 1;; n = rand() % 10 + 1;. TMatrixT<Double_t> A(m,n), B(m,n);; randomMatrix(A);; randomMatrix(B);; TCudaMatrix ACuda(A), BCuda(B);. for (size_t j = 0; j < (size_t) A.GetNrows(); j++) {; for (size_t k = 0; k < (size_t) A.GetNcols(); k++) {; A(j,k) *= B(j,k);; }; }. TCuda<false>::Hadamard(ACuda, BCuda);; TMatrixT<Double_t> ARef(ACuda);; Double_t error = maximumRelativeError(A, ARef);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:541,error,error,541,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,4,['error'],['error']
Availability,"//_________________________________________________________________________________; /*Double_t testScaleAdd(); {; const size_t ntests = 10;; Double_t maximumError = 0;. for (size_t i = 0; i < ntests; i++) {; size_t m, n;; m = rand() % 1000 + 1;; n = rand() % 1000 + 1;. TMatrixT<Double_t> A(m,n), B(m,n);. randomMatrix(A);; randomMatrix(B);. TCudaMatrix ACuda(A);; TCudaMatrix BCuda(B);. Double_t beta = ((Double_t) rand()) / ((Double_t) RAND_MAX);; TReference<Double_t>::ScaleAdd(A, B, beta);; TCuda<false>::ScaleAdd(ACuda, BCuda, beta);. Double_t error = maximumRelativeError(A, (TMatrixT<Double_t>) ACuda);; maximumError = std::max(error, maximumError);; }; return maximumError;; }*/; //_________________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx:550,error,error,550,tmva/tmva/test/DNN/TestCudnn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestCudnn.cxx,2,['error'],['error']
Availability,"//___________________________________________________________________________________; /**; Class describing the binned data sets :; vectors of x coordinates, y values and optionally error on y values and error on coordinates; The dimension of the coordinate is free; There are 4 different options:; - only coordinates and values (for binned likelihood fits) : kNoError; - coordinate, values and error on values (for normal least square fits) : kValueError; - coordinate, values, error on values and coordinates (for effective least square fits) : kCoordError; - coordinate, values, error on coordinates and asymmetric error on values : kAsymError. In addition there is the option to construct Bindata copying the data in (using the DataVector class); or using pointer to external data (DataWrapper) class.; In general is found to be more efficient to copy the data.; In case of really large data sets for limiting memory consumption then the other option can be used; Specialized constructor exists for data up to 3 dimensions. When the data are copying in the number of points can be set later (or re-set) using Initialize and; the data are inserted one by one using the Add method.; It is mandatory to set the size before using the Add method. @ingroup FitData; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:183,error,error,183,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,6,['error'],['error']
Availability,"//___________________________________________________________________________________; /**; Class describing the un-binned data sets (just x coordinates values) of any dimensions. There is the option to construct UnBindata copying the data inside; (in the base FitData class) or using a pointer to external data, depending on which; constructor of the UnBinData class is used.; It is recommended to copy the input data inside, since this will be more efficient and; less error prone, since the input provided data will have to be kept alive for all the time the; Fit classes will be used.; In case of really large data sets for limiting memory consumption then the other option can be used; with special care.; Specialized constructor exists for using external data up to 3 dimensions. When the data are copying in the number of points can be set later (or re-set) using Initialize and; the data are inserted one by one using the Add method.; It is mandatory to set the size before using the Add method. @ingroup FitData; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h:471,error,error,471,math/mathcore/inc/Fit/UnBinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h,2,"['alive', 'error']","['alive', 'error']"
Availability,"//___________________________________________________________________________________; /**; class containing the result of the fit and all the related information; (fitted parameter values, error, covariance matrix and minimizer result information); Contains a pointer also to the fitted (model) function, modified with the fit parameter values.; When the fit is valid, it is constructed from a Minimizer and a model function pointer. @ingroup FitMain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:190,error,error,190,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['error'],['error']
Availability,"//_____________________________________________________________________________________; /**; Class for performing function interpolation of points.; The class is instantiated with an interpolation methods, passed as an enumeration in the constructor.; See Interpolation::Type for the available interpolation algorithms, which are implemented using GSL.; See also the <A HREF=http://www.gnu.org/software/gsl/manual/html_node/Interpolation.html"">GSL manual</A> for more information.; The class provides additional methods for computing derivatives and integrals of interpolating functions. This class does not support copying.; @ingroup Interpolation; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h:285,avail,available,285,math/mathmore/inc/Math/Interpolator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Interpolator.h,1,['avail'],['available']
Availability,"//__________________________________________________________________________________________; /**; Class describing a 4D coordinate system; or momentum-energy vectors stored as (Px, Py, Pz, M).; This system is useful to describe ultra-relativistic particles; (like electrons at LHC) to avoid numerical errors evaluating the mass; when E >>> m; The metric used is (-,-,-,+); Spacelike particles (M2 < 0) are described with negative mass values,; but in this case m2 must always be less than P2 to preserve a positive value of E2. @ingroup GenVector. @sa Overview of the @ref GenVector ""physics vector library""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h:302,error,errors,302,math/genvector/inc/Math/GenVector/PxPyPzM4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h,1,['error'],['errors']
Availability,"//___________________________________________________________________________________________; /**; User class for calculating the derivatives of a function. It can calculate first (method Derivative1),; second (method Derivative2) and third (method Derivative3) of a function. It uses the Richardson extrapolation method for function derivation in a given interval.; The method use 2 derivative estimates (one computed with step h and one computed with step h/2); to compute a third, more accurate estimation. It is equivalent to the; <a href = http://en.wikipedia.org/wiki/Five-point_stencil>5-point method</a>,; which can be obtained with a Taylor expansion.; A step size should be given, depending on x and f(x).; An optimal step size value minimizes the truncation error of the expansion and the rounding; error in evaluating x+h and f(x+h). A too small h will yield a too large rounding error while a too large; h will give a large truncation error in the derivative approximation.; A good discussion can be found in discussed in; <a href=http://www.nrbook.com/a/bookcpdf/c5-7.pdf>Chapter 5.7</a> of Numerical Recipes in C.; By default a value of 0.001 is uses, acceptable in many cases. This class is implemented using code previously in TF1::Derivate{,2,3}(). Now TF1 uses this class. @ingroup Deriv. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:770,error,error,770,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,4,['error'],['error']
Availability,"//___________________________________________________________________________________________; /**; User class for performing function minimization. It will use the Brent Method for function minimization in a given interval.; First, a grid search is used to bracket the minimum value; with the a step size = (xmax-xmin)/npx. The step size; can be controlled via the SetNpx() function. A default value of npx = 100 is used.; The default value con be changed using the static method SetDefaultNpx.; If the function is unimodal or if its extrema are far apart, setting the fNpx to; a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval.; If the Brent method fails to converge the bracketing is repeated on the latest best estimate of the; interval. The procedure is repeated with a maximum value (default =10) which can be set for all; BrentRootFinder classes with the method SetDefaultNSearch. This class is implemented from TF1::GetMinimum. To use the class, three steps have to be taken:; 1. Create the class.; 2. Set a function within an interval to look for the minimum.; 3. Call the Minimize function with the error parameters. If another minimization is to be performed, repeat the last two steps. @ingroup Min1D. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMinimizer1D.h:1168,error,error,1168,math/mathcore/inc/Math/BrentMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BrentMinimizer1D.h,1,['error'],['error']
Availability,//______________________________________________________________________________________________; /**; class holding the full result of the minimization;; both internal and external (MnUserParameterState) representation available; for the parameters at the Minimum; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h:220,avail,available,220,math/minuit2/inc/Minuit2/FunctionMinimum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FunctionMinimum.h,1,['avail'],['available']
Availability,"//array of robust distances, size n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:11,robust,robust,11,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,1,['robust'],['robust']
Availability,//assert(!Error);,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp:10,Error,Error,10,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonAsmBackend.cpp,1,['Error'],['Error']
Availability,"//bool silentMode = (RooMsgService::instance().globalKillBelow() >= RooFit::ERROR || RooMsgService::instance().silentMode()) ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:76,ERROR,ERROR,76,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['ERROR'],['ERROR']
Availability,"//calculate robust distances and throw out the bad points",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:12,robust,robust,12,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability,"//calculating Mean, RMS of the relative errors and using them to set; //the boundaries of the linear transformation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:40,error,errors,40,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,1,['error'],['errors']
Availability,"//call FillBuffer to prefetch next block if necessary; //(if we are currently reading from the last block available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:106,avail,available,106,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['avail'],['available']
Availability,"//changes also errors array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:15,error,errors,15,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,['error'],['errors']
Availability,"//changes also errors array (if any)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:15,error,errors,15,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['error'],['errors']
Availability,"//check if optimx is available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:21,avail,available,21,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['avail'],['available']
Availability,"//checkModuleImportContext(*this, Mod, ImportLoc, CurContext);; // FIXME: we should support importing a submodule within a different submodule; // of the same top-level module. Until we do, make it an error rather than; // silently ignoring the import.; // FIXME: Should we warn on a redundant import of the current module?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp:201,error,error,201,interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaModule.cpp,2,"['error', 'redundant']","['error', 'redundant']"
Availability,//cl_khr_fp16; /**; * Complementary error function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:36,error,error,36,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['error'],['error']
Availability,//cl_khr_fp16; /**; * Error function encountered in integrating the; * normal distribution.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:22,Error,Error,22,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Error'],['Error']
Availability,"//combine result + roundoff error into expansion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:28,error,error,28,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//compares estim error with expected error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:17,error,error,17,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,2,['error'],['error']
Availability,"//compute standard error of skewness; // assume parent normal distribution use formula from Kendall-Stuart, Vol 1 pag 243, second edition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:19,error,error,19,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"//compute the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx:14,error,error,14,math/mathcore/src/RichardsonDerivator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/RichardsonDerivator.cxx,2,['error'],['error']
Availability,"//const double INV_MERSBASE=(0.4336808689942017736029811203479766845703E-18); // gives ""duplicate symbol"" error; // the charpoly is irreducible for the combinations of N and SPECIAL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/mixmax.h:106,error,error,106,math/mathcore/src/mixmax.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/mixmax.h,1,['error'],['error']
Availability,"//coordinate with biggest error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:26,error,error,26,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['error'],['error']
Availability,"//cout << ""ROATS::setDataSlave() ERROR this is SimMaster _funcClone = "" << _funcClone << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:33,ERROR,ERROR,33,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['ERROR'],['ERROR']
Availability,"//cout << ""RooNumGenFactory::storeSampler() ERROR: integrator '"" << name << ""' already registered"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:44,ERROR,ERROR,44,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,1,['ERROR'],['ERROR']
Availability,"//cout << ""RooNumIntFactory::storeIntegrator() ERROR: integrator '"" << name << ""' already registered"" << std::endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:47,ERROR,ERROR,47,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['ERROR'],['ERROR']
Availability,"//defined(__OPENCL_CPP_VERSION__) || (__OPENCL_C_VERSION__ >= CL_VERSION_2_0); // OpenCL v1.1 s6.11.12, v1.2 s6.12.12, v2.0 s6.13.12 - Miscellaneous Vector Functions; /**; * The shuffle and shuffle2 built-in functions construct; * a permutation of elements from one or two input; * vectors respectively that are of the same type,; * returning a vector with the same element type as the; * input and length that is the same as the shuffle mask.; * The size of each element in the mask must match the; * size of each element in the result. For shuffle, only; * the ilogb(2m-1) least significant bits of each mask; * element are considered. For shuffle2, only the; * ilogb(2m-1)+1 least significant bits of each mask; * element are considered. Other bits in the mask shall; * be ignored.; * The elements of the input vectors are numbered from; * left to right across one or both of the vectors. For this; * purpose, the number of elements in a vector is given; * by vec_step(gentypem). The shuffle mask operand; * specifies, for each element of the result vector, which; * element of the one or two input vectors the result; * element gets.; * Examples:; * uint4 mask = (uint4)(3, 2,; * 1, 0);; * float4 a;; * float4 r = shuffle(a, mask);; * // r.s0123 = a.wzyx; * uint8 mask = (uint8)(0, 1, 2, 3,; * 4, 5, 6, 7);; * float4 a, b;; * float8 r = shuffle2(a, b, mask);; * // r.s0123 = a.xyzw; * // r.s4567 = b.xyzw; * uint4 mask;; * float8 a;; * float4 b;; * b = shuffle(a, mask);; * Examples that are not valid are:; * uint8 mask;; * short16 a;; * short8 b;; * b = shuffle(a, mask); <- not valid; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:438,mask,mask,438,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,14,['mask'],['mask']
Availability,"//did an error occurred ?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:9,error,error,9,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['error']
Availability,"//double AdaptiveIntegratorMultiDim::Result() const { return fIntegrator->Result(); }; //double AdaptiveIntegratorMultiDim::Error() const { return fIntegrator->Error(); }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:124,Error,Error,124,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,2,['Error'],['Error']
Availability,"//double error = kC1*h2*fx; //compute the error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranMultiContDist.cxx:9,error,error,9,math/unuran/src/TUnuranMultiContDist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranMultiContDist.cxx,2,['error'],['error']
Availability,"//downscale:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotBox.cxx:2,down,downscale,2,graf3d/gl/src/TGLPlotBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotBox.cxx,1,['down'],['downscale']
Availability,"//end anonymous namespace; //===----------------------------------------------------------------------===//; // RegionPass; // Check if this pass is suitable for the current RGPassManager, if; // available. This pass P is not suitable for a RGPassManager if P; // is not preserving higher level analysis info used by other; // RGPassManager passes. In such case, pop RGPassManager from the; // stack. This will force assignPassManager() to create new; // LPPassManger as expected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/RegionPass.cpp:196,avail,available,196,interpreter/llvm-project/llvm/lib/Analysis/RegionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/RegionPass.cpp,1,['avail'],['available']
Availability,"//error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGLabel.cxx:2,error,error,2,gui/gui/src/TGLabel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGLabel.cxx,2,['error'],['error']
Availability,"//error -= 2 * h3->GetBinContent(i,j,h)*h3->GetBinContent(i,j,h)*h2->GetBinError(i,j,h)*h2->GetBinError(i,j,h);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2,error,error,2,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['error'],['error']
Availability,"//error case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:2,error,error,2,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"//error code and message follow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,error,error,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['error'],['error']
Availability,"//error on x doesn't change",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:2,error,error,2,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['error'],['error']
Availability,"//error weights/2^n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:2,error,error,2,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['error'],['error']
Availability,"//error while reading",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:2,error,error,2,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['error'],['error']
Availability,"//errors are handled inside OpenFile",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:2,error,errors,2,tree/treeplayer/src/TMPWorkerTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx,1,['error'],['errors']
Availability,"//errors are handled inside RetrieveTree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:2,error,errors,2,tree/treeplayer/src/TMPWorkerTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx,1,['error'],['errors']
Availability,"//failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx:2,failure,failure,2,io/io/src/TFileCacheWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheWrite.cxx,2,['failure'],['failure']
Availability,"//false if is found some error in mvaS or mvaB",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h:25,error,error,25,tmva/tmva/inc/TMVA/ROCCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ROCCalc.h,1,['error'],['error']
Availability,"//file->Error(""ReadProcessID"",""Cannot find %s in file %s"",pidname,file->GetName());",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:8,Error,Error,8,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Error'],['Error']
Availability,"//fill efficiency and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:22,error,errors,22,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['error'],['errors']
Availability,"//first condition not to repeat the previous error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:45,error,error,45,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,4,['error'],['error']
Availability,"//for robust fitting, see if # of good points is defined; // decode parameters for robust fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx:6,robust,robust,6,hist/hist/src/HFitImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx,2,['robust'],['robust']
Availability,"//gather(v1, mask, index, base, scale);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:13,mask,mask,13,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,"//general error, ignore it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:10,error,error,10,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,1,['error'],['error']
Availability,"//get errors and matrices from R; // ROOT::R::TRObjectProxy p = gR->ParseEval(""cov""); ; // TMatrixD cm = p.ToMatrix<Double_t>();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:6,error,errors,6,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['error'],['errors']
Availability,"//get errors from the sqrt of the diagonal of cov",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:6,error,errors,6,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['error'],['errors']
Availability,"//go down binary tree until cell is found",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:5,down,down,5,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,2,['down'],['down']
Availability,"//if (!collProxy) {; // Error(""Bronch"", ""%s is missing its CollectionProxy (for branch %s)"", classname, name);; //}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:24,Error,Error,24,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Error'],['Error']
Availability,"//if (!info->HasDefaultConstructor()) {; // // FIXME: We might have a ROOT ioctor, we might; // // have to check for that here.; // ::Error(""TClingCallFunc::ExecDefaultConstructor"",; // ""Class has no default constructor: %s"",; // info->Name());; // return 0;; //}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:134,Error,Error,134,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['Error'],['Error']
Availability,"//if (!pp[ndx]) {; // -- We do not have a pointer to a varying-length array.; //Error(""ReadBuffer"", ""The pointer to element %s::%s type %d (%s) is null\n"", thisVar->GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; //continue;; //}; // Delete any memory at pp[ndx].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx:80,Error,Error,80,io/io/src/TStreamerInfoReadBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx,2,['Error'],['Error']
Availability,"//if (result > 0 && aresult< 1e-100) {; // delete [] wk;; // fStatus = 0; //function is probably symmetric ==> integral is null: not an error; // return result;; //}; //if division",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:136,error,error,136,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['error'],['error']
Availability,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:12,avail,available,12,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['avail'],['available']
Availability,"//if a integer value k>0 is specified, a k-fold cross; //validation on the training data is performed to assess the; //quality of the model: the accuracy rate for classification; //and the Mean Squared Error for regression",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:202,Error,Error,202,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['Error'],['Error']
Availability,"//in case b1=b2 error is zero; //use TGraphAsymmErrors::BayesDivide for getting the asymmetric error not equal to zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:16,error,error,16,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"//indices of points, used in the robust fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:33,robust,robust,33,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['robust'],['robust']
Availability,"//intermediate node --> go down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:27,down,down,27,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['down'],['down']
Availability,"//iret |= compare( trf3 == t3, 1,""e rot * transl"",1 );; // this above fails on i686-slc5-gcc43-opt - use a comparison with tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx:123,toler,tolerance,123,math/genvector/test/testGenVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/test/testGenVector.cxx,1,['toler'],['tolerance']
Availability,"//iret |= compareResult(fitter.Result().Chi2(), chi2ref,""TGraph fit (no errors) "",0.3);; // compare with TGraph::Fit (no errors)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testFit.cxx:72,error,errors,72,math/mathcore/test/fit/testFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testFit.cxx,2,['error'],['errors']
Availability,"//kButton1Down + shift modifier; //The current version of ROOT does not; //have enumerators for button events + key modifiers,; //so I use hardcoded literals. :(; //With left mouse button down and shift pressed; //we can move plot as the whole or move; //plot's parts - dynamic sections.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:188,down,down,188,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['down'],['down']
Availability,"//list of available packages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:10,avail,available,10,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['avail'],['available']
Availability,"//mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2,mask,mask,2,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['mask'],['mask']
Availability,"//mask these Likelihood Fumili",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2,mask,mask,2,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['mask'],['mask']
Availability,"//maximum_error = std::max(error, maximum_error);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestRecurrentBackpropagation.h:27,error,error,27,tmva/tmva/test/DNN/RNN/TestRecurrentBackpropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestRecurrentBackpropagation.h,1,['error'],['error']
Availability,"//merge bin contents and errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h:25,error,errors,25,hist/hist/src/TProfileHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h,1,['error'],['errors']
Availability,"//normal case. Recover only if file has no keys",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:15,Recover,Recover,15,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Recover'],['Recover']
Availability,"//number of good points in robust fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:27,robust,robust,27,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['robust'],['robust']
Availability,"//object echo request from client",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:9,echo,echo,9,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['echo'],['echo']
Availability,"//optimx is available and loaded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:12,avail,available,12,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['avail'],['available']
Availability,"//optimx is not available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:16,avail,available,16,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['avail'],['available']
Availability,"//ping worker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,ping,ping,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['ping'],['ping']
Availability,"//place holder for when no link available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:32,avail,available,32,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['avail'],['available']
Availability,"//protection in case of wrong pad parameters.; //without this protection, the OpenPixmap or ResizePixmap crashes with; //the message ""Error in <RootX11ErrorHandler>: BadValue (integer parameter out of range for operation)""; //resulting in a frozen xterm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:134,Error,Error,134,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['Error'],['Error']
Availability,"//r.Error(""Error: Gamma() requires a GSL Engine type"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RandomFunctions.h:4,Error,Error,4,math/mathcore/inc/Math/RandomFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RandomFunctions.h,2,['Error'],['Error']
Availability,"//reset only Integral, contents and Errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:36,Error,Errors,36,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Error'],['Errors']
Availability,"//reset only Integral, contents and Errors; // need to consider also underflow/overflow in the non-extending axes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h:36,Error,Errors,36,hist/hist/src/TProfileHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h,1,['Error'],['Errors']
Availability,"//returns robust correlation matrix estimate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:10,robust,robust,10,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,1,['robust'],['robust']
Availability,"//returns robust covariance matrix estimate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:10,robust,robust,10,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,1,['robust'],['robust']
Availability,"//returns robust distances of all observations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:10,robust,robust,10,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,2,['robust'],['robust']
Availability,"//returns robust mean vector estimate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:10,robust,robust,10,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,2,['robust'],['robust']
Availability,"//returns the number of points outside the tolerance ellipsoid.; //ONLY those with robust distances significantly larger than the; //cutoff value, should be considered outliers!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:43,toler,tolerance,43,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,2,"['robust', 'toler']","['robust', 'tolerance']"
Availability,"//robust fitting functions:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:2,robust,robust,2,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['robust'],['robust']
Availability,"//rootcint generates error here but I decided to implement that pattern",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:21,error,error,21,core/dictgen/src/LinkdefReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx,1,['error'],['error']
Availability,"//roundoff error of x = a * b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:11,error,error,11,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//roundoff error of x = a * b via dekkers product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:11,error,error,11,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//roundoff error of x = a + b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:11,error,error,11,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//roundoff error of x = a + b if |a| > |b|",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:11,error,error,11,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//roundoff error of x = a - b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:11,error,error,11,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['error'],['error']
Availability,"//scale down compared to X11",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:8,down,down,8,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['down'],['down']
Availability,"//scatter(base, mask, index, v1, scale);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:16,mask,mask,16,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['mask'],['mask']
Availability,"//scroll down = move right, as in Firefox",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTab.cxx:9,down,down,9,gui/gui/src/TGTab.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTab.cxx,1,['down'],['down']
Availability,"//server got fatal error and died",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:19,error,error,19,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['error'],['error']
Availability,"//set covariant and Hessian matrices and error vector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:41,error,error,41,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['error'],['error']
Availability,"//shift mask is on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:8,mask,mask,8,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['mask'],['mask']
Availability,"//something had been written to the file. Trailer is missing, must recover",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:67,recover,recover,67,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['recover'],['recover']
Availability,"//std::cerr << ""Object not found! Please report the error! "" << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:52,error,error,52,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['error'],['error']
Availability,"//std::cerr << ""Warning: #pragma read not yet handled: "" << include.str() << ""\n"";; // if (!fOwner.AddInclude(include)); // {; // Error("""",tok);; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx:130,Error,Error,130,core/dictgen/src/LinkdefReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/LinkdefReader.cxx,1,['Error'],['Error']
Availability,"//std::cout << ""Running Hesse ..."" << std::endl;; // run eventually before a minimization; // ignore its error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:105,error,error,105,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['error'],['error']
Availability,"//std::cout << ""integral error is "" << result << "" num error is "" << numError << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Helper.cxx:25,error,error,25,hist/hist/src/TF1Helper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Helper.cxx,2,['error'],['error']
Availability,"//std::cout << ""integral result is = "" << q2 << "" error is "" << err << std::endl;; // Gauss integral sometimes returns an error of 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:50,error,error,50,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,2,['error'],['error']
Availability,"//storing dimension with biggest error/difference (?)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:33,error,error,33,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['error'],['error']
Availability,"//storing value & error in last",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:18,error,error,18,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['error'],['error']
Availability,"//switch off error messages to have test passing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h:13,error,error,13,test/TFormulaParsingTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h,1,['error'],['error']
Availability,"//the errors if they are known",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:6,error,errors,6,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['error'],['errors']
Availability,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:115,error,error,115,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['error'],['error']
Availability,"//this also changes errors array (if any)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:20,error,errors,20,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"//this case may happen when switching from an emulated class to the real class; //may not be an error. fClass may point to a deleted object; //Error(""Streamer"", ""expecting objects of type %s, finding objects""; // "" of type %s"", fClass->GetName(), cl->GetName());; //return;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:96,error,error,96,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"//this is an error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx:13,error,error,13,core/dictgen/src/XMLReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/XMLReader.cxx,10,['error'],['error']
Availability,"//tolerance of termination criterion (default: 0.001)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:2,toler,tolerance,2,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['toler'],['tolerance']
Availability,"//true - mask is needed.; //We do not have a mask (or image not found); //and we can not call shape combine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:9,mask,mask,9,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,2,['mask'],['mask']
Availability,"//true when performing a robust fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:25,robust,robust,25,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['robust'],['robust']
Availability,"//update error cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx:9,error,error,9,tmva/tmva/src/SVWorkingSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SVWorkingSet.cxx,1,['error'],['error']
Availability,"//use option load=kFALSE to avoid a warning like:; //""Warning in <TClass::TClass>: no dictionary for class TRefCnt is available""; //We can not afford to not have the class if it exist, so we; //use kTRUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:118,avail,available,118,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['avail'],['available']
Availability,"//we read back float (scale errors then)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:28,error,errors,28,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['error'],['errors']
Availability,//{ (Src & Mask) >> N } | { (Src << N) & Mask },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:11,Mask,Mask,11,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,2,['Mask'],['Mask']
Availability,"//{'SAMME', 'SAMME.R'}, optional (default='SAMME.R'); //If 'SAMME.R' then use the SAMME.R real boosting algorithm.; //``base_estimator`` must support calculation of class probabilities.; //If 'SAMME' then use the SAMME discrete boosting algorithm.; //The SAMME.R algorithm typically converges faster than SAMME,; //achieving a lower test error with fewer boosting iterations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:338,error,error,338,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['error'],['error']
Availability,"//}; // else {; // double truePar2[NPar];; // truePar2[0] = 1.-truePar[0];; // truePar2[1] = truePar[3];; // truePar2[2] = truePar[4];; // truePar2[3] = truePar[1];; // truePar2[4] = truePar[2];; // for (int i = 0; i < N; ++i) {; // double d = ( truePar2[i] - fitter.Result().Value(i) )/ (fitter.Result().Error(i) );; // chi2 += d*d;; // }; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/testUnbinGausFit.cxx:305,Error,Error,305,math/minuit2/test/testUnbinGausFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/testUnbinGausFit.cxx,1,['Error'],['Error']
Availability,"/; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:1513,redundant,redundant,1513,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,"['Avail', 'redundant']","['Available', 'redundant']"
Availability,"/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1422,avail,available,1422,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['avail'],['available']
Availability,"0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10900,error,errors,10900,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Dr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26522,error,error,26522,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"17 events (minimal expected; /// frequency equal to one) and the weighted histogram with 500 events (minimal; /// expected frequency equal to 25); /// Begin_Macro; /// ../../../tutorials/math/chi2test.C(17); /// End_Macro; /// Fig 2. An example of comparison of the unweighted histogram with 217 events; /// and the weighted histogram with 500 events:; /// 1. unweighted histogram;; /// 2. weighted histogram;; /// 3. normalized residuals plot;; /// 4. normal Q-Q plot of residuals.; ///; /// The value of the test statistic \f$ \chi^{2} \f$ is equal to; /// 32.33 with p-value equal to 0.029, therefore the hypothesis of identity of; /// the two histograms is rejected for 0.05 significant level. The behavior of; /// the normalized residuals plot (see Fig. 2c) and the normal Q-Q plot (see; /// Fig. 2d) of residuals are not regular and we can identify the outlier or; /// bin with a big influence on \f$ \chi^{2} \f$.; ///; /// #### References:; ///; /// - [1] Pearson, K., 1904. On the Theory of Contingency and Its Relation to; /// Association and Normal Correlation. Drapers' Co. Memoirs, Biometric; /// Series No. 1, London.; /// - [2] Gagunashvili, N., 2006. \f$ \sigma^{2} \f$ test for comparison; /// of weighted and unweighted histograms. Statistical Problems in Particle; /// Physics, Astrophysics and Cosmology, Proceedings of PHYSTAT05,; /// Oxford, UK, 12-15 September 2005, Imperial College Press, London, 43-44.; /// Gagunashvili,N., Comparison of weighted and unweighted histograms,; /// arXiv:physics/0605123, 2006.; /// - [3] Cramer, H., 1946. Mathematical methods of statistics.; /// Princeton University Press, Princeton.; /// - [4] Haberman, S.J., 1973. The analysis of residuals in cross-classified tables.; /// Biometrics 29, 205-220.; /// - [5] Lewontin, R.C. and Felsenstein, J., 1965. The robustness of homogeneity; /// test in 2xN tables. Biometrics 21, 19-33.; /// - [6] Seber, G.A.F., Lee, A.J., 2003, Linear Regression Analysis.; /// John Wiley & Sons Inc., New York.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:14604,robust,robustness,14604,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['robust'],['robustness']
Availability,"2, trap, gtra or para - 1,2,3 means X,Y,Z; for; tube, tubs, cone, cons - 1 means Rxy, 2 means phi and 3 means Z; for pcon and; pgon - 2 means phi and 3 means Z; for spheres 1 means R and 2 means phi.; In fact, the division operation has the same effect as positioning volumes; in a given order inside the divided container - the advantage being that the; navigation in such a structure is much faster. When a volume is divided, a; volume family corresponding to the slices is created. In case all slices can; be represented by a single shape, only one volume is added to the family and; positioned N times inside the divided volume, otherwise, each slice will be; represented by a distinct volume in the family.; Divisions can be also performed in a given range of one axis. For that, one; have to specify also the starting coordinate value and the step:. ~~~ {.cpp}; TGeoVolume *slicex = box->Divide(""SLICEX"", 1, N, start, step);; ~~~. A check is always done on the resulting division range : if not fitting into; the container limits, an error message is posted. If we will browse the divided; volume we will notice that it will contain N nodes starting with index 1 upto; N. The first one has the lower X limit at START position, while the last one; will have the upper X limit at START+N*STEP. The resulting slices cannot; be positioned inside an other volume (they are by default positioned inside the; divided one) but can be further divided and may contain other volumes:. ~~~ {.cpp}; TGeoVolume *slicey = slicex->Divide(""SLICEY"", 2, N1);; slicey->AddNode(other_vol, index, some_matrix);; ~~~. When doing that, we have to remember that SLICEY represents a family, therefore; all members of the family will be divided on Y and the other volume will be; added as node inside all.; In the example above all the resulting slices had the same shape as the; divided volume (box). This is not always the case. For instance, dividing a; volume with TUBE shape on PHI axis will create equal slices havi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:15117,error,error,15117,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['error'],['error']
Availability,"4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13180,error,error,13180,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"56_shuffle_ps(__m256 a, __m256 b, const int mask);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VSHUFPS </c> instruction.; ///; /// \param a; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [63:0] and bits [191:128] in the destination,; /// according to the bits specified in the immediate operand.; /// \param b; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [127:64] and bits [255:192] in the; /// destination, according to the bits specified in the immediate operand.; /// \param mask; /// An immediate value containing an 8-bit value specifying which elements to; /// copy from \a a and \a b \n.; /// Bits [3:0] specify the values copied from operand \a a. \n; /// Bits [7:4] specify the values copied from operand \a b. \n; /// The destinations within the 256-bit destination are assigned values as; /// follows, according to the bit value assignments described below: \n; /// Bits [1:0] are used to assign values to bits [31:0] and [159:128] in the; /// destination. \n; /// Bits [3:2] are used to assign values to bits [63:32] and [191:160] in the; /// destination. \n; /// Bits [5:4] are used to assign values to bits [95:64] and [223:192] in the; /// destination. \n; /// Bits [7:6] are used to assign values to bits [127:96] and [255:224] in; /// the destination. \n; /// Bit value assignments: \n; /// 00: Bits [31:0] and [159:128] are copied from the selected operand. \n; /// 01: Bits [63:32] and [191:160] are copied from the selected operand. \n; /// 10: Bits [95:64] and [223:192] are copied from the selected operand. \n; /// 11: Bits [127:96] and [255:224] are copied from the selected operand. \n; /// Note: To generate a mask, you can use the \c _MM_SHUFFLE macro.; /// <c>_MM_SHUFFLE(b6, b4, b2, b0)</c> can create an 8-bit mask of the form; /// <c>[b6, b4, b2, b0]</c>.; /// \returns A 256-bit vector of [8 x float] containing the shuffled values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:2592,mask,mask,2592,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,2,['mask'],['mask']
Availability,"6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13321,error,error,13321,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11103,error,errors,11103,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,3,['error'],['errors']
Availability,": Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass searches for instructions that are prevented from being compressed; // by one of the following:; //; // 1. The use of a single uncompressed register.; // 2. A base register + offset where the offset is too large to be compressed; // and the base register may or may not be compressed.; //; //; // For case 1, if a compressed register is available, then the uncompressed; // register is copied to the compressed register and its uses are replaced.; //; // For example, storing zero uses the uncompressible zero register:; // sw zero, 0(a0) # if zero; // sw zero, 8(a0) # if zero; // sw zero, 4(a0) # if zero; // sw zero, 24(a0) # if zero; //; // If a compressed register (e.g. a1) is available, the above can be transformed; // to the following to improve code size:; // li a1, 0; // c.sw a1, 0(a0); // c.sw a1, 8(a0); // c.sw a1, 4(a0); // c.sw a1, 24(a0); //; //; // For case 2, if a compressed register is available, then the original base; // is copied and adjusted such that:; //; // new_base_register = base_register + adjustment; // base_register + large_offset = new_base_register + small_offset; //; // For example, the following offsets are too large for c.sw:; // lui a2, 983065; // sw a1, -236(a2); // sw a1, -240(a2); // sw a1, -244(a2); // sw a1, -248(a2); // sw a1, -252(a2); // sw a0, -256(a2); //; // If a compressed register is available (e.g. a3), a new base could be created; // such that the addresses can accessed with a compressible offset, thus; // improving code size:; // lui a2, 983065; // addi a3, a2, -256; // c.sw a1, 20(a3); // c.sw a1, 16(a3); // c.sw a1, 12(a3); // c.sw a1, 8(a3); // c.sw a1, 4(a3); // c.sw a0, 0(a3); //; //; // This optimization is only applied if there are enough uses of the copied; // register for code size to be reduced.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp:1301,avail,available,1301,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,2,['avail'],['available']
Availability,": the presence of systematic variations for certain columns is automatically propagated; through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied; results. \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" is included in header `ROOT/RDFHelpers.hxx`. The compiled C++ programs must include this header; explicitly, this is not required for ROOT macros. . An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:. ~~~{.cpp}; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");. // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; ~~~. A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; ""pt:down"", ""pt:up"" in this example). Python usage looks similar. Note how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; calls for each variation and fill the histogram with values and cuts that depend on the variation. There is no limitation to the complexity of a Var",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:56353,down,down,56353,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"://spark.apache.org/) and; [Dask](https://dask.org/). To make use of distributed RDataFrame, you only need to switch `ROOT.RDataFrame` with; the backend-specific `RDataFrame` of your choice, for example:. ~~~{.py}; import ROOT. # Point RDataFrame calls to the Spark specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. # It still accepts the same constructor arguments as traditional RDataFrame; df = RDataFrame(""mytree"", ""myfile.root""). # Continue the application with the traditional RDataFrame API; sum = df.Filter(""x > 10"").Sum(""y""); h = df.Histo1D((""name"", ""title"", 10, 0, 10), ""x""). print(sum.GetValue()); h.Draw(); ~~~. The main goal of this package is to support running any RDataFrame application distributedly. Nonetheless, not all; parts of the RDataFrame API currently work with this package. The subset that is currently available is:; - AsNumpy; - Count; - Define; - DefinePerSample; - Filter; - Graph; - Histo[1,2,3]D; - HistoND; - Max; - Mean; - Min; - Profile[1,2,3]D; - Redefine; - Snapshot; - Stats; - StdDev; - Sum; - Systematic variations: Vary and [VariationsFor](\ref ROOT::RDF::Experimental::VariationsFor).; - Parallel submission of distributed graphs: [RunGraphs](\ref ROOT::RDF::RunGraphs).; - Information about the dataframe: GetColumnNames. with support for more operations coming in the future. Data sources other than TTree and TChain (e.g. CSV, RNTuple) are; currently not supported. \note The distributed RDataFrame module requires at least Python version 3.8. ### Connecting to a Spark cluster. In order to distribute the RDataFrame workload, you can connect to a Spark cluster you have access to through the; official [Spark API](https://spark.apache.org/docs/latest/rdd-programming-guide.html#initializing-spark), then hook the; connection instance to the distributed `RDataFrame` object like so:. ~~~{.py}; import pyspark; import ROOT. # Create a SparkContext object with the right configuration for your Spark cluster; conf = Spar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:37375,avail,available,37375,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the corresponding documentation.; /// The default minimizer can be also set in the resource file in etc/system.rootrc. For example; ///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (the bin error) returned by `TH1::GetBinError`; ///; /// \f[; /// Chi2 = \sum_{i}{ \left(\frac{y(i) - f(x(i) | p )}{e(i)} \right)^2 }; /// \f]; ///; /// where `y(i)` is the bin content for each bin `i`, `x(i)` is the bin center and `e(i)` is the bin error (`sqrt(y(i)` for; /// an un-weighted histogram). Bins with zero errors are excluded from the fit. See also later the note on the treatment; /// of empty bins. When using option ""I"" the residual is computed not using the function value at the bin center, `f(x(i)|p)`,; /// but the integral of the function in the bin, Integral{ f(x|p)dx }, divided by the bin volume.; /// When using option `P` (Pearson chi2), the expected error computed as `e(i) = sqrt(f(x(i)|p))` is used.; /// In this case empty bins are considered in the fit.; /// Both chi-square methods should not be used when the bin content represent counts, especially in case of low bin statistics,; /// because they could return a biased result.; ///; /// \anchor HFitNLL; /// ### Likelihood Fits; ///; /// When using option ""L"" a likelihood fit is used instead of the default chi-square fit.; /// The likelihood is built assuming a Poisson probability density function for each bin.; /// The negative log-likelihood to be minimized is; ///; /// \f[; /// NLL = - \sum_{i}{ \log {\mathrm P} ( y(i) | f(x(i) | p ) ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:6956,error,errors,6956,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,":; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///; ///; /// #### Warning when using the option ""0""; ///; /// When selecting the option ""0"", the fitted function is added to; /// the list of functions of the histogram, but it is not drawn when the histogram is drawn.; /// You can undo this behaviour resetting its corresponding bit in the TF1 object as following:; ///; /// ~~~ {.cpp}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18503,error,errors,18503,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"; * *; **********************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class TSVDUnfold; \ingroup Hist; SVD Approach to Data Unfolding; <p>; Reference: <a href=""http://arXiv.org/abs/hep-ph/9509307"">Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]</a>; <p>; TSVDUnfold implements the singular value decomposition based unfolding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum.; <p>; The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition.; <p>; Monte Carlo inputs:; <ul>; <li><tt>xini</tt>: true underlying spectrum (TH1D, n bins); <li><tt>bini</tt>: reconstructed spectrum (TH1D, n bins); <li><tt>Adet</tt>: response matrix (TH2D, nxn bins); </ul>; Consider the unfolding of a measured spectrum <tt>bdat</tt> with covariance matrix <tt>Bcov</tt> (if not passed explicitly, a diagonal covariance will be built given the errors of <tt>bdat</tt>). The corresponding spectrum in the Monte Carlo is given by <tt>bini</tt>, with the true underlying spectrum given by <tt>xini</tt>. The detector response is described by <tt>Adet</tt>, with <tt>Adet</tt> filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis.; <p>; The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of <tt>xini</tt> and <tt>Adet</tt>.<br><br>; <p>; The unfolding can be performed by; \code{.cpp}; TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );; \endcode; where <tt>kreg</tt> determines the regularisation of the unfolding. In general, overregular",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:1966,error,errors,1966,hist/hist/src/TSVDUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx,1,['error'],['errors']
Availability,"; * ASScale; *********/; /****f* libAfterImage/transform/tile_asimage(); * NAME; * tile_asimage() - tiles/crops ASImage to desired size, while optionaly ; * tinting it at the same time.; * SYNOPSIS; * ASImage *tile_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x,; * int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 tint,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * tint - ARGB32 value describing tinting color.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * Offset_x and offset_y define origin on source image from which; * tiling will start. If offset_x or offset_y is outside of the image; * boundaries, then it will be reduced by whole number of image sizes to; * fit inside the image. At the time of tiling image will be tinted; * unless tint == 0.; * EXAMPLE; * ASTile; *********/; /****f* libAfterImage/transform/merge_layers(); * NAME; * merge_layers(); * SYNOPSIS; * ASImage *merge_layers ( struct ASVisual *asv,; * ASImageLayer *layers, int count,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:3539,failure,failure,3539,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a single go (one; * flush). Then, the server has everything it needs, and hopefully, it'll; * shut up for a while and to let the client do something useful in the; * meantime... The same goes when the server replies to the request: include; * everything there is to know about the result of the request in the reply.; * - The expensive operation should be the request that is made, all other; * operations should somehow be formulated as options or properties to that; * request.; * - Include a shutdown handshake in whatever protocol you send over the; * pipe. That way, you can shut things down in a controlled way. Otherwise,; * and depending on your OS's scheduling quirks, you may catch a SIGPIPE if; * one end closes its pipe while the other is still trying to read.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:7960,down,down,7960,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['down'],['down']
Availability,"; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://www.ietf.org/rfc/rfc1951.txt; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:1499,redundant,redundant,1499,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,2,"['Avail', 'redundant']","['Available', 'redundant']"
Availability,"; // (underflow and overflow bins, used for efficiency corrections); //; // define: Norm_j = sum_k B_kj (data member fSumOverY); //; // the derivative of A wrt this input matrix B is given by:; //; // dA_ij / dB_kj = ( delta_ik - A_ij ) * 1/Norm_j; //; // The covariance matrix Vxx is:; //; // Vxx_mn = sum_ijlk [ (dX_m / dA_ij) * (dA_ij / dB_kj) * DB_kj; // * (dX_n / dA_lj) * (dA_lj / dB_kj) ]; //; // where DB_kj is the error on B_kj squared; // Simplify the sum over k:; //; // sum_k [ (dA_ij / dB_kj) * DB_kj * (dA_lj / dB_kj) ]; // = sum_k [ ( delta_ik - A_ij ) * 1/Norm_j * DB_kj *; // * ( delta_lk - A_lj ) * 1/Norm_j ]; // = sum_k [ ( delta_ik*delta_lk - delta_ik*A_lj - delta_lk*A_ij; // + A_ij * A_lj ) * DB_kj / Norm_j^2 ]; //; // introduce normalized errors: Rsq_kj = DB_kj / Norm_j^2; // after summing over k:; // delta_ik*delta_lk*Rsq_kj -> delta_il*Rsq_ij; // delta_ik*A_lj*Rsq_kj -> A_lj*Rsq_ij; // delta_lk*A_ij*Rsq_kj -> A_ij*Rsq_lj; // A_ij*A_lj*Rsq_kj -> A_ij*A_lj*sum_k(Rsq_kj); //; // introduce sum of normalized errors squared: SRsq_j = sum_k(Rsq_kj); //; // Note: Rsq_ij is stored as fDAinRelSq (excludes extra indices of B); // and SRsq_j is stored as fDAinColRelSq (sum includes all indices of B); //; // Vxx_nm = sum_ijl [ (dX_m / dA_ij) * (dX_n / dA_lj); // (delta_il*Rsq_ij - A_lj*Rsq_ij - A_ij*Rsq_lj + A_ij*A_lj *SRsq_j) ]; //; // Vxx_nm = sum_j [ F_mj * F_nj * SRsq_j; // - su",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:1015,error,error,1015,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],"['error', 'errors']"
Availability,"; /// Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; ///; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per curve. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; ///; /// <tr><td> `EvalErrorValue(double value)` <td> Set curve points at which (pdf) evaluation errors occur to specified value. By default the; /// function value is plotted.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category [F(+)-F(-)] / [F(+)+F(-)] rather than; /// the PDF projection. Category must have two states with indices -1 and +1 or three states with; /// indices -1,0 and +1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3519,error,error,3519,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///; ///; /// #### Warning when using the option ""0""; ///; /// When selecting the option ""0"", the fitted function is added to; /// the list of functions of the histogram, but it is not drawn when the histogram is dr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18474,error,errors,18474,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128i _mm_cmpistrm(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRM / PCMPISTRM </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the result is zero-extended or expanded to 16; /// bytes. \n; /// 0: The result is zero-extended to 16 bytes. \n; /// 1: The result is expanded to 16 bytes (this expansion is performed by; /// repeating each bit 8 or 16 times).; /// \returns Returns a 128-bit integer vector representing the result mask of; /// the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1716,mask,mask,1716,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability,"; ///; /// <table>; ///; /// <tr><th> <th> Data representation options; /// <tr><td> RooFit::Asymmetry(const RooCategory& c); /// <td> Show the asymmetry of the data in given two-state category [F(+)-F(-)] / [F(+)+F(-)].; /// Category must have two states with indices -1 and +1 or three states with indices -1,0 and +1.; /// <tr><td> RooFit::Efficiency(const RooCategory& c); /// <td> Show the efficiency F(acc)/[F(acc)+F(rej)]. Category must have two states with indices 0 and 1; /// <tr><td> RooFit::DataError(Int_t); /// <td> Select the type of error drawn:; /// - `Auto(default)` results in Poisson for unweighted data and SumW2 for weighted data; /// - `Poisson` draws asymmetric Poisson confidence intervals.; /// - `SumW2` draws symmetric sum-of-weights error ( \f$ \left( \sum w \right)^2 / \sum\left(w^2\right) \f$ ); /// - `None` draws no error bars; /// <tr><td> RooFit::Binning(int nbins, double xlo, double xhi); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const RooAbsBinning&); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const char* name); /// <td> Use binning with specified name to draw dataset; /// <tr><td> RooFit::RefreshNorm(); /// <td> Force refreshing for PDF normalization information in frame.; /// If set, any subsequent PDF will normalize to this dataset, even if it is; /// not the first one added to the frame. By default only the 1st dataset; /// added to a frame will update the normalization information; /// <tr><td> RooFit::Rescale(double f); /// <td> Rescale drawn histogram by given factor.; /// <tr><td> RooFit::Cut(const char*); /// <td> Only plot entries that pass the given cut.; /// Apart from cutting in continuous variables `Cut(""x>5"")`, this can also be used to plot a specific; /// category state. Use something like `Cut(""myCategory == myCategory::stateA"")`, where; /// `myCategory` resolves to the state number for a given entry and; /// `myCategory::stateA` resolves to the state numbe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:1239,error,error,1239,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['error'],['error']
Availability,"; ///; /// Whole quad mode is required for derivative computations, but it interferes; /// with shader side effects (stores and atomics). It ensures that WQM is; /// enabled when necessary, but disabled around stores and atomics.; ///; /// When necessary, this pass creates a function prolog; ///; /// S_MOV_B64 LiveMask, EXEC; /// S_WQM_B64 EXEC, EXEC; ///; /// to enter WQM at the top of the function and surrounds blocks of Exact; /// instructions by; ///; /// S_AND_SAVEEXEC_B64 Tmp, LiveMask; /// ...; /// S_MOV_B64 EXEC, Tmp; ///; /// We also compute when a sequence of instructions requires strict whole; /// wavefront mode (StrictWWM) and insert instructions to save and restore it:; ///; /// S_OR_SAVEEXEC_B64 Tmp, -1; /// ...; /// S_MOV_B64 EXEC, Tmp; ///; /// When a sequence of instructions requires strict whole quad mode (StrictWQM); /// we use a similar save and restore mechanism and force whole quad mode for; /// those instructions:; ///; /// S_MOV_B64 Tmp, EXEC; /// S_WQM_B64 EXEC, EXEC; /// ...; /// S_MOV_B64 EXEC, Tmp; ///; /// In order to avoid excessive switching during sequences of Exact; /// instructions, the pass first analyzes which instructions must be run in WQM; /// (aka which instructions produce values that lead to derivative; /// computations).; ///; /// Basic blocks are always exited in WQM as long as some successor needs WQM.; ///; /// There is room for improvement given better control flow analysis:; ///; /// (1) at the top level (outside of control flow statements, and as long as; /// kill hasn't been used), one SGPR can be saved by recovering WQM from; /// the LiveMask (this is implemented for the entry block).; ///; /// (2) when entire regions (e.g. if-else blocks or entire loops) only; /// consist of exact and don't-care instructions, the switch only has to; /// be done at the entry and exit points rather than potentially in each; /// block of the region.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp:2429,recover,recovering,2429,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIWholeQuadMode.cpp,1,['recover'],['recovering']
Availability,"; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7498,Error,Errors,7498,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['Error'],['Errors']
Availability,"; much output data as possible before returning. The state machine is; structured roughly as follows:. for (;;) switch (state) {; ...; case STATEn:; if (not enough input data or output space to make progress); return;; ... make progress ...; state = STATEm;; break;; ...; }. so when inflate() is called again, the same case is attempted again, and; if the appropriate resources are provided, the machine proceeds to the; next state. The NEEDBITS() macro is usually the way the state evaluates; whether it can proceed or should return. NEEDBITS() does the return if; the requested bits are not available. The typical use of the BITS macros; is:. NEEDBITS(n);; ... do something with BITS(n) ...; DROPBITS(n);. where NEEDBITS(n) either returns from inflate() if there isn't enough; input left to load n bits into the accumulator, or it continues. BITS(n); gives the low n bits in the accumulator. When done, DROPBITS(n) drops; the low n bits off the accumulator. INITBITS() clears the accumulator; and sets the number of available bits to zero. BYTEBITS() discards just; enough bits to put the accumulator on a byte boundary. After BYTEBITS(); and a NEEDBITS(8), then BITS(8) would return the next byte in the stream. NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return; if there is no input available. The decoding of variable length codes uses; PULLBYTE() directly in order to pull just enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is also the next case, then the break; is omitted. A state may also return if there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1098,avail,available,1098,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['avail'],['available']
Availability,"; }; function highlight(event) {; var id = event.target['id']; doHighlight(id); }; function doHighlight(id) {; clearHighlight(); source = document.getElementById(id); if (!source.attributes['tid']); return; var mapped = source; while (mapped && mapped.parentElement && mapped.attributes['tid'].value.substr(1) === '-1'); mapped = mapped.parentElement; var tid = null, target = null; if (mapped) {; tid = mapped.attributes['tid'].value; target = document.getElementById(tid); }; if (source.parentElement && source.parentElement.classList.contains('code')); return; source.style.backgroundColor = 'lightgrey'; source.scrollIntoView(); if (target) {; if (mapped === source); target.style.backgroundColor = 'lightgrey'; target.scrollIntoView(); }; highlightStack.push([id, tid]); location.hash = '#' + id; }; function scrollToBoth() {; doHighlight(location.hash.substr(1)); }; function changed(elem) {; return elem.classList.length == 0; }; function nextChangedNode(prefix, increment, number) {; do {; number += increment; var elem = document.getElementById(prefix + number); } while(elem && !changed(elem)); return elem ? number : null; }; function handleKey(e) {; var down = e.code === ""KeyJ""; var up = e.code === ""KeyK""; if (!down && !up); return; var id = highlightStack[0] ? highlightStack[0][0] : 'R0'; var oldelem = document.getElementById(id); var number = parseInt(id.substr(1)); var increment = down ? 1 : -1; var lastnumber = number; var prefix = id[0]; do {; number = nextChangedNode(prefix, increment, number); var elem = document.getElementById(prefix + number); if (up && elem) {; while (elem.parentElement && changed(elem.parentElement)); elem = elem.parentElement; number = elem.id.substr(1); }; } while ((down && id !== 'R0' && oldelem.contains(elem))); if (!number); number = lastnumber; elem = document.getElementById(prefix + number); doHighlight(prefix + number); }; window.onload = scrollToBoth; window.onkeydown = handleKey; </script>; <body>; <div onclick='highlight(event)'>; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp:1839,down,down,1839,interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,4,['down'],['down']
Availability,"; ~~~; displays the name of histogram, mean value and RMS. <b>WARNING 1:</b> never do:; ~~~ {.cpp}; gStyle->SetOptStat(0001111);; ~~~; but instead do:; ~~~ {.cpp}; gStyle->SetOptStat(1111);; ~~~; because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions; ~~~ {.cpp}; gStyle->SetOptStat(1);; ~~~; is taken as:; ~~~ {.cpp}; gStyle->SetOptStat(1111); ~~~; To print only the name of the histogram do:; ~~~ {.cpp}; gStyle->SetOptStat(1000000001);; ~~~. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiourRmMen`; ~~~ {.cpp}; k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed; ~~~. For example, to print only name of histogram and number of entries do:; ~~~ {.cpp}; gStyle->SetOptStat(""ne"");; ~~~. To print only the name of the histogram do:; ~~~ {.cpp}; gStyle->SetOptStat(""n"");; ~~~. The default value is:; ~~~ {.cpp}; gStyle->SetOptStat(""nemr"");; ~~~. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:; ~~~ {.cpp}; Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); ~~~. because after `h-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx:1995,error,error,1995,graf2d/graf/src/TPaveStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx,4,['error'],['error']
Availability,"<< """" << BidirMMapPipe::flush;; * // wait for parent to acknowledge; * std::string s;; * pipe >> s;; * pipe.close();; * return 0;; * }; *; * // function to spawn a child; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * typedef BidirMMapPipe::PollEntry PollEntry;; * // poll data structure; * BidirMMapPipe::PollVector pipes;; * pipes.reserve(3);; * // spawn children; * for (int i = 0; i < 3; ++i) {; * pipes.push_back(PollEntry(spawnChild(randomchild),; * BidirMMapPipe::Readable));; * }; * // while at least some children alive; * while (!pipes.empty()) {; * // poll, wait until status change (infinite timeout); * int npipes = BidirMMapPipe::poll(pipes, -1);; * // scan for pipes with changed status; * for (std::vector<PollEntry>::iterator it = pipes.begin();; * npipes && pipes.end() != it; ) {; * if (!it->revents) {; * // unchanged, next one; * ++it;; * continue;; * }; * --npipes; // maybe we can stop early...; * // read from pipes which are readable; * if (it->revents & BidirMMapPipe::Readable) {; * std::string s;; * *(it->pipe) >> s;; * if (!s.empty()) {; * std::cout << ""[PARENT]: Read from pipe "" <<; * it->pipe << "": "" << s << std::endl;; * ++it;; * continue;; * } else {; * // child is shutting down...; * *(it->pipe) << """" << BidirMMapPipe::flush;; * goto childcloses;; * }; * }; * // retire pipes with error or end-of-file condition; * if (it->revents & (BidirMMapPipe::Error |; * BidirMMapPipe::EndOfFile |; * BidirMMapPipe::Invalid)) {; * std::cout << ""[PARENT]: Error on pipe "" <<; * it->pipe << "" revents "" << it->revents <<; * std::endl;; * childcloses:; * std::cout << ""[PARENT]:\tchild exit status: "" <<; * it->pipe->close() << std::endl;; * if (retVal) return retVal;; * delete it->pipe;; * it = pipes.erase(it);; * continue;; * }; * }; * }; * return 0;; * }; * @endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:3766,down,down,3766,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,4,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"=~\sqrt{\sum_{e \subset {\delta x}} ({_s{\cal P}}_{\rm n})^2} ~. \tag{6}; \f]. reproduces the statistical uncertainty on the yield \f$N_{\rm n}\f$, as provided by the fit:; \f$\sigma[N_{\rm n}]\equiv\sqrt{\hbox{ V}_{{\rm n}{\rm n}}}\f$ .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the \f$\hbox{$_s$}{\cal P}lot\f$; technique is itself an optimal method to reconstruct distributions of control variables. ### Different steps followed by TSPlot. 1. A maximum Likelihood fit is performed to obtain the yields \f$N_i\f$; of the various species.The fit relies on discriminating variables \f$y\f$; uncorrelated with a control variable \f$x\f$:; the later is therefore totally absent from the fit. 2. The weights \f${_s{\cal P}}\f$ are calculated using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:6098,Error,Error,6098,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['Error'],['Error']
Availability,"> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th> <th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; /// </table>; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3364,error,errors,3364,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,['error'],"['error', 'errors']"
Availability,"ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; *********/; /****f* libAfterImage/transform/blur_asimage_gauss(); * NAME; * blur_asimage_gauss() Performs Gaussian blurr of the image ; * ( usefull for drop shadows and the likes ).; * SYNOPSIS; * ASImage* blur_asimage_gauss( ASVisual* asv, ASImage* src,; * double horz, double vert,; * ASAltImFormats out_format,; * unsigned int compression_out, ; * 								int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * horz - horizontal radius of the blurr; * vert - vertical radius of the blurr; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; *********/; /****f* libAfterImage/transform/fill_asimage(); * NAME; * fill_asimage() - Fills rectangle within the existing ASImage with ; * specified color.; * SYNOPSIS; * Bool fill_asimage( ASVisual *asv, ASImage *im,; * int x, int y, int width, int height,; * ARGB32 color );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - ASImage to fill with the color; * x, y - left-top corner of the rectangle to fill.; * width, height - size of the rectangle to fill.; * color - ARGB32 color value to fill rectangle with.; * RETURN VALUE; * True on success, False on failure.; *********/; /****f* libAfterImage/transform/adjust_asimage_hsv(); * NAME; * adjust_asimage_hsv() - adjusts image color properties in HSV colorspace; * SYNOPSIS; * ASImage *adjust_asimage_hsv( ASVisual *asv, ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * unsigned int affected_hue,; * unsigned int affec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:10946,failure,failure,10946,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"Automatic Differentiation when it is supported by the provided TF1 function.; /// ""EX0"" | When fitting a TGraphErrors or TGraphAsymErrors do not consider errors in the X coordinates; /// ""ROB"" | In case of linear fitting, compute the LTS regression coefficients (robust (resistant) regression), using the default fraction of good points ""ROB=0.x"" - compute the LTS regression coefficients, using 0.x as a fraction of good points; ///; ///; /// This function is used for fitting also the derived TGraph classes such as TGraphErrors or TGraphAsymmErrors.; /// See the note below on how the errors are used when fitting a TGraphErrors or TGraphAsymmErrors.; ///; /// The fitting of the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is then computed as the sum of the quantity below at each data point:; ///; /// \f[; /// \frac{(y-f(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f'(x))^{2}}; /// \f]; ///; /// where `x` and `y` are the point coordinates, and `f'(x)` is the derivative of the; /// function `f(x)`.; ///; /// In case of asymmetric errors, if the function lies below (above) the data point, `ey` is `ey_low` (`ey_high`).; ///; /// The approach used to approximate the uncertainty in y because of the; /// errors in x is to make it equal the error in x times the slope of the line.; /// This approach is called ""effective variance method"" and; /// the implementation is provided in the function FitUtil::EvaluateChi2Effective; ///; /// \anchor GFitLinear; /// ### Linear fitting:; /// When the fitting function is linear (con",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:3430,error,errors,3430,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,3,['error'],"['error', 'errors']"
Availability,"Class; /// object does not exist.; ///; /// The code generated includes:; /// - <em>dirnameProjectHeaders.h</em>, which contains one `#include` statement per generated header file; /// - <em>dirnameProjectSource.cxx</em>,which contains all the constructors and destructors implementation.; /// and one header per class that is not nested inside another class.; /// The header file name is the fully qualified name of the class after all the special characters; /// ""<>,:"" are replaced by underscored. For example for std::pair<edm::Vertex,int> the file name is; /// pair_edm__Vertex_int_.h; ///; /// In the generated classes, map, multimap when the first template parameter is a class; /// are replaced by a vector of pair. set and multiset when the tempalte parameter; /// is a class are replaced by a vector. This is required since we do not have the; /// code needed to order and/or compare the object of the classes.; /// This is a quick explanation of the options available:; /// Option | Details; /// -------|--------; /// new (default) | A new directory dirname is created. If dirname already exist, an error message is printed and the function returns.; /// recreate | If dirname does not exist, it is created (like in ""new""). If dirname already exist, all existing files in dirname are deleted before creating the new files.; /// update | New classes are added to the existing directory. Existing classes with the same name are replaced by the new definition. If the directory dirname doest not exist, same effect as ""new"".; /// genreflex | Use genreflex rather than rootcint to generate the dictionary.; /// par | Create a PAR file with the minimal set of code needed to read the content of the ROOT file. The name of the PAR file is basename(dirname), with extension '.par' enforced; the PAR file will be created at dirname(dirname).; ///; /// If, in addition to one of the 3 above options, the option ""+"" is specified,; /// the function will generate:; /// - a script called MAKEP to buil",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1393,avail,available,1393,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['avail'],['available']
Availability,"CreateHistogramOfMigrations(). Bug fix with NaN in GetGlobalBinNumber(); // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, bug fix with error handling; // Version 17.3, bug fix with underflow/overflow bins; // Version 17.2, with XML support, bug fix with bin map creation,; // isPeriodic option for neighbour bins; // Version 17.1, in parallel to changes in TUnfold; // Version 17.0, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinning; Binning schemes for use with the unfolding algorithm TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Functionality</h3>. The TUnfoldBinning objects are connected by a tree-like structure.; The structure does not hold any data, but is only responsible for; arranging the analysis bins in the proper order.; Each node of the tree is responsible for a group of bins. That group; may consist of; <ul>; <li> several unconnected bins, each with a dedicated name.</li>; <li> bins organized in a multidimensional distribution, defined by a; set of axes. The axes are defined by a number of bins N and by (N+1); bin borders. In addition to the N bins inside there may be an underflow and an; overflow bin</li>; </ul>; Each bin has a ""global"" bin number, which can be found using the; GetGlobalBinNumber() methods. The global bin number 0 is reserved and; corresponds to the case where no bin is found in the; TUnfoldBinning tree. <h3>Use in the analysis</h3>; Booking histograms:; <ul>; <li>Define binning schemes on detector level and on truth l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:1313,avail,available,1313,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['avail'],['available']
Availability,"Currently supported options are ""F"" (fill), ""L"" (line), and ""P"" (points).; /// \note Option ""P"" will cause RooFit to plot (and treat) this pdf as if it were data! This is intended for plotting ""corrected data""-type pdfs such as ""data-minus-background"" or unfolded datasets.; ///; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; ///; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; ///; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; ///; /// <tr><td> `MarkerStyle(Int_t style)` <td> Select the ROOT marker style, default is 21; ///; /// <tr><td> `MarkerColor(Int_t color)` <td> Select the ROOT marker color, default is black; ///; /// <tr><td> `MarkerSize(double size)` <td> Select the ROOT marker size; ///; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected, also use VLines(); /// to add vertical downward lines at end of curve to ensure proper closure. Add `DrawOption(""F"")` for filled drawing.; /// <tr><td> `FillColor(Int_t color)` <td> Select fill color by ROOT color code; ///; /// <tr><td> `Range(const char* name)` <td> Only draw curve in range defined by given name; ///; /// <tr><td> `Range(double lo, double hi)` <td> Only draw curve in specified range; ///; /// <tr><td> `VLines()` <td> Add vertical lines to y=0 at end points of curve; ///; /// <tr><td> `Precision(double eps)` <td> Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. Higher precision; /// will result in more and more densely spaced curve points; ///; /// <tr><td> `Invisible(bool flag)` <td> Add curve to frame, but do not display. Useful in combination AddTo(); ///; /// <tr><td> `VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true)`; /// <td> Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma'. The linear method is fast but may n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:6324,down,downward,6324,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['down'],['downward']
Availability,"D histogram, otherwise; /// the number of entries is incremented by 1 for all non empty cells.; ///; /// if option ""d"" is specified, the profile is drawn in the current pad.; ///; /// if option ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; ///; /// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; /// One must create a graphical cut (mouse or C++) and specify the name; /// of the cut between [] in the option.; /// For example, with a TCutG named ""cutg"", one can call:; /// myhist->ProfileX("" "",firstybin,lastybin,""[cutg]"");; /// To invert the cut, it is enough to put a ""-"" in front of its name:; /// myhist->ProfileX("" "",firstybin,lastybin,""[-cutg]"");; /// It is possible to apply several cuts ("","" means logical AND):; /// myhist->ProfileX("" "",firstybin,lastybin,""[cutg1,cutg2]"");; ///; /// NOTE that if a TProfile named ""name"" exists in the current directory or pad with; /// a compatible axis the profile is reset and filled again with the projected contents of the TH2.; /// In the case of axis incompatibility an error is reported and a NULL pointer is returned.; ///; /// NOTE that the X axis attributes of the TH2 are copied to the X axis of the profile.; ///; /// NOTE that the default under- / overflow behavior differs from what ProjectionX; /// does! Profiles take the bin center into account, so here the under- and overflow; /// bins are ignored by default.; ///; /// NOTE that the return profile histogram is computed using the Y bin center values instead of; /// the real Y values which are used to fill the 2d histogram. Therefore the obtained profile is just an approximation of the; /// correct profile histogram that would be obtained when filling it directly with the original data (see ROOT-7770)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1724,error,error,1724,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['error'],['error']
Availability,"E; * start_image_output() - initializes output structure; * SYNOPSIS; * ASImageOutput *start_image_output ( struct ASVisual *asv,; * ASImage *im,; * ASAltImFormats format,; * int shift, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * im - destination ASImage; * format - indicates that output should be written into alternative; * format, such as supplied XImage, ARGB32 array etc.; * shift - precision of scanline data. Supported values are 0 - no; * precision, and 8 - 24.8 precision. Value of that argument; * defines by how much scanline data is shifted rightwards.; * quality - what algorithms should be used while writing data out, i.e.; * full error diffusion, fast error diffusion, no error; * diffusion.; * DESCRIPTION; * start_image_output() creates and initializes new ASImageOutput; * structure based on supplied parameters. Created structure can be; * subsequently used to write scanlines into destination image.; * It is effectively hiding differences of XImage and ASImage and other; * available output formats.; * outpt_image_scanline() method of the structure can be used to write; * out single scanline. Each written scanlines moves internal pointer to; * the next image line, and possibly writes several scanlines at once if; * tiling_step member is not 0.; **********/; /****f* libAfterImage/asimage/set_image_output_back_color(); * NAME; * set_image_output_back_color() - changes background color of output; * SYNOPSIS; * void set_image_output_back_color ( ASImageOutput *imout,; * ARGB32 back_color );; * INPUTS; * imout		- ASImageOutput structure, previously created with; * 			 start_image_output();; * back_color	- new background color value in ARGB format. This color; * 			 will be used to fill empty parts of outgoing scanlines.; *********/; /****f* libAfterImage/asimage/toggle_image_output_direction(); * NAME; * toggle_image_output_direction() - reverses vertical direction of output; * SYNOPSIS; * void toggle_image_output_direction( ASImageOut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:1083,avail,available,1083,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['avail'],['available']
Availability,"ET; ///; /// * Call construction overhead: 3 (save + BL + restore); /// * Frame construction overhead: 1 (ret); /// * Requires stack fixups? Yes; ///; /// \p MachineOutlinerTailCall implies that the function is being created from; /// a sequence of instructions ending in a return.; ///; /// That is,; ///; /// I1 OUTLINED_FUNCTION:; /// I2 --> B OUTLINED_FUNCTION I1; /// RET I2; /// RET; ///; /// * Call construction overhead: 1 (B); /// * Frame construction overhead: 0 (Return included in sequence); /// * Requires stack fixups? No; ///; /// \p MachineOutlinerNoLRSave implies that the function should be called using; /// a BL instruction, but doesn't require LR to be saved and restored. This; /// happens when LR is known to be dead.; ///; /// That is,; ///; /// I1 OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// I3 I2; /// I3; /// RET; ///; /// * Call construction overhead: 1 (BL); /// * Frame construction overhead: 1 (RET); /// * Requires stack fixups? No; ///; /// \p MachineOutlinerThunk implies that the function is being created from; /// a sequence of instructions ending in a call. The outlined function is; /// called with a BL instruction, and the outlined function tail-calls the; /// original call destination.; ///; /// That is,; ///; /// I1 OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// BL f I2; /// B f; /// * Call construction overhead: 1 (BL); /// * Frame construction overhead: 0; /// * Requires stack fixups? No; ///; /// \p MachineOutlinerRegSave implies that the function should be called with a; /// save and restore of LR to an available register. This allows us to avoid; /// stack fixups. Note that this outlining variant is compatible with the; /// NoLRSave case.; ///; /// That is,; ///; /// I1 Save LR OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// I3 Restore LR I2; /// I3; /// RET; ///; /// * Call construction overhead: 3 (save + BL + restore); /// * Frame construction overhead: 1 (ret); /// * Requires stack fixups? No",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:2050,avail,available,2050,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['avail'],['available']
Availability,"Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a variety of memory management related checkers, such as; // leak, double free, and use-after-free.; //; // The following checkers are defined here:; //; // * MallocChecker; // Despite its name, it models all sorts of memory allocations and; // de- or reallocation, including but not limited to malloc, free,; // relloc, new, delete. It also reports on a variety of memory misuse; // errors.; // Many other checkers interact very closely with this checker, in fact,; // most are merely options to this one. Other checkers may register; // MallocChecker, but do not enable MallocChecker's reports (more details; // to follow around its field, ChecksEnabled).; // It also has a boolean ""Optimistic"" checker option, which if set to true; // will cause the checker to model user defined memory management related; // functions annotated via the attribute ownership_takes, ownership_holds; // and ownership_returns.; //; // * NewDeleteChecker; // Enables the modeling of new, new[], delete, delete[] in MallocChecker,; // and checks for related double-free and use-after-free errors.; //; // * NewDeleteLeaksChecker; // Checks for leaks related to new, new[], delete, delete[].; // Depends on NewDeleteChecker.; //; // * MismatchedDeallocatorChecker; // Enables checking whether memory is deallocated with the correspending; // allocation function in MallocChecker, such as malloc() allocated; // regions are only freed by free(), new by delete, new[] by delete[].; //; // InnerPointerChecker interacts very closely with MallocChecker, but unlike; // the above checkers, it has it's own file, hence the many InnerPointerChecker; // related headers and non-static functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:1472,error,errors,1472,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['error'],['errors']
Availability,"F is invalid (e.g. parameter in undefined region), try to direct minimiser away from that region.; * `strength` controls the magnitude of the penalty term. Leaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Erro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4311,avail,available,4311,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['avail'],['available']
Availability,"GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative to this function is to read directly and only; /// the interesting branches. Example:; /// ~~~ {.cpp}; /// TBranch *brc = T.GetBranch(""c"");; /// TBranch *bre = T.GetBranch(""e"");; /// brc->GetEntry(i);; /// bre->GetEntry(i);; /// ~~~; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2678,error,error,2678,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"GetEntryWithIndex(majornumber, minornumber); /// ~~~; /// Example:; /// ~~~{.cpp}; /// tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; /// tree.GetEntryWithIndex(1234,56789); // reads entry corresponding to; /// // Run=1234 and Event=56789; /// ~~~; /// Note that majorname and minorname may be expressions using original; /// Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; /// must be integer.; ///; /// In case an expression is specified, the equivalent expression must be computed; /// when calling GetEntryWithIndex.; ///; /// To build an index with only majorname, specify minorname=""0"" (default); ///; /// ## TreeIndex and Friend Trees; ///; /// Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; /// - CASE 1: T->GetEntry(entry) is called; /// In this case, the serial number entry is used to retrieve; /// the data in both Trees.; /// - CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; /// the expressions given in major/minorname of TF are used; /// to compute the value pair major,minor with the data in T.; /// TF->GetEntryWithIndex(major,minor) is then called (tricky case!); /// - CASE 3: T->GetEntryWithIndex(major,minor) is called.; /// It is assumed that both T and TF have a TreeIndex built using; /// the same major and minor name.; ///; /// ## Saving the TreeIndex; ///; /// Once the index is built, it can be saved with the TTree object; /// with tree.Write(); (if the file has been open in ""update"" mode).; ///; /// The most convenient place to create the index is at the end of; /// the filling process just before saving the Tree header.; /// If a previous index was computed, it is redefined by this new call.; ///; /// Note that this function can also be applied to a TChain.; ///; /// The return value is the number of entries in the Index (< 0 indicates failure); ///; /// It is possible to play with different TreeIndex in the same Tree.; /// see comments in TTree::SetTreeIndex.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:2635,failure,failure,2635,tree/treeplayer/src/TTreeIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx,1,['failure'],['failure']
Availability,"H H III A Welcome to the Lund Monte Carlo! | |; | | P P Y Y T H H I A A This is PYTHIA version 8.100 | |; | | PPP Y T HHHHH I AAAAA Last date of change: 20 Oct 2007 | |; | | P Y T H H I A A | |; | | P Y T H H III A A Now is 27 Oct 2007 at 18:26:53 | |; | | | |; | | Main author: Torbjorn Sjostrand; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Department of Theoretical Physics, Lund University, Lund, Sweden; | |; | | phone: + 41 - 22 - 767 82 27; e-mail: torbjorn@thep.lu.se | |; | | Author: Stephen Mrenna; Computing Division, Simulations Group, | |; | | Fermi National Accelerator Laboratory, MS 234, Batavia, IL 60510, USA; | |; | | phone: + 1 - 630 - 840 - 2556; e-mail: mrenna@fnal.gov | |; | | Author: Peter Skands; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Theoretical Physics Department, | |; | | Fermi National Accelerator Laboratory, MS 106, Batavia, IL 60510, USA; | |; | | phone: + 41 - 22 - 767 24 59; e-mail: skands@fnal.gov | |; | | | |; | | The main program reference is the 'Brief Introduction to PYTHIA 8.1', | |; | | T. Sjostrand, S. Mrenna and P. Skands, arXiv:0710.3820 | |; | | | |; | | The main physics reference is the 'PYTHIA 6.4 Physics and Manual', | |; | | T. Sjostrand, S. Mrenna and P. Skands, JHEP05 (2006) 026 [hep-ph/0603175]. | |; | | | |; | | An archive of program versions and documentation is found on the web: | |; | | http://www.thep.lu.se/~torbjorn/Pythia.html | |; | | | |; | | This program is released under the GNU General Public Licence version 2. | |; | | Please respect the MCnet Guidelines for Event Generator Authors and Users. | |; | | | |; | | Disclaimer: this program comes without any guarantees. | |; | | Beware of errors and use common sense when interpreting results. | |; | | | |; | | Copyright (C) 2007 Torbjorn Sjostrand | |; | | | |; | | | |; | *------------------------------------------------------------------------------* |; | |; *------------------------------------------------------------------------------------*; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/inc/TPythia8.h:2213,error,errors,2213,montecarlo/pythia8/inc/TPythia8.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/inc/TPythia8.h,1,['error'],['errors']
Availability,"HDR and IEND chunks must not be listed. Because this turns off the; * default handling for chunks that would otherwise be recognized the; * behavior of libpng transformations may well become incorrect!; *; * WRITE:; * When writing chunks the options only apply to the chunks specified by; * png_set_unknown_chunks (below), libpng will *always* write known chunks; * required by png_set_ calls and will always write the core critical chunks; * (as required for PLTE).; *; * Each chunk in the png_set_unknown_chunks list is looked up in the; * png_set_keep_unknown_chunks list to find the keep setting, this is then; * interpreted as follows:; *; * PNG_HANDLE_CHUNK_AS_DEFAULT:; * Write safe-to-copy chunks and write other chunks if the global; * default is set to _ALWAYS, otherwise don't write this chunk.; * PNG_HANDLE_CHUNK_NEVER:; * Do not write the chunk.; * PNG_HANDLE_CHUNK_IF_SAFE:; * Write the chunk if it is safe-to-copy, otherwise do not write it.; * PNG_HANDLE_CHUNK_ALWAYS:; * Write the chunk.; *; * Note that the default behavior is effectively the opposite of the read case -; * in read unknown chunks are not stored by default, in write they are written; * by default. Also the behavior of PNG_HANDLE_CHUNK_IF_SAFE is very different; * - on write the safe-to-copy bit is checked, on read the critical bit is; * checked and on read if the chunk is critical an error will be raised.; *; * num_chunks:; * ===========; * If num_chunks is positive, then the ""keep"" parameter specifies the manner; * for handling only those chunks appearing in the chunk_list array,; * otherwise the chunk list array is ignored.; *; * If num_chunks is 0 the ""keep"" parameter specifies the default behavior for; * unknown chunks, as described above.; *; * If num_chunks is negative, then the ""keep"" parameter specifies the manner; * for handling all unknown chunks plus all chunks recognized by libpng; * except for the IHDR, PLTE, tRNS, IDAT, and IEND chunks (which continue to; * be processed by libpng.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:4041,error,error,4041,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['error'],['error']
Availability,"If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format; error in the deflate stream (in which case strm->msg is set to indicate the; nature of the error), or Z_STREAM_ERROR if the stream was not properly; initialized. In the case of Z_BUF_ERROR, an input or output error can be; distinguished using strm->next_in which will be Z_NULL only if in() returned; an error. If strm->next is not Z_NULL, then the Z_BUF_ERROR was due to; out() returning non-zero. (in() will always be called before out(), so; strm->next_in is assured to be defined if out() returns non-zero.) Note; that inflateBack() cannot return Z_OK.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3408,error,error,3408,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,5,['error'],['error']
Availability,"In this case **RDataFrame infers the type of the column** from the TTree itself. This; is why we never needed to specify the column types for all actions in the above snippets. When the column type is not a common one such as `int`, `double`, `char` or `float` it is nonetheless good practice to; specify it as a template parameter to the action itself, like this:; ~~~{.cpp}; df.Histo1D(""b1""); // OK, the type of ""b1"" is deduced at runtime; df.Min<MyNumber_t>(""myObject""); // OK, ""myObject"" is deduced to be of type `MyNumber_t`; ~~~. Deducing types at runtime requires the just-in-time compilation of the relevant actions, which has a small runtime; overhead, so specifying the type of the columns as template parameters to the action is good practice when performance is a goal. When strings are passed as expressions to Filter() or Define(), fundamental types are passed as constants. This avoids certaincommon mistakes such as typing `x = 0` rather than `x == 0`:. ~~~{.cpp}; // this throws an error (note the typo); df.Define(""x"", ""0"").Filter(""x = 0"");; ~~~. \anchor generic-actions; ### User-defined custom actions; RDataFrame strives to offer a comprehensive set of standard actions that can be performed on each event. At the same; time, it allows users to inject their own action code to perform arbitrarily complex data reductions. #### Implementing custom actions with Book(). Through the Book() method, users can implement a custom action and have access to the same features; that built-in RDataFrame actions have, e.g. hooks to events related to the start, end and execution of the; event loop, or the possibility to return a lazy RResultPtr to an arbitrary type of result:. ~~~{.cpp}; #include <ROOT/RDataFrame.hxx>; #include <memory>. class MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; std::shared_ptr<int> fFinalResult = std::make_shared<int>(0);; std::vector<int> fPerThreadResults;. public:; // We use a public type alias to advertise the type of the result of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:66975,error,error,66975,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['error'],['error']
Availability,"Integer: integer number; - kNESRealOne: real number with one digit (no exponent); - kNESRealTwo: real number with two digits (no exponent); - kNESRealThree: real number with three digits (no exponent); - kNESRealFour: real number with four digits (no exponent); - kNESReal: arbitrary real number; - kNESDegree: angle in degree:minutes:seconds format; - kNESMinSec: time in minutes:seconds format; - kNESMinSecCent: time in minutes:seconds.centiseconds format; - kNESHourMin: time in hour:minutes format; - kNESHourMinSec: time in hour:minutes:seconds format; - kNESDayMYear: date in day/month/year format; - kNESMDayYear: date in month/day/year format; - kNESHex: hex number. The following attributes can be specified:; - kNEAAnyNumber: any number is allowed; - kNEANonNegative: only non-negative numbers are allowed; - kNEAPositive: only positive numbers are allowed. Explicit limits can be specified individually:; - kNELNoLimits: no limits; - kNELLimitMin: lower limit only; - kNELLimitMax upper limit only; - kNELLimitMinMax both lower and upper limits. TGNumberEntryField is a plain vanilla entry field, whereas; TGNumberEntry adds two small buttons to increase and decrease the; numerical value in the field. The number entry widgets also support; using the up and down cursor keys to change the numerical values.; The step size can be selected with control and shift keys:; - -- small step (1 unit/factor of 3); - shift medium step (10 units/factor of 10); - control large step (100 units/factor of 30); - shift-control huge step (1000 units/factor of 100). The steps are either linear or logarithmic. The default behaviour; is set when the entry field is created, but it can be changed by; pressing the alt key at the same time. Changing the number in the widget will generate the event:; - kC_TEXTENTRY, kTE_TEXTCHANGED, widget id, 0. Hitting the enter key will generate:; - kC_TEXTENTRY, kTE_ENTER, widget id, 0. Hitting the tab key will generate:; - kC_TEXTENTRY, kTE_TAB, widget id, 0. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:2290,down,down,2290,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['down'],['down']
Availability,"K, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooChi2Var; \ingroup Roofitcore; \brief Simple \f$ \chi^2 \f$ calculation from a binned dataset and a PDF.; *; * It calculates:; *; \f{align*}{; \chi^2 &= \sum_{\mathrm{bins}} \left( \frac{N_\mathrm{PDF,bin} - N_\mathrm{Data,bin}}{\Delta_\mathrm{bin}} \right)^2 \\; N_\mathrm{PDF,bin} &=; \begin{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \f}; * If the dataset doesn't have user-defined errors, errors are assumed to be \f$ \sqrt{N} \f$.; * In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the; * expected number of events that the PDF predicts.; *; * \note If the dataset has errors stored, empty bins will prevent the calculation of \f$ \chi^2 \f$, because those have; * zero error. This leads to messages like:; * ```; * [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; * ```; *; * \note In this case, one can use the expected errors of the PDF instead of the data errors:; * ```{.cpp}; * RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; * ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:1559,error,errors,1559,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,9,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"LTO prelink,; // every call edge originated from the callee B will be transferred to; // the caller A. If any transferred edge (say A->C) is indirect, the; // original profiled indirect edge B->C, even if considered, would not; // enforce a top-down order from the caller A to the potential indirect; // call target C in LTO postlink since the inlined callee B is gone from; // the static call graph.; // 4. #3 can happen even for direct call targets, due to functions defined; // in header files. A header function (say A), when included into source; // files, is defined multiple times but only one definition survives due; // to ODR. Therefore, the LTO prelink inlining done on those dropped; // definitions can be useless based on a local file scope. More; // importantly, the inlinee (say B), once fully inlined to a; // to-be-dropped A, will have no profile to consume when its outlined; // version is compiled. This can lead to a profile-less prelink; // compilation for the outlined version of B which may be called from; // external modules. while this isn't easy to fix, we rely on the; // postlink AutoFDO pipeline to optimize B. Since the survived copy of; // the A can be inlined in its local scope in prelink, it may not exist; // in the merged IR in postlink, and we'll need the profiled call edges; // to enforce a top-down order for the rest of the functions.; //; // Considering those cases, a profiled call graph completely independent of; // the static call graph is constructed based on profile data, where; // function objects are not even needed to handle case #3 and case 4.; //; // Note that static callgraph edges are completely ignored since they; // can be conflicting with profiled edges for cyclic SCCs and may result in; // an SCC order incompatible with profile-defined one. Using strictly; // profile order ensures a maximum inlining experience. On the other hand,; // static call edges are not so important when they don't correspond to a; // context in the profile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:2300,down,down,2300,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['down'],['down']
Availability,"PUTS; * asv - pointer to the valid ASVisual structure.; * parent - Window ID of the parent the window.; * x, y - initial position of the new window.; * width, height - initial size of the new window.; * border_width - initial border width of the new window.; * wclass - Window class - InputOnly or InputOutput.; * mask - defines what attributes are set.; * attributes - different window attributes.; * RETURN VALUE; * ID of the newly created window on success. None on failure.; * DESCRIPTION; * create_visual_window() will do sanity checks on passed parameters,; * it will then add mandatory attributes if needed, and attempt to; * create window for the specified ASVisual.; *********/; /****f* libAfterImage/create_visual_gc(); * NAME; * create_visual_gc(); * SYNOPSIS; * GC create_visual_gc( ASVisual *asv, Window root,; * unsigned long mask, XGCValues *gcvalues );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * mask, gcvalues - values for creation of new GC - see XCreateGC() for; * details.; * RETURN VALUE; * New GC created for regular window on success. NULL on failure.; * DESCRIPTION; * create_visual_gc() will create temporary window for the ASVisual; * specific depth and Visual and it will then create GC for such window.; * Obtained GC should be good to be used for manipulation of windows and; * Pixmaps created for the same ASVisual.; *********/; /****f* libAfterImage/create_visual_pixmap(); * NAME; * create_visual_pixmap(); * SYNOPSIS; * Pixmap create_visual_pixmap( ASVisual *asv, Window root,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * width, height - size of the pixmap to create.; * depth - depth of the pixmap to create. If 0 asv->true_depth; * will be used.; * RETURN VALUE; * ID of the newly created pixmap on success. None on failure.; * DESCRIPTI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1328,mask,mask,1328,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['mask'],['mask']
Availability,"Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptional",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8467,error,errors,8467,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; /// - The function return the status of the fit in the following form; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via mytree.GetSelectedRows();; /// - If the number of selected entries is null the function returns -1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2246,error,error,2246,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"R""(; /*; UNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE. See Terms of Use <https://www.unicode.org/copyright.html>; for definitions of Unicode Inc.’s Data Files and Software. NOTICE TO USER: Carefully read the following legal agreement.; BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S; DATA FILES (""DATA FILES""), AND/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Files or Software, or; (b) this copyright and permission notice appear in associated; Documentation. THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; NONINFRINGEMENT OF THIRD PARTY RIGHTS.; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; TORTIOUS ACTION",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp:252,DOWN,DOWNLOADING,252,interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,2,['DOWN'],"['DOWNLOAD', 'DOWNLOADING']"
Availability,"R""(; // Image access qualifier.; enum OpenCLAccessQual : unsigned char {; OCLAQ_None,; OCLAQ_ReadOnly,; OCLAQ_WriteOnly,; OCLAQ_ReadWrite; };. // Represents a return type or argument type.; struct OpenCLTypeStruct {; // A type (e.g. float, int, ...).; const OpenCLTypeID ID;; // Vector size (if applicable; 0 for scalars and generic types).; const unsigned VectorWidth;; // 0 if the type is not a pointer.; const bool IsPointer : 1;; // 0 if the type is not const.; const bool IsConst : 1;; // 0 if the type is not volatile.; const bool IsVolatile : 1;; // Access qualifier.; const OpenCLAccessQual AccessQualifier;; // Address space of the pointer (if applicable).; const LangAS AS;; };. // One overload of an OpenCL builtin function.; struct OpenCLBuiltinStruct {; // Index of the signature in the OpenCLTypeStruct table.; const unsigned SigTableIndex;; // Entries between index SigTableIndex and (SigTableIndex + NumTypes - 1) in; // the SignatureTable represent the complete signature. The first type at; // index SigTableIndex is the return type.; const unsigned NumTypes;; // Function attribute __attribute__((pure)); const bool IsPure : 1;; // Function attribute __attribute__((const)); const bool IsConst : 1;; // Function attribute __attribute__((convergent)); const bool IsConv : 1;; // OpenCL extension(s) required for this overload.; const unsigned short Extension;; // OpenCL versions in which this overload is available.; const unsigned short Versions;; };. )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp:1424,avail,available,1424,interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangOpenCLBuiltinEmitter.cpp,1,['avail'],['available']
Availability,"R""(; <!--; Please specify also how you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->)""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:85,down,download,85,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['down'],['download']
Availability,"R""(WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:225,error,errors,225,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,6,['error'],"['error', 'errors']"
Availability,"R""(error: use of undeclared identifier 'i'; for(i=0; i < 0;); // the second usage of `i` was enough to get a segfault; ^; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:3,error,error,3,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['error'],['error']
Availability,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:907,error,errors,907,roofit/roofitcore/test/stressRooFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx,1,['error'],['errors']
Availability,"R""<<<(; <script type='text/javascript'>; // Return range of numbers from a range [lower, upper).; function range(lower, upper) {; var array = [];; for (var i = lower; i <= upper; ++i) {; array.push(i);; }; return array;; }. var getRelatedArrowIndices = function(pathId) {; // HTML numeration of events is a bit different than it is in the path.; // Everything is rotated one step to the right, so the last element; // (error diagnostic) has index 0.; if (pathId == 0) {; // arrowIndices has at least 2 elements; pathId = arrowIndices.length - 1;; }. return range(arrowIndices[pathId], arrowIndices[pathId - 1]);; }. var highlightArrowsForSelectedEvent = function() {; const selectedNum = findNum();; const arrowIndicesToHighlight = getRelatedArrowIndices(selectedNum);; arrowIndicesToHighlight.forEach((index) => {; var arrow = document.querySelector(""#arrow"" + index);; if(arrow) {; classListAdd(arrow, ""selected""); }; });; }. var getAbsoluteBoundingRect = function(element) {; const relative = element.getBoundingClientRect();; return {; left: relative.left + window.pageXOffset,; right: relative.right + window.pageXOffset,; top: relative.top + window.pageYOffset,; bottom: relative.bottom + window.pageYOffset,; height: relative.height,; width: relative.width; };; }. var drawArrow = function(index) {; // This function is based on the great answer from SO:; // https://stackoverflow.com/a/39575674/11582326; var start = document.querySelector(""#start"" + index);; var end = document.querySelector(""#end"" + index);; var arrow = document.querySelector(""#arrow"" + index);. var startRect = getAbsoluteBoundingRect(start);; var endRect = getAbsoluteBoundingRect(end);. // It is an arrow from a token to itself, no need to visualize it.; if (startRect.top == endRect.top &&; startRect.left == endRect.left); return;. // Each arrow is a very simple Bézier curve, with two nodes and; // two handles. So, we need to calculate four points in the window:; // * start node; var posStart = { x: 0, y: 0 };; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:419,error,error,419,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['error'],['error']
Availability,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:349,avail,available,349,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['avail'],['available']
Availability,"R""CODE(; #ifdef PI; # undef PI; #endif; #ifdef ERROR; # undef ERROR; #endif; )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:47,ERROR,ERROR,47,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['ERROR'],['ERROR']
Availability,"R""ICF(; #include ""TError.h"". #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; private: \; public: \; static TClass *Class() { static TClass* sIsA = 0; if (!sIsA) sIsA = TClass::GetClass(#name); return sIsA; } \; static const char *Class_Name() { return #name; } \; virtual_keyword Bool_t CheckTObjectHashConsistency() const overrd { return true; } \; static Version_t Class_Version() { return id; } \; static TClass *Dictionary() { return 0; } \; virtual_keyword TClass *IsA() const overrd { return name::Class(); } \; virtual_keyword void ShowMembers(TMemberInspector&insp) const overrd { ::ROOT::Class_ShowMembers(name::Class(), this, insp); } \; virtual_keyword void Streamer(TBuffer&) overrd { ::Error(""Streamer"", ""Cannot stream interpreted class.""); } \; void StreamerNVirtual(TBuffer&ClassDef_StreamerNVirtual_b) { name::Streamer(ClassDef_StreamerNVirtual_b); } \; static const char *DeclFileName() { return __FILE__; } \; static int ImplFileLine() { return 0; } \; static const char *ImplFileName() { return __FILE__; }; )ICF""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:712,Error,Error,712,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Error'],['Error']
Availability,"RAWINGS HEAVY HORIZONTAL; * 0xA2A5 0x255E # BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE; * 0x251D # BOX DRAWINGS VERTICAL LIGHT AND RIGHT HEAVY; * 0xA2A6 0x256A # BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE; * 0x253F # BOX DRAWINGS VERTICAL LIGHT AND HORIZONTAL HEAVY; * 0xA2A7 0x2561 # BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE; * 0x2525 # BOX DRAWINGS VERTICAL LIGHT AND LEFT HEAVY; * 0xA2CC --- 0x3038 # HANGZHOU NUMERAL TEN; * 0xA2CD 0x5344 0x3039 # HANGZHOU NUMERAL TWENTY; * 0xA2CE --- 0x303A # HANGZHOU NUMERAL THIRTY; *; * 2. A control symbols area is added:; *; * code; * 0xA3C0..0xA3E0 U+2400..U+2421; *; * 3. The Euro sign is added:; *; * code; * 0xA3E1 0x20AC # EURO SIGN; *; * 4. Some characters in the main area are defined differently:; *; * code BIG5.TXT BIG5-2003.TXT; * 0xC255 0x5F5D 0x5F5E; *; * 5. The area 0xC6A1..0xC7FE is organized differently:; *; * code; * 0xC6A1..0xC6BE numerals (was in BIG5.TXT at 0xC7E9..0xC7FC); * 0xC6BF..0xC6D7 radicals; * 0xC6D8..0xC6E6 rarely used symbols; * 0xC6E7..0xC77A hiragana (U+3041..U+3093, was in BIG5.TXT at 0xC6A5..0xC6F7); * 0xC77B..0xC7F2 katakana (U+30A1..U+30F6, was in BIG5.TXT at 0xC6F8..0xC7B0); *; * 6. Some characters are added at 0xF9D6..0xF9DC.; *; * 7. Box drawing characters are added at 0xF9DD..0xF9FE.; *; * Note: 4 of these characters are mapped in a non-inversible way, because; * Unicode does not yet include the corresponding characters:; *; * code Unicode approximation; * 0xF9FA BOX DRAWINGS DOUBLE ARC DOWN AND RIGHT 0x2554; * 0xF9FB BOX DRAWINGS DOUBLE ARC DOWN AND LEFT 0x2557; * 0xF9FC BOX DRAWINGS DOUBLE ARC UP AND RIGHT 0x255A; * 0xF9FD BOX DRAWINGS DOUBLE ARC UP AND LEFT 0x255D; *; * 8. Private area mappings are added:; *; * code Unicode; * 0x{81..8D}{40..7E,A1..FE} U+EEB8..U+F6B0; * 0x{8E..A0}{40..7E,A1..FE} U+E311..U+EEB7; * 0x{FA..FE}{40..7E,A1..FE} U+E000..U+E310; *; * These mappings are not contained in the BSMI Big5-2003 standard. However,; * they were contained in a draft of it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5_2003.h:3778,DOWN,DOWN,3778,graf2d/win32gdk/gdk/src/iconv/big5_2003.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5_2003.h,2,['DOWN'],['DOWN']
Availability,"RMergeableValue stores the result of the RDataFrame action and has a `Merge`; method to allow the aggregation of information coming from another similar; result into the current. A mergeable value can be retrieved from an RResultPtr through the; [GetMergeableValue]; (namespaceROOT_1_1Detail_1_1RDF.html#a8b3a9c7b416826acc952d78a56d14ecb) free; function and a sequence of mergeables can be merged together with the helper; function [MergeValues]; (namespaceROOT_1_1Detail_1_1RDF.html#af16fefbe2d120983123ddf8a1e137277).; All the classes and functions involved are inside the `ROOT::Detail::RDF`; namespace. In a nutshell:; ~~~{.cpp}; using namespace ROOT::Detail::RDF;; ROOT::RDataFrame d(""myTree"", ""file_*.root"");; auto h1 = d.Histo1D(""Branch_A"");; auto h2 = d.Histo1D(""Branch_A"");. // Retrieve mergeables from the `RResultPtr`s; auto mergeableh1 = GetMergeableValue(h1);; auto mergeableh2 = GetMergeableValue(h2);. // Merge the values and get another mergeable back; auto mergedptr = MergeValues(std::move(mergeableh1), std::move(mergeableh2));. // Retrieve the merged TH1D object; const auto &mergedhisto = mergedptr->GetValue();; ~~~. Though this snippet can run on a single thread of a single machine, it is; straightforward to generalize it to a distributed case, e.g. where `mergeableh1`; and `mergeableh2` are created on separate machines and sent to a `reduce`; process where the `MergeValues` function is called. The final user would then; just be given the final merged result coming from `mergedptr->GetValue`. RMergeableValue is the base class for all the different specializations that may; be needed according to the peculiarities of the result types. The following; subclasses, their names hinting at the action operation of the result, are; currently available:. - RMergeableCount; - RMergeableFill, responsible for the following actions:; - Graph; - Histo{1,2,3}D; - Profile{1,2}D; - Stats; - RMergeableMax; - RMergeableMean; - RMergeableMin; - RMergeableStdDev; - RMergeableSum; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx:2361,avail,available,2361,tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,1,['avail'],['available']
Availability,"RN VALUE; * On success returns newly created and encoded XImage of the same; * colordepth as the supplied ASVisual. NULL on failure.; * DESCRIPTION; * asimage2ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth of supplied ASVisual. REd, Green and; * Blue channels of ASImage then gets decoded, and encoded into XImage.; * Missing scanlines get filled with black color.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2ximage(). If any other behaviour is; * desired - make sure you set im->alt.ximage to NULL, to dissociate; * XImage object from ASImage.; * SEE ALSO; * create_visual_ximage(); *********/; /****f* libAfterImage/asimage2alpha_ximage(); * NAME; * asimage2alpha_ximage(); * SYNOPSIS; * XImage *asimage2alpha_ximage (struct ASVisual *asv, ; * ASImage *im, Bool bitmap);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * bitmap - if True resulting XImage will have depth of 1 bit -; * traditional X mask; otherwise it will have depth of 8; * (usefull for XFree86 RENDER extension); * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1 or 8.; * NULL on failure.; * DESCRIPTION; * asimage2alpha_ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth 1 or 8. Alpha channels of ASImage then gets; * decoded, and encoded into XImage. In case requested depth is 1 then; * alpha channel is interpreted like so: 127 or greater is encoded as 1,; * otherwise as 0.; * Missing scanlines get filled with 1s as they signify absence of mask.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.mask_ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2mask_ximage(). If any other behaviour is; * desired - make sure you set im->alt.mask_ximage to NULL, to dissociate;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:1341,mask,mask,1341,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['mask'],['mask']
Availability,"Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleErrors, except; /// that it has a void return type, and requires all errors to be handled and; /// no new errors be returned. It prevents errors (assuming they can all be; /// handled) from having to be bubbled all the way to the top-level.; ///; /// *All* Error instances must be c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1915,Error,Error,1915,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object is created; /// If the selection contains arrays, vectors or any container class and option; /// ""entrylistarray"" is used, a TEntryListArray object is created; /// containing also the subentries satisfying the selection, i.e. the indices of; /// the branches which hold containers classes.; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21706,error,error,21706,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements mapping the name of a unicode code point to its value.; //; // This file was generated using ./bin/UnicodeNameMappingGenerator.; // Do not edit manually.; //; //===----------------------------------------------------------------------===//; /*; UNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE. See Terms of Use <https://www.unicode.org/copyright.html>; for definitions of Unicode Inc.’s Data Files and Software. NOTICE TO USER: Carefully read the following legal agreement.; BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S; DATA FILES (""DATA FILES""), AND/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Files or Software, or; (b) this copyright and permission notice appear in associated; Documentation. THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY O",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp:1147,DOWN,DOWNLOAD,1147,interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,1,['DOWN'],['DOWNLOAD']
Availability,"Style->SetPaintTextFormat`).|; | ""TEXTnn"" | Draw bin contents as text at angle nn (0 < nn <= 90). |; | ""X+"" | The X-axis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8545,error,error,8545,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"System->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; /// The default behavior of .L script.C+ is the opposite one, leaving things; /// after closing, without removing. In other words, .L always passes the 'k'; /// option behind the scenes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:5031,avail,available,5031,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['avail'],['available']
Availability,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2775,avail,available,2775,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['avail'],['available']
Availability,"T::Math::Factory::CreateMinimizer. Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; The name shown below can be used to create them. More documentation can be found in the respective class. - Minuit (class TMinuitMinimizer); - Migrad (default); - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:1484,avail,available,1484,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['avail'],['available']
Availability,"T::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; /// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; /// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the corresponding documentation.; /// The default minimizer can be also set in the resource file in etc/system.rootrc. For example; ///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (the bin error) returned by `TH1::GetBinError`; ///; /// \f[; /// Chi2 = \sum_{i}{ \left(\frac{y(i) - f(x(i) | p )}{e(i)} \right)^2 }; /// \f]; ///; /// where `y(i)` is the bin content for each bin `i`, `x(i)` is the bin center and `e(i)` is the bin error (`sqrt(y(i)` for; /// an un-weighted histogram). Bins with zero errors are excluded from the fit. See also later the note on the treatment; /// of empty bins. When using option ""I"" the residual is computed not using the function value at the bin center, `f(x(i)|p)`,; /// but the integral of the function in the bin, Integral{ f(x|p)dx }, divided by the bin volume.; /// When using option `P` (Pearson chi2), the expected error computed as `e(i) = sqrt(f(x(i)|p))` is used.; /// In this case empty bins are considered in the fit.; /// Both chi-square methods should not be used when the bin content represent counts, especially in case of low bin statistics,; /// because they could return a biased result.; ///; /// \anchor HFitNLL; /// ### Likelihood Fits; ///; /// When using option ""L"" a likelihood fit is used instead of the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:6611,error,error,6611,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],['error']
Availability,"TS. *; *************************************************************************/; /** \class TH1Editor; \ingroup ged. Editor for changing TH1 histogram attributes, rebinning & fitting.; For all possible draw options (there are a few which are not implementable; in graphical user interface) see THistPainter::Paint. These changes can be made via the TH1Editor:; Style Tab:; 'Line' : change Line attributes (color, thickness); see TAttLineEditor; 'Fill' : change Fill attributes (color, pattern); see TAttFillEditor; 'Title' : TextEntry: set the title of the histogram; 'Histogram': change the draw options of the histogram; 'Plot' : Radiobutton: draw a 2D or 3D plot of the histogram; according to the Plot dimension there will be; different drawing possibilities (ComboBoxes/; CheckBoxes); 2d Plot:; 'Error' : ComboBox: add different error bars to the histogram; (no errors, simple, ..., see THistPainter::Paint; 'Add' : ComboBox: further things which can be added to the; histogram (None, simple/smooth line, fill area; 'Simple Drawing': CheckBox: draw a simple histogram without; errors (= ""HIST"" drawoption). In combination with; some other draw options an outer line is drawn on; top of the histogram; 'Show markers': CheckBox: draw a marker on to of each bin (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Error' : see 2D plot; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; 'Percentage': specifies the percentage of the bar which is drawn; brighter and darker (10% == BAR1 drawoption); 'Horizont",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:1414,error,errors,1414,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['error'],['errors']
Availability,"TSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25990,error,error,25990,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"Test Data Class instruction --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass looks for instructions that can be replaced by a Test Data Class; // instruction, and replaces them when profitable.; //; // Roughly, the following rules are recognized:; //; // 1: fcmp pred X, 0 -> tdc X, mask; // 2: fcmp pred X, +-inf -> tdc X, mask; // 3: fcmp pred X, +-minnorm -> tdc X, mask; // 4: tdc (fabs X), mask -> tdc X, newmask; // 5: icmp slt (bitcast float X to int), 0 -> tdc X, mask [ie. signbit]; // 6: icmp sgt (bitcast float X to int), -1 -> tdc X, mask; // 7: icmp ne/eq (call @llvm.s390.tdc.*(X, mask)) -> tdc X, mask/~mask; // 8: and i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 & M2); // 9: or i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 | M2); // 10: xor i1 (tdc X, M1), (tdc X, M2) -> tdc X, (M1 ^ M2); //; // The pass works in 4 steps:; //; // 1. All fcmp and icmp instructions in a function are checked for a match; // with rules 1-3 and 5-7. Their TDC equivalents are stored in; // the ConvertedInsts mapping. If the operand of a fcmp instruction is; // a fabs, it's also folded according to rule 4.; // 2. All and/or/xor i1 instructions whose both operands have been already; // mapped are mapped according to rules 8-10. LogicOpsWorklist is used; // as a queue of instructions to check.; // 3. All mapped instructions that are considered worthy of conversion (ie.; // replacing them will actually simplify the final code) are replaced; // with a call to the s390.tdc intrinsic.; // 4. All intermediate results of replaced instructions are removed if unused.; //; // Instructions that match rules 1-3 are considered unworthy of conversion; // on their own (since a comparison instruction is superior), but are mapped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp:911,mask,mask,911,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTDC.cpp,3,['mask'],['mask']
Availability,"The XML file is built in memory before being dumped to disk.; //; // Like for normal ROOT files, XML files use the same I/O mechanism; // exploiting the ROOT/CINT dictionary. Any class having a dictionary; // can be saved in XML format.; //; // This first implementation does not support subdirectories; // or Trees.; //; // The shared library libRXML.so may be loaded dynamically; // via gSystem->Load(""libRXML""). This library is automatically; // loaded by the plugin manager as soon as a XML file is created; // via, eg; // TFile::Open(""file.xml"",""recreate"");; // TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; // one can use the normal TObject::Write to write an object in the file.; // Alternatively one can use the new functions TDirectoryFile::WriteObject and; // TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; // from TObject.; //; // example of a session saving a histogram to a XML file; // =====================================================; // TFile *f = TFile::Open(""Example.xml"",""recreate"");; // TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; // h->FillRandom(""gaus"");; // h->Write();; // delete f;; //; // example of a session reading the histogram from the file; // ========================================================; // TFile *f = TFile::Open(""Example.xml"");; // TH1F *h = (TH1F*)f->Get(""h"");; // h->Draw();; //; // A new option in the canvas ""File"" menu is available to save; // a TCanvas as a XML file. One can also do; // canvas->Print(""Example.xml"");; //; // Configuring ROOT with the option ""xml""; // ======================================; // The XML package is enabled by default; //; // documentation; // =============; // See also classes TBufferXML, TKeyXML, TXMLEngine, TXMLSetup and TXMLPlayer.; // An example of XML file corresponding to the small example below; // can be found at http://root.cern/root/Example.xml; //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:2558,avail,available,2558,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['avail'],['available']
Availability,"Tree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of weights per bin.; If Sumw2 has been called, the error per bin is computed as the; sqrt(sum of squares of weights), otherwise the error is set equal; to the sqrt(bin content).; To return the error for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBinError(bin);; ~~~. \anchor associated-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogram.; - Additions of two histograms with coefficients and storage into the current; histogram.; - Multiplications and Divisions are supported in the same way as additions.; - The Add, Divide and Multiply functions also exist to add, divide or multiply; a histogram by a function. If a histogram has associated error bars (TH1::Sumw2 has been called),; the resulting error bars are also computed assuming independent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:14103,error,error,14103,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:999,reliab,reliably,999,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['reliab'],['reliably']
Availability,"Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; the classical estimates.; Also, robust estimation of location and scatter i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1809,robust,robust,1809,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability,"Z_FINISH. In this case all pending input is processed and all pending; output is flushed; avail_out must be large enough to hold all the; uncompressed data. (The size of the uncompressed data may have been saved; by the compressor for this purpose.) The next operation on this stream must; be inflateEnd to deallocate the decompression state. The use of Z_FINISH; is never required, but can be used to inform inflate that a faster approach; may be used for the single inflate() call. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the only effect of the flush parameter in this implementation; is on the return value of inflate(), as noted below, or when it returns early; because Z_BLOCK is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the adler32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the adler32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() will decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically. Any information; contained in the gzip header is not retained, so applications that need that; information should instead use raw inflate, see inflateInit2() below, or; inflateBack() and perform their own processing of the gzip header and; trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:4122,error,error,4122,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"\code; /// for (int i = 0; i < 7; ++i) // Canonical loop ""i""; /// for (int j = 0; j < 9; ++j) // Canonical loop ""j""; /// body(i, j);; /// \endcode; ///; /// After collapsing with Loops={i,j}, the loop is changed to; /// \code; /// for (int ij = 0; ij < 63; ++ij) {; /// int i = ij / 9;; /// int j = ij % 9;; /// body(i, j);; /// }; /// \endcode; ///; /// In the current implementation, the following limitations apply:; ///; /// * All input loops have an induction variable of the same type.; ///; /// * The collapsed loop will have the same trip count integer type as the; /// input loops. Therefore it is possible that the collapsed loop cannot; /// represent all iterations of the input loops. For instance, assuming a; /// 32 bit integer type, and two input loops both iterating 2^16 times, the; /// theoretical trip count of the collapsed loop would be 2^32 iteration,; /// which cannot be represented in an 32-bit integer. Behavior is undefined; /// in this case.; ///; /// * The trip counts of every input loop must be available at \p ComputeIP.; /// Non-rectangular loops are not yet supported.; ///; /// * At each nest level, code between a surrounding loop and its nested loop; /// is hoisted into the loop body, and such code will be executed more; /// often than before collapsing (or not at all if any inner loop iteration; /// has a trip count of 0). This is permitted by the OpenMP specification.; ///; /// \param DL Debug location for instructions added for collapsing,; /// such as instructions to compute/derive the input loop's; /// induction variables.; /// \param Loops Loops in the loop nest to collapse. Loops are specified; /// from outermost-to-innermost and every control flow of a; /// loop's body must pass through its directly nested loop.; /// \param ComputeIP Where additional instruction that compute the collapsed; /// trip count. If not set, defaults to before the generated; /// loop.; ///; /// \returns The CanonicalLoopInfo object representing the collapsed loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:1832,avail,available,1832,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['avail'],['available']
Availability,"\f$ are chosen first; (TMultiDimFit::TestFunction). In case \f$ \phi \f$ isn't defined, an alternative method of; performing this second test is used: The \f$L^{\mbox{th}}\f$; function \f$\textbf{f}_L\f$ is accepted if (refer also to equation (13)); \f[; \Delta S_L > \frac{S_{L-1}}{L_{max}-L}; \f]; where \f$ S_{L-1}\f$ is the sum of the \f$ L-1\f$ first residuals from the; \f$ L-1\f$ functions previously accepted; and \f$ L_{max}\f$ is the total number; of functions allowed in the final expression of the fit (defined by; user). From this we see, that by restricting \f$ L_{max}\f$ -- the number of; terms in the final model -- the fit is more difficult to perform,; since the above selection criteria is more limiting. The more coefficients we evaluate, the more the sum of squares of; residuals \f$ S\f$ will be reduced. We can evaluate \f$ S\f$ before inverting; \f$\mathsf{B}\f$ as shown below. ## Coefficients and Coefficient Errors; Having found a parameterization, that is the \f$ F_l\f$'s and \f$ L\f$, that; minimizes \f$ S\f$, we still need to determine the coefficients; \f$ c_l\f$. However, it's a feature of how we choose the significant; functions, that the evaluation of the \f$ c_l\f$'s becomes trivial [5]. To derive; \f$\mathbf{c}\f$, we first note that; equation (4) can be written as; \f[; \mathsf{F} = \mathsf{W}\mathsf{B}; \f]; where; \f{eqnarray*}{; b_{ij} = \frac{\mathbf{f}_j \bullet \mathbf{w}_i}{\mathbf{w}_i^2}; & \mbox{if} & i < j\\; 1 & \mbox{if} & i = j\\; 0 & \mbox{if} & i > j; \f}; Consequently, \f$\mathsf{B}\f$ is an upper triangle matrix, which can be; readily inverted. So we now evaluate; \f[; \mathsf{F}\mathsf{B}^{-1} = \mathsf{W}; \f]; The model \f$\mathsf{W}\mathbf{a}\f$ can therefore be written as; \f$(\mathsf{F}\mathsf{B}^{-1})\mathbf{a} = \mathsf{F}(\mathsf{B}^{-1}\mathbf{a})\,.\f$. The original model \f$\mathsf{F}\mathbf{c}\f$ is therefore identical with; this if; \f[; \mathbf{c} = \left(\mathsf{B}^{-1}\mathbf{a}\right) =; \left[\mathbf{a}^T\l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:12076,Error,Errors,12076,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['Error'],['Errors']
Availability,"\f$; /// for all options except for the; /// bayesian methods where the result depends on the chosen option.; ///; /// If the denominator becomes 0 or pass > total, the corresponding bin is; /// skipped.; ///; /// ### 2) calculating ratios of two Poisson means (option 'pois'):; ///; /// The two histograms are interpreted as independent Poisson processes and the ratio; /// \f[; /// \tau = \frac{n_{1}}{n_{2}} = \frac{\varepsilon}{1 - \varepsilon}; /// \f]; /// with \f$\varepsilon = \frac{n_{1}}{n_{1} + n_{2}}\f$.; /// The histogram 'pass' is interpreted as \f$n_{1}\f$ and the total histogram; /// is used for \f$n_{2}\f$.; ///; /// The (asymmetric) uncertainties of the Poisson ratio are linked to the uncertainties; /// of efficiency by a parameter transformation:; /// \f[; /// \Delta \tau_{low/up} = \frac{1}{(1 - \varepsilon)^{2}} \Delta \varepsilon_{low/up}; /// \f]; ///; /// The x errors span each histogram bin (lowedge ... lowedge+width); /// The y errors depend on the chosen statistic methode which can be determined; /// by the options given below. For a detailed description of the used statistic; /// calculations please have a look at the corresponding functions!; ///; /// Options:; /// - v : verbose mode: prints information about the number of used bins; /// and calculated efficiencies with their errors; /// - cl=x : determine the used confidence level (0<x<1) (default is 0.683); /// - cp : Clopper-Pearson interval (see TEfficiency::ClopperPearson); /// - w : Wilson interval (see TEfficiency::Wilson); /// - n : normal approximation propagation (see TEfficiency::Normal); /// - ac : Agresti-Coull interval (see TEfficiency::AgrestiCoull); /// - fc : Feldman-Cousins interval (see TEfficiency::FeldmanCousinsInterval); /// - midp : Lancaster mid-P interval (see TEfficiency::MidPInterval); /// - b(a,b): bayesian interval using a prior probability ~Beta(a,b); a,b > 0; /// (see TEfficiency::Bayesian); /// - mode : use mode of posterior for Bayesian interval (default is mea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:1812,error,errors,1812,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability,"_paramIter->Next()) ) {; low = (RooAbsReal*)lowIntIter->Next() ;; high = (RooAbsReal*)highIntIter->Next() ;. if(param->getVal()>0) {; value += param->getVal()*(high->getVal() - nominal );; } else {; value += param->getVal()*(nominal - low->getVal());; }; ++i;; }; */; /* KC: the code below is wrong. Can't pull out a constant change to a non-linear shape deformation.; while( (param=(RooAbsReal*)paramIter.next()) ) {; low = (RooAbsReal*)lowIntIter.next() ;; high = (RooAbsReal*)highIntIter.next() ;. if(_interpCode.empty() || _interpCode.at(i)==0){; // piece-wise linear; if(param->getVal()>0); value += param->getVal()*(high->getVal() - nominal );; else; value += param->getVal()*(nominal - low->getVal());; } else if(_interpCode.at(i)==1){; // piece-wise log; if(param->getVal()>=0); value *= pow(high->getVal()/nominal, +param->getVal());; else; value *= pow(low->getVal()/nominal, -param->getVal());; } else if(_interpCode.at(i)==2){; // parabolic with linear; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }; } else if(_interpCode.at(i)==3){; //parabolic version of log-normal; double a = 0.5*(high->getVal()+low->getVal())-nominal;; double b = 0.5*(high->getVal()-low->getVal());; double c = 0;; if(param->getVal()>1 ){; value += (2*a+b)*(param->getVal()-1)+high->getVal()-nominal;; } else if(param->getVal()<-1 ) {; value += -1*(2*a-b)*(param->getVal()+1)+low->getVal()-nominal;; } else {; value += a*pow(param->getVal(),2) + b*param->getVal()+c;; }. } else {; coutE(InputArguments) << ""PiecewiseInterpolation::analyticalIntegralWN ERROR: "" << param->GetName(); << "" with unknown interpolation code"" << endl ;; }; ++i;; }; */; // cout << ""value = "" << value <<endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:1935,ERROR,ERROR,1935,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['ERROR'],['ERROR']
Availability,"` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5985,error,error,5985,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"`L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5666,error,error,5666,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"a build.ninja file. Suppose you have a header file that's autogenerated by (for example) Tablegen.; If a C++ compilation step needs to include that header, then it must be; executed after the Tablegen build step that generates the header. So the; dependency graph in build.ninja should have the Tablegen build step as an; ancestor of the C++ one. If it does not, then there's a latent build-failure; bug, because depending on the order that ninja chooses to schedule its build; steps, the C++ build step could run first, and fail because the header it needs; does not exist yet. But because that kind of bug can easily be latent or intermittent, you might; not notice, if your local test build happens to succeed. What you'd like is a; way to detect problems of this kind reliably, even if they _didn't_ cause a; failure on your first test. This script tries to do that. It's specific to the 'ninja' build tool, because; ninja has useful auxiliary output modes that produce the necessary data:. - 'ninja -t graph' emits the full DAG of formal dependencies derived from; build.ninja (in Graphviz format). - 'ninja -t deps' dumps the database of dependencies discovered at build time; by finding out which headers each source file actually included. By cross-checking these two sources of data against each other, you can find; true dependencies shown by 'deps' that are not reflected as formal dependencies; in 'graph', i.e. a generated header that is required by a given source file but; not forced to be built first. To run it:. - set up a build directory using ninja as the build tool (cmake -G Ninja). - in that build directory, run ninja to perform an actual build (populating; the dependency database). - then, in the same build directory, run this script. No arguments are needed; (but -C and -f are accepted, and propagated to ninja for convenience). Requirements outside core Python: the 'pygraphviz' module, available via pip or; as the 'python3-pygraphviz' package in Debian and Ubuntu. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:1966,avail,available,1966,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['avail'],['available']
Availability,"a function with 6 parameters, you can do:; ///; /// ~~~ {.cpp}; /// func->SetParameters(0, 3.1, 1.e-6, -8, 0, 100);; /// func->SetParLimits(3, -10, -4);; /// func->FixParameter(4, 0);; /// func->SetParLimits(5, 1, 1);; /// ~~~; ///; /// With this setup, parameters 0->2 can vary freely; /// Parameter 3 has boundaries [-10,-4] with initial value -8; /// Parameter 4 is fixed to 0; /// Parameter 5 is fixed to 100.; /// When the lower limit and upper limit are equal, the parameter is fixed.; /// However to fix a parameter to 0, one must call the FixParameter function.; ///; /// \anchor HFitStatBox; /// ### Fit Statistics Box; ///; /// The statistics box can display the result of the fit.; /// You can change the statistics box to display the fit parameters with; /// the TStyle::SetOptFit(mode) method. This mode has four digits.; /// mode = pcev (default = 0111); ///; /// v = 1; print name/values of parameters; /// e = 1; print errors (if e=1, v must be 1); /// c = 1; print Chisquare/Number of degrees of freedom; /// p = 1; print Probability; ///; /// For example: gStyle->SetOptFit(1011);; /// prints the fit probability, parameter names/values, and errors.; /// You can change the position of the statistics box with these lines; /// (where g is a pointer to the TGraph):; ///; /// TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats"");; /// st->SetX1NDC(newx1); //new x start position; /// st->SetX2NDC(newx2); //new x end position; ///; /// \anchor HFitExtra; /// ### Additional Notes on Fitting; ///; /// #### Fitting a histogram of dimension N with a function of dimension N-1; ///; /// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; /// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; /// For correct error scaling, the obtained parameter error are corrected as in the case when the; /// option ""W"" is used.; ///; /// #### User defined objective f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:15921,error,errors,15921,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"a subclass of; /// FoldingSetNode. The node class must also define a Profile method used to; /// establish the unique bits of data for the node. The Profile method is; /// passed a FoldingSetNodeID object which is used to gather the bits. Just; /// call one of the Add* functions defined in the FoldingSetBase::NodeID class.; /// NOTE: That the folding set does not own the nodes and it is the; /// responsibility of the user to dispose of the nodes.; ///; /// Eg.; /// class MyNode : public FoldingSetNode {; /// private:; /// std::string Name;; /// unsigned Value;; /// public:; /// MyNode(const char *N, unsigned V) : Name(N), Value(V) {}; /// ...; /// void Profile(FoldingSetNodeID &ID) const {; /// ID.AddString(Name);; /// ID.AddInteger(Value);; /// }; /// ...; /// };; ///; /// To define the folding set itself use the FoldingSet template;; ///; /// Eg.; /// FoldingSet<MyNode> MyFoldingSet;; ///; /// Four public methods are available to manipulate the folding set;; ///; /// 1) If you have an existing node that you want add to the set but unsure; /// that the node might already exist then call;; ///; /// MyNode *M = MyFoldingSet.GetOrInsertNode(N);; ///; /// If The result is equal to the input then the node has been inserted.; /// Otherwise, the result is the node existing in the folding set, and the; /// input can be discarded (use the result instead.); ///; /// 2) If you are ready to construct a node but want to check if it already; /// exists, then call FindNodeOrInsertPos with a FoldingSetNodeID of the bits to; /// check;; ///; /// FoldingSetNodeID ID;; /// ID.AddString(Name);; /// ID.AddInteger(Value);; /// void *InsertPoint;; ///; /// MyNode *M = MyFoldingSet.FindNodeOrInsertPos(ID, InsertPoint);; ///; /// If found then M will be non-NULL, else InsertPoint will point to where it; /// should be inserted using InsertNode.; ///; /// 3) If you get a NULL result from FindNodeOrInsertPos then you can insert a; /// new node with InsertNode;; ///; /// MyFoldingSet.InsertNode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:1575,avail,available,1575,interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,1,['avail'],['available']
Availability,"a; /// runtime error. This enforces at runtime the requirement that all Error; /// instances be checked or returned to the caller.; ///; /// There are two ways to set the checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be che",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1484,Error,ErrorInfo,1484,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,2,"['Error', 'error']","['ErrorInfo', 'error']"
Availability,"accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+E | Move cursor to end of line. |; | Ctrl+H | Delete character before cursor, or text selection. |; | Ctrl+K | Delete characters from current position to the end of line. |; | Ctrl+U | Delete current line. |. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:5124,down,down,5124,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,2,['down'],['down']
Availability,"age() always interprets Descriptor::help as UTF-8 and always produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c last_column_min_percent of the width being available, then only; * @c last_column_own_line_max_percent of the extra line(s) will be used for the; * last column's text. This ensures an indentation. See example below.; *; * @code; * // width=20, last_column_min_percent=50 (i.e. last col. min. width=10); * --3456789 1234567890; * 1234567890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=75; * --3456789; * 123456789012345; * 67890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=33 (i.e. max. 5); * --3456",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6281,avail,available,6281,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['avail'],['available']
Availability,"al objects like; TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots. Two static functions are available that return the bright or dark color number corresponding; to a given color index. If these variants don't already exist, they are created as needed:; ~~~ {.cpp}; Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; ~~~. \anchor C031; ## Accessible Color Schemes; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. These three color schemes are available as color sets with 6, 8, and 10 colors, named; `kP[6, 8, 10]ColorName`. For example, `kP6Red` represents the red color within the P6 color scheme; (`P` for Petroff or Preferred). Begin_Macro; ../../../tutorials/graphics/accessiblecolorschemes.C; End_Macro. The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings.; It also demonstrates that they are effective in grayscale. \anchor C04; ## Grayscale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using; `TCanvas::SetGrayscale()`. Note that in grayscale mode, access via RGB; will return grayscale values according to ITU standards (and close to b&w; printer gray-scales), while access via HLS returns de-saturated gray-scales. The; image below shows the ROOT color wheel in grayscale mode. Begin_Macro(source); {; auto w = new TColorWheel();; auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; cw->GetCanvas()->SetGrayscale();; w->SetCanvas(cw);; w->Draw();; }; End_Macro.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:4916,avail,available,4916,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"al; histogram or scatter plot, but if Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile histogram with; much better precision than by a scatter plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the average of the s(j) for all bins if; the static function TProfile::Approximate() has been called.; This simple/crude approximation was suggested in order to keep the bin; during a fit operation. But note that this approximation is not the default behaviour.; See also TProfile::BuildOptions for more on error options. ### Creating and drawing a profile histogram; ~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof = new TPro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1451,Error,Error,1451,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['Error'],['Error']
Availability,"all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; * INTERFACE; *; * void lm_init (int pack_level, ush *flags); * Initialize the ""longest match"" routines for a new file; *; * ulg deflate (void); * Processes a new input file and return its compressed length. Sets; * the compressed length, crc, deflate flags and internal file; * attributes.; */; /* #include ""zip.h"" */; /* #include ""ZIP.h"" */; /* ==================================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:1489,redundant,redundant,1489,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['redundant'],['redundant']
Availability,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1933,error,error,1933,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() appli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1933,error,error,1933,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"alue; of the integral. Method:; For any interval [a,b] we define g8(a,b) and g16(a,b) to be the 8-point; and 16-point Gaussian quadrature approximations to; \f[; I = \int^{b}_{a} f(x)dx; \f]; and define; \f[; r(a,b) = \frac{\left|g_{16}(a,b)-g_{8}(a,b)\right|}{1+\left|g_{16}(a,b)\right|}; \f]; Then,; \f[; G = \sum_{i=1}^{k}g_{16}(x_{i-1},x_{i}); \f]; where, starting with \f$x_{0} = A\f$ and finishing with \f$x_{k} = B\f$,; the subdivision points \f$x_{i}(i=1,2,...)\f$ are given by; \f[; x_{i} = x_{i-1} + \lambda(B-x_{i-1}); \f]; \f$\lambda\f$ is equal to the first member of the; sequence 1,1/2,1/4,... for which \f$r(x_{i-1}, x_{i}) < EPS\f$.; If, at any stage in the process of subdivision, the ratio; \f[; q = \left|\frac{x_{i}-x_{i-1}}{B-A}\right|; \f]; is so small that 1+0.005q is indistinguishable from 1 to; machine accuracy, an error exit occurs with the function value; set equal to zero. Accuracy:; The user provides absolute and relative error bounds (epsrel and epsabs) and the; algorithm will stop when the estimated error is less than the epsabs OR is less; than |I| * epsrel.; Unless there is severe cancellation of positive and negative values of; f(x) over the interval [A,B], the relative error may be considered as; specifying a bound on the <I>relative</I> error of I in the case; |I|&gt;1, and a bound on the absolute error in the case |I|&lt;1. More; precisely, if k is the number of sub-intervals contributing to the; approximation (see Method), and if; \f[; I_{abs} = \int^{B}_{A} \left|f(x)\right|dx; \f]; then the relation; \f[; \frac{\left|G-I\right|}{I_{abs}+k} < EPS; \f]; will nearly always be true, provided the routine terminates without; printing an error message. For functions f having no singularities in; the closed interval [A,B] the accuracy will usually be much higher than; this. Error handling:; The requested accuracy cannot be obtained (see Method).; The function value is set equal to zero. Note 1:; Values of the function f(x) at the interval end-p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:1216,error,error,1216,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,2,['error'],['error']
Availability,"alytical Integration; * The Hypatia distribution can be integrated analytically if \f$ \beta = \zeta = 0 \f$ and; * \f$ \lambda < 0 \f$. An analytic integral will only be used, though, if the parameters are **constant**; * at zero, and if \f$ \lambda < 0 \f$. This can be ensured as follows:; * ```; * RooRealVar beta(""beta"", ""beta"", 0.); // NOT beta(""beta"", ""beta"", 0., -1., 1.) This would allow it to float.; * RooRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Further, the original paper establishes that to keep the tails from rising,; * \f[; * \begin{split}; * \beta^2 &< \alpha^2 \\; * \Leftrightarrow \beta^2 &< \frac{\zeta^2}{\delta^2} = \frac{\zeta^2}{\sigma^2 A_{\lambda}^2(\zeta)}; * \end{split}; * \f]; * needs to be satisfied, unless the fit range is very restricted, because otherwise, the function rises in the tails.; *; *; * In case of evaluation errors, it is advisable to choose very large values for \f$ a_l,\ a_r \f$, tweak the parameters of the core region to; * make it concave, and re-enable the tails. Especially \f$ \beta \f$ needs to be close to zero.; *; * ## Relation to RooIpatia2; * This implementation is largely based on RooIpatia2, https://gitlab.cern.ch/lhcb/Urania/-/blob/master/PhysFit/B2DXFitters/src/RooIpatia2.cxx,; * but there are differences:; * - At construction time, the Hypatia implementation checks if the range of parameters extends into regions where; * the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:3283,error,errors,3283,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['error'],['errors']
Availability,"ams are used to display the mean; value of Z and its error for each cell in X,Y.; Profile2D histograms are in many cases an; elegant replacement of three-dimensional histograms : the inter-relation of three; measured quantities X, Y and Z can always be visualized by a three-dimensional; histogram or scatter-plot; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If Z is an unknown (but single-valued); approximate function of X,Y this function is displayed by a profile2D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:1122,error,errors,1122,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['error'],['errors']
Availability,"an be still triggered with; a single call to RunGraphs (e.g. it is possible to send a Spark job and a Dask job at the same time). ### Histogram models in distributed mode. When calling a Histo*D operation in distributed mode, remember to pass to the function the model of the histogram to be; computed, e.g. the axis range and the number of bins:. ~~~{.py}; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame. if __name__ == ""__main__"":; df = RDataFrame(""mytree"",""myfile.root"").Define(""x"",""someoperation""); # The model can be passed either as a tuple with the arguments in the correct order; df.Histo1D((""name"", ""title"", 10, 0, 10), ""x""); # Or by creating the specific struct; model = ROOT.RDF.TH1DModel(""name"", ""title"", 10, 0, 10); df.Histo1D(model, ""x""); ~~~. Without this, two partial histograms resulting from two distributed tasks would have incompatible binning, thus leading; to errors when merging them. Failing to pass a histogram model will raise an error on the client side, before starting; the distributed execution. ### Live visualization in distributed mode with dask. The live visualization feature allows real-time data representation of plots generated during the execution ; of a distributed RDataFrame application. ; It enables visualizing intermediate results as they are computed across multiple nodes of a Dask cluster; by creating a canvas and continuously updating it as partial results become available. . The LiveVisualize() function can be imported from the Python package **ROOT.RDF.Experimental.Distributed**:. ~~~{.py}; import ROOT. LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ~~~. The function takes drawable objects (e.g. histograms) and optional callback functions as argument, it accepts 4 different input formats:. - Passing a list or tuple of drawables: ; You can pass a list or tuple containing the plots you want to visualize. For example:. ~~~{.py}; LiveVisualize([h_gaus, h_exp, h_random]); ~~~. - Passing a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:44940,error,error,44940,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['error'],['error']
Availability,"analysis will find that the value coming around the backedge has; // the following SCEV:; // BEValue = ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // Upon concluding that this matches the desired pattern, the function; // will return the pair {NewAddRec, SmallPredsVec} where:; // NewAddRec = {%Start,+,%Step}; // SmallPredsVec = {P1, P2, P3} as follows:; // P1(WrapPred): AR: {trunc(%Start),+,(trunc %Step)}<nsw> Flags: <nssw>; // P2(EqualPred): %Start == (sext i32 (trunc i64 %Start to i32) to i64); // P3(EqualPred): %Step == (sext i32 (trunc i64 %Step to i32) to i64); // The returned pair means that SymbolicPHI can be rewritten into NewAddRec; // under the predicates {P1,P2,P3}.; // This predicated rewrite will be cached in PredicatedSCEVRewrites:; // PredicatedSCEVRewrites[{%X,L}] = {NewAddRec, {P1,P2,P3)}; //; // TODO's:; //; // 1) Extend the Induction descriptor to also support inductions that involve; // casts: When needed (namely, when we are called in the context of the; // vectorizer induction analysis), a Set of cast instructions will be; // populated by this method, and provided back to isInductionPHI. This is; // needed to allow the vectorizer to properly record them to be ignored by; // the cost model and to avoid vectorizing them (otherwise these casts,; // which are redundant under the runtime overflow checks, will be; // vectorized, which can be costly).; //; // 2) Support additional induction/PHISCEV patterns: We also want to support; // inductions where the sext-trunc / zext-trunc operations (partly) occur; // after the induction update operation (the induction increment):; //; // (Trunc iy (SExt/ZExt ix (%SymbolicPHI + InvariantAccum) to iy) to ix); // which correspond to a phi->add->trunc->sext/zext->phi update chain.; //; // (Trunc iy ((SExt/ZExt ix (%SymbolicPhi) to iy) + InvariantAccum) to ix); // which correspond to a phi->trunc->add->sext/zext->phi update chain.; //; // 3) Outline common code with createAddRecFromPHI to avoid duplication.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:2095,redundant,redundant,2095,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['redundant'],['redundant']
Availability,"ance should nonetheless be reasonable,; /// particularly for its intended use. It may be useful as a base; /// implementation for a run-time library during development of a faster; /// target-specific one.; ///; /// All 5 rounding modes in the IEEE-754R draft are handled correctly for all; /// implemented operations. Currently implemented operations are add, subtract,; /// multiply, divide, fused-multiply-add, conversion-to-float,; /// conversion-to-integer and conversion-from-integer. New rounding modes; /// (e.g. away from zero) can be added with three or four lines of code.; ///; /// Four formats are built-in: IEEE single precision, double precision,; /// quadruple precision, and x87 80-bit extended double (when operating with; /// full extended precision). Adding a new format that obeys IEEE semantics; /// only requires adding two lines of code: a declaration and definition of the; /// format.; ///; /// All operations return the status of that operation as an exception bit-mask,; /// so multiple operations can be done consecutively with their results or-ed; /// together. The returned status can be useful for compiler diagnostics; e.g.,; /// inexact, underflow and overflow can be easily diagnosed on constant folding,; /// and compiler optimizers can determine what exceptions would be raised by; /// folding operations and optimize, or perhaps not optimize, accordingly.; ///; /// At present, underflow tininess is detected after rounding; it should be; /// straight forward to add support for the before-rounding case too.; ///; /// The library reads hexadecimal floating point numbers as per C99, and; /// correctly rounds if necessary according to the specified rounding mode.; /// Syntax is required to have been validated by the caller. It also converts; /// floating point numbers to hexadecimal text as per the C99 %a and %A; /// conversions. The output precision (or alternatively the natural minimal; /// precision) can be specified; if the requested precision is less ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h:1548,mask,mask,1548,interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,1,['mask'],['mask']
Availability,"and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects inside TFile. As drawback, TRef objects stored; /// in such file cannot be read correctly.; ///; /// In case the name of the file is not reproducible either (in case of; /// creating temporary filenames) a value can be passed to the reproducible; /// option to replace the name stored in the file.; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""tmpname.root?reproducible=fixedname"",""RECREAT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:5391,recover,recovery,5391,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['recover'],['recovery']
Availability,"and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1532,avail,available,1532,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,['avail'],['available']
Availability,"ansformation is necessarily non-linear, it would transform a; nice linear problem into a nasty non-linear one, which is the reason why; limits should be avoided if not necessary.; In addition, the transformation; does require some computer time, so it slows down the computation a little; bit, and more importantly, it introduces additional numerical inaccuracy into; the problem in addition to what is introduced in the numerical calculation; of the FCN value.; The effects of non-linearity and numerical roundoff both; become more important as the external value gets closer to one of the limits; (expressed as the distance to nearest limit divided by distance between limits).; The user must therefore be aware of the fact that, for example,; if he puts limits of \f$(0,10^{10})\f$ on a parameter, then the values \f$0.0\f$; and \f$1.0\f$ will be indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course,; so Minuit does a transformation of the error matrix (and the; ``parabolic'' parameter errors) when there are parameter limits.; Users should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; Therefore, it is recommended that:. 1. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values. 2. When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. ### How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:4296,error,error,4296,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,3,['error'],"['error', 'errors']"
Availability,"ansmit the page header, and we never transmit more payload than; * the page actually contains); * - in the child, all open BidirMMapPipes but the current one are closed. this; * is done for two reasons: first, to conserve file descriptors and address; * space. second, if more than one process is meant to use such a; * BidirMMapPipe, synchronisation issues arise which can lead to bugs that; * are hard to find and understand. it's much better to come up with a design; * which does not need pipes to be shared among more than two processes.; *; * Here is a trivial example of a parent and a child talking to each other over; * a BidirMMapPipe:; * @code; * #include <string>; * #include <iostream>; * #include <cstdlib>; *; * #include ""BidirMMapPipe.h""; *; * int simplechild(BidirMMapPipe& pipe); * {; * // child does an echo loop; * while (pipe.good() && !pipe.eof()) {; * // read a string; * std::string str;; * pipe >> str;; * if (!pipe) return -1;; * if (pipe.eof()) break;; * // check if parent wants us to shut down; * if (!str.empty()) {; * std::cout << ""[CHILD] : read: "" << str << std::endl;; * str = ""... early in the morning?"";; * }; * pipe << str << BidirMMapPipe::flush;; * if (str.empty()) break;; * if (!pipe) return -1;; * std::cout << ""[CHILD] : wrote: "" << str << std::endl;; * }; * // send shutdown request acknowledged; * pipe << """" << BidirMMapPipe::flush;; *; * pipe.close();; * return 0;; * }; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:5746,down,down,5746,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['down'],['down']
Availability,"aph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7047,error,error,7047,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"arguments; * <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; * <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 to 2, default is 1); * <tr><td> `MaxCalls(int n)` <td> Change maximum number of likelihood function calls from MINUIT (if `n <= 0`, the default of 500 * #%parameters is used); * <tr><td> `EvalErrorWall(bool flag=true)` <td> When parameters are in disallowed regions (e.g. PDF is negative), return very high value to fitter; * to force it out of that region. This can, however, mean that the fitter gets lost in this region. If; * this happens, try switching it off.; * <tr><td> `RecoverFromUndefinedRegions(double strength)` <td> When PDF is invalid (e.g. parameter in undefined region), try to direct minimiser away from that region.; * `strength` controls the magnitude of the penalty term. Leaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3586,error,errors,3586,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9542,Error,Errors,9542,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Errors']
Availability,"as been called; without effecting the decomposition result. #### Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . #### TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . #### MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:3038,toler,tolerance,3038,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['toler'],['tolerance']
Availability,"ased on original CERNLIB routine DGAUSS by Sigfried Kolbig; converted to C++ by Rene Brun. This function computes, to an attempted specified accuracy, the value; of the integral. Method:; For any interval [a,b] we define g8(a,b) and g16(a,b) to be the 8-point; and 16-point Gaussian quadrature approximations to; \f[; I = \int^{b}_{a} f(x)dx; \f]; and define; \f[; r(a,b) = \frac{\left|g_{16}(a,b)-g_{8}(a,b)\right|}{1+\left|g_{16}(a,b)\right|}; \f]; Then,; \f[; G = \sum_{i=1}^{k}g_{16}(x_{i-1},x_{i}); \f]; where, starting with \f$x_{0} = A\f$ and finishing with \f$x_{k} = B\f$,; the subdivision points \f$x_{i}(i=1,2,...)\f$ are given by; \f[; x_{i} = x_{i-1} + \lambda(B-x_{i-1}); \f]; \f$\lambda\f$ is equal to the first member of the; sequence 1,1/2,1/4,... for which \f$r(x_{i-1}, x_{i}) < EPS\f$.; If, at any stage in the process of subdivision, the ratio; \f[; q = \left|\frac{x_{i}-x_{i-1}}{B-A}\right|; \f]; is so small that 1+0.005q is indistinguishable from 1 to; machine accuracy, an error exit occurs with the function value; set equal to zero. Accuracy:; The user provides absolute and relative error bounds (epsrel and epsabs) and the; algorithm will stop when the estimated error is less than the epsabs OR is less; than |I| * epsrel.; Unless there is severe cancellation of positive and negative values of; f(x) over the interval [A,B], the relative error may be considered as; specifying a bound on the <I>relative</I> error of I in the case; |I|&gt;1, and a bound on the absolute error in the case |I|&lt;1. More; precisely, if k is the number of sub-intervals contributing to the; approximation (see Method), and if; \f[; I_{abs} = \int^{B}_{A} \left|f(x)\right|dx; \f]; then the relation; \f[; \frac{\left|G-I\right|}{I_{abs}+k} < EPS; \f]; will nearly always be true, provided the routine terminates without; printing an error message. For functions f having no singularities in; the closed interval [A,B] the accuracy will usually be much higher than; this. Error handling:; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:1103,error,error,1103,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['error'],['error']
Availability,"ast Algorithm; invented by Peter J.Rousseeuw and Katrien Van Dreissen; ""A Fast Algorithm for the Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1651,robust,robust,1651,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability,"at variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function of each block. ""flushPendingLocs"" installs debug value instructions; /// for each live-in location at the start of blocks, while ""Transfers"" records; /// transfers of values between machine-locations.; ///; /// We avoid explicitly representing the ""Unknown"" (\top) lattice value in the; /// implementation. Instead, unvisited blocks implicitly have all lattice; /// values set as ""Unknown"". After being visited, there will be path back to; /// the entry block where the lattice value is ""False"", and as the transfer; /// function cannot make new ""Unknown"" locations, there are no scenarios where; /// a block can have an ""Unknown"" location after being visited. Similarly, we; /// don't enumerate all possible variable locations ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:5239,down,down,5239,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['down'],['down']
Availability,"atex(.3,.9,""K^{*0}"");; latex.DrawLatex(.2,.8,longstring);. latex.SetTextAlign(12); //centered; latex.DrawLatex(.2,.6,""K_{S}"");; latex.DrawLatex(.3,.6,""K^{*0}"");; latex.DrawLatex(.2,.5,longstring);. latex.SetTextAlign(11); //default bottom alignment; latex.DrawLatex(.2,.4,""K_{S}"");; latex.DrawLatex(.3,.4,""K^{*0}"");; latex.DrawLatex(.2,.3,longstring);. latex.SetTextAlign(10); //special bottom alignment; latex.DrawLatex(.2,.2,""K_{S}"");; latex.DrawLatex(.3,.2,""K^{*0}"");; latex.DrawLatex(.2,.1,longstring);. latex.SetTextAlign(12);; latex.SetTextFont(72);; latex.DrawLatex(.1,.80,""13"");; latex.DrawLatex(.1,.55,""12"");; latex.DrawLatex(.1,.35,""11"");; latex.DrawLatex(.1,.18,""10"");; return Tlva;; }; End_Macro. \anchor L11; ## Character Adjustment. The two commands `#kern` and `#lower` enable a better control; over character placement. The command `#kern[(Float_t)dx]{text}` moves; the output string horizontally by the fraction `dx` of its length.; Similarly, `#lower[(Float_t)dy]{text}` shifts the text up or down by; the fraction `dy` of its height. Examples:. Begin_Macro; {; TCanvas *cl = new TCanvas(""cl"",""cl"",10,10,900,300);; TLatex Tl; Tl.SetTextFont(43); Tl.SetTextSize(20);; TLatex Tt; Tt.SetTextFont(43); Tt.SetTextSize(16);; Double_t dy = 1./7.;; Tl.DrawLatex(.5, dy, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3]{i}#kern[0.3]{n}#kern[0.3]{g}"");; Tt.DrawText(.01, 2*dy, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3]{i}#kern[0.3]{n}#kern[0.3]{g} :"");; Tl.DrawLatex(.5, 3*dy, ""Negative k#kern[-0.3]{e}#kern[-0.3]{r}#kern[-0.3]{n}#kern[-0.3]{i}#kern[-0.3]{n}#kern[-0.3]{g}"");; Tt.DrawText(.01, 4*dy, ""Negative k#kern[-0.3]{e}#kern[-0.3]{r}#kern[-0.3]{n}#kern[-0.3]{i}#kern[-0.3]{n}#kern[-0.3]{g} :"");; Tl.DrawLatex(.5, 5*dy, ""Vertical a#lower[0.2]{d}#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]{t}#lower[-0.4]{m}#lower[-0.2]{e}#lower[0.1]{n}t"");; Tt.DrawText(.01, 6*dy, ""Vertical a#lower[0.2]{d}#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx:9208,down,down,9208,graf2d/graf/src/TLatex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx,1,['down'],['down']
Availability,"ation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3505,error,error,3505,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"ause the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(hmin)<<std::endl;. }; \endcode. Output; \code; Processing Minimization.C...; ----",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:2395,toler,tolerance,2395,bindings/r/inc/TRFunctionExport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h,1,['toler'],['tolerance']
Availability,"averaging; /// <tr><td> `ProjectionRange(const char* rn)` <td> When projecting the PDF onto the plot axis, it is usually integrated; /// over the full range of the invisible variables. The ProjectionRange overrides this.; /// This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensure proper closure; /// <tr><td> `FillColor(Int_t color)` <td> Select fill color by ROOT color code; /// <tr><td> `Range(const char* name)` <td> Only draw curve in range defined by given name. Multiple comma-separated ranges can be given.; /// An empty string """" or `nullptr` means to use the default range of the variable.; /// <tr><td> `Range(double lo, double hi)` <td> Only draw curve in specified range; /// <tr><td> `VLines()` <td> Add vertical lines to y=0 at end points of curve; /// <tr><td> `Precision(double eps)` <td> Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. A higher precision will; /// result in more and more densely spaced curve points. A negative precision value will disable; /// adaptive point spacing and restrict sampling to the grid point of points defined by the binning; /// of the plotted observable (recommended for expensive functions such as profile likelihoods); /// <tr><td> `Invisible(bool flag)` <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// <",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6011,down,downward,6011,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['down'],['downward']
Availability,"ay be changed at any time.; /// The new compression settings will only apply to branches created; /// or attached after the setting is changed and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects inside TFile. As drawback, TRef objects stored; /// in such file cannot be read correctly.; ///; /// In case the name of the file is not reproducible either (in case of; /// creating temporary filenames) a value can be passed to the reproducibl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:5346,Recover,Recover,5346,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Recover'],['Recover']
Availability,"b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Source code file.; Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Sept 2001: fixed const & error conditions per; mods suggested by S. Parent & A. Lillich.; June 2002: Tim Dodd added detection and handling of incomplete; source sequences, enhanced error detection, added casts; to eliminate compiler warnings.; July 2003: slight mods to back out aggressive FFFE detection.; Jan 2004: updated switches in from-UTF8 conversions.; Oct 2004: updated to use UNI_MAX_LEGAL_UTF32 in UTF-32 conversions. See the header file ""ConvertUTF.h"" for complete documentation. ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:2625,error,error,2625,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,2,['error'],['error']
Availability,"badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:10593,recover,recovers,10593,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['recover'],['recovers']
Availability,"bdir` of file `f.root` (creating file and sub-directory as needed).; ///; /// \attention In multi-thread runs (i.e. when EnableImplicitMT() has been called) threads will loop over clusters of; /// entries in an undefined order, so Snapshot will produce outputs in which (clusters of) entries will be shuffled with; /// respect to the input TTree. Using such ""shuffled"" TTrees as friends of the original trees would result in wrong; /// associations between entries in the main TTree and entries in the ""shuffled"" friend. Since v6.22, ROOT will; /// error out if such a ""shuffled"" TTree is used in a friendship.; ///; /// \note In case no events are written out (e.g. because no event passes all filters) the behavior of Snapshot in; /// single-thread and multi-thread runs is different: in single-thread runs, Snapshot will write out a TTree with; /// the specified name and zero entries; in multi-thread runs, no TTree object will be written out to disk.; ///; /// \note Snapshot will refuse to process columns with names of the form `#columnname`. These are special columns; /// made available by some data sources (e.g. RNTupleDS) that represent the size of column `columnname`, and are; /// not meant to be written out with that name (which is not a valid C++ variable name). Instead, go through an; /// Alias(): `df.Alias(""nbar"", ""#bar"").Snapshot(..., {""nbar""})`.; ///; /// ### Example invocations:; ///; /// ~~~{.cpp}; /// // without specifying template parameters (column types automatically deduced); /// df.Snapshot(""outputTree"", ""outputFile.root"", {""x"", ""y""});; ///; /// // specifying template parameters (""x"" is `int`, ""y"" is `float`); /// df.Snapshot<int, float>(""outputTree"", ""outputFile.root"", {""x"", ""y""});; /// ~~~; ///; /// To book a Snapshot without triggering the event loop, one needs to set the appropriate flag in; /// `RSnapshotOptions`:; /// ~~~{.cpp}; /// RSnapshotOptions opts;; /// opts.fLazy = true;; /// df.Snapshot(""outputTree"", ""outputFile.root"", {""x""}, opts);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3026,avail,available,3026,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['avail'],['available']
Availability,"ble generic pointers with; // equivalent specific pointers.; //; // The major challenge of implementing this optimization is handling PHINodes,; // which may create loops in the data flow graph. This brings two complications.; //; // First, the data flow analysis in Step 1 needs to be circular. For example,; // %generic.input = addrspacecast float addrspace(3)* %input to float*; // loop:; // %y = phi [ %generic.input, %y2 ]; // %y2 = getelementptr %y, 1; // %v = load %y2; // br ..., label %loop, ...; // proving %y specific requires proving both %generic.input and %y2 specific,; // but proving %y2 specific circles back to %y. To address this complication,; // the data flow analysis operates on a lattice:; // uninitialized > specific address spaces > generic.; // All address expressions (our implementation only considers phi, bitcast,; // addrspacecast, and getelementptr) start with the uninitialized address space.; // The monotone transfer function moves the address space of a pointer down a; // lattice path from uninitialized to specific and then to generic. A join; // operation of two different specific address spaces pushes the expression down; // to the generic address space. The analysis completes once it reaches a fixed; // point.; //; // Second, IR rewriting in Step 2 also needs to be circular. For example,; // converting %y to addrspace(3) requires the compiler to know the converted; // %y2, but converting %y2 needs the converted %y. To address this complication,; // we break these cycles using ""poison"" placeholders. When converting an; // instruction `I` to a new address space, if its operand `Op` is not converted; // yet, we let `I` temporarily use `poison` and fix all the uses later.; // For instance, our algorithm first converts %y to; // %y' = phi float addrspace(3)* [ %input, poison ]; // Then, it converts %y2 to; // %y2' = getelementptr %y', 1; // Finally, it fixes the poison in %y' so that; // %y' = phi float addrspace(3)* [ %input, %y2' ]; //; //===-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:3669,down,down,3669,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['down'],['down']
Availability,"ble_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///; ///; /// #### Warning when using the option ""0""; ///; /// When selecting the option ""0"", the fitted function is added to; /// the list of functions of the histogram, but it is not drawn when the histogram is drawn.; /// You can undo this behaviour resetting its corresponding bit in the TF1 object as following:; ///; /// ~~~ {.cpp}; /// h.Fit(""myFunction"", ""0""); // fit, store function but do not draw; /// h.Draw(); // function is not drawn; /// h.GetFunction(""myFunction"")->ResetBit(TF1::kNotDraw);; /// h.Draw(); // function is visible again; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18833,error,errors,18833,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['error'],"['errorp', 'errors']"
Availability,"brief A version of the TBrowser that can be used to interact with RooFit models and datasets. Also available under the ROOT::Experimental::RooBrowser alias. To get started with the xRooBrowser, open any ROOT file containing a workspace; and then create an instance of the xRooBrowser just like; creating an instance of a `TBrowser`. A window will be displayed with a navigable; tree structure on the left that lets you explore the content of the workspaces; present in the loaded file. Note that additional files, <b>including json workspace files</b>,; can be loaded through the `Browser --> Open` menu in the top left corner. The context menu for each node (access by right clicking on the node) in the tree structure can be used to get more; information about the node. In particular, the `Draw` command can be selected on many of the nodes that are part of a; statistical model, which will visualize that part of the model in the browser window. A number of options are available; for the `Draw` command, including (some options can be combined):. - ""e"" : calculate and visualize propagated model uncertainty; - ""auxratio"" : Draw a ratio auxiliary plot below the main plot; - ""auxsignif"" : Draw a significance auxiliary plot below the main plot; - ""pull"" : show panel of current parameter values, which can be dragged in order to change the values and visualize the; effect on the model (very experimental feature). Once a node has been drawn, the styling of subsequent draws can be controlled through `TStyle` objects; that will now appear in the `objects` folder in the workspace. A model can be fit to a dataset from the workspace using the `fitTo` context menu command and specifying; the name of a dataset in the workspace (if no name is given, an expected dataset corresponding to the; current state of the model will be used). A dialog will display the fit result status code when the; fit completes and then a `fits` folder will be found under the workspace (the workspace may need to; be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx:1374,avail,available,1374,roofit/xroofit/src/xRooBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx,1,['avail'],['available']
Availability,"builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribute, mapping each one directly to the clang builtin. And the; // polymorphic ones have __attribute__((overloadable)) as well. So once the; // compiler has resolved the overload, it knows the internal builtin ID of the; // selected function, and can check the immediate arguments against that; and; // if the user gets the types wrong in a call to a polymorphic intrinsic, they; // get a completely clear error message showing all the declarations of that; // function in the header file and explaining why each one doesn't fit their; // call.; //; // The downside of this is that if every clang builtin has to correspond; // exactly to a user-facing ACLE intrinsic, then you can't save work in the; // frontend by doing it in the header file: CGBuiltin.cpp has to do the entire; // job of converting an ACLE intrinsic call into LLVM IR. So the Tablegen; // description for an MVE intrinsic has to contain a full description of the; // sequence of IRBuilder calls that clang will need to make.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:2897,error,error,2897,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,"['down', 'error']","['downside', 'error']"
Availability,"by placing every instruction from every basic block in a; /// suffix tree, and repeatedly querying that tree for repeated sequences of; /// instructions. If a sequence of instructions appears often, then it ought; /// to be beneficial to pull out into a function.; ///; /// The MachineOutliner communicates with a given target using hooks defined in; /// TargetInstrInfo.h. The target supplies the outliner with information on how; /// a specific sequence of instructions should be outlined. This information; /// is used to deduce the number of instructions necessary to; ///; /// * Create an outlined function; /// * Call that outlined function; ///; /// Targets must implement; /// * getOutliningCandidateInfo; /// * buildOutlinedFrame; /// * insertOutlinedCall; /// * isFunctionSafeToOutlineFrom; ///; /// in order to make use of the MachineOutliner.; ///; /// This was originally presented at the 2016 LLVM Developers' Meeting in the; /// talk ""Reducing Code Size Using Outlining"". For a high-level overview of; /// how this pass works, the talk is available on YouTube at; ///; /// https://www.youtube.com/watch?v=yorld-WSOeU; ///; /// The slides for the talk are available at; ///; /// http://www.llvm.org/devmtg/2016-11/Slides/Paquette-Outliner.pdf; ///; /// The talk provides an overview of how the outliner finds candidates and; /// ultimately outlines them. It describes how the main data structure for this; /// pass, the suffix tree, is queried and purged for candidates. It also gives; /// a simplified suffix tree construction algorithm for suffix trees based off; /// of the algorithm actually used here, Ukkonen's algorithm.; ///; /// For the original RFC for this pass, please see; ///; /// http://lists.llvm.org/pipermail/llvm-dev/2016-August/104170.html; ///; /// For more information on the suffix tree data structure, please see; /// https://www.cs.helsinki.fi/u/ukkonen/SuffixT1withFigs.pdf; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp:1535,avail,available,1535,interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,2,['avail'],['available']
Availability,"cale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1436,error,error,1436,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"calls, users are; not limited to string expressions but they can also pass any valid C++ callable, including lambda functions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple columns in lockstep. In the following Python snippet we use the Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, Va",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:58399,down,down,58399,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"ce correction *; * as separation criterion *; * Gini(Sample M) = 1 - (c(1)/N)^2 - (c(2)/N)^2 .... - (c(k)/N)^2 *; * Where: M is a sample of whatever N elements (events) *; * that belong to K different classes *; * c(k) is the number of elements that belong to class k *; * Laplace's correction to the prob.density c/N --> (c+1)/(N+2) *; * for just Signal and Background classes this then boils down to: *; * Gini(Sample) = 2(s*b+s+b+1)/(s+b+2)^2 *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::GiniIndexWithLaplace; \ingroup TMVA. Implementation of the GiniIndex With Laplace correction as separation criterion. Large Gini Indices (maximum 0.5) mean , that the sample is well mixed (same; amount of signal and bkg) bkg. Small Indices mean, well separated. #### General definition:. \f[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \f]. Where:. \f$ M \f$ is a sample of whatever \f$ N \f$ elements (events) that belong; to \f$ K \f$ different classes. \f$ c(k) \f$ is the number of elements that belong to class \f$ k \f$ for just; Signal and Background classes this boils down to:. The Laplace's correction to the probability distribution would turn the; \f$ \frac{c(1)}{N} \f$ into \f$ \frac{(c(1)+1)}{(N+2)} \f$ using this the; simple Gini Index for two classes. \f[; Gini(Sample) = \frac{2sb}{(s+b)^2}; \f]. turns into. \f[; GiniLaplace(Sample) = \frac{2(sb+s+b+1)}{(s+b+2)^2}; \f]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx:2050,down,down,2050,tmva/tmva/src/GiniIndexWithLaplace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GiniIndexWithLaplace.cxx,1,['down'],['down']
Availability,"ce of the imported histogram.; /// <tr><td> Import(const char*, RooAbsData&); /// <td> Import a RooDataSet or RooDataHist to be associated with the given state name of the index category; /// specified in Index(). If the given state name is not yet defined in the index; /// category it will be added on the fly. The import command can be specified multiple times.; /// <tr><td> Link(const char*, RooDataSet&) <td> Link contents of supplied RooDataSet to this dataset for given index category state name.; /// In this mode, no data is copied and the linked dataset must be remain live for the duration; /// of this dataset. Note that link is active for both reading and writing, so modifications; /// to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive.; /// <tr><td> OwnLinked() <td> Take ownership of all linked datasets; /// <tr><td> Import(std::map<string,RooAbsData*>&) <td> As above, but allows specification of many imports in a single operation; /// <tr><td> Link(std::map<string,RooDataSet*>&) <td> As above, but allows specification of many links in a single operation; /// <tr><td> Cut(const char*) <br>; /// Cut(RooFormulaVar&); /// <td> Apply the given cut specification when importing data; /// <tr><td> CutRange(const char*) <td> Only accept events in the observable range with the given name; /// <tr><td> WeightVar(const char*) <br>; /// WeightVar(const RooAbsArg&); /// <td> Interpret the given variable as event weight rather than as observable; /// <tr><td> StoreError(const RooArgSet&) <td> Store symmetric error along with value for given subset of observables; /// <tr><td> StoreAsymError(const RooArgSet&) <td> Store asymmetric error along with value for given subset of observables; /// <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of global observables to be stored in this RooDataSet.; /// A snapshot of the passed RooArgSet is stored, meaning the values wont't change unexpectedly.; /// </table>; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:2560,error,error,2560,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,['error'],['error']
Availability,"ce to nearest limit divided by distance between limits).; The user must therefore be aware of the fact that, for example,; if he puts limits of \f$(0,10^{10})\f$ on a parameter, then the values \f$0.0\f$; and \f$1.0\f$ will be indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course,; so Minuit does a transformation of the error matrix (and the; ``parabolic'' parameter errors) when there are parameter limits.; Users should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; Therefore, it is recommended that:. 1. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values. 2. When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. ### How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. #### Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the existence of limits has probably not prevented MINUIT; from finding the right minimum. On the other hand, if one or more; parameters is near its limi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:5029,error,error,5029,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"cept that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9997,error,errors,9997,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1812,error,error,1812,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,2,['error'],['error']
Availability,"changed using the method `SetMarkerStyle` and retrieved using the; method `GetMarkerStyle`. The following list gives the currently supported markers (screen; and PostScript) style. Each marker style is identified by an integer number; (first column) corresponding to a marker shape (second column) and can be also; accessed via a global name (third column). ~~~ {.cpp}; Marker number Marker shape Marker name; 1 dot kDot; 2 + kPlus; 3 * kStar; 4 o kCircle; 5 x kMultiply; 6 small dot kFullDotSmall; 7 medium dot kFullDotMedium; 8 large scalable dot kFullDotLarge; 9 -->19 large scalable dot; 20 full circle kFullCircle; 21 full square kFullSquare; 22 full triangle up kFullTriangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kFullStar; 30 open star kOpenStar; 31 *; 32 open triangle down kOpenTriangleDown; 33 full diamond kFullDiamond; 34 full cross kFullCross; 35 open diamond cross kOpenDiamondCross; 36 open square diagonal kOpenSquareDiagonal; 37 open three triangle kOpenThreeTriangles; 38 octagon with cross kOctagonCross; 39 full three triangles kFullThreeTriangles; 40 open four triangleX kOpenFourTrianglesX; 41 full four triangleX kFullFourTrianglesX; 42 open double diamond kOpenDoubleDiamond; 43 full double diamond kFullDoubleDiamond; 44 open four triangle+ kOpenFourTrianglesPlus; 45 full four triangle+ kFullFourTrianglesPlus; 46 open cross X kOpenCrossX; 47 full cross X kFullCrossX; 48 four squares X kFourSquaresX; 49 four squares+ kFourSquaresPlus; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; }; End_Macro. \warning Non-symmetric symbols should be used carefully. See markerwarning.C. \anchor ATTMARKER21; ### Marker line width. The line width of a marker is not actually a marker attribute since it does; only apply to open marker sy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx:2510,down,down,2510,core/base/src/TAttMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx,2,['down'],['down']
Availability,"channel (see TH1 documentation); \class TH1F; \brief 1-D histogram with a float per channel (see TH1 documentation); \class TH1D; \brief 1-D histogram with a double per channel (see TH1 documentation); @}; */; /** \class TH1; \ingroup Histograms; TH1 is the base class of all histogram classes in %ROOT. It provides the common interface for operations such as binning, filling, drawing, which; will be detailed below. -# [Creating histograms](\ref creating-histograms); - [Labelling axes](\ref labelling-axis); -# [Binning](\ref binning); - [Fix or variable bin size](\ref fix-var); - [Convention for numbering bins](\ref convention); - [Alphanumeric Bin Labels](\ref alpha); - [Histograms with automatic bins](\ref auto-bin); - [Rebinning](\ref rebinning); -# [Filling histograms](\ref filling-histograms); - [Associated errors](\ref associated-errors); - [Associated functions](\ref associated-functions); - [Projections of histograms](\ref prof-hist); - [Random Numbers and histograms](\ref random-numbers); - [Making a copy of a histogram](\ref making-a-copy); - [Normalizing histograms](\ref normalizing); -# [Drawing histograms](\ref drawing-histograms); - [Setting Drawing histogram contour levels (2-D hists only)](\ref cont-level); - [Setting histogram graphics attributes](\ref graph-att); - [Customising how axes are drawn](\ref axis-drawing); -# [Fitting histograms](\ref fitting-histograms); -# [Saving/reading histograms to/from a ROOT file](\ref saving-histograms); -# [Operations on histograms](\ref operations-on-histograms); -# [Miscellaneous operations](\ref misc). ROOT supports the following histogram types:. - 1-D histograms:; - TH1C : histograms with one byte per channel. Maximum bin content = 127; - TH1S : histograms with one short per channel. Maximum bin content = 32767; - TH1I : histograms with one int per channel. Maximum bin content = INT_MAX (\ref intmax ""*""); - TH1L : histograms with one long64 per channel. Maximum bin content = LLONG_MAX (\ref llongmax ""**""); - ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1156,error,errors,1156,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleEr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1661,failure,failure,1661,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['failure'],['failure']
Availability,"cluded; // from the ""Conditional Store"" list. Because a predicated new value store; // would NOT be promoted to a double dot new store. See diagram below:; // This function returns yes for those stores that are predicated but not; // yet promoted to predicate dot new instructions.; //; // +---------------------+; // /-----| if (p0) memw(..)=r0 |---------\~; // || +---------------------+ ||; // promote || /\ /\ || promote; // || /||\ /||\ ||; // \||/ demote || \||/; // \/ || || \/; // +-------------------------+ || +-------------------------+; // | if (p0.new) memw(..)=r0 | || | if (p0) memw(..)=r0.new |; // +-------------------------+ || +-------------------------+; // || || ||; // || demote \||/; // promote || \/ NOT possible; // || || /\~; // \||/ || /||\~; // \/ || ||; // +-----------------------------+; // | if (p0.new) memw(..)=r0.new |; // +-----------------------------+; // Double Dot New Store; //; // Returns the most basic instruction for the .new predicated instructions and; // new-value stores.; // For example, all of the following instructions will be converted back to the; // same instruction:; // 1) if (p0.new) memw(R0+#0) = R1.new --->; // 2) if (p0) memw(R0+#0)= R1.new -------> if (p0) memw(R0+#0) = R1; // 3) if (p0.new) memw(R0+#0) = R1 --->; //; // To understand the translation of instruction 1 to its original form, consider; // a packet with 3 instructions.; // { p0 = cmp.eq(R0,R1); // if (p0.new) R2 = add(R3, R4); // R5 = add (R3, R1); // }; // if (p0) memw(R5+#0) = R2 <--- trying to include it in the previous packet; //; // This instruction can be part of the previous packet only if both p0 and R2; // are promoted to .new values. This promotion happens in steps, first; // predicate register is promoted to .new and in the next iteration R2 is; // promoted. Therefore, in case of dependence check failure (due to R5) during; // next iteration, it should be converted back to its most basic form.; // Return the new value instruction for a given store.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:3040,failure,failure,3040,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['failure'],['failure']
Availability,"commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden line removal. |; | ""LEGO1"" | Draw a lego plot with hidden surface removal. |; | ""LEGO2"" | Draw a lego plot using colors to show the cell contents When the option ""0"" is used with any LEGO option, the empty bins are not drawn.|; | ""LEGO3"" | Draw a lego plot with hidden surface removal, like LEGO1 but the border",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6298,error,errors,6298,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability,"const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the index of the lowest set bit or the; /// highest set bit is returned. \n; /// 0: The index of the least significant set bit. \n; /// 1: The index of the most significant set bit. \n; /// \returns Returns an integer representing the result index of the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1828,mask,mask,1828,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['mask'],['mask']
Availability,"contains one `#include` statement per generated header file; /// - <em>dirnameProjectSource.cxx</em>,which contains all the constructors and destructors implementation.; /// and one header per class that is not nested inside another class.; /// The header file name is the fully qualified name of the class after all the special characters; /// ""<>,:"" are replaced by underscored. For example for std::pair<edm::Vertex,int> the file name is; /// pair_edm__Vertex_int_.h; ///; /// In the generated classes, map, multimap when the first template parameter is a class; /// are replaced by a vector of pair. set and multiset when the tempalte parameter; /// is a class are replaced by a vector. This is required since we do not have the; /// code needed to order and/or compare the object of the classes.; /// This is a quick explanation of the options available:; /// Option | Details; /// -------|--------; /// new (default) | A new directory dirname is created. If dirname already exist, an error message is printed and the function returns.; /// recreate | If dirname does not exist, it is created (like in ""new""). If dirname already exist, all existing files in dirname are deleted before creating the new files.; /// update | New classes are added to the existing directory. Existing classes with the same name are replaced by the new definition. If the directory dirname doest not exist, same effect as ""new"".; /// genreflex | Use genreflex rather than rootcint to generate the dictionary.; /// par | Create a PAR file with the minimal set of code needed to read the content of the ROOT file. The name of the PAR file is basename(dirname), with extension '.par' enforced; the PAR file will be created at dirname(dirname).; ///; /// If, in addition to one of the 3 above options, the option ""+"" is specified,; /// the function will generate:; /// - a script called MAKEP to build the shared lib; /// - a dirnameLinkDef.h file; /// - rootcint will be run to generate a dirnameProjectDict.cxx file; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1534,error,error,1534,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['error'],['error']
Availability,"cpp}; legend->SetTextAlign(11);; ~~~; The default value of some `TLegend` attributes can be changed using; `gStyle`. The default settings are:; ~~~ {.cpp}; SetLegendBorderSize(1);; SetLegendFillColor(0);; SetLegendFont(42);; SetLegendTextSize(0.);; ~~~; The global attributes change the default values for the next created legends. Text attributes can be also changed individually on each legend entry:; ~~~ {.cpp}; TLegendEntry *le = leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; le->SetTextColor(kBlue);; ~~~. Note that the `TPad` class has a method to build automatically a legend; for all objects in the pad. It is called `TPad::BuildLegend()`. Each item in the legend is added using the `AddEntry` method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. - L: draw line associated with TAttLine if obj inherits from TAttLine; - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; - E: draw vertical error bar. As shown in the following example, passing a NULL pointer as first parameter in; `AddEntry` is also valid. This allows to add text or blank lines in a; legend. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",500,300);. auto* legend = new TLegend(0.2, 0.2, .8, .8);; auto h = new TH1F("""", """", 1, 0, 1);. legend->AddEntry(h, ""Histogram \""h\"""", ""l"");; legend->AddEntry((TObject*)0, """", """");; legend->AddEntry((TObject*)0, ""Some text"", """");; legend->AddEntry((TObject*)0, """", """");; legend->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. legend->Draw();; }; End_Macro. It is possible to draw the legend entries over several columns using; the method `SetNColumns()` like in the following example. Begin_Macro(source); {; auto c3 = new TCanvas(""c2"",""c2"",500,300);. auto legend = new TLegend(0.2, 0.2, .8, .8);; auto h = new TH1F("""", """", 1, 0, 1);. legend->SetNColumns(2);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:3582,error,error,3582,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,1,['error'],['error']
Availability,"cy in double precision floating point arithmetic; * for most of the upper half of the complex plane, chose @f$t_m=12@f$ and; * @f$N=23@f$ as is done in the paper.; *; * There are two complications: For Im(z) negative, the exponent in the; * equation above becomes so large that the roundoff in the rest of the; * calculation is amplified enough that the result cannot be trusted.; * Therefore, for Im(z) < 0, the symmetry of the erfc function under the; * transformation z --> -z is used to avoid accuracy issues for Im(z) < 0 by; * formulating the problem such that the calculation can be done for Im(z) > 0; * where the accuracy of the method is fine, and some postprocessing then; * yields the desired final result.; *; * Second, the denominators in the equation above become singular at; * @f$z = n * pi / 12@f$ (for 0 <= n < 24). In a tiny disc around these; * points, Taylor expansions are used to overcome that difficulty.; *; * This routine precomputes everything it can, and tries to write out complex; * operations to minimise subroutine calls, e.g. for the multiplication of; * complex numbers.; *; * In the square -8 <= Re(z) <= 8, -8 <= Im(z) <= 8, the routine is accurate; * to better than 4e-13 relative, the average relative error is better than; * 7e-16. On a modern x86_64 machine, the routine is roughly three times as; * fast than the old CERNLIB implementation and offers better accuracy.; *; * For large @f$|z|@f$, the familiar continued fraction approximation; *; * @f[ w(z)=\frac{-iz/\sqrt{\pi}}{-z^2+\frac{1/2}{1+\frac{2/2}{-z^2 +; * \frac{3/2}{1+\frac{4/2}{-z^2+\frac{5/2}{1+\frac{6/2}{-z^2+\frac{7/2; * }{1+\frac{8/2}{-z^2+\frac{9/2}{1+\ldots}}}}}}}}}} @f]; *; * is used, truncated at the ellipsis (""..."") in the formula; for @f$|z| >; * 12@f$, @f$Im(z)>0@f$ it will give full double precision at a smaller; * computational cost than the method described above. (For @f$|z|>12@f$,; * @f$Im(z)<0@f$, the symmetry property @f$w(x-iy)=2e^{-(x+iy)^2-w(x+iy)}@f$; * is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:2310,error,error,2310,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,1,['error'],['error']
Availability,"d 16-point Gaussian quadrature approximations to; \f[; I = \int^{b}_{a} f(x)dx; \f]; and define; \f[; r(a,b) = \frac{\left|g_{16}(a,b)-g_{8}(a,b)\right|}{1+\left|g_{16}(a,b)\right|}; \f]; Then,; \f[; G = \sum_{i=1}^{k}g_{16}(x_{i-1},x_{i}); \f]; where, starting with \f$x_{0} = A\f$ and finishing with \f$x_{k} = B\f$,; the subdivision points \f$x_{i}(i=1,2,...)\f$ are given by; \f[; x_{i} = x_{i-1} + \lambda(B-x_{i-1}); \f]; \f$\lambda\f$ is equal to the first member of the; sequence 1,1/2,1/4,... for which \f$r(x_{i-1}, x_{i}) < EPS\f$.; If, at any stage in the process of subdivision, the ratio; \f[; q = \left|\frac{x_{i}-x_{i-1}}{B-A}\right|; \f]; is so small that 1+0.005q is indistinguishable from 1 to; machine accuracy, an error exit occurs with the function value; set equal to zero. Accuracy:; The user provides absolute and relative error bounds (epsrel and epsabs) and the; algorithm will stop when the estimated error is less than the epsabs OR is less; than |I| * epsrel.; Unless there is severe cancellation of positive and negative values of; f(x) over the interval [A,B], the relative error may be considered as; specifying a bound on the <I>relative</I> error of I in the case; |I|&gt;1, and a bound on the absolute error in the case |I|&lt;1. More; precisely, if k is the number of sub-intervals contributing to the; approximation (see Method), and if; \f[; I_{abs} = \int^{B}_{A} \left|f(x)\right|dx; \f]; then the relation; \f[; \frac{\left|G-I\right|}{I_{abs}+k} < EPS; \f]; will nearly always be true, provided the routine terminates without; printing an error message. For functions f having no singularities in; the closed interval [A,B] the accuracy will usually be much higher than; this. Error handling:; The requested accuracy cannot be obtained (see Method).; The function value is set equal to zero. Note 1:; Values of the function f(x) at the interval end-points A and B are not; required. The subprogram may therefore be used when these values are; undefined; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:1474,error,error,1474,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,5,"['Error', 'error']","['Error', 'error']"
Availability,"d a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ###",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20144,error,error,20144,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"d and for every file; /// found, an event is synthesized as if the file was added.; ///; /// This is not a general purpose directory monitoring tool - list of; /// limitations follows.; ///; /// Only flat directories with no subdirectories are supported. In case; /// subdirectories are present the behavior is unspecified - events *might* be; /// passed to Receiver on macOS (due to FSEvents being used) while they; /// *probably* won't be passed on Linux (due to inotify being used).; ///; /// Known potential inconsistencies; /// - For files that are deleted befor the initial scan processed them, clients; /// might receive Removed notification without any prior Added notification.; /// - Multiple notifications might be produced when a file is added to the; /// watched directory during the initial scan. We are choosing the lesser evil; /// here as the only known alternative strategy would be to invalidate the; /// watcher instance and force user to create a new one whenever filesystem; /// event occurs during the initial scan but that would introduce continuous; /// restarting failure mode (watched directory is not always ""owned"" by the same; /// process that is consuming it). Since existing clients can handle duplicate; /// events well, we decided for simplicity.; ///; /// Notifications are provided only for changes done through local user-space; /// filesystem interface. Specifically, it's unspecified if notification would; /// be provided in case of a:; /// - a file mmap-ed and changed; /// - a file changed via remote (NFS) or virtual (/proc) FS access to monitored; /// directory; /// - another filesystem mounted to the watched directory; ///; /// No support for LLVM VFS.; ///; /// It is unspecified whether notifications for files being deleted are sent in; /// case the whole watched directory is sent.; ///; /// Directories containing ""too many"" files and/or receiving events ""too; /// frequently"" are not supported - if the initial scan can't be finished before; /// th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h:1291,failure,failure,1291,interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,1,['failure'],['failure']
Availability,"d arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6852,Error,Error,6852,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Error']
Availability,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2564,recover,recovered,2564,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['recover'],['recovered']
Availability,"d of the event loop.; void Finalize(); {; *fFinalResult = std::accumulate(fPerThreadResults.begin(), fPerThreadResults.end(), 0);; }. // Called by RDataFrame to retrieve the name of this action.; std::string GetActionName() const { return ""MyCounter""; }; };. int main() {; ROOT::RDataFrame df(10);; ROOT::RDF::RResultPtr<int> resultPtr = df.Book<>(MyCounter{df.GetNSlots()}, {});; // The GetValue call triggers the event loop; std::cout << ""Number of processed entries: "" << resultPtr.GetValue() << std::endl;; }; ~~~. See the Book() method for more information and [this tutorial](https://root.cern/doc/master/df018__customActions_8C.html); for a more complete example. #### Injecting arbitrary code in the event loop with Foreach() and ForeachSlot(). Foreach() takes a callable (lambda expression, free function, functor...) and a list of columns and; executes the callable on the values of those columns for each event that passes all upstream selections.; It can be used to perform actions that are not already available in the interface. For example, the following snippet; evaluates the root mean square of column ""x"":; ~~~{.cpp}; // Single-thread evaluation of RMS of column ""x"" using Foreach; double sumSq = 0.;; unsigned int n = 0;; df.Foreach([&sumSq, &n](double x) { ++n; sumSq += x*x; }, {""x""});; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; In multi-thread runs, users are responsible for the thread-safety of the expression passed to Foreach():; thread will execute the expression concurrently.; The code above would need to employ some resource protection mechanism to ensure non-concurrent writing of `rms`; but; this is probably too much head-scratch for such a simple operation. ForeachSlot() can help in this situation. It is an alternative version of Foreach() for which the function takes an; additional ""processing slot"" parameter besides the columns it should be applied to. RDataFrame; guarantees that ForeachSlot() will invoke the user expression wit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:69531,avail,available,69531,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"d to generate; /// the ROOT reference guide.; ///; /// ## In the ROOT classes; ///; /// ### `Begin_Macro` and `End_Macro`; /// The two tags where used the THtml version to generate images from ROOT code.; /// The generated picture is inlined exactly at the place where the macro is; /// defined. The Macro can be defined in two way:; /// - by direct in-lining of the C++ code; /// - by a reference to a C++ file; /// The tag `Begin_Macro` can have the parameter `(source)`. The directive becomes:; /// `Begin_Macro(source)`. This parameter allows to show the macro's code in addition.; /// `Begin_Macro` also accept the image file type as option. ""png"" or ""svg"".; /// ""png"" is the default value. For example: `Begin_Macro(source, svg)` will show; /// the code of the macro and the image will be is svg format. The ""width"" keyword; /// can be added to define the width of the picture in pixel: ""width=400"" will; /// scale a picture to 400 pixel width. This allow to define large pictures which; /// can then be scaled down to have a better definition.; ///; /// ## In the ROOT tutorials; ///; /// ROOT tutorials are also included in the ROOT documentation. The tutorials'; /// macros headers should look like:; ///; /// ~~~ {.cpp}; /// \file; /// \ingroup tutorial_hist; /// \notebook; /// Getting Contours From TH2D.; ///; /// #### Image produced by `.x ContourList.C`; /// The contours values are drawn next to each contour.; /// \macro_image; ///; /// #### Output produced by `.x ContourList.C`; /// It shows that 6 contours and 12 graphs were found.; /// \macro_output; ///; /// #### `ContourList.C`; /// \macro_code; ///; /// \authors Josh de Bever, Olivier Couet; /// ~~~; ///; /// This example shows that four new directives have been implemented:; ///; /// 1. `\macro_image`; /// The images produced by this macro are shown. A caption can be added to document; /// the pictures: `\macro_image This is a picture`. When the option `(nobatch)`; /// is passed, the macro is executed without the ba",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:1161,down,down,1161,documentation/doxygen/filter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx,1,['down'],['down']
Availability,"d with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing bot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:1728,avail,available,1728,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['avail'],['available']
Availability,"d, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning P",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4793,error,errors,4793,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"d. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleErrors, except; /// that it has a void return type, and requires all errors to be handled and; /// no new errors be returned. It prevents errors (assuming they can all be; /// handled) from having to be bubbled all the way to the top-level.; ///; /// *All* Error instances must be checked before destruction, even if; /// they're moved-assigned or constructed from Success values that have already; /// been checked. This enforces checking through all levels of the call stack.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:2170,error,error,2170,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"d; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_X11_font() attempts to load and query font using Xlib calls.; * On success it goes thgroughthe codemap of the font and renders all; * the glyphs available. Glyphs then gets transfered to the client's; * memory and encoded using RLE compression. At this time smoothing; * filters are applied on glyph pixmaps, if its size exceeds threshold.; * TODO; * implement proper XFontSet support, when used with I18N enabled.; *********/; /****f* libAfterImage/asfont/get_asfont(); * NAME; * get_asfont(); * SYNOPSIS; * ASFont *get_asfont( ASFontManager *fontman,; * const char *font_string,; * int face_no, int size,; * ASFontType type );; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, path to search fonts; * in, and X Server connection.; * font_string - font name or filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * type - specifies the type of the font, or GuessWho for; * autodetection.; * RETURN VALUE; * pointe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:2152,avail,available,2152,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['avail'],['available']
Availability,"d_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present in the; /// spectrum. We proposed the algorithm of the background estimate with; /// simultaneous smoothing. In the original algorithm without smoothing, the; /// estimated background snatches the lower spikes in the noise. Consequently,; /// the areas of peaks are biased by this error.; ///; /// \image html TSpectrum_Background_smooth1.jpg Principle of background estimation algorithm with simultaneous smoothing.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_smooth.C; /// End_Macro; ///; /// ### Example 8 script Background_compton.C:; ///; /// Sometimes it is necessary to include also the Compton edges into the estimate of; /// the background. This example presents the synthetic spectrum; /// with Compton edges. The background was estimated using the 8-th order filter; /// with the estimation of the Compton edges using decreasing; /// clipping window algorithm (numberIterations=10) with smoothing; /// (smoothingWindow=5).; ///; /// Example of the estimate of the background with Compton edges (red line) for; /// numberIterations=10, 8-th order difference filter, using decreasing clipping; /// window algorithm and smoothing (smoothingWindow=5).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Bac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5660,error,error,5660,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['error'],['error']
Availability,"def for THnSparseT<ArrayD>): bin content held by a Double_t,; - THnSparseF (typedef for THnSparseT<ArrayF>): bin content held by a Float_t,; - THnSparseL (typedef for THnSparseT<ArrayL64>): bin content held by a Long64_t,; - THnSparseI (typedef for THnSparseT<ArrayI>): bin content held by an Int_t,; - THnSparseS (typedef for THnSparseT<ArrayS>): bin content held by a Short_t,; - THnSparseC (typedef for THnSparseT<ArrayC>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2 h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to. Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseD hs(""hs"", ""hs"", 2, bins, xmin, xmax);. ## Filling; A THnSparse is filled just like a regular histogram, using; THnSparse::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram. Bins are allocated as needed; the status of the allocation can be observed; by GetSparseFractionBins(), GetSparseFractionMem(). ## Fast Bin Content Access; When iterating over a THnSparse one should only look at filled bins to save; processing time. The number of filled bins is returned by; THnSparse::GetNbins(); the bin content for each (linear) bin number can; be retrieved by THnSparse::GetBinContent(linidx, (Int_t*)coord).; After the call, coord will contain the bin coordinate of each axis for the bin; with linear index linidx. A possible call would be. std::cout << hs.GetBinContent(0, coord);; std::cout <<"" is the content of bin [x = "" << coord[0] ""; << "" | y = "" << coord[1] << ""]"" << std::endl;. ## Efficiency; TH1 and TH2 are generally faster than THnSparse for one and two dimensional; distributions. THnSparse becomes competitive for a sparsely filled TH3; with large numbers of bins per dimension. The tutorial sparsehist.C; shows the turn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:1541,error,errors,1541,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['error'],['errors']
Availability,"dependencies that llvm doesn't already have.; // - support streaming, so that we don't need to buffer data during compilation; // - 0-decoding tensor values. Tensor values are potentially very large buffers; // of scalars. Because of their potentially large size, avoiding; // serialization/deserialization overhead is preferred.; //; // The simple logger produces an output of the form (each line item on its line); // - header: a json object describing the data that will follow.; // - context: e.g. function name, for regalloc, or ""default"" for module-wide; // optimizations like the inliner. This is the context to which the subsequent; // data corresponds.; // - observation number.; // - tensor values - raw bytes of the tensors, in the order given in the header.; // The values are in succession, i.e. no separator is found between successive; // tensor values. At the end, there is a new line character.; // - [score] - this is optional, and is present if it was present in the header.; // Currently, for final rewards, we output ""0"" scores after each observation,; // except for the last one.; // <repeat>; // The file should be read as binary, but the reason we use newlines is mostly; // ease of debugging: the log can be opened in a text editor and, while tensor; // values are inscrutable, at least the sequence of data can be easily observed.; // Of course, the buffer of tensor values could contain '\n' bytes. A reader; // should use the header information to know how much data to read for the; // tensor values, and not use line information for that.; //; // An example reader, used for test, is available at; // Analysis/models/log_reader.py; //; // Example:; // {""features"":[list of TensorSpecs], ""score"":<a tensor spec>}; // {""context"": ""aFunction""}; // {""observation"": 0}; // <bytes>; // {""outcome"": 0}; // <bytes for the tensor corresponding to the ""score"" spec in the header>; // {""observation"": 1}; // ...; // {""context"": ""anotherFunction""}; // {""observation"": 0}; // ...; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h:2041,avail,available,2041,interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,1,['avail'],['available']
Availability,"der the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs below peephole optimizations on MIR level.; //; // 1. MOVi32imm + ANDWrr ==> ANDWri + ANDWri; // MOVi64imm + ANDXrr ==> ANDXri + ANDXri; //; // 2. MOVi32imm + ADDWrr ==> ADDWRi + ADDWRi; // MOVi64imm + ADDXrr ==> ANDXri + ANDXri; //; // 3. MOVi32imm + SUBWrr ==> SUBWRi + SUBWRi; // MOVi64imm + SUBXrr ==> SUBXri + SUBXri; //; // The mov pseudo instruction could be expanded to multiple mov instructions; // later. In this case, we could try to split the constant operand of mov; // instruction into two immediates which can be directly encoded into; // *Wri/*Xri instructions. It makes two AND/ADD/SUB instructions instead of; // multiple `mov` + `and/add/sub` instructions.; //; // 4. Remove redundant ORRWrs which is generated by zero-extend.; //; // %3:gpr32 = ORRWrs $wzr, %2, 0; // %4:gpr64 = SUBREG_TO_REG 0, %3, %subreg.sub_32; //; // If AArch64's 32-bit form of instruction defines the source operand of; // ORRWrs, we can remove the ORRWrs because the upper 32 bits of the source; // operand are set to zero.; //; // 5. %reg = INSERT_SUBREG %reg(tied-def 0), %subreg, subidx; // ==> %reg:subidx = SUBREG_TO_REG 0, %subreg, subidx; //; // 6. %intermediate:gpr32 = COPY %src:fpr128; // %dst:fpr128 = INSvi32gpr %dst_vec:fpr128, dst_index, %intermediate:gpr32; // ==> %dst:fpr128 = INSvi32lane %dst_vec:fpr128, dst_index, %src:fpr128, 0; //; // In cases where a source FPR is copied to a GPR in order to be copied; // to a destination FPR, we can directly copy the values between the FPRs,; // eliminating the use of the Integer unit. When we match a pattern of; // INSvi[X]gpr that is preceded by a chain of COPY instructions from a FPR; // source, we use the INSvi[X]lane to replace the COPY & INSvi[X]gpr; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp:1096,redundant,redundant,1096,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,1,['redundant'],['redundant']
Availability,"desired significance (width) of the error band; /// \param[in] params If non-zero, consider only the subset of the parameters in fr for the error evaluation; /// \param[in] argList Optional `RooCmdArg` that can be applied to a regular plotOn() operation; /// \param[in] linMethod By default (linMethod=true), a linearized error is shown.; /// \return The RooPlot the band was plotted on (for chaining of plotting commands).; ///; /// The linearized error is calculated as follows:; /// \f[; /// \mathrm{error}(x) = Z * F_a(x) * \mathrm{Corr}(a,a') * F_{a'}^\mathrm{T}(x),; /// \f]; ///; /// where; /// \f[; /// F_a(x) = \frac{ f(x,a+\mathrm{d}a) - f(x,a-\mathrm{d}a) }{2},; /// \f]; /// with \f$ f(x) \f$ the plotted curve and \f$ \mathrm{d}a \f$ taken from the fit result, and; /// \f$ \mathrm{Corr}(a,a') \f$ = the correlation matrix from the fit result, and \f$ Z \f$ = requested signifance (\f$ Z \sigma \f$ band); ///; /// The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; /// not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made; ///; /// Alternatively, a more robust error is calculated using a sampling method. In this method a number of curves; /// is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; /// from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; /// for each value of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; /// that at least 30 curves are expected to be outside the N% interval, and is minimally 100 (e.g. Z=1->Ncurve=100, Z=2->Ncurve=659, Z=3->Ncurve=11111); /// Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much); /// longer to calculate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1530,robust,robust,1530,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,"['error', 'robust']","['error', 'robust']"
Availability,"directories to be searched each.; * RETURN VALUE; * Pointer to ASImage structure holding image data on success.; * NULL on failure; * DESCRIPTION; * file2ASImage will attempt to interpret filename in the following way:; * 1)It will try to find file using unmodified filename in all the; * provided search paths.; * 2)It will attempt to append .gz and then .Z to the filename and; * find such file in all the provided search paths.; * 3)If filename ends with extension consisting of digits only - it will; * attempt to find file with this extension stripped off. On success; * this extension will be used to load subimage from the file with that; * number. Subimages are supported only for XCF, GIF, BMP, ICO and CUR; * files.; * After the file is found file2ASImage() attempts to detect file format,; * and if it is known it will load it into new ASImage structure.; * EXAMPLE; * asview.c: ASView.2; *********/; /****f* libAfterImage/import/get_asimage(); * NAME; * get_asimage() - increment reference counter if file is already loaded,; * or load image from file.; * SYNOPSIS; * ASImage *get_asimage( ASImageManager* imageman, const char *file,; * ASFlagType what, unsigned int compression );; * INPUTS; * imageman - pointer to valid ASVisual structure.; * file - root window ID for the destination screen.; * what - full image file's name with path.; * compression -; * RETURN VALUE; * Pointer to ASImage structure holding image data on success.; * NULL on failure; * DESCRIPTION; * get_asimage will attempt check with the ASImageManager's list of load; * images, and if image with requested filename already exists - it will; * increment its reference count and return its pointer.; * Otherwise it will call file2ASImage() to load image from file. It will; * use PATH and gamma values from the ASImageManager to pass to; * file2ASImage(). If image is successfully loaded - it will be added to; * the ASImageManager's list and its pointer will be returned.; * SEE ALSO; * file2ASImage(); *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h:1965,failure,failure,1965,graf2d/asimage/src/libAfterImage/import.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.h,1,['failure'],['failure']
Availability,"dozens of special mathematical symbols. A few of them, such; as `+` and `>` , are produced by typing the corresponding; keyboard character. Others are obtained with the commands in the following; table:. Begin_Macro; mathsymbols.C; End_Macro. \anchor L6; ## Delimiters; TLatex provides 4 kinds of proportional delimiters:. #[]{....} or ""a la"" Latex #left[.....#right] : big square brackets; #{}{....} or #left{.....#right} : big curly brackets; #||{....} or #left|.....#right| : big absolute value symbols; #(){....} or #left(.....#right) : big parentheses. \anchor L7; ## Greek Letters; The command to produce a lowercase Greek letter is obtained by adding a; `#` to the name of the letter. For an uppercase Greek letter, just; capitalize the first letter of the command name. Some letters have two; representations. The name of the second one (the ""variation"") starts with ""var"".; The following table gives the complete list:. Begin_Macro; greekletters.C; End_Macro. \anchor L8; ## Accents; Several kind of accents are available:. Begin_Macro; {; TCanvas *cl = new TCanvas(""cl"",""cl"",10,10,700,300);; TLatex Tl; Tl.SetTextFont(43); Tl.SetTextSize(20);; Tl.DrawText(.1, .10, ""#hat : ""); Tl.DrawLatex(.3, .10, "" #hat{a} "");; Tl.DrawText(.1, .23, ""#check : ""); Tl.DrawLatex(.3, .23, "" #check{a} "");; Tl.DrawText(.1, .36, ""#acute : ""); Tl.DrawLatex(.3, .36, "" #acute{a} "");; Tl.DrawText(.1, .50, ""#grave : ""); Tl.DrawLatex(.3, .50, "" #grave{a} "");; Tl.DrawText(.1, .63, ""#dot : ""); Tl.DrawLatex(.3, .63, "" #dot{a} "");; Tl.DrawText(.1, .76, ""#ddot : ""); Tl.DrawLatex(.3, .76, "" #ddot{a} "");; Tl.DrawText(.1, .90, ""#tilde : ""); Tl.DrawLatex(.3, .90, "" #tilde{a} "");; }; End_Macro. The special sign: `#slash` draws a slash on top of the text between brackets:. Begin_Macro; {; TCanvas *cl = new TCanvas(""cl"",""cl"",10,10,700,100);; TLatex Tl; Tl.SetTextFont(43); Tl.SetTextSize(20);; Tl.DrawText(.1, .5, ""#slash{E}_{T} :""); Tl.DrawLatex(.5, .5, ""#slash{E}_{T}"");; }; End_Macro. Bar and vectors sign are done ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx:5359,avail,available,5359,graf2d/graf/src/TLatex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx,1,['avail'],['available']
Availability,"during minimization (on by default); * <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; * <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, off by default; * <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; * <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; * <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 to 2, default is 1); * <tr><td> `MaxCalls(int n)` <td> Change maximum number of likelihood function calls from MINUIT (if `n <= 0`, the default of 500 * #%parameters is used); * <tr><td> `EvalErrorWall(bool flag=true)` <td> When parameters are in disallowed regions (e.g. PDF is negative), return very high value to fitter; * to force it out of that region. This can, however, mean that the fitter gets lost in this region. If; * this happens, try switching it off.; * <tr><td> `RecoverFromUndefinedRegions(double strength)` <td> When PDF is invalid (e.g. parameter in undefined region), try to direct minimiser away from that region.; * `strength` controls the magnitude of the penalty term. Leaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3233,Recover,RecoverFromUndefinedRegions,3233,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Recover'],['RecoverFromUndefinedRegions']
Availability,"e Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass searches for instructions that are prevented from being compressed; // by one of the following:; //; // 1. The use of a single uncompressed register.; // 2. A base register + offset where the offset is too large to be compressed; // and the base register may or may not be compressed.; //; //; // For case 1, if a compressed register is available, then the uncompressed; // register is copied to the compressed register and its uses are replaced.; //; // For example, storing zero uses the uncompressible zero register:; // sw zero, 0(a0) # if zero; // sw zero, 8(a0) # if zero; // sw zero, 4(a0) # if zero; // sw zero, 24(a0) # if zero; //; // If a compressed register (e.g. a1) is available, the above can be transformed; // to the following to improve code size:; // li a1, 0; // c.sw a1, 0(a0); // c.sw a1, 8(a0); // c.sw a1, 4(a0); // c.sw a1, 24(a0); //; //; // For case 2, if a compressed register is available, then the original base; // is copied and adjusted such that:; //; // new_base_register = base_register + adjustment; // base_register + large_offset = new_base_register + small_offset; //; // For example, the following offsets are too large for c.sw:; // lui a2, 983065; // sw a1, -236(a2); // sw a1, -240(a2); // sw a1, -244(a2); // sw a1, -248(a2); // sw a1, -252(a2); // sw a0, -256(a2); //; // If a compressed register is available (e.g. a3), a new base could be created; // such that the addresses can accessed with a compressible offset, thus; // improving code size:; // lui a2, 983065; // addi a3, a2, -256; // c.sw a1, 20(a3); // c.sw a1, 16(a3); // c.sw a1, 12(a3); // c.sw a1, 8(a3); // c.sw a1, 4(a3); // c.sw a0, 0(a3); //; //; // This optimization is only applied if there are enough uses of the c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp:1076,avail,available,1076,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,1,['avail'],['available']
Availability,"e File menu /; Save As... or corresponding SaveAs button on the toolbar. #### Text Selection. You can move the cursor by simply clicking on the desired location; with the left mouse button. To highlight some text, press the mouse; and drag the mouse while holding the left button pressed.; To select a word, double-click on it;; to select the text line - triple-click on it;; to select all do quadruple-click. #### Cut, Copy, Paste. After selecting some text, you can cut or copy it to the clipboard.; A subsequent paste operation will insert the contents of the; clipboard at the current cursor location. #### Text Search. The editor uses a standard Search dialog. You can specify a forward; or backward search direction starting from the current cursor; location according to the selection made of a case sensitive mode; or not. The last search can be repeated by pressing F3. #### Text Font. You can change the text font by selecting Edit menu / Set Font.; The Font Dialog pops up and shows the Name, Style, and Size of any; available font. The selected font sample is shown in the preview; area. #### Executing Macros. You can execute the currently loaded macro in the editor by; selecting Tools menu / Execute Macro; by clicking on the; corresponding toolbar button, or by using Ctrl+F5 accelerator keys.; This is identical to the command "".x macro.C"" in the root prompt; command line. #### Compiling Macros. The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interprete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:3101,avail,available,3101,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['avail'],['available']
Availability,"e TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPerceptron::kStochastic,; - TMultiLayerPerceptron::kBatch,; - TMultiLayerPerceptron::kSteepestDescent,; - TMultiLayerPerceptron::kRibierePolak,; - TMultiLayerPerceptron::kFletcherReeves,; - TMultiLayerPerceptron::kBFGS. A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account. Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combinations; are available. Example:; ~~~ {.cpp}; net.Train(100,""text, graph, update=10"");; ~~~. When the neural net is trained, it can be used; directly ( TMultiLayerPerceptron::Evaluate() ) or exported to a; standalone C++ code ( TMultiLayerPerceptron::Export() ). Finally, note that even if this implementation is inspired from the mlpfit code,; the feature lists are not exactly matching:. - mlpfit hybrid learning method is not implemented; - output neurons can be normalized, this is not the case for mlpfit; - the neural net is exported in C++, FORTRAN or PYTHON; - the drawResult() method allows a fast check of the learning procedure. In addition, the paw version of mlpfit had additional limitations on the number of; neurons, hidden layers and inputs/outputs that does not apply to TMultiLayerPerceptron.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:8562,avail,available,8562,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['avail'],['available']
Availability,"e Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be var",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:58763,down,down,58763,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"e XImage; * from ASImage data, and calls asimage2ximage() if yes, it has to.; * It then supplied gc or DefaultGC of the screen to transfer; * XImage to the server.; * Missing scanlines get filled with black color.; * SEE ALSO; * asimage2ximage(); * asimage2pixmap(); * create_visual_pixmap(); *********/; /****f* libAfterImage/asimage2pixmap(); * NAME; * asimage2pixmap(); * SYNOPSIS; * Pixmap asimage2pixmap ( struct ASVisual *asv, Window root,; * ASImage *im, GC gc, Bool use_cached);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * root 		- root window of destination screen; * im 		- source ASImage; * gc 		- precreated GC to use for XImage transfer. If NULL,; * 			 asimage2pixmap() will use DefaultGC.; * use_cached	- If True will make asimage2pixmap() to use XImage; * 			 attached to ASImage, instead of creating new one. Only; * 			 works if ASImage->ximage data member is not NULL.; * RETURN VALUE; * On success returns newly pixmap of the same colordepth as ASVisual.; * None on failure.; * DESCRIPTION; * asimage2pixmap() creates new pixmap of exactly same size as; * supplied ASImage. It then calls asimage2drawable to copy entire content; * of the ASImage onto that created pixmap.; * EXAMPLE; * asview.c: ASView.5; * SEE ALSO; * asimage2ximage(); * asimage2drawable(); * create_visual_pixmap(); *********/; /****f* libAfterImage/asimage2mask(); * NAME; * asimage2mask(); * SYNOPSIS; * Pixmap asimage2mask ( struct ASVisual *asv, Window root,; * ASImage *im, GC gc, Bool use_cached);; * asv - pointer to valid ASVisual structure; * root - root window of destination screen; * im - source ASImage; * gc - precreated GC for 1 bit deep drawables to use for; * XImage transfer. If NULL, asimage2mask() will create one.; * use_cached - If True will make asimage2mask() to use mask XImage; * 			attached to ASImage, instead of creating new one. Only; * 			works if ASImage->alt.mask_ximage data member is not NULL.; * RETURN VALUE; * On success returns newly created pixmap of the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:5099,failure,failure,5099,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"e Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option | Description |; |--------------|----------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8831,error,error,8831,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"e \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16917,error,error,16917,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"e as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:2653,error,errors,2653,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['error'],['errors']
Availability,"e can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:1952,down,download,1952,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['down'],['download']
Availability,"e closing the file holding this tree,; /// the file will be automatically recovered when you will connect the file; /// in UPDATE mode.; /// The Tree will be recovered at the status corresponding to the last AutoSave.; ///; /// if option contains ""SaveSelf"", gDirectory->SaveSelf() is called.; /// This allows another process to analyze the Tree while the Tree is being filled.; ///; /// if option contains ""FlushBaskets"", TTree::FlushBaskets is called and all; /// the current basket are closed-out and written to disk individually.; ///; /// By default the previous header is deleted after having written the new header.; /// if option contains ""Overwrite"", the previous Tree header is deleted; /// before written the new header. This option is slightly faster, but; /// the default option is safer in case of a problem (disk quota exceeded); /// when writing the new header.; ///; /// The function returns the number of bytes written to the file.; /// if the number of bytes is null, an error has occurred while writing; /// the header to the file.; ///; /// ## How to write a Tree in one process and view it from another process; ///; /// The following two scripts illustrate how to do this.; /// The script treew.C is executed by process1, treer.C by process2; ///; /// script treew.C:; /// ~~~ {.cpp}; /// void treew() {; /// TFile f(""test.root"",""recreate"");; /// TNtuple *ntuple = new TNtuple(""ntuple"",""Demo"",""px:py:pz:random:i"");; /// Float_t px, py, pz;; /// for ( Int_t i=0; i<10000000; i++) {; /// gRandom->Rannor(px,py);; /// pz = px*px + py*py;; /// Float_t random = gRandom->Rndm(1);; /// ntuple->Fill(px,py,pz,random,i);; /// if (i%1000 == 1) ntuple->AutoSave(""SaveSelf"");; /// }; /// }; /// ~~~; /// script treer.C:; /// ~~~ {.cpp}; /// void treer() {; /// TFile f(""test.root"");; /// TTree *ntuple = (TTree*)f.Get(""ntuple"");; /// TCanvas c1;; /// Int_t first = 0;; /// while(1) {; /// if (first == 0) ntuple->Draw(""px>>hpx"", """","""",10000000,first);; /// else ntuple->Draw(""px>>+hpx"",""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2122,error,error,2122,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"e contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8121,error,error,8121,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"e drawn (inside); ty = 2; tick marks and labels on right side are drawn. By default only the left Y axis and X bottom axis are drawn; (`tx = ty = 0`). `TPad::SetTicks(tx,ty)` allows to set these options.; See also The `TAxis` functions to set specific axis attributes. In case multiple color filled histograms are drawn on the same pad, the fill; area may hide the axis tick marks. One can force a redraw of the axis over all; the histograms by calling:. gPad->RedrawAxis();. \anchor HP05; ### Giving titles to the X, Y and Z axis. h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");. The histogram title and the axis titles can be any `TLatex` string.; The titles are part of the persistent histogram. \anchor HP060; ### The option ""SAME"". By default, when an histogram is drawn, the current pad is cleared before; drawing. In order to keep the previous drawing and draw on top of it the; option `SAME` should be use. The histogram drawn with the option; `SAME` uses the coordinates system available in the current pad. This option can be used alone or combined with any valid drawing option but; some combinations must be use with care. \anchor HP060a; #### Limitations. - It does not work when combined with the `LEGO` and `SURF` options unless the; histogram plotted with the option `SAME` has exactly the same; ranges on the X, Y and Z axis as the currently drawn histogram. To superimpose; lego plots [histograms' stacks](\ref HP26) should be used. \anchor HP061; ### Colors automatically picked in palette. \since **ROOT version 6.09/01**. When several histograms are painted in the same canvas thanks to the option ""SAME""; or via a `THStack` it might be useful to have an easy and automatic way to choose; their color. The simplest way is to pick colors in the current active color; palette. Palette coloring for histogram is activated thanks to the options `PFC`; (Palette Fill Color), `PLC` (Palette Line Color) and `PMC` (Palette Marker Color).; When one of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:18008,avail,available,18008,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['avail'],['available']
Availability,"e ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:9735,error,errors,9735,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['error'],['errors']
Availability,"e graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5768,error,error,5768,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3495,error,error,3495,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"e histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetUpperPad` and `TRatioPlot::GetLowerPad` can be used to draw additional; elements on top of the existing ones.; `TRatioPlot::GetLowerRefGraph` returns a reference to the lower pad's graph that; is responsible for the range, which enables you to modify the range. \image html gpad_ratioplot.png; */; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2661,Error,Error,2661,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['Error'],['Error']
Availability,"e html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections with displayed nodes will appear as segments; having the color of the touched node. Drawn geometry will be then made invisible; in order to enhance rays. \image html geom_random2.jpg; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:11062,CheckPoint,CheckPoint,11062,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['CheckPoint'],['CheckPoint']
Availability,"e integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5255,error,error,5255,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['error'],['error']
Availability,"e may be copyrighted by their authors; and need not follow the licensing terms described here, provided that; the new terms are clearly indicated on the first page of each file where; they apply. IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY; FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES; ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY; DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGE. THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE; IS PROVIDED ON AN ""AS IS"" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE; NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR; MODIFICATIONS. GOVERNMENT USE: If you are acquiring this software on behalf of the; U.S. government, the Government shall have only ""Restricted Rights""; in the software and related documentation as defined in the Federal ; Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2). If you; are acquiring the software on behalf of the Department of Defense, the; software shall be classified as ""Commercial Computer Software"" and the; Government shall have only ""Restricted Rights"" as defined in Clause; 252.227-7013 (c) (1) of DFARs. Notwithstanding the foregoing, the; authors grant the U.S. Government and others acting in its behalf; permission to use and distribute the software in accordance with the; terms specified in this license.; */; /*; *----------------------------------------------------------------------; *; * XAllocColor --; *; *	Find the closest available color to the specified XColor.; *; * Results:; *	Updates the color argument and returns 1 on success. Otherwise; *	returns 0.; *; * Side effects:; *	Allocates a new color in the palette.; *; *----------------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:2597,avail,available,2597,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['avail'],['available']
Availability,"e next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4435,error,error,4435,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"e operands; /// \a A and \a B. Returns 1 if the length of the string in \a B is less than; /// the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestrz(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI </c> instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B.; /// \returns Returns 1 if the length of the string in \a B is less than the; /// maximum, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1802,mask,mask,1802,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['mask'],['mask']
Availability,"e options are for `option`:; | Option | Description |; | ---------- | ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2317,error,errors,2317,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['errors']
Availability,"e run as a standalone program or with the interpreter. * //; // * To run as a standalone program: * //; // * * //; // * $ cd $ROOTSYS/test * //; // * $ make stressProof * //; // * * //; // * Run stressProof with '-h' to get the list of supported options * //; // * $ ./stressProof -h * //; // * * //; // * To run interactively: * //; // * $ root * //; // * root[] .include $ROOTSYS/tutorials * //; // * root[] .L stressProof.cxx+ * //; // * root[] stressProof(master, tests, wrks, verbose, logfile, dyn, \ * //; // * dyn, skipds, h1src, eventsrc, dryrun) * //; // * * //; // * The arguments have the same meaning as above except for * //; // * verbose [Int_t] increasing verbosity (0 == minimal) * //; // * dyn [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; // * Test 5 : H1: chain processing ............................. OK * * //; // * Test 6 : H1: file collection processing ................... OK * * //; // * Test 7 : H1: file collection, TPacketizerAdaptive ......... OK * * //; // * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1274,failure,failure,1274,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['failure'],['failure']
Availability,"e seen by the minimizer; \f$\partial F / \partial P_{\mathrm{int}}\f$; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7373,error,error,7373,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],"['error', 'errors']"
Availability,"e static call graph due to unknown indirect call targets.; // Adjusting the order by considering indirect call edges from the; // profile can enable the inlining of indirect call targets by allowing; // the caller processed before them.; // 2. Mutual call edges in an SCC. The static processing order computed for; // an SCC may not reflect the call contexts in the context-sensitive; // profile, thus may cause potential inlining to be overlooked. The; // function order in one SCC is being adjusted to a top-down order based; // on the profile to favor more inlining. This is only a problem with CS; // profile.; // 3. Transitive indirect call edges due to inlining. When a callee function; // (say B) is inlined into a caller function (say A) in LTO prelink,; // every call edge originated from the callee B will be transferred to; // the caller A. If any transferred edge (say A->C) is indirect, the; // original profiled indirect edge B->C, even if considered, would not; // enforce a top-down order from the caller A to the potential indirect; // call target C in LTO postlink since the inlined callee B is gone from; // the static call graph.; // 4. #3 can happen even for direct call targets, due to functions defined; // in header files. A header function (say A), when included into source; // files, is defined multiple times but only one definition survives due; // to ODR. Therefore, the LTO prelink inlining done on those dropped; // definitions can be useless based on a local file scope. More; // importantly, the inlinee (say B), once fully inlined to a; // to-be-dropped A, will have no profile to consume when its outlined; // version is compiled. This can lead to a profile-less prelink; // compilation for the outlined version of B which may be called from; // external modules. while this isn't easy to fix, we rely on the; // postlink AutoFDO pipeline to optimize B. Since the survived copy of; // the A can be inlined in its local scope in prelink, it may not exist; // in the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp:1210,down,down,1210,interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SampleProfile.cpp,1,['down'],['down']
Availability,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2098,error,error,2098,core/newdelete/src/NewDelete.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx,2,['error'],['error']
Availability,"e there is room for a second bit in the; // term 2^(n-2) we add this bit to a new term and denote it o_h in a; // second step.; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] >> 1) * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-(e+1)) =; //; // Let o_h = [b_h + a_h + (b_m + a_m) >> (n-2)] >> 1; // Further replace e+1 by e'.; //; // = o_h * 2^(n-1) +; // + ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E * 2^(n-e') =; //; // Move o_h into the error term and construct E'. To ensure that there is; // no 2^x with negative x, this step requires pre(2) (e < n).; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + o_h * 2^(e'-1) * 2^(n-e') + | pre(2), move 2^(e'-1); // | out of the old exponent; // + E * 2^(n-e') =; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + [o_h * 2^(e'-1) + E] * 2^(n-e') + | move 2^(e'-1) out of; // | the old exponent; //; // Let E' = o_h * 2^(e'-1) + E; //; // = ([b_h + a_h + (b_m + a_m) >> (n-2)] % 2) * 2^(n-2) +; // + ((b_m + a_m) % 2^(n-2)) +; // + E' * 2^(n-e'); //; // Because X and Y are distinct only in there error terms and E' can be; // constructed as shown the theorem holds.; // [qed]; //; // For completeness in case of the case e=n it is also required to show that; // distributivity can be applied.; //; // In this case Theorem(1) transforms to (the pre-condition on A can also be; // dropped); //; // Theorem(2): (B + A + E) >> 1 => (B >> 1) + (A >> 1) + E'; // where; // A, B, E, E' are two's complement numbers with the same bit; // width; //; // Let A + B + E = X; // Let (B >> 1) + (A >> 1) = Y; //; // Therefore we need to show that for every X and Y there is an E' which; // makes the equation; //; // X = Y + E'; //; // hold. This is trivially the case for E' = X - Y.; //; // [qed]; //; // Remark: Distributing lshr with and arbitrary n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:3339,error,error,3339,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['error'],['error']
Availability,"e to NULL, to dissociate; * XImage object from ASImage.; * SEE ALSO; * create_visual_ximage(); *********/; /****f* libAfterImage/asimage2alpha_ximage(); * NAME; * asimage2alpha_ximage(); * SYNOPSIS; * XImage *asimage2alpha_ximage (struct ASVisual *asv, ; * ASImage *im, Bool bitmap);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * bitmap - if True resulting XImage will have depth of 1 bit -; * traditional X mask; otherwise it will have depth of 8; * (usefull for XFree86 RENDER extension); * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1 or 8.; * NULL on failure.; * DESCRIPTION; * asimage2alpha_ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth 1 or 8. Alpha channels of ASImage then gets; * decoded, and encoded into XImage. In case requested depth is 1 then; * alpha channel is interpreted like so: 127 or greater is encoded as 1,; * otherwise as 0.; * Missing scanlines get filled with 1s as they signify absence of mask.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.mask_ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2mask_ximage(). If any other behaviour is; * desired - make sure you set im->alt.mask_ximage to NULL, to dissociate; * XImage object from ASImage.; *********/; /****f* libAfterImage/asimage2mask_ximage(); * NAME; * asimage2mask_ximage() - same as asimage2alpha_ximage(). Supplied for ; * convinience and compatibility with older versions.; * SYNOPSIS; * XImage *asimage2mask_ximage (struct ASVisual *asv, ASImage *im);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1.; * NULL on failure.; *********/; /****f* libAfterImage/asimage2pixmap(); * NAME; * asimage2pixmap(); * SYNOPSIS; * Bool	 asimage2drawable( struct ASVisual *asv, Drawable d, ASImage *im,; * GC",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:1926,mask,mask,1926,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['mask'],['mask']
Availability,"e to trim the number; of bins to match the number of active labels by calling; ~~~ {.cpp}; TH1::LabelsDeflate(axis) with axis = ""X"", ""Y"" or ""Z""; ~~~; This operation is automatic when using TTree::Draw.; Once bin labels have been created, they become persistent if the histogram; is written to a file or when generating the C++ code via SavePrimitive. \anchor auto-bin; ### Histograms with automatic bins. When a histogram is created with an axis lower limit greater or equal; to its upper limit, the SetBuffer is automatically called with an; argument fBufferSize equal to fgBufferSize (default value=1000).; fgBufferSize may be reset via the static function TH1::SetDefaultBufferSize.; The axis limits will be automatically computed when the buffer will; be full or when the function BufferEmpty is called. \anchor rebinning; ### Rebinning. At any time, a histogram can be rebinned via TH1::Rebin. This function; returns a new histogram with the rebinned contents.; If bin errors were stored, they are recomputed during the rebinning. \anchor filling-histograms; ## Filling histograms. A histogram is typically filled with statements like:; ~~~ {.cpp}; h1->Fill(x);; h1->Fill(x, w); //fill with weight; h2->Fill(x, y); h2->Fill(x, y, w); h3->Fill(x, y, z); h3->Fill(x, y, z, w); ~~~; or via one of the Fill functions accepting names described above.; The Fill functions compute the bin number corresponding to the given; x, y or z argument and increment this bin by the given weight.; The Fill functions return the bin number for 1-D histograms or global; bin number for 2-D and 3-D histograms.; If TH1::Sumw2 has been called before filling, the sum of squares of; weights is also stored.; One can also increment directly a bin number via TH1::AddBinContent; or replace the existing content via TH1::SetBinContent. Passing an; out-of-range bin to TH1::AddBinContent leads to undefined behavior.; To access the bin content of a given bin, do:; ~~~ {.cpp}; Double_t binContent = h->GetBinContent(bin);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:11614,error,errors,11614,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"e() for histoproxy in histoproxies]; ~~~. Every distributed backend supports this feature and graphs belonging to different backends can be still triggered with; a single call to RunGraphs (e.g. it is possible to send a Spark job and a Dask job at the same time). ### Histogram models in distributed mode. When calling a Histo*D operation in distributed mode, remember to pass to the function the model of the histogram to be; computed, e.g. the axis range and the number of bins:. ~~~{.py}; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame. if __name__ == ""__main__"":; df = RDataFrame(""mytree"",""myfile.root"").Define(""x"",""someoperation""); # The model can be passed either as a tuple with the arguments in the correct order; df.Histo1D((""name"", ""title"", 10, 0, 10), ""x""); # Or by creating the specific struct; model = ROOT.RDF.TH1DModel(""name"", ""title"", 10, 0, 10); df.Histo1D(model, ""x""); ~~~. Without this, two partial histograms resulting from two distributed tasks would have incompatible binning, thus leading; to errors when merging them. Failing to pass a histogram model will raise an error on the client side, before starting; the distributed execution. ### Live visualization in distributed mode with dask. The live visualization feature allows real-time data representation of plots generated during the execution ; of a distributed RDataFrame application. ; It enables visualizing intermediate results as they are computed across multiple nodes of a Dask cluster; by creating a canvas and continuously updating it as partial results become available. . The LiveVisualize() function can be imported from the Python package **ROOT.RDF.Experimental.Distributed**:. ~~~{.py}; import ROOT. LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ~~~. The function takes drawable objects (e.g. histograms) and optional callback functions as argument, it accepts 4 different input formats:. - Passing a list or tuple of drawables: ; You can pass a list or",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:44866,error,errors,44866,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['error'],['errors']
Availability,"e, the main functionality of this pass is divided; // into two steps. The first step is to replace an instruction; // %0 = C2_mux %1, %2, %3; // with a pair of conditional transfers; // %0 = A2_tfrt %1, %2; // %0 = A2_tfrf %1, %3; // It is the intention that the execution of this pass could be terminated; // after this step, and the code generated would be functionally correct.; //; // If the uses of the source values %1 and %2 are kills, and their; // definitions are predicable, then in the second step, the conditional; // transfers will then be rewritten as predicated instructions. E.g.; // %0 = A2_or %1, %2; // %3 = A2_tfrt %99, killed %0; // will be rewritten as; // %3 = A2_port %99, %1, %2; //; // This replacement has two variants: ""up"" and ""down"". Consider this case:; // %0 = A2_or %1, %2; // ... [intervening instructions] ...; // %3 = A2_tfrt %99, killed %0; // variant ""up"":; // %3 = A2_port %99, %1, %2; // ... [intervening instructions, %0->vreg3] ...; // [deleted]; // variant ""down"":; // [deleted]; // ... [intervening instructions] ...; // %3 = A2_port %99, %1, %2; //; // Both, one or none of these variants may be valid, and checks are made; // to rule out inapplicable variants.; //; // As an additional optimization, before either of the two steps above is; // executed, the pass attempts to coalesce the target register with one of; // the source registers, e.g. given an instruction; // %3 = C2_mux %0, %1, %2; // %3 will be coalesced with either %1 or %2. If this succeeds,; // the instruction would then be (for example); // %3 = C2_mux %0, %3, %2; // and, under certain circumstances, this could result in only one predicated; // instruction:; // %3 = A2_tfrf %0, %2; //; // Splitting a definition of a register into two predicated transfers; // creates a complication in liveness tracking. Live interval computation; // will see both instructions as actual definitions, and will mark the; // first one as dead. The definition is not actually dead, and this; // situ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:1856,down,down,1856,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['down'],['down']
Availability,"e, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the analysis. \anchor rnode; ### RDataFrame objects as function arguments and return values; RDataFrame variables/nodes are relatively cheap to copy and it's possible to both pass them to (or move them into); functions and to return them from functions. However, in general each dataframe node will have a different C++ type,; which includes all available compile-time information about what that node does. One way to cope with this complication; is to use template functions and/or C++14 auto return types:; ~~~{.cpp}; template <typename RDF>; auto ApplySomeFilters(RDF df); {; return df.Filter(""x > 0"").Filter([](int y) { return y < 0; }, {""y""});; }; ~~~. A possibly simpler, C++11-compatible alternative is to take advantage of the fact that any dataframe node can be; converted (implicitly or via an explicit cast) to the common type ROOT::RDF::RNode:; ~~~{.cpp}; // a function that conditionally adds a Range to an RDataFrame node.; RNode MaybeAddRange(RNode df, bool mustAddRange); {; return mustAddRange ? df.Range(1) : df;; }; // use as :; ROOT::RDataFrame df(10);; auto maybeRangedDF = MaybeAddRange(df, true);; ~~~. The conversion to ROOT::RDF::RNode is cheap, but it will introduce an extra virtual call during the RDataFrame event; loop (in most cases, the resulting performance impact should be negligible). Python u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:60476,avail,available,60476,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"e-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function pass that initializes undef vector value to; // temporary pseudo instruction and remove it in expandpseudo pass to prevent; // register allocation resulting in a constraint violated result for vector; // instruction. It also rewrites the NoReg tied operand back to an; // IMPLICIT_DEF.; //; // RISC-V vector instruction has register overlapping constraint for certain; // instructions, and will cause illegal instruction trap if violated, we use; // early clobber to model this constraint, but it can't prevent register; // allocator allocated same or overlapped if the input register is undef value,; // so convert IMPLICIT_DEF to temporary pseudo instruction and remove it later; // could prevent that happen, it's not best way to resolve this, and it might; // change the order of program or increase the register pressure, so ideally we; // should model the constraint right, but before we model the constraint right,; // it's the only way to prevent that happen.; //; // When we enable the subregister liveness option, it will also trigger same; // issue due to the partial of register is undef. If we pseudoinit the whole; // register, then it will generate redundant COPY instruction. Currently, it; // will generate INSERT_SUBREG to make sure the whole register is occupied; // when program encounter operation that has early-clobber constraint.; //; //; // See also: https://github.com/llvm/llvm-project/issues/50157; //; // Additionally, this pass rewrites tied operands of vector instructions; // from NoReg to IMPLICIT_DEF. (Not that this is a non-overlapping set of; // operands to the above.) We use NoReg to side step a MachineCSE; // optimization quality problem but need to convert back before; // TwoAddressInstruction. See pr64282 for context.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp:1579,redundant,redundant,1579,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,1,['redundant'],['redundant']
Availability,"e.c.b, the compiler will generate code; // &e + 4; //; // The compile-once run-everywhere instead generates the following code; // r = 4; // &e + r; // The ""4"" in ""r = 4"" can be changed based on a particular kernel version.; // For example, on a particular kernel version, if struct s is changed to; //; // struct s {; // int new_field;; // int a;; // int b;; // }; //; // By repeating the member access on the host, the bpf loader can; // adjust ""r = 4"" as ""r = 8"".; //; // This feature relies on the following three intrinsic calls:; // addr = preserve_array_access_index(base, dimension, index); // addr = preserve_union_access_index(base, di_index); // !llvm.preserve.access.index <union_ditype>; // addr = preserve_struct_access_index(base, gep_index, di_index); // !llvm.preserve.access.index <struct_ditype>; //; // Bitfield member access needs special attention. User cannot take the; // address of a bitfield acceess. To facilitate kernel verifier; // for easy bitfield code optimization, a new clang intrinsic is introduced:; // uint32_t __builtin_preserve_field_info(member_access, info_kind); // In IR, a chain with two (or more) intrinsic calls will be generated:; // ...; // addr = preserve_struct_access_index(base, 1, 1) !struct s; // uint32_t result = bpf_preserve_field_info(addr, info_kind); //; // Suppose the info_kind is FIELD_SIGNEDNESS,; // The above two IR intrinsics will be replaced with; // a relocatable insn:; // signness = /* signness of member_access */; // and signness can be changed by bpf loader based on the; // types on the host.; //; // User can also test whether a field exists or not with; // uint32_t result = bpf_preserve_field_info(member_access, FIELD_EXISTENCE); // The field will be always available (result = 1) during initial; // compilation, but bpf loader can patch with the correct value; // on the target host where the member_access may or may not be available; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp:2714,avail,available,2714,interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAbstractMemberAccess.cpp,2,['avail'],['available']
Availability,"e/TChain with names of the form; /// `<friendname>_<branchname>` in order to differentiate them from the branches in the main tree/chain.; ///; /// ### Writing to a sub-directory; ///; /// Snapshot supports writing the TTree in a sub-directory inside the TFile. It is sufficient to specify the path to; /// the TTree as part of the TTree name, e.g. `df.Snapshot(""subdir/t"", ""f.root"")` write TTree `t` in the; /// sub-directory `subdir` of file `f.root` (creating file and sub-directory as needed).; ///; /// \attention In multi-thread runs (i.e. when EnableImplicitMT() has been called) threads will loop over clusters of; /// entries in an undefined order, so Snapshot will produce outputs in which (clusters of) entries will be shuffled with; /// respect to the input TTree. Using such ""shuffled"" TTrees as friends of the original trees would result in wrong; /// associations between entries in the main TTree and entries in the ""shuffled"" friend. Since v6.22, ROOT will; /// error out if such a ""shuffled"" TTree is used in a friendship.; ///; /// \note In case no events are written out (e.g. because no event passes all filters) the behavior of Snapshot in; /// single-thread and multi-thread runs is different: in single-thread runs, Snapshot will write out a TTree with; /// the specified name and zero entries; in multi-thread runs, no TTree object will be written out to disk.; ///; /// \note Snapshot will refuse to process columns with names of the form `#columnname`. These are special columns; /// made available by some data sources (e.g. RNTupleDS) that represent the size of column `columnname`, and are; /// not meant to be written out with that name (which is not a valid C++ variable name). Instead, go through an; /// Alias(): `df.Alias(""nbar"", ""#bar"").Snapshot(..., {""nbar""})`.; ///; /// ### Example invocations:; ///; /// ~~~{.cpp}; /// // without specifying template parameters (column types automatically deduced); /// df.Snapshot(""outputTree"", ""outputFile.root"", {""x"", ""y""});",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2489,error,error,2489,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['error'],['error']
Availability,"eas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the loca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:3963,avail,available,3963,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['avail'],['available']
Availability,"eaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4427,error,errors,4427,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"ect id |; | *:rawdata | raw data, column contains id of raw data from _streamer_ table |; | *:Int_t | column with integer value |. Use TSQLFile::SetUseSuffixes(kFALSE) to disable suffixes usage.; This and several other options can be changed only when; TSQLFile created with options ""CREATE"" or ""RECREATE"" and only before; first write operation. These options are:; | Name | Description |; |------|-------------|; | SetUseSuffixes() | suffix usage in column names (default - on) |; | SetArrayLimit() | defines maximum array size, which can has column for each element (default 21) |; | SetTablesType() | table type name in MySQL database (default ""InnoDB"") |; | SetUseIndexes() | usage of indexes in database (default kIndexesBasic) |. Normally these functions should be called immediately after TSQLFile constructor.; When objects data written to database, by default START TRANSACTION/COMMIT; SQL commands are used before and after data storage. If TSQLFile detects; any problems, ROLLBACK command will be used to restore; previous state of data base. If transactions not supported by SQL server,; they can be disabled by SetUseTransactions(kTransactionsOff). Or user; can take responsibility to use transactions function himself.; By default only indexes for basic tables are created.; In most cases usage of indexes increase performance to data reading,; but it also can increase time of writing data to database.; There are several modes of index usage available in SetUseIndexes() method; There is MakeSelectQuery(TClass*) method, which; produces SELECT statement to get objects data of specified class.; Difference from simple statement like:; mysql> SELECT * FROM TH1I_ver1; that not only data for that class, but also data from parent classes; will be extracted from other tables and combined in single result table.; Such select query can be useful for external access to objects data. Up to now MySQL 4.1 and Oracle 9i were tested.; Some extra work is required for other SQL databases.; Ho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:4835,ROLLBACK,ROLLBACK,4835,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['ROLLBACK'],['ROLLBACK']
Availability,"ect when it prints; the parameter values. The minimizer can become blocked at a limit, because at a limit; the derivative seen by the minimizer; \f$\partial F / \partial P_{\mathrm{int}}\f$; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7334,error,error,7334,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"ection of transverse momenta can be used within the rest of the data analysis, for; example to fill a histogram. \anchor operationsandfunctions; ## Arithmetic operations, logical operations and mathematical functions; Arithmetic operations on RVec instances can be performed: for example, they can be added, subtracted, multiplied.; ~~~{.cpp}; RVec<double> v1 {1.,2.,3.,4.};; RVec<float> v2 {5.f,6.f,7.f,8.f};; auto v3 = v1+v2;; auto v4 = 3 * v1;; ~~~; The supported operators are ; - +, -, *, /; - +=, -=, *=, /=; - <, >, ==, !=, <=, >=, &&, ||; - ~, !; - &, |, ^; - &=, |=, ^=; - <<=, >>=. The most common mathematical functions are supported. It is possible to invoke them passing ; RVecs as arguments.; - abs, fdim, fmod, remainder; - floor, ceil, trunc, round, lround, llround; - exp, exp2, expm1; - log, log10, log2, log1p; - pow; - sqrt, cbrt; - sin, cos, tan, asin, acos, atan, atan2, hypot; - sinh, cosh, tanh, asinh, acosh; - erf, erfc; - lgamma, tgamma. If the VDT library is available, the following functions can be invoked. Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan. \anchor owningandadoptingmemory; ## Owning and adopting memory; RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; it can be constructed with the address of the memory associated to it and its length. For example:; ~~~{.cpp}; std::vector<int> myStlVec {1,2,3};; RVec<int> myRVec(myStlVec.data(), myStlVec.size());; ~~~; In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; memory is released and new one is allocated. The previous content is copied in the new memory and; preserved. \anchor sorting; ## Sorting and manipulation of indices. #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:4199,avail,available,4199,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['avail'],['available']
Availability,"ectories are supported. In case; /// subdirectories are present the behavior is unspecified - events *might* be; /// passed to Receiver on macOS (due to FSEvents being used) while they; /// *probably* won't be passed on Linux (due to inotify being used).; ///; /// Known potential inconsistencies; /// - For files that are deleted befor the initial scan processed them, clients; /// might receive Removed notification without any prior Added notification.; /// - Multiple notifications might be produced when a file is added to the; /// watched directory during the initial scan. We are choosing the lesser evil; /// here as the only known alternative strategy would be to invalidate the; /// watcher instance and force user to create a new one whenever filesystem; /// event occurs during the initial scan but that would introduce continuous; /// restarting failure mode (watched directory is not always ""owned"" by the same; /// process that is consuming it). Since existing clients can handle duplicate; /// events well, we decided for simplicity.; ///; /// Notifications are provided only for changes done through local user-space; /// filesystem interface. Specifically, it's unspecified if notification would; /// be provided in case of a:; /// - a file mmap-ed and changed; /// - a file changed via remote (NFS) or virtual (/proc) FS access to monitored; /// directory; /// - another filesystem mounted to the watched directory; ///; /// No support for LLVM VFS.; ///; /// It is unspecified whether notifications for files being deleted are sent in; /// case the whole watched directory is sent.; ///; /// Directories containing ""too many"" files and/or receiving events ""too; /// frequently"" are not supported - if the initial scan can't be finished before; /// the watcher instance gets invalidated (see WatcherGotInvalidated) there's no; /// good error handling strategy - the only option for client is to destroy the; /// watcher, restart watching with new instance and hope it won't repeat.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h:2287,error,error,2287,interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,1,['error'],['error']
Availability,"ectrum:$Id$; // Author: Miroslav Morhac 17/01/2006; /** \class TSpectrum2; \ingroup Spectrum; \brief Advanced 2-dimensional spectra processing; \author Miroslav Morhac. \legacy{TSpectrum2, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - One-dimensional background estimation functions; - Two-dimensional background estimation functions; - One-dimensional smoothing functions; - Two-dimensional smoothing functions; - One-dimensional deconvolution functions; - Two-dimensional deconvolution functions; - One-dimensional peak search functions; - Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html). All the figures in this page were prepared using the DaqProVis; system, Data Acquisition, Processing and Visualization system,; developed at the Institute of Physics, Slovak Academy of Sciences, Bratislava,; Slovakia.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1409,avail,available,1409,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,1,['avail'],['available']
Availability,"ed across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this step, effective threads combine their thread local Reduce list; /// with Remote Reduce list and store the result in the thread local; /// Reduce list.; /// Value copy:; /// In this step, we deal with the assumption made by algorithm 2; /// (i.e. contiguity assumption). When we have an odd number of lanes; /// active, say 2k+1, only k threads will be effective and therefore k; /// new values will be produced. However, the Reduce list owned by the; /// (2k+1)th thread is ignored in the value aggregation. Therefore; /// we copy the Red",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2390,alive,alive,2390,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['alive'],['alive']
Availability,"ed at any time. The new imported style in; the ROOT session will become the selected one. Import a style (from a canvas):; You can do that selecting the Style menu/Import from.../Canvas or; the corresponding Tool bar button. A new style will be created in the; ROOT session and will become the selected one. This style is a clone; of the gStyle with modified values as they are set in the currently; selected canvas. You can import a style from any canvas and apply it; later on some objects. Export a style (in a C++ macro file):; To store a style longer than for the current ROOT session you can; save it in a C++ macro file. This can be done via the menu or the; tool bar button. There is a naming convention for the style macros:; the name must be 'Style_*.C', where * can be replaced by anything; you want. Delete a style:; The selected style can be deleted from the list when you use the; Style menu/Delete or the corresponding tool bar button. The selected; style is removed from the list of all available styles for the; current ROOT session. WARRNING: it will be lost if you didn't saved; it in a C++ macro file before its deletion. Also, you cannot delete; the selected style if it is set to gStyle. A message 'Can not delete; gStyle' will be displayed on the CINT prompt. Editor's buttons:; Open / close the style editor:; The button 'Edit >>' opens the style editor and its label changes to; 'Close <<'. For all details of what can be changed and how please see; the provided Help. Reset a style (to a previously saved state):; When the editor is opened, the 'Reset' button allows you to reset; the values of the selected style for editing. Doing that you cancel; all changes made since the last time you saved that style in a macro.; If the selected style is one of the five ROOT styles (Plain, Bold,; Video, Pub or Default), it will be recreated. Update the preview:; The button 'Update Preview' is available when a preview is shown and; the run time option is not selected. This button",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:3409,avail,available,3409,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['avail'],['available']
Availability,"ed before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient para",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6532,error,errors,6532,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"ed by the histogram classes; /// (see TH1::Draw options).; /// For example TH1::Draw(""col"") draws a 2-D histogram with cells; /// represented by a box filled with a color CI function of the cell content.; /// if the cell content is N, the color CI used will be the color number; /// in colors[N],etc. If the maximum cell content is > ncolors, all; /// cell contents are scaled to ncolors.; ///; /// `if ncolors <= 0` a default palette (see below) of 50 colors is; /// defined. The colors defined in this palette are OK for coloring pads, labels.; ///; /// ~~~ {.cpp}; /// index 0->9 : grey colors from light to dark grey; /// index 10->19 : ""brown"" colors; /// index 20->29 : ""blueish"" colors; /// index 30->39 : ""redish"" colors; /// index 40->49 : basic colors; /// ~~~; ///; /// `if ncolors == 1 && colors == 0`, a Rainbow Color map is created; /// with 50 colors. It is kept for backward compatibility. Better palettes like; /// kBird are recommended.; ///; /// High quality predefined palettes with 255 colors are available when `colors == 0`.; /// The following value of `ncolors` give access to:; ///; /// ~~~ {.cpp}; /// if ncolors = 51 and colors=0, a Deep Sea palette is used.; /// if ncolors = 52 and colors=0, a Grey Scale palette is used.; /// if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; /// if ncolors = 54 and colors=0, a Two-Color Hue palette is used.(dark blue through neutral gray to bright yellow); /// if ncolors = 55 and colors=0, a Rain Bow palette is used.; /// if ncolors = 56 and colors=0, an Inverted Dark Body Radiator palette is used.; /// if ncolors = 57 and colors=0, a monotonically increasing L value palette is used.; /// if ncolors = 58 and colors=0, a Cubehelix palette is used; /// (Cf. Dave Green's ""cubehelix"" colour scheme at http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/); /// if ncolors = 59 and colors=0, a Green Red Violet palette is used.; /// if ncolors = 60 and colors=0, a Blue Red Yellow palette is used.; /// if ncolors = 61 and col",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:1149,avail,available,1149,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"ed in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; /// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18237,error,errors,18237,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"ed string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF option 'M' - after minimum is; found, search for a new one.; ""Add to list"" sets On/Off option '+'- add function to the list; without deleting the previous. Draw options:; ""SAME"" sets On/Off function drawing on the same pad.; ""No drawing"" sets On/Off option '0'- do not draw function graphics.; ""Do not store/draw"" sets On/Off option 'N'- do not store the; function, do not draw it. Sliders settings are used if option 'R' - use range is active.; Users can change min/max values by pressing the left mouse button; near to the left/right slider edges. It is possible o change both; values simultaneously by pressing the left mouse button near to its; center and moving it to a new desir",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:2625,error,error,2625,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['error'],['error']
Availability,"ed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it; uses the bagging algorithm together and bases the determination of the; best node-split during the training on a random subset of variables only; which is individually chosen for each split. ### Analysis:. Applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:3722,error,error,3722,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['error'],['error']
Availability,"ed-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogram.; - Additions of two histograms with coefficients and storage into the current; histogram.; - Multiplications and Divisions are supported in the same way as additions.; - The Add, Divide and Multiply functions also exist to add, divide or multiply; a histogram by a function. If a histogram has associated error bars (TH1::Sumw2 has been called),; the resulting error bars are also computed assuming independent histograms.; In case of divisions, Binomial errors are also supported.; One can mark a histogram to be an ""average"" histogram by setting its bit kIsAverage via; myhist.SetBit(TH1::kIsAverage);; When adding (see TH1::Add) average histograms, the histograms are averaged and not summed. \anchor prof-hist; ### Projections of histograms. One can:. - make a 1-D projection of a 2-D histogram or Profile; see functions TH2::ProjectionX,Y, TH2::ProfileX,Y, TProfile::ProjectionX; - make a 1-D, 2-D or profile out of a 3-D histogram; see functions TH3::ProjectionZ, TH3::Project3D. One can fit these projections via:; ~~~ {.cpp}; TH2::FitSlicesX,Y, TH3::FitSlicesZ.; ~~~. \anchor random-numbers; ### Random Numbers and histograms. TH1::FillRandom can be used to randomly fill a histogram using; the contents of an existing TF1 function or another; TH1 histogram (for all dimensions).; For example, the following two statements create and fill a histogram; 10000 times with a default gaussian distribution of mean 0 and sigma 1:; ~~~ {.cpp}; TH1F h1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:15158,error,errors,15158,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"ed. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2) each using only; 1 core (threads_per_worker=1) and 2GiB of RAM (memory_limit=""2GiB"").; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1656,avail,available,1656,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['avail'],['available']
Availability,"eded when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verbatim; /// ┬ ""Unknown""; /// |; /// v; /// True; /// |; /// v; /// ⊥ False; /// \endverbatim With ""True"" signifying that the expression is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; /// survive to the end of the analysis (see below).; ///; /// Formally, all DebugVariable locations that are live-out of a block are; /// initialized to \top. A blocks live-in values take the meet of the lattice; /// value for every predecessors live-outs, except for the entry block, where; /// all live-ins are \bot. The usual dataflow propagation occurs: the transfer; /// function for a block assigns an expression for a DebugVariable to be ""True""; /// if a DBG_VALUE in the block specifies it; ""False"" if the location is; /// clobbered; or the live-in value if it is unaffected by the block. We; /// visit each block in reverse post order until a fixedpoint is reached. The; /// solution produced is maximal.; ///; /// Intuitively, we start by assuming that every expression / variable loca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:2902,avail,available,2902,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['avail'],['available']
Availability,"edefined functions such as gaus, expo and poln are automatically; /// created by ROOT.; ///; /// The list of fit options is given in parameter `option`which may takes the; /// following values:; ///; /// - ""W"" Ignore all the point errors; /// - ""U"" Use a User specified fitting algorithm (via SetFCN); /// - ""Q"" Quiet mode (minimum printing); /// - ""V"" Verbose mode (default is between Q and V); /// - ""B"" Use this option when you want to fix one or more parameters; /// and the fitting function is like ""gaus"",""expo"",""poln"",""landau"".; /// - ""R"" Use the Range specified in the function range; /// - ""N"" Do not store the graphics function, do not draw; /// - ""0"" Do not plot the result of the fit. By default the fitted function; /// is drawn unless the option""N"" above is specified.; /// - ""+"" Add this new fitted function to the list of fitted functions; /// (by default, any previous function is deleted); /// - ""C"" In case of linear fitting, not calculate the chisquare (saves time); /// - ""F"" If fitting a polN, switch to minuit fitter; /// - ""ROB"" In case of linear fitting, compute the LTS regression; /// coefficients (robust(resistant) regression), using; /// the default fraction of good points; /// - ""ROB=0.x"" - compute the LTS regression coefficients, using; /// 0.x as a fraction of good points; ///; /// When the fit is drawn (by default), the parameter goption may be used; /// to specify a list of graphics options. See TGraph::Paint for a complete; /// list of these options.; ///; /// In order to use the Range option, one must first create a function; /// with the expression to be fitted. For example, if your graph; /// has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the interval 1 to 3, you can do:; /// ~~~ {.cpp}; /// TF1 *f1 = new TF1(""f1"",""gaus"",1,3);; /// graph->Fit(""f1"",""R"");; /// ~~~; ///; /// ### Who is calling this function ?; ///; /// Note that this function is called when calling TGraphErrors::Fit; /// or TGraphAsymmErrors::Fit o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:1402,robust,robust,1402,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['robust'],['robust']
Availability,"eed to calculate four points in the window:; // * start node; var posStart = { x: 0, y: 0 };; // * end node; var posEnd = { x: 0, y: 0 };; // * handle for the start node; var startHandle = { x: 0, y: 0 };; // * handle for the end node; var endHandle = { x: 0, y: 0 };; // One can visualize it as follows:; //; // start handle; // /; // X""""""_.-""""""""X; // .' \; // / start node; // |; // |; // | end node; // \ /; // `->X; // X-'; // \; // end handle; //; // NOTE: (0, 0) is the top left corner of the window. // We have 3 similar, but still different scenarios to cover:; //; // 1. Two tokens on different lines.; // -xxx; // /; // \; // -> xxx; // In this situation, we draw arrow on the left curving to the left.; // 2. Two tokens on the same line, and the destination is on the right.; // ____; // / \; // / V; // xxx xxx; // In this situation, we draw arrow above curving upwards.; // 3. Two tokens on the same line, and the destination is on the left.; // xxx xxx; // ^ /; // \____/; // In this situation, we draw arrow below curving downwards.; const onDifferentLines = startRect.top <= endRect.top - 5 ||; startRect.top >= endRect.top + 5;; const leftToRight = startRect.left < endRect.left;. // NOTE: various magic constants are chosen empirically for; // better positioning and look; if (onDifferentLines) {; // Case #1; const topToBottom = startRect.top < endRect.top;; posStart.x = startRect.left - 1;; // We don't want to start it at the top left corner of the token,; // it doesn't feel like this is where the arrow comes from.; // For this reason, we start it in the middle of the left side; // of the token.; posStart.y = startRect.top + startRect.height / 2;. // End node has arrow head and we give it a bit more space.; posEnd.x = endRect.left - 4;; posEnd.y = endRect.top;. // Utility object with x and y offsets for handles.; var curvature = {; // We want bottom-to-top arrow to curve a bit more, so it doesn't; // overlap much with top-to-bottom curves (much more frequent).; x: topT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:2941,down,downwards,2941,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['down'],['downwards']
Availability,"een *sourceStart and sourceEnd,; putting the result into the buffer between *targetStart and; targetEnd. Note: the end pointers are *after* the last item: e.g.; *(sourceEnd - 1) is the last item. The return result indicates whether the conversion was successful,; and if not, whether the problem was in the source or target buffers.; (Only the first encountered problem is indicated.). After the conversion, *sourceStart and *targetStart are both; updated to point to the end of last text successfully converted in; the respective buffers. Input parameters:; sourceStart - pointer to a pointer to the source buffer.; The contents of this are modified on return so that; it points at the next thing to be converted.; targetStart - similarly, pointer to pointer to the target buffer.; sourceEnd, targetEnd - respectively pointers to the ends of the; two buffers, for overflow checking only. These conversion functions take a ConversionFlags argument. When this; flag is set to strict, both irregular sequences and isolated surrogates; will cause an error. When the flag is set to lenient, both irregular; sequences and isolated surrogates are converted. Whether the flag is strict or lenient, all illegal sequences will cause; an error return. This includes sequences such as: <F4 90 80 80>, <C0 80>,; or <A0> in UTF-8, and values above 0x10FFFF in UTF-32. Conformant code; must check for illegal sequences. When the flag is set to lenient, characters over 0x10FFFF are converted; to the replacement character; otherwise (when the flag is set to strict); they constitute an error. Output parameters:; The value ""sourceIllegal"" is returned from some routines if the input; sequence is malformed. When ""sourceIllegal"" is returned, the source; value will point to the illegal value that caused the problem. E.g.,; in UTF-8 when a sequence is malformed, it points to the start of the; malformed sequence. Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Fixes & updates, S",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:3870,error,error,3870,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['error'],['error']
Availability,"eference Library License version 1 (for libpng 0.5 through 1.6.35); * -----------------------------------------------------------------------; *; * libpng versions 1.0.7, July 1, 2000, through 1.6.35, July 15, 2018 are; * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson, are; * derived from libpng-1.0.6, and are distributed according to the same; * disclaimer and license as libpng-1.0.6 with the following individuals; * added to the list of Contributing Authors:; *; * Simon-Pierre Cadieux; * Eric S. Raymond; * Mans Rullgard; * Cosmin Truta; * Gilles Vollant; * James Yu; * Mandar Sahastrabuddhe; * Google Inc.; * Vadim Barkov; *; * and with the following additions to the disclaimer:; *; * There is no warranty against interference with your enjoyment of; * the library or against infringement. There is no warranty that our; * efforts or the library will fulfill any of your particular purposes; * or needs. This library is provided with all faults, and the entire; * risk of satisfactory quality, performance, accuracy, and effort is; * with the user.; *; * Some files in the ""contrib"" directory and some configure-generated; * files that are distributed with libpng have other copyright owners, and; * are released under other open source licenses.; *; * libpng versions 0.97, January 1998, through 1.0.6, March 20, 2000, are; * Copyright (c) 1998-2000 Glenn Randers-Pehrson, are derived from; * libpng-0.96, and are distributed according to the same disclaimer and; * license as libpng-0.96, with the following individuals added to the; * list of Contributing Authors:; *; * Tom Lane; * Glenn Randers-Pehrson; * Willem van Schaik; *; * libpng versions 0.89, June 1996, through 0.96, May 1997, are; * Copyright (c) 1996-1997 Andreas Dilger, are derived from libpng-0.88,; * and are distributed according to the same disclaimer and license as; * libpng-0.88, with the following individuals added to the list of; * Contributing Authors:; *; * John Bowler; * Kevin Bracey; * Sam Bu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3461,fault,faults,3461,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['fault'],['faults']
Availability,"eir documentation.); * @code; * #include <iostream>; * #include ""optionparser.h""; *; * enum optionIndex { UNKNOWN, HELP, PLUS };; * const option::Descriptor usage[] =; * {; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""USAGE: example [options]\n\n""; * ""Options:"" },; * {HELP, 0,"""" , ""help"",option::Arg::None, "" --help \tPrint usage and exit."" },; * {PLUS, 0,""p"", ""plus"",option::Arg::None, "" --plus, -p \tIncrement count."" },; * {UNKNOWN, 0,"""" , """" ,option::Arg::None, ""\nExamples:\n""; * "" example --unknown -- --this_is_no_option\n""; * "" example -unk --plus -ppp file1 file2\n"" },; * {0,0,0,0,0,0}; * };; *; * int main(int argc, char* argv[]); * {; * argc-=(argc>0); argv+=(argc>0); // skip program name argv[0] if present; * option::Stats stats(usage, argc, argv);; * option::Option options[stats.options_max], buffer[stats.buffer_max];; * option::Parser parse(usage, argc, argv, options, buffer);; *; * if (parse.error()); * return 1;; *; * if (options[HELP] || argc == 0) {; * option::printUsage(std::cout, usage);; * return 0;; * }; *; * std::cout << ""--plus count: "" <<; * options[PLUS].count() << ""\n"";; *; * for (option::Option* opt = options[UNKNOWN]; opt; opt = opt->next()); * std::cout << ""Unknown option: "" << opt->name << ""\n"";; *; * for (int i = 0; i < parse.nonOptionsCount(); ++i); * std::cout << ""Non-option #"" << i << "": "" << parse.nonOption(i) << ""\n"";; * }; * @endcode; *; * @par Option syntax:; * @li The Lean Mean C++ Option Parser follows POSIX <code>getopt()</code> conventions and supports; * GNU-style <code>getopt_long()</code> long options as well as Perl-style single-minus; * long options (<code>getopt_long_only()</code>).; * @li short options have the format @c -X where @c X is any character that fits in a char.; * @li short options can be grouped, i.e. <code>-X -Y</code> is equivalent to @c -XY.; * @li a short option may take an argument either separate (<code>-X foo</code>) or; * attached (@c -Xfoo). You can make the parser accept the additional format @c -X=foo b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:4686,error,error,4686,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"el 1. These are defined; /// in the header file <em>Compression.h</em>.; /// Note that the compression settings may be changed at any time.; /// The new compression settings will only apply to branches created; /// or attached after the setting is changed and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects inside TFile. As drawback, TRef objects stored; /// in such file cannot be read correctly.; ///; /// In case the name of the file is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:5181,Recover,Recovery,5181,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Recover'],['Recovery']
Availability,"el to changes in TUnfold; //; // History:; // Version 17.8, relaxed DTD definition; // Version 17.7, in parallel to changes in TUnfold; // Version 17.6, with updated doxygen comments; // Version 17.5, in parallel to changes in TUnfold; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, support for the ""repeat"" attribute for element Bin; // Version 17.2, initial version, numbered in parallel to TUnfold; /** \class TUnfoldBinningXML; XML interfate to binning schemes, for use with the unfolding algorithm; TUnfoldDensity. Binning schemes are used to map analysis bins on a single histogram; axis and back. The analysis bins may include unconnected bins (e.g; nuisances for background normalisation) or various multidimensional; histograms (signal bins, differential background normalisation bins, etc).; <br/>; If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Please consult the documentation of the class TUnfoldBinning about how to use; binning schemes. This class provides methods to read and write binning; schemes in the XML language. There is also a method which writes out; a dtd file for validation.; <h3>Example XML code</h3>; The example below encodes two binning schemes, <em>detector</em> and; <em>generator</em>. The detecor scheme consists of a single,; three-dimensional distribution (pt,eta,discriminator). The generator; scheme consists of two two-dimensional distributions, signal and background.; <pre>; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; <Axis name=""pt"" lowEdge=""3.5"">; <Bin repeat=""3"" width=""0.5"" />; <Bin repeat=""3"" width=""1"" />; <Bin width=""2"" />; <Bin width=""3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx:1085,avail,available,1085,hist/unfold/src/TUnfoldBinningXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinningXML.cxx,1,['avail'],['available']
Availability,"ems every algorithm addresses is a super set of those; /// addressable by algorithms with a lower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this step, effective threads combine their thread local Reduce list; /// with Remote Reduce list and store the result in the thread local; /// Reduce list.; /// Value copy:; /// In this step, we deal with the assumption ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2019,alive,alive,2019,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['alive'],['alive']
Availability,"en from the Z axis of the object. For example, to; set the labels size on the palette axis do:. hist->GetZaxis()->SetLabelSize(). <b>WARNING:</b> The palette axis is always drawn vertically. \anchor HP23; ### Setting the color palette. To change the color palette `TStyle::SetPalette` should be used, eg:. gStyle->SetPalette(ncolors,colors);. For example the option `COL` draws a 2D histogram with cells; represented by a box filled with a color index which is a function; of the cell content.; If the cell content is N, the color index used will be the color number; in `colors[N]`, etc. If the maximum cell content is greater than; `ncolors`, all cell contents are scaled to `ncolors`. If ` ncolors <= 0`, a default palette (see below) of 50 colors is; defined. This palette is recommended for pads, labels ... `if ncolors == 1 && colors == 0`, then a Pretty Palette with a; Spectrum Violet->Red is created with 50 colors. That's the default rain bow; palette. Other pre-defined palettes with 255 colors are available when `colors == 0`.; The following value of `ncolors` give access to:. if ncolors = 51 and colors=0, a Deep Sea palette is used.; if ncolors = 52 and colors=0, a Grey Scale palette is used.; if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); if ncolors = 55 and colors=0, a Rain Bow palette is used.; if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used. If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors. The default palette defines:. - index 0 to 9 : shades of grey; - index 10 to 19 : shades of brown; - index 20 to 29 : shades of blue; - index 30 to 39 : shades of red; - index 40 to 49 : basic colors. The color numbers specified in the palette can be viewed by selecting; the item `colors` in the `VIEW` menu of the canvas tool bar.; The red, green, and blue components of a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:88899,avail,available,88899,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['avail'],['available']
Availability,"en the; // source and destination operands of XADD are GPR32, there is no sub-register; // dead info. If we rely on the generic MachineInstr::allDefsAreDead, then we; // will raise false alarm on GPR32 Def.; //; // To support GPR32 Def, ideally we could just enable sub-registr liveness track; // on BPF backend, then allDefsAreDead could work on GPR32 Def. This requires; // implementing TargetSubtargetInfo::enableSubRegLiveness on BPF.; //; // However, sub-register liveness tracking module inside LLVM is actually; // designed for the situation where one register could be split into more than; // one sub-registers for which case each sub-register could have their own; // liveness and kill one of them doesn't kill others. So, tracking liveness for; // each make sense.; //; // For BPF, each 64-bit register could only have one 32-bit sub-register. This; // is exactly the case which LLVM think brings no benefits for doing; // sub-register tracking, because the live range of sub-register must always; // equal to its parent register, therefore liveness tracking is disabled even; // the back-end has implemented enableSubRegLiveness. The detailed information; // is at r232695:; //; // Author: Matthias Braun <matze@braunis.de>; // Date: Thu Mar 19 00:21:58 2015 +0000; // Do not track subregister liveness when it brings no benefits; //; // Hence, for BPF, we enhance MachineInstr::allDefsAreDead. Given the solo; // sub-register always has the same liveness as its parent register, LLVM is; // already attaching a implicit 64-bit register Def whenever the there is; // a sub-register Def. The liveness of the implicit 64-bit Def is available.; // For example, for ""lock *(u32 *)(r0 + 4) += w9"", the MachineOperand info could; // be:; //; // $w9 = XADDW32 killed $r0, 4, $w9(tied-def 0),; // implicit killed $r9, implicit-def dead $r9; //; // Even though w9 is not marked as Dead, the parent register r9 is marked as; // Dead correctly, and it is safe to use such information or our purpose.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp:1806,avail,available,1806,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,1,['avail'],['available']
Availability,"en values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values only between the lower; limit \f$a\f$ and the upper limit \f$b\f$.; Since the transformation is necessarily non-linear, it would transform a; nice linear problem into a nasty non-linear one, which is the reason why; limits should be avoided if not necessary.; In addition, the transformation; does require some computer time, so it slows down the computation a little; bit, and more importantly, it introduces additional numerical inaccuracy into; the problem in addition to what is introduced in the numerical calculation; of the FCN value.; The effects of non-linearity and numerical roundoff both; become more important as the external value gets closer to one of the limits; (expressed as the distance to nearest limit divided by distance between limits).; The user must therefore be aware of the fact that, for example,; if he puts limits of \f$(0,10^{10})\f$ on a parameter, then the values \f$0.0\f$; and \f$1.0\f$ will be indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course,; so Minuit does a transformation of the error matrix (and the; ``parabolic'' parameter errors) when there are parameter limits.; Users should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:3606,down,down,3606,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['down'],['down']
Availability,"endence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of the external value with respect to the; internal value at the minimum. This is a linearisation of the; transformation, and is the only way to produce an error matrix in external; coordinates meaningful to the user. But when reporting the individual; parabolic errors for limited parameters, Minuit can do a little better, so; it does. In this case, Minuit actually transforms the ends of the; internal ""error bar"" to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:12826,error,error,12826,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['error']
Availability,"enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is also the next case, then the break; is omitted. A state may also return if there is not enough output space available to; complete that state. Those states are copying stored data, writing a; literal byte, and copying a matching string. When returning, a ""goto inf_leave"" is used to update the total counters,; update the check value, and determine whether any progress has been made; during that inflate() call in order to return the proper return code.; Progress is defined as a change in either strm->avail_in or strm->avail_out.; When there is a window, goto inf_leave will update the window with the last; output written. If a goto inf_leave occurs in the middle of decompression; and there is no window currently, goto inf_leave will create one and copy; output to the window for the next call of inflate(). In this implementation, the flush parameter of inflate() only affects the; return code (per zlib.h). inflate() always writes as much as possible to; strm->next_out, given the space available and the provided input--the effect; documented in zlib.h of Z_SYNC_FLUSH. Furthermore, inflate() always defers; the allocation of and copying into a sliding window until necessary, which; provides the effect documented in zlib.h for Z_FINISH when the entire input; stream available. So the only thing the flush parameter actually does is:; when flush is set to Z_FINISH, inflate() cannot return Z_OK. Instead it; will return Z_BUF_ERROR if it has not reached the end of the stream.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2995,avail,available,2995,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,4,['avail'],['available']
Availability,"ent that all Error; /// instances be checked or returned to the caller.; ///; /// There are two ways to set the checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1554,Error,Error,1554,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['Error'],['Error']
Availability,"ent; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF option 'M' - after minimum is; found, search for a new one.; ""Add to list"" sets On/Off option '+'- add function to the list; without deleting the previous. Draw options:; ""SAME"" sets On/Off function drawing on the same pad.; ""No drawing"" sets On/Off option '0'- do not draw function graphics.; ""Do not store/draw"" sets On/Off option 'N'- do not store the; function, do not draw it. Sliders settings are used if option 'R' - use range is active.; Users can change min/max values by pressing the left mouse button; near to the left/right slider edges. It is possible o change both; values simultaneously by pressing the left mouse button near to its; center and moving it to a new desire position. ""Minimization"" Tab. ""Library"" group allows you to use Minuit, Minuit2 or Fumili; minimization packages ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:2735,error,error,2735,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['error'],['error']
Availability,"ented as the size of the notch; (where iqr is the size of the box and N is the number of entries of the whole; distribution). Candle plots like these are usually called ""notched candle plots"". In case the significance of the median is greater that the size of the box, the; box will have an unnatural shape. Usually it means the chart has not enough data,; or that representing this uncertainty is not useful. ##### The Mean; The mean can be drawn as a dashed line or as a circle or not drawn at all.; The mean is the arithmetic average of the values in the distribution.; It is calculated using GetMean(). Because histograms are; binned data, the mean value can differ from a calculation on the raw-data.; If the distribution is large enough and gaussian shaped the mean will be; exactly the median. ##### The Whiskers; The whiskers represent the part of the distribution not covered by the box.; The upper 25% and the lower 25% of the distribution are located within the whiskers.; Two representations are available. - A simple one (using w=1) defining the lower whisker from the lowest data value; to the bottom of the box, and the upper whisker from the top of the box to the; highest data value. In this representation the whisker-lines are dashed.; - A more complex one having a further restriction. The whiskers are still connected; to the box but their length cannot exceed \f$ 1.5\times iqr \f$. So it might; be that the outermost part of the underlying distribution will not be covered; by the whiskers. Usually these missing parts will be represented by the outliers; (see points). Of course the upper and the lower whisker may differ in length.; In this representation the whiskers are drawn as solid lines. \since **ROOT version 6.11/01**. Using the static function TCandle::SetWhiskerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:51134,avail,available,51134,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['avail'],['available']
Availability,"ents combined with an accurate description of all the Probability; Density Functions (PDF). To assess the validity of the fit, a convincing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:1265,avail,available,1265,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['avail'],['available']
Availability,"enu/Import from.../Canvas or; the corresponding Tool bar button. A new style will be created in the; ROOT session and will become the selected one. This style is a clone; of the gStyle with modified values as they are set in the currently; selected canvas. You can import a style from any canvas and apply it; later on some objects. Export a style (in a C++ macro file):; To store a style longer than for the current ROOT session you can; save it in a C++ macro file. This can be done via the menu or the; tool bar button. There is a naming convention for the style macros:; the name must be 'Style_*.C', where * can be replaced by anything; you want. Delete a style:; The selected style can be deleted from the list when you use the; Style menu/Delete or the corresponding tool bar button. The selected; style is removed from the list of all available styles for the; current ROOT session. WARRNING: it will be lost if you didn't saved; it in a C++ macro file before its deletion. Also, you cannot delete; the selected style if it is set to gStyle. A message 'Can not delete; gStyle' will be displayed on the CINT prompt. Editor's buttons:; Open / close the style editor:; The button 'Edit >>' opens the style editor and its label changes to; 'Close <<'. For all details of what can be changed and how please see; the provided Help. Reset a style (to a previously saved state):; When the editor is opened, the 'Reset' button allows you to reset; the values of the selected style for editing. Doing that you cancel; all changes made since the last time you saved that style in a macro.; If the selected style is one of the five ROOT styles (Plain, Bold,; Video, Pub or Default), it will be recreated. Update the preview:; The button 'Update Preview' is available when a preview is shown and; the run time option is not selected. This button allows you to; refresh the preview any time you want to see how the style you edit; looks like. Help button:; Provides a help of the currently selected tab. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:4319,avail,available,4319,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['avail'],['available']
Availability,"er got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; tables, and removed assumption that EOB is; the longest code (bad assumption).; c12 3 Jan 93 M. Adler make tables for fixed blocks only once.; c13 5 Jan 93 M. Adler allow all zero length codes (pkzip 2.04c; outputs one zero length code for an empty; distance tree).; c14 12 Mar 93 M. Adler made inflate.c standalone with the; introduction of inflate.h.; c14b 16 Jul 93 G. Roelofs added (unsigned) typecast to w at 470.; c14c 19 Jul 93 J. Bush changed v[N_MAX], l[288], ll[28x+3x] arrays; to static for Amiga.; c14d 13 Aug 93 J-l. Gailly de-complicatified Mark's c[*p++]++ thing.; c14e 8 Oct 93 G. Roelofs changed memset() to memzero().; c14f 22 Oct 93 G. Roelofs renamed quietflg to qflag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:1969,error,error,1969,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['error'],['error']
Availability,"ernal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * Calling ZSTD_compressStream2() with ZSTD_e_end instructs to finish a frame.; * It will perform a flush and write frame epilogue.; * The epilogue is required for decoders to consider a frame completed.; * flush operation is the same, and follows same rules as calling ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_end until it returns 0, at which point you are free to; * start a new frame.; * note: ZSTD_e_end will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if frame fully completed and fully flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * *******************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:3930,error,error,3930,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of the external value with respect to the; internal value at the minimum. This is a linearisation of the; transformation, and is the only way to produce an error matrix in external; coordinates meaningful to the user. But when reporting the individual; parabolic errors for limited parameters, Minuit can do a little better, so; it does. In this case, Minuit actually transforms the ends of the; internal ""error bar"" to external coordinates and reports the length of; this transformed interval. Strictly speaking, it is now asymmetric, but; since the origin of the asymmetry is only an artificial transformation it; does not make much sense, so the transformed errors are symmetrized. The result of all the above is that for parameters with limits, the error; reported by Minuit is not exactly equal to the square root of the diagonal; e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:13260,error,error,13260,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['error']
Availability,"errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5206,error,errors,5206,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['errors']
Availability,"ersal through; /// the loop. Start by assigning full mass to the Loop header. For each; /// node in the loop:; ///; /// - Fetch and categorize the weight distribution for its successors.; /// If this is a packaged-subloop, the weight distribution is stored; /// in \a LoopData::Exits. Otherwise, fetch it from; /// BranchProbabilityInfo.; ///; /// - Each successor is categorized as \a Weight::Local, a local edge; /// within the current loop, \a Weight::Backedge, a backedge to the; /// loop header, or \a Weight::Exit, any successor outside the loop.; /// The weight, the successor, and its category are stored in \a; /// Distribution. There can be multiple edges to each successor.; ///; /// - If there's a backedge to a non-header, there's an irreducible SCC.; /// The usual flow is temporarily aborted. \a; /// computeIrreducibleMass() finds the irreducible SCCs within the; /// loop, packages them up, and restarts the flow.; ///; /// - Normalize the distribution: scale weights down so that their sum; /// is 32-bits, and coalesce multiple edges to the same node.; ///; /// - Distribute the mass accordingly, dithering to minimize mass loss,; /// as described in \a distributeMass().; ///; /// In the case of irreducible loops, instead of a single loop header,; /// there will be several. The computation of backedge masses is similar; /// but instead of having a single backedge mass, there will be one; /// backedge per loop header. In these cases, each backedge will carry; /// a mass proportional to the edge weights along the corresponding; /// path.; ///; /// At the end of propagation, the full mass assigned to the loop will be; /// distributed among the loop headers proportionally according to the; /// mass flowing through their backedges.; ///; /// Finally, calculate the loop scale from the accumulated backedge mass.; ///; /// 3. Distribute mass in the function (\a computeMassInFunction()).; ///; /// Finally, distribute mass through the DAG resulting from packaging all; /// lo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h:4079,down,down,4079,interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,1,['down'],['down']
Availability,"es are retained in all copies and that this; notice is included verbatim in any distributions. No written agreement,; license, or royalty fee is required for any of the authorized uses.; Modifications to this software may be copyrighted by their authors; and need not follow the licensing terms described here, provided that; the new terms are clearly indicated on the first page of each file where; they apply. IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY; FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES; ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY; DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGE. THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE; IS PROVIDED ON AN ""AS IS"" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE; NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR; MODIFICATIONS. GOVERNMENT USE: If you are acquiring this software on behalf of the; U.S. government, the Government shall have only ""Restricted Rights""; in the software and related documentation as defined in the Federal ; Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2). If you; are acquiring the software on behalf of the Department of Defense, the; software shall be classified as ""Commercial Computer Software"" and the; Government shall have only ""Restricted Rights"" as defined in Clause; 252.227-7013 (c) (1) of DFARs. Notwithstanding the foregoing, the; authors grant the U.S. Government and others acting in its behalf; permission to use and distribute the software in accordance with the; terms specified in this license.; */; /*; *----------------------------------------------------------------------; *; * XAllocColor --; *; *	Find the closest available color to the specified XColor.; *; * Results:; *	U",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:1682,MAINTEN,MAINTENANCE,1682,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['MAINTEN'],['MAINTENANCE']
Availability,"es to; * fit inside the image. At the time of tiling image will be tinted; * unless tint == 0.; * EXAMPLE; * ASTile; *********/; /****f* libAfterImage/transform/merge_layers(); * NAME; * merge_layers(); * SYNOPSIS; * ASImage *merge_layers ( struct ASVisual *asv,; * ASImageLayer *layers, int count,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * merge_layers() will create new ASImage of requested size. It will then; * go through all the layers, and fill image with composition.; * Bottommost layer will be used unchanged and above layers will be; * superimposed on it, using algorithm specified in ASImageLayer; * structure of the overlaying layer. Layers may have smaller size; * then destination image, and maybe placed in arbitrary locations. Each; * layer will be padded to fit width of the destination image with all 0; * effectively making it transparent.; *********/; /****f* libAfterImage/transform/make_gradient(); * NAME; * make_gradient() - renders linear gradient into new ASImage; * SYNOPSIS; * ASImage *make_gradient ( struct ASVisual *asv,; * struct ASGradient *grad,; * unsigned int width,; * unsigned int height,; * ASFlagType filter,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:4817,failure,failure,4817,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"es, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and standard deviation. <b>WARNING 1:</b> never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because `0001111` will be taken as an octal number!. <b>WARNING 2:</b> for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. <b>NOTE</b> that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single number. The parameter mode can be any combination of the letters `kKsSiIourRmMen`. k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : standard deviation printed; R : standard deviation and standard deviation error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:22531,error,error,22531,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,4,['error'],['error']
Availability,"escaling might wish for more than one row; * group of context when shrinking the image; tough, we don't handle that.; * (This is justified by the assumption that downsizing will be handled mostly; * by adjusting the DCT_scaled_size values, so that the actual scale factor at; * the upsample step needn't be much less than one.); *; * To provide the desired context, we have to retain the last two row groups; * of one iMCU row while reading in the next iMCU row. (The last row group; * can't be processed until we have another row group for its below-context,; * and so we have to save the next-to-last group too for its above-context.); * We could do this most simply by copying data around in our buffer, but; * that'd be very slow. We can avoid copying any data by creating a rather; * strange pointer structure. Here's how it works. We allocate a workspace; * consisting of M+2 row groups (where M = min_DCT_scaled_size is the number; * of row groups per iMCU row). We create two sets of redundant pointers to; * the workspace. Labeling the physical row groups 0 to M+1, the synthesized; * pointer lists look like this:; * M+1 M-1; * master pointer --> 0 master pointer --> 0; * 1 1; * ... ...; * M-3 M-3; * M-2 M; * M-1 M+1; * M M-2; * M+1 M-1; * 0 0; * We read alternate iMCU rows using each master pointer; thus the last two; * row groups of the previous iMCU row remain un-overwritten in the workspace.; * The pointer lists are set up so that the required context rows appear to; * be adjacent to the proper places when we pass the pointer lists to the; * upsampler.; *; * The above pictures describe the normal state of the pointer lists.; * At top and bottom of the image, we diddle the pointer lists to duplicate; * the first or last sample row as necessary (this is cheaper than copying; * sample rows around).; *; * This scheme breaks down if M < 2, ie, min_DCT_scaled_size is 1. In that; * situation each iMCU row provides only one row group so the buffering logic; * must be different ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:3664,redundant,redundant,3664,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['redundant'],['redundant']
Availability,"esignated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1988,error,errors,1988,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,['error'],"['error', 'errors']"
Availability,"esse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of the external value with respect to the; internal value at the minimum. This is a linearisation of the; transformation, and is the only way to produce an error matrix in external; coordinates meaningful to the user. But when reporting the individual; parabolic errors for limited parameters, Minuit can do a little better, so; it does. In this case, Minuit actually transforms the ends of the; internal ""error bar"" to external coordinates and reports the length of; this transformed interval. Strictly speaking, it is now asymmetric, but; since the origin of the asymmetry is only an artificial transformation it; does not make much sense, so the transformed errors are symmetrized. The result of all the above is that for parameters with limits, the error; reported by Minuit is not exactly equal to the square root of the diagonal; element of the error matrix. The difference is a measure of how much the; limits deform the problem. If possible, it is suggested not to use limits; on parameters, and the problem goes away. If for some reason limits are; necessary, and you are sensitive to the difference between the two ways of; calculating the errors, it is suggested to use Minos errors which take; into account the non-linearities much more precisely. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:13719,error,errors,13719,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,7,['error'],"['error', 'errors']"
Availability,"essibility.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()). The next step is to normalize the frequencies.; FSE_normalizeCount() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1565,error,error,1565,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,"['Error', 'error']","['ErrorCode', 'error']"
Availability,"et limits on one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits will be used.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""WIDTH"" | Scales the histogran bin content by the bin width (useful for variable bins histograms); /// ""SERIAL"" | Runs in serial mode. By defult if ROOT is built with MT support and MT is enables, the fit is perfomed in multi-thread - ""E"" Perform better Errors estimation using Minos technique; /// ""MULTITHREAD"" | Forces usage of multi-thread execution whenever possible; ///; /// The default fitting of an histogram (when no option is given) is perfomed as following:; /// - a chi-square fit (see below Chi-square Fits) computed using the bin histogram errors and excluding bins with zero errors (empty bins);; /// - the full range of the histogram is used;; /// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; /// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; /// - only the status of the fit is returned;; /// - the fit is performed in Multithread whenever is enabled in ROOT;; /// - only the last fitted function is saved in the histogram;; /// - the histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3905,Error,Errors,3905,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,"['Error', 'error']","['Errors', 'errors']"
Availability,"etCanvas(cw);; w->Draw();; }; End_Macro. The complete list of predefined color names is the following:. ~~~ {.cpp}; kWhite = 0, kBlack = 1, kGray = 920, kRed = 632, kGreen = 416,; kBlue = 600, kYellow = 400, kMagenta = 616, kCyan = 432, kOrange = 800,; kSpring = 820, kTeal = 840, kAzure = 860, kViolet = 880, kPink = 900; ~~~. Note the special role of color `kWhite` (color number 0). It is the default; background color also. For instance in a PDF or PS files (as paper is usually white); it is simply not painted. To have a white color behaving like the other color the; simplest is to define an other white color not attached to the color index 0:. ~~~ {.cpp}; Int_t ci = TColor::GetFreeColorIndex();; TColor *color = new TColor(ci, 1., 1., 1.);; ~~~. \anchor C03; ## Bright and dark colors; Dark and bright colors are used to add 3D effects to graphical objects like; TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots. Two static functions are available that return the bright or dark color number corresponding; to a given color index. If these variants don't already exist, they are created as needed:; ~~~ {.cpp}; Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; ~~~. \anchor C031; ## Accessible Color Schemes; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. These three color schemes are available as color sets with 6, 8, and 10 colors, named; `kP[6, 8, 10]ColorName`. For example, `kP6Red` represents the red color within the P6 color scheme; (`P` for Pet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:4052,avail,available,4052,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"exh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);. gme->Draw(""a p s ; ; 5 s=0.5"");; }; End_Macro. \anchor GrP4; ### TGraphPolar options. The drawing options for the polar graphs are the following:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""O"" | Polar labels are drawn orthogonally to the polargram radius. |; | ""P"" | Polymarker are drawn at each point position. |; | ""E"" | Draw error bars. |; | ""F"" | Draw fill area (closed polygon). |; | ""A"" | Force axis redrawing even if a polargram already exists. |; | ""N"" | Disable the display of the polar labels. |. Begin_Macro(source); {; auto c46 = new TCanvas(""c46"",""c46"",500,500);; auto grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();; }; End_Macro. \anchor GrP5; ### Colors automatically picked in palette. \since **ROOT ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:15770,error,error,15770,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"ext{effective entries} = \frac{(\sum w_{i})^{2}}{\sum w_{i}^{2}}; /// \f]; /// The points are assigned a x value at the center of each histogram bin.; /// The y values are \f$\text{eff} = \frac{\text{pass}}{\text{total}}\f$; /// for all options except for the; /// bayesian methods where the result depends on the chosen option.; ///; /// If the denominator becomes 0 or pass > total, the corresponding bin is; /// skipped.; ///; /// ### 2) calculating ratios of two Poisson means (option 'pois'):; ///; /// The two histograms are interpreted as independent Poisson processes and the ratio; /// \f[; /// \tau = \frac{n_{1}}{n_{2}} = \frac{\varepsilon}{1 - \varepsilon}; /// \f]; /// with \f$\varepsilon = \frac{n_{1}}{n_{1} + n_{2}}\f$.; /// The histogram 'pass' is interpreted as \f$n_{1}\f$ and the total histogram; /// is used for \f$n_{2}\f$.; ///; /// The (asymmetric) uncertainties of the Poisson ratio are linked to the uncertainties; /// of efficiency by a parameter transformation:; /// \f[; /// \Delta \tau_{low/up} = \frac{1}{(1 - \varepsilon)^{2}} \Delta \varepsilon_{low/up}; /// \f]; ///; /// The x errors span each histogram bin (lowedge ... lowedge+width); /// The y errors depend on the chosen statistic methode which can be determined; /// by the options given below. For a detailed description of the used statistic; /// calculations please have a look at the corresponding functions!; ///; /// Options:; /// - v : verbose mode: prints information about the number of used bins; /// and calculated efficiencies with their errors; /// - cl=x : determine the used confidence level (0<x<1) (default is 0.683); /// - cp : Clopper-Pearson interval (see TEfficiency::ClopperPearson); /// - w : Wilson interval (see TEfficiency::Wilson); /// - n : normal approximation propagation (see TEfficiency::Normal); /// - ac : Agresti-Coull interval (see TEfficiency::AgrestiCoull); /// - fc : Feldman-Cousins interval (see TEfficiency::FeldmanCousinsInterval); /// - midp : Lancaster mid-P inter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:1742,error,errors,1742,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['error'],['errors']
Availability,"f a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7340,error,error,7340,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"f the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is then computed as the sum of the quantity below at each data point:; ///; /// \f[; /// \frac{(y-f(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f'(x))^{2}}; /// \f]; ///; /// where `x` and `y` are the point coordinates, and `f'(x)` is the derivative of the; /// function `f(x)`.; ///; /// In case of asymmetric errors, if the function lies below (above) the data point, `ey` is `ey_low` (`ey_high`).; ///; /// The approach used to approximate the uncertainty in y because of the; /// errors in x is to make it equal the error in x times the slope of the line.; /// This approach is called ""effective variance method"" and; /// the implementation is provided in the function FitUtil::EvaluateChi2Effective; ///; /// \anchor GFitLinear; /// ### Linear fitting:; /// When the fitting function is linear (contains the `++` sign) or the fitting; /// function is a polynomial, a linear fitter is initialised.; /// To create a linear function, use the following syntax: linear parts; /// separated by `++` sign.; /// Example: to fit the parameters of the function `p0*x + p1*sin(x)`, you can create a; /// TF1 object as; ///; /// TF1 *f1 = new TF1(""f1"", ""x++sin(x)"", xmin, xmax);; ///; /// For such a TF1 you don't have to set the initial conditions and the linear fitter is used.; /// Going via the linear fitter for functions, linear in parameters, gives a; /// considerable advantage in speed.; /// When using the linear fitting it is also possible to perform a robust fitting with th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:4160,error,errors,4160,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,2,['error'],"['error', 'errors']"
Availability,"f the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8686,ERROR,ERROR,8686,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['ERROR'],['ERROR']
Availability,"f this have to be merged; /// into one bin of the result.; ///; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; /// h1->Rebin(5); //merges five bins in one in h1; /// TH1F *hnew = dynamic_cast<TH1F*>(h1->Rebin(5,""hnew"")); // creates a new histogram hnew; /// // merging 5 bins of h1 in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned histogram is reduced; /// to the upper edge of the last bin that can make a complete; /// group. The remaining bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// #### case 2 xbins!=0; ///; /// A new histogram is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created histogram.; /// The array xbins must contain ngroup+1 elements that represent the low-edges; /// of the bins.; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// NOTE: The bin edges specified in xbins should correspond to bin edges; /// in the original histogram. If a bin edge in the new histogram is; /// in the middle of a bin in the original histogram, all entries in; /// the split bin in the original histogram will be transfered to the; /// lower of the two possible bins in the new histogram. This is; /// probably not what you want. A warning message is emitted in this; /// case; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; /// h1->Rebin(24,""hnew"",xbins); //creates a new variable bin size histogram hnew; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1689,error,errors,1689,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurrence of heavy peaks at \f$ R_L = 0.1 \f$ . #### Decorrelated (or ""diagonalized"") Likelihood. The biggest drawback of the Likelihood approach is that it assumes; that the discriminant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. </p>. Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; \f$ C \f$ is the matrix \f$ C&prime; \f$ that multiplied with itself; yields \f$ C \f$: \f$ C \f$=\f$ C&prime;C&prime; \f$. We compute the; square-root matrix (SQM) by means of diagonalising (\f$ D \f$) the; covariance matrix:. \f[; D = S^TCS \Rightarrow C' = S \sqrt{DS^T}; \f]. and the linear transformation of the linearly correlated into the; uncorrelated variables space is then given by multiplying the measured; variable tuple by the inverse of the SQM. Note that these transformations; are performed for both signal and background separately, since the; correlation pattern is not the same in the two samples. The above diagonalisation is complete for linearly correlated,; Gaussian distributed variables only. In real-world examples this; is not often the case, so that only little additional information; may be recovered by the diagonalisation procedure. In these cases,; non-linear methods must be applied.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:3838,recover,recovered,3838,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['recover'],['recovered']
Availability,"f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:3412,error,error,3412,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"ferent name than the tree; (use `SetNTupleName()`). By default, the RNTuple is compressed with zstd, independent of the input compression. The compression settings; (and other output parameters) can be changed by `SetWriteOptions()`. For example, to compress the imported RNTuple; using lz4 (with compression level 4) instead:. ~~~ {.cpp}; auto writeOptions = importer->GetWriteOptions();; writeOptions.SetCompression(404);; importer->SetWriteOptions(writeOptions);; ~~~. Most RNTuple fields have a type identical to the corresponding TTree input branch. Exceptions are; - C string branches are translated to `std::string` fields; - C style arrays are translated to `std::array<...>` fields; - Leaf lists are translated to untyped records; - Leaf count arrays are translated to anonymous collections with generic names (`_collection0`, `_collection1`, etc.).; In order to keep field names and branch names aligned, RNTuple projects the members of these collections and; its collection counter to the input branch names. For instance, the following input leafs:; ~~~; Int_t njets; float jet_pt[njets]; float jet_eta[njets]; ~~~; will be converted to the following RNTuple schema:; ~~~; _collection0 (untyped collection); |- float jet_pt; |- float jet_eta; std::size_t (RNTupleCardinality) njets (projected from _collection0 without subfields); ROOT::RVec<float> jet_pt (projected from _collection0.jet_pt); ROOT::RVec<float> jet_eta (projected from _collection0.jet_eta); ~~~; These projections are meta-data only operations and don't involve duplicating the data. Current limitations of the importer:; - No support for trees containing TClonesArray collections; - Due to RNTuple currently storing data fully split, ""don't split"" markers are ignored; - Some types are not available in RNTuple. Please refer to the; [RNTuple specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) for; an overview of all types currently supported.; */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx:2439,avail,available,2439,tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx,1,['avail'],['available']
Availability,"file and the translation unit corresponding; * to that file.; *; * This routine is the main entry point for the Clang C API, providing the; * ability to parse a source file into a translation unit that can then be; * queried by other functions in the API. This routine accepts a set of; * command-line arguments so that the compilation can be configured in the same; * way that the compiler is configured on the command line.; *; * \param CIdx The index object with which the translation unit will be; * associated.; *; * \param source_filename The name of the source file to load, or NULL if the; * source file is included in \c command_line_args.; *; * \param command_line_args The command-line arguments that would be; * passed to the \c clang executable if it were being invoked out-of-process.; * These command-line options will be parsed and will affect how the translation; * unit is parsed. Note that the following options are ignored: '-c',; * '-emit-ast', '-fsyntax-only' (which is the default), and '-o \<output file>'.; *; * \param num_command_line_args The number of command-line arguments in; * \c command_line_args.; *; * \param unsaved_files the files that have not yet been saved to disk; * but may be required for parsing, including the contents of; * those files. The contents and name of these files (as specified by; * CXUnsavedFile) are copied when necessary, so the client only needs to; * guarantee their validity until the call to this function returns.; *; * \param num_unsaved_files the number of unsaved file entries in \p; * unsaved_files.; *; * \param options A bitmask of options that affects how the translation unit; * is managed but not its compilation. This should be a bitwise OR of the; * CXTranslationUnit_XXX flags.; *; * \param[out] out_TU A non-NULL pointer to store the created; * \c CXTranslationUnit, describing the parsed code and containing any; * diagnostics produced by the compiler.; *; * \returns Zero on success, otherwise returns an error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:2015,error,error,2015,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['error'],['error']
Availability,"fill, manipulate, draw or access; histograms are identical in both cases. Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis.; To access the axis parameters, use:; ~~~ {.cpp}; TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; ~~~; See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision. \anchor convention; ### Convention for numbering bins. For all histogram types: nbins, xlow, xup; ~~~ {.cpp}; bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; ~~~; In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D histogram with (binx, biny, binz), the function; ~~~ {.cpp}; Int_t gbin = h->GetBin(binx, biny, binz);; ~~~; returns a global/linearized gbin number. This global gbin is useful; to access the bin content/error information independently of the dimension.; Note that to access the information other than bin content and errors; one should use the TAxis object directly with e.g.:; ~~~ {.cpp}; Double_t xcenter = h3->GetZaxis()->GetBinCenter(27);; ~~~; returns the center along z of bin number 27 (not the global bin); in the 3-D histogram h3. \anchor alpha; ### Alphanumeric Bin Labels. By default, a histogram axis is drawn with its numeric bin labels.; One can specify alphanumeric labels instead with:. - call TAxis::SetBinLabel(bin, label);; This can always be done before or after filling.; When the histogram is drawn, bin labels will be automatically drawn.; See examples labels1.C and labels2.C; - call to a Fill function with one of the arguments being a string, e.g.; ~~~ {.cpp}; hist1->Fill(somename, weight);; hist2->Fill(x, somename, weight);; hist2->Fill(somename, y, weight);; hist2->Fill(somenamex, somenamey, weight);; ~~~; See examples hlabels1.C and hlabels2.C; - via TTree::Draw. see",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:8547,error,error,8547,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"fixpoint is reached, or a pessimistic fix; // point is enforced after a timeout, the abstract attributes are tasked to; // manifest their result in the IR for passes to come.; //; // Attribute manifestation is not mandatory. If desired, there is support to; // generate a single or multiple LLVM-IR attributes already in the helper struct; // IRAttribute. In the simplest case, a subclass inherits from IRAttribute with; // a proper Attribute::AttrKind as template parameter. The Attributor; // manifestation framework will then create and place a new attribute if it is; // allowed to do so (based on the abstract state). Other use cases can be; // achieved by overloading AbstractAttribute or IRAttribute methods.; //; //; // The ""mechanics"" of adding a new ""abstract attribute"":; // - Define a class (transitively) inheriting from AbstractAttribute and one; // (which could be the same) that (transitively) inherits from AbstractState.; // For the latter, consider the already available BooleanState and; // {Inc,Dec,Bit}IntegerState if they fit your needs, e.g., you require only a; // number tracking or bit-encoding.; // - Implement all pure methods. Also use overloading if the attribute is not; // conforming with the ""default"" behavior: A (set of) LLVM-IR attribute(s) for; // an argument, call site argument, function return value, or function. See; // the class and method descriptions for more information on the two; // ""Abstract"" classes and their respective methods.; // - Register opportunities for the new abstract attribute in the; // `Attributor::identifyDefaultAbstractAttributes` method if it should be; // counted as a 'default' attribute.; // - Add sufficient tests.; // - Add a Statistics object for bookkeeping. If it is a simple (set of); // attribute(s) manifested through the Attributor manifestation framework, see; // the bookkeeping function in Attributor.cpp.; // - If instructions with a certain opcode are interesting to the attribute, add; // that opcode to the swit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4692,avail,available,4692,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['avail'],['available']
Availability,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1429,robust,robust,1429,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['robust'],['robust']
Availability,"formly distributed; /// variables).; /// ```; /// data->plotOn(frame01, CutRange(""SB1""));; /// const double nData = data->sumEntries("""", ""SB1"");; /// // Make clear that the target normalisation is nData. The enumerator NumEvent; /// // is needed to switch between relative and absolute scaling.; /// model.plotOn(frame01, Normalization(nData, RooAbsReal::NumEvent),; /// ProjectionRange(""SB1""));; /// ```; ///; /// <tr><th> <th> Histogram drawing options; /// <tr><td> RooFit::DrawOption(const char* opt); /// <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> RooFit::LineStyle(Style_t style); /// <td> Select line style by ROOT line style code, default is solid; /// <tr><td> RooFit::LineColor(Color_t color); /// <td> Select line color by ROOT color code, default is black; /// <tr><td> RooFit::LineWidth(Width_t width); /// <td> Select line with in pixels, default is 3; /// <tr><td> RooFit::MarkerStyle(Style_t style); /// <td> Select the ROOT marker style, default is 21; /// <tr><td> RooFit::MarkerColor(Color_t color); /// <td> Select the ROOT marker color, default is black; /// <tr><td> RooFit::MarkerSize(Size_t size); /// <td> Select the ROOT marker size; /// <tr><td> RooFit::FillStyle(Style_t style); /// <td> Select fill style, default is filled.; /// <tr><td> RooFit::FillColor(Color_t color); /// <td> Select fill color by ROOT color code; /// <tr><td> RooFit::XErrorSize(double frac); /// <td> Select size of X error bar as fraction of the bin width, default is 1; ///; /// <tr><th> <th> Misc. other options; /// <tr><td> RooFit::Name(const char* name); /// <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> RooFit::Invisible(); /// <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// <tr><td> RooFit::AddTo(const char* name, double wgtSel, double wgtOther); /// <td> Add constructed histogram to already existing histogram with given name and relative weight factors; ///; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:4281,error,error,4281,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['error'],['error']
Availability,"frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also give",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:7559,reliab,reliability,7559,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,"['error', 'reliab']","['error', 'reliability']"
Availability,"ftware for any purpose.; It is provided ""as is"" without express or implied warranty. Mark Spychalla disclaims all warranties with regard to this software,; including all implied warranties of merchantability and fitness, in no; event shall Mark Spychalla be liable for any special, indirect or; consequential damages or any damages whatsoever resulting from loss of use,; data or profits, whether in an action of contract, negligence or other; tortious action, arising out of or in connection with the use or performance; of this software.; */; /*. NOTE ON X3D CODING STYLE:. Don't think I usually code in the gerberized fashion that X3D demonstrates.; X3D was written for speed at any cost. My goal was to write the fastest 3D; object viewer that I could, period. Regular programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:1614,robust,robust,1614,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['robust'],['robust']
Availability,"function via TH1::Fit.; See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the possible [fitting options](\ref HFitOpt). The FitPanel can also be used for fitting an histogram. See the [FitPanel documentation](https://root.cern/manual/fitting/#using-the-fit-panel). \anchor saving-histograms; ## Saving/reading histograms to/from a ROOT file. The following statements create a ROOT file and store a histogram; on the file. Because TH1 derives from TNamed, the key identifier on; the file is the histogram name:; ~~~ {.cpp}; TFile f(""histos.root"", ""new"");; TH1F h1(""hgaus"", ""histo from a gaussian"", 100, -3, 3);; h1.FillRandom(""gaus"", 10000);; h1->Write();; ~~~; To read this histogram in another Root session, do:; ~~~ {.cpp}; TFile f(""histos.root"");; TH1F *h = (TH1F*)f.Get(""hgaus"");; ~~~; One can save all histograms in memory to the file by:; ~~~ {.cpp}; file->Write();; ~~~. \anchor misc; ## Miscellaneous operations. ~~~ {.cpp}; TH1::KolmogorovTest(): statistical test of compatibility in shape; between two histograms; TH1::Smooth() smooths the bin contents of a 1-d histogram; TH1::Integral() returns the integral of bin contents in a given bin range; TH1::GetMean(int axis) returns the mean value along axis; TH1::GetStdDev(int axis) returns the sigma distribution along axis; TH1::GetEntries() returns the number of entries; TH1::Reset() resets the bin contents and errors of a histogram; ~~~; IMPORTANT NOTE: The returned values for GetMean and GetStdDev depend on how the; histogram statistics are calculated. By default, if no range has been set, the; returned values are the (unbinned) ones calculated at fill time. If a range has been; set, however, the values are calculated using the bins in range; THIS IS TRUE EVEN; IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset the range.; To ensure that the returned values are always those of the binned data stored in the; histogram, call TH1::ResetStats. See TH1::GetStats.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:20802,error,errors,20802,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"f{e}_n\right]^2\right\rangle\nonumber\\; &=&; \left\langle\sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathbf{y}_i\mathbf{y}_i^T\mathbf{e}_n\right\rangle\nonumber\\; &=&; \sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathsf{C}\mathbf{e}_n; \f}; The minimization of the sum in (7) is obtained when each; term \f$\mathbf{e}_n^\mathsf{C}\mathbf{e}_n\f$ is minimum, since \f$\mathsf{C}\f$ is; positive definite. By the method of Lagrange multipliers, and the; condition (5), we get; \f[; E_N = \sum^{P-1}_{n=N+1} \left(\mathbf{e}_n^T\mathsf{C}\mathbf{e}_n -; l_n\mathbf{e}_n^T\bullet\mathbf{e}_n + l_n\right); \f]; The minimum condition \f$\frac{dE_N}{d\mathbf{e}^T_n} = 0\f$ leads to the; equation; \f[; \mathsf{C}\mathbf{e}_n = l_n\mathbf{e}_n\,,; \f]; which shows that \f$\mathbf{e}_n\f$ is an eigenvector of the covariance; matrix \f$\mathsf{C}\f$ with eigenvalue \f$l_n\f$. The estimated minimum error is; then given by; \f[; E_N \sim \sum^{P-1}_{n=N+1} \mathbf{e}_n^T\bullet l_n\mathbf{e}_n; = \sum^{P-1}_{n=N+1} l_n\,,; \f]; where \f$l_n,\,n=N+1,\ldots,P\f$ \f$l_n,\,n=N+1,\ldots,P-1\f$ are the eigenvalues associated with the; omitted eigenvectors in the expansion (3). Thus, by choosing; the \f$N\f$ largest eigenvalues, and their associated eigenvectors, the; error \f$E_N\f$ is minimized. The transformation matrix to go from the pattern space to the feature; space consists of the ordered eigenvectors \f$\mathbf{e}_1,\ldots,\mathbf{e}_P\f$; \f$\mathbf{e}_0,\ldots,\mathbf{e}_{P-1}\f$ for its columns; \f[; \mathsf{T} = \left[; \begin{array}{cccc}; \mathbf{e}_0 &; \mathbf{e}_1 &; \vdots &; \mathbf{e}_{P-1}; \end{array}\right]; = \left[; \begin{array}{cccc}; \mathbf{e}_{0_0} & \mathbf{e}_{1_0} & \cdots & \mathbf{e}_{{P-1}_0}\\; \mathbf{e}_{0_1} & \mathbf{e}_{1_1} & \cdots & \mathbf{e}_{{P-1}_1}\\; \vdots & \vdots & \ddots & \vdots \\; \mathbf{e}_{0_{P-1}} & \mathbf{e}_{1_{P-1}} & \cdots & \mathbf{e}_{{P-1}_{P-1}}\\; \end{array}\right]; \f]; This is an orthogonal transformation, or rotation, of the pattern; s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:6935,error,error,6935,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['error'],['error']
Availability,"g inline info using this; /// function. The benefit of using this function is that only the information; /// needed for the lookup will be extracted, other info can be skipped and; /// parsing can stop as soon as the deepest match is found. This allows; /// symbolication tools to be fast and efficient and avoid allocation costs; /// when doing lookups.; ///; /// This function will augment the SourceLocations array \a SrcLocs with any; /// inline information that pertains to \a Addr. If no inline information; /// exists for \a Addr, then \a SrcLocs will be left untouched. If there is; /// inline information for \a Addr, then \a SrcLocs will be modifiied to; /// contain the deepest most inline function's SourceLocation at index zero; /// in the array and proceed up the concrete function source file and; /// line at the end of the array.; ///; /// \param GR The GSYM reader that contains the string and file table that; /// will be used to fill in the source locations.; ///; /// \param Data The binary stream to read the data from. This object must; /// have the data for the LineTable object starting at offset zero. The data; /// can contain more data than needed.; ///; /// \param BaseAddr The base address to use when decoding the line table.; /// This will be the FunctionInfo's start address and will be used to; /// decode the correct addresses for the inline information.; ///; /// \param Addr The address to lookup.; ///; /// \param SrcLocs The inline source locations that matches \a Addr. This; /// array must be initialized with the matching line entry; /// from the line table upon entry. The name of the concrete; /// function must be supplied since it will get pushed to; /// the last SourceLocation entry and the inline information; /// will fill in the source file and line from the inline; /// information.; ///; /// \returns An error if the inline information is corrupt, or; /// Error::success() for all other cases, even when no information; /// is added to \a SrcLocs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h:2045,error,error,2045,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h,2,"['Error', 'error']","['Error', 'error']"
Availability,"g that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of the external value with respect to the; internal value at the minimum. This is a linearisation of the; transformation, and is the only way to produce an error matrix in external; coordinates meaningful to the user. But when reporting the individual; parabolic errors for limited parameters, Minuit can do a little better, so; it does. In this case, Minuit actually transforms the ends of the; internal ""error bar"" to external coordinates and reports the length of; this transformed interval. Strictly speaking, it is now asymmetric, but; since the origin of the asymmetry is only an artificial transformation it; does not make much sense, so the transformed errors are symmetrized. The result of all the above is that for parameters with limits, the error; reported by Minuit is not exactly equal to the square root of the diagonal; element of the error matrix. The difference is a measure of how much the; limits deform the problem. If possible, it is suggested not to use limits; on parameters, and the problem goes away. If for some reason limits are; necessary, and you are sensitive to the difference between the two ways of; calculating",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:13612,error,error,13612,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"g value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()).; */; /* *** DECOMPRESSION *** */; /*! FSE_readNCount():; Read compactly saved 'normalizedCounter' from 'rBuffer'.; @return : size read from 'rBuffer',; or an erro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1977,error,error,1977,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,2,"['Error', 'error']","['ErrorCode', 'error']"
Availability,"g);; double gvg = similarity(dg, v0);. // std::cout<<""delgam= ""<<delgam<<"" gvg= ""<<gvg<<std::endl;; MnAlgebraicVector vg = v0*dg;; // MnAlgebraicSymMatrix vUpd(v0.Nrow());. // MnAlgebraicSymMatrix dd = ( 1./delgam )*outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = ( 1./gvg )*outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // MnAlgebraicSymMatrix vUpd = ( 1./delgam )*outer_product(dx) - ( 1./gvg )*outer_product(vg);; MnAlgebraicSymMatrix vUpd = Outer_product(dx)/delgam - Outer_product(vg)/gvg;. if(delgam > gvg) {; // dx *= ( 1./delgam );; // vg *= ( 1./gvg );; // MnAlgebraicVector flnu = dx - vg;; // MnAlgebraicSymMatrix tmp = Outer_product(flnu);; // tmp *= gvg;; // vUpd = vUpd + tmp;; vUpd += gvg*outer_product(dx/delgam - vg/gvg);; }. //; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; //; //; // double phi = delgam/(delgam - gvg);. // MnAlgebraicSymMatrix vUpd(v0.Nrow());; // if(phi < 0) {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_product(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // }; // if(phi > 1) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // }; //. //; // if(delgam > gvg) {; // // rank-1 Update; // MnAlgebraicVector tmp = dx - vg;; // vUpd = Outer_product(tmp);; // vUpd *= ( 1./(delgam - gvg) );; // } else {; // // rank-2 Update; // MnAlgebraicSymMatrix dd = Outer_product(dx);; // dd *= ( 1./delgam );; // MnAlgebraicSymMatrix VggV = Outer_productn(vg);; // VggV *= ( 1./gvg );; // vUpd = dd - VggV;; // }; //. double sum_upd = sum_of_elements(vUpd);; vUpd += v0;. // MnAlgebraicSymMatrix V1 = v0 + vUpd;. double dcov =; 0.5*(s0.Error().Dcovar() + sum_upd/sum_of_elements(vUpd));. return MinimumError(vUpd, dcov);; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx:2241,Error,Error,2241,math/minuit2/src/DavidonErrorUpdator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/DavidonErrorUpdator.cxx,1,['Error'],['Error']
Availability,"gcol = df.FilterMissing(""col""); # Following operations in the same branch of the computation graph clearly; # cannot access that same column, since there would be no value to read; df_missingcol = df_missingcol.Define(""observable"", ""othercolumn * 2""); \endcode. \code{.cpp}; ROOT::RDataFrame df{dataset};. // Anytime an entry from ""col"" is missing, the entire entry will be filtered out; auto df_available = df.FilterAvailable(""col"");; auto df_twicecol = df_available.Define(""twice"", ""col * 2"");. // Conversely, if we want to select the entries for which the column has missing; // values, we do the following; auto df_missingcol = df.FilterMissing(""col"");; // Following operations in the same branch of the computation graph clearly; // cannot access that same column, since there would be no value to read; auto df_observable = df_missingcol.Define(""observable"", ""othercolumn * 2"");; \endcode. #### DefaultValueFor. DefaultValueFor creates a node of the computation graph which just forwards the; values of the columns necessary for other downstream nodes, when they are; available. In case a value of the input column passed to this function is not; available, the node will provide the default value passed to this function call; instead. Example:. \code{.py}; df = ROOT.RDataFrame(dataset); # Anytime an entry from ""col"" is missing, the value will be the default one; default_value = ... # Some sensible default value here; df = df.DefaultValueFor(""col"", default_value) ; df = df.Define(""twice"", ""col * 2""); \endcode. \code{.cpp}; ROOT::RDataFrame df{dataset};; // Anytime an entry from ""col"" is missing, the value will be the default one; constexpr auto default_value = ... // Some sensible default value here; auto df_default = df.DefaultValueFor(""col"", default_value);; auto df_col = df_default.Define(""twice"", ""col * 2"");; \endcode. #### Mixing different strategies to work with missing values in the same RDataFrame. All the operations presented above only act on the particular branch of th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:84190,down,downstream,84190,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,"['avail', 'down']","['available', 'downstream']"
Availability,"h the downsampler produces v_samp_factor sample rows.; * A single row group is processed in each call to the downsampler module.; *; * The downsampler is responsible for edge-expansion of its output data; * to fill an integral number of DCT blocks horizontally. The source buffer; * may be modified if it is helpful for this purpose (the source buffer is; * allocated wide enough to correspond to the desired output width).; * The caller (the prep controller) is responsible for vertical padding.; *; * The downsampler may request ""context rows"" by setting need_context_rows; * during startup. In this case, the input arrays will contain at least; * one row group's worth of pixels above and below the passed-in data;; * the caller will create dummy rows at image top and bottom by replicating; * the first or last real pixel row.; *; * An excellent reference for image resampling is; * Digital Image Warping, George Wolberg, 1990.; * Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.; *; * The downsampling algorithm used here is a simple average of the source; * pixels covered by the output pixel. The hi-falutin sampling literature; * refers to this as a ""box filter"". In general the characteristics of a box; * filter are not very good, but for the specific cases we normally use (1:1; * and 2:1 ratios) the box is equivalent to a ""triangle filter"" which is not; * nearly so bad. If you intend to use other sampling ratios, you'd be well; * advised to improve this code.; *; * A simple input-smoothing capability is provided. This is mainly intended; * for cleaning up color-dithered GIF input files (if you find it inadequate,; * we suggest using an external filtering program such as pnmconvol). When; * enabled, each input pixel P is replaced by a weighted sum of itself and its; * eight neighbors. P's weight is 1-8*SF and each neighbor's weight is SF,; * where SF = (smoothing_factor / 1024).; * Currently, smoothing is only supported for 2h2v sampling factors.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:1422,down,downsampling,1422,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['down'],['downsampling']
Availability,"h::Draw and TGraphPainter for a complete list of these possible options.; /// \param[in] rxmin lower fitting range; /// \param[in] rxmax upper fitting range; ///; /// \anchor GFitOpt; /// ### Graph Fitting Options; /// The list of fit options is given in parameter option.; ///; /// option | description; /// -------|------------; /// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; /// ""W"" | Ignore all point errors when fitting a TGraphErrors or TGraphAsymmErrors; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""Q"" | Quiet mode (minimum printing); /// ""V"" | Verbose mode (default is between Q and V); /// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; /// ""B"" | Use this option when you want to fix one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits are set.; /// ""C"" | In case of linear f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:1324,avail,available,1324,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['avail'],['available']
Availability,"h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars cli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25351,error,errors,25351,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability,"has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; * %G_SPAWN_FILE_AND_ARGV_ZERO means that the first element of @argv is; * the file to execute, while the remaining elements are the; * actual argument vector to pass to the file. Normally; * g_spawn_async_with_pipes() uses @argv[0] as the file to execute, and; * passes all of @argv to the child.; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You ca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:2345,error,error,2345,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['error'],['error']
Availability,"has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:2345,error,error,2345,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,1,['error'],['error']
Availability,"hat the fitter gets lost in this region. If; * this happens, try switching it off.; * <tr><td> `RecoverFromUndefinedRegions(double strength)` <td> When PDF is invalid (e.g. parameter in undefined region), try to direct minimiser away from that region.; * `strength` controls the magnitude of the penalty term. Leaving out this argument defaults to 10. Switch off with `strength = 0.`.; *; * <tr><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `Asymptot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4090,error,errors,4090,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['error'],['errors']
Availability,"he histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetU",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2418,error,error,2418,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability,"he histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; /// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; /// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; /// The current defaults are (""Minuit"",""Migrad"").; /// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; /// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; /// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; /// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the corresponding documentation.; /// The default minimizer can be also set in the resource file in etc/system.rootrc. For example; ///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (the bin error) returned by `TH1::GetBinError`; ///; /// \f[; /// Chi2 = \sum_{i}{ \left(\frac{y(i) - f(x(i) | p )}{e(i)} \right)^2 }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5792,toler,tolerance,5792,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['toler'],['tolerance']
Availability,"he list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRobustEstimator; \note Despite being in the group of Legacy statistics classes, TRobustEstimator is still useful and no drop-in replacement exists for it.; \ingroup Physics; Minimum Covariance Determinant Estimator - a Fast Algorithm; invented by Peter J.Rousseeuw and Katrien Van Dreissen; ""A Fast Algorithm for the Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1281,robust,robust,1281,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['robust'],['robust']
Availability,"he pledged source size, or load a dictionary.; *; * Use ZSTD_compressStream2() with ZSTD_e_continue as many times as necessary to; * consume input stream. The function will automatically update both `pos`; * fields within `input` and `output`.; * Note that the function may not consume the entire input, for example, because; * the output buffer is already full, in which case `input.pos < input.size`.; * The caller must check if input has been entirely consumed.; * If not, the caller must make some room to receive more compressed data,; * and then present again remaining input data.; * note: ZSTD_e_continue is guaranteed to make some forward progress when called,; * but doesn't guarantee maximal forward progress. This is especially relevant; * when compressing with multiple threads. The call won't block if it can; * consume some input, but if it can't it will wait for some, but not all,; * output to be flushed.; * @return : provides a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:2081,error,error,2081,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"he return value of inflate(), as noted below, or when it returns early; because Z_BLOCK is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the adler32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the adler32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() will decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically. Any information; contained in the gzip header is not retained, so applications that need that; information should instead use raw inflate, see inflateInit2() below, or; inflateBack() and perform their own processing of the gzip header and; trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; if next_in or next_out was NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may then; call inflateSync() to look for a good compression block if a partial recovery; of the data is desired.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:5636,recover,recovery,5636,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['recover'],['recovery']
Availability,"he specification in the JSON file is the following:. ~~~{.cpp}; {; ""samples"": {; ""sampleA"": {; ""trees"": [""tree1"", ""tree2""],; ""files"": [""file1.root"", ""file2.root""],; ""metadata"": {; ""lumi"": 10000.0, ; ""xsec"": 1.0,; ""sample_category"" = ""data""; }; },; ""sampleB"": {; ""trees"": [""tree3"", ""tree4""],; ""files"": [""file3.root"", ""file4.root""],; ""metadata"": {; ""lumi"": 0.5, ; ""xsec"": 1.5,; ""sample_category"" = ""MC_background""; }; }; }; }; ~~~. The metadata information from the specification file can be then accessed using the DefinePerSample function.; For example, to access luminosity information (stored as a double):. ~~~{.python}; df.DefinePerSample(""lumi"", 'rdfsampleinfo_.GetD(""lumi"")'); ~~~. or sample_category information (stored as a string):. ~~~{.python}; df.DefinePerSample(""sample_category"", 'rdfsampleinfo_.GetS(""sample_category"")'); ~~~. or directly the filename:. ~~~{.python}; df.DefinePerSample(""name"", ""rdfsampleinfo_.GetSampleName()""); ~~~. An example implementation of the ""FromSpec"" method is available in tutorial: df106_HiggstoFourLeptons.py, which also; provides a corresponding exemplary JSON file for the dataset specification. \anchor progressbar; ### Adding a progress bar . A progress bar showing the processed event statistics can be added to any RDataFrame program.; The event statistics include elapsed time, currently processed file, currently processed events, the rate of event processing ; and an estimated remaining time (per file being processed). It is recorded and printed in the terminal every m events and every ; n seconds (by default m = 1000 and n = 1). The ProgressBar can be also added when the multithread (MT) mode is enabled. . ProgressBar is added after creating the dataframe object (df):; ~~~{.cpp}; ROOT::RDataFrame df(""tree"", ""file.root"");; ROOT::RDF::Experimental::AddProgressBar(df);; ~~~. Alternatively, RDataFrame can be cast to an RNode first, giving the user more flexibility ; For example, it can be called at any computational node, such as Filter ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:79522,avail,available,79522,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"he; /// errors in x is to make it equal the error in x times the slope of the line.; /// This approach is called ""effective variance method"" and; /// the implementation is provided in the function FitUtil::EvaluateChi2Effective; ///; /// \anchor GFitLinear; /// ### Linear fitting:; /// When the fitting function is linear (contains the `++` sign) or the fitting; /// function is a polynomial, a linear fitter is initialised.; /// To create a linear function, use the following syntax: linear parts; /// separated by `++` sign.; /// Example: to fit the parameters of the function `p0*x + p1*sin(x)`, you can create a; /// TF1 object as; ///; /// TF1 *f1 = new TF1(""f1"", ""x++sin(x)"", xmin, xmax);; ///; /// For such a TF1 you don't have to set the initial conditions and the linear fitter is used.; /// Going via the linear fitter for functions, linear in parameters, gives a; /// considerable advantage in speed.; /// When using the linear fitting it is also possible to perform a robust fitting with the; /// Least Trimmed Square (LTS) regression algorithm, by using the fit option `ROB`.; /// See the tutorial `fitLinearRobust.C`.; ///; /// ### Notes on TGraph/TGraphErrors Fitting:; ///; /// 1. By using the ""effective variance"" method a simple linear regression; /// becomes a non-linear case, which takes several iterations; /// instead of 0 as in the linear case.; /// 2. The effective variance technique assumes that there is no correlation; /// between the x and y coordinate.; /// 3. The standard chi2 (least square) method without error in the coordinates (x) can; /// be forced by using option ""EX0""; /// 4. The linear fitter doesn't take into account the errors in x. When fitting a; /// TGraphErrors with a linear functions the errors in x will not be considered.; /// If errors in x are important, use option ""F"" for linear function fitting.; /// 5. When fitting a TGraph (i.e. no errors associated with each point),; /// a correction is applied to the errors on the parameters with the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:5133,robust,robust,5133,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['robust'],['robust']
Availability,"header up to just before the first byte of the deflate; stream. The end-of-block will not be indicated until all of the uncompressed; data from that block has been written to strm->next_out. The number of; unused bits may in general be greater than seven, except when bit 7 of; data_type is set, in which case the number of unused bits will be less than; eight. data_type is set as noted here every time inflate() returns for all; flush options, and so can be used to determine the amount of currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3430,error,error,3430,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"heckGeometry(), CheckOverlaps() by Mihaela Gheata; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoChecker; \ingroup Geometry_painter. Geometry checking package. TGeoChecker class provides several geometry checking methods. There are two; types of tests that can be performed. One is based on random sampling or; ray-tracing and provides a visual check on how navigation methods work for; a given geometry. The second actually checks the validity of the geometry; definition in terms of overlapping/extruding objects. Both types of checks; can be done for a given branch (starting with a given volume) as well as for; the geometry as a whole. #### TGeoChecker::CheckPoint(Double_t x, Double_t y, Double_t z). This method can be called directly from the TGeoManager class and print a; report on how a given point is classified by the modeller: which is the; full path to the deepest node containing it, and the (under)estimation; of the distance to the closest boundary (safety). #### TGeoChecker::RandomPoints(Int_t npoints). Can be called from TGeoVolume class. It first draws the volume and its; content with the current visualization settings. Then randomly samples points; in its bounding box, plotting in the geometry display only the points; classified as belonging to visible volumes. #### TGeoChecker::RandomRays(Int_t nrays, Double_t startx, starty, startz). Can be called and acts in the same way as the previous, but instead of points,; rays having random isotropic directions are generated from the given point.; A raytracing algorithm propagates all rays until they exit geometry, plotting; all segments crossing visible nodes in the same color as these. #### TG",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx:1048,CheckPoint,CheckPoint,1048,geom/geompainter/src/TGeoChecker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoChecker.cxx,1,['CheckPoint'],['CheckPoint']
Availability,"here X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; ~~~; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; ~~~. For usage examples see $ROOTSYS/test/stressLinear.cxx; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:3534,toler,tolerance,3534,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,3,['toler'],['tolerance']
Availability,"his pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7904,error,error,7904,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['error'],['error']
Availability,"hout `gPad->Update()` the line `h->FindObject(""stats"")`; returns a null pointer. When a histogram is drawn with the option ""`SAME`"", the statistics box; is not drawn. To force the statistics box drawing with the option; ""`SAME`"", the option ""`SAMES`"" must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (""`h`"" being the pointer to the histogram):; ~~~ {.cpp}; Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position; ~~~. To remove the border or shadow of the TPaveStats, use the function TPave::SetBorderSize. To change the type of information for an histogram with an existing; `TPaveStats` one should do:; ~~~ {.cpp}; st->SetOptStat(mode);; ~~~; Where ""`mode`"" has the same meaning than when calling; `gStyle->SetOptStat(mode)` (see above). One can delete the statistics box for a histogram `TH1* h` with:; ~~~ {.cpp}; h->SetStats(0); ~~~. and activate it again with:; ~~~ {.cpp}; h->SetStats(1).; ~~~. \anchor PS02; ## Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`); ~~~ {.cpp}; p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters; ~~~; Example:; ~~~ {.cpp}; gStyle->SetOptFit(1011);; ~~~; print fit probability, parameter names/values and errors. 1. When `""v"" = 1` is specified, only the non-fixed parameters are; shown.; 2. When `""v"" = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor PS03; ## Statistics box editing. The following example show how to remove and add a line in a statistics box. Begin_Macro(source); ../../../tutorials/hist/statsEditing.C; End_Macro; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx:4831,error,errors,4831,graf2d/graf/src/TPaveStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveStats.cxx,2,['error'],['errors']
Availability,"how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; calls for each variation and fill the histogram with values and cuts that depend on the variation. There is no limitation to the complexity of a Vary() expression. Just like for the Define() and Filter() calls, users are; not limited to string expressions but they can also pass any valid C++ callable, including lambda functions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple columns in lockstep. In the following Python snippet we use the Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:57939,down,down,57939,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"hrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 objects), we switch to new one TProcessID; maximum 65535 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1527,Error,Error,1527,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['Error'],['Error']
Availability,"ia the typed accessors:; /// if (std::optional<StringRef> S = E.getAsString(); /// assert(E.kind() == Value::String);; ///; /// Array and Object also have typed indexing accessors for easy traversal:; /// Expected<Value> E = parse(R""( {""options"": {""font"": ""sans-serif""}} )"");; /// if (Object* O = E->getAsObject()); /// if (Object* Opts = O->getObject(""options"")); /// if (std::optional<StringRef> Font = Opts->getString(""font"")); /// assert(Opts->at(""font"").kind() == Value::String);; ///; /// === Converting JSON values to C++ types ===; ///; /// The convention is to have a deserializer function findable via ADL:; /// fromJSON(const json::Value&, T&, Path) -> bool; ///; /// The return value indicates overall success, and Path is used for precise; /// error reporting. (The Path::Root passed in at the top level fromJSON call; /// captures any nested error and can render it in context).; /// If conversion fails, fromJSON calls Path::report() and immediately returns.; /// This ensures that the first fatal error survives.; ///; /// Deserializers are provided for:; /// - bool; /// - int and int64_t; /// - double; /// - std::string; /// - vector<T>, where T is deserializable; /// - map<string, T>, where T is deserializable; /// - std::optional<T>, where T is deserializable; /// ObjectMapper can help writing fromJSON() functions for object types.; ///; /// For conversion in the other direction, the serializer function is:; /// toJSON(const T&) -> json::Value; /// If this exists, then it also allows constructing Value from T, and can; /// be used to serialize vector<T>, map<string, T>, and std::optional<T>.; ///; /// === Serialization ===; ///; /// Values can be serialized to JSON:; /// 1) raw_ostream << Value // Basic formatting.; /// 2) raw_ostream << formatv(""{0}"", Value) // Basic formatting.; /// 3) raw_ostream << formatv(""{0:2}"", Value) // Pretty-print with indent 2.; ///; /// And parsed:; /// Expected<Value> E = json::parse(""[1, 2, null]"");; /// assert(E && E->kind() == Val",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:2112,error,error,2112,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['error'],['error']
Availability,"iable \f$x\f$ obtained by histogramming the weighted; events reproduces, on average, the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. The class TSPlot allows to reconstruct the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. of a control variable \f$x\f$ for each of the \f${\rm N}_{\rm s}\f$ species from; the sole knowledge of the PDFs of the discriminating variables \f${\rm f}_i(y)\f$.; The plots obtained thanks to the TSPlot class are called \f$\hbox {$_s$}{\cal P}lots\f$. ### Some properties and checks. Beside reproducing the true distribution,\f$\hbox {$_s$}{\cal P}lots\f$ bear remarkable properties:. - Each \f$x\f$ - distribution is properly normalized:. \f[; \sum_{e=1}^{N} {_s{\cal P}}_{\rm n}(y_e)~=~N_{\rm n} ~. \tag{4}; \f]. - For any event:. \f[; \sum_{l=1}^{{\rm N}_{\rm s}} {_s{\cal P}}_l(y_e) ~=~1 ~. \tag{5}; \f]. That is to say that, summing up the \f${\rm N}_{\rm s}\f$ \f$\hbox {$_s$}{\cal P}lots\f$,; one recovers the data sample distribution in \f$x\f$, and summing up the number of events; entering in a \f$\hbox{$_s$}{\cal P}lot\f$ for a given species, one recovers the yield of the; species, as provided by the fit.; The property 4 is implemented in the TSPlot class as a check. - the sum of the statistical uncertainties per bin. \f[; \sigma[N_{\rm n}\ _s\tilde{\rm M}_{\rm n}(x) {\delta x}]~=~\sqrt{\sum_{e \subset {\delta x}} ({_s{\cal P}}_{\rm n})^2} ~. \tag{6}; \f]. reproduces the statistical uncertainty on the yield \f$N_{\rm n}\f$, as provided by the fit:; \f$\sigma[N_{\rm n}]\equiv\sqrt{\hbox{ V}_{{\rm n}{\rm n}}}\f$ .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the \f$\hbox{$_s$}{\cal P}lot\f$; technique is itself an optimal method to reconstruct distributions of control variables. ### Different steps followed by TSPlot. 1. A maximum Likelihood fit is performed to obtain the yields \f$N_i\f$; of the various species.The fit relies on discriminating variab",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:4723,recover,recovers,4723,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['recover'],['recovers']
Availability,"ic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4184,error,error,4184,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,2,['error'],['error']
Availability,"icant bits. It is introduced if an exact computation cannot be proven; /// (e.q. division by 2).; ///; /// As part of this optimization multiple loads will be combined. It necessary; /// to prove that loads are within some relative offset to each other. This; /// class is used to prove relative offsets of values loaded from memory.; ///; /// Representing an integer in this form is sound since addition in two's; /// complement is associative (trivial) and multiplication distributes over the; /// addition (see Proof(1) in Polynomial::mul). Further, both operations; /// commute.; //; // Example:; // declare @fn(i64 %IDX, <4 x float>* %PTR) {; // %Pa1 = add i64 %IDX, 2; // %Pa2 = lshr i64 %Pa1, 1; // %Pa3 = getelementptr inbounds <4 x float>, <4 x float>* %PTR, i64 %Pa2; // %Va = load <4 x float>, <4 x float>* %Pa3; //; // %Pb1 = add i64 %IDX, 4; // %Pb2 = lshr i64 %Pb1, 1; // %Pb3 = getelementptr inbounds <4 x float>, <4 x float>* %PTR, i64 %Pb2; // %Vb = load <4 x float>, <4 x float>* %Pb3; // ... }; //; // The goal is to prove that two loads load consecutive addresses.; //; // In this case the polynomials are constructed by the following; // steps.; //; // The number tag #e specifies the error bits.; //; // Pa_0 = %IDX #0; // Pa_1 = %IDX + 2 #0 | add 2; // Pa_2 = %IDX/2 + 1 #1 | lshr 1; // Pa_3 = %IDX/2 + 1 #1 | GEP, step signext to i64; // Pa_4 = (%IDX/2)*16 + 16 #0 | GEP, multiply index by sizeof(4) for floats; // Pa_5 = (%IDX/2)*16 + 16 #0 | GEP, add offset of leading components; //; // Pb_0 = %IDX #0; // Pb_1 = %IDX + 4 #0 | add 2; // Pb_2 = %IDX/2 + 2 #1 | lshr 1; // Pb_3 = %IDX/2 + 2 #1 | GEP, step signext to i64; // Pb_4 = (%IDX/2)*16 + 32 #0 | GEP, multiply index by sizeof(4) for floats; // Pb_5 = (%IDX/2)*16 + 16 #0 | GEP, add offset of leading components; //; // Pb_5 - Pa_5 = 16 #0 | subtract to get the offset; //; // Remark: %PTR is not maintained within this class. So in this instance the; // offset of 16 can only be assumed if the pointers are equal.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:1431,error,error,1431,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['error'],['error']
Availability,"ied to bits [127:64] and bits [255:192] of; /// the destination. For example, if bits [7:0] of the immediate operand; /// contain a value of 0xFF, the 256-bit destination vector would contain the; /// following values: b[7], b[7], a[7], a[7], b[3], b[3], a[3], a[3].; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m256 _mm256_shuffle_ps(__m256 a, __m256 b, const int mask);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VSHUFPS </c> instruction.; ///; /// \param a; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [63:0] and bits [191:128] in the destination,; /// according to the bits specified in the immediate operand.; /// \param b; /// A 256-bit vector of [8 x float]. The four selected elements in this; /// operand are copied to bits [127:64] and bits [255:192] in the; /// destination, according to the bits specified in the immediate operand.; /// \param mask; /// An immediate value containing an 8-bit value specifying which elements to; /// copy from \a a and \a b \n.; /// Bits [3:0] specify the values copied from operand \a a. \n; /// Bits [7:4] specify the values copied from operand \a b. \n; /// The destinations within the 256-bit destination are assigned values as; /// follows, according to the bit value assignments described below: \n; /// Bits [1:0] are used to assign values to bits [31:0] and [159:128] in the; /// destination. \n; /// Bits [3:2] are used to assign values to bits [63:32] and [191:160] in the; /// destination. \n; /// Bits [5:4] are used to assign values to bits [95:64] and [223:192] in the; /// destination. \n; /// Bits [7:6] are used to assign values to bits [127:96] and [255:224] in; /// the destination. \n; /// Bit value assignments: \n; /// 00: Bits [31:0] and [159:128] are copied from the selected operand. \n; /// 01: Bits [63:32] and [191:160] are copied from the selected operand. \n; /// 10: Bits [95:64] and [223:192] are copied from the selected operand. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:1434,mask,mask,1434,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['mask'],['mask']
Availability,"ient().Grad();; MnAlgebraicVector dirin = st.Gradient().Gstep();; MnAlgebraicVector yy(n);; MnAlgebraicVector x = st.Parameters().Vec();. for(unsigned int i = 0; i < n; i++) {. double xtf = x(i);; double dmin = 8.*prec.Eps2()*std::fabs(xtf);; double d = std::fabs(gst(i));; if(d < dmin) d = dmin;; for(int icyc = 0; icyc < Ncycles(); icyc++) {; double sag = 0.;; double fs1 = 0.;; double fs2 = 0.;; for(int multpy = 0; multpy < 5; multpy++) {; x(i) = xtf + d;; fs1 = mfcn(x);; x(i) = xtf - d;; fs2 = mfcn(x);; x(i) = xtf;; sag = 0.5*(fs1+fs2-2.*amin);; if(sag > prec.Eps2()) break;; if(trafo.Parameter(i).HasLimits()) {; if(d > 0.5) {; std::cout<<""second derivative zero for Parameter ""<<i<<std::endl;; std::cout<<""return diagonal matrix ""<<std::endl;; for(unsigned int j = 0; j < n; j++) {; vhmat(j,j) = (g2(j) < prec.Eps2() ? 1. : 1./g2(j));; return MinimumError(vhmat, 1., false);; }; }; d *= 10.;; if(d > 0.5) d = 0.51;; continue;; }; d *= 10.;; }; if(sag < prec.Eps2()) {; std::cout<<""MnHesse: internal loop exhausted, return diagonal matrix.""<<std::endl;; for(unsigned int i = 0; i < n; i++); vhmat(i,i) = (g2(i) < prec.Eps2() ? 1. : 1./g2(i));; return MinimumError(vhmat, 1., false);; }; double g2bfor = g2(i);; g2(i) = 2.*sag/(d*d);; grd(i) = (fs1-fs2)/(2.*d);; gst(i) = d;; dirin(i) = d;; yy(i) = fs1;; double dlast = d;; d = std::sqrt(2.*aimsag/std::fabs(g2(i)));; if(trafo.Parameter(i).HasLimits()) d = std::min(0.5, d);; if(d < dmin) d = dmin;. // see if converged; if(std::fabs((d-dlast)/d) < Tolerstp()) break;; if(std::fabs((g2(i)-g2bfor)/g2(i)) < TolerG2()) break;; d = std::min(d, 10.*dlast);; d = std::max(d, 0.1*dlast);; }; vhmat(i,i) = g2(i);; }. //off-diagonal Elements; for(unsigned int i = 0; i < n; i++) {; x(i) += dirin(i);; for(unsigned int j = i+1; j < n; j++) {; x(j) += dirin(j);; double fs1 = mfcn(x);; double elem = (fs1 + amin - yy(i) - yy(j))/(dirin(i)*dirin(j));; vhmat(i,j) = elem;; x(j) -= dirin(j);; }; x(i) -= dirin(i);; }. return MinimumError(vhmat, 0.);; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnHesse.cxx:2184,Toler,Tolerstp,2184,math/minuit2/src/MnHesse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/MnHesse.cxx,1,['Toler'],['Tolerstp']
Availability,"ifferences are:; // 1. Separate vftable and vbtable.; //; // 2. Each subobject with a vfptr gets its own vftable rather than an address; // point in a single vtable shared between all the subobjects.; // Each vftable is represented by a separate section and virtual calls; // must be done using the vftable which has a slot for the function to be; // called.; //; // 3. Virtual method definitions expect their 'this' parameter to point to the; // first vfptr whose table provides a compatible overridden method. In many; // cases, this permits the original vf-table entry to directly call; // the method instead of passing through a thunk.; // See example before VFTableBuilder::ComputeThisOffset below.; //; // A compatible overridden method is one which does not have a non-trivial; // covariant-return adjustment.; //; // The first vfptr is the one with the lowest offset in the complete-object; // layout of the defining class, and the method definition will subtract; // that constant offset from the parameter value to get the real 'this'; // value. Therefore, if the offset isn't really constant (e.g. if a virtual; // function defined in a virtual base is overridden in a more derived; // virtual base and these bases have a reverse order in the complete; // object), the vf-table may require a this-adjustment thunk.; //; // 4. vftables do not contain new entries for overrides that merely require; // this-adjustment. Together with #3, this keeps vf-tables smaller and; // eliminates the need for this-adjustment thunks in many cases, at the cost; // of often requiring redundant work to adjust the ""this"" pointer.; //; // 5. Instead of VTT and constructor vtables, vbtables and vtordisps are used.; // Vtordisps are emitted into the class layout if a class has; // a) a user-defined ctor/dtor; // and; // b) a method overriding a method in a virtual base.; //; // To get a better understanding of this code,; // you might want to see examples in test/CodeGenCXX/microsoft-abi-vtables-*.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp:1666,redundant,redundant,1666,interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/VTableBuilder.cpp,1,['redundant'],['redundant']
Availability,"iffsig,; the difference will be divided by the uncertainty. `c1` and `c2` will only be used to; scale the histograms using `TH1::Scale` prior to subtraction. Available options are for `option`:; | Option | Description |; | ---------- | ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2131,error,error,2131,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability,"ight side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|. \anchor HP01c; #### Options supported for 2D histograms. | Option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8736,error,error,8736,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"ight\rangle\nonumber\\; &=&; \sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathsf{C}\mathbf{e}_n; \f}; The minimization of the sum in (7) is obtained when each; term \f$\mathbf{e}_n^\mathsf{C}\mathbf{e}_n\f$ is minimum, since \f$\mathsf{C}\f$ is; positive definite. By the method of Lagrange multipliers, and the; condition (5), we get; \f[; E_N = \sum^{P-1}_{n=N+1} \left(\mathbf{e}_n^T\mathsf{C}\mathbf{e}_n -; l_n\mathbf{e}_n^T\bullet\mathbf{e}_n + l_n\right); \f]; The minimum condition \f$\frac{dE_N}{d\mathbf{e}^T_n} = 0\f$ leads to the; equation; \f[; \mathsf{C}\mathbf{e}_n = l_n\mathbf{e}_n\,,; \f]; which shows that \f$\mathbf{e}_n\f$ is an eigenvector of the covariance; matrix \f$\mathsf{C}\f$ with eigenvalue \f$l_n\f$. The estimated minimum error is; then given by; \f[; E_N \sim \sum^{P-1}_{n=N+1} \mathbf{e}_n^T\bullet l_n\mathbf{e}_n; = \sum^{P-1}_{n=N+1} l_n\,,; \f]; where \f$l_n,\,n=N+1,\ldots,P\f$ \f$l_n,\,n=N+1,\ldots,P-1\f$ are the eigenvalues associated with the; omitted eigenvectors in the expansion (3). Thus, by choosing; the \f$N\f$ largest eigenvalues, and their associated eigenvectors, the; error \f$E_N\f$ is minimized. The transformation matrix to go from the pattern space to the feature; space consists of the ordered eigenvectors \f$\mathbf{e}_1,\ldots,\mathbf{e}_P\f$; \f$\mathbf{e}_0,\ldots,\mathbf{e}_{P-1}\f$ for its columns; \f[; \mathsf{T} = \left[; \begin{array}{cccc}; \mathbf{e}_0 &; \mathbf{e}_1 &; \vdots &; \mathbf{e}_{P-1}; \end{array}\right]; = \left[; \begin{array}{cccc}; \mathbf{e}_{0_0} & \mathbf{e}_{1_0} & \cdots & \mathbf{e}_{{P-1}_0}\\; \mathbf{e}_{0_1} & \mathbf{e}_{1_1} & \cdots & \mathbf{e}_{{P-1}_1}\\; \vdots & \vdots & \ddots & \vdots \\; \mathbf{e}_{0_{P-1}} & \mathbf{e}_{1_{P-1}} & \cdots & \mathbf{e}_{{P-1}_{P-1}}\\; \end{array}\right]; \f]; This is an orthogonal transformation, or rotation, of the pattern; space and feature selection results in ignoring certain coordinates; in the transformed space. Christian Holm August 2000, CERN; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:7304,error,error,7304,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['error'],['error']
Availability,"ile if ""thePdf"" is not a; // type deriving from RooAbsPdf; MyPdf::MyPdf(name, title, ...) :; pdfProxy(""pdfProxy"", ""Proxy holding a PDF"", this, thePdf) {. }. // In .cxx: Accessing the proxy. pdfProxy->fitTo(...);; ~~~; </table>. ### How to modernise old code. 1. Choose the proper template argument for the proxy.; - If a PDF is stored: `RooTemplateProxy<RooAbsPdf>`.; - If a real-valued object is stored: `RooTemplateProxy<RooAbsReal>`.; - If a category is stored: `RooTemplateProxy<RooCategory>`.; - If a variable is stored (i.e. one wants to be able to assign values to it): `RooTemplateProxy<RooRealVar>`; Other template arguments are possible, as long as they derive from RooAbsArg.; 2. Increment the class version of the owning class.; 3. Make sure that the right type is passed in the constructor of the proxy.; 4. Always use `proxy->` and `*proxy` to work with the stored object. No need to cast.; 5. **Only if necessary** If errors about missing symbols connected to RooTemplateProxy appear at link time,; a specific template instantiation for RooTemplateProxy is not yet in ROOT's dictionaries.; These two lines should be added to the LinkDef.h of the project:; ~~~{.cpp}; #pragma link C++ class RooTemplateProxy<RooMultiCategory>+;; #pragma read sourceClass=""RooCategoryProxy"" targetClass=""RooTemplateProxy<RooMultiCategory>""; ~~~; Replace `RooMultiCategory` by the proper type. If the proxy was holding a real-valued object, use `sourceClass=""RooRealProxy""`. The first line adds the proxy class to the dictionary, the second line enables reading a legacy; `RooCategoryProxy` from a file, and converting it to the new type-safe proxy. If no old proxies; have to be read from files, this line can be omitted. If the template instantiation that triggered the missing symbols seems to be a very common instantiation,; request for it to be added to RooFit by creating a pull request for ROOT. If it is rather uncommon,; it is sufficient to add it to the LinkDef.h of the local project only. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:3573,error,errors,3573,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['error'],['errors']
Availability,"iler on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2085,failure,failure,2085,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['failure'],['failure']
Availability,"iler on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2002,failure,failure,2002,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['failure'],['failure']
Availability,"implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF option 'M' - after minimum is; found, search for a new one.; ""Add to list"" sets On/Off option '+'- add function to the list; without deleting the previous. Draw options:; ""SAME"" sets On/Off function drawing on the same pad.; ""No drawing"" sets On/Off option '0'- do not draw function graphics.; ""Do not store/draw"" sets On/Off option 'N'- do not store the; function, do not draw it. Sliders settings are used if option 'R' - use range is active.; Users can change min/max values by pressing the left mouse button; near to the left/right slider edges. It is possible o change both; val",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:2442,Error,Errors,2442,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,2,"['Error', 'error']","['Errors', 'errors']"
Availability,"improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4635,down,download,4635,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['down'],['download']
Availability,"imum array size, which can has column for each element (default 21) |; | SetTablesType() | table type name in MySQL database (default ""InnoDB"") |; | SetUseIndexes() | usage of indexes in database (default kIndexesBasic) |. Normally these functions should be called immediately after TSQLFile constructor.; When objects data written to database, by default START TRANSACTION/COMMIT; SQL commands are used before and after data storage. If TSQLFile detects; any problems, ROLLBACK command will be used to restore; previous state of data base. If transactions not supported by SQL server,; they can be disabled by SetUseTransactions(kTransactionsOff). Or user; can take responsibility to use transactions function himself.; By default only indexes for basic tables are created.; In most cases usage of indexes increase performance to data reading,; but it also can increase time of writing data to database.; There are several modes of index usage available in SetUseIndexes() method; There is MakeSelectQuery(TClass*) method, which; produces SELECT statement to get objects data of specified class.; Difference from simple statement like:; mysql> SELECT * FROM TH1I_ver1; that not only data for that class, but also data from parent classes; will be extracted from other tables and combined in single result table.; Such select query can be useful for external access to objects data. Up to now MySQL 4.1 and Oracle 9i were tested.; Some extra work is required for other SQL databases.; Hopefully, this should be straightforward. Known problems and open questions.; -# TTree is not supported by TSQLFile. There is independent development; of TTreeSQL class, which allows to store trees directly in SQL database; -# TClonesArray is store objects in raw format,; which can not be accessed outside ROOT.; This will be changed later.; -# TDirectory cannot work. Hopefully, will (changes in ROOT basic I/O is required); -# Streamer infos are not written to file, therefore schema evolution; is not yet suppo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:5310,avail,available,5310,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['avail'],['available']
Availability,"in ROOT.; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library; using the static function ROOT::Math::Factory::CreateMinimizer. Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; The name shown below can be used to create them. More documentation can be found in the respective class. - Minuit (class TMinuitMinimizer); - Migrad (default); - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional g",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:1305,avail,available,1305,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['avail'],['available']
Availability,"inbow-color-map),; which is misleading for colour-blinded people in a 2D plot (not so much in a 3D surfaces). The `kCMYK` palette, is also not great because it's dark, then lighter, then; half-dark again. Some others, like `kAquamarine`, have almost no contrast therefore it would; be almost impossible (for a color blind person) to see something with a such palette. Therefore the palettes are classified in two categories: those which are Colour Vision Deficiency; friendly and those which are not. An easy way to classify the palettes is to turn them into grayscale using TCanvas::SetGrayscale().; The grayscale version of a palette should be as proportional as possible, and monotonously; increasing or decreasing. Unless it is symmetrical, then it is fine to have white in the; borders and black in the centre (for example an axis that goes between; -40 degrees and +40 degrees, the 0 has a meaning in the perceptualcolormap.C example). A full set of colour-vision deficiency friendly and perceptually uniform colour maps can be; [downloaded](https://doi.org/10.5281/zenodo.4491293) and used with ROOT (since 6.26) via:; `gStyle->SetPalette(""filename.txt"")` or `TColor::CreateColorTableFromFile(""filename.txt"")`.; Remember to increase the number of contours for a smoother result, e.g.:; `gStyle->SetNumberContours(99)` if you are drawing with ""surf1z"" or `gStyle->SetNumberContours(256)`; if with ""colz"". \anchor C06a; ### Colour Vision Deficiency (CVD) friendly palettes. <table border=0>; <tr><td>; Begin_Macro; {; auto c = new TCanvas(""c"",""c"",0,0,300,300);; auto f2 = new TF2(""f2"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",0.999,3.002,0.999,3.002);; f2->SetContour(99); gStyle->SetPalette(kBird);; f2->Draw(""surf2Z""); f2->SetTitle(""kBird (default)"");; }; End_Macro; </td><td>; Begin_Macro; {; auto c = new TCanvas(""c"",""c"",0,0,300,300);; auto f2 = new TF2(""f2"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",0.999,3.002,0.999,3.002);; f2->SetContour(99); gStyle->SetPalette(kGreyScale);; f2->Draw(""surf2Z"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:11747,down,downloaded,11747,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['down'],['downloaded']
Availability,"index ["","" layout] ["":"" format] ""}""; // index ::= <non-negative integer>; // layout ::= [[[char]loc]width]; // format ::= <any string not containing ""{"" or ""}"">; // char ::= <any character except ""{"" or ""}"">; // loc ::= ""-"" | ""="" | ""+""; // width ::= <positive integer>; //; // index - A non-negative integer specifying the index of the item in the; // parameter pack to print. Any other value is invalid.; // layout - A string controlling how the field is laid out within the available; // space.; // format - A type-dependent string used to provide additional options to; // the formatting operation. Refer to the documentation of the; // various individual format providers for per-type options.; // char - The padding character. Defaults to ' ' (space). Only valid if; // `loc` is also specified.; // loc - Where to print the formatted text within the field. Only valid if; // `width` is also specified.; // '-' : The field is left aligned within the available space.; // '=' : The field is centered within the available space.; // '+' : The field is right aligned within the available space (this; // is the default).; // width - The width of the field within which to print the formatted text.; // If this is less than the required length then the `char` and `loc`; // fields are ignored, and the field is printed with no leading or; // trailing padding. If this is greater than the required length,; // then the text is output according to the value of `loc`, and padded; // as appropriate on the left and/or right by `char`.; //; // ===Special Characters===; //; // The characters '{' and '}' are reserved and cannot appear anywhere within a; // replacement sequence. Outside of a replacement sequence, in order to print; // a literal '{' it must be doubled as ""{{"".; //; // ===Parameter Indexing===; //; // `index` specifies the index of the parameter in the parameter pack to format; // into the output. Note that it is possible to refer to the same parameter; // index multiple times in a g",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:1269,avail,available,1269,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['avail'],['available']
Availability,"ined lengths that is contained in source operands; /// \a A and \a B. Returns 1 if the resulting mask is non-zero, otherwise,; /// returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestrc(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// \returns Returns 1 if the resulting mask is non-zero, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1792,mask,mask,1792,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability,"inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1813,avail,avail,1813,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['avail'],['avail']
Availability,"inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:1813,avail,avail,1813,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['avail'],['avail']
Availability,"ing evaluated.; // Note that edge S->BB was previously already selected because; // prob(S->BB) > prob(S->Pred).; // At this point, 2 blocks can be placed after BB: Pred or Succ. If we; // choose Pred, we will have a topological ordering as shown on the left; // in the picture below. If we choose Succ, we have the solution as shown; // on the right:; //; // topo-order:; //; // S----- ---S; // | | | |; // ---BB | | BB; // | | | |; // | Pred-- | Succ--; // | | | |; // ---Succ ---Pred--; //; // cost = freq(S->Pred) + freq(BB->Succ) cost = 2 * freq (S->Pred); // = freq(S->Pred) + freq(S->BB); //; // If we have profile data (i.e, branch probabilities can be trusted), the; // cost (number of taken branches) with layout S->BB->Succ->Pred is 2 *; // freq(S->Pred) while the cost of topo order is freq(S->Pred) + freq(S->BB).; // We know Prob(S->BB) > Prob(S->Pred), so freq(S->BB) > freq(S->Pred), which; // means the cost of topological order is greater.; // When profile data is not available, however, we need to be more; // conservative. If the branch prediction is wrong, breaking the topo-order; // will actually yield a layout with large cost. For this reason, we need; // strong biased branch at block S with Prob(S->BB) in order to select; // BB->Succ. This is equivalent to looking the CFG backward with backward; // edge: Prob(Succ->BB) needs to >= HotProb in order to be selected (without; // profile data).; // --------------------------------------------------------------------------; // Case 3: forked diamond; // S; // / \; // / \; // BB Pred; // | \ / |; // | \ / |; // | X |; // | / \ |; // | / \ |; // S1 S2; //; // The current block is BB and edge BB->S1 is now being evaluated.; // As above S->BB was already selected because; // prob(S->BB) > prob(S->Pred). Assume that prob(BB->S1) >= prob(BB->S2).; //; // topo-order:; //; // S-------| ---S; // | | | |; // ---BB | | BB; // | | | |; // | Pred----| | S1----; // | | | |; // --(S1 or S2) ---Pred--; // |; // S2; //; // topo-c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:2614,avail,available,2614,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['avail'],['available']
Availability,"ing parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some refere",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2665,avail,available,2665,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['avail'],['available']
Availability,"ing the non-redundant half of a logically Hermitian array); // to real output; // - ""R2HC"" - a real-input DFT with output in ""halfcomplex"" format,; // i.e. real and imaginary parts for a transform of size n stored as; // r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; // - ""HC2R"" - computes the reverse of FFTW_R2HC, above; // - ""DHT"" - computes a discrete Hartley transform; //; // Sine/cosine transforms:; // Different types of transforms are specified by parameter kind of the SineCosine() static; // function. 4 different kinds of sine and cosine transforms are available; // DCT-I (REDFT00 in FFTW3 notation)- kind=0; // DCT-II (REDFT10 in FFTW3 notation)- kind=1; // DCT-III(REDFT01 in FFTW3 notation)- kind=2; // DCT-IV (REDFT11 in FFTW3 notation)- kind=3; // DST-I (RODFT00 in FFTW3 notation)- kind=4; // DST-II (RODFT10 in FFTW3 notation)- kind=5; // DST-III(RODFT01 in FFTW3 notation)- kind=6; // DST-IV (RODFT11 in FFTW3 notation)- kind=7; // Formulas and detailed descriptions can be found in the chapter; // ""What FFTW really computes"" of the FFTW manual; //; // NOTE: FFTW computes unnormalized transforms, so doing a transform, followed by its; // inverse will give the original array, multiplied by normalization constant; // (transform size(N) for FFT, 2*(N-1) for DCT-I, 2*(N+1) for DST-I, 2*N for; // other sine/cosine transforms); //; // How to use it:; // Call to the static function FFT returns a pointer to a fast fourier transform; // with requested parameters. Call to the static function SineCosine returns a; // pointer to a sine or cosine transform with requested parameters. Example:; // {; // Int_t N = 10; Double_t *in = new Double_t[N];; // TVirtualFFT *fftr2c = TVirtualFFT::FFT(1, &N, ""R2C"");; // fftr2c->SetPoints(in);; // fftr2c->Transform();; // Double_t re, im;; // for (Int_t i=0; i<N; i++); // fftr2c->GetPointComplex(i, re, im);; // ...; // fftr2c->SetPoints(in2);; // ...; // fftr2c->SetPoints(in3);; // ...; // }; // Different options are explained in the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h:1532,avail,available,1532,core/base/inc/TVirtualFFT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h,1,['avail'],['available']
Availability,"ing the; optionally normalized input) and output neurons are linear.; The type of hidden neurons is free, the default being sigmoids.; (One should still try to pass normalized inputs, e.g. between [0.,1]). The basic input is a TTree and two (training and test) TEventLists.; Input and output neurons are assigned a value computed for each event; with the same possibilities as for TTree::Draw().; Events may be weighted individually or via TTree::SetWeight().; 6 learning methods are available: kStochastic, kBatch,; kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS. This implementation, written by C. Delaere, is *inspired* from; the mlpfit package from J.Schwindling et al. with some extensions:. - the algorithms are globally the same; - in TMultilayerPerceptron, there is no limitation on the number of; layers/neurons, while MLPFIT was limited to 2 hidden layers; - TMultilayerPerceptron allows you to save the network in a root file, and; provides more export functionalities; - TMultilayerPerceptron gives more flexibility regarding the normalization of; inputs/outputs; - TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to; use cross-entropy errors, which allows to train a network for pattern; classification based on Bayesian posterior probability. ### Introduction. Neural Networks are more and more used in various fields for data; analysis and classification, both for research and commercial; institutions. Some randomly chosen examples are:. - image analysis; - financial movements predictions and analysis; - sales forecast and product shipping optimisation; - in particles physics: mainly for classification tasks (signal; over background discrimination). More than 50% of neural networks are multilayer perceptrons. This; implementation of multilayer perceptrons is inspired from the; <A HREF=""http://schwind.home.cern.ch/schwind/MLPfit.html"">MLPfit; package</A> originally written by Jerome Schwindling. MLPfit remains; one of the fastest tool for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:1799,error,errors,1799,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['errors']
Availability,"initializers and text proto; // messages like `key: < ... >` are an exception: a break is possible; // before a closing brace R if a break was inserted after the corresponding; // opening brace. The information about whether or not a break is needed; // before a closing brace R is stored in the ParenState field; // S.BreakBeforeClosingBrace where S is the state that R closes.; //; // In order to decide whether there can be a break before encountered right; // braces, this implementation iterates over the sequence of tokens and over; // the paren stack in lockstep, keeping track of the stack level which visited; // right braces correspond to in MatchingStackIndex.; //; // For example, consider:; // L. <- line number; // 1. {; // 2. {1},; // 3. {2},; // 4. {{3}}}; // ^ where we call this method with this token.; // The paren stack at this point contains 3 brace levels:; // 0. { at line 1, BreakBeforeClosingBrace: true; // 1. first { at line 4, BreakBeforeClosingBrace: false; // 2. second { at line 4, BreakBeforeClosingBrace: false,; // where there might be fake parens levels in-between these levels.; // The algorithm will start at the first } on line 4, which is the matching; // brace of the initial left brace and at level 2 of the stack. Then,; // examining BreakBeforeClosingBrace: false at level 2, it will continue to; // the second } on line 4, and will traverse the stack downwards until it; // finds the matching { on level 1. Then, examining BreakBeforeClosingBrace:; // false at level 1, it will continue to the third } on line 4 and will; // traverse the stack downwards until it finds the matching { on level 0.; // Then, examining BreakBeforeClosingBrace: true at level 0, the algorithm; // will stop and will use the second } on line 4 to determine the length to; // return, as in this example the range will include the tokens: {3}}; //; // The algorithm will only traverse the stack if it encounters braces, array; // initializer squares or text proto angle brackets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:1516,down,downwards,1516,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,2,['down'],['downwards']
Availability,"input data is not stored, the fitter will have to be; cleared and the data will have to be added again to try a; different formula. ### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all relevant information:; --GetParameters, GetCovarianceMatrix, etc; --the t-values of parameters and their significance can be reached by; GetParTValue() and GetParSignificance() methods. #### 3.2 If fitting with a pre-defined TF123, the fit results are also; written into this function. ### 4.Robust fitting - Least Trimmed Squares regression (LTS); Outliers are atypical(by definition), infrequant observations; data points; which do not appear to follow the characteristic distribution of the rest; of the data. These may reflect genuine properties of the underlying; phenomenon(variable), or be due to measurement errors or anomalies which; shouldn't be modelled. (StatSoft electronic textbook). Even a single gross outlier can greatly influence the results of least-; squares fitting procedure, and in this case use of robust(resistant) methods; is recommended. The method implemented here is based on the article and algorithm:; ""Computing LTS Regression for Large Data Sets"" by; P.J.Rousseeuw and Katrien Van Driessen; The idea of the method is to find the fitting coefficients for a subset; of h observations (out of n) with the smallest sum of squared residuals.; The size of the subset h should lie between (npoints + nparameters +1)/2; and n, and represents the minimal number of good points in the dataset.; The default value is set to (npoints + nparameters +1)/2, but of course; if you are sure that the data contains less outliers it's better to change; h according to your data. To perform a robust fit, call EvalRobust() function instead of Eval() after; adding the points and setting the fitting function.; Note, that standard errors on parameters are not computed!. */; ////////////////////////////////////////////////////////////////////////////////; ///default c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:6022,robust,robust,6022,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['robust'],['robust']
Availability,"instance containing information describing the failure. Success is; /// represented by a null pointer value.; ///; /// Instances of Error also contains a 'Checked' flag, which must be set; /// before the destructor is called, otherwise the destructor will trigger a; /// runtime error. This enforces at runtime the requirement that all Error; /// instances be checked or returned to the caller.; ///; /// There are two ways to set the checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1239,error,error,1239,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['error'],['error']
Availability,"instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more information. If a new error is; /// // created by a handler, it will be passed back to the caller of; /// // handleErrors and needs to be checked or return up to the stack.; /// // Otherwise, the passed-in error is considered consumed.; /// @endcode; ///; /// The handleAllErrors function is identical to handleErrors, except; /// that it has a void return type, and requires all errors to b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1790,error,error,1790,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,1,['error'],['error']
Availability,"int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovAccurate,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g116/top.html"">; CERNLIB (G116)</A>. The class stores coefficients needed to calculate \f$p(\lambda; \kappa, \beta^2)\f$; for fixed values of \f$\kappa\f$ and \f$\beta^2\f$.; Changing these values is computatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:1273,Avail,Available,1273,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['Avail'],['Available']
Availability,"interference (register pressure) across; // IndirectBr edges. Since IndirectBr edges tend to touch on many blocks,; // reducing liveness interference across those edges benefits global register; // allocation. Currently handles only certain cases.; //; // For example, unmerge %GEPI and %UGEPI as below.; //; // ---------- BEFORE ----------; // SrcBlock:; // ...; // %GEPIOp = ...; // ...; // %GEPI = gep %GEPIOp, Idx; // ...; // indirectbr ... [ label %DstB0, label %DstB1, ... label %DstBi ... ]; // (* %GEPI is alive on the indirectbr edges due to other uses ahead); // (* %GEPIOp is alive on the indirectbr edges only because of it's used by; // %UGEPI); //; // DstB0: ... (there may be a gep similar to %UGEPI to be unmerged); // DstB1: ... (there may be a gep similar to %UGEPI to be unmerged); // ...; //; // DstBi:; // ...; // %UGEPI = gep %GEPIOp, UIdx; // ...; // ---------------------------; //; // ---------- AFTER ----------; // SrcBlock:; // ... (same as above); // (* %GEPI is still alive on the indirectbr edges); // (* %GEPIOp is no longer alive on the indirectbr edges as a result of the; // unmerging); // ...; //; // DstBi:; // ...; // %UGEPI = gep %GEPI, (UIdx-Idx); // ...; // ---------------------------; //; // The register pressure on the IndirectBr edges is reduced because %GEPIOp is; // no longer alive on them.; //; // We try to unmerge GEPs here in CodGenPrepare, as opposed to limiting merging; // of GEPs in the first place in InstCombiner::visitGetElementPtrInst() so as; // not to disable further simplications and optimizations as a result of GEP; // merging.; //; // Note this unmerging may increase the length of the data flow critical path; // (the path from %GEPIOp to %UGEPI would go through %GEPI), which is a tradeoff; // between the register pressure and the length of data-flow critical; // path. Restricting this to the uncommon IndirectBr case would minimize the; // impact of potentially longer critical path, if any, and the impact on compile; // time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:1039,alive,alive,1039,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,3,['alive'],['alive']
Availability,"ion hardening is done after register allocation. With a; // relative abundance of registers, one register is reserved (X16) to be; // the taint register. X16 is expected to not clash with other register; // reservation mechanisms with very high probability because:; // . The AArch64 ABI doesn't guarantee X16 to be retained across any call.; // . The only way to request X16 to be used as a programmer is through; // inline assembly. In the rare case a function explicitly demands to; // use X16/W16, this pass falls back to hardening against speculation; // by inserting a DSB SYS/ISB barrier pair which will prevent control; // flow speculation.; // - It is easy to insert mask operations at this late stage as we have; // mask operations available that don't set flags.; // - The taint variable contains all-ones when no miss-speculation is detected,; // and contains all-zeros when miss-speculation is detected. Therefore, when; // masking, an AND instruction (which only changes the register to be masked,; // no other side effects) can easily be inserted anywhere that's needed.; // - The tracking of miss-speculation is done by using a data-flow conditional; // select instruction (CSEL) to evaluate the flags that were also used to; // make conditional branch direction decisions. Speculation of the CSEL; // instruction can be limited with a CSDB instruction - so the combination of; // CSEL + a later CSDB gives the guarantee that the flags as used in the CSEL; // aren't speculated. When conditional branch direction gets miss-speculated,; // the semantics of the inserted CSEL instruction is such that the taint; // register will contain all zero bits.; // One key requirement for this to work is that the conditional branch is; // followed by an execution of the CSEL instruction, where the CSEL; // instruction needs to use the same flags status as the conditional branch.; // This means that the conditional branches must not be implemented as one; // of the AArch64 conditional branch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:2501,mask,masking,2501,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,2,['mask'],"['masked', 'masking']"
Availability,"ion or PDF on frame with support for visualization of the uncertainty encoded in the given fit result fr.; /// \param[in] frame RooPlot to plot on; /// \param[in] fr The RooFitResult, where errors can be extracted; /// \param[in] Z The desired significance (width) of the error band; /// \param[in] params If non-zero, consider only the subset of the parameters in fr for the error evaluation; /// \param[in] argList Optional `RooCmdArg` that can be applied to a regular plotOn() operation; /// \param[in] linMethod By default (linMethod=true), a linearized error is shown.; /// \return The RooPlot the band was plotted on (for chaining of plotting commands).; ///; /// The linearized error is calculated as follows:; /// \f[; /// \mathrm{error}(x) = Z * F_a(x) * \mathrm{Corr}(a,a') * F_{a'}^\mathrm{T}(x),; /// \f]; ///; /// where; /// \f[; /// F_a(x) = \frac{ f(x,a+\mathrm{d}a) - f(x,a-\mathrm{d}a) }{2},; /// \f]; /// with \f$ f(x) \f$ the plotted curve and \f$ \mathrm{d}a \f$ taken from the fit result, and; /// \f$ \mathrm{Corr}(a,a') \f$ = the correlation matrix from the fit result, and \f$ Z \f$ = requested signifance (\f$ Z \sigma \f$ band); ///; /// The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; /// not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made; ///; /// Alternatively, a more robust error is calculated using a sampling method. In this method a number of curves; /// is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; /// from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; /// for each value of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; /// that at least 30 curves are expected to be outside the N% interval, and is minim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:781,error,error,781,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['error'],['error']
Availability,"ion parameter, which may contain a combination of the characters x,y,z,e; /// - option = ""x"" return the x projection into a TH1D histogram; /// - option = ""y"" return the y projection into a TH1D histogram; /// - option = ""z"" return the z projection into a TH1D histogram; /// - option = ""xy"" return the x versus y projection into a TH2D histogram; /// - option = ""yx"" return the y versus x projection into a TH2D histogram; /// - option = ""xz"" return the x versus z projection into a TH2D histogram; /// - option = ""zx"" return the z versus x projection into a TH2D histogram; /// - option = ""yz"" return the y versus z projection into a TH2D histogram; /// - option = ""zy"" return the z versus y projection into a TH2D histogram; ///; /// NB: the notation ""a vs b"" means ""a"" vertical and ""b"" horizontal; ///; /// option = ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// If option contains the string ""e"", errors are computed; ///; /// The projection is made for the selected bins only.; /// To select a bin range along an axis, use TAxis::SetRange, eg; /// h3.GetYaxis()->SetRange(23,56);; ///; /// NOTE 1: The generated histogram is named th3name + option; /// eg if the TH3* h histogram is named ""myhist"", then; /// h->Project3D(""xy""); produces a TH2D histogram named ""myhist_xy""; /// if a histogram of the same type already exists, it is overwritten.; /// The following sequence; /// h->Project3D(""xy"");; /// h->Project3D(""xy2"");; /// will generate two TH2D histograms named ""myhist_xy"" and ""myhist_xy2""; /// A different name can be generated by attaching a string to the option; /// For example h->Project3D(""name_xy"") will generate an histogram with the name: h3dname_name_xy.; ///; /// NOTE 2: If an histogram of the same type and with the same name already exists in current Directory,; /// the histogram is reset and filled again with the projected contents of the TH3.; ///; /// NOTE 3: The number of entries in t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:1143,error,errors,1143,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['error'],['errors']
Availability,"ion, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2705,avail,available,2705,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['avail'],['available']
Availability,"ion. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especial",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:11019,error,error,11019,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"irectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:2424,Error,Error,2424,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['Error'],['Error']
Availability,"is needed for getting correct parameter uncertainties for weighted fits.; /// ""P"" | Uses Pearson chi-square method. Uses expected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; /// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; /// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; /// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; /// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; /// ""Q"" | Quiet mode (minimum printing); /// ""V"" | Verbose mode (default is between Q and V); /// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting rang",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2095,error,errors,2095,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"is performed in Multithread whenever is enabled in ROOT;; /// - only the last fitted function is saved in the histogram;; /// - the histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; /// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; /// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; /// The current defaults are (""Minuit"",""Migrad"").; /// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; /// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; /// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; /// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the corresponding documentation.; /// The default minimizer can be also set in the resource file in etc/system.rootrc. For example; ///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5644,avail,available,5644,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['avail'],['available']
Availability,"is permitted as separate argument to both long and short options.; * @li Arguments to both short and long options may start with a @c '-' character. E.g.; * <code> -X-X </code>, <code>-X -X</code> or <code> --long-X=-X </code>. If @c -X; * and @c --long-X take an argument, that argument will be @c ""-X"" in all 3 cases.; * @li If using the built-in @ref ROOT::option::Arg::Optional ""Arg::Optional"", optional arguments must; * be attached.; * @li the special option @c -- (i.e. without a name) terminates the list of; * options. Everything that follows is a non-option argument, even if it starts with; * a @c '-' character. The @c -- itself will not appear in the parse results.; * @li the first argument that doesn't start with @c '-' or @c '--' and does not belong to; * a preceding argument-taking option, will terminate the option list and is the; * first non-option argument. All following command line arguments are treated as; * non-option arguments, even if they start with @c '-' . @n; * NOTE: This behaviour is mandated by POSIX, but GNU getopt() only honours this if it is; * explicitly requested (e.g. by setting POSIXLY_CORRECT). @n; * You can enable the GNU behaviour by passing @c true as first argument to; * e.g. @ref ROOT::option::Parser::parse() ""Parser::parse()"".; * @li Arguments that look like options (i.e. @c '-' followed by at least 1 character) but; * aren't, are NOT treated as non-option arguments. They are treated as unknown options and; * are collected into a list of unknown options for error reporting. @n; * This means that in order to pass a first non-option; * argument beginning with the minus character it is required to use the; * @c -- special option, e.g.; * @code; * program -x -- --strange-filename; * @endcode; * In this example, @c --strange-filename is a non-option argument. If the @c --; * were omitted, it would be treated as an unknown option. @n; * See @ref ROOT::option::Descriptor::longopt for information on how to collect unknown options.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:8591,error,error,8591,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['error'],['error']
Availability,"ist of literal tokens and; // operands. The target specific parser should generally eliminate any syntax; // which is not relevant for matching; for example, comma tokens should have; // already been consumed and eliminated by the parser. Most instructions will; // end up with a single literal token (the instruction name) and some number of; // operands.; //; // Some example inputs, for X86:; // 'addl' (immediate ...) (register ...); // 'add' (immediate ...) (memory ...); // 'call' '*' %epc; //; // The assembly matcher is responsible for converting this input into a precise; // machine instruction (i.e., an instruction with a well defined encoding). This; // mapping has several properties which complicate matching:; //; // - It may be ambiguous; many architectures can legally encode particular; // variants of an instruction in different ways (for example, using a smaller; // encoding for small immediates). Such ambiguities should never be; // arbitrarily resolved by the assembler, the assembler is always responsible; // for choosing the ""best"" available instruction.; //; // - It may depend on the subtarget or the assembler context. Instructions; // which are invalid for the current mode, but otherwise unambiguous (e.g.,; // an SSE instruction in a file being assembled for i486) should be accepted; // and rejected by the assembler front end. However, if the proper encoding; // for an instruction is dependent on the assembler context then the matcher; // is responsible for selecting the correct machine instruction for the; // current mode.; //; // The core matching algorithm attempts to exploit the regularity in most; // instruction sets to quickly determine the set of possibly matching; // instructions, and the simplify the generated code. Additionally, this helps; // to ensure that the ambiguities are intentionally resolved by the user.; //; // The matching is divided into two distinct phases:; //; // 1. Classification: Each operand is mapped to the unique set which ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:1795,avail,available,1795,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['avail'],['available']
Availability,"istical model, which will visualize that part of the model in the browser window. A number of options are available; for the `Draw` command, including (some options can be combined):. - ""e"" : calculate and visualize propagated model uncertainty; - ""auxratio"" : Draw a ratio auxiliary plot below the main plot; - ""auxsignif"" : Draw a significance auxiliary plot below the main plot; - ""pull"" : show panel of current parameter values, which can be dragged in order to change the values and visualize the; effect on the model (very experimental feature). Once a node has been drawn, the styling of subsequent draws can be controlled through `TStyle` objects; that will now appear in the `objects` folder in the workspace. A model can be fit to a dataset from the workspace using the `fitTo` context menu command and specifying; the name of a dataset in the workspace (if no name is given, an expected dataset corresponding to the; current state of the model will be used). A dialog will display the fit result status code when the; fit completes and then a `fits` folder will be found under the workspace (the workspace may need to; be collapsed and re-expanded to make it appear) where the fit result can be found, selected, and visualized.; In multi-channel models the channels that are included in the fit can be controlled with the checkboxes; in the browser. Clicking the checkbox will cycle through three states: checked, unchecked with; grey-underline, and checked with grey-underline. The grey-underline indicates that channel wont be; included in the fit (and will appear greyed out when the model is visualized). Many more features are available in the xRooBrowser, and further documentation and development can be found at; the <a href=""https://gitlab.cern.ch/will/xroofit"">xRooFit</a> repository, which is the library where the browser has; been originally developed. The author (Will Buttinger) is also very happy to be contacted with questions or; feedback about this new functionality. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx:2911,avail,available,2911,roofit/xroofit/src/xRooBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooBrowser.cxx,1,['avail'],['available']
Availability,"isting TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21371,error,error,21371,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['error'],['error']
Availability,"istograms). It holds all the line attributes. ## Line attributes; Line attributes are:. - [Line Color](\ref ATTLINE1); - [Line Width](\ref ATTLINE2); - [Line Style](\ref ATTLINE3). \anchor ATTLINE1; ## Line Color; The line color is a color index (integer) pointing in the ROOT; color table.; The line color of any class inheriting from `TAttLine` can; be changed using the method `SetLineColor` and retrieved using the; method `GetLineColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetLineColorAlpha()`, allows to set a transparent color.; In the following example the line color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetLineColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. \ancho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:1159,avail,available,1159,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,1,['avail'],['available']
Availability,"it and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetUpperPad` and `TRatioPlot::GetLowerPad` can be used to draw additional; elements on top of the existing ones.; `TRatioPlot::GetLowerRefGraph` returns a reference to the lower pad's graph that; is responsible for the range, which enables you to modify the range. \image html gpad_ratioplot.png; */; ////////////////////////////////////////////////////////////////////////////////; /// TRatioPlot default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2986,error,errors,2986,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,4,['error'],"['error', 'errors']"
Availability,"it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave positive).; /// Note that the user can decide to call FlushBaskets and AutoSave in her event loop; /// base on the number of events written instead of the number of bytes written.; ///; /// \note Calling `TTree::FlushBaskets` too often increases the IO time.; ///; /// \note Calling `TTree::AutoSave` too often increases the IO time and also the; /// file size.; ///; /// \note This method calls `TTree::ChangeFile` when the tree reaches a size; /// greater than `TTree::fgMaxTreeSize`. This doesn't happen if the tree is; /// attached to a `TMemFile` or derivate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1706,recover,recoverable,1706,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['recover'],['recoverable']
Availability,"it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// floa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2811,avail,available,2811,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['avail'],['available']
Availability,"ition = [&](bool doingAlt=false) { // returns true if need more toys; // if(std::isnan(target)) return false;; // auto pval = pCLs_toys(target_nSigma);; // if (!std::isnan(pval.first)) {; // double diff = std::abs(pval.first - target);; // double err = pval.second;; // if (err > 1e-4 && diff <= 2 * pval.second) {; // return true; // more toys needed; // // decide which type we'd want to generate; // // if it matches the type we are generating, then return true; // auto pNull = pNull_toys(target_nSigma);; // auto pAlt = pAlt_toys(target_nSigma);; // if ((doingAlt ? pAlt.second : pNull.second) < 1e-4) return false; // stop if error gets too small; // bool doAlt = (pAlt.second * pNull.first > pNull.second * pAlt.first);; // return doAlt == doingAlt;; // }; // }; // return false;; // };; // while(condition()) {; // bool doAlt = false;; // double relErrThreshold = 2;; // if(nullToys.size()<size_t(nToys)) {; // addToys(false,nToys);continue;; // } else if(altToys.size()<size_t(nToys)) {; // addToys(true,nToys);continue;; // } else {; // // see which have bigger errors ... generate more of that ...; // auto pNull = pNull_toys(target_nSigma);; // auto pAlt = pAlt_toys(target_nSigma);; // doAlt = (pAlt.second*pNull.first > pNull.second*pAlt.first);; // if( (doAlt ? pAlt.second : pNull.second) < 1e-4 ) break; // stop if error gets too small; // auto pCLs = pCLs_toys(target_nSigma);; // relErrThreshold = (doAlt) ? (pNull.second/pNull.first) : (pAlt.second/pAlt.first);; // relErrThreshold = std::min(2.,std::abs(relErrThreshold));; // std::cout << ""Current pCLs = "" << pCLs.first << "" +/- "" << pCLs.second; // << "" (pNull = "" << pNull.first << "" +/- "" << pNull.second; // << "" , pAlt = "" << pAlt.first << "" +/- "" << pAlt.second << "") ... generating more "" << (doAlt ?; // ""alt"" : ""null"") << "" toys "" << relErrThreshold << std::endl;; //; // }; // if( addToys(doAlt, nToys/*, seed, -1, target_nSigma,relErrThreshold*/) == 0) {; // break; // no toys got added, so stop looping; // }; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNLLVar.cxx:1088,error,errors,1088,roofit/xroofit/src/xRooNLLVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNLLVar.cxx,2,['error'],"['error', 'errors']"
Availability,"ition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observation, at a given confidence; level. \image html splot_mass-bkg-sPlot.png Figure 3 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom); obtained for \f${m_{\rm ES}}\f$ are represented as dots with error bars.; They are obtained from a fit using only information from \f$\Delta E\f$ and; \f${\cal F}\f$. <p>; Choosing \f${m_{\rm ES}}\f$ and \f$\Delta E\f$ as discriminating variables to; determine \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds,; for the control variable \f${\cal F}\f$ which is unknown to the fit, the two; \f$\hbox {$_s$}{\cal P}lots\f$ for signal and background shown in; Fig. 4.; In the \f$\hbox{$_s$}{\cal P}lot\f$ for signal one observes that error bars are; the largest in the \f$x\f$ regions where the background is the largest. \image html splot_fisher-bkg-sPlot.png Figure 4 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom) obtained; for \f${\cal F}\f$ are represented as dots with error bars. They are obtained; from a fit using only information from \f${m_{\rm ES}}\f$ and \f$\Delta E\f$. The results above can be obtained by running the tutorial Tes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:10432,error,error,10432,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['error'],['error']
Availability,"itself (to build the allocation actions that will call the registration; // functions). Further complicating the situation (a) the graph containing; // the registration functions is allowed to depend on other graphs (e.g. the; // graph containing the ORC runtime RTTI support) so we need to handle an; // unknown set of dependencies during bootstrap, and (b) these graphs may; // be linked concurrently if the user has installed a concurrent dispatcher.; //; // We satisfy these constraints by implementing a bootstrap phase during which; // allocation actions generated by MachOPlatform are appended to a list of; // deferred allocation actions, rather than to the graphs themselves. At the; // end of the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by the platform runtime; // during bootstrap only.; //; // 3. During bootstrap the MachOPlatformPlugin keeps a count of the number of; // graphs being linked (potentially concurrently), and we block until all; // of these graphs have completed linking. This is to avoid a race on the; // deferred-actions vector: the lookup for the runtime registration; // functions may return while some functions (those that are being; // incidentally linked in, but aren't reachable via the runtime functions); // are still",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:1548,avail,available,1548,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['avail'],['available']
Availability,"ject, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass eliminates local data store, LDS, uses from non-kernel functions.; // LDS is contiguous memory allocated per kernel execution.; //; // Background.; //; // The programming model is global variables, or equivalently function local; // static variables, accessible from kernels or other functions. For uses from; // kernels this is straightforward - assign an integer to the kernel for the; // memory required by all the variables combined, allocate them within that.; // For uses from functions there are performance tradeoffs to choose between.; //; // This model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more compli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:1090,avail,available,1090,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['avail'],['available']
Availability,"jor challenge of implementing this optimization is handling PHINodes,; // which may create loops in the data flow graph. This brings two complications.; //; // First, the data flow analysis in Step 1 needs to be circular. For example,; // %generic.input = addrspacecast float addrspace(3)* %input to float*; // loop:; // %y = phi [ %generic.input, %y2 ]; // %y2 = getelementptr %y, 1; // %v = load %y2; // br ..., label %loop, ...; // proving %y specific requires proving both %generic.input and %y2 specific,; // but proving %y2 specific circles back to %y. To address this complication,; // the data flow analysis operates on a lattice:; // uninitialized > specific address spaces > generic.; // All address expressions (our implementation only considers phi, bitcast,; // addrspacecast, and getelementptr) start with the uninitialized address space.; // The monotone transfer function moves the address space of a pointer down a; // lattice path from uninitialized to specific and then to generic. A join; // operation of two different specific address spaces pushes the expression down; // to the generic address space. The analysis completes once it reaches a fixed; // point.; //; // Second, IR rewriting in Step 2 also needs to be circular. For example,; // converting %y to addrspace(3) requires the compiler to know the converted; // %y2, but converting %y2 needs the converted %y. To address this complication,; // we break these cycles using ""poison"" placeholders. When converting an; // instruction `I` to a new address space, if its operand `Op` is not converted; // yet, we let `I` temporarily use `poison` and fix all the uses later.; // For instance, our algorithm first converts %y to; // %y' = phi float addrspace(3)* [ %input, poison ]; // Then, it converts %y2 to; // %y2' = getelementptr %y', 1; // Finally, it fixes the poison in %y' so that; // %y' = phi float addrspace(3)* [ %input, %y2' ]; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:3829,down,down,3829,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['down'],['down']
Availability,"ken,; // it doesn't feel like this is where the arrow comes from.; // For this reason, we start it in the middle of the left side; // of the token.; posStart.y = startRect.top + startRect.height / 2;. // End node has arrow head and we give it a bit more space.; posEnd.x = endRect.left - 4;; posEnd.y = endRect.top;. // Utility object with x and y offsets for handles.; var curvature = {; // We want bottom-to-top arrow to curve a bit more, so it doesn't; // overlap much with top-to-bottom curves (much more frequent).; x: topToBottom ? 15 : 25,; y: Math.min((posEnd.y - posStart.y) / 3, 10); }. // When destination is on the different line, we can make a; // curvier arrow because we have space for it.; // So, instead of using; //; // startHandle.x = posStart.x - curvature.x; // endHandle.x = posEnd.x - curvature.x; //; // We use the leftmost of these two values for both handles.; startHandle.x = Math.min(posStart.x, posEnd.x) - curvature.x;; endHandle.x = startHandle.x;. // Curving downwards from the start node...; startHandle.y = posStart.y + curvature.y;; // ... and upwards from the end node.; endHandle.y = posEnd.y - curvature.y;. } else if (leftToRight) {; // Case #2; // Starting from the top right corner...; posStart.x = startRect.right - 1;; posStart.y = startRect.top;. // ...and ending at the top left corner of the end token.; posEnd.x = endRect.left + 1;; posEnd.y = endRect.top - 1;. // Utility object with x and y offsets for handles.; var curvature = {; x: Math.min((posEnd.x - posStart.x) / 3, 15),; y: 5; }. // Curving to the right...; startHandle.x = posStart.x + curvature.x;; // ... and upwards from the start node.; startHandle.y = posStart.y - curvature.y;. // And to the left...; endHandle.x = posEnd.x - curvature.x;; // ... and upwards from the end node.; endHandle.y = posEnd.y - curvature.y;. } else {; // Case #3; // Starting from the bottom right corner...; posStart.x = startRect.right;; posStart.y = startRect.bottom;. // ...and ending also at the bottom ri",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:4368,down,downwards,4368,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['down'],['downwards']
Availability,"king on the desired location //; // with the left mouse button. To highlight some text, press the mouse //; // and drag the mouse while holding the left button pressed. //; // To select a word, double-click on it; //; // to select the text line - triple-click on it; //; // to select all do quadruple-click. //; // //; // Cut, Copy, Paste //; // //; // After selecting some text, you can cut or copy it to the clipboard. //; // A subsequent paste operation will insert the contents of the //; // clipboard at the current cursor location. //; // //; // Text Search //; // //; // The editor uses a standard Search dialog. You can specify a forward //; // or backward search direction starting from the current cursor //; // location according to the selection made of a case sensitive mode //; // or not. The last search can be repeated by pressing F3. //; // //; // Text Font //; // //; // You can change the text font by selecting Edit menu / Set Font. //; // The Font Dialog pops up and shows the Name, Style, and Size of any //; // available font. The selected font sample is shown in the preview //; // area. //; // //; // Executing Macros //; // //; // You can execute the currently loaded macro in the editor by //; // selecting Tools menu / Execute Macro; by clicking on the //; // corresponding toolbar button, or by using Ctrl+F5 accelerator keys. //; // This is identical to the command "".x macro.C"" in the root prompt //; // command line. //; // //; // Compiling Macros //; // //; // The currently loaded macro can be compiled with ACLiC if you select //; // Tools menu / Compile Macro; by clicking on the corresponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:2925,avail,available,2925,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['avail'],['available']
Availability,"l User Interface to manage styles; in ROOT. It allows the user to edit styles, import / export; them to macros, apply a style on the selected object or on; all canvases, change gStyle. Activate the style manager by selecting Edit menu / Style...; in the canvas window. The Style Manager interface is composed of two parts:; - the top level interface that manages a list of styles;; - the style editor, which deals with the current style settings. The combo box 'Available Styles' contains the list of available; styles for the current ROOT session and shows the currently; selected one. The field on the right shows the setting of the gStyle.; You can set the global variable gStyle to the selected style by; clicking on the button in the middle.; The group frame 'Apply on' displays information for the currently; selected canvas and object in the ROOT session. This selection might; be changed by clicking on another object with the middle mouse; button. You have a choice to apply a style on the selected object or; on all available canvases.; WARNING: You cannot undo the changes after applying the style! If; you are not sure of that action, it may be better to see a preview; of what you are going to apply.; If the check button 'Preview' is selected, a preview of the selected; canvas according to the selected style will be shown. The selection; of the next check button 'Run Time Preview' will apply updates of; the preview any time a value of the selected style is changed. For; drawings that take a time it is better to disable this option. Create a new style:; A new style can be created via the Style menu/New... or the toolbar.; A clone of the selected style will be used as a base of the new; style. All its values can be modified via the style editor later.; The dialog that appears will ask for the name and description of the; new style. Import a style (from a macro):; A style macro can be imported at any time. The new imported style in; the ROOT session will become the selected o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:1517,avail,available,1517,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['avail'],['available']
Availability,"l in verifying and comparing minimization routines. Many of these //; // are standard functions upon which it has become conventional to try all //; // new methods, quoting the performance in the publication of the algorithm //; // //; // Each test will produce one line (Test OK or Test FAILED) . At the end of //; // the test a table is printed showing the global results Real Time and //; // Cpu Time. One single number (ROOTMARKS) is also calculated showing the //; // relative performance of your machine compared to a reference machine //; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory and 120 GBytes IDE disk. //; // //; // In the main routine the fitter can be chosen through TVirtualFitter : //; // - Minuit //; // - Minuit2 //; // - Fumili //; //; // To run the test, do, eg; // root -b -q stressFit.cxx; // root -b -q ""stressFit.cxx(\""Minuit2\"")""; // root -b -q ""stressFit.cxx+(\""Minuit2\"")""; // //; // The verbosity can be set through the global parameter gVerbose : //; // -1: off 1: on //; // The tolerance on the parameter deviation from the minimum can be set //; // through gAbsTolerance . //; // //; // An example of output when all the tests run OK is shown below: //; // ******************************************************************* //; // * Minimization - S T R E S S suite * //; // ******************************************************************* //; // ******************************************************************* //; // * Starting S T R E S S * //; // ******************************************************************* //; // Test 1 : Wood.................................................. OK //; // Test 2 : RosenBrock............................................ OK //; // Test 3 : Powell................................................ OK //; // Test 4 : Fletcher.............................................. OK //; // Test 5 : GoldStein1............................................ OK //; // Test 6 : GoldStein2.......................................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:1537,toler,tolerance,1537,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['toler'],['tolerance']
Availability,"l letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the average of the s(j) for all bins if; the static function TProfile::Approximate() has been called.; This simple/crude approximation was suggested in order to keep the bin; during a fit operation. But note that this approximation is not the default behaviour.; See also TProfile::BuildOptions for more on error options. ### Creating and drawing a profile histogram; ~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof = new TProfile(""hprof"",""Profile of pz versus px"",100,-4,4,0,20);; Float_t px, py, pz;; for ( Int_t i=0; i<25000; i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hprof->Fill(px,pz,1);; }; hprof->Draw();; }; ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Profile histograms",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1964,error,error,1964,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['error'],['error']
Availability,"l loop.; ///; /// Instead of a logical iteration space, this allows specifying user-defined; /// loop counter values using increment, upper- and lower bounds. To; /// disambiguate the terminology when counting downwards, instead of lower; /// bounds we use \p Start for the loop counter value in the first body; /// iteration.; ///; /// Consider the following limitations:; ///; /// * A loop counter space over all integer values of its bit-width cannot be; /// represented. E.g using uint8_t, its loop trip count of 256 cannot be; /// stored into an 8 bit integer):; ///; /// DO I = 0, 255, 1; ///; /// * Unsigned wrapping is only supported when wrapping only ""once""; E.g.; /// effectively counting downwards:; ///; /// for (uint8_t i = 100u; i > 0; i += 127u); ///; ///; /// TODO: May need to add additional parameters to represent:; ///; /// * Allow representing downcounting with unsigned integers.; ///; /// * Sign of the step and the comparison operator might disagree:; ///; /// for (int i = 0; i < 42; i -= 1u); ///; //; /// \param Loc The insert and source location description.; /// \param BodyGenCB Callback that will generate the loop body code.; /// \param Start Value of the loop counter for the first iterations.; /// \param Stop Loop counter values past this will stop the loop.; /// \param Step Loop counter increment after each iteration; negative; /// means counting down.; /// \param IsSigned Whether Start, Stop and Step are signed integers.; /// \param InclusiveStop Whether \p Stop itself is a valid value for the loop; /// counter.; /// \param ComputeIP Insertion point for instructions computing the trip; /// count. Can be used to ensure the trip count is available; /// at the outermost loop of a loop nest. If not set,; /// defaults to the preheader of the generated loop.; /// \param Name Base name used to derive BB and instruction names.; ///; /// \returns An object representing the created control flow structure which; /// can be used for loop-associated directives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:1452,down,down,1452,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,2,"['avail', 'down']","['available', 'down']"
Availability,"ld (i.e. the first bit offset available for; // bitfields) and the end of the current data size in bits (i.e. the; // first bit offset available for non-bitfields). The current data; // size in bits is always a multiple of the char size; additionally,; // for ms_struct records it's also a multiple of the; // LastBitfieldStorageUnitSize (if set).; // The struct-layout algorithm is dictated by the platform ABI,; // which in principle could use almost any rules it likes. In; // practice, UNIXy targets tend to inherit the algorithm described; // in the System V generic ABI. The basic bitfield layout rule in; // System V is to place bitfields at the next available bit offset; // where the entire bitfield would fit in an aligned storage unit of; // the declared type; it's okay if an earlier or later non-bitfield; // is allocated in the same storage unit. However, some targets; // (those that !useBitFieldTypeAlignment(), e.g. ARM APCS) don't; // require this storage unit to be aligned, and therefore always put; // the bitfield at the next available bit offset.; // ms_struct basically requests a complete replacement of the; // platform ABI's struct-layout algorithm, with the high-level goal; // of duplicating MSVC's layout. For non-bitfields, this follows; // the standard algorithm. The basic bitfield layout rule is to; // allocate an entire unit of the bitfield's declared type; // (e.g. 'unsigned long'), then parcel it up among successive; // bitfields whose declared types have the same size, making a new; // unit as soon as the last can no longer store the whole value.; // Since it completely replaces the platform ABI's algorithm,; // settings like !useBitFieldTypeAlignment() do not apply.; // A zero-width bitfield forces the use of a new storage unit for; // later bitfields. In general, this occurs by rounding up the; // current size of the struct as if the algorithm were about to; // place a non-bitfield of the field's formal type. Usually this; // does not change the al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:1140,avail,available,1140,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['avail'],['available']
Availability,"le different parameters,; they should still fall on the straight line, but not the 45 degrees one.; The greater their departure from the straight line, the more evidence there; is, that the datasets come from different distributions.; The advantage of qq-plot is that it not only shows that the underlying; distributions are different, but, unlike the analytical methods, it also; gives information on the nature of this difference: heavier tails,; different location/scale, different shape, etc. Some examples of qqplots of 2 datasets:. \image html graf_graphqq1.png. ## 1 dataset:; Quantile-quantile plots are used to determine if the dataset comes from the; specified theoretical distribution, such as normal.; A qq-plot draws quantiles of the dataset against quantiles of the specified; theoretical distribution.; (NOTE, that density, not CDF should be specified); A straight line, going through 0.25 and 0.75 quantiles can also be plotted; for reference. It represents a robust linear fit, not sensitive to the; extremes of the dataset.; As in the 2 datasets case, departures from straight line indicate departures; from the specified distribution. ""The correlation coefficient associated with the linear fit to the data; in the probability plot (qq plot in our case) is a measure of the; goodness of the fit.; Estimates of the location and scale parameters of the distribution; are given by the intercept and slope. Probability plots can be generated; for several competing distributions to see which provides the best fit,; and the probability plot generating the highest correlation coefficient; is the best choice since it generates the straightest probability plot."". From ""Engineering statistic handbook"",. http://www.itl.nist.gov/div898/handbook/eda/section3/probplot.htm. Example of a qq-plot of a dataset from N(3, 2) distribution and; TMath::Gaus(0, 1) theoretical function. Fitting parameters; are estimates of the distribution mean and sigma. \image html graf_graphqq2.png. Reference",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphQQ.cxx:1816,robust,robust,1816,graf2d/graf/src/TGraphQQ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphQQ.cxx,1,['robust'],['robust']
Availability,"le ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10416,error,errors,10416,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"lect the ROOT marker color, default is black; ///; /// <tr><td> `MarkerSize(double size)` <td> Select the ROOT marker size; ///; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected, also use VLines(); /// to add vertical downward lines at end of curve to ensure proper closure. Add `DrawOption(""F"")` for filled drawing.; /// <tr><td> `FillColor(Int_t color)` <td> Select fill color by ROOT color code; ///; /// <tr><td> `Range(const char* name)` <td> Only draw curve in range defined by given name; ///; /// <tr><td> `Range(double lo, double hi)` <td> Only draw curve in specified range; ///; /// <tr><td> `VLines()` <td> Add vertical lines to y=0 at end points of curve; ///; /// <tr><td> `Precision(double eps)` <td> Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. Higher precision; /// will result in more and more densely spaced curve points; ///; /// <tr><td> `Invisible(bool flag)` <td> Add curve to frame, but do not display. Useful in combination AddTo(); ///; /// <tr><td> `VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true)`; /// <td> Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma'. The linear method is fast but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much) longer to calculate; ///; /// <tr><td> `VisualizeError(const RooFitResult& fitres, const RooArgSet& param, double Z=1, bool linearMethod=true)`; /// <td> Visualize the uncertainty on the subset of parameters 'param', as given in fitres, at 'Z' sigma'; /// </table>; ///; /// Details on error band visualization; /// -----------------------------------; /// *VisualizeError() uses plotOnWithErrorBand(). Documentation of the latter:*; /// \see plotOnWithErrorBand()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:7861,error,error,7861,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['error']
Availability,"lected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26208,error,error,26208,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"led if the library is; // 'only' dlclosed.; // On Ubuntu the linker strips the unused libraries. Eventhough; // stressHistogram is explicitly linked against libNet, it is not; // retained and thus is loaded only as needed in the middle part of; // the execution. Concretely this also means that it is loaded; // *after* the construction of the TApplication object and thus; // after the registration (atexit) of the EndOfProcessCleanups; // routine. Consequently, after the end of main, libNet is; // unloaded before EndOfProcessCleanups is called. When; // EndOfProcessCleanups is executed it indirectly needs the TClass; // for TSocket and its search will use resources that have already; // been unloaded (technically the function static in TUnixSystem's; // DynamicPath and the dictionary from libNet).; // Similarly, the ordering (before this commit) was broken in the; // following case:; // TApplication creation (EndOfProcessCleanups registration); // load UserLibrary; // create TFile; // Append UserObject to TFile; // and after the end of main the order of execution was; // unload UserLibrary; // call EndOfProcessCleanups; // Write the TFile; // attempt to write the user object.; // ....; // where what we need is to have the files closen/written before; // the unloading of the library.; // To solve the problem we now register an atexit function for; // every dictionary thus making sure there is at least one executed; // before the first library tear down after main.; // If atexit is called directly within a library's code, the; // function will called *either* when the library is 'dlclose'd or; // after then end of main (whichever comes first). We do *not*; // want the files to be closed whenever a library is unloaded via; // dlclose. To avoid this, we add the function (CallCloseFiles); // from the dictionary indirectly (via ROOT::RegisterModule). In; // this case the function will only only be called either when; // libCore is 'dlclose'd or right after the end of main.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1825,down,down,1825,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['down'],['down']
Availability,"left corner of the end token.; posEnd.x = endRect.left + 1;; posEnd.y = endRect.top - 1;. // Utility object with x and y offsets for handles.; var curvature = {; x: Math.min((posEnd.x - posStart.x) / 3, 15),; y: 5; }. // Curving to the right...; startHandle.x = posStart.x + curvature.x;; // ... and upwards from the start node.; startHandle.y = posStart.y - curvature.y;. // And to the left...; endHandle.x = posEnd.x - curvature.x;; // ... and upwards from the end node.; endHandle.y = posEnd.y - curvature.y;. } else {; // Case #3; // Starting from the bottom right corner...; posStart.x = startRect.right;; posStart.y = startRect.bottom;. // ...and ending also at the bottom right corner, but of the end token.; posEnd.x = endRect.right - 1;; posEnd.y = endRect.bottom + 1;. // Utility object with x and y offsets for handles.; var curvature = {; x: Math.min((posStart.x - posEnd.x) / 3, 15),; y: 5; }. // Curving to the left...; startHandle.x = posStart.x - curvature.x;; // ... and downwards from the start node.; startHandle.y = posStart.y + curvature.y;. // And to the right...; endHandle.x = posEnd.x + curvature.x;; // ... and downwards from the end node.; endHandle.y = posEnd.y + curvature.y;; }. // Put it all together into a path.; // More information on the format:; // https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths; var pathStr = ""M"" + posStart.x + "","" + posStart.y + "" "" +; ""C"" + startHandle.x + "","" + startHandle.y + "" "" +; endHandle.x + "","" + endHandle.y + "" "" +; posEnd.x + "","" + posEnd.y;. arrow.setAttribute(""d"", pathStr);; };. var drawArrows = function() {; const numOfArrows = document.querySelectorAll(""path[id^=arrow]"").length;; for (var i = 0; i < numOfArrows; ++i) {; drawArrow(i);; }; }. var toggleArrows = function(event) {; const arrows = document.querySelector(""#arrows"");; if (event.target.checked) {; arrows.setAttribute(""visibility"", ""visible"");; } else {; arrows.setAttribute(""visibility"", ""hidden"");; }; }. window.addEventListener(""resize"", drawA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:5684,down,downwards,5684,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['down'],['downwards']
Availability,"les of the rotated axes:. ~~~; Double_t tx,ty,tz,px,py,pz;; tx= a.ThetaX();; ...; pz= a.PhiZ();; ~~~. ### Setting The Rotations; The member function SetToIdentity() will set the rotation object; to the identity (no rotation). With a minor caveat, the Euler angles of the rotation may be set using; SetXEulerAngles() or individually set with SetXPhi(),; SetXTheta(), and SetXPsi(). These routines set the Euler; angles using the X-convention which is defined by a rotation about the Z-axis,; about the new X-axis, and about the new Z-axis. This is the convention used; in Landau and Lifshitz, Goldstein and other common physics texts. The; Y-convention Euler angles can be set with SetYEulerAngles(),; SetYPhi(), SetYTheta(), and SetYPsi(). The caveat; is that Euler angles usually define the rotation of the new coordinate system; with respect to the original system, however, the TRotation class specifies; the rotation of the object in the original system (an active rotation). To; recover the usual Euler rotations (ie. rotate the system not the object), you; must take the inverse of the rotation. The member functions SetXAxis(), SetYAxis(), and; SetZAxis() will create a rotation which rotates the requested axis; of the object to be parallel to a vector. If used with one argument, the; rotation about that axis is arbitrary. If used with two arguments, the; second variable defines the XY, YZ, or ZX; respectively. ### Inverse rotation. ~~~; TRotation a,b;; ...; b = a.Inverse(); // b is inverse of a, a is unchanged; b = a.Invert(); // invert a and set b = a; ~~~. ### Compound Rotations; The operator * has been implemented in a way that follows the; mathematical notation of a product of the two matrices which describe the; two consecutive rotations. Therefore the second rotation should be placed; first:. ~~~; r = r2 * r1;; ~~~. ### Rotation of TVector3; The TRotation class provides an operator * which allows to express; a rotation of a TVector3 analog to the mathematical notation. ~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:3529,recover,recover,3529,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['recover'],['recover']
Availability,"likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for the user.; This is done by multiplying the (I,J)th element by DEXDIN(I)*DEXDIN(J),; where DEXDIN is the derivative of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:12441,error,errors,12441,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"linkage would be; /// unique per module; /// as the GUID includes the module path. We could have a guid alias if; /// there wasn't any distinguishing path when each file was compiled, but; /// that should be rare so we'll punt on those.; /// These next 2 cases should not happen and will assert:; /// - Multiple instances with external linkage. This should be caught in; /// symbol resolution; /// - Non-existent FunctionSummary for Aliasee. This presents a hole in our; /// knowledge meaning we have to go conservative.; /// Otherwise, we calculate attributes for a function as:; /// 1. If we have a local linkage, take its attributes. If there's somehow; /// multiple, bail and go conservative.; /// 2. If we have an external/WeakODR/LinkOnceODR linkage check that it is; /// prevailing, take its attributes.; /// 3. If we have a Weak/LinkOnce linkage the copies can have semantic; /// differences. However, if the prevailing copy is known it will be used; /// so take its attributes. If the prevailing copy is in a native file; /// all IR copies will be dead and propagation will go conservative.; /// 4. AvailableExternally summaries without a prevailing copy are known to; /// occur in a couple of circumstances:; /// a. An internal function gets imported due to its caller getting; /// imported, it becomes AvailableExternally but no prevailing; /// definition exists. Because it has to get imported along with its; /// caller the attributes will be captured by propagating on its; /// caller.; /// b. C++11 [temp.explicit]p10 can generate AvailableExternally; /// definitions of explicitly instanced template declarations; /// for inlining which are ultimately dropped from the TU. Since this; /// is localized to the TU the attributes will have already made it to; /// the callers.; /// These are edge cases and already captured by their callers so we; /// ignore these for now. If they become relevant to optimize in the; /// future this can be revisited.; /// 5. Otherwise, go conservative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:1288,Avail,AvailableExternally,1288,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,3,['Avail'],['AvailableExternally']
Availability,"ll the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell and calls `IsInside()`; only on that bins. This reduces considerably the number of bins on which `IsInside()`; is called and therefore speed up by a huge factor the filling compare to the brute force; approach where `IsInside()` is called for all bins. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, `AddBin()` calls the; `AddBinToPartition()` method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the `ChangePartition()` method.; `ChangePartition()` deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times `Fill()` will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When `Fill()`; is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default Constructor. No boundaries specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:4613,down,down,4613,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['down'],['down']
Availability,"ll.) Flushing may degrade compression for some compression; algorithms and so it should be used only when necessary. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there; was enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the; stream are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least; the value returned by deflateBound (see below). If deflate does not return; Z_STREAM_END, then it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affect; the compression algorithm in any manner. deflate() returns Z_OK if some progress has ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3214,error,error,3214,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"lorIndex();; TColor *color = new TColor(ci, 1., 1., 1.);; ~~~. \anchor C03; ## Bright and dark colors; Dark and bright colors are used to add 3D effects to graphical objects like; TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots. Two static functions are available that return the bright or dark color number corresponding; to a given color index. If these variants don't already exist, they are created as needed:; ~~~ {.cpp}; Int_t dark = TColor::GetColorDark(color_index);; Int_t bright = TColor::GetColorBright(color_index);; ~~~. \anchor C031; ## Accessible Color Schemes; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. These three color schemes are available as color sets with 6, 8, and 10 colors, named; `kP[6, 8, 10]ColorName`. For example, `kP6Red` represents the red color within the P6 color scheme; (`P` for Petroff or Preferred). Begin_Macro; ../../../tutorials/graphics/accessiblecolorschemes.C; End_Macro. The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings.; It also demonstrates that they are effective in grayscale. \anchor C04; ## Grayscale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using; `TCanvas::SetGrayscale()`. Note that in grayscale mode, access via RGB; will return grayscale values according to ITU standards (and close to b&w; printer gray-scales), while access via HLS returns de-saturated gray-scales. The; image below shows the ROOT color wheel in grayscale mode. Begin_Macro(sour",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:4766,avail,available,4766,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"lows to change the default library. ## Available transform types:; FFT:; - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); in one or more dimensions, -1 in the exponent; - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); in one or more dimensions, +1 in the exponent; - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); in one or more dimensions,; - ""C2R"" - inverse transforms to ""R2C"", taking complex input; (storing the non-redundant half of a logically Hermitian array); to real output; - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; i.e. real and imaginary parts for a transform of size n stored as; r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; - ""HC2R"" - computes the reverse of FFTW_R2HC, above; - ""DHT"" - computes a discrete Hartley transform. ## Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static; function. 4 different kinds of sine and cosine transforms are available. - DCT-I (REDFT00 in FFTW3 notation)- kind=0; - DCT-II (REDFT01 in FFTW3 notation)- kind=1; - DCT-III(REDFT10 in FFTW3 notation)- kind=2; - DCT-IV (REDFT11 in FFTW3 notation)- kind=3; - DST-I (RODFT00 in FFTW3 notation)- kind=4; - DST-II (RODFT01 in FFTW3 notation)- kind=5; - DST-III(RODFT10 in FFTW3 notation)- kind=6; - DST-IV (RODFT11 in FFTW3 notation)- kind=7. Formulas and detailed descriptions can be found in the chapter; ""What FFTW really computes"" of the FFTW manual. NOTE: FFTW computes unnormalized transforms, so doing a transform, followed by its; inverse will give the original array, multiplied by normalization constant; (transform size(N) for FFT, 2*(N-1) for DCT-I, 2*(N+1) for DST-I, 2*N for; other sine/cosine transforms). ## How to use it:; Call to the static function FFT returns a pointer to a fast Fourier transform; with requested parameters. Call to the static function SineCosine returns a; pointer to a sine or cosine transform with reques",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1802,avail,available,1802,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['avail'],['available']
Availability,"lso informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progre",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5207,error,error,5207,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"lters and cutflow reports; An optional string parameter `name` can be passed to the Filter() method to create a **named filter**. Named filters; work as usual, but also keep track of how many entries they accept and reject. Statistics are retrieved through a call to the Report() method:. - when Report() is called on the main RDataFrame object, it returns a ROOT::RDF::RResultPtr<RCutFlowReport> relative to all; named filters declared up to that point; - when called on a specific node (e.g. the result of a Define() or Filter()), it returns a ROOT::RDF::RResultPtr<RCutFlowReport>; relative all named filters in the section of the chain between the main RDataFrame and that node (included). Stats are stored in the same order as named filters have been added to the graph, and *refer to the latest event-loop*; that has been run using the relevant RDataFrame. \anchor ranges; ### Ranges; When RDataFrame is not being used in a multi-thread environment (i.e. no call to EnableImplicitMT() was made),; Range() transformations are available. These act very much like filters but instead of basing their decision on; a filter expression, they rely on `begin`,`end` and `stride` parameters. - `begin`: initial entry number considered for this range.; - `end`: final entry number (excluded) considered for this range. 0 means that the range goes until the end of the dataset.; - `stride`: process one entry of the [begin, end) range every `stride` entries. Must be strictly greater than 0. The actual number of entries processed downstream of a Range() node will be `(end - begin)/stride` (or less if less; entries than that are available). Note that ranges act ""locally"", not based on the global entry count: `Range(10,50)` means ""skip the first 10 entries; *that reach this node*, let the next 40 entries pass, then stop processing"". If a range node hangs from a filter node,; and the range has a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; preceding fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:30834,avail,available,30834,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"lts that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation of values shared; /// among variations only happen once for all variations. Thus, the event loop; /// run-time typically scales much better than linearly with the number of; /// variations.; ///; /// RDataFrame lazily computes the varied values required to produce the; /// outputs of \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". If \ref; /// ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" was not called for a result, the computations are only; /// run for the nominal case.; ///; /// See other overloads for examples when variations are added for multiple existing columns,; /// or when the tags are auto-generated instead of being directly defined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2135,down,down,2135,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['down'],['down']
Availability,"lues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verbatim; /// ┬ ""Unknown""; /// |; /// v; /// True; /// |; /// v; /// ⊥ False; /// \endverbatim With ""True"" signifying that the expression is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:2037,avail,available,2037,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['avail'],['available']
Availability,"lues of parameters; /// e = 1; print errors (if e=1, v must be 1); /// c = 1; print Chisquare/Number of degrees of freedom; /// p = 1; print Probability; ///; /// For example: gStyle->SetOptFit(1011);; /// prints the fit probability, parameter names/values, and errors.; /// You can change the position of the statistics box with these lines; /// (where g is a pointer to the TGraph):; ///; /// TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats"");; /// st->SetX1NDC(newx1); //new x start position; /// st->SetX2NDC(newx2); //new x end position; ///; /// \anchor HFitExtra; /// ### Additional Notes on Fitting; ///; /// #### Fitting a histogram of dimension N with a function of dimension N-1; ///; /// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; /// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; /// For correct error scaling, the obtained parameter error are corrected as in the case when the; /// option ""W"" is used.; ///; /// #### User defined objective functions; ///; /// By default when fitting a chi square function is used for fitting. When option ""L"" is used; /// a Poisson likelihood function is used. Using option ""MULTI"" a multinomial likelihood fit is used.; /// Thes functions are defined in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; /// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:16840,error,error,16840,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"lways produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide characters are counted; * as 2 characters.; * @param last_column_min_percent (0-100) The minimum percentage of @c width that should be available; * for the last column (which typically contains the textual explanation of an option).; * If less space is available, the last column will be printed on its own line, indented; * according to @c last_column_own_line_max_percent.; * @param last_column_own_line_max_percent (0-100) If the last column is printed on its own line due to; * less than @c last_column_min_percent of the width being available, then only; * @c last_column_own_line_max_percent of the extra line(s) will be used for the; * last column's text. This ensures an indentation. See example below.; *; * @code; * // width=20, last_column_min_percent=50 (i.e. last col. min. width=10); * --3456789 1234567890; * 1234567890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=75; * --3456789; * 123456789012345; * 67890; *; * // width=20, last_column_min_percent=75 (i.e. last col. min. width=15); * // last_column_own_line_max_percent=33 (i.e. max. 5); * --3456789; * 12345; * 67890; * 12345; * 67890; * @endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:6399,avail,available,6399,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,2,['avail'],['available']
Availability,"ly created ASImage could be used ; * in any transformations.; *********/; /****f* libAfterImage/picture2asimage(); * NAME; * picture2asimage(); * SYNOPSIS; * ASImage *picture2asimage (struct ASVisual *asv,; * Pixmap rgb, Pixmap a,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * rgb 		 - source Pixmap for red, green and blue channels; * a 		 - source Pixmap for the alpha channel; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture2asimage will obtain XImage of the requested area of the; * X Pixmap, If alpha channel pixmap is supplied - it will be used to ; * encode ASImage's alpha channel. Alpha channel pixmap must be either; * 8 or 1 bit deep, and it must have the same dimentions as main Pixmap.; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2asimage ( struct ASVisual *asv, Pixmap p,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * ximage member of resulting ASImage.; * compression - degr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:4177,failure,failure,4177,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"m, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hess",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:11754,error,error,11754,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"m.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tblgen backend emits the node table (the .def file) for Clang; // type nodes.; //; // This file defines the AST type info database. Each type node is; // enumerated by providing its name (e.g., ""Builtin"" or ""Enum"") and; // base class (e.g., ""Type"" or ""TagType""). Depending on where in the; // abstract syntax tree the type will show up, the enumeration uses; // one of five different macros:; //; // TYPE(Class, Base) - A type that can show up anywhere in the AST,; // and might be dependent, canonical, or non-canonical. All clients; // will need to understand these types.; //; // ABSTRACT_TYPE(Class, Base) - An abstract class that shows up in; // the type hierarchy but has no concrete instances.; //; // NON_CANONICAL_TYPE(Class, Base) - A type that can show up; // anywhere in the AST but will never be a part of a canonical; // type. Clients that only need to deal with canonical types; // (ignoring, e.g., typedefs and other type aliases used for; // pretty-printing) can ignore these types.; //; // DEPENDENT_TYPE(Class, Base) - A type that will only show up; // within a C++ template that has not been instantiated, e.g., a; // type that is always dependent. Clients that do not need to deal; // with uninstantiated C++ templates can ignore these types.; //; // NON_CANONICAL_UNLESS_DEPENDENT_TYPE(Class, Base) - A type that; // is non-canonical unless it is dependent. Defaults to TYPE because; // it is neither reliably dependent nor reliably non-canonical.; //; // There is a sixth macro, independent of the others. Most clients; // will not need to use it.; //; // LEAF_TYPE(Class) - A type that never has inner types. Clients; // which can operate on such types more efficiently may wish to do so.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp:1811,reliab,reliably,1811,interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,2,['reliab'],['reliably']
Availability,"marker attributes are:. - [Marker color](\ref ATTMARKER1); - [Marker style](\ref ATTMARKER2); - [Marker line width](\ref ATTMARKER21); - [Marker size](\ref M3). \anchor ATTMARKER1; ## Marker color; The marker color is a color index (integer) pointing in the ROOT color; table.; The marker color of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerColor` and retrieved using the; method `GetMarkerColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency. `SetMarkerColorAlpha()`, allows to set a transparent color.; In the following example the marker color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetMarkerColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTMARKER2; ## Marker style. The Marker style defines the markers' shape.; The marker style of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerStyle` and retrieved using the; method `GetMarkerStyle`. The following list gives the currently supported markers (screen; and PostScript) style. Each marker style is identified by an integer number; (first column) corresponding to a marker shape (second column) and can be also; accessed via a global name (third column). ~~~ {.cpp}; Marker number Marker shape Marker name; 1 dot kDot; 2 + kPlus; 3 * kStar; 4",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx:1239,avail,available,1239,core/base/src/TAttMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx,1,['avail'],['available']
Availability,"matrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5261,error,error,5261,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"me extra options in a string; * like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");. TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");. dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4"", ""Variable 4"", ""units"", 'F');. dataloader->AddSpectator(""spec1 := var1*2"", ""Spectator 1"", ""units"", 'F');; dataloader->AddSpectator(""spec2 := var1*3"", ""Spectator 2"", ""units"", 'F');. // global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;. dataloader->SetBackgroundWeightExpression(""weight"");. TMVA::Experimental::Classification *cl = new TMVA::Experimental::Classification(dataloader, Form(""Jobs=%d"", jobs));. cl->BookMethod(TMVA:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:1890,ERROR,ERROR,1890,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,1,['ERROR'],['ERROR']
Availability,"mension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13947,error,errors,13947,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,5,"['Error', 'error']","['Errors', 'errors']"
Availability,"meters; // ====================================; // The current implementation supports date, time, date&time and timestamp; // data (all time intervals are not supported yet). To set or get date/time values,; // the following methods should be used:; // SetTime()/GetTime() - only time (hour:min:sec),; // SetDate()/GetDate() - only date (year-month-day),; // SetDatime()/GetDatime() - date and time; // SetTimestamp()/GetTimestamp() - timestamp with seconds fraction; // For some of these methods TDatime type can be used as parameter / return value.; // Be aware that TDatime supports only dates after 1995-01-01.; // There are also methods to get year, month, day, hour, minutes and seconds separately.; //; // Note that different SQL databases treat date/time types differently.; // For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; // Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; // ODBC interface provides access for time, date and timestamps,; // for PostgreSQL, TIMESTAMP is available and can be retrieved via all methods,; // the implementation for SQLite interprets the column content as; // a timestamp with second fraction.; // Due to these differences, one should use correct methods to access such data.; // For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; // access such data), while in Oracle it is date and time. Therefore,; // to get complete data from a 'DATE' column in Oracle, one should use the GetDatime() method.; //; // The only difference between timestamp and date/time is that timestamp has a fractional; // seconds part. Be aware that the fractional part has different meanings; // (actual value) in different SQL plugins.; // For PostgreSQL, it is given back as microseconds, while for SQLite3,; // milliseconds correspond to the fraction (similar to the DATETIME-functions; // implemented in the SQLite3 language).; //; // 5. Binary data; // ============",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:9751,avail,available,9751,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['avail'],['available']
Availability,"methods (algorithms) that can be instantiated:; The name shown below can be used to create them. More documentation can be found in the respective class. - Minuit (class TMinuitMinimizer); - Migrad (default); - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. The",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:1582,avail,available,1582,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['avail'],['available']
Availability,"modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32x2_t &outLo, uint32x2_t &outHi); * {; * outLo = (uint32x2_t)(in & 0xFFFFFFFF);; * outHi = (uint32x2_t)(in >> 32);; * in = UNDEFINED;; * }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2464,down,downcast,2464,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,"['avail', 'down']","['available', 'downcast']"
Availability,"mpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1332,avail,available,1332,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['avail'],['available']
Availability,"mple obtained through a Monte Carlo simulation based on the; distributions shown in Fig.; 1.; The data sample consists of 500 signal events and 5000 background events. Choosing \f$\Delta E\f$ and \f${\cal F}\f$ as discriminating variables to determine; \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds, for the control; variable \f${m_{\rm ES}}\f$ which is unknown to the fit, the two \f$\hbox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covariance matrix, and its negative components, in the definition of; Eq. (2). A word of caution is in order with respect to the error bars. Whereas; their sum in quadrature is identical to the statistical uncertainties; of the yields determined by the fit, and if, in addition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:9226,error,error,9226,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['error'],['error']
Availability,"mple() | Define a new column that is updated when the input sample changes, e.g. when switching tree being processed in a chain. |; | DefineSlot() | Same as Define(), but the user-defined function must take an extra `unsigned int slot` as its first parameter. `slot` will take a different value, `0` to `nThreads - 1`, for each thread of execution. This is meant as a helper in writing thread-safe Define() transformation when using RDataFrame after ROOT::EnableImplicitMT(). DefineSlot() works just as well with single-thread execution: in that case `slot` will always be `0`. |; | DefineSlotEntry() | Same as DefineSlot(), but the entry number is passed in addition to the slot number. This is meant as a helper in case the expression depends on the entry number. For details about entry numbers in multi-threaded runs, see [here](\ref helper-cols). |; | Filter() | Filter rows based on user-defined conditions. |; | FilterAvailable() | Specialized Filter. If the value of the input column is available, keep the entry, otherwise discard it. |; | FilterMissing() | Specialized Filter. If the value of the input column is missing, keep the entry, otherwise discard it. |; | Range() | Filter rows based on entry number (single-thread only). |; | Redefine() | Overwrite the value and/or type of an existing column. See Define() for more information. |; | RedefineSlot() | Overwrite the value and/or type of an existing column. See DefineSlot() for more information. |; | RedefineSlotEntry() | Overwrite the value and/or type of an existing column. See DefineSlotEntry() for more information. |; | Vary() | Register systematic variations for an existing column. Varied results are then extracted via VariationsFor(). |. ### Actions; Actions aggregate data into a result. Each one is described in more detail in the reference guide. In the following, whenever we say an action ""returns"" something, we always mean it returns a smart pointer to it. Actions only act on events that pass all preceding filter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:4766,avail,available,4766,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3536,error,error,3536,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['error'],['error']
Availability,"mpress is negative it indicates the compression level is not set yet.; /// The enumeration ROOT::RCompressionSetting::EAlgorithm associates each; /// algorithm with a number. There is a utility function to help; /// to set the value of compress. For example,; /// ROOT::CompressionSettings(ROOT::kLZMA, 1); /// will build an integer which will set the compression to use; /// the LZMA algorithm and compression level 1. These are defined; /// in the header file <em>Compression.h</em>.; /// Note that the compression settings may be changed at any time.; /// The new compression settings will only apply to branches created; /// or attached after the setting is changed and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:4709,Error,Error,4709,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Error'],['Error']
Availability,"n 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; /// ```; ///; /// If there is no authentication information in the 'options' argument; /// (i.e. not AUTH=""...."") the values of the environmental variables; /// S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain; /// the access key id and the secret ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:2489,avail,available,2489,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['avail'],['available']
Availability,"n (=""P""; drawoption); 'Draw bar chart': CheckBox: draw a bar chart (=""B"" drawoption); change the Fill Color with Fill in the Style Tab; => will show Bar menue in the Style Tab; 'Bar option': CheckBox: draw a bar chart (=""BAR"" drawoption); => will show Bar menue in the Style Tab; 3d Plot:; 'Type' : ComboBox: set histogram type Lego-Plot or Surface; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Error' : see 2D plot; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; 'Percentage': specifies the percentage of the bar which is drawn; brighter and darker (10% == BAR1 drawoption); 'Horizontal Bar': draw a horizontal bar chart. 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do:; TFile f(""hsimple.root"");; hpx->Draw(""BAR1""); // non ntuple histogram; ntuple->Draw(""px""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Slider the number of bins (shown in the field; below the Slider) can be changed to any number which; divides the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the slider the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using this slider the effect of binning the data into; bins can be made vi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:2575,avail,available,2575,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['avail'],['available']
Availability,"n _technique_ (integration). For observables present in given dataset; /// projection of PDF is achieved by constructing an average over all observable values in given set.; /// Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; ///; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per curve. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; ///; /// <tr><td> `EvalErrorValue(double value)` <td> Set curve points at which (pdf) evaluation errors occur to specified value. By default the; /// function value is plotted.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-stat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3325,error,errors,3325,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['errors']
Availability,"n drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->Fill(px,5*py);; }; h2e->Draw(""E"");; }; End_Macro. \anchor HP100; ### The bar chart option. The option ""B"" allows to draw simple vertical bar charts.; The bar width is controlled with `TH1::SetBarWidth()`,; and the bar offset within the bin, with `TH1::SetBarOffset()`.; These two settings are useful to draw several histograms on the; same plot as shown in the following example:. Begin_Macro(source); {; int i;; const Int_t nx = 8;; string os_X[nx] = {""8"",""32"",""128"",""512"",""2048"",""8192"",""32768"",""131072""};; float d_35_0[nx] = {0.75, -3.30, -0.92, 0.10, 0.08, -1.69, -1.29, -2.37};; float d_35_1[nx] = {1.01, -3.02, -0.65, 0.37, 0.34, -1.42, -1.02, -2.10};. auto cb = new TCanvas(""cb"",""cb"",600,400);; cb->SetGrid();. gStyle->SetHistMin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:27675,error,error,27675,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"n in X. The displayed error is by default the; standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; Profile histograms are in many cases an; elegant replacement of two-dimensional histograms. The inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter plot, but if Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile histogram with; much better precision than by a scatter plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the average of the s(j) for all bins if; the static function TProfile::Approximate() has been called.; This simple/crude approximation was suggested in orde",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1184,error,error,1184,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['error'],"['error', 'errors']"
Availability,"n in that block. This is because the standard RPO; /// algorithm does not track what things have the same value number, it only; /// tracks what the value number of a given operation is (the mapping is; /// operation -> value number). Thus, when a value number of an operation; /// changes, it must reprocess everything to ensure all uses of a value number; /// get updated properly. In constrast, the sparse algorithm we use *also*; /// tracks what operations have a given value number (IE it also tracks the; /// reverse mapping from value number -> operations with that value number), so; /// that it only needs to reprocess the instructions that are affected when; /// something's value number changes. The vast majority of complexity and code; /// in this file is devoted to tracking what value numbers could change for what; /// instructions when various things happen. The rest of the algorithm is; /// devoted to performing symbolic evaluation, forward propagation, and; /// simplification of operations based on the value numbers deduced so far; ///; /// In order to make the GVN mostly-complete, we use a technique derived from; /// ""Detection of Redundant Expressions: A Complete and Polynomial-time; /// Algorithm in SSA"" by R.R. Pai. The source of incompleteness in most SSA; /// based GVN algorithms is related to their inability to detect equivalence; /// between phi of ops (IE phi(a+b, c+d)) and op of phis (phi(a,c) + phi(b, d)).; /// We resolve this issue by generating the equivalent ""phi of ops"" form for; /// each op of phis we see, in a way that only takes polynomial time to resolve.; ///; /// We also do not perform elimination by using any published algorithm. All; /// published algorithms are O(Instructions). Instead, we use a technique that; /// is O(number of operations with the same value number), enabling us to skip; /// trying to eliminate things that have unique value numbers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:2482,Redundant,Redundant,2482,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['Redundant'],['Redundant']
Availability,"n integer representing the result index of the; /// comparison.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpistri(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRI / PCMPISTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the index of the lowest set bit or the; /// highest set bit is returned. \n; /// 0: The index of the least significant set bit. \n; /// 1: The index of the most significant set bit. \n; /// \returns Returns an integer representing the result index of the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1652,mask,mask,1652,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['mask'],['mask']
Availability,"n is designed to replace the internal; /// implementation of the old TTree::Branch (whose implementation; /// has been moved to BranchOld).; ///; /// NOTE: The 'Bronch' method supports only one possible calls; /// signature (where the object type has to be specified; /// explicitly and the address must be the address of a pointer).; /// For more flexibility use 'Branch'. Use Bronch only in (rare); /// cases (likely to be legacy cases) where both the new and old; /// implementation of Branch needs to be used at the same time.; ///; /// This function is far more powerful than the old Branch; /// function. It supports the full C++, including STL and has; /// the same behaviour in split or non-split mode. classname does; /// not have to derive from TObject. The function is based on; /// the new TStreamerInfo.; ///; /// Build a TBranchElement for an object of class classname.; ///; /// addr is the address of a pointer to an object of class; /// classname. The class dictionary must be available (ClassDef; /// in class header).; ///; /// Note: See the comments in TBranchElement::SetAddress() for a more; /// detailed discussion of the meaning of the addr parameter.; ///; /// This option requires access to the library where the; /// corresponding class is defined. Accessing one single data; /// member in the object implies reading the full object.; ///; /// By default the branch buffers are stored in the same file as the Tree.; /// use TBranch::SetFile to specify a different file; ///; /// IMPORTANT NOTE about branch names:; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` instead of simply `subbranch`.; /// This situation happens when the top level object; /// has two or more members referencing the same class.; /// For example, if a Tree has two branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1181,avail,available,1181,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,"n it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9573,error,errors,9573,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"n the ""tail position"" (i.e. the immediate; /// predecessor of a ReturnInst instruction).; ///; /// Since the sibling call optimization causes the callee to reuse the caller's; /// stack, if we could delay the generation of the stack protector check until; /// later in CodeGen after the sibling call decision was made, we get both the; /// tail call optimization and the stack protector check!; ///; /// A few goals in solving this problem were:; ///; /// 1. Preserve the architecture independence of stack protector generation.; ///; /// 2. Preserve the normal IR level stack protector check for platforms like; /// OpenBSD for which we support platform-specific stack protector; /// generation.; ///; /// The main problem that guided the present solution is that one can not; /// solve this problem in an architecture independent manner at the IR level; /// only. This is because:; ///; /// 1. The decision on whether or not to perform a sibling call on certain; /// platforms (for instance i386) requires lower level information; /// related to available registers that can not be known at the IR level.; ///; /// 2. Even if the previous point were not true, the decision on whether to; /// perform a tail call is done in LowerCallTo in SelectionDAG (or; /// CallLowering in GlobalISel) which occurs after the Stack Protector; /// Pass. As a result, one would need to put the relevant callinst into the; /// stack protector check success basic block (where the return inst is; /// placed) and then move it back later at ISel/MI time before the; /// stack protector check if the tail call optimization failed. The MI; /// level option was nixed immediately since it would require; /// platform-specific pattern matching. The ISel level option was; /// nixed because SelectionDAG only processes one IR level basic block at a; /// time implying one could not create a DAG Combine to move the callinst.; ///; /// To get around this problem:; ///; /// 1. SelectionDAG can only process one block at a tim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h:1899,avail,available,1899,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,1,['avail'],['available']
Availability,"n, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///; /// This reduce algorithm is used within a warp where only the first; /// 'n' (n <= WARPSIZE) lanes are active. It is typically used when the; /// number of OpenMP threads in a parallel region is not a multiple of; /// WARPSIZE. The algorithm is implemented in the runtime as follows:; ///; /// void; /// contiguous_partial_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn,; /// int size, int lane_id) {; /// int curr_size;; /// int offset;; /// curr_size = size;; /// mask = curr_size/2;; /// while (offset>0) {; /// ShuffleReduceFn(reduce_data, lane_id, offset, 1);; /// curr_size = (curr_size+1)/2;; /// offset = curr_size/2;; /// }; /// }; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// if (lane_id < offset); /// reduce_elem = reduce_elem REDUCE_OP remote_elem; /// else; /// reduce_elem = remote_elem; ///; /// This algorithm assumes that the data to be reduced are located in a; /// contiguous subset of lanes starting from the first. When there is; /// an odd number of active lanes, the data in the last lane is not; /// aggregated with any other lane's dat but is instead copied over.; ///; /// Dispersed Partial Warp Reduction; ///; /// This algorithm is used within a warp when any discontiguous subset of; /// lanes are active. It is used to implement the reduction operation; /// across lanes in an OpenMP simd region or in a nested parallel region.; ///; /// void; /// dispersed_partial_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// int size, remote_id;; /// int logical_la",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:6343,mask,mask,6343,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['mask'],['mask']
Availability,"n; // o Release memory occupied by dead passes; // o If Analysis information is dirtied by a pass then regenerate Analysis; // information before it is consumed by another pass.; //; // Pass Manager Infrastructure uses multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManager : public Pass, public PMDataManager;; //; // MPPassManager manages ModulePasses and FPPassManagers; //; // [o] class PassManager;; //; // This is a external interface used by various tools to manages passes. It; // relies on PassManagerImpl to do all the tasks.; //; // [o] class PassManagerI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:1256,avail,available,1256,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['avail'],['available']
Availability,"nX,Y, TH2::ProfileX,Y, TProfile::ProjectionX; - make a 1-D, 2-D or profile out of a 3-D histogram; see functions TH3::ProjectionZ, TH3::Project3D. One can fit these projections via:; ~~~ {.cpp}; TH2::FitSlicesX,Y, TH3::FitSlicesZ.; ~~~. \anchor random-numbers; ### Random Numbers and histograms. TH1::FillRandom can be used to randomly fill a histogram using; the contents of an existing TF1 function or another; TH1 histogram (for all dimensions).; For example, the following two statements create and fill a histogram; 10000 times with a default gaussian distribution of mean 0 and sigma 1:; ~~~ {.cpp}; TH1F h1(""h1"", ""histo from a gaussian"", 100, -3, 3);; h1.FillRandom(""gaus"", 10000);; ~~~; TH1::GetRandom can be used to return a random number distributed; according to the contents of a histogram. \anchor making-a-copy; ### Making a copy of a histogram; Like for any other ROOT object derived from TObject, one can use; the Clone() function. This makes an identical copy of the original; histogram including all associated errors and functions, e.g.:; ~~~ {.cpp}; TH1F *hnew = (TH1F*)h->Clone(""hnew"");; ~~~. \anchor normalizing; ### Normalizing histograms. One can scale a histogram such that the bins integral is equal to; the normalization parameter via TH1::Scale(Double_t norm), where norm; is the desired normalization divided by the integral of the histogram. \anchor drawing-histograms; ## Drawing histograms. Histograms are drawn via the THistPainter class. Each histogram has; a pointer to its own painter (to be usable in a multithreaded program).; Many drawing options are supported.; See THistPainter::Paint() for more details. The same histogram can be drawn with different options in different pads.; When a histogram drawn in a pad is deleted, the histogram is; automatically removed from the pad or pads where it was drawn.; If a histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is update",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:16571,error,errors,16571,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"nal to contents; 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1..4, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a cartesian lego plot; 'Palette' : the color palette is drawn; 'Front' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen.; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the sliders the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:2523,avail,available,2523,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['avail'],['available']
Availability,"nce otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8108,Reliab,Reliability,8108,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,"['Reliab', 'error']","['Reliability', 'error']"
Availability,"nces of Error also contains a 'Checked' flag, which must be set; /// before the destructor is called, otherwise the destructor will trigger a; /// runtime error. This enforces at runtime the requirement that all Error; /// instances be checked or returned to the caller.; ///; /// There are two ways to set the checked flag, depending on what state the; /// Error instance is in. For Error instances indicating success, it; /// is sufficient to invoke the boolean conversion operator. E.g.:; ///; /// @code{.cpp}; /// Error foo(<...>);; ///; /// if (auto E = foo(<...>)); /// return E; // <- Return E if it is in the error state.; /// // We have verified that E was in the success state. It can now be safely; /// // destroyed.; /// @endcode; ///; /// A success value *can not* be dropped. For example, just calling 'foo(<...>)'; /// without testing the return value will raise a runtime error, even if foo; /// returns success.; ///; /// For Error instances representing failure, you must use either the; /// handleErrors or handleAllErrors function with a typed handler. E.g.:; ///; /// @code{.cpp}; /// class MyErrorInfo : public ErrorInfo<MyErrorInfo> {; /// // Custom error info.; /// };; ///; /// Error foo(<...>) { return make_error<MyErrorInfo>(...); }; ///; /// auto E = foo(<...>); // <- foo returns failure with MyErrorInfo.; /// auto NewE =; /// handleErrors(std::move(E),; /// [](const MyErrorInfo &M) {; /// // Deal with the error.; /// },; /// [](std::unique_ptr<OtherError> M) -> Error {; /// if (canHandle(*M)) {; /// // handle error.; /// return Error::success();; /// }; /// // Couldn't handle this error instance. Pass it up the stack.; /// return Error(std::move(M));; /// });; /// // Note - The error passed to handleErrors will be marked as checked. If; /// // there is no matched handler, a new error with the same payload is; /// // created and returned.; /// // The handlers take the error checked by handleErrors as an argument,; /// // which can be used to retrieve more i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h:1294,Error,Error,1294,interpreter/llvm-project/llvm/include/llvm/Support/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Error.h,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"nchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden line removal. |; | ""LEGO1"" | Draw a lego plot with hidden surface removal. |; | ""LEGO2"" | Draw a lego plot using colors to show the cell contents When the option ""0"" is used with any LEGO option, the empty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6222,error,errors,6222,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],"['error', 'errors']"
Availability,"ncoded into XImage. In case requested depth is 1 then; * alpha channel is interpreted like so: 127 or greater is encoded as 1,; * otherwise as 0.; * Missing scanlines get filled with 1s as they signify absence of mask.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.mask_ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2mask_ximage(). If any other behaviour is; * desired - make sure you set im->alt.mask_ximage to NULL, to dissociate; * XImage object from ASImage.; *********/; /****f* libAfterImage/asimage2mask_ximage(); * NAME; * asimage2mask_ximage() - same as asimage2alpha_ximage(). Supplied for ; * convinience and compatibility with older versions.; * SYNOPSIS; * XImage *asimage2mask_ximage (struct ASVisual *asv, ASImage *im);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1.; * NULL on failure.; *********/; /****f* libAfterImage/asimage2pixmap(); * NAME; * asimage2pixmap(); * SYNOPSIS; * Bool	 asimage2drawable( struct ASVisual *asv, Drawable d, ASImage *im,; * GC gc,; * 			 int src_x, int src_y, int dest_x, int dest_y,; * 		 		 unsigned int width, unsigned int height,; *				 		 Bool use_cached);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * d 			- destination drawable - Pixmap or Window; * im 		- source ASImage; * gc 		- precreated GC to use for XImage transfer. If NULL,; * 			 asimage2drawable() will use DefaultGC.; * src_x - Specifies the offset in X from the left edge of the image; * defined by the ASImage structure.; * src_y - Specifies the offset in Y from the top edge of the image; * defined by the ASImage structure.; * dest_x,dest_y- Specify the x and y coordinates, which are relative to; * the origin of the drawable and are the coordinates of; * the subimage.; * width,height - Specify the width and height of the subimage, which; * define the d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:2715,failure,failure,2715,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"nction is; /// called with a BL instruction, and the outlined function tail-calls the; /// original call destination.; ///; /// That is,; ///; /// I1 OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// BL f I2; /// B f; ///; /// +-------------------------+--------+-----+; /// | | Thumb2 | ARM |; /// +-------------------------+--------+-----+; /// | Call overhead in Bytes | 4 | 4 |; /// | Frame overhead in Bytes | 0 | 0 |; /// | Stack fixup required | No | No |; /// +-------------------------+--------+-----+; ///; /// \p MachineOutlinerNoLRSave implies that the function should be called using; /// a BL instruction, but doesn't require LR to be saved and restored. This; /// happens when LR is known to be dead.; ///; /// That is,; ///; /// I1 OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// I3 I2; /// I3; /// BX LR; ///; /// +-------------------------+--------+-----+; /// | | Thumb2 | ARM |; /// +-------------------------+--------+-----+; /// | Call overhead in Bytes | 4 | 4 |; /// | Frame overhead in Bytes | 2 | 4 |; /// | Stack fixup required | No | No |; /// +-------------------------+--------+-----+; ///; /// \p MachineOutlinerRegSave implies that the function should be called with a; /// save and restore of LR to an available register. This allows us to avoid; /// stack fixups. Note that this outlining variant is compatible with the; /// NoLRSave case.; ///; /// That is,; ///; /// I1 Save LR OUTLINED_FUNCTION:; /// I2 --> BL OUTLINED_FUNCTION I1; /// I3 Restore LR I2; /// I3; /// BX LR; ///; /// +-------------------------+--------+-----+; /// | | Thumb2 | ARM |; /// +-------------------------+--------+-----+; /// | Call overhead in Bytes | 8 | 12 |; /// | Frame overhead in Bytes | 2 | 4 |; /// | Stack fixup required | No | No |; /// +-------------------------+--------+-----+; ///; /// \p MachineOutlinerDefault implies that the function should be called with; /// a save and restore of LR to the stack.; ///; /// That is,; ///; /// I1 Save LR OUTLIN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:2150,avail,available,2150,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['avail'],['available']
Availability,"nd shows the current print option in use. ""Predefined"" combo box - contains a list of predefined functions; in ROOT. The default one is Gaussian. ""Operation"" radio button group defines selected operational mode; between functions: NOP - no operation (default); ADD - addition; CONV - convolution (will be implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF option 'M' - after minimum is; found, search for a new one.; ""Add to list"" sets On/Off option '+'- add function to the list; without deleting the previous. Draw options:; ""SAME"" sets On/Off function drawing on the same pad.; ""No drawing"" sets On/Off option '0'- do not draw fun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:2143,Robust,Robust,2143,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,2,"['Robust', 'robust']","['Robust', 'robust']"
Availability,"nd string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMCHECKBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGRadioButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Radio buttons are grouped usually in logical sets of two or more; buttons to present mutually exclusive choices. Selecting a radio button will generate the event:; - kC_COMMAND, kCM_RADIOBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMRADIOBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGSplitButton; \ingroup guiwidgets. Implements a button with added menu functionality.; There are 2 modes of operation available. If the button is split, a menu will popup when the menu area of the; button is clicked. Activating a menu item changes the functionality; of the button by having it emit a additional signal when it is; clicked. The signal emitted when the button is clicked, is the; ItemClicked(Int_t) signal with a different fixed value for the; Int_t that corresponds to the id of the activated menu entry. If the button is not split, clicking it will popup the menu and the; ItemClicked(Int_t) signal will be emitted when a menu entry is; activated. The value of the Int_t is again equal to the value of; the id of the activated menu entry. The mode of operation of a SplitButton can be changed on the fly; by calling the SetSplit(Bool_t) method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:4120,avail,available,4120,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['avail'],['available']
Availability,"ne that was clicked. A button group is by default non-exclusive.; All radio buttons that are inserted, will be mutually exclusive even; if the button group is non-exclusive. There are two ways of using a button group:. The button group is a parent widget of a number of buttons,; i.e. the button group is the parent argument in the button; constructor. The buttons are assigned identifiers 1, 2, 3 etc.; in the order they are created or you can specify button id in; the button constructor. A TGButtonGroup can display a frame and; a title because it inherits from TGGroupFrame. Example:. ```; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);. // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");. // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");. // map all buttons; bg->Show();; ```. NOTE: there is no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. - Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; - Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; - Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. \class TGHButtonGroup; \ingroup guiwidgets. Organizes TGButton widgets in a group with one horizontal row. TGHButtonGroup is a; convenience class that offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. \class TGVButtonGroup; \ingroup guiwidgets. Organizes TGButton widgets in a group with one vertical column. TGVButtonGroup is a; convenience class that offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:2227,down,down,2227,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,1,['down'],['down']
Availability,"ned int height,; * ASVectorPalette *palette,; * ASAltImFormats out_format,; * unsigned int compression,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * vector - data to be attached to new ASImage and used to generate; * RGB image; * width, height - size of the new image.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * New ASImage on success, NULL on failure.; * SEE ALSO; * colorize_asimage_vector(), create_asimage(), set_asimage_vector(); *********/; /****f* libAfterImage/transform/slice_asimage2(); * NAME; * slice_asimage2() - slice ASImage leaving its corners intact, and scaling ; * the middle part.; * SYNOPSIS; * ASImage*; * slice_asimage2( ASVisual *asv, ASImage *src,; * int slice_x_start, int slice_x_end,; * int slice_y_start, int slice_y_end,; * int to_width,; * int to_height,; * Bool scaled,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage.; * slice_x_start - ending of the left corners; * slice_x_end - begining of the right corners; * slice_y_start - ending of the top corners; * slice_y_end - begining of the bottom corners; * to_width - width of the generated image;; * to_height - height of the generated image;; * scaled - if True - middle part of the image will be scaled, ; * otherwise - tiled;; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.;; * compression_out- compression level of resulting image in range 0-100;; * quality - output quality.; * RETURN VALUE; * New ASImage on success, NULL on failure.; * SEE ALSO; * scale_asimage(), tile_asimage(); *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:3359,failure,failure,3359,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"nels of ASImage then gets decoded, and encoded into XImage.; * Missing scanlines get filled with black color.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2ximage(). If any other behaviour is; * desired - make sure you set im->alt.ximage to NULL, to dissociate; * XImage object from ASImage.; * SEE ALSO; * create_visual_ximage(); *********/; /****f* libAfterImage/asimage2alpha_ximage(); * NAME; * asimage2alpha_ximage(); * SYNOPSIS; * XImage *asimage2alpha_ximage (struct ASVisual *asv, ; * ASImage *im, Bool bitmap);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * im 		- source ASImage; * bitmap - if True resulting XImage will have depth of 1 bit -; * traditional X mask; otherwise it will have depth of 8; * (usefull for XFree86 RENDER extension); * RETURN VALUE; * On success returns newly created and encoded XImage of the depth 1 or 8.; * NULL on failure.; * DESCRIPTION; * asimage2alpha_ximage() creates new XImage of the exact same size as; * supplied ASImage, and depth 1 or 8. Alpha channels of ASImage then gets; * decoded, and encoded into XImage. In case requested depth is 1 then; * alpha channel is interpreted like so: 127 or greater is encoded as 1,; * otherwise as 0.; * Missing scanlines get filled with 1s as they signify absence of mask.; * NOTES; * Returned pointer to XImage will also be stored in im->alt.mask_ximage,; * and It will be destroyed when XImage is destroyed, or reused in any; * subsequent calls to asimage2mask_ximage(). If any other behaviour is; * desired - make sure you set im->alt.mask_ximage to NULL, to dissociate; * XImage object from ASImage.; *********/; /****f* libAfterImage/asimage2mask_ximage(); * NAME; * asimage2mask_ximage() - same as asimage2alpha_ximage(). Supplied for ; * convinience and compatibility with older versions.; * SYNOPSIS; * XImage *asimage2mask_ximage (struct ASVisual *asv, ASI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:1526,failure,failure,1526,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"nfoldSys has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds; features to TUnfoldSys, related to possible complex multidimensional; arrangements of bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfoldSys are; the getter functions. For TUnfoldSys, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation. <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>. Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfoldSys:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>repeated calls to SubtractBackground() to specify background; sources</li>; <li>repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:2446,avail,available,2446,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['avail'],['available']
Availability,"ng ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture_ximage2asimage will attempt to create new ASImage with the same; * dimensions as supplied XImage. If both XImages are supplied - they must; * have same dimentions. XImage will be decoded based on; * supplied ASVisual, and resulting scanlines will be encoded into; * ASImage.; *********/; /****f* libAfterImage/ximage2asimage(); * NAME; * ximage2asimage() - same as picture_ximage2asimage with alpha_ximage ; * set to NULL. Supplied for compatibility with older versions and for ; * convinience.; * SYNOPSIS; * ASImage *ximage2asimage ( struct ASVisual *asv, XImage * xim,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * xim 		 - source XImage; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2ximage( ASVisual *asv, Pixmap p, int x, int y,; * unsigned int width, unsigned int height,; *						 unsigned long plane_mask,; * unsigned int compression);; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing data in XImage format, ; * on success. NULL on failure.; * DESCRIPTION; * pixmap2ximage will obtain XImage of the requested area of the; * X Pixmap, and it will attach it to newly created ASImage using",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:2138,failure,failure,2138,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"ng the; method CreateHistogramOfMigrations()</li>; <li>For data and background, book histograms using the; ""detector level"" binning scheme and the method CreateHistogram()</li>; <li>(if required) for the data covarianve matrix, book a histogram using the; ""detector level"" binning scheme and the method CreateErrorMatrixHistogram()</li>; <li>For truth histograms, book histograms using the; ""truth level"" binning scheme and the method CreateHistogram()</li>; </ul>; The histograms which are booked have all analysis bins arranged on one; axis (global bin number). TUnfoldBinning provides methods to locate; the global bin number:; <ul>; <li>Use the method FindNode() to locate a group of bins (e.g. signal,; control distribution, etc) by their name, then:</li>; <li>Use the method GetGlobalBinNumber() to locate a bin in a; distribution, then:</li>; <li>Use the TH1::Fill() method and the bin number to fill the; appropriate bin in one of the histograms booked above.</li>; </ul>; Unfolding: Specify the response matrix and the binning schemes when; constructing a TUnfoldDensity object. Tell TUnfoldDensity about the; data, bakcground, systematic error histograms using the corresponding; methods of class TUnfoldDensity. Then run the unfolding. Use the; GetXXX() methods to retreive the unfolding results into properly; binned multidimensional histograms.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:3769,error,error,3769,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['error'],['error']
Availability,"ng to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7303,error,error,7303,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"ngroup g3d; The 3D view class. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and; Evgueni Tcherniaev. This View class is a subset of the original system. It has been converted to a; C++ class by Rene Brun. TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface; plots can be drawn and also 3D polyline and markers. Most of the time a TView3D; is created automatically when a 3D object needs to be painted in a pad (for; instance a Lego or a Surface plot). In some case a TView3D should be explicitly. For instance to paint a 3D simple; scene composed of simple objects like polylines and polymarkers.; The following macro gives an example:. Begin_Macro(source); {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);. // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);. // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);. // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->SetMarkerStyle(2);. // Draw; pl3d1->Draw();; pm3d1->Draw();; }; End_Macro. Several coordinate systems are available:. - Cartesian; - Polar; - Cylindrical; - Spherical; - PseudoRapidity/Phi; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:1828,avail,available,1828,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['avail'],['available']
Availability,"ngs(ROOT::kLZMA, 1); /// will build an integer which will set the compression to use; /// the LZMA algorithm and compression level 1. These are defined; /// in the header file <em>Compression.h</em>.; /// Note that the compression settings may be changed at any time.; /// The new compression settings will only apply to branches created; /// or attached after the setting is changed and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects ins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:4988,Error,Error,4988,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Error'],['Error']
Availability,"ning the fit options (see table below).; /// \param[in] goption specify a list of graphics options. See TH1::Draw for a complete list of these options.; /// \param[in] xxmin lower fitting range; /// \param[in] xxmax upper fitting range; /// \return A smart pointer to the TFitResult class; ///; /// \anchor HFitOpt; /// ### Histogram Fitting Options; ///; /// Here is the full list of fit options that can be given in the parameter `option`.; /// Several options can be used together by concatanating the strings without the need of any delimiters.; ///; /// option | description; /// -------|------------; /// ""L"" | Uses a log likelihood method (default is chi-square method). To be used when the histogram represents counts.; /// ""WL"" | Weighted log likelihood method. To be used when the histogram has been filled with weights different than 1. This is needed for getting correct parameter uncertainties for weighted fits.; /// ""P"" | Uses Pearson chi-square method. Uses expected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; /// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; /// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; /// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; /// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1202,error,errors,1202,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"niques will be applied to produce nicer; * looking gradients.; *********/; /****f* libAfterImage/transform/flip_asimage(); * NAME; * flip_asimage() - rotates ASImage in 90 degree increments; * SYNOPSIS; * ASImage *flip_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * int flip, ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * flip - flip flags determining degree of rotation.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * flip_asimage() will create new image of requested size, it will then; * tile source image based on offset_x, offset_y, and destination size,; * and it will rotate it then based on flip value. Three rotation angles; * supported 90, 180 and 270 degrees.; *********/; /****f* libAfterImage/transform/mirror_asimage(); * NAME; * mirror_asimage(); * SYNOPSIS; * ASImage *mirror_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x, int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * Bool vertical, ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * vertical - mirror in vertical direction.; * out_format 	- optionally descr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:7580,failure,failure,7580,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"nk, blank+1);; while ((blank = strstr(temp,"", ""))) strcpy(blank+1,blank+2);; while ((blank = strstr(temp,"" ,""))) strcpy(blank, blank+1);; while ((blank = strstr(temp,"" ""))) strcpy(blank, blank+1);; //loop on tokens separated by ;; char *final = new char[1000];; char token[100];; while ((colon=strchr(temp,';'))) {; *colon = 0;; strlcpy(token,temp,100);; blank = strchr(token,' ');; if (blank) {; *blank = 0;; if (!gROOT->GetType(token)) {; Error(""SetStreamerInfo"",""Illegal type: %s in %s"",token,info);; return;; }; while (blank) {; strlcat(final,token,1000);; strlcat(final,"" "",1000);; comma = strchr(blank+1,','); if (comma) *comma=0;; strlcat(final,blank+1,1000);; strlcat(final,"";"",1000);; blank = comma;; }. } else {; if (TClass::GetClass(token,update)) {; //a class name; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; //a data member name; dm = (TDataMember*)GetListOfDataMembers()->FindObject(token);; if (dm) {; strlcat(final,dm->GetFullTypeName(),1000);; strlcat(final,"" "",1000);; strlcat(final,token,1000); strlcat(final,"";"",1000);; } else {; Error(""SetStreamerInfo"",""Illegal name: %s in %s"",token,info);; return;; }; }; update = kFALSE;; }; temp = colon+1;; if (*temp == 0) break;; }; //// fStreamerInfo = final;; delete [] final;; delete [] save;; return;; }. //info is empty. Let's build the default Streamer descriptor. char *temp = new char[10000];; temp[0] = 0;; char local[100];. //add list of base classes; TIter nextb(GetListOfBases());; TBaseClass *base;; while ((base = (TBaseClass*) nextb())) {; snprintf(local,100,""%s;"",base->GetName());; strlcat(temp,local,10000);; }. //add list of data members and types; TIter nextd(GetListOfDataMembers());; while ((dm = (TDataMember *) nextd())) {; if (dm->IsEnum()) continue;; if (!dm->IsPersistent()) continue;; Long_t property = dm->Property();; if (property & kIsStatic) continue;; TClass *acl = TClass::GetClass(dm->GetTypeName(),update);; update = kFALSE;; if (acl) {; if (acl->GetClassVersion() == 0) continue;; }.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:1811,Error,Error,1811,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Error'],['Error']
Availability,"no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; E",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7070,Error,Error,7070,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Error']
Availability,"no value to read; df_missingcol = df_missingcol.Define(""observable"", ""othercolumn * 2""); \endcode. \code{.cpp}; ROOT::RDataFrame df{dataset};. // Anytime an entry from ""col"" is missing, the entire entry will be filtered out; auto df_available = df.FilterAvailable(""col"");; auto df_twicecol = df_available.Define(""twice"", ""col * 2"");. // Conversely, if we want to select the entries for which the column has missing; // values, we do the following; auto df_missingcol = df.FilterMissing(""col"");; // Following operations in the same branch of the computation graph clearly; // cannot access that same column, since there would be no value to read; auto df_observable = df_missingcol.Define(""observable"", ""othercolumn * 2"");; \endcode. #### DefaultValueFor. DefaultValueFor creates a node of the computation graph which just forwards the; values of the columns necessary for other downstream nodes, when they are; available. In case a value of the input column passed to this function is not; available, the node will provide the default value passed to this function call; instead. Example:. \code{.py}; df = ROOT.RDataFrame(dataset); # Anytime an entry from ""col"" is missing, the value will be the default one; default_value = ... # Some sensible default value here; df = df.DefaultValueFor(""col"", default_value) ; df = df.Define(""twice"", ""col * 2""); \endcode. \code{.cpp}; ROOT::RDataFrame df{dataset};; // Anytime an entry from ""col"" is missing, the value will be the default one; constexpr auto default_value = ... // Some sensible default value here; auto df_default = df.DefaultValueFor(""col"", default_value);; auto df_col = df_default.Define(""twice"", ""col * 2"");; \endcode. #### Mixing different strategies to work with missing values in the same RDataFrame. All the operations presented above only act on the particular branch of the; computation graph where they are called, so that different results can be; obtained by mixing and matching the filtering or providing a default value; strategi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:84302,avail,available,84302,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:11331,error,errors,11331,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"note pixel coverage; * of the color or luminance channels and is returned as an associated alpha; * channel: the color/gray channels are scaled (pre-multiplied) by the alpha; * value.; *; * The samples are either contained directly in the image data, between 1 and 8; * bytes per pixel according to the encoding, or are held in a color-map indexed; * by bytes in the image data. In the case of a color-map the color-map entries; * are individual samples, encoded as above, and the image data has one byte per; * pixel to select the relevant sample from the color-map.; */; /* PNG_FORMAT_*; *; * #defines to be used in png_image::format. Each #define identifies a; * particular layout of sample data and, if present, alpha values. There are; * separate defines for each of the two component encodings.; *; * A format is built up using single bit flag values. All combinations are; * valid. Formats can be built up from the flag values or you can use one of; * the predefined values below. When testing formats always use the FORMAT_FLAG; * macros to test for individual features - future versions of the library may; * add new flags.; *; * When reading or writing color-mapped images the format should be set to the; * format of the entries in the color-map then png_image_{read,write}_colormap; * called to read or write the color-map and set the format correctly for the; * image data. Do not set the PNG_FORMAT_FLAG_COLORMAP bit directly!; *; * NOTE: libpng can be built with particular features disabled. If you see; * compiler errors because the definition of one of the following flags has been; * compiled out it is because libpng does not have the required support. It is; * possible, however, for the libpng configuration to enable the format on just; * read or just write; in that case you may see an error at run time. You can; * guard against this by checking for the definition of the appropriate; * ""_SUPPORTED"" macro, one of:; *; * PNG_SIMPLIFIED_{READ,WRITE}_{BGR,AFIRST}_SUPPORTED; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3041,error,errors,3041,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['error'],"['error', 'errors']"
Availability,"nother CompilationDatabase and; // attempts to heuristically determine appropriate compile commands for files; // that are not included, such as headers or newly created files.; //; // Motivating cases include:; // Header files that live next to their implementation files. These typically; // share a base filename. (libclang/CXString.h, libclang/CXString.cpp).; // Some projects separate headers from includes. Filenames still typically; // match, maybe other path segments too. (include/llvm/IR/Use.h, lib/IR/Use.cc).; // Matches are sometimes only approximate (Sema.h, SemaDecl.cpp). This goes; // for directories too (Support/Unix/Process.inc, lib/Support/Process.cpp).; // Even if we can't find a ""right"" compile command, even a random one from; // the project will tend to get important flags like -I and -x right.; //; // We ""borrow"" the compile command for the closest available file:; // - points are awarded if the filename matches (ignoring extension); // - points are awarded if the directory structure matches; // - ties are broken by length of path prefix match; //; // The compile command is adjusted, replacing the filename and removing output; // file arguments. The -x and -std flags may be affected too.; //; // Source language is a tricky issue: is it OK to use a .c file's command; // for building a .cc file? What language is a .h file in?; // - We only consider compile commands for c-family languages as candidates.; // - For files whose language is implied by the filename (e.g. .m, .hpp); // we prefer candidates from the same language.; // If we must cross languages, we drop any -x and -std flags.; // - For .h files, candidates from any c-family language are acceptable.; // We use the candidate's language, inserting e.g. -x c++-header.; //; // This class is only useful when wrapping databases that can enumerate all; // their compile commands. If getAllFilenames() is empty, no inference occurs.; //; //===--------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp:1301,avail,available,1301,interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,1,['avail'],['available']
Availability,"nput a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo2d->Fit(func2, ""S"");; /// func2->IntegralError(a,b,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full covariance matrix; /// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; /// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; /// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1582,error,error,1582,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['error'],['error']
Availability,"ns with a return value; are lazy, the others are instant. ### Return type of a lazy action. When a lazy action is called, it returns a \link ROOT::RDF::RResultPtr ROOT::RDF::RResultPtr<T>\endlink, where T is the; type of the result of the action. The final result will be stored in the `RResultPtr` and can be retrieved by; dereferencing it or via its `GetValue` method. ### Actions that return collections. If the type of the return value of an action is a collection, e.g. `std::vector<int>`, you can iterate its elements; directly through the wrapping `RResultPtr`:. ~~~{.cpp}; ROOT::RDataFrame df{5};; auto df1 = df.Define(""x"", []{ return 42; });; for (const auto &el: df1.Take<int>(""x"")){; std::cout << ""Element: "" << el << ""\n"";; }; ~~~. ~~~{.py}; df = ROOT.RDataFrame(5).Define(""x"", ""42""); for el in df.Take[int](""x""):; print(f""Element: {el}""); ~~~. ### Actions and readers. An action that needs values for its computations will request it from a reader, e.g. a column created via `Define` or; available from the input dataset. The action will request values from each column of the list of input columns (either; inferred or specified by the user), in order. For example:. ~~~{.cpp}; ROOT::RDataFrame df{1};; auto df1 = df.Define(""x"", []{ return 11; });; auto df2 = df1.Define(""y"", []{ return 22; });; auto graph = df2.Graph<int, int>(""x"",""y"");; ~~~. The `Graph` action is going to request first the value from column ""x"", then that of column ""y"". Specifically, the order; of execution of the operations of nodes in this branch of the computation graph is guaranteed to be top to bottom. \anchor distrdf; ## Distributed execution. RDataFrame applications can be executed in parallel through distributed computing frameworks on a set of remote machines; thanks to the Python package `ROOT.RDF.Experimental.Distributed`. This experimental, **Python-only** package allows to scale the; optimized performance RDataFrame can achieve on a single machine to multiple nodes at the same time. It is de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:35408,avail,available,35408,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"nsparent one. The color transparency is defined via its alpha component. The; alpha value varies from `0.` (fully transparent) to `1.` (fully; opaque). To set the alpha value of an existing color it is enough to do:. ~~~ {.cpp}; TColor *col26 = gROOT->GetColor(26);; col26->SetAlpha(0.01);; ~~~. A new color can be created transparent the following way:. ~~~ {.cpp}; Int_t ci = 1756;; auto color = new TColor(ci, 0.1, 0.2, 0.3, """", 0.5); // alpha = 0.5; ~~~. An example of transparency usage with parallel coordinates can be found; in parallelcoordtrans.C. To ease the creation of a transparent color the static method; `GetColorTransparent(Int_t color, Float_t a)` is provided.; In the following example the `trans_red` color index point to; a red color 30% opaque (70% transparent). The alpha value of; the color index `kRed` is not modified. ~~~ {.cpp}; Int_t trans_red = GetColorTransparent(kRed, 0.3);; ~~~. This function is also used in the methods; `SetFillColorAlpha()`, `SetLineColorAlpha()`,; `SetMarkerColorAlpha()` and `SetTextColorAlpha()`.; In the following example the fill color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetFillColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. The following macro gives an example of transparency usage:. Begin_Macro(source); ../../../tutorials/graphics/transparency.C; End_Macro. */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:31784,avail,available,31784,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['avail'],['available']
Availability,"ntries; that pass the selection, and when you have a parametrization available for; the efficiency as a function of the variable(s) under consideration. A very common problem when estimating efficiencies is that of error estimation:; when no other information is available than the total number of events N and; the selected number n, the best estimate for the selection efficiency p is n/N.; Standard binomial statistics dictates that the uncertainty (this presupposes; sufficiently high statistics that an approximation by a normal distribution is; reasonable) on p, given N, is; \f[; \sqrt{\frac{p(1-p)}{N}}; \f]; However, when p is estimated as n/N, fluctuations from the true p to its; estimate become important, especially for low numbers of events, and giving; rise to biased results. When fitting a parametrized efficiency, these problems can largely be overcome,; as a hypothesized true efficiency is available by construction. Even so, simply; using the corresponding uncertainty still presupposes that Gaussian errors; yields a reasonable approximation. When using, instead of binned efficiency; histograms, the original numerator and denominator histograms, a binned maximum; likelihood can be constructed as the product of bin-by-bin binomial probabilities; to select n out of N events. Assuming that a correct parametrization of the; efficiency is provided, this construction in general yields less biased results; (and is much less sensitive to binning details). A generic use of this method is given below (note that the method works for 2D; and 3D histograms as well):. ~~~ {.cpp}; {; TH1* denominator; // denominator histogram; TH1* numerator; // corresponding numerator histogram; TF1* eff; // efficiency parametrization; .... // set step sizes and initial parameter; .... // values for the fit function; .... // possibly also set ranges, see TF1::SetRange(); TBinomialEfficiencyFitter* f = new TBinomialEfficiencyFitter(; numerator, denominator);; Int_t status = f->Fit(eff, ""I"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:1710,error,errors,1710,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['error'],['errors']
Availability,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2469,avail,available,2469,core/imt/src/TExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx,1,['avail'],['available']
Availability,"nts. Choosing \f$\Delta E\f$ and \f${\cal F}\f$ as discriminating variables to determine; \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds, for the control; variable \f${m_{\rm ES}}\f$ which is unknown to the fit, the two \f$\hbox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covariance matrix, and its negative components, in the definition of; Eq. (2). A word of caution is in order with respect to the error bars. Whereas; their sum in quadrature is identical to the statistical uncertainties; of the yields determined by the fit, and if, in addition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observation, at a given confidence; level. \image html splot_mass-bkg-sPlot.png Figure 3 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:9414,error,error,9414,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['error'],['error']
Availability,"number (double, int64 or uint64); /// string (StringRef); /// array (json::Array); /// object (json::Object); ///; /// The kind can be queried directly, or implicitly via the typed accessors:; /// if (std::optional<StringRef> S = E.getAsString(); /// assert(E.kind() == Value::String);; ///; /// Array and Object also have typed indexing accessors for easy traversal:; /// Expected<Value> E = parse(R""( {""options"": {""font"": ""sans-serif""}} )"");; /// if (Object* O = E->getAsObject()); /// if (Object* Opts = O->getObject(""options"")); /// if (std::optional<StringRef> Font = Opts->getString(""font"")); /// assert(Opts->at(""font"").kind() == Value::String);; ///; /// === Converting JSON values to C++ types ===; ///; /// The convention is to have a deserializer function findable via ADL:; /// fromJSON(const json::Value&, T&, Path) -> bool; ///; /// The return value indicates overall success, and Path is used for precise; /// error reporting. (The Path::Root passed in at the top level fromJSON call; /// captures any nested error and can render it in context).; /// If conversion fails, fromJSON calls Path::report() and immediately returns.; /// This ensures that the first fatal error survives.; ///; /// Deserializers are provided for:; /// - bool; /// - int and int64_t; /// - double; /// - std::string; /// - vector<T>, where T is deserializable; /// - map<string, T>, where T is deserializable; /// - std::optional<T>, where T is deserializable; /// ObjectMapper can help writing fromJSON() functions for object types.; ///; /// For conversion in the other direction, the serializer function is:; /// toJSON(const T&) -> json::Value; /// If this exists, then it also allows constructing Value from T, and can; /// be used to serialize vector<T>, map<string, T>, and std::optional<T>.; ///; /// === Serialization ===; ///; /// Values can be serialized to JSON:; /// 1) raw_ostream << Value // Basic formatting.; /// 2) raw_ostream << formatv(""{0}"", Value) // Basic formatting.; /// 3) raw_ostream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:1955,error,error,1955,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['error'],['error']
Availability,"o contains preallocated set of colors.; * This colormap allows us to write XImages very fast and without; * exhausting available X colors. This colormap consist of 8, 64, or 4096; * colors and constitutes fraction of colors available in particular; * colordepth. This colors are allocated to be evenly spread around RGB; * spectrum. Thus when converting from internal presentation - all we; * need to do is to discard unused bits, and use rest of them bits as; * an index in our colormap. Opposite conversion is much trickier and we; * engage into nasty business of having hash table mapping pixel values; * into colors, or straight table doing same in lower colordepths.; * Idea is that we do all internal processing in 32bit colordepth, and; * ASVisual provides us with means to convert it to actual X display; * format. Respectively ASVisual has methods to write out XImage lines; * and read XImage lines.; * ASVisual creation is a tricky process. Basically first we have to go; * through the list of available Visuals and choose the best suitable.; * Then based on the type of this Visual we have to setup our data; * members and method hooks. Several functions provided for that :; * query_screen_visual() - will lookup best suitable visual; * setup_truecolor_visual() - will setup hooks if visual is TrueColor; * setup_pseudo_visual()	 - will setup hooks and data if Visual is; * PseudoColor.; * setup_as_colormap() - will preallocate colors for PseudoColor.; * Alternative to the above is :; * create_asvisual() - it encapsulates all of the above; * functionality, and returns completely set; * up ASVisual object.; * Since Visual selected for ASVisual may differ from default; * ( we choose the best suitable ), all the window creation function; * must provide colormap and some other parameters, like border color; * for example. Thus we created some convenience functions.; * These should be used instead of standard Xlib calls :; * create_visual_window() - to create window; * create_visual",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1367,avail,available,1367,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['avail'],['available']
Availability,"o draw text on client side as well.; *; * The solution is to provide transparent interface that could use both; * X fonts and FreeType, cache glyphs on the client side and possibly; * perform smoothing of ugly X fonts.; *; * There is no library solving all this problems in one fell swoop,; * except for monstrous ones, like ImLib.; *; * Hence libAfterImage has come to life.; *; * DESCRIPTION; * libAfterStep provides sevarl facilities.; *; * 1. X Visual abstruction layer via ASVisual. This layer handles color; * management, transfer of data to and from X Server, and other screen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for any image or text; * manipulation. It incorporates such a robust facilities as in-memory; * RLE compression, separate channel storage of 4 channels ( Alpha, Red,; * Green, and Blue ) with 8 bit per channel.; *; * 4. Simplified font handling facility via ASFont and ASFointManager.; * All the font handling is done using ASFont structure, no matter what; * type of font is used. Any font supported by X11 and FreeType can be; * used.; *; * 5. Transparent image file reading for many different formats. Included; * built-in XPM reading code and XCF ( GIMP's native format ).; * Overall supported:; * via external libraries :; * XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BM",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:3737,robust,robust,3737,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['robust'],['robust']
Availability,"o not appear in the map is inferred from the data.; The supported types are:; - Integer: stored as a 64-bit long long int; can be specified in the column types map with 'L'.; - Floating point number: stored with double precision; specified with 'D'.; - Boolean: matches the literals `true` and `false`; specified with 'O'.; - String: stored as an std::string, matches anything that does not fall into any of the; previous types; specified with 'T'. These are some formatting rules expected by the RCsvDS implementation:; - All records must have the same number of fields, in the same order.; - Any field may be quoted.; ~~~; ""1997"",""Ford"",""E350""; ~~~; - Fields with embedded delimiters (e.g. comma) must be quoted.; ~~~; 1997,Ford,E350,""Super, luxurious truck""; ~~~; - Fields with double-quote characters must be quoted, and each of the embedded; double-quote characters must be represented by a pair of double-quote characters.; ~~~; 1997,Ford,E350,""Super, """"luxurious"""" truck""; ~~~; - Fields with embedded line breaks are not supported, even when quoted.; ~~~; 1997,Ford,E350,""Go get one now; they are going fast""; ~~~; - Spaces are considered part of a field and are not ignored.; ~~~; 1997, Ford , E350; not same as; 1997,Ford,E350; but same as; 1997, ""Ford"" , E350; ~~~; - If a header row is provided, it must contain column names for each of the fields.; ~~~; Year,Make,Model; 1997,Ford,E350; 2000,Mercury,Cougar; ~~~. The current implementation of RCsvDS reads the entire CSV file content into memory before; RDataFrame starts processing it. Therefore, before creating a CSV RDataFrame, it is; important to check both how much memory is available and the size of the CSV file. RCsvDS can handle empty cells and also allows the usage of the special keywords ""NaN"" and ""nan"" to; indicate `nan` values. If the column is of type double, these cells are stored internally as `nan`.; Empty cells and explicit `nan`-s inside columns of type Long64_t/bool are stored as zeros.; */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RCsvDS.cxx:2908,avail,available,2908,tree/dataframe/src/RCsvDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RCsvDS.cxx,1,['avail'],['available']
Availability,"o row groups; * of one iMCU row while reading in the next iMCU row. (The last row group; * can't be processed until we have another row group for its below-context,; * and so we have to save the next-to-last group too for its above-context.); * We could do this most simply by copying data around in our buffer, but; * that'd be very slow. We can avoid copying any data by creating a rather; * strange pointer structure. Here's how it works. We allocate a workspace; * consisting of M+2 row groups (where M = min_DCT_scaled_size is the number; * of row groups per iMCU row). We create two sets of redundant pointers to; * the workspace. Labeling the physical row groups 0 to M+1, the synthesized; * pointer lists look like this:; * M+1 M-1; * master pointer --> 0 master pointer --> 0; * 1 1; * ... ...; * M-3 M-3; * M-2 M; * M-1 M+1; * M M-2; * M+1 M-1; * 0 0; * We read alternate iMCU rows using each master pointer; thus the last two; * row groups of the previous iMCU row remain un-overwritten in the workspace.; * The pointer lists are set up so that the required context rows appear to; * be adjacent to the proper places when we pass the pointer lists to the; * upsampler.; *; * The above pictures describe the normal state of the pointer lists.; * At top and bottom of the image, we diddle the pointer lists to duplicate; * the first or last sample row as necessary (this is cheaper than copying; * sample rows around).; *; * This scheme breaks down if M < 2, ie, min_DCT_scaled_size is 1. In that; * situation each iMCU row provides only one row group so the buffering logic; * must be different (eg, we must read two iMCU rows before we can emit the; * first row group). For now, we simply do not support providing context; * rows when min_DCT_scaled_size is 1. That combination seems unlikely to; * be worth providing --- if someone wants a 1/8th-size preview, they probably; * want it quick and dirty, so a context-free upsampler is sufficient.; */; /* Private buffer controller object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:4520,down,down,4520,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['down'],['down']
Availability,"oRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Further, the original paper establishes that to keep the tails from rising,; * \f[; * \begin{split}; * \beta^2 &< \alpha^2 \\; * \Leftrightarrow \beta^2 &< \frac{\zeta^2}{\delta^2} = \frac{\zeta^2}{\sigma^2 A_{\lambda}^2(\zeta)}; * \end{split}; * \f]; * needs to be satisfied, unless the fit range is very restricted, because otherwise, the function rises in the tails.; *; *; * In case of evaluation errors, it is advisable to choose very large values for \f$ a_l,\ a_r \f$, tweak the parameters of the core region to; * make it concave, and re-enable the tails. Especially \f$ \beta \f$ needs to be close to zero.; *; * ## Relation to RooIpatia2; * This implementation is largely based on RooIpatia2, https://gitlab.cern.ch/lhcb/Urania/-/blob/master/PhysFit/B2DXFitters/src/RooIpatia2.cxx,; * but there are differences:; * - At construction time, the Hypatia implementation checks if the range of parameters extends into regions where; * the function might be undefined.; * - Hypatia supports I/O to ROOT files.; * - Hypatia will support faster batched function evaluations.; * - Hypatia might support analytical integration for the case \f$ \zeta = \beta = 0, \lambda < 1 \f$.; *; * Because of these differences, and to avoid name clashes for setups where RooFit is used in an environment that also has; * RooIpatia2, class names need to be different.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:3698,error,errors,3698,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['error'],['errors']
Availability,"objects of type TAxis: fXaxis, fYaxis and fZaxis.; To access the axis parameters, use:; ~~~ {.cpp}; TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; ~~~; See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision. \anchor convention; ### Convention for numbering bins. For all histogram types: nbins, xlow, xup; ~~~ {.cpp}; bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; ~~~; In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D histogram with (binx, biny, binz), the function; ~~~ {.cpp}; Int_t gbin = h->GetBin(binx, biny, binz);; ~~~; returns a global/linearized gbin number. This global gbin is useful; to access the bin content/error information independently of the dimension.; Note that to access the information other than bin content and errors; one should use the TAxis object directly with e.g.:; ~~~ {.cpp}; Double_t xcenter = h3->GetZaxis()->GetBinCenter(27);; ~~~; returns the center along z of bin number 27 (not the global bin); in the 3-D histogram h3. \anchor alpha; ### Alphanumeric Bin Labels. By default, a histogram axis is drawn with its numeric bin labels.; One can specify alphanumeric labels instead with:. - call TAxis::SetBinLabel(bin, label);; This can always be done before or after filling.; When the histogram is drawn, bin labels will be automatically drawn.; See examples labels1.C and labels2.C; - call to a Fill function with one of the arguments being a string, e.g.; ~~~ {.cpp}; hist1->Fill(somename, weight);; hist2->Fill(x, somename, weight);; hist2->Fill(somename, y, weight);; hist2->Fill(somenamex, somenamey, weight);; ~~~; See examples hlabels1.C and hlabels2.C; - via TTree::Draw. see for example cernstaff.C; ~~~ {.cpp}; tree.Draw(""Nation::Division"");; ~~~; where ""Nation"" and ""Division"" are two ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:8661,error,errors,8661,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['errors']
Availability,"od starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the internal partial derivative calculation; * ordering strategy. The third argument determines the number of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6737,error,error,6737,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"od; used is to double the bin size until the new value fits in the range,; merging bins two by two. This automatic binning options is extensively; used by the TTree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of weights per bin.; If Sumw2 has been called, the error per bin is computed as the; sqrt(sum of squares of weights), otherwise the error is set equal; to the sqrt(bin content).; To return the error for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBinError(bin);; ~~~. \anchor associated-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogram.; - Additions of two histograms with coefficients and storage into the current; histogram.; - Multiplications and Divisions are supported in the same way as additions.; - The Add, Divide and Multiply functions also exist to add, divide or multiply; a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:13905,error,error,13905,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"of a parametric function with dimension larger than one; /// between a[] and b[] due to the parameters uncertainties.; /// For a TF1 with dimension larger than 1 (for example a TF2 or TF3); /// TF1::IntegralMultiple is used for the integral calculation; ///; /// In addition to the integral limits, this method takes as input a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo2d->Fit(func2, ""S"");; /// func2->IntegralError(a,b,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1177,error,error,1177,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['error'],['error']
Availability,"of control flow miss-speculation into a taint register:; // Some of these are different than the implementation choices made in; // the similar pass implemented in X86SpeculativeLoadHardening.cpp, as; // the instruction set characteristics result in different trade-offs.; // - The speculation hardening is done after register allocation. With a; // relative abundance of registers, one register is reserved (X16) to be; // the taint register. X16 is expected to not clash with other register; // reservation mechanisms with very high probability because:; // . The AArch64 ABI doesn't guarantee X16 to be retained across any call.; // . The only way to request X16 to be used as a programmer is through; // inline assembly. In the rare case a function explicitly demands to; // use X16/W16, this pass falls back to hardening against speculation; // by inserting a DSB SYS/ISB barrier pair which will prevent control; // flow speculation.; // - It is easy to insert mask operations at this late stage as we have; // mask operations available that don't set flags.; // - The taint variable contains all-ones when no miss-speculation is detected,; // and contains all-zeros when miss-speculation is detected. Therefore, when; // masking, an AND instruction (which only changes the register to be masked,; // no other side effects) can easily be inserted anywhere that's needed.; // - The tracking of miss-speculation is done by using a data-flow conditional; // select instruction (CSEL) to evaluate the flags that were also used to; // make conditional branch direction decisions. Speculation of the CSEL; // instruction can be limited with a CSDB instruction - so the combination of; // CSEL + a later CSDB gives the guarantee that the flags as used in the CSEL; // aren't speculated. When conditional branch direction gets miss-speculated,; // the semantics of the inserted CSEL instruction is such that the taint; // register will contain all zero bits.; // One key requirement for this to work is t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:2240,mask,mask,2240,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,3,"['avail', 'mask']","['available', 'mask']"
Availability,"of several; others, a special class TGeoHMatrix is provided. Here is an example of matrix; creation :. ### Matrix creation example:. ~~~ {.cpp}; root[0] TGeoRotation r1,r2;; r1.SetAngles(90,0,30); // rotation defined by Euler angles; r2.SetAngles(90,90,90,180,0,0); // rotation defined by GEANT3 angles; TGeoTranslation t1(-10,10,0);; TGeoTranslation t2(10,-10,5);; TGeoCombiTrans c1(t1,r1);; TGeoCombiTrans c2(t2,r2);; TGeoHMatrix h = c1 * c2; // composition is done via TGeoHMatrix class; root[7] TGeoHMatrix *ph = new TGeoHMatrix(hm); // this is the one we want to; // use for positioning a volume; root[8] ph->Print();; ...; pVolume->AddNode(pVolDaughter,id,ph) // now ph is owned by the manager; ~~~. ### Rule for matrix creation:; Unless explicitly used for positioning nodes (TGeoVolume::AddNode()) all; matrices deletion have to be managed by users. Matrices passed to geometry; have to be created by using new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. Thi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:5520,Avail,Available,5520,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['Avail'],['Available']
Availability,"of the y error of the profile ( TProfile::GetBinError ); /// possible values for the options are:; /// - ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); /// where S(Y) is the standard deviation (RMS) of the Y data in the bin; /// and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); /// (i.e the errors are the standard error on the bin content of the profile); /// - 's' Errors are the standard deviation of Y, S(Y); /// - 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); /// The only difference is only when the standard deviation in Y is zero.; /// In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; /// 1./SQRT(12*N).; /// This approximation assumes that the Y values are integer (e.g. ADC counts); /// and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; /// takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); /// - 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j; /// W is obtained as from TProfile::GetBinEntries(ibin); /// This errors corresponds to the standard deviation of weighted mean where each; /// measurement Y is uncorrelated and has an error sigma, which is expressed in the; /// weight used to fill the Profile: w = 1/sigma^2; /// The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ); ///; /// In the case of Profile filled weights and with TProfile::Sumw2() called,; /// STD(Y) is the standard deviation of the weighted sample Y and N is in this case the; /// number of effective entries (TProfile::GetBinEffectiveEntries(ibin) ); ///; /// If a bin has N data points all with the same value Y (especially; /// possible when dealing with integers), the spread in Y for that bin; /// is zero, and the uncertainty assigned is also zero, and the bin is; /// ignored in making subsequent fits.; /// To avoid this problem one can use an approximati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1385,error,error,1385,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,"['Error', 'error']","['Errors', 'error']"
Availability,"ogram. One can use the `SAME`; option to leave the previous display intact and superimpose the new histogram.; The same histogram can be drawn with different graphics options in different; pads. When a displayed histogram is deleted, its image is automatically removed; from the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:5645,error,error,5645,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],['error']
Availability,"oint of a branch is always an action."". ### Running on a range of entries; It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); hanging from another Range(). Here are some commented examples:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; // Here we store a dataframe that loops over only the first 30 entries in a variable; auto d30 = d.Range(30);; // This is how you pick all entries from 15 onwards; auto d15on = d.Range(15, 0);; // We can specify a stride too, in this case we pick an event every 3; auto d15each3 = d.Range(0, 15, 3);; ~~~; Note that ranges are not available when multi-threading is enabled. More information on ranges is available; [here](#ranges). ### Executing multiple actions in the same event loop; As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; the filtered events.; By now, you should be able to easily understand what is happening:; ~~~{.cpp}; RDataFrame d(""treeName"", ""file.root"");; auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; auto h2 = d.Histo1D(""pt_v"");; h1->Draw(); // event loop is run once here; h2->Draw(""SAME""); // no need to run the event loop again; ~~~; RDataFrame executes all above actions by **running the event-loop only once**. The trick is that actions are not; executed at the moment they are called, but they are **lazy**, i.e. delayed until the moment one of their results is; accessed through the smart pointer. At that time, the event loop is triggered and *all* results are produced; simultaneously. ### Properly exploiting RDataFrame ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:24593,avail,available,24593,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"oking at the parameter significance, you see,; // that maybe the fit will improve, if you take out; // the constant term; lf->SetFormula(""x++x*x"");; lf->Eval();; ...; ~~~~. ##### 2.3.2 If the input data is not stored, the fitter will have to be; cleared and the data will have to be added again to try a; different formula. ### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all relevant information:; --GetParameters, GetCovarianceMatrix, etc; --the t-values of parameters and their significance can be reached by; GetParTValue() and GetParSignificance() methods. #### 3.2 If fitting with a pre-defined TF123, the fit results are also; written into this function. ### 4.Robust fitting - Least Trimmed Squares regression (LTS); Outliers are atypical(by definition), infrequant observations; data points; which do not appear to follow the characteristic distribution of the rest; of the data. These may reflect genuine properties of the underlying; phenomenon(variable), or be due to measurement errors or anomalies which; shouldn't be modelled. (StatSoft electronic textbook). Even a single gross outlier can greatly influence the results of least-; squares fitting procedure, and in this case use of robust(resistant) methods; is recommended. The method implemented here is based on the article and algorithm:; ""Computing LTS Regression for Large Data Sets"" by; P.J.Rousseeuw and Katrien Van Driessen; The idea of the method is to find the fitting coefficients for a subset; of h observations (out of n) with the smallest sum of squared residuals.; The size of the subset h should lie between (npoints + nparameters +1)/2; and n, and represents the minimal number of good points in the dataset.; The default value is set to (npoints + nparameters +1)/2, but of course; if you are sure that the data contains less outliers it's better to change; h according to your data. To perform a robust fit, call EvalRobust() function instead of Eval() after; adding the points a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:5816,error,errors,5816,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['error'],['errors']
Availability,"olding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4157,error,error,4157,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['error']
Availability,"om the pad. To create a copy of the histogram when drawing it, one can use; `TH1::DrawClone()`. This will clone the histogram and allow to change; and delete the original one without affecting the clone. \anchor HP01; ### Histograms' plotting options. Most options can be concatenated with or without spaces or commas, for example:. h->Draw(""E1 SAME"");. The options are not case sensitive:. h->Draw(""e1 same"");. The default drawing option can be set with `TH1::SetOption` and retrieve; using `TH1::GetOption`:. root [0] h->Draw(); // Draw ""h"" using the standard histogram representation.; root [1] h->Draw(""E""); // Draw ""h"" using error bars; root [3] h->SetOption(""E""); // Change the default drawing option for ""h""; root [4] h->Draw(); // Draw ""h"" using error bars; root [5] h->GetOption(); // Retrieve the default drawing option for ""h""; (const Option_t* 0xa3ff948)""E"". \anchor HP01a; #### Options supported for 1D and 2D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Draw error bars. |; | ""AXIS"" | Draw only axis. |; | ""AXIG"" | Draw only grid (if the grid is requested). |; | \anchor OPTHIST ""HIST"" | When an histogram has errors it is visualized by default with error bars. To visualize it without errors use the option ""HIST"" together with the required option (eg ""hist same c""). The ""HIST"" option can also be used to plot only the histogram and not the associated function(s). |; | ""FUNC"" | When an histogram has a fitted function, this option allows to draw the fit result only. |; | ""SAME"" | Superimpose on previous picture in the same pad. |; | ""SAMES"" | Same as ""SAME"" and draw the statistics box|; | ""PFC"" | Palette Fill Color: histogram's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: histogram's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: histogram's marker color is taken in the current palette. |; | ""LEGO"" | Draw a lego plot with hidden ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:6071,error,error,6071,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"ome to the Lund Monte Carlo! | |; | | P P Y Y T H H I A A This is PYTHIA version 8.100 | |; | | PPP Y T HHHHH I AAAAA Last date of change: 20 Oct 2007 | |; | | P Y T H H I A A | |; | | P Y T H H III A A Now is 27 Oct 2007 at 18:26:53 | |; | | | |; | | Main author: Torbjorn Sjostrand; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Department of Theoretical Physics, Lund University, Lund, Sweden; | |; | | phone: + 41 - 22 - 767 82 27; e-mail: torbjorn@thep.lu.se | |; | | Author: Stephen Mrenna; Computing Division, Simulations Group, | |; | | Fermi National Accelerator Laboratory, MS 234, Batavia, IL 60510, USA; | |; | | phone: + 1 - 630 - 840 - 2556; e-mail: mrenna@fnal.gov | |; | | Author: Peter Skands; CERN/PH, CH-1211 Geneva, Switzerland, | |; | | and Theoretical Physics Department, | |; | | Fermi National Accelerator Laboratory, MS 106, Batavia, IL 60510, USA; | |; | | phone: + 41 - 22 - 767 24 59; e-mail: skands@fnal.gov | |; | | | |; | | The main program reference is the 'Brief Introduction to PYTHIA 8.1', | |; | | T. Sjostrand, S. Mrenna and P. Skands, arXiv:0710.3820 | |; | | | |; | | The main physics reference is the 'PYTHIA 6.4 Physics and Manual', | |; | | T. Sjostrand, S. Mrenna and P. Skands, JHEP05 (2006) 026 [hep-ph/0603175]. | |; | | | |; | | An archive of program versions and documentation is found on the web: | |; | | http://www.thep.lu.se/~torbjorn/Pythia.html | |; | | | |; | | This program is released under the GNU General Public Licence version 2. | |; | | Please respect the MCnet Guidelines for Event Generator Authors and Users. | |; | | | |; | | Disclaimer: this program comes without any guarantees. | |; | | Beware of errors and use common sense when interpreting results. | |; | | | |; | | Copyright (C) 2007 Torbjorn Sjostrand | |; | | | |; | | | |; | *------------------------------------------------------------------------------* |; | |; *------------------------------------------------------------------------------------*; \endverbatim; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx:2913,error,errors,2913,montecarlo/pythia8/src/TPythia8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx,1,['error'],['errors']
Availability,"ompression - level of compression to perform on image data.; * compression has to be in range of 0-100 with 100; * signifying highest level of compression.; * NOTES; * In order to resize ASImage structure after asimage_start() has been; * called, asimage_init() must be invoked to free all the memory, and; * then asimage_start() has to be called with new dimensions.; *********/; /****f* libAfterImage/asimage/create_asimage(); * NAME; * create_asimage() Performs memory allocation for the new ASImage ; * structure, as well as initialization of allocated structure based on ; * supplied parameters.; * SYNOPSIS; * ASImage *create_asimage( unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * width - desired image width; * height - desired image height; * compression - compression level in new ASImage( see asimage_start(); * for more ).; * RETURN VALUE; * Pointer to newly allocated and initialized ASImage structure on; * Success. NULL in case of any kind of error - that should never happen.; *********/; /****f* libAfterImage/asimage/clone_asimage(); * NAME ; * clone_asimage(); * SYNOPSIS; * ASImage *clone_asimage(ASImage *src, ASFlagType filter );; * INPUTS; * src - original ASImage.; * filter - bitmask of channels to be copied from one image to another.; * RETURN VALUE; * New ASImage, as a copy of original image.; * DESCRIPTION; * Creates exact clone of the original ASImage, with same compression,; * back_color and rest of the attributes. Only ASImage data will be; * carried over. Any attached alternative forms of images (XImages, etc.); * will not be copied. Any channel with unset bit in filter will not be; * copied. Image name, ASImageManager and ref_count will not be copied -; * use store_asimage() afterwards and make sure you use different name,; * to avoid clashes with original image.; *********/; /****f* libAfterImage/asimage/destroy_asimage(); * NAME; * destroy_asimage() frees all the memory allocated for specified ASImage. ; * SYNO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:2177,error,error,2177,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['error'],['error']
Availability,"on of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the internal partial derivative calculation; * ordering strategy. The third argument determines the number of partial; * derivatives that are executed per task package on each worker.; * <tr><td> `ParallelDescentOptions(bool enable=false, int splitStrategy=0, int numSplits=4)` <td> **Experimental** - Control settings related to the parallelization of likelihoods; * outside of the gradient calculation but in the minimization, most prominently; * in the linesearch step. The first argu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:7147,avail,available,7147,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['avail'],['available']
Availability,"on string defining the fit options (see table below).; /// \param[in] goption specify a list of graphics options. See TGraph::Draw and TGraphPainter for a complete list of these possible options.; /// \param[in] rxmin lower fitting range; /// \param[in] rxmax upper fitting range; ///; /// \anchor GFitOpt; /// ### Graph Fitting Options; /// The list of fit options is given in parameter option.; ///; /// option | description; /// -------|------------; /// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; /// ""W"" | Ignore all point errors when fitting a TGraphErrors or TGraphAsymmErrors; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""Q"" | Quiet mode (minimum printing); /// ""V"" | Verbose mode (default is between Q and V); /// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; /// ""B"" | Use this option when you want to fix one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:1217,error,errors,1217,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['errors']
Availability,"on; /// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; /// If we replace the variance \f$ \sigma_{i}^{2} \f$; /// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; /// events in the ith bin) and the hypothesis of identity is valid, then the; /// maximum likelihood estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; ///\f]; /// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; /// as the original one [3], has a restriction on the expected frequencies. The; /// expected frequencies recommended for the weighted histogram is more than 25.; /// The value of the minimal expected frequency can be decreased down to 10 for; /// the case when the weights of the events are close to constant. In the case; /// of a weighted histogram if the number of events is unknown, then we can; /// apply this recommendation for the equivalent number of events as; ///\f[; /// n_{i}^{equiv} = \frac{ w_{i}^{2} }{ s_{i}^{2} }; ///\f]; /// The minimal expected frequency for an unweighted histogram must be 1. Notice; /// that any usual (unweighted) histogram can be considered as a weighted; /// histogram with events that have constant weights equal to 1.; /// The variance \f$ z_{i}^{2} \f$ of the difference between the weight wi; /// and the estimated expectation value of the weight is approximately equal to:; ///\f[; /// z_{i}^{2} = Var(w_{i}-W\hat{p}_{i}) = N\hat{p}_{i}(1-N\hat{p}_{i})\left(\frac{Ws_{i}^{2}}{\sqrt{(Ns_{i}^{2}-w_{i}W)^{2}+4W^{2}s_{i}^{2}n_{i}}}\right)^{2}+\frac{s_{i}^{2}}{4}\left(1+\frac{Ns_{i}^{2}-w_{i}W}{\sqrt{(Ns_{i}^{2}-w_{i}W)^{2}+4W^{2}s_{i}^{2}n_{i}}}\right)^{2}; ///\f]; /// The residuals; ///\f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7738,down,down,7738,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['down'],['down']
Availability,"onding object is added in the legend using its pointer. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,500);; gStyle->SetOptStat(0);. auto h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);; h1->FillRandom(""gaus"",30000);; h1->SetFillColor(kGreen);; h1->SetFillStyle(3003);; h1->Draw();. auto f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; f1->SetLineColor(kBlue);; f1->SetLineWidth(4);; f1->Draw(""same"");. const Int_t n = 20;; Double_t x[n], y[n], ex[n], ey[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 1000*sin(x[i]+0.2);; x[i] = 17.8*x[i]-8.9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; auto gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. auto legend = new TLegend(0.1,0.7,0.48,0.9);; legend->SetHeader(""The Legend Title"",""C""); // option ""C"" allows to center the header; legend->AddEntry(h1,""Histogram filled with random numbers"",""f"");; legend->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; legend->AddEntry(""gr"",""Graph with error bars"",""lep"");; legend->Draw();; }; End_Macro. `TLegend` inherits from `TAttText` therefore changing any; text attributes (text alignment, font, color...) on a legend will changed the; text attributes on each line. In particular it can be interesting to change the text alignement that way. In; order to have a base-line vertical alignment instead of a centered one simply do:; ~~~ {.cpp}; legend->SetTextAlign(13);; ~~~; or; ~~~ {.cpp}; legend->SetTextAlign(11);; ~~~; The default value of some `TLegend` attributes can be changed using; `gStyle`. The default settings are:; ~~~ {.cpp}; SetLegendBorderSize(1);; SetLegendFillColor(0);; SetLegendFont(42);; SetLegendTextSize(0.);; ~~~; The global attributes change the default values for the next created legends. Text attributes can be also changed individually on each legend entry:; ~~~ {.cpp}; TLegendEntry *le = leg->AddEntry(h1,""Histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:2026,error,error,2026,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,1,['error'],['error']
Availability,"onst RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per curve. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; ///; /// <tr><td> `EvalErrorValue(double value)` <td> Set curve points at which (pdf) evaluation errors occur to specified value. By default the; /// function value is plotted.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category [F(+)-F(-)] / [F(+)+F(-)] rather than; /// the PDF projection. Category must have two states with indices -1 and +1 or three states with; /// indices -1,0 and +1.; ///; /// <tr><td> `ShiftToZero(bool flag)` <td> Shift entire curve such that lowest visible point is at exactly zero. Mostly us",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3666,error,errors,3666,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['error'],['errors']
Availability,"ontManager. Needed for; * connection to FreeType library, as well as path to; * search fonts in.; * font_string - filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * verbose - if True, extensive error messages will be printed if; * problems encountered.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_freetype_font() will attempt to find font file in any of the; * directories specified in ASFontManager's font_path. If it fails to do; * so - then it will check if filename has alldigit extentions. It will; * then try to interpret that extention as a face number, and try and; * find the file with extention stripped off.; * If file was found function will atempt to read it using FreeType; * library. If requested face is not available in the font - face 0 will; * be used.; * On success all the font's glyphs will be rendered and cached, and; * needed font geometry info collected.; * When FreeType Library is not available that function does nothing.; *********/; /****f* libAfterImage/asfont/open_X11_font(); * NAME; * open_X11_font(); * SYNOPSIS; * ASFont *open_X11_font( ASFontManager *fontman,; * const char *font_string);; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection X Server.; * font_string - name of the font as recognized by Xlib.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * open_X11_font() attempts to load and query font using Xlib calls.; * On success it goes thgroughthe codemap of the font and renders all; * the glyphs available. Glyphs then gets transfered to the client's; * memory and encoded using RLE compression. At this time smoothing; * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:1267,avail,available,1267,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['avail'],['available']
Availability,"ooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10574,error,errors,10574,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"opyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooArgSet; /// RooArgSet is a container object that can hold multiple RooAbsArg objects.; /// The container has set semantics which means that:; ///; /// - Every object it contains must have a unique name returned by GetName().; ///; /// - Contained objects are not ordered, although the set can be traversed; /// using an iterator returned by createIterator(). The iterator does not; /// necessarily follow the object insertion order.; ///; /// - Objects can be retrieved by name only, and not by index.; ///; ///; /// Ownership of contents; /// -------------------------; /// Unowned objects are inserted with the add() method. Owned objects; /// are added with addOwned() or addClone(). A RooArgSet either owns all; /// of it contents, or none, which is determined by the first `add`; /// call. Once an ownership status is selected, inappropriate `add` calls; /// will return error status. Clearing the list via removeAll() resets the; /// ownership status. Arguments supplied in the constructor are always added; /// as unowned elements.; ///; ///; /// Uniquely identifying RooArgSet objects; /// ---------------------------------------; ///; /// \warning Before v6.28, it was ensured that no RooArgSet objects on the heap; /// were located at an address that had already been used for a RooArgSet before.; /// With v6.28, this is not guaranteed anymore. Hence, if your code uses pointer; /// comparisons to uniquely identify RooArgSet instances, please consider using; /// the new `RooArgSet::uniqueId()`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:1664,error,error,1664,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,1,['error'],['error']
Availability,"or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, see TFumili::Minimize.; ///; /// \anchor HFitRange; /// ### Fitting in a range; ///; /// In order to fit in a sub-range of the histogram you have two options:; /// - pass to this function the lower (`xxmin`) and upper (`xxmax`) values for the fitting range;; /// - define a specific range in the fitted function and use the fitting option ""R"".; /// For example, if your histogram has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the interval ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12743,error,error,12743,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"or estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8563,error,error,8563,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"or), there are two possible; /// outcomes. If we start the iterator at A, B, or E, we will visit only A, B,; /// and E. If we start at C or D, we will visit all instructions A-E.; ///; /// \code; /// A;; /// B;; /// if (...) {; /// C;; /// D;; /// }; /// E;; /// \endcode; ///; ///; /// Below is the example extneded with instructions F and G. Now we assume F; /// might not transfer execution to it's successor G. As a result we get the; /// following visit sets:; ///; /// Start Instruction | Visit Set; /// A | A, B, E, F; /// B | A, B, E, F; /// C | A, B, C, D, E, F; /// D | A, B, C, D, E, F; /// E | A, B, E, F; /// F | A, B, E, F; /// G | A, B, E, F, G; ///; ///; /// \code; /// A;; /// B;; /// if (...) {; /// C;; /// D;; /// }; /// E;; /// F; // Might not transfer execution to its successor G.; /// G;; /// \endcode; ///; ///; /// A more complex example involving conditionals, loops, break, and continue; /// is shown below. We again assume all instructions will transmit control to; /// the successor and we assume we can prove the inner loop to be finite. We; /// omit non-trivial branch conditions as the exploration is oblivious to them.; /// Constant branches are assumed to be unconditional in the CFG. The resulting; /// visist sets are shown in the table below.; ///; /// \code; /// A;; /// while (true) {; /// B;; /// if (...); /// C;; /// if (...); /// continue;; /// D;; /// if (...); /// break;; /// do {; /// if (...); /// continue;; /// E;; /// } while (...);; /// F;; /// }; /// G;; /// \endcode; ///; /// Start Instruction | Visit Set; /// A | A, B; /// B | A, B; /// C | A, B, C; /// D | A, B, D; /// E | A, B, D, E, F; /// F | A, B, D, F; /// G | A, B, D, G; ///; ///; /// Note that the examples show optimal visist sets but not necessarily the ones; /// derived by the explorer depending on the available CFG analyses (see; /// MustBeExecutedContextExplorer). Also note that we, depending on the options,; /// the visit set can contain instructions from other functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:2184,avail,available,2184,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,1,['avail'],['available']
Availability,"ork, we transfer one byte to indicate the head of the; * page list sent, and for each page on the list of sent pages, the page; * header and the page payload is sent (if the page is free, we only; * transmit the page header, and we never transmit more payload than; * the page actually contains); * - in the child, all open BidirMMapPipes but the current one are closed. this; * is done for two reasons: first, to conserve file descriptors and address; * space. second, if more than one process is meant to use such a; * BidirMMapPipe, synchronisation issues arise which can lead to bugs that; * are hard to find and understand. it's much better to come up with a design; * which does not need pipes to be shared among more than two processes.; *; * Here is a trivial example of a parent and a child talking to each other over; * a BidirMMapPipe:; * @code; * #include <string>; * #include <iostream>; * #include <cstdlib>; *; * #include ""BidirMMapPipe.h""; *; * int simplechild(BidirMMapPipe& pipe); * {; * // child does an echo loop; * while (pipe.good() && !pipe.eof()) {; * // read a string; * std::string str;; * pipe >> str;; * if (!pipe) return -1;; * if (pipe.eof()) break;; * // check if parent wants us to shut down; * if (!str.empty()) {; * std::cout << ""[CHILD] : read: "" << str << std::endl;; * str = ""... early in the morning?"";; * }; * pipe << str << BidirMMapPipe::flush;; * if (str.empty()) break;; * if (!pipe) return -1;; * std::cout << ""[CHILD] : wrote: "" << str << std::endl;; * }; * // send shutdown request acknowledged; * pipe << """" << BidirMMapPipe::flush;; *; * pipe.close();; * return 0;; * }; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechil",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:5550,echo,echo,5550,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['echo'],['echo']
Availability,"ormation.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass tries to remove unnecessary VGPR live ranges in divergent if-else; /// structures and waterfall loops.; ///; /// When we do structurization, we usually transform an if-else into two; /// successive if-then (with a flow block to do predicate inversion). Consider a; /// simple case after structurization: A divergent value %a was defined before; /// if-else and used in both THEN (use in THEN is optional) and ELSE part:; /// bb.if:; /// %a = ...; /// ...; /// bb.then:; /// ... = op %a; /// ... // %a can be dead here; /// bb.flow:; /// ...; /// bb.else:; /// ... = %a; /// ...; /// bb.endif; ///; /// As register allocator has no idea of the thread-control-flow, it will just; /// assume %a would be alive in the whole range of bb.then because of a later; /// use in bb.else. On AMDGPU architecture, the VGPR is accessed with respect; /// to exec mask. For this if-else case, the lanes active in bb.then will be; /// inactive in bb.else, and vice-versa. So we are safe to say that %a was dead; /// after the last use in bb.then until the end of the block. The reason is; /// the instructions in bb.then will only overwrite lanes that will never be; /// accessed in bb.else.; ///; /// This pass aims to tell register allocator that %a is in-fact dead,; /// through inserting a phi-node in bb.flow saying that %a is undef when coming; /// from bb.then, and then replace the uses in the bb.else with the result of; /// newly inserted phi.; ///; /// Two key conditions must be met to ensure correctness:; /// 1.) The def-point should be in the same loop-level as if-else-endif to make; /// sure the second loop iteration still get correct data.; /// 2.) There should be no further uses after the IF-ELSE region.; ///; ///; /// Waterfall loops get inserted around instructions that use divergent values; /// but can onl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp:1252,mask,mask,1252,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeVGPRLiveRange.cpp,1,['mask'],['mask']
Availability,"ormations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8976,down,down,8976,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability,"ors; \f$\mathbf{e}_n, n=0,\ldots,N,N+1, \ldots, P-1\f$; \f[; \mathbf{y}_i = \sum^N_{i=0} a_{i_n} \mathbf{e}_n,; \quad; i = 1, \ldots, M,; \quad; N < P-1; \f]; The `best' feature coordinates \f$\mathbf{e}_n\f$, spanning a *feature; space*, will be obtained by minimizing the error due to this; truncated expansion, i.e.,; \f[; \min\left(E_N\right) =; \min\left[\left\langle\left(\mathbf{y}_i - \sum^N_{i=0} a_{i_n} \mathbf{e}_n\right)^2\right\rangle\right]; \f]; with the conditions:; \f[; \mathbf{e}_k\bullet\mathbf{e}_j = \delta_{jk} =; \left\{\begin{array}{rcl}; 1 & \mbox{for} & k = j\\; 0 & \mbox{for} & k \neq j; \end{array}\right.; \f]; Multiplying (3) by \f$\mathbf{e}^T_n\f$ using (5),; we get; \f[; a_{i_n} = \mathbf{y}_i^T\bullet\mathbf{e}_n\,,; \f]; so the error becomes; \f{eqnarray*}{; E_N &=&; \left\langle\left[\sum_{n=N+1}^{P-1} a_{i_n}\mathbf{e}_n\right]^2\right\rangle\nonumber\\; &=&; \left\langle\left[\sum_{n=N+1}^{P-1} \mathbf{y}_i^T\bullet\mathbf{e}_n\mathbf{e}_n\right]^2\right\rangle\nonumber\\; &=&; \left\langle\sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathbf{y}_i\mathbf{y}_i^T\mathbf{e}_n\right\rangle\nonumber\\; &=&; \sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathsf{C}\mathbf{e}_n; \f}; The minimization of the sum in (7) is obtained when each; term \f$\mathbf{e}_n^\mathsf{C}\mathbf{e}_n\f$ is minimum, since \f$\mathsf{C}\f$ is; positive definite. By the method of Lagrange multipliers, and the; condition (5), we get; \f[; E_N = \sum^{P-1}_{n=N+1} \left(\mathbf{e}_n^T\mathsf{C}\mathbf{e}_n -; l_n\mathbf{e}_n^T\bullet\mathbf{e}_n + l_n\right); \f]; The minimum condition \f$\frac{dE_N}{d\mathbf{e}^T_n} = 0\f$ leads to the; equation; \f[; \mathsf{C}\mathbf{e}_n = l_n\mathbf{e}_n\,,; \f]; which shows that \f$\mathbf{e}_n\f$ is an eigenvector of the covariance; matrix \f$\mathsf{C}\f$ with eigenvalue \f$l_n\f$. The estimated minimum error is; then given by; \f[; E_N \sim \sum^{P-1}_{n=N+1} \mathbf{e}_n^T\bullet l_n\mathbf{e}_n; = \sum^{P-1}_{n=N+1} l_n\,,; \f]; where \f$l_n,\,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:5849,error,error,5849,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['error'],['error']
Availability,"ort ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame. if __name__ == ""__main__"":; df = RDataFrame(""mytree"",""myfile.root"").Define(""x"",""someoperation""); # The model can be passed either as a tuple with the arguments in the correct order; df.Histo1D((""name"", ""title"", 10, 0, 10), ""x""); # Or by creating the specific struct; model = ROOT.RDF.TH1DModel(""name"", ""title"", 10, 0, 10); df.Histo1D(model, ""x""); ~~~. Without this, two partial histograms resulting from two distributed tasks would have incompatible binning, thus leading; to errors when merging them. Failing to pass a histogram model will raise an error on the client side, before starting; the distributed execution. ### Live visualization in distributed mode with dask. The live visualization feature allows real-time data representation of plots generated during the execution ; of a distributed RDataFrame application. ; It enables visualizing intermediate results as they are computed across multiple nodes of a Dask cluster; by creating a canvas and continuously updating it as partial results become available. . The LiveVisualize() function can be imported from the Python package **ROOT.RDF.Experimental.Distributed**:. ~~~{.py}; import ROOT. LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ~~~. The function takes drawable objects (e.g. histograms) and optional callback functions as argument, it accepts 4 different input formats:. - Passing a list or tuple of drawables: ; You can pass a list or tuple containing the plots you want to visualize. For example:. ~~~{.py}; LiveVisualize([h_gaus, h_exp, h_random]); ~~~. - Passing a list or tuple of drawables with a global callback function: ; You can also include a global callback function that will be applied to all plots. For example:. ~~~{.py}; def set_fill_color(hist):; hist.SetFillColor(ROOT.kBlue). LiveVisualize([h_gaus, h_exp, h_random], set_fill_color); ~~~. - Passing a Dictionary of drawables and callback functions: ; For more c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:45399,avail,available,45399,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"ound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered mi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:2523,error,error,2523,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3491,error,error,3491,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,5,['error'],['error']
Availability,"ove). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<1000",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25753,error,error,25753,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"ower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this step, effective threads combine their thread local Reduce list; /// with Remote Reduce list and store the result in the thread local; /// Reduce list.; /// Value copy:; /// In this step, we deal with the assumption made by algorithm 2; /// (i.e. contiguity assumption). When we have an odd number of lanes; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2048,alive,alive,2048,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['alive'],['alive']
Availability,"own""`.; /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; ///; /// Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation of values shared; /// among variations only happen once for all variations. Thus, the event loop; /// run-time typically scales much better than linearly with the number of; /// variations.; ///; /// RDataFrame lazily computes the varied values required to produce the; /// outputs of \ref ROOT::RDF::Experimental::VariationsFor ""Varia",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1651,down,down,1651,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['down'],['down']
Availability,"ox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covariance matrix, and its negative components, in the definition of; Eq. (2). A word of caution is in order with respect to the error bars. Whereas; their sum in quadrature is identical to the statistical uncertainties; of the yields determined by the fit, and if, in addition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observation, at a given confidence; level. \image html splot_mass-bkg-sPlot.png Figure 3 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom); obtained for \f${m_{\rm ES}}\f$ are represented as dots with error bars.; They are obtained from a fit using only information from \f$\Delta E\f$ and; \f${\cal F}\f$. <p>; Choosing \f${m_{\rm ES}}\f$ and \f$\Delta E\f$ as discriminating variables ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:9522,error,error,9522,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['error'],['error']
Availability,"p header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1827,avail,available,1827,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,"['avail', 'error']","['available', 'error']"
Availability,"p header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1744,avail,available,1744,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,"['avail', 'error']","['available', 'error']"
Availability,"p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic allocation and local alignment, such; // objects can only be accessed through the FP.; //; // Illustration of the AP:; // FP --+; // |; // ---------------+---------------------+-----+-----------------------++-+--; // Rest of the | Local stack objects | Pad | Fixed stack objects |LR|; // stack frame | (aligned) | | (CSR, spills, etc.) |FP|; // ---------------+---------------------+-----+-----------------+-----+--+--; // |<-- Multiple of the -->|; // stack alignment +-- AP; //; // The AP is set up at the beginning of the function. Since it is not a dedi-; // cated (reserved) register, it needs to be kept live throughout the function; // to be available as the base register for local object accesses.; // Normally, an address of a stack objects is obtained by a pseudo-instruction; // PS_fi. To access local objects with the AP register present, a different; // pseudo-instruction needs to be used: PS_fia. The PS_fia takes one extra; // argument compared to PS_fi: the first input register is the AP register.; // This keeps the register live between its definition and its uses.; // The AP register is originally set up using pseudo-instruction PS_aligna:; // AP = PS_aligna A; // where; // A - required stack alignment; // The alignment value must be the maximum of all alignments required by; // any stack object.; // The dynamic allocation uses a pseudo-instruction PS_alloca:; // Rd = PS_alloca Rs, A; // where; // Rd - address of the allocated space; // Rs - minimum size (the actual allocated can be larger to accommodate; // alignment); // A - required alignment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:2906,avail,available,2906,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['avail'],['available']
Availability,"pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26236,error,error,26236,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"pected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; /// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; /// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; /// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; /// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; /// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; /// ""Q"" | Quiet mode (minimum printing); /// ""V"" | Verbose mode (default is between Q and V); /// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; /// ""B"" | Use this option when you want to fix or set limits on one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2202,avail,available,2202,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['avail'],['available']
Availability,"perform a comparison of string; /// data with explicitly defined lengths that is contained in source operands; /// \a A and \a B. Returns bit 0 of the resulting bit mask.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestro(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B.; /// \returns Returns bit 0 of the resulting bit mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1761,mask,mask,1761,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,4,['mask'],['mask']
Availability,"ph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Begin_Macro(source); {; auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetTitle(""Not symmetric errors"");; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; }; End_Macro. \anchor GrP3c; #### TGraphBentErrors; A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Begin_Macro(source); {; auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basica",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:11897,error,error,11897,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"pop up the context menu and then select the menu; entry 'Fit Panel'. ""General"" Tab. The first set of GUI elements is related to the function choice; and settings. The status bar on the bottom provides information; about the current minimization settings using the following; abbreviations:; LIB - shows the current choice between Minuit/Minuit2/Fumili; MIGRAD or FUMILI points to the current minimization method in use.; Itr: - shows the maximum number of iterations nnnn set for the fit.; Prn: - can be DEF/VER/QT and shows the current print option in use. ""Predefined"" combo box - contains a list of predefined functions; in ROOT. The default one is Gaussian. ""Operation"" radio button group defines selected operational mode; between functions: NOP - no operation (default); ADD - addition; CONV - convolution (will be implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:1633,error,error,1633,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['error'],['error']
Availability,"port 81-03, CERN, 1981. 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; Statistical Methods in Experimental Physics.; North-Holland, 1971. ### Reliability of MINUIT error estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:8946,error,errors,8946,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['errors']
Availability,"prefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1650,error,errors,1650,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,"['avail', 'error']","['available', 'errors']"
Availability,"print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn wit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26325,error,error,26325,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"protocol changed; // 3 -> 4: introduction of multi-level-master support; // 4 -> 5: added friends support; // 5 -> 6: drop TFTP, support for asynchronous queries; // 6 -> 7: support for multisessions, archieve, retrieve, ...; // 7 -> 8: return number of entries in GetNextPacket; // 8 -> 9: support for stateless connection via xproofd; // 9 -> 10: new features requested, tested at CAF; // 10 -> 11: new merging strategy; // 11 -> 12: new progress message; // 12 -> 13: exchange version/architecture/compiler info; // 13 -> 14: new proofserv environment setting; // 14 -> 15: add support for entry lists; new version of TFileInfo; // 15 -> 16: add support for generic non-data based processing; // 16 -> 17: new dataset handling system; support for TFileCollection processing; // 17 -> 18: support for reconnection on daemon restarts; // 18 -> 19: TProofProgressStatus used in kPROOF_PROGRESS, kPROOF_STOPPROCESS; // and kPROOF_GETNEXTPACKET messages in Master - worker communication; // 19 -> 20: Fix the asynchronous mode (required changes in some messages); // 20 -> 21: Add support for session queuing; // 21 -> 22: Add support for switching from sync to async while running ('Ctrl-Z' functionality); // 22 -> 23: New dataset features (default tree name; classification per fileserver); // 23 -> 24: Merging optimization; // 24 -> 25: Handling of 'data' dir; group information; // 25 -> 26: Use new TProofProgressInfo class; // 26 -> 27: Use new file for updating the session status; // 27 -> 28: Support for multi-datasets, fix global pack dirs, fix AskStatistics,; // package download, dataset caching; // 28 -> 29: Support for config parameters in EnablePackage, idle-timeout; // 29 -> 30: Add information about data dir in TSlaveInfo; // 30 -> 31: Development cycle 5.29; // 31 -> 32: New log path trasmission; // 32 -> 33: Development cycle 5.29/04 (fixed worker activation, new startup technology, ...); // 33 -> 34: Development cycle 5.33/02 (fix load issue, ...); // 34 -> 35: Development",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:1703,down,download,1703,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['down'],['download']
Availability,"provided clang recognizes them as builtins, and has the; // effect that this type signature is used in place of the one; // that Builtins.def didn't provide. That's how we can get; // structure types that weren't defined until this header was; // included to be part of the type signature of a builtin that; // was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1164,error,error,1164,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['error'],['error']
Availability,"pt for; /// the range version of \a insert().; ///; /// There are three sets of API for discarding nodes from the list: \a; /// remove(), which takes a reference to the node to remove, \a erase(), which; /// takes an iterator or iterator range and returns the next one, and \a; /// clear(), which empties out the container. All three are constant time; /// operations. None of these deletes any nodes; in particular, if there is a; /// single node in the list, then these have identical semantics:; /// \li \c L.remove(L.front());; /// \li \c L.erase(L.begin());; /// \li \c L.clear();; ///; /// As a convenience for callers, there are parallel APIs that take a \c; /// Disposer (such as \c std::default_delete<T>): \a removeAndDispose(), \a; /// eraseAndDispose(), and \a clearAndDispose(). These have different names; /// because the extra semantic is otherwise non-obvious. They are equivalent; /// to calling \a std::for_each() on the range to be discarded.; ///; /// The currently available \p Options customize the nodes in the list. The; /// same options must be specified in the \a ilist_node instantiation for; /// compatibility (although the order is irrelevant).; /// \li Use \a ilist_tag to designate which ilist_node for a given \p T this; /// list should use. This is useful if a type \p T is part of multiple,; /// independent lists simultaneously.; /// \li Use \a ilist_sentinel_tracking to always (or never) track whether a; /// node is a sentinel. Specifying \c true enables the \a; /// ilist_node::isSentinel() API. Unlike \a ilist_node::isKnownSentinel(),; /// which is only appropriate for assertions, \a ilist_node::isSentinel() is; /// appropriate for real logic.; ///; /// Here are examples of \p Options usage:; /// \li \c simple_ilist<T> gives the defaults. \li \c; /// simple_ilist<T,ilist_sentinel_tracking<true>> enables the \a; /// ilist_node::isSentinel() API.; /// \li \c simple_ilist<T,ilist_tag<A>,ilist_sentinel_tracking<false>>; /// specifies a tag of A and that t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h:1460,avail,available,1460,interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/simple_ilist.h,1,['avail'],['available']
Availability,"ption when you want to fix one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits are set.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""EX0"" | When fitting a TGraphErrors or TGraphAsymErrors do not consider errors in the X coordinates; /// ""ROB"" | In case of linear fitting, compute the LTS regression coefficients (robust (resistant) regression), using the default fraction of good points ""ROB=0.x"" - compute the LTS regression coefficients, using 0.x as a fraction of good points; ///; ///; /// This function is used for fitting also the derived TGraph classes such as TGraphErrors or TGraphAsymmErrors.; /// See the note below on how the errors are used when fitting a TGraphErrors or TGraphAsymmErrors.; ///; /// The fitting of the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is then computed as the sum of the quantity below at each data point:; ///; /// \f[; /// \frac{(y-f(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f'(x))^{2}}; /// \f]; ///; /// where `x` and `y` are the point coordinates, and `f'(x)` is the derivative of the; /// function `f(x)`.; ///; /// In case of asymmetric errors, if the function lies below (above) the data point, `ey` is `ey_low` (`ey_high`).; ///;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:3066,error,errors,3066,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['errors']
Availability,"ptron is a simple feed-forward network with; the following structure:. \image html mlp.png. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; \f$w_{ij}(t+1) = w_{ij}(t) + \Delta w_{ij}(t)\f$. with. \f$\Delta w_{ij}(t) = - \eta(d e_p / d w_{ij} + \delta) + \epsilon \Delta w_{ij}(t-1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:3859,error,error,3859,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,2,['error'],['error']
Availability,"quences with the following grammar:; //; // rep_field ::= ""{"" index ["","" layout] ["":"" format] ""}""; // index ::= <non-negative integer>; // layout ::= [[[char]loc]width]; // format ::= <any string not containing ""{"" or ""}"">; // char ::= <any character except ""{"" or ""}"">; // loc ::= ""-"" | ""="" | ""+""; // width ::= <positive integer>; //; // index - A non-negative integer specifying the index of the item in the; // parameter pack to print. Any other value is invalid.; // layout - A string controlling how the field is laid out within the available; // space.; // format - A type-dependent string used to provide additional options to; // the formatting operation. Refer to the documentation of the; // various individual format providers for per-type options.; // char - The padding character. Defaults to ' ' (space). Only valid if; // `loc` is also specified.; // loc - Where to print the formatted text within the field. Only valid if; // `width` is also specified.; // '-' : The field is left aligned within the available space.; // '=' : The field is centered within the available space.; // '+' : The field is right aligned within the available space (this; // is the default).; // width - The width of the field within which to print the formatted text.; // If this is less than the required length then the `char` and `loc`; // fields are ignored, and the field is printed with no leading or; // trailing padding. If this is greater than the required length,; // then the text is output according to the value of `loc`, and padded; // as appropriate on the left and/or right by `char`.; //; // ===Special Characters===; //; // The characters '{' and '}' are reserved and cannot appear anywhere within a; // replacement sequence. Outside of a replacement sequence, in order to print; // a literal '{' it must be doubled as ""{{"".; //; // ===Parameter Indexing===; //; // `index` specifies the index of the parameter in the parameter pack to format; // into the output. Note that it is possible ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:1209,avail,available,1209,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['avail'],['available']
Availability,"r <manuel.schiller@nikhef.nl>; * @date 2013-07-07; *; * This class creates a bidirectional channel between this process and a child; * it creates with fork().; *; * The channel is comrised of a small shared pool of buffer memory mmapped into; * both process spaces, and two pipes to synchronise the exchange of data. The; * idea behind using the pipes at all is to have some primitive which we can; * block on without having to worry about atomic operations or polling, leaving; * these tasks to the OS. In case the anonymous mmap cannot be performed on the; * OS the code is running on (for whatever reason), the code falls back to; * mmapping /dev/zero, mmapping a temporary file, or (if those all fail), a; * dynamically allocated buffer which is then transmitted through the pipe(s),; * a slightly slower alternative (because the data is copied more often).; *; * The channel supports five major operations: read(), write(), flush(),; * purge() and close(). Reading and writing may block until the required buffer; * space is available. Writes may queue up data to be sent to the other end; * until either enough pages are full, or the user calls flush which forces; * any unsent buffers to be sent to the other end. flush forces any data that; * is to be sent to be sent. purge discards any buffered data waiting to be; * read and/or sent. Closing the channel on the child returns zero, closing it; * on the parent returns the child's exit status.; *; * The class also provides operator<< and operator>> for C++-style I/O for; * basic data types (bool, char, short, int, long, long long, float, double; * and their unsigned counterparts). Data is transmitted binary (i.e. no; * formatting to strings like std::cout does). There are also overloads to; * support C-style zero terminated strings and std::string. In terms of; * performance, the former is to be preferred.; *; * If the caller needs to multiplex input and output to/from several pipes, the; * class provides the poll() method which al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:1168,avail,available,1168,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['avail'],['available']
Availability,"r Hilsfunktion werden Annahmen getroffen,; * ueber die Verschiedenheit von Eingabe- & Ausgabe-Werten.; *; *; * Funktionen:; *; * a_add( s1, s2, d ); * rsa_NUMBER *s1,*s2,*d;; * *d = *s1 + *s2;; *; * a_assign( *d, *s ); * rsa_NUMBER *d,*s;; * *d = *s;; *; * int a_cmp( c1, c2 ); * rsa_NUMBER *c1,*c2;; * 1 : falls *c1 > *c2; * 0 : falls *c1 == *c2; * -1 : falls *c1 < *c2; *; * a_div( d1, d2, q, r ); * rsa_NUMBER *d1,*d2,*q,*r;; * *q = *d1 / *d2 Rest *r;; *; * a_div2( n ); * rsa_NUMBER *n;; * *n /= 2;; *; * a_ggt( a, b, f ); * rsa_NUMBER *a,*b,*f;; * *f = ( *a, *b );; *; * a_imult( n, m, d ); * rsa_NUMBER *n;; * rsa_INT m;; * rsa_NUMBER *d;; * *d = *n * m; *; * a_mult( m1, m2, d ); * rsa_NUMBER *m1,*m2,*d;; * *d = *m1 * *m2;; *; * a_sub( s1, s2, d ); * rsa_NUMBER *s1,*s2,*d;; * *d = *s1 - *s2;; *; * Modulare Funktionen; * m_init( n, o ); * rsa_NUMBER *n,*o;; * Initialsierung der Modularen Funktionen; * o != 0 : *o = alter Wert; *; * m_add( s1, s2, d ); * rsa_NUMBER *s1, *s2, *d;; * *d = *s1 + *s2;; *; * m_mult( m1, m2, d ); * rsa_NUMBER *m1,*m2,*d;; *; * m_exp( x, n, z ); * rsa_NUMBER *x,*n,*z;; * *z = *x exp *n;; *; *; * Hilfs-Funktionen:; *; * int n_bits( n, b ); * rsa_NUMBER *n;; * int b;; * return( unterste b Bits der Dualdarstellung von n); *; * n_div( d1, z2, q, r ); * rsa_NUMBER *d1,z2[rsa_MAXBIT],*q,*r;; * *q = *d1 / z2[0] Rest *r;; * z2[i] = z2[0] * 2^i, i=0..rsa_MAXBIT-1; *; * int n_cmp( i1, i2, l ); * rsa_INT i1[l], i2[l];; * 1 : falls i1 > i2; * 0 : falls i1 == i2; * -1 : falls i1 < i2; *; * int n_mult( n, m, d, l); * rsa_INT n[l], m, d[];; * d = m * n;; * return( sizeof(d) ); d.h. 'l' oder 'l+1'; *; * int n_sub( p1, p2, p3, l, lo ); * rsa_INT p1[l], p2[lo], p3[];; * p3 = p1 - p2;; * return( sizeof(p3) ); d.h. '<= min(l,lo)'; *; * int n_bitlen( n ); * rsa_NUMBER *n;; * return( sizeof(n) in bits ); *; */; ////////////////////////////////////////////////////////////////////////////////; /// rand() implementation using /udev/random or /dev/random, if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx:2455,avail,available,2455,net/auth/src/rsaaux.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx,1,['avail'],['available']
Availability,"r and before the first block. When doing a raw inflate, inflate(); will go ahead and process the first block, and will return when it gets to; the end of that block, or when it runs out of data. The Z_BLOCK option assists in appending to or combining deflate streams.; Also to assist in this, on return inflate() will set strm->data_type to the; number of unused bits in the last byte taken from strm->next_in, plus 64; if inflate() is currently decoding the last block in the deflate stream,; plus 128 if inflate() returned immediately after decoding an end-of-block; code or decoding the complete header up to just before the first byte of the; deflate stream. The end-of-block will not be indicated until all of the; uncompressed data from that block has been written to strm->next_out. The; number of unused bits may in general be greater than seven, except when; bit 7 of data_type is set, in which case the number of unused bits will be; less than eight. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step; (a single call of inflate), the parameter flush should be set to; Z_FINISH. In this case all pending input is processed and all pending; output is flushed; avail_out must be large enough to hold all the; uncompressed data. (The size of the uncompressed data may have been saved; by the compressor for this purpose.) The next operation on this stream must; be inflateEnd to deallocate the decompression state. The use of Z_FINISH; is never required, but can be used to inform inflate that a faster approach; may be used for the single inflate() call. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the only effect of the flush parameter in this implementation; is on the return value of inflate(), as noted below, or when it returns early; because Z_BLOCK is used. If a preset dictio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2822,error,error,2822,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"r for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBinError(bin);; ~~~. \anchor associated-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogram.; - Additions of two histograms with coefficients and storage into the current; histogram.; - Multiplications and Divisions are supported in the same way as additions.; - The Add, Divide and Multiply functions also exist to add, divide or multiply; a histogram by a function. If a histogram has associated error bars (TH1::Sumw2 has been called),; the resulting error bars are also computed assuming independent histograms.; In case of divisions, Binomial errors are also supported.; One can mark a histogram to be an ""average"" histogram by setting its bit kIsAverage via; myhist.SetBit(TH1::kIsAverage);; When adding (see TH1::Add) average histograms, the histograms are averaged and not summed. \anchor prof-hist; ### Projections of histograms. One can:. - make a 1-D projection of a 2-D histogram or Profile; see functions TH2::ProjectionX,Y, TH2::ProfileX,Y, TProfile::ProjectionX; - make a 1-D, 2-D or profile out of a 3-D histogram; see functions TH3::ProjectionZ, TH3::Project3D. One can fit these projections via:; ~~~ {.cpp}; TH2::FitSlicesX,Y, TH3::FitSlicesZ.; ~~~. \anchor random-numbers; ### Random Numbers and histograms. TH1::FillRandom can be used to randomly fill a histogram using; the contents of an existing TF1 function or another; TH1 histogram (for all dimensions).; For example, the following two statements create and fill a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:15008,error,error,15008,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['error']
Availability,"r its limit at the minimum, this may be because the true; minimum is indeed at a limit, or it may be because the minimizer has; become ``blocked'' at a limit. This may normally happen only if the; parameter is so close to a limit (internal value at an odd multiple of; \f$\pm \frac{\pi}{2}\f$; that MINUIT prints a warning to this effect when it prints; the parameter values. The minimizer can become blocked at a limit, because at a limit; the derivative seen by the minimizer; \f$\partial F / \partial P_{\mathrm{int}}\f$; is zero no matter what the real derivative; \f$\partial F / \partial P_{\mathrm{ext}}\f$ is. \f[; \frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; \f]. #### Getting the right parameter errors with limits. In the best case, where the minimum is far from any limits, MINUIT will; correctly transform the error matrix, and the parameter errors it reports; should be accurate and very close to those you would have got without; limits. In other cases (which should be more common, since otherwise you; wouldn't need limits), the very meaning of parameter errors becomes; problematic. Mathematically, since the limit is an absolute constraint on; the parameter, a parameter at its limit has no error, at least in one; direction. The error matrix, which can assign only symmetric errors, then; becomes essentially meaningless. ### Interpretation of Parameter Errors:. There are two kinds of problems that can arise: the reliability of; MINUIT's error estimates, and their statistical interpretation, assuming; they are accurate. ### Statistical interpretation:. For discussion of basic concepts, such as the meaning of the elements of; the error matrix, or setting of exact confidence levels see:. 1. F.James.; Determining the statistical Significance of experimental Results.; Technical Report DD/81/02 and CERN Report 81-0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:6947,error,error,6947,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],"['error', 'errors']"
Availability,"r traversing an AST rooted at x. This method simply; /// dispatches (i.e. forwards) to TraverseFoo(Foo *x) where Foo; /// is the dynamic type of *x, which calls WalkUpFromFoo(x) and; /// then recursively visits the child nodes of x.; /// TraverseStmt(Stmt *x) and TraverseType(QualType x) work; /// similarly.; /// 2. WalkUpFromFoo(Foo *x) does task #2. It does not try to visit; /// any child node of x. Instead, it first calls WalkUpFromBar(x); /// where Bar is the direct parent class of Foo (unless Foo has; /// no parent), and then calls VisitFoo(x) (see the next list item).; /// 3. VisitFoo(Foo *x) does task #3.; ///; /// These three method groups are tiered (Traverse* > WalkUpFrom* >; /// Visit*). A method (e.g. Traverse*) may call methods from the same; /// tier (e.g. other Traverse*) or one tier lower (e.g. WalkUpFrom*).; /// It may not call methods from a higher tier.; ///; /// Note that since WalkUpFromFoo() calls WalkUpFromBar() (where Bar; /// is Foo's super class) before calling VisitFoo(), the result is; /// that the Visit*() methods for a given node are called in the; /// top-down order (e.g. for a node of type NamespaceDecl, the order will; /// be VisitDecl(), VisitNamedDecl(), and then VisitNamespaceDecl()).; ///; /// This scheme guarantees that all Visit*() calls for the same AST; /// node are grouped together. In other words, Visit*() methods for; /// different nodes are never interleaved.; ///; /// Clients of this visitor should subclass the visitor (providing; /// themselves as the template argument, using the curiously recurring; /// template pattern) and override any of the Traverse*, WalkUpFrom*,; /// and Visit* methods for declarations, types, statements,; /// expressions, or other AST nodes where the visitor should customize; /// behavior. Most users only need to override Visit*. Advanced; /// users may override Traverse* and WalkUpFrom* to implement custom; /// traversal strategies. Returning false from one of these overridden; /// functions wil",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:1837,down,down,1837,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['down'],['down']
Availability,"r-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()).; */; /* *** DECOMPRESSION *** */; /*! FSE_readNCount():; Read compactly saved 'normalizedCounter' from 'rBuffer'.; @return : size read from 'rBuffer',; or an errorCode, which can be tested using FSE_isError().; maxSymbolValuePtr[0] and tableLogPtr[0] will also be updated with their respective values */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:2327,error,error,2327,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,5,"['Error', 'error']","['ErrorCode', 'error', 'errorCode']"
Availability,"r: M.Gheata; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoVolumeEditor; \ingroup Geometry_builder. Editor for geometry volumes and assemblies of volumes. Besides the volume; name and line attributes, a TGeoVolume has the following editable categories; split vertically by a shutter:. - Properties: one can edit the shape and medium components from here. It is; also possible to change the existing ones.; - Daughters: the main category allowing defining, editing, removing or; positioning daughter volumes inside the current edited volume. To add a; daughter, one needs to select first a volume and a matrix. Currently no check; is performed if the daughter volume creates an extrusion (illegal for tracking).; To remove or change the position of an existing daughter, one should simply; select the desired daughter from the combo box with the existing ones, then; simply click the appropriate button.; - Visualization: One can set the visibility of the volume and of its daughters,; set the visibility depth and the view type. Selecting ""All"" will draw the; volume and all visible daughters down to the selected level starting from the; edited volume. Selecting ""Leaves"" will draw just the deepest daughters within; the selected visibility level, without displaying the containers, while ""Only""; will just draw the edited volume.; - Division: The category becomes active only if there are no daughters of the; edited volume added by normal positioning (e.g. from `<Daughters>` category). The; minimum allowed starting value for the selected division axis is automatically; selected, while the slicing step is set to 0 - meaning that only the number; of slices matter.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoVolumeEditor.cxx:1442,down,down,1442,geom/geombuilder/src/TGeoVolumeEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoVolumeEditor.cxx,1,['down'],['down']
Availability,"r; // to document them in the Clang documentation at; // tools/clang/docs/UsersManual.rst.; //; // Text format; // -----------; //; // Sample profiles are written as ASCII text. The file is divided into; // sections, which correspond to each of the functions executed at runtime.; // Each section has the following format; //; // function1:total_samples:total_head_samples; // offset1[.discriminator]: number_of_samples [fn1:num fn2:num ... ]; // offset2[.discriminator]: number_of_samples [fn3:num fn4:num ... ]; // ...; // offsetN[.discriminator]: number_of_samples [fn5:num fn6:num ... ]; // offsetA[.discriminator]: fnA:num_of_total_samples; // offsetA1[.discriminator]: number_of_samples [fn7:num fn8:num ... ]; // ...; // !CFGChecksum: num; // !Attribute: flags; //; // This is a nested tree in which the indentation represents the nesting level; // of the inline stack. There are no blank lines in the file. And the spacing; // within a single line is fixed. Additional spaces will result in an error; // while reading the file.; //; // Any line starting with the '#' character is completely ignored.; //; // Inlined calls are represented with indentation. The Inline stack is a; // stack of source locations in which the top of the stack represents the; // leaf function, and the bottom of the stack represents the actual; // symbol to which the instruction belongs.; //; // Function names must be mangled in order for the profile loader to; // match them in the current translation unit. The two numbers in the; // function header specify how many total samples were accumulated in the; // function (first number), and the total number of samples accumulated; // in the prologue of the function (second number). This head sample; // count provides an indicator of how frequently the function is invoked.; //; // There are three types of lines in the function body.; //; // * Sampled line represents the profile information of a source location.; // * Callsite line represents the profile inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h:1527,error,error,1527,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h,1,['error'],['error']
Availability,"r><td> `SumW2Error(bool flag)` <td> Apply correction to errors and covariance matrix.; * This uses two covariance matrices, one with the weights, the other with squared weights,; * to obtain the correct errors for weighted likelihood fits. If this option is activated, the; * corrected covariance matrix is calculated as \f$ V_\mathrm{corr} = V C^{-1} V \f$, where \f$ V \f$ is the original; * covariance matrix and \f$ C \f$ is the inverse of the covariance matrix calculated using the; * squared weights. This allows to switch between two interpretations of errors:; * <table>; * <tr><th> SumW2Error <th> Interpretation; * <tr><td> true <td> The errors reflect the uncertainty of the Monte Carlo simulation.; * Use this if you want to know how much accuracy you can get from the available Monte Carlo statistics.; *; * **Example**: Simulation with 1000 events, the average weight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complement",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4505,error,errors,4505,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['error'],['errors']
Availability,"rMMapPipe has not properly been closed, the destructor will call; * close. However, the exit code of the child is lost in that case.; *; * Closing the object causes the mmapped memory to be unmapped and the two; * pipes to be closed. We also install an atexit handler in the process of; * creating BidirMMapPipes. This ensures that when the current process; * terminates, a SIGTERM signal is sent to the child processes created for all; * unclosed pipes to avoid leaving zombie processes in the OS's process table.; *; * BidirMMapPipe creation, closing and destruction are thread safe. If the; * BidirMMapPipe is used in more than one thread, the other operations have to; * be protected with a mutex (or something similar), though.; *; * End of file (other end closed its pipe, or died) is indicated with the eof(); * method, serious I/O errors set a flags (bad(), fail()), and also throw; * exceptions. For normal read/write operations, they can be suppressed (i.e.; * error reporting only using flags) with a constructor argument.; *; * Technicalities:; * - there is a pool of mmapped pages, half the pages are allocated to the; * parent process, half to the child; * - when one side has accumulated enough data (or a flush forces dirty pages; * out to the other end), it sends these pages to the other end by writing a; * byte containing the page number into the pipe; * - the other end (which has the pages mmapped, too) reads the page number(s); * and puts the corresponding pages on its busy list; * - as the other ends reads, it frees busy pages, and eventually tries to put; * them on the its list; if a page belongs to the other end of the; * connection, it is sent back; * - lists of pages are sent across the pipe, not individual pages, in order; * to minimise the number of read/write operations needed; * - when mmap works properly, only one bytes containing the page number of; * the page list head is sent back and forth; the contents of that page; * allow to access the rest of the p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:3344,error,error,3344,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['error'],['error']
Availability,"raint term, where the normalization set is the set of *global; observables* (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the; model/pdf. With this release, a mechanism is added to store a snapshot of; global observables in any RooDataSet or RooDataHist. For toy studies where the; global observables assume a different values for each toy, the bookkeeping of; the set of global observables and in particular their values is much easier; with this change. Usage example for a model with global observables `g1` and `g2`:; ```; using namespace RooFit;. std::unique_ptr<RooAbsData> data{model.generate(x, 1000)}; // data has only the single observables x; data->setGlobalObservables(g1, g2); // now, data also stores a snapshot of g1 and g2. // If you fit the model to the data, the global observables and their values; // are taken from the dataset:; model.fitTo(*data);. // You can still define the set of global observables yourself, but the values; // will be takes from the dataset if available:; model.fitTo(*data, GlobalObservables(g1, g2));. // To force `fitTo` to take the global observable values from the model even; // though they are in the dataset, you can use the new `GlobalObservablesSource`; // command argument:; model.fitTo(*data, GlobalObservables(g1, g2), GlobalObservablesSource(""model""));; // The only other allowed value for `GlobalObservablesSource` is ""data"", which; // corresponds to the new default behavior explained above.; ```. In case you create a RooFit dataset directly by calling its constructor, you; can also pass the global observables in a command argument instead of calling; RooAbsData::setGlobalObservables() later:; ```; RooDataSet data{""dataset"", ""dataset"", x, RooFit::GlobalObservables(g1, g2)};; ```. To access the set of global observables stored in a RooAbsData, call; RooAbsData::getGlobalObservables(). It returns a `nullptr` if no global; observable snapshots are stored in the dataset.; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:2660,avail,available,2660,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['avail'],['available']
Availability,"ral sections:; *; * 1. [omitted]; * 2. Any configuration options that can be specified by for the application; * code when it is built. (Build time configuration is in pnglibconf.h); * 3. Type definitions (base types are defined in pngconf.h), structure; * definitions.; * 4. Exported library functions.; * 5. Simplified API.; * 6. Implementation options.; *; * The library source code has additional files (principally pngpriv.h) that; * allow configuration of the library.; */; /* Section 1: [omitted] */; /* Section 2: run time configuration; * See pnglibconf.h for build time configuration; *; * Run time configuration allows the application to choose between; * implementations of certain arithmetic APIs. The default is set; * at build time and recorded in pnglibconf.h, but it is safe to; * override these (and only these) settings. Note that this won't; * change what the library does, only application code, and the; * settings can (and probably should) be made on a per-file basis; * by setting the #defines before including png.h; *; * Use macros to read integers from PNG data or use the exported; * functions?; * PNG_USE_READ_MACROS: use the macros (see below) Note that; * the macros evaluate their argument multiple times.; * PNG_NO_USE_READ_MACROS: call the relevant library function.; *; * Use the alternative algorithm for compositing alpha samples that; * does not use division?; * PNG_READ_COMPOSITE_NODIV_SUPPORTED: use the 'no division'; * algorithm.; * PNG_NO_READ_COMPOSITE_NODIV: use the 'division' algorithm.; *; * How to handle benign errors if PNG_ALLOW_BENIGN_ERRORS is; * false?; * PNG_ALLOW_BENIGN_ERRORS: map calls to the benign error; * APIs to png_warning.; * Otherwise the calls are mapped to png_error.; */; /* Section 3: type definitions, including structures and compile time; * constants.; * See pngconf.h for base types that vary by machine/system; */; /* This triggers a compiler error in png.c, if png.c and png.h; * do not agree upon the version number.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1594,error,errors,1594,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,3,['error'],"['error', 'errors']"
Availability,"ram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; ///; /// 1, 2 and 3 Dimensional fits are supported.; /// See also TTree::Fit; ///; /// ### Return status; ///; /// The function return the status of the fit in the following form; /// ~~~{.cpp}; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// ~~~; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via; /// ~~~{.cpp}; /// mytree.GetSelectedRows();; /// ~~~; /// - If the number of selected entries is null the function returns -1; ///; /// new implementation using new Fitter classes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2423,error,error,2423,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['error'],['error']
Availability,"ramework in interactive mode in order to; // dereference these objects and access the objects pointed to by; // the reference objects.; //; // Implementations are supplied for ROOT own reference mechanism; // based on instances of the TRef and the TRefArray classes.; //; // To support generality this mechanism was implemented using a; // proxy mechanism, which shields the concrete implementation of the; // reference classes from ROOT. Hence, this mechanism also works for; // references as they are supported by the POOL persistency framework; // and by frameworks like Gaudi.; //; // To enable reference support a concrete sub-class instance of; // the TVirtualRefProxy base class must be attached to the TClass; // instance representing the reference itself. Please see the; // header- and implementation file TRefProxy.h/cxx for details.; // For ROOT's own references this is done simply by a call like:; //; // #include ""TROOT.h""; // #include ""TClass.h""; // #include ""TRefProxy.h""; //; // ...; // gROOT->GetClass(""TRef"")->AdoptReferenceProxy(new TRefProxy());; //; // - GetObject() must return the pointer to the referenced; // object. TTreeFormula then figures out how to access the; // value to be plotted.; // Hence, the actual work is done inside a call to:; //; // void* TRefProxy::GetObject(TFormLeafInfoReference* info, void* data, int); // {; // if ( data ) {; // TRef* ref = (TRef*)((char*)data + info->GetOffset());; // // Dereference TRef and return pointer to object; // void* obj = ref->GetObject();; // if ( obj ) { return obj; }; //; // ... else handle error or implement failover ....; //; //; // The type of the referenced object must either be known at compilation; // time or it must be possible to guess it reading the first TTree entry.; // In this case the following conditions must be met:; // - GetValueClass() must return the TClass to the referenced; // objects (or a base class); //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h:2028,error,error,2028,core/meta/inc/TVirtualRefProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualRefProxy.h,2,"['error', 'failover']","['error', 'failover']"
Availability,"range; * 0..MAXJSAMPLE; the input value may fall somewhat outside this range; * due to noise introduced by quantization, roundoff error, etc. These; * processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler range limiting table. The post-IDCT table begins at; * sample_range_lim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:1104,MASK,MASK,1104,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,2,['MASK'],['MASK']
Availability,"raphAsymmErrors.; /// See the note below on how the errors are used when fitting a TGraphErrors or TGraphAsymmErrors.; ///; /// The fitting of the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is then computed as the sum of the quantity below at each data point:; ///; /// \f[; /// \frac{(y-f(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f'(x))^{2}}; /// \f]; ///; /// where `x` and `y` are the point coordinates, and `f'(x)` is the derivative of the; /// function `f(x)`.; ///; /// In case of asymmetric errors, if the function lies below (above) the data point, `ey` is `ey_low` (`ey_high`).; ///; /// The approach used to approximate the uncertainty in y because of the; /// errors in x is to make it equal the error in x times the slope of the line.; /// This approach is called ""effective variance method"" and; /// the implementation is provided in the function FitUtil::EvaluateChi2Effective; ///; /// \anchor GFitLinear; /// ### Linear fitting:; /// When the fitting function is linear (contains the `++` sign) or the fitting; /// function is a polynomial, a linear fitter is initialised.; /// To create a linear function, use the following syntax: linear parts; /// separated by `++` sign.; /// Example: to fit the parameters of the function `p0*x + p1*sin(x)`, you can create a; /// TF1 object as; ///; /// TF1 *f1 = new TF1(""f1"", ""x++sin(x)"", xmin, xmax);; ///; /// For such a TF1 you don't have to set the initial conditions and the linear fitter is used.; /// Going via the linear fitter for functions, linear in paramete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:3987,error,errors,3987,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['errors']
Availability,"ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output space has been; provided before the call.) Flushing may degrade compression for some; compression algorithms and so it should be used only when necessary. This; completes the current deflate block and follows it with an empty stored block; that is three bits plus filler bits to the next byte, followed by four bytes; (00 00 ff ff). If flush is set to Z_PARTIAL_FLUSH, all pending output is flushed to the; output buffer, but the output is not aligned to a byte boundary. All of the; input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.; This completes the current deflate block and follows it with an empty fixed; codes block that is 10 bits long. This assures that enough bytes are output; in order for the decompressor to finish the block before the empty fixed code; block. If flush is set to Z_BLOC",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1916,avail,available,1916,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['avail'],['available']
Availability,"ratio, so this parameter; should be set only when necessary (in interactive applications).; Some output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming; more output, and updating avail_in or avail_out accordingly; avail_out; should never be zero before the call. The application can consume the; compressed output when it wants, for example when the output buffer is full; (avail_out == 0), or after each call of deflate(). If deflate returns Z_OK; and with zero avail_out, it must be called again after making room in the; output buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumualte before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In particular; avail_in is zero after the call if enough output space has been provided; before the call.) Flushing may degrade compression for some compression; algorithms and so it should be used only when necessary. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1916,avail,available,1916,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['avail'],['available']
Availability,"ration are used to implement lazy evaluation of; /// && and ||. When the left hand of the expression if false; /// (respectively true), the evaluation of the right is entirely skipped; /// (since it would not change the value of the expression).; ///; /// && 142 11 (one operation on right) 142 21 (2 operations on right); /// || 142 12 (one operation on right) 142 22 (2 operations on right); ///; /// * functions calls (kFunctionCall) :; ///; /// f0 145 0 f1 145 1 etc..; ///; /// ### Errors :; ///; /// 1 : Division By Zero; /// 2 : Invalid Floating Point Operation; /// 4 : Empty String; /// 5 : invalid syntax; /// 6 : Too many operators; /// 7 : Too many parameters; /// 10 : z specified but not x and y; /// 11 : z and y specified but not x; /// 12 : y specified but not x; /// 13 : z and x specified but not y; /// 20 : non integer value for parameter number; /// 21 : atan2 requires two arguments; /// 22 : pow requires two arguments; /// 23 : degree of polynomial not specified; /// 24 : Degree of polynomial must be positive; /// 25 : Degree of polynomial must be less than 20; /// 26 : Unknown name; /// 27 : Too many constants in expression; /// 28 : strstr requires two arguments; /// 29 : interpreted or compiled function have to return a numerical type; /// 30 : Bad numerical expression; /// 31 : Part of the variable exist but some of it is not accessible or useable; /// 40 : '(' is expected; /// 41 : ')' is expected; /// 42 : '[' is expected; /// 43 : ']' is expected; ///; /// \image html TFormula_analyze.png; ///; /// ### Special functions; ///; /// By default, the formula is assigned fNumber=0. However, the following; /// formula built with simple functions are assigned fNumber:; ///; /// ""gaus"" 100 (or gausn); /// ""xygaus"" 110; /// ""expo"" 200; /// ""polN"" 300+N; /// ""landau"" 400; /// ""xylandau"" 410; ///; /// Note that expressions like gaus(0), expo(1) will force fNumber=0; ///; /// ### Warning when deriving a class from TFormula; ///; /// If you overload this member ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:3428,Error,Errors,3428,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['Error'],['Errors']
Availability,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1300,ERROR,ERROR,1300,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,2,"['ERROR', 'alive']","['ERROR', 'alive']"
Availability,"re appears to be a need for some; * in-memory compression.; *; * On the other side there is an image quality issue. Its easy to write; * a scaling function by simply dropping out or duplicating pixels,; * but quality is awfull. What is needed is very fast; * averaging/interpolation code. That brings us to the issue of 8 bits; * per channel. Add two pixels together and you get overflow. So all the; * math has to be performed in different colorspace and then converted; * back. On the other side, such a conversion may discard valuable bits,; * so some compensation method has to be implemented.; *; * On the text drawing side of things, there are numerous problems just; * as well. Native X fonts look ugly as soon as you try to show any; * decently sized text. That is supposed to be solved with said Render; * extensions to XFree86, but as experiense has shown, things aren't as; * easy as it looks, besides one wants one's app to run well under any X; * Server. FreeType library provides a solution, but not always; * available. Another problem is that if you keep all your images on the; * client side, you want to draw text on client side as well.; *; * The solution is to provide transparent interface that could use both; * X fonts and FreeType, cache glyphs on the client side and possibly; * perform smoothing of ugly X fonts.; *; * There is no library solving all this problems in one fell swoop,; * except for monstrous ones, like ImLib.; *; * Hence libAfterImage has come to life.; *; * DESCRIPTION; * libAfterStep provides sevarl facilities.; *; * 1. X Visual abstruction layer via ASVisual. This layer handles color; * management, transfer of data to and from X Server, and other screen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:2703,avail,available,2703,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['avail'],['available']
Availability,"re given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8707,error,error,8707,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['error'],['error']
Availability,"re the `->` represents dependency in; // therms of the import.; // ```; // A->B->C->D; // `->E; // ```; // We would like to import A.; // The import behaves like a DFS, so we will visit the nodes in this order:; // ABCDE.; // During the visitation we will have the following ImportPaths:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE; // AB; // A; // ```; // If during the visit of E there is an error then we set an error for E,; // then as the call stack shrinks for B, then for A:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // However, during the import we could import C and D without any error and; // they are independent from A,B and E.; // We must not set up an error for C and D.; // So, at the end of the import we have an entry in `ImportDeclErrors` for; // A,B,E but not for C,D.; //; // Now what happens if there is a cycle in the import path?; // Let's consider this AST:; // ```; // A->B->C->A; // `->E; // ```; // During the visitation we will have the below ImportPaths and if during; // the visit of E there is an error then we will set up an error for E,B,A.; // But what's up with C?; // ```; // A; // AB; // ABC; // ABCA; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // This time we know that both B and C are dependent on A.; // This means we must set up an error for C too.; // As the call stack reverses back we get to A and we must set up an error; // to all nodes which depend on A (this includes C).; // But C is no longer on the import path, it just had been previously.; // Such situation can happen only if during the visitation we had a cycle.; // If we didn't have any cycle, then the normal way of passing an Error; // object through the call stack could handle the situation.; // This is why we must track cycles during the import process for each; // visited declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:1448,error,error,1448,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,9,"['Error', 'error']","['Error', 'error']"
Availability,"rea from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; |",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6033,error,errors,6033,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,3,['error'],['errors']
Availability,"rected as in the case when the; /// option ""W"" is used.; ///; /// #### User defined objective functions; ///; /// By default when fitting a chi square function is used for fitting. When option ""L"" is used; /// a Poisson likelihood function is used. Using option ""MULTI"" a multinomial likelihood fit is used.; /// Thes functions are defined in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; /// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:17944,error,error,17944,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"rectly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Ma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:19357,avail,available,19357,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,"refit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the inte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6657,error,error,6657,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['error'],['error']
Availability,"rent axis ranges.; If the automatic binning option has been set via; ~~~ {.cpp}; h->SetCanExtend(TH1::kAllAxes);; ~~~; then, the Fill Function will automatically extend the axis range to; accomodate the new value specified in the Fill argument. The method; used is to double the bin size until the new value fits in the range,; merging bins two by two. This automatic binning options is extensively; used by the TTree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of weights per bin.; If Sumw2 has been called, the error per bin is computed as the; sqrt(sum of squares of weights), otherwise the error is set equal; to the sqrt(bin content).; To return the error for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBinError(bin);; ~~~. \anchor associated-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:13659,error,errors,13659,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['error'],['errors']
Availability,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3589,error,error,3589,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"ring, e.g.; ~~~ {.cpp}; hist1->Fill(somename, weight);; hist2->Fill(x, somename, weight);; hist2->Fill(somename, y, weight);; hist2->Fill(somenamex, somenamey, weight);; ~~~; See examples hlabels1.C and hlabels2.C; - via TTree::Draw. see for example cernstaff.C; ~~~ {.cpp}; tree.Draw(""Nation::Division"");; ~~~; where ""Nation"" and ""Division"" are two branches of a Tree. When using the options 2 or 3 above, the labels are automatically; added to the list (THashList) of labels for a given axis.; By default, an axis is drawn with the order of bins corresponding; to the filling sequence. It is possible to reorder the axis. - alphabetically; - by increasing or decreasing values. The reordering can be triggered via the TAxis context menu by selecting; the menu item ""LabelsOption"" or by calling directly; TH1::LabelsOption(option, axis) where. - axis may be ""X"", ""Y"" or ""Z""; - option may be:; - ""a"" sort by alphabetic order; - "">"" sort by decreasing values; - ""<"" sort by increasing values; - ""h"" draw labels horizontal; - ""v"" draw labels vertical; - ""u"" draw labels up (end of label right adjusted); - ""d"" draw labels down (start of label left adjusted). When using the option 2 above, new labels are added by doubling the current; number of bins in case one label does not exist yet.; When the Filling is terminated, it is possible to trim the number; of bins to match the number of active labels by calling; ~~~ {.cpp}; TH1::LabelsDeflate(axis) with axis = ""X"", ""Y"" or ""Z""; ~~~; This operation is automatic when using TTree::Draw.; Once bin labels have been created, they become persistent if the histogram; is written to a file or when generating the C++ code via SavePrimitive. \anchor auto-bin; ### Histograms with automatic bins. When a histogram is created with an axis lower limit greater or equal; to its upper limit, the SetBuffer is automatically called with an; argument fBufferSize equal to fgBufferSize (default value=1000).; fgBufferSize may be reset via the static function TH1::Set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:10427,down,down,10427,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['down'],['down']
Availability,"risation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods provided by the base class TUnfold.; */; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:5398,error,errors,5398,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,5,['error'],"['error', 'errors']"
Availability,"rmation.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note that this is work in progress and the interface is subject to; // change.; //; //===----------------------------------------------------------------------===//; // //; // In memory of Ken Kennedy, 1945 - 2007 //; // //; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1219,recover,recover,1219,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['recover'],['recover']
Availability,"rmats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * src - ASImage to adjust colors of.; * offset_x,; * offset_y - position on infinite surface tiled with original image,; * of the left-top corner of the area to be used for new; * image.; * to_width,; * to_height - size of the area of the original image to be used; * for new image.; * affected_hue - hue in degrees in range 0-360. This allows to limit; * impact of color adjustment to affect only limited; * range of hues.; * affected_radius Sets the diapason of the range of affected hues.; * hue_offset - value by which to change hues in affected range.; * saturation_offset -; * value by which to change saturation of the pixels in; * affected hue range.; * value_offset - value by which to change Value(brightness) of pixels; * in affected hue range.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * This function will tile original image to specified size with offsets; * requested, and then it will go though it and adjust hue, saturation and; * value of those pixels that have specific hue, set by affected_hue/; * affected_radius parameters. When affected_radius is greater then 180; * entire image will be adjusted. Note that since grayscale colors have; * no hue - the will not get adjusted. Only saturation and value will be; * adjusted in gray pixels.; * Hue is measured as an angle on a 360 degree circle, The following is; * relationship of hue values to regular color names :; * red - 0; * yellow - 60; * green - 120; * cyan - 180; * blue - 240; * magenta - 300; * red - 360; *; * All the hue values in parameters will be adjusted to fall withing; * 0-360 range.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:13170,failure,failure,13170,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"rompt; command line. #### Compiling Macros. The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4434,Down,Down,4434,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,2,"['Down', 'down']","['Down', 'down']"
Availability,"root/ged:$Id$; // Author: Denis Favre-Miville 08/09/05; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStyleManager; \ingroup ged. This class provides a Graphical User Interface to manage styles; in ROOT. It allows the user to edit styles, import / export; them to macros, apply a style on the selected object or on; all canvases, change gStyle. Activate the style manager by selecting Edit menu / Style...; in the canvas window. The Style Manager interface is composed of two parts:; - the top level interface that manages a list of styles;; - the style editor, which deals with the current style settings. The combo box 'Available Styles' contains the list of available; styles for the current ROOT session and shows the currently; selected one. The field on the right shows the setting of the gStyle.; You can set the global variable gStyle to the selected style by; clicking on the button in the middle.; The group frame 'Apply on' displays information for the currently; selected canvas and object in the ROOT session. This selection might; be changed by clicking on another object with the middle mouse; button. You have a choice to apply a style on the selected object or; on all available canvases.; WARNING: You cannot undo the changes after applying the style! If; you are not sure of that action, it may be better to see a preview; of what you are going to apply.; If the check button 'Preview' is selected, a preview of the selected; canvas according to the selected style will be shown. The selection; of the next check button 'Run Time Preview' will apply updates of; the preview any time a value of the selected style is changed. For; drawings that take a time i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:953,Avail,Available,953,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,2,"['Avail', 'avail']","['Available', 'available']"
Availability,"roth lane.; /// Partial Warp Reduce (argument value 2):; /// This algorithm gathers data from any number of lanes at any position.; /// All reduced values are stored in the lowest possible lane. The set; /// of problems every algorithm addresses is a super set of those; /// addressable by algorithms with a lower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1707,Alive,Alive,1707,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Alive'],['Alive']
Availability,"round of the histograms is erased before drawing the; histograms. The option ""noclear"" avoids this behavior. This is useful when drawing a; THStack on top of another plot. If the patterns used to draw the histograms in the; stack are transparent, then the plot behind will be visible. See the THistPainter class for the list of valid histograms' painting options. Example;. Begin_Macro(source); {; auto hs = new THStack(""hs"","""");; auto h1 = new TH1F(""h1"",""test hstack"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);; auto h2 = new TH1F(""h2"",""test hstack"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);; auto h3 = new TH1F(""h3"",""test hstack"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);; auto cs = new TCanvas(""cs"",""cs"",10,10,700,900);; TText T; T.SetTextFont(42); T.SetTextAlign(21);; cs->Divide(2,2);; cs->cd(1); hs->Draw(); T.DrawTextNDC(.5,.95,""Default drawing option"");; cs->cd(2); hs->Draw(""nostack""); T.DrawTextNDC(.5,.95,""Option \""nostack\"""");; cs->cd(3); hs->Draw(""nostackb""); T.DrawTextNDC(.5,.95,""Option \""nostackb\"""");; cs->cd(4); hs->Draw(""lego1""); T.DrawTextNDC(.5,.95,""Option \""lego1\"""");; }; End_Macro. A more complex example:. Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. Note that picking is supported for all drawing modes. \since **ROOT version 6.07/07:**; Stacks of 2D histograms can also be painted as candle plots:; \since **ROOT version 6.09/02:**; Stacks of 2D histograms can also be painted as violin plots, combinations of candle and; violin plots are possible as well:. Begin_Macro(source); ../../../tutorials/hist/candleplotstack.C; End_Macro. Automatic coloring according to the current palette is available as shown in the; following example:. Begin_Macro(source); ../../../tutorials/hist/thstackpalettecolor.C; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// constructor with name and title",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx:3134,avail,available,3134,hist/hist/src/THStack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx,1,['avail'],['available']
Availability,"rresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H Delete character before cursor, or text selection.//; // Ctrl+K Delete characters from current position to the //; // end of line. //; // Ctrl+U Delete current line. //; // //; //Begin_Html; /*; <img src=""gif/TGRootIDE.gif"">; */; //End_Html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:5149,down,down,5149,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,2,['down'],['down']
Availability,"rror estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-defin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9151,error,error,9151,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['error'],['error']
Availability,"rror rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the following example:. Begin_Macro(source); {; auto c2e = new TCanvas(""c2e"",""c2e"",600,400);; auto h2e = new TH2F(""h2e"",""TH2 drawn with option E"",40,-4,4,40,-20,20);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2e->Fill(px,5*py);; }; h2e->Draw(""E"");; }; End_Macro. \anchor HP100; ##",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:27010,error,error,27010,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"rt and; targetEnd. Note: the end pointers are *after* the last item: e.g.; *(sourceEnd - 1) is the last item. The return result indicates whether the conversion was successful,; and if not, whether the problem was in the source or target buffers.; (Only the first encountered problem is indicated.). After the conversion, *sourceStart and *targetStart are both; updated to point to the end of last text successfully converted in; the respective buffers. Input parameters:; sourceStart - pointer to a pointer to the source buffer.; The contents of this are modified on return so that; it points at the next thing to be converted.; targetStart - similarly, pointer to pointer to the target buffer.; sourceEnd, targetEnd - respectively pointers to the ends of the; two buffers, for overflow checking only. These conversion functions take a ConversionFlags argument. When this; flag is set to strict, both irregular sequences and isolated surrogates; will cause an error. When the flag is set to lenient, both irregular; sequences and isolated surrogates are converted. Whether the flag is strict or lenient, all illegal sequences will cause; an error return. This includes sequences such as: <F4 90 80 80>, <C0 80>,; or <A0> in UTF-8, and values above 0x10FFFF in UTF-32. Conformant code; must check for illegal sequences. When the flag is set to lenient, characters over 0x10FFFF are converted; to the replacement character; otherwise (when the flag is set to strict); they constitute an error. Output parameters:; The value ""sourceIllegal"" is returned from some routines if the input; sequence is malformed. When ""sourceIllegal"" is returned, the source; value will point to the illegal value that caused the problem. E.g.,; in UTF-8 when a sequence is malformed, it points to the start of the; malformed sequence. Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Fixes & updates, Sept 2001. ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:4051,error,error,4051,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,2,['error'],['error']
Availability,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2065,Error,Error,2065,bindings/r/inc/TRFunctionImport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h,3,"['Error', 'error', 'toler']","['Error', 'error', 'tolerance']"
Availability,"rt of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Identification:; // This step is responsible for finding the patterns that can be lowered to; // complex instructions, and building a graph to represent the complex; // structures. Starting from the ""Converging Shuffle"" (a shuffle that; // reinterleaves the complex components, with a mask of <0, 2, 1, 3>), the; // operands are evaluated and identified as ""Composite Nodes"" (collections of; // instructions that can potentially be lowered to a single complex; // instruction). This is performed by checking the real and imaginary components; // and tracking the data flow for each component while following the operand; // pairs. Validity of each node is expected to be done upon creation, and any; // validation errors should halt traversal and prevent further graph; // construction.; // Instead of relying on Shuffle operations, vector interleaving and; // deinterleaving can be represented by vector.interleave2 and; // vector.deinterleave2 intrinsics. Scalable vectors can be represented only by; // these intrinsics, whereas, fixed-width vectors are recognized for both; // shufflevector instruction and intrinsics.; //; // Replacement:; // This step traverses the graph built up by identification, delegating to the; // target to validate and generate the correct intrinsics, and plumbs them; // together connecting each end of the new intrinsics graph to the existing; // use-def chain. This step is assumed to finish successfully, as all; // information is expected to be correct by this point.; //; //; // Internal data structure:; // ComplexDeinterleavingGraph:; // Keeps references to all the valid CompositeNodes formed as part of the; // transformation, and every Instruction contained within ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp:1097,error,errors,1097,interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ComplexDeinterleavingPass.cpp,1,['error'],['errors']
Availability,"rted in ascending address; /// order.; ///; /// NORMAL OPCODES; ///; /// The opcodes 0 through 3 are normal in opcodes. Their encoding and; /// descriptions are listed below:; ///; /// ENCODING ENUMERATION VALUE DESCRIPTION; /// ======== ================ ===== ========================================; /// LTOC_EndSequence 0x00 Parsing is done.; /// ULEB LTOC_SetFile 0x01 Row.File = ULEB; /// ULEB LTOC_AdvancePC 0x02 Row.Addr += ULEB, push ""Row"".; /// SLEB LTOC_AdvanceLine 0x03 Row.Line += SLEB; /// LTOC_FirstSpecial 0x04 First special opcode (see SPECIAL; /// OPCODES below).; ///; /// SPECIAL OPCODES; ///; /// Opcodes LTOC_FirstSpecial through 255 are special opcodes that always; /// increment both the Row.Addr and Row.Line and push ""Row"" onto the; /// LineEntry.Lines array. They do this by using some of the bits to; /// increment/decrement the source line number, and some of the bits to; /// increment the address. Line numbers can go up or down when making line; /// tables, where addresses always only increase since line tables are sorted; /// by address.; ///; /// In order to calculate the amount to increment the line and address for; /// these special opcodes, we calculate the number of values reserved for the; /// line increment/decrement using the ""MinDelta"" and ""MaxDelta"" from the; /// prolog:; ///; /// const int64_t LineRange = MaxDelta - MinDelta + 1;; ///; /// Then we can adjust the opcode to not include any of the normal opcodes:; ///; /// const uint8_t AdjustedOp = Opcode - LTOC_FirstSpecial;; ///; /// And we can calculate the line offset, and address offset:; ///; /// const int64_t LineDelta = MinDelta + (AdjustedOp % LineRange);; /// const uint64_t AddrDelta = (AdjustedOp / LineRange);; ///; /// And use these to modify our ""Row"":; ///; /// Row.Line += LineDelta;; /// Row.Addr += AddrDelta;; ///; /// And push a row onto the line table:; ///; /// Lines.push_back(Row);; ///; /// This is verify similar to the way that DWARF encodes its line tables. The; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/LineTable.h:2429,down,down,2429,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/LineTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/LineTable.h,1,['down'],['down']
Availability,"s a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; tables, and removed assumption that EOB is; the longest code (bad assumption).; c12 3 Jan 93 M. Adler make tables for fixed blocks only once.; c13 5 Jan 93 M. Adler allow all zero length codes (pkzip 2.04c; outputs one zero length code for an empty; distance tree).; c14 12 Mar 93 M. Adler made inflate.c standalone with the; introduction of inflate.h.; c14b 16 Jul 93 G. Roelofs added (unsigned) typecast to w at 470.; c14c 19 Jul 93 J. Bush changed v[N_MAX], l[288], ll[28x+3x] arrays; to static for Amiga.; c14d 13 Aug 93 J-l. Gailly de-complicatified Mark's c[*p++]++ thing.; c14e 8 Oct 93 G. Roelofs changed memset() to memzero().; c14f 22 Oct 93 G. Roelofs renamed quietflg to qflag; made Trace(); conditional; added inflate_free().; c14g 28 Oct 93 G. Roelofs changed l/(lx+1) macro to pointer (Cray bug); c14h 7 Dec 93 C. Ghisler huft_build() optimizations.; c14i 9 Jan 94 A. Verheijen set fixed_t{d,l} to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:2184,error,error,2184,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['error'],['error']
Availability,"s a minimum amount of data remaining to be flushed from internal buffers; * or an error code, which can be tested using ZSTD_isError().; *; * At any moment, it's possible to flush whatever data might remain stuck within internal buffer,; * using ZSTD_compressStream2() with ZSTD_e_flush. `output->pos` will be updated.; * Note that, if `output->size` is too small, a single invocation with ZSTD_e_flush might not be enough (return code > 0).; * In which case, make some room to receive more compressed data, and call again ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_flush until it returns 0, at which point you can change the; * operation.; * note: ZSTD_e_flush will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if internal buffers are entirely flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * Calling ZSTD_compressStream2() with ZSTD_e_end instructs to finish a frame.; * It will perform a flush and write frame epilogue.; * The epilogue is required for decoders to consider a frame completed.; * flush operation is the same, and follows same rules as calling ZSTD_compressStream2() with ZSTD_e_flush.; * You must continue calling ZSTD_compressStream2() with ZSTD_e_end until it returns 0, at which point you are free to; * start a new frame.; * note: ZSTD_e_end will flush as much output as possible, meaning when compressing with multiple threads, it will; * block until the flush is complete or the output buffer is full.; * @return : 0 if frame fully completed and fully flushed,; * >0 if some data still present within internal buffer (the value is minimal estimation of remaining size),; * or an error code, which can be tested using ZSTD_isError().; *; * **********",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:3061,error,error,3061,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"s in a loop.; /// json::ary(Collection) converts all items in a collection to Values.; ///; /// === Inspecting values ===; ///; /// Each Value is one of the JSON kinds:; /// null (nullptr_t); /// boolean (bool); /// number (double, int64 or uint64); /// string (StringRef); /// array (json::Array); /// object (json::Object); ///; /// The kind can be queried directly, or implicitly via the typed accessors:; /// if (std::optional<StringRef> S = E.getAsString(); /// assert(E.kind() == Value::String);; ///; /// Array and Object also have typed indexing accessors for easy traversal:; /// Expected<Value> E = parse(R""( {""options"": {""font"": ""sans-serif""}} )"");; /// if (Object* O = E->getAsObject()); /// if (Object* Opts = O->getObject(""options"")); /// if (std::optional<StringRef> Font = Opts->getString(""font"")); /// assert(Opts->at(""font"").kind() == Value::String);; ///; /// === Converting JSON values to C++ types ===; ///; /// The convention is to have a deserializer function findable via ADL:; /// fromJSON(const json::Value&, T&, Path) -> bool; ///; /// The return value indicates overall success, and Path is used for precise; /// error reporting. (The Path::Root passed in at the top level fromJSON call; /// captures any nested error and can render it in context).; /// If conversion fails, fromJSON calls Path::report() and immediately returns.; /// This ensures that the first fatal error survives.; ///; /// Deserializers are provided for:; /// - bool; /// - int and int64_t; /// - double; /// - std::string; /// - vector<T>, where T is deserializable; /// - map<string, T>, where T is deserializable; /// - std::optional<T>, where T is deserializable; /// ObjectMapper can help writing fromJSON() functions for object types.; ///; /// For conversion in the other direction, the serializer function is:; /// toJSON(const T&) -> json::Value; /// If this exists, then it also allows constructing Value from T, and can; /// be used to serialize vector<T>, map<string, T>, and std::optiona",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:1856,error,error,1856,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['error'],['error']
Availability,"s it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Begin_Macro(source); {; auto c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a smooth band"");; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; }; End_Macro. The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Begin_Macro(source); {; auto c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; auto graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; auto graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. auto graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; }; End_Macro. \anchor GrP3b; #### TGraphAsymmErrors; A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; defined along X and Y are not symmetric: The left and right errors are; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:10187,error,errors,10187,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"s mark channels that has to be; * 			decoded.; * offset_x - left margin inside im, from which we should start; * 			reading pixel data, effectively clipping source image.; * offset_y - top margin inside im, from which we should start; * 			reading scanlines, effectively clipping source image.; * 			Note that when edge of the image is reached,; * 			subsequent requests for scanlines will wrap around to; * 			the top of the image, and not offset_y.; * out_width- width of the scanline needed. If it is larger then; * 			source image - then image data will be tiled in it.; * 			If it is smaller - then image data will be clipped.; * out_height - height of the output drawable. -1 means that same as; * image height. if out_height is greater then image height,; * then image will be tiled.; * bevel - NULL or pointer to valid ASImageBevel structure if; * 			decoded data should be overlayed with bevel at the; * 			time of decoding.; * RETURN VALUE; * start_image_decoding() returns pointer to newly allocated; * ASImageDecoder structure on success, NULL on failure.; * DESCRIPTION; * Normal process of reading image data from ASImage consists of; * 3 steps :; * 1) start decoding by calling start_image_decoding.; * 2) call decode_image_scanline() method of returned structure, for; * each scanline upto desired height of the target image. Decoded data; * will be returned in buffer member of the ASImageDecoder structure.; * 3) finish decoding and deallocated all the used memory by calling; * stop_image_decoding(); *********/; /****f* libAfterImage/asimage/set_decoder_bevel_geom(); * NAME; * set_decoder_bevel_geom() - changes default placement of the bevel on ; * decoded image. ; * SYNOPSIS; * void set_decoder_bevel_geom( ASImageDecoder *imdec, int x, int y,; * unsigned int width, unsigned int height );; * INPUTS; * imdec - pointer to pointer to structure, previously created; * by start_image_decoding.; * x,y - left top position of the inner border of the Bevel outline; * as related to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:1608,failure,failure,1608,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['failure'],['failure']
Availability,"s with; /// the TStyle::SetOptFit(mode) method. This mode has four digits.; /// mode = pcev (default = 0111); ///; /// v = 1; print name/values of parameters; /// e = 1; print errors (if e=1, v must be 1); /// c = 1; print Chisquare/Number of degrees of freedom; /// p = 1; print Probability; ///; /// For example: gStyle->SetOptFit(1011);; /// prints the fit probability, parameter names/values, and errors.; /// You can change the position of the statistics box with these lines; /// (where g is a pointer to the TGraph):; ///; /// TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats"");; /// st->SetX1NDC(newx1); //new x start position; /// st->SetX2NDC(newx2); //new x end position; ///; /// \anchor HFitExtra; /// ### Additional Notes on Fitting; ///; /// #### Fitting a histogram of dimension N with a function of dimension N-1; ///; /// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; /// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; /// For correct error scaling, the obtained parameter error are corrected as in the case when the; /// option ""W"" is used.; ///; /// #### User defined objective functions; ///; /// By default when fitting a chi square function is used for fitting. When option ""L"" is used; /// a Poisson likelihood function is used. Using option ""MULTI"" a multinomial likelihood fit is used.; /// Thes functions are defined in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; /// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:16731,error,error,16731,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"s |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetUpperPad` and `TRatioPlot::GetLowerPad` can be used to draw additional; elements on top of the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2581,error,error,2581,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['error'],['error']
Availability,"s.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF option 'M' - after minimum is; found, search for a new one.; ""Add to list"" sets On/Off option '+'- add function to the list; without deleting the previous. Draw options:; ""SAME"" sets On/Off function drawing on the same pad.; ""No drawing"" sets On/Off option '0'- do not draw function graphics.; ""Do not store/draw"" sets On/Off option 'N'- do not store the; function, do not draw it. Sliders settings are used if option 'R' - use range is active.; Users can change min/max values by pressing the left mouse button; near to the left/right slider edges. It is possible o change both; values simultaneously by pressing the left mouse button near to its; center and moving it to a new desire position. ""Minimization"" Tab. ""Library"" group allows you to use Minuit, Minuit2 or Fumili; minimization packages for your fit.; ""Minuit"" - the popular Minuit minimization package.; ""Minuit2"" - a new object-oriented implementation of Minuit in C++.; ""Fumili"" - the popular Fumili minimization package. ""Method"" group has currently restricted functionality.; ""MIGRAD"" method is available for Minuit and Minuit2; ""FUMILI"" method is available for Fumili and Minuit2; ""SIMPLEX"" method is disabled (will come with the new fitter design). ""Minimization Settings' group allows users to set values for:; ""Error definition"" - between 0.0 and 100.0 (default is 1.0).; ""Maximum tolerance"" - the fit relative precision in use.; ""Maximum number of iterations"" - default is 5000. Print options:; ""Default"" - between Verbose and Quiet.; ""Verbose"" - prints results after each iteration.; ""Quiet"" - no fit information is printed. Fit button - performs a fit.; Reset - resets all GUI elements and related fit settings to the; default ones.; Close - closes this window. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:3958,avail,available,3958,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,4,"['Error', 'avail', 'toler']","['Error', 'available', 'tolerance']"
Availability,"s3://host.example.com/bucket/path/to/my/file; /// s3http://host.example.com/bucket/path/to/my/file; /// s3https://host.example.com/bucket/path/to/my/file; /// as3://host.example.com/bucket/path/to/my/file; /// ```; ///; /// For files hosted by Google Storage, use the following forms:; ///; /// ```; /// gs://storage.googleapis.com/bucket/path/to/my/file; /// gshttp://storage.googleapis.com/bucket/path/to/my/file; /// gsthttps://storage.googleapis.com/bucket/path/to/my/file; /// ```; ///; /// The 'as3' scheme is accepted for backwards compatibility but its usage is; /// deprecated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variabl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1205,down,downloading,1205,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['down'],['downloading']
Availability,"s:; ///; /// - nTrees number of trees in the forest to be created; /// - BoostType the boosting type for the trees in the forest (AdaBoost e.t.c..).; /// Known:; /// - AdaBoost; /// - AdaBoostR2 (Adaboost for regression); /// - Bagging; /// - GradBoost; /// - AdaBoostBeta the boosting parameter, beta, for AdaBoost; /// - UseRandomisedTrees choose at each node splitting a random set of variables; /// - UseNvars use UseNvars variables in randomised trees; /// - UsePoisson Nvars use UseNvars not as fixed number but as mean of a poisson distribution; /// - SeparationType the separation criterion applied in the node splitting.; /// Known:; /// - GiniIndex; /// - MisClassificationError; /// - CrossEntropy; /// - SDivSqrtSPlusB; /// - MinNodeSize: minimum percentage of training events in a leaf node (leaf criteria, stop splitting); /// - nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; /// step size is determined by the events); /// - UseFisherCuts: use multivariate splits using the Fisher criterion; /// - UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; /// (from the training) in the leaf node; /// - NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; /// misclassification error rate); /// - PruneMethod The Pruning method.; /// Known:; /// - NoPruning // switch off pruning completely; /// - ExpectedError; /// - CostComplexity; /// - PruneStrength a parameter to adjust the amount of pruning. Should be large enough such that overtraining is avoided.; /// - PruningValFraction number of events to use for optimizing pruning (only if PruneStrength < 0, i.e. automatic pruning); /// - NegWeightTreatment; /// - IgnoreNegWeightsInTraining Ignore negative weight events in the training.; /// - DecreaseBoostWeight Boost ev. with neg. weight with 1/boostweight instead of boostweight; /// - PairNegWeightsGlobal Pair ev. with neg. and pos. weights in trai",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:1505,error,error,1505,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['error'],['error']
Availability,"safe to activate the AutoSave; /// procedure. Some branches may have buffers holding many entries.; /// If fAutoSave is negative, AutoSave is automatically called by; /// TTree::Fill when the number of bytes generated since the previous; /// AutoSave is greater than -fAutoSave bytes.; /// If fAutoSave is positive, AutoSave is automatically called by; /// TTree::Fill every N entries.; /// This function may also be invoked by the user.; /// Each AutoSave generates a new key on the file.; /// Once the key with the tree header has been written, the previous cycle; /// (if any) is deleted.; ///; /// Note that calling TTree::AutoSave too frequently (or similarly calling; /// TTree::SetAutoSave with a small value) is an expensive operation.; /// You should make tests for your own application to find a compromise; /// between speed and the quantity of information you may loose in case of; /// a job crash.; ///; /// In case your program crashes before closing the file holding this tree,; /// the file will be automatically recovered when you will connect the file; /// in UPDATE mode.; /// The Tree will be recovered at the status corresponding to the last AutoSave.; ///; /// if option contains ""SaveSelf"", gDirectory->SaveSelf() is called.; /// This allows another process to analyze the Tree while the Tree is being filled.; ///; /// if option contains ""FlushBaskets"", TTree::FlushBaskets is called and all; /// the current basket are closed-out and written to disk individually.; ///; /// By default the previous header is deleted after having written the new header.; /// if option contains ""Overwrite"", the previous Tree header is deleted; /// before written the new header. This option is slightly faster, but; /// the default option is safer in case of a problem (disk quota exceeded); /// when writing the new header.; ///; /// The function returns the number of bytes written to the file.; /// if the number of bytes is null, an error has occurred while writing; /// the header to the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1206,recover,recovered,1206,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['recover'],['recovered']
Availability,"same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(sou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7599,error,error,7599,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"se of linear fitting, not calculate the chisquare (saves time); /// - ""F"" If fitting a polN, switch to minuit fitter; /// - ""ROB"" In case of linear fitting, compute the LTS regression; /// coefficients (robust(resistant) regression), using; /// the default fraction of good points; /// - ""ROB=0.x"" - compute the LTS regression coefficients, using; /// 0.x as a fraction of good points; ///; /// When the fit is drawn (by default), the parameter goption may be used; /// to specify a list of graphics options. See TGraph::Paint for a complete; /// list of these options.; ///; /// In order to use the Range option, one must first create a function; /// with the expression to be fitted. For example, if your graph; /// has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the interval 1 to 3, you can do:; /// ~~~ {.cpp}; /// TF1 *f1 = new TF1(""f1"",""gaus"",1,3);; /// graph->Fit(""f1"",""R"");; /// ~~~; ///; /// ### Who is calling this function ?; ///; /// Note that this function is called when calling TGraphErrors::Fit; /// or TGraphAsymmErrors::Fit ot TGraphBentErrors::Fit; /// see the discussion below on the errors calculation.; ///; /// ### Setting initial conditions; ///; /// Parameters must be initialized before invoking the Fit function.; /// The setting of the parameter initial values is automatic for the; /// predefined functions : poln, expo, gaus, landau. One can however disable; /// this automatic computation by specifying the option ""B"".; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// f1->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if `parmin>=parmax`, the parameter is fixed; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:2337,error,errors,2337,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['error'],['errors']
Availability,"ser-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribute, mapping each one directly to the clang builtin. And the; // polymorphic ones have __attribute__((overloadable)) as well. So once the; // compiler has resolved the overload, it knows the internal builtin ID of the; // selected function, and can check the immediate arguments against that; and; // if the user gets the types wrong in a call to a polymorphic intrinsic, they; // get a completely clear error message showing all the declarations of that; // function in the header file and explaining why each one doesn't fit their; // call.; //; // The downside of this is that if",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:2169,error,error,2169,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['error'],['error']
Availability,"sin(x[i]+0.2)-6;; }; auto gr = new TGraph(n,x,y);; gr->SetFillColor(38);; gr->SetTitle("" "");; c47->cd(1); gr->Draw(""AB"");; c47->cd(2); gr->Draw(""AB1"");; }; End_Macro. \anchor GrP2; ### Exclusion graphs. When a graph is painted with the option `C` or `L` it is; possible to draw a filled area on one side of the line. This is useful to show; exclusion zones. This drawing mode is activated when the absolute value of the graph line; width (set by `SetLineWidth()`) is greater than 99. In that; case the line width number is interpreted as:. 100*ff+ll = ffll. - The two digits number `ll` represent the normal line width; - The two digits number `ff` represent the filled area width.; - The sign of ""ffll"" allows to flip the filled area from one side of the line to the other. The current fill area attributes are used to draw the hatched zone. Begin_Macro(source); ../../../tutorials/graphs/exclusiongraph.C; End_Macro. \anchor GrP3; ### Graphs with error bars; Three classes are available to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:5280,error,error,5280,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,3,"['avail', 'error']","['available', 'error']"
Availability,"sing RLE compression. At this time smoothing; * filters are applied on glyph pixmaps, if its size exceeds threshold.; * TODO; * implement proper XFontSet support, when used with I18N enabled.; *********/; /****f* libAfterImage/asfont/get_asfont(); * NAME; * get_asfont(); * SYNOPSIS; * ASFont *get_asfont( ASFontManager *fontman,; * const char *font_string,; * int face_no, int size,; * ASFontType type );; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, path to search fonts; * in, and X Server connection.; * font_string - font name or filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * type - specifies the type of the font, or GuessWho for; * autodetection.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * This function provides unified interface to font loading. It performs; * search in ASFontManager's list to see if this specific font has been; * loaded already, and if so - returns pointer to relevant structure.; * Otherwise it tryes to load font as FreeType font first, and then; * Xlib font, unless exact font type is specifyed.; *********/; /****f* libAfterImage/asfont/release_font(); * NAME; * release_font(); * SYNOPSIS; * void release_font( ASFont *font );; * INPUTS; * font - pointer to the valid ASFont structure containing loaded font.; * RETURN VALUE; * returns current reference count. -1 means that object has been; * destroyed.; * DESCRIPTION; * This function will decrement reference count on loaded font and if; * reference count will be less then 0 ( meaning that release_font() has; * been called more times then get_asfont() ) it will close the font,; * remove it from ASFontManager's list, destroy all the glyphs and; * generally free everything els",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:3222,failure,failure,3222,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['failure'],['failure']
Availability,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:6644,error,error,6644,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['error'],['error']
Availability,"sion don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""). # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. If an instance of [distributed.Client](http://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks. The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; backend used:. ~~~{.py}; import ROOT. # Define correct imports and access the distributed RDataFrame ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:40724,avail,available,40724,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"sists of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; <I>least squares</I> fitting procedure applied to a representative; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the param",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:1640,error,errors,1640,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['errors']
Availability,"sition; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean"", ""Std Dev"", ...) can be changed from; `$ROOTSYS/etc/system.rootrc` or `.rootrc` (look for the string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:25507,error,errors,25507,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['errors']
Availability,"small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the average of the s(j) for all bins if; the static function TProfile::Approximate() has been called.; This simple/crude approximation was suggested in order to keep the bin; during a fit operation. But note that this approximation is not the default behaviour.; See also TProfile::BuildOptions for more on error options. ### Creating and drawing a profile histogram; ~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof = new TProfile(""hprof"",""Profile of pz versus px"",100,-4,4,0,20);; Float_t px, py, pz;; for ( Int_t i=0; i<25000; i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hprof->Fill(px,pz,1);; }; hprof->Draw();; }; ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Profile histogra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1768,Error,Error,1768,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['Error'],['Error']
Availability,"sponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4498,Down,Down,4498,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,2,"['Down', 'down']","['Down', 'down']"
Availability,"ss than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions instead of the global ones. |. Per default the Fill and Line Styles of the Graph are being used for all error; dimensions. To use the specific ones add the draw option ""S"" to the first block. Begin_Macro(source); {; auto c47 = new TCanvas(""c47"",""c47"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double aexh[] = {0.3, 0.3, 0.3, 0.3, 0.3};; double* aeylstat = new double[5] {1, 0.5, 1, 0.5, 1};; double* aeyhstat = new double[5] {0.5, 1, 0.5, 1, 0.5};; double* aeylsys = new double[5] {0.5, 0.4, 0.8, 0.3, 1.2};; double* aeyhsys = new double[5] {0.6, 0.7, 0.6, 0.4, 0.8};. TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", 5, ax, ay, aexl, aexh, aeylstat, aeyhstat);; gme->AddYError(5, aeylsys, aeyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);. gme->Draw(""a p s ; ; 5 s=0.5"");; }; End_Macro. \anchor GrP4; ### TGraphPolar options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:14486,error,error,14486,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"ssion - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2ximage( ASVisual *asv, Pixmap p, int x, int y,; * unsigned int width, unsigned int height,; *						 unsigned long plane_mask,; * unsigned int compression);; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing data in XImage format, ; * on success. NULL on failure.; * DESCRIPTION; * pixmap2ximage will obtain XImage of the requested area of the; * X Pixmap, and it will attach it to newly created ASImage using ; * alt.ximage member. After that newly created ASImage could be used ; * in any transformations.; *********/; /****f* libAfterImage/picture2asimage(); * NAME; * picture2asimage(); * SYNOPSIS; * ASImage *picture2asimage (struct ASVisual *asv,; * Pixmap rgb, Pixmap a,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * rgb 		 - source Pixmap for red, green and blue channels; * a 		 - source Pixmap for the alpha channel; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:2984,failure,failure,2984,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['failure'],['failure']
Availability,"stances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; the classical estimates.; Also, robust estimation of location and scatter is a tool to robustify; other multivariate techniques such as, for example, principal-component analysis; and discriminant analysis. Technical details of the algorithm:. 1. The default h = (n+nvariables+1)/2, but the user may choose any integer h with; (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value; (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination; which is usually the case, a good compromise between breakdown value and; efficiency is obtained by putting h=[.75*n].; 2. If h=n,the MCD location estimate is the average of the whole dataset, and; the MCD scatter estimate is its covariance matrix. Report this and stop; 3. If nvariables=1 (univariate data), compute the MCD estimate by the exact; algorithm of Rousseeuw and Leroy (1987, pp.171-172) in O(nlogn)time and stop; 4. From here on, h<n and nvariables>=2.; 1. If n is small:; - repeat (say) 500 times:; - construct an initial h-subset, starting from a random (nvar+1)-subset; - carry out 2 C-steps (described in the co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:2778,robust,robust,2778,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,2,['robust'],"['robust', 'robustify']"
Availability,"start chrome in batch, used for image production, like ""$prog --headless --disable-gpu $geometry $url""; /// WebGui.ChromeHeadless: command to start chrome in headless mode, like ""fork: --headless --disable-gpu $geometry $url""; /// WebGui.ChromeInteractive: command to start chrome in interactive mode, like ""$prog $geometry --app=\'$url\' &""; /// WebGui.Firefox: full path to Mozilla Firefox executable; /// WebGui.FirefoxHeadless: command to start Firefox in headless mode, like ""fork:--headless --private-window --no-remote $profile $url""; /// WebGui.FirefoxInteractive: command to start Firefox in interactive mode, like ""$prog --private-window \'$url\' &""; /// WebGui.FirefoxProfile: name of Firefox profile to use; /// WebGui.FirefoxProfilePath: file path to Firefox profile; /// WebGui.FirefoxRandomProfile: usage of random Firefox profile -1 never, 0 - only for headless mode (dflt), 1 - always; /// WebGui.LaunchTmout: time required to start process in seconds (default 30 s); /// WebGui.OperationTmout: time required to perform WebWindow operation like execute command or update drawings; /// WebGui.RecordData: if specified enables data recording for each web window 0 - off, 1 - on; /// WebGui.JsonComp: compression factor for JSON conversion, if not specified - each widget uses own default values; /// WebGui.ForceHttp: 0 - off (default), 1 - always create real http server to run web window; /// WebGui.Console: -1 - output only console.error(), 0 - add console.warn(), 1 - add console.log() output; /// WebGui.ConnCredits: 10 - number of packets which can be send by server or client without acknowledge from receiving side; /// WebGui.openui5src: alternative location for openui5 like https://openui5.hana.ondemand.com/1.128.0/; /// WebGui.openui5libs: list of pre-loaded ui5 libs like sap.m, sap.ui.layout, sap.ui.unified; /// WebGui.openui5theme: openui5 theme like sap_belize (default) or sap_fiori_3; ///; /// THttpServer-related parameters documented in \ref CreateServer method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:2683,error,error,2683,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['error'],['error']
Availability,"string `Hist.Stats.`). \anchor HP08; ### Fit Statistics. The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26013,Error,Error,26013,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['Error'],['Error']
Availability,"structedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2775,error,errors,2775,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['error'],['errors']
Availability,"sualized by a three-dimensional; histogram or scatter-plot; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If Z is an unknown (but single-valued); approximate function of X,Y this function is displayed by a profile2D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note that this approximation is not the default behaviour. ### Creating and drawing a 2D profile; ~~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof2d = new TProfile2D(""hprof2d"",""Profile of pz versus px and py"",",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:1300,Error,Error,1300,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['Error'],['Error']
Availability,"sulting from the fit.; ///; /// This method should be always used when the bin content represents counts (i.e. errors are sqrt(N) ).; /// The likelihood method has the advantage of treating correctly bins with low statistics. In case of high; /// statistics/bin the distribution of the bin content becomes a normal distribution and the likelihood and the chi2 fit; /// give the same result.; ///; /// The likelihood method, although a bit slower, it is therefore the recommended method,; /// when the histogram represent counts (Poisson statistics), where the chi-square methods may; /// give incorrect results, especially in case of low statistics.; /// In case of a weighted histogram, it is possible to perform also a likelihood fit by using the; /// option ""WL"". Note a weighted histogram is a histogram which has been filled with weights and it; /// has the information on the sum of the weight square for each bin ( TH1::Sumw2() has been called).; /// The bin error for a weighted histogram is the square root of the sum of the weight square.; ///; /// \anchor HFitRes; /// ### Fit Result; ///; /// The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; /// By default the TFitResultPtr contains only the status of the fit which is return by an; /// automatic conversion of the TFitResultPtr to an integer. One can write in this case directly:; ///; /// ~~~ {.cpp}; /// Int_t fitStatus = h->Fit(myFunc);; /// ~~~; ///; /// If the option ""S"" is instead used, TFitResultPtr behaves as a smart; /// pointer to the TFitResult object. This is useful for retrieving the full result information from the fit, such as the covariance matrix,; /// as shown in this example code:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,""S"");; /// TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; /// Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; /// Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:9495,error,error,9495,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"switches, different ranges could be set like this:; * ```; * myVariable.setRange(""range_pi0"", 135, 210);; * myVariable.setRange(""range_gamma"", 50, 210);; * ```; * <tr><td> `Constrain(const RooArgSet&pars)` <td> For p.d.f.s that contain internal parameter constraint terms (that is usually product PDFs, where one; * term of the product depends on parameters but not on the observable(s),), only apply constraints to the given subset of parameters.; * <tr><td> `ExternalConstraints(const RooArgSet& )` <td> Include given external constraints to likelihood by multiplying them with the original likelihood.; * <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of normalization observables to be used for the constraint terms.; * If none are specified the constrained parameters are used.; * <tr><td> `GlobalObservablesSource(const char* sourceName)` <td> Which source to prioritize for global observable values.; * Can be either:; * - `data`: to take the values from the dataset,; * falling back to the pdf value if a given global observable is not available.; * If no `GlobalObservables` or `GlobalObservablesTag` command argument is given, the set; * of global observables will be automatically defined to be the set stored in the data.; * - `model`: to take all values from the pdf and completely ignore the set of global observables stored in the data; * (not even using it to automatically define the set of global observables; * if the `GlobalObservables` or `GlobalObservablesTag` command arguments are not given).; * The default option is `data`.; * <tr><td> `GlobalObservablesTag(const char* tagName)` <td> Define the set of normalization observables to be used for the constraint terms by; * a string attribute associated with pdf observables that match the given tagName.; * <tr><td> `Verbose(bool flag)` <td> Controls RooFit informational messages in likelihood construction; * <tr><td> `CloneData(bool flag)` <td> Use clone of dataset in NLL (default is true).; * \warning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:7113,avail,available,7113,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['avail'],['available']
Availability,"t and are of good quality. Their size varies with large steps; and they cannot be rotated.; Precision 1 and 2 fonts have a different behaviour depending if the; True Type Fonts (TTF) are used or not. If TTF are used, you always get very good; quality scalable and rotatable fonts.; These days TTF fonts are rendered fast enough and can be used in all cases. \anchor ATTTEXT52; ### How to use True Type Fonts. TTF fonts are used by default. They can be deactivated via the following line; in the `.rootrc` file:. ~~~ {.cpp}; Unix.*.Root.UseTTFonts: false; ~~~. \anchor ATTTEXT53; ### List of the currently supported fonts. ~~~ {.cpp}; Font number TTF Names PostScript/PDF Names; 1 : ""Free Serif Italic"" ""Times-Italic""; 2 : ""Free Serif Bold"" ""Times-Bold""; 3 : ""Free Serif Bold Italic"" ""Times-BoldItalic""; 4 : ""Tex Gyre Regular"" ""Helvetica""; 5 : ""Tex Gyre Italic"" ""Helvetica-Oblique""; 6 : ""Tex Gyre Bold"" ""Helvetica-Bold""; 7 : ""Tex Gyre Bold Italic"" ""Helvetica-BoldOblique""; 8 : ""Free Mono"" ""Courier""; 9 : ""Free Mono Oblique"" ""Courier-Oblique""; 10 : ""Free Mono Bold"" ""Courier-Bold""; 11 : ""Free Mono Bold Oblique"" ""Courier-BoldOblique""; 12 : ""Symbol"" ""Symbol""; 13 : ""Free Serif"" ""Times-Roman""; 14 : ""Wingdings"" ""ZapfDingbats""; ~~~. The PostScript and PDF backends use the original PostScript-defined 13 fonts' styles; forming four type families (Courier, Helvetica, Times, Symbol) as listed in the; ""Core Font Set"" section of [this page](https://en.wikipedia.org/wiki/PostScript_fonts).; These fonts are always available and do not need to be loaded in the PS or PDF files; allowing to keep the files' sizes small. On screen, text is rendered using free TTF fonts similar to the PDF ones. The corresponding; font files are coming with the ROOT distribution in `$ROOTSYS/fonts/Free*`. Begin_Macro; fonts.C; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// AttText default constructor.; ///; /// Default text attributes are taken from the current style.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:6686,avail,available,6686,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['avail'],['available']
Availability,"t and closed (for instance the; previous example $ROOTSYS/tutorials/geom/rootgeom.C ), the manager class will register; itself to ROOT and the logical/physical structures will become immediately browsable.; The ROOT browser will display starting from the geometry folder : the list of; transformations and media, the top volume and the top logical node. These last; two can be fully expanded, any intermediate volume/node in the browser being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:8685,down,down,8685,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['down'],['down']
Availability,"t from all of its fields and bases.; // * __declspec(align) on bitfields has the effect of changing the bitfield's; // alignment instead of its required alignment. This is the only known way; // to make the alignment of a struct bigger than 8. Interestingly enough; // this alignment is also immune to the effects of #pragma pack and can be; // used to create structures with large alignment under #pragma pack.; // However, because it does not impact required alignment, such a structure,; // when used as a field or base, will not be aligned if #pragma pack is; // still active at the time of use.; //; // Known incompatibilities:; // * all: #pragma pack between fields in a record; // * 2010 and back: If the last field in a record is a bitfield, every object; // laid out after the record will have extra padding inserted before it. The; // extra padding will have size equal to the size of the storage class of the; // bitfield. 0 sized bitfields don't exhibit this behavior and the extra; // padding can be avoided by adding a 0 sized bitfield after the non-zero-; // sized bitfield.; // * 2012 and back: In 64-bit mode, if the alignment of a record is 16 or; // greater due to __declspec(align()) then a second layout phase occurs after; // The locations of the vf and vb pointers are known. This layout phase; // suffers from the ""last field is a bitfield"" bug in 2010 and results in; // _every_ field getting padding put in front of it, potentially including the; // vfptr, leaving the vfprt at a non-zero location which results in a fault if; // anything tries to read the vftbl. The second layout phase also treats; // bitfields as separate entities and gives them each storage rather than; // packing them. Additionally, because this phase appears to perform a; // (an unstable) sort on the members before laying them out and because merged; // bitfields have the same address, the bitfields end up in whatever order; // the sort left them in, a behavior we could never hope to replicate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:5636,fault,fault,5636,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['fault'],['fault']
Availability,"t included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc_install.exe from account with administrative rights; /// 3) In $ORACLE_HOME/network/admin/ directory appropriate *.ora files; /// like ldap.ora, sqlnet.ora, tnsnames.ora should be installed.; /// Contact your Oracle administrator to get these files.; /// After Oracle ODBC driver is installed, appropriate entry in ODBC drivers; /// list like ""Oracle in instantclient10_2"" should appear. Connection; /// string example:; /// ""odbcd://DRIVER={Oracle in instantclient10_2};DBQ=db-test;UID=user_name;PWD=user_pass;"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1897,down,download,1897,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,2,['down'],['download']
Availability,"t of graphics options. See TH1::Draw for a complete list of these options.; /// \param[in] xxmin lower fitting range; /// \param[in] xxmax upper fitting range; /// \return A smart pointer to the TFitResult class; ///; /// \anchor HFitOpt; /// ### Histogram Fitting Options; ///; /// Here is the full list of fit options that can be given in the parameter `option`.; /// Several options can be used together by concatanating the strings without the need of any delimiters.; ///; /// option | description; /// -------|------------; /// ""L"" | Uses a log likelihood method (default is chi-square method). To be used when the histogram represents counts.; /// ""WL"" | Weighted log likelihood method. To be used when the histogram has been filled with weights different than 1. This is needed for getting correct parameter uncertainties for weighted fits.; /// ""P"" | Uses Pearson chi-square method. Uses expected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; /// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; /// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; /// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; /// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; /// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; /// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; /// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; /// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searchi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1266,error,error,1266,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"t of; coordinate vectors, which hopefully provide easier feature; identification and dimensionality reduction. Let's define the covariance matrix:; \f[; \mathsf{C} = \left\langle\mathbf{y}\mathbf{y}^T\right\rangle; \quad\mbox{where}\quad; \mathbf{y} = \mathbf{x} - \left\langle\mathbf{x}\right\rangle\,,; \f]; and the brackets indicate mean value over the sample of \f$M\f$; prototypes. This matrix \f$\mathsf{C}\f$ is real, positive definite, symmetric, and will; have all its eigenvalues greater then zero. It will now be show that; among the family of all the complete orthonormal bases of the pattern; space, the base formed by the eigenvectors of the covariance matrix; and belonging to the largest eigenvalues, corresponds to the most; significant features of the description of the original prototypes. let the prototypes be expanded on into a set of \f$N\f$ basis vectors; \f$\mathbf{e}_n, n=0,\ldots,N,N+1, \ldots, P-1\f$; \f[; \mathbf{y}_i = \sum^N_{i=0} a_{i_n} \mathbf{e}_n,; \quad; i = 1, \ldots, M,; \quad; N < P-1; \f]; The `best' feature coordinates \f$\mathbf{e}_n\f$, spanning a *feature; space*, will be obtained by minimizing the error due to this; truncated expansion, i.e.,; \f[; \min\left(E_N\right) =; \min\left[\left\langle\left(\mathbf{y}_i - \sum^N_{i=0} a_{i_n} \mathbf{e}_n\right)^2\right\rangle\right]; \f]; with the conditions:; \f[; \mathbf{e}_k\bullet\mathbf{e}_j = \delta_{jk} =; \left\{\begin{array}{rcl}; 1 & \mbox{for} & k = j\\; 0 & \mbox{for} & k \neq j; \end{array}\right.; \f]; Multiplying (3) by \f$\mathbf{e}^T_n\f$ using (5),; we get; \f[; a_{i_n} = \mathbf{y}_i^T\bullet\mathbf{e}_n\,,; \f]; so the error becomes; \f{eqnarray*}{; E_N &=&; \left\langle\left[\sum_{n=N+1}^{P-1} a_{i_n}\mathbf{e}_n\right]^2\right\rangle\nonumber\\; &=&; \left\langle\left[\sum_{n=N+1}^{P-1} \mathbf{y}_i^T\bullet\mathbf{e}_n\mathbf{e}_n\right]^2\right\rangle\nonumber\\; &=&; \left\langle\sum_{n=N+1}^{P-1} \mathbf{e}_n^T\mathbf{y}_i\mathbf{y}_i^T\mathbf{e}_n\right\rangle\no",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:5355,error,error,5355,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['error'],['error']
Availability,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1559,error,error,1559,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['error'],['error']
Availability,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free; the allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1476,error,error,1476,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"t value, `0` to `nThreads - 1`, for each thread of execution. This is meant as a helper in writing thread-safe Foreach() actions when using RDataFrame after ROOT::EnableImplicitMT(). ForeachSlot() works just as well with single-thread execution: in that case `slot` will always be `0`. |; | Snapshot() | Write the processed dataset to disk, in a new TTree and TFile. Custom columns can be saved as well, filtered entries are not saved. Users can specify which columns to save (default is all). Snapshot, by default, overwrites the output file if it already exists. Snapshot() can be made *lazy* setting the appropriate flag in the snapshot options.|. ### Queries. These operations do not modify the dataframe or book computations but simply return information on the RDataFrame object. | **Operation** | **Description** |; |---------------------|-----------------|; | Describe() | Get useful information describing the dataframe, e.g. columns and their types. |; | GetColumnNames() | Get the names of all the available columns of the dataset. |; | GetColumnType() | Return the type of a given column as a string. |; | GetColumnTypeNamesList() | Return the list of type names of columns in the dataset. |; | GetDefinedColumnNames() | Get the names of all the defined columns. |; | GetFilterNames() | Return the names of all filters in the computation graph. |; | GetNRuns() | Return the number of event loops run by this RDataFrame instance so far. |; | GetNSlots() | Return the number of processing slots that RDataFrame will use during the event loop (i.e. the concurrency level). |; | SaveGraph() | Store the computation graph of an RDataFrame in [DOT format (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) for easy inspection. See the [relevant section](\ref representgraph) for details. |. \anchor introduction; ## Introduction; Users define their analysis as a sequence of operations to be performed on the dataframe object; the framework; takes care of the management",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:10553,avail,available,10553,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"tExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of vo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:10637,CheckPoint,CheckPoint,10637,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['CheckPoint'],['CheckPoint']
Availability,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4679,avail,available,4679,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,"tain code. Nevertheless, the time penalty does not; exceed a factor 2. ### The MLP. The multilayer perceptron is a simple feed-forward network with; the following structure:. \image html mlp.png. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuron. This computation is called back-propagation of the errors. A; loop over all examples is called an epoch.; Six learning methods are implemented. #### Stochastic minimization:. is the most trivial learning method. This is the Robbins-Monro; stochastic approximation applied to multilayer perceptrons. The; weights are updated after each example according to the formula:; \f$w_{ij}(t+1) = w_{ij}(t) + \Delta w_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:3817,error,error,3817,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['error'],['error']
Availability,"tch (0); // case 0:; // default:; // if (const ::testing::AssertionResult gtest_ar_ =; // ::testing::AssertionResult((a == b))); // ;; // else; // return ::testing::internal::AssertHelper(; // ::testing::TestPartResult::kFatalFailure,; // ""<path to project>"",; // <line number>,; // ::testing::internal::GetBoolAssertionFailureMessage(; // gtest_ar_, ""a == b"", ""false"", ""true""); // .c_str()) = ::testing::Message();; //; // where AssertionResult is defined similarly to; //; // class AssertionResult {; // public:; // AssertionResult(const AssertionResult& other);; // explicit AssertionResult(bool success) : success_(success) {}; // operator bool() const { return success_; }; // ...; // private:; // bool success_;; // };; //; // In order for the analyzer to correctly handle this assertion, it needs to; // know that the boolean value of the expression ""a == b"" is stored the; // 'success_' field of the original AssertionResult temporary and propagated; // (via the copy constructor) into the 'success_' field of the object stored; // in 'gtest_ar_'. That boolean value will then be returned from the bool; // conversion method in the if statement. This guarantees that the assertion; // holds when the return path is not taken.; //; // If the success value is not properly propagated, then the eager case split; // on evaluating the expression can cause pernicious false positives; // on the non-return path:; //; // ASSERT(ptr != NULL); // *ptr = 7; // False positive null pointer dereference here; //; // Unfortunately, the bool constructor cannot be inlined (because its; // implementation is not present in the headers) and the copy constructor is; // not inlined (because it is constructed into a temporary and the analyzer; // does not inline these since it does not yet reliably call temporary; // destructors).; //; // This checker compensates for the missing inlining by propagating the; // _success value across the bool and copy constructors so the assertion behaves; // as expected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp:2106,reliab,reliably,2106,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GTestChecker.cpp,1,['reliab'],['reliably']
Availability,"tector to truth level. TUnfoldDensity is used to decompose a measurement y into several sources x,; given the measurement uncertainties, background b and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfoldDensity has an adjustable regularisation term and also supports an; optional constraint on the total number of events.; Background sources can be specified, with a normalisation constant and; normalisation uncertainty. In addition, variants of the response; matrix may be specified, these are taken to determine systematic; uncertainties. Complex, multidimensional arrangements of signal and; background bins are managed with the help of the class TUnfoldBinning. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. <h3>Brief recipy to use TUnfoldSys:</h3>; <ul>; <li>Set up binning schemes for the truth and measured; distributions. The binning schemes may be coded in the XML language,; for reading use TUnfoldBinningXML.</li>; <li>A matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>A vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>Repeated calls to SubtractBackground() to specify background; sources</li>; <li>Repeated calls to AddSysError() to specify systematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanTau()</li>; </ul>; <li>Unfolding results are retrieved using ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1838,avail,available,1838,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['avail'],['available']
Availability,"ted after a; // constructor call.; //; // This checker has several options:; // - ""Pedantic"" (boolean). If its not set or is set to false, the checker; // won't emit warnings for objects that don't have at least one initialized; // field. This may be set with; //; // `-analyzer-config optin.cplusplus.UninitializedObject:Pedantic=true`.; //; // - ""NotesAsWarnings"" (boolean). If set to true, the checker will emit a; // warning for each uninitialized field, as opposed to emitting one warning; // per constructor call, and listing the uninitialized fields that belongs; // to it in notes. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:NotesAsWarnings=true`.; //; // - ""CheckPointeeInitialization"" (boolean). If set to false, the checker will; // not analyze the pointee of pointer/reference fields, and will only check; // whether the object itself is initialized. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:CheckPointeeInitialization=true`.; //; // TODO: With some clever heuristics, some pointers should be dereferenced; // by default. For example, if the pointee is constructed within the; // constructor call, it's reasonable to say that no external object; // references it, and we wouldn't generate multiple report on the same; // pointee.; //; // - ""IgnoreRecordsWithField"" (string). If supplied, the checker will not; // analyze structures that have a field with a name or type name that; // matches the given pattern. Defaults to """".; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreRecordsWithField=""[Tt]ag|[Kk]ind""`.; //; // - ""IgnoreGuardedFields"" (boolean). If set to true, the checker will analyze; // _syntactically_ whether the found uninitialized object is used without a; // preceding assert call. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreGuardedFields=true`.; //; // Most of the following methods as well as the checker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h:1550,CheckPoint,CheckPointeeInitialization,1550,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,1,['CheckPoint'],['CheckPointeeInitialization']
Availability,"ted as being the original source.; *; * 3. This Copyright notice may not be removed or altered from any; * source or altered source distribution.; *; * The Contributing Authors and Group 42, Inc. specifically permit,; * without fee, and encourage the use of this source code as a component; * to supporting the PNG file format in commercial products. If you use; * this source code in a product, acknowledgment is not required but would; * be appreciated.; *; * END OF COPYRIGHT NOTICE, DISCLAIMER, and LICENSE.; *; * TRADEMARK; * =========; *; * The name ""libpng"" has not been registered by the Copyright owners; * as a trademark in any jurisdiction. However, because libpng has; * been distributed and maintained world-wide, continually since 1995,; * the Copyright owners claim ""common-law trademark protection"" in any; * jurisdiction where common-law trademark is recognized.; */; /*; * A ""png_get_copyright"" function is available, for convenient use in ""about""; * boxes and the like:; *; * printf(""%s"", png_get_copyright(NULL));; *; * Also, the PNG logo (in PNG format, of course) is supplied in the; * files ""pngbar.png"" and ""pngbar.jpg (88x31) and ""pngnow.png"" (98x31).; */; /*; * The contributing authors would like to thank all those who helped; * with testing, bug fixes, and patience. This wouldn't have been; * possible without all of you.; *; * Thanks to Frank J. T. Wojcik for helping with the documentation.; */; /* Note about libpng version numbers:; *; * Due to various miscommunications, unforeseen code incompatibilities; * and occasional factors outside the authors' control, version numbering; * on the library has not always been consistent and straightforward.; * The following table summarizes matters since version 0.89c, which was; * the first widely used release:; *; * source png.h png.h shared-lib; * version string int version; * ------- ------ ----- ----------; * 0.89c ""1.0 beta 3"" 0.89 89 1.0.89; * 0.90 ""1.0 beta 4"" 0.90 90 0.90 [should have been 2.0.90]; * 0.95 ""1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:6798,avail,available,6798,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['avail'],['available']
Availability,"ted as one candle. Begin_Macro(source); ../../../tutorials/hist/candleplotwhiskers.C; End_Macro. The candle reduces the information coming from a whole distribution into few values.; Independently from the number of entries or the significance of the underlying distribution; a candle will always look like a candle. So candle plots should be used carefully in; particular with unknown distributions. The definition of a candle is based on; __unbinned data__. Here, candles are created from binned data. Because of this, the; deviation is connected to the bin width used. The calculation of the quantiles; normally done on unbinned data also. Because data are binned, this will; only work the best possible way within the resolution of one bin. Because of all these facts one should take care that:. - there are enough points per candle; - the bin width is small enough (more bins will increase the maximum; available resolution of the quantiles although there will be some; bins with no entries); - never make a candle-plot if the underlying distribution is double-distributed; - only create candles of distributions that are more-or-less gaussian (the; MPV should be not too far away from the mean). #### What a candle is made of. \since **ROOT version 6.07/05**. ##### The box; The box displays the position of the inter-quantile-range of the underlying; distribution. The box contains 25% of the distribution below the median; and 25% of the distribution above the median. If the underlying distribution is large; enough and gaussian shaped the end-points of the box represent \f$ 0.6745\times\sigma \f$; (Where \f$ \sigma \f$ is the standard deviation of the gaussian). The width and; the position of the box can be modified by SetBarWidth() and SetBarOffset().; The +-25% quantiles are calculated by the GetQuantiles() methods. \since **ROOT version 6.11/01**. Using the static function TCandle::SetBoxRange(double) the box definition will be; overwritten. E.g. using a box range of 0.68 will r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:46641,avail,available,46641,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['avail'],['available']
Availability,"ted events, a counter incremented only up to a; /// certain point, a mean over a subset of the events and so forth).; ///; /// Callbacks can be used e.g. to inspect partial results of the analysis while the event loop is running. For; /// example one can draw an up-to-date version of a result histogram every 100 entries like this:; /// \code{.cpp}; /// auto h = tdf.Histo1D(""x"");; /// TCanvas c(""c"",""x hist"");; /// h.OnPartialResult(100, [&c](TH1D &h_) { c.cd(); h_.Draw(); c.Update(); });; /// h->Draw(); // event loop runs here, this `Draw` is executed after the event loop is finished; /// \endcode; ///; /// A value of 0 for everyNEvents indicates the callback must be executed only once, before running the event loop.; /// A conveniece definition `kOnce` is provided to make this fact more expressive in user code (see snippet below).; /// Multiple callbacks can be registered with the same RResultPtr (i.e. results of RDataFrame actions) and will; /// be executed sequentially. Callbacks are executed in the order they were registered.; /// The type of the value contained in a RResultPtr is also available as RResultPtr<T>::Value_t, e.g.; /// \code{.cpp}; /// auto h = tdf.Histo1D(""x"");; /// // h.kOnce is 0; /// // decltype(h)::Value_t is TH1D; /// \endcode; ///; /// When implicit multi-threading is enabled, the callback:; /// - will never be executed by multiple threads concurrently: it needs not be thread-safe. For example the snippet; /// above that draws the partial histogram on a canvas works seamlessly in multi-thread event loops.; /// - will always be executed ""everyNEvents"": partial results will ""contain"" that number of events more from; /// one call to the next; /// - might be executed by a different worker thread at different times: the value of `std::this_thread::get_id()`; /// might change between calls; ///; /// To register a callback that is called by _each_ worker thread (concurrently) every N events one can use; /// OnPartialResultSlot().; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx:1863,avail,available,1863,tree/dataframe/inc/ROOT/RResultPtr.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx,1,['avail'],['available']
Availability,"ted here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It wil",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4230,avail,available,4230,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['avail'],['available']
Availability,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:993,error,error,993,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,['error'],['error']
Availability,"tematic uncertainties; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Description of (systematic) uncertainties available in; TUnfoldSys. There are covariance matrix contributions and there are; systematic shifts. Systematic shifts correspond to the variation of a; (buicance) parameter, for example a background normalisation or a; one-sigma variation of a correlated systematic error.; <table>; <tr><th> </th><th>Set by</th>; <th>Access covariance matrix</th>; <th>Access vector of shifts</th>; <th>Description</th>; </tr>; <tr>; <td>(a)</td><td>TUnfoldSys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>st",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:3882,error,errors,3882,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,1,['error'],['errors']
Availability,"ter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note that this approximation is not the default behaviour. ### Creating and drawing a 2D profile; ~~~~{.cpp}; {; auto c1 = new TCanvas(""c1"",""Profile histogram example"",200,10,700,500);; auto hprof2d = new TProfile2D(""hprof2d"",""Profile of pz versus px and py"",40,-4,4,40,-4,4,0,20);; Float_t px, py, pz;; for ( Int_t i=0; i<25000; i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; hprof2d->Fill(px,py,pz,1);; }; hprof2d->Draw();; }; ~~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Profile2D histograms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:1621,Error,Error,1621,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,"['Error', 'error']","['Error', 'error']"
Availability,"that this routine will not parse ::new or; /// ::delete; it will just leave them in the token stream.; ///; /// '::'[opt] nested-name-specifier; /// '::'; ///; /// nested-name-specifier:; /// type-name '::'; /// namespace-name '::'; /// nested-name-specifier identifier '::'; /// nested-name-specifier 'template'[opt] simple-template-id '::'; ///; ///; /// \param SS the scope specifier that will be set to the parsed; /// nested-name-specifier (or empty); ///; /// \param ObjectType if this nested-name-specifier is being parsed following; /// the ""."" or ""->"" of a member access expression, this parameter provides the; /// type of the object whose members are being accessed.; ///; /// \param ObjectHadErrors if this unqualified-id occurs within a member access; /// expression, indicates whether the original subexpressions had any errors.; /// When true, diagnostics for missing 'template' keyword will be supressed.; ///; /// \param EnteringContext whether we will be entering into the context of; /// the nested-name-specifier after parsing it.; ///; /// \param MayBePseudoDestructor When non-NULL, points to a flag that; /// indicates whether this nested-name-specifier may be part of a; /// pseudo-destructor name. In this case, the flag will be set false; /// if we don't actually end up parsing a destructor name. Moreover,; /// if we do end up determining that we are parsing a destructor name,; /// the last component of the nested-name-specifier is not parsed as; /// part of the scope specifier.; ///; /// \param IsTypename If \c true, this nested-name-specifier is known to be; /// part of a type name. This is used to improve error recovery.; ///; /// \param LastII When non-NULL, points to an IdentifierInfo* that will be; /// filled in with the leading identifier in the last component of the; /// nested-name-specifier, if any.; ///; /// \param OnlyNamespace If true, only considers namespaces in lookup.; ///; ///; /// \returns true if there was an error parsing a scope specifier",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:1823,error,error,1823,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,3,"['error', 'recover']","['error', 'recovery']"
Availability,"the calculation, if applicable. The other constructor uses a; fitted histogram to calculate the fit residual and plot it with the histogram; and the fit function. ## Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using; `TGraphAsymmErrors::Divide`. The `option` variable is passed through, as are the parameters; `c1` and `c2`, that you can set via `TRatioPlot::SetC1` and `TRatioPlot::SetC1`. If you set the; `option` to `divsym` the method `TH1::Divide` will be used instead, also receiving all the parameters. Using the `option` `diff` or `diffsig`, both histograms will be subtracted, and in the case of diffsig,; the difference will be divided by the uncertainty. `c1` and `c2` will only be used to; scale the histograms using `TH1::Scale` prior to subtraction. Available options are for `option`:; | Option | Description |; | ---------- | ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:1291,Avail,Available,1291,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,2,"['Avail', 'error']","['Available', 'errors']"
Availability,"the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7615,error,errors,7615,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,3,['error'],['errors']
Availability,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1591,robust,robust,1591,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['robust'],['robust']
Availability,"the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg->Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg->Draw(""0PC"");; }; End_Macro. The option ""3"" shows the errors as a band. Begin_Macro(source); {; auto c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""Errors as a band"");; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; }; End_Macro. The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:8054,error,errors,8054,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"ther two one-dimensional sets of points are compatible; /// with coming from the same parent distribution, using the Kolmogorov test.; /// That is, it is used to compare two experimental distributions of unbinned data.; ///; /// ### Input:; /// a,b: One-dimensional arrays of length na, nb, respectively.; /// The elements of a and b must be given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1053,error,error,1053,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['error'],['error']
Availability,"there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output space has been; provided before the call.) Flushing may degrade compression for some; compression algorithms and so it should be used only when necessary. This; completes the current deflate block and follows it with an empty stored block; that is three bits plus filler bits to the next byte, followed by four bytes; (00 00 ff ff). If flush is set to Z_PARTIAL_FLUSH, all pending output is flushed to the; output buffer, but the output is not aligned to a byte boundary. All of the; input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.; This completes the current deflate block and follows it with an empty fixed; codes block that is 10 bits long. This assures that enough bytes are output; in order for the decompressor to finish the block before the empty fixed code; block. If flush is set to Z_BLOCK, a deflate block is completed and emitted, as; for Z_SYNC_FLUSH, but the output is not aligned on a byte boundary, and up to; seven bits of the current block are held to be written as the next byte after; the next deflate block is completed. In this case, the decompressor may not; be provided enough bits at this point in order to complete decompression of; the data provided so far to the compressor. It may need to wait for the next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2509,avail,available,2509,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['avail'],['available']
Availability,"this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is; a crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if a parameter is invalid (such as a null strm). msg; is set to null if there is no error message. inflateInit2 does not perform; any decompression apart from reading the zlib header if present: this will; be done by inflate(). (So next_in and avail_in may be modified, but next_out; and avail_out are unchanged.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3343,error,error,3343,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['error'],['error']
Availability,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1825,error,errors,1825,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,2,"['error', 'recover']","['errors', 'recover']"
Availability,"three dimensions,; and if a large fraction of all bins are filled.; Better alternatives are; - THnSparse if a fraction of all bins are filled; - TTree. The major problem of THn is the memory use caused by n-dimensional; histogramming: a THnD with 8 dimensions and 100 bins per dimension needs; more than 2.5GB of RAM!. To construct a THn object you must use one of its templated, derived; classes:. THnD (typedef for THnT<Double_t>): bin content held by a Double_t,; THnF (typedef for THnT<Float_t>): bin content held by a Float_t,; THnL (typedef for THnT<Long64_t>): bin content held by a Long64_t,; THnI (typedef for THnT<Int_t>): bin content held by an Int_t,; THnS (typedef for THnT<Short_t>): bin content held by a Short_t,; THnC (typedef for THnT<Char_t>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2F h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to. Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnF hn(""hn"", ""hn"", 2, bins, xmin, xmax);. ## Filling; A THn is filled just like a regular histogram, using; THn::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram.; Storage is allocated when the first bin content is stored. ## Projections; The dimensionality of a THn can be reduced by projecting it to; 1, 2, 3, or n dimensions, which can be represented by a TH1, TH2, TH3, or; a THn. See the Projection() members. To only project parts of the; histogram, call. hn->GetAxis(12)->SetRange(from_bin, to_bin);. ## Conversion from other histogram classes; The static factory function THn::CreateHn() can be used to create a THn; from a TH1, TH2, TH3, THnSparse and (for copying) even from a THn. The; created THn will have compatble storage type, i.e. calling CreateHn() on; a TH2F will create a THnF.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx:1429,error,errors,1429,hist/hist/src/THn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx,1,['error'],['errors']
Availability,"tic variations to the nominal PDF.; The Bernstein basis polynomials are particularly appropriate because they are positive definite. This tool was inspired by the work of Glen Cowan together with Stephan Horner, Sascha Caron,; Eilam Gross, and others.; The initial implementation is independent work. The major step forward in the approach was; to provide a well defined algorithm that specifies the order of polynomial to be included; in the correction. This is an empirical algorithm, so in addition to the nominal model it; needs either a real data set or a simulated one. In the early work, the nominal model was taken; to be a histogram from Monte Carlo simulations, but in this implementation it is generalized to an; arbitrary PDF (which includes a RooHistPdf). The algorithm basically consists of a; hypothesis test of an nth-order correction (null) against a n+1-th order correction (alternate).; The quantity q = -2 log LR is used to determine whether the n+1-th order correction is a major; improvement to the n-th order correction. The distribution of q is expected to be roughly; \f$\chi^2\f$ with one degree of freedom if the n-th order correction is a good model for the data.; Thus, one only moves to the n+1-th order correction of q is relatively large. The chance that; one moves from the n-th to the n+1-th order correction when the n-th order correction; (eg. a type 1 error) is sufficient is given by the Prob(\f$\chi^2_1\f$ > threshold). The constructor; of this class allows you to directly set this tolerance (in terms of probability that the n+1-th; term is added unnecessarily). To do:; Add another method to the utility that will make the sampling distribution for -2 log lambda; for various m vs. m+1 order corrections using a nominal model and perhaps having two ways of; generating the toys (either via a histogram or via an independent model that is supposed to; reflect reality). That will allow one to make plots like Glen has at the end of his DRAFT; very easily. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx:2017,error,error,2017,roofit/roostats/src/BernsteinCorrection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BernsteinCorrection.cxx,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"tice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:1513,redundant,redundant,1513,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,2,"['Avail', 'redundant']","['Available', 'redundant']"
Availability,"ting from ROOT v6.26, RDataFrame provides a flexible syntax to define systematic variations.; This is done in two steps: a) register variations for one or more existing columns using Vary() and b) extract variations; of normal RDataFrame results using \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". In between these steps, no other change; to the analysis code is required: the presence of systematic variations for certain columns is automatically propagated; through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied; results. \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" is included in header `ROOT/RDFHelpers.hxx`. The compiled C++ programs must include this header; explicitly, this is not required for ROOT macros. . An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:. ~~~{.cpp}; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");. // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; ~~~. A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; ""pt:down"", ""pt:up"" in this example). Python usage looks simila",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:55938,down,down,55938,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['down'],['down']
Availability,"tion (RMS) of the Y data in the bin; /// and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); /// (i.e the errors are the standard error on the bin content of the profile); /// - 's' Errors are the standard deviation of Y, S(Y); /// - 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); /// The only difference is only when the standard deviation in Y is zero.; /// In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; /// 1./SQRT(12*N).; /// This approximation assumes that the Y values are integer (e.g. ADC counts); /// and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; /// takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); /// - 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j; /// W is obtained as from TProfile::GetBinEntries(ibin); /// This errors corresponds to the standard deviation of weighted mean where each; /// measurement Y is uncorrelated and has an error sigma, which is expressed in the; /// weight used to fill the Profile: w = 1/sigma^2; /// The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ); ///; /// In the case of Profile filled weights and with TProfile::Sumw2() called,; /// STD(Y) is the standard deviation of the weighted sample Y and N is in this case the; /// number of effective entries (TProfile::GetBinEffectiveEntries(ibin) ); ///; /// If a bin has N data points all with the same value Y (especially; /// possible when dealing with integers), the spread in Y for that bin; /// is zero, and the uncertainty assigned is also zero, and the bin is; /// ignored in making subsequent fits.; /// To avoid this problem one can use an approximation for the standard deviation S(Y),; /// by using the average of all the S(Y) of the other Profile bins. To use this approximation; /// one must call before TProfile::Approximate; /// This approximation applies only for the de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1553,error,errors,1553,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,3,['error'],"['error', 'errors']"
Availability,"tion \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `dx = 0` removes the error along x. `gStyle->SetEndErrorSize(np)` controls the size of the lines; at the end of the error bars (when option 1 is used).; By default `np=1`. (np represents the number of pixels). \anchor GrP3a; #### TGraphErrors. A `TGraphErrors` is a `TGraph` with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Begin_Macro(source); {; auto c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; auto ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetTitle(""A graph with errors"");; ge->Draw(""ap"");; }; End_Macro. The option ""0"" shows the error bars for data points outside range. Begin_Macro(source); {; auto c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; auto tg = new TGraphErrors(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:7435,error,error,7435,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['error']
Availability,"tion of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterior(nbins) the interval is then obtained by; scanning the posterior function in the given number of points. The first method is in general faster but it requires an; integration one extra dimension ( in the poi in addition to the nuisance parameters), therefore in some case it can be; less robust. The class can also return the posterior function (method GetPosteriorFunction) or if needed the normalized; posterior function (the posterior pdf) (method GetPosteriorPdf). A posterior plot is also obtained using; the GetPosteriorPlot method. The class allows to use different integration methods for integrating in (marginalizing) the nuisances and in the poi. All the numerical; integration methods of ROOT can be used via the method SetIntegrationType (see more in the documentation of; this method). Calculator estimating a credible interval using the Bayesian procedure.; The calculator computes given the model the posterior distribution and estimates the; credible interval from the given function.; */; // include other header files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:2444,robust,robust,2444,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['robust'],['robust']
Availability,"tionScopeInfo stack to determine the nearest; /// enclosing lambda (to the current lambda) that is 'capture-capable' for; /// the variable referenced in the current lambda (i.e. \p VarToCapture).; /// If successful, returns the index into Sema's FunctionScopeInfo stack; /// of the capture-capable lambda's LambdaScopeInfo.; ///; /// Given the current stack of lambdas being processed by Sema and; /// the variable of interest, to identify the nearest enclosing lambda (to the; /// current lambda at the top of the stack) that can truly capture; /// a variable, it has to have the following two properties:; /// a) 'capture-ready' - be the innermost lambda that is 'capture-ready':; /// - climb down the stack (i.e. starting from the innermost and examining; /// each outer lambda step by step) checking if each enclosing; /// lambda can either implicitly or explicitly capture the variable.; /// Record the first such lambda that is enclosed in a non-dependent; /// context. If no such lambda currently exists return failure.; /// b) 'capture-capable' - make sure the 'capture-ready' lambda can truly; /// capture the variable by checking all its enclosing lambdas:; /// - check if all outer lambdas enclosing the 'capture-ready' lambda; /// identified above in 'a' can also capture the variable (this is done; /// via tryCaptureVariable for variables and CheckCXXThisCapture for; /// 'this' by passing in the index of the Lambda identified in step 'a'); ///; /// \param FunctionScopes - Sema's stack of nested FunctionScopeInfo's (which a; /// LambdaScopeInfo inherits from). The current/deepest/innermost lambda; /// is at the top of the stack.; ///; /// \param VarToCapture - the variable to capture. If NULL, capture 'this'.; ///; ///; /// \returns An std::optional<unsigned> Index that if evaluates to 'true'; /// contains the index (into Sema's FunctionScopeInfo stack) of the innermost; /// lambda which is capture-capable. If the return value evaluates to 'false'; /// then no lambda is captu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:1039,failure,failure,1039,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['failure'],['failure']
Availability,"tions, some default initial values and limits are set.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""EX0"" | When fitting a TGraphErrors or TGraphAsymErrors do not consider errors in the X coordinates; /// ""ROB"" | In case of linear fitting, compute the LTS regression coefficients (robust (resistant) regression), using the default fraction of good points ""ROB=0.x"" - compute the LTS regression coefficients, using 0.x as a fraction of good points; ///; ///; /// This function is used for fitting also the derived TGraph classes such as TGraphErrors or TGraphAsymmErrors.; /// See the note below on how the errors are used when fitting a TGraphErrors or TGraphAsymmErrors.; ///; /// The fitting of the TGraph, i.e simple data points without any error associated, is performed using the; /// un-weighted least-square (chi-square) method.; ///; ///; ///\anchor GFitErrors; /// ### TGraphErrors fit:; ///; /// In case of a TGraphErrors or TGraphAsymmErrors object, when `x` errors are present, the error along x,; /// is projected along the y-direction by calculating the function at the points `x-ex_low` and; /// `x+ex_high`, where `ex_low` and `ex_high` are the corresponding lower and upper error in x.; /// The chi-square is then computed as the sum of the quantity below at each data point:; ///; /// \f[; /// \frac{(y-f(x))^{2}}{ey^{2}+(\frac{1}{2}(exl+exh)f'(x))^{2}}; /// \f]; ///; /// where `x` and `y` are the point coordinates, and `f'(x)` is the derivative of the; /// function `f(x)`.; ///; /// In case of asymmetric errors, if the function lies below (above) the data point, `ey` is `ey_low` (`ey_high`).; ///; /// The approach used to approximate the uncertainty in y because of the; /// errors in x is to make it equal the error in x times the slope of the lin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:3204,error,error,3204,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['error'],['error']
Availability,"tions[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n; * Despite these features the code size remains tiny.; * It is smaller than <a href=""http://uclibc.org"">uClibc</a>'s GNU getopt() and just a; * couple 100 bytes larger than uClibc's SUSv3 getopt(). @n; * (This does not include the usage formatter, of course. But you don't have to use that.); *; * @par Download:; * Tarball with examples and test programs:; * <a style=""font-size:larger;font-weight:bold"" href=""http://sourceforge.net/projects/optionparser/files/optionparser-1.3.tar.gz/download"">optionparser-1.3.tar.gz</a> @n; * Just the header (this is all you really need):; * <a style=""font-size:larger;font-weight:bold"" href=""http://optionparser.sourceforge.net/optionparser.h"">optionparser.h</a>; *; * @par Changelog:; * <b>Version 1.3:</b> Compatible with Microsoft Visual C++. @n; * <b>Version 1.2:</b> Added @ref ROOT::option::Option::namelen ""Option::namelen"" and removed the extraction; * of short option characters into a special buffer. @n; * Changed @ref ROOT::option::Arg::Optional ""Arg::Optional"" to accept arguments if they are attached; * rather than separate. This is what GNU getopt() does and how POSIX recommends; * utilities should interpret their arguments.@n; * <b>Version 1.1:</b> Optional mode with argument reordering as done by GNU getopt(), so that; * options and non-options can be mixed. See; * @ref ROOT::option::Parser::parse() ""Parser::parse()"".; *; * @par Feedback:; * Send questions, bug reports, feature requests etc. to: <tt><b>optionparser-feedback<span id=",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:2488,down,download,2488,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['down'],['download']
Availability,"to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various; features to TUnfold, such as:; background subtraction, propagation of systematic uncertainties,; complex multidimensional arrangements of the bins. For innocent; users, the most notable improvement of TUnfoldDensity over TUnfold are; the getter functions. For TUnfold, histograms have to be booked by the; user and the getter functions fill the histogram bins. TUnfoldDensity; simply returns a new, already filled histogram.</b>. If you use this software, please consider the following citation; <br/>; <b>S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]</b>; <br/>; Detailed documentation and updates are available on; http://www.desy.de/~sschmitt. Brief recipy to use TUnfold:; <ul>; <li>a matrix (truth,reconstructed) is given as a two-dimensional histogram; as argument to the constructor of TUnfold</li>; <li>a vector of measurements is given as one-dimensional histogram using; the SetInput() method</li>; <li>The unfolding is performed; <ul>; <li>either once with a fixed parameter tau, method DoUnfold(tau)</li>; <li>or multiple times in a scan to determine the best chouce of tau,; method ScanLCurve()</li>; </ul>; <li>Unfolding results are retrieved using various GetXXX() methods; </ul>. Basic formulae:<br/>; &chi;<sup>2</sup><sub>A</sub>=(Ax-y)<sup>T</sup>V<sub>yy</sub><sup>-1</sup>(Ax-y)<br/>; &chi;<sup>2</sup><sub>L</sub>=(x-f*x<sub>0</sub>)<sup>T</sup>L<sup>T</sup>L(x-f*x<sub>0</sub>)<br/>; &chi;<sup>2</sup><sub>unf</sub>=&chi;<sup>2</sup><sub>A</sub>+&tau;<sup>2</sup>&chi;<sup>2</sup><sub>L</sub>+&lambda;&Sigma;<sub>i</sub>(Ax-y)<sub>i</sub><br/>; x:result, A:probabi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:3266,avail,available,3266,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['avail'],['available']
Availability,"to handle graphs with error bars:; `TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; The following drawing options are specific to graphs with error bars:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; | "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | \""\|\>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; | ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; | \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; | ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; | ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; | ""2"" | Error rectangles are drawn. |; | ""3"" | A filled area is drawn through the end points of the vertical error bars. |; | ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; | ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |. `gStyle->SetErrorX(dx)` controls the size of the error along x.; `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:6320,error,errors,6320,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['error'],['errors']
Availability,"tomatic binning options is extensively; used by the TTree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of weights per bin.; If Sumw2 has been called, the error per bin is computed as the; sqrt(sum of squares of weights), otherwise the error is set equal; to the sqrt(bin content).; To return the error for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBinError(bin);; ~~~. \anchor associated-functions; ### Associated functions; One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given a histogram h, one can retrieve an associated function; with:; ~~~ {.cpp}; TF1 *myfunc = h->GetFunction(""myfunc"");; ~~~. \anchor operations-on-histograms; ## Operations on histograms. Many types of operations are supported on histograms or between histograms. - Addition of a histogram to the current histogram.; - Additions of two histograms with coefficients and storage into the current; histogram.; - Multiplications and Divisions are supported in the same way as additions.; - The Add, Divide and Multiply functions also exist to add, divide or multiply; a histogram by a function. If a histogram has associated error bars (TH1::Sumw2 has been called),; the result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:14047,error,error,14047,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1558,avail,available,1558,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['avail'],['available']
Availability,"tored with 15; digits, we can expect the accuracy to be as small as 3 digits . #### Det(Double_t &d1,Double_t &d2); The determinant is d1*TMath::Power(2.,d2); Expressing the determinant this way makes under/over-flow very; unlikely . #### Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. #### Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . #### TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . #### MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indicati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:2627,Toler,Tolerances,2627,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['Toler'],['Tolerances']
Availability,"tput will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors; * when they are no longer in use. If these parameters are NULL, the; * corresponding pipe won't be created.; *; * @error can be NULL to ignore errors, or non-NULL to report errors.; * If an error is set, the function returns FALSE. Errors; * are reported even if they occur in the child (for example if the; * executable in <literal>argv[0]</literal> is not found). Typically; * the <literal>message</literal> field of returned errors should be displayed; * to users. Possible errors are those from the #G_SPAWN_ERROR domain.; *; * If an error occurs, @child_pid, @standard_input, @standard_output,; * and @standard_error will not be filled with valid values.; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:3370,error,error,3370,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,10,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability,"trieve the error for the parameter 0; /// r->Print(""V""); // print full information of fit including covariance matrix; /// r->Write(); // store the result in a file; /// ~~~; ///; /// The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; /// from the fitted function.; ///; /// ### Associated functions; ///; /// One or more object (typically a TF1*) can be added to the list; /// of functions (fFunctions) associated to each graph.; /// When TGraph::Fit is invoked, the fitted function is added to this list.; /// Given a graph gr, one can retrieve an associated function; /// with:; /// ~~~ {.cpp}; /// TF1 *myfunc = gr->GetFunction(""myfunc"");; /// ~~~; ///; /// If the graph is made persistent, the list of; /// associated functions is also persistent. Given a pointer (see above); /// to an associated function myfunc, one can retrieve the function/fit; /// parameters with calls such as:; /// ~~~ {.cpp}; /// Double_t chi2 = myfunc->GetChisquare();; /// Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; /// Double_t err0 = myfunc->GetParError(0); //error on first parameter; /// ~~~; ///; /// ### Fit Statistics; ///; /// You can change the statistics box to display the fit parameters with; /// the TStyle::SetOptFit(mode) method. This mode has four digits.; /// mode = pcev (default = 0111); ///; /// - v = 1; print name/values of parameters; /// - e = 1; print errors (if e=1, v must be 1); /// - c = 1; print Chisquare/Number of degrees of freedom; /// - p = 1; print Probability; ///; /// For example: `gStyle->SetOptFit(1011);`; /// prints the fit probability, parameter names/values, and errors.; /// You can change the position of the statistics box with these lines; /// (where g is a pointer to the TGraph):; ///; /// ~~~ {.cpp}; /// Root > TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats""); /// Root > st->SetX1NDC(newx1); //new x start position; /// Root > st->SetX2NDC(newx2); //new x end position; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:6036,error,error,6036,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,3,['error'],"['error', 'errors']"
Availability,"try() is called; for 2 or more indices in a row. ## TTree::Draw() and TChain::Draw(). Use option __entrylist__ to write the results of TTree::Draw and TChain::Draw into; an entry list. Example:; ~~~ {.cpp}; tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");; ~~~; ## Example of Loop on TEntryList with a TChain; ~~~ {.cpp}; void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *chain = new TChain(""ntuple"");; chain->Add(""hsimple.root"");; chain->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = chain->GetEntries();; Int_t treenum = 0;; chain->SetEntryList(myelist);. for (entry=start;entry < end;entry++) {; entryNumber = chain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = chain->LoadTree(entryNumber);; if (localEntry < 0) break;; ....; then either call; branch->GetEntry(localEntry);; or; chain->GetEntry(entryNumber);; In the later case the LoadTree is then somewhat redundant.; ...; }; }; ~~~; When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:; ~~~ {.cpp}; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; ~~~; to obtain the entry number within the chain you need to add to it the value of; `treeEntry+ch->GetTreeOffset()[treenum]`; such that the loop in the previous example can also be written as:; ~~~ {.cpp}; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum];; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);. ch->LoadTree(chainEntry); // this also returns treeEntry; needed_branch->GetEntry(treeEntry);; }; ~~~; ## TSelectors. To fill an TEntryList from a TSele",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx:2432,redundant,redundant,2432,tree/tree/src/TEntryList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx,1,['redundant'],['redundant']
Availability,"try-catch mechanism. It instead uses Wasm exception handling intrinsics,; /// which will be lowered to exception handling instructions.; ///; /// If there are calls to longjmp(); ///; /// 1) Lower; /// longjmp(env, val); /// into; /// __wasm_longjmp(env, val); ///; /// If there are calls to setjmp(); ///; /// 2) and 3): The same as 2) and 3) in Emscripten SjLj.; /// (setjmpTable/setjmpTableSize initialization + setjmp callsite; /// transformation); ///; /// 4) Create a catchpad with a wasm.catch() intrinsic, which returns the value; /// thrown by __wasm_longjmp function. In Emscripten library, we have this; /// struct:; ///; /// struct __WasmLongjmpArgs {; /// void *env;; /// int val;; /// };; /// struct __WasmLongjmpArgs __wasm_longjmp_args;; ///; /// The thrown value here is a pointer to __wasm_longjmp_args struct object. We; /// use this struct to transfer two values by throwing a single value. Wasm; /// throw and catch instructions are capable of throwing and catching multiple; /// values, but it also requires multivalue support that is currently not very; /// reliable.; /// TODO Switch to throwing and catching two values without using the struct; ///; /// All longjmpable function calls will be converted to an invoke that will; /// unwind to this catchpad in case a longjmp occurs. Within the catchpad, we; /// test the thrown values using testSetjmp function as we do for Emscripten; /// SjLj. The main difference is, in Emscripten SjLj, we need to transform every; /// longjmpable callsite into a sequence of code including testSetjmp() call; in; /// Wasm SjLj we do the testing in only one place, in this catchpad.; ///; /// After testing calling testSetjmp(), if the longjmp does not correspond to; /// one of the setjmps within the current function, it rethrows the longjmp; /// by calling __wasm_longjmp(). If it corresponds to one of setjmps in the; /// function, we jump to the beginning of the function, which contains a switch; /// to each post-setjmp BB. Again, in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:9379,reliab,reliable,9379,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['reliab'],['reliable']
Availability,"tte.; *********/; /****f* libAfterImage/transform/create_asimage_from_vector(); * NAME; * create_asimage_from_vector() - convinience function allowing to ; * create new ASImage, set its vector data and colorize it using ; * palette - all in one step.; * SYNOPSIS; * ASImage *create_asimage_from_vector( ASVisual *asv, double *vector,; * unsigned int width,; * unsigned int height,; * ASVectorPalette *palette,; * ASAltImFormats out_format,; * unsigned int compression,; * int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * vector - data to be attached to new ASImage and used to generate; * RGB image; * width, height - size of the new image.; * palette - palette to be used in conversion of double precision; * values into colors.; * out_format 	 - optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * New ASImage on success, NULL on failure.; * SEE ALSO; * colorize_asimage_vector(), create_asimage(), set_asimage_vector(); *********/; /****f* libAfterImage/transform/slice_asimage2(); * NAME; * slice_asimage2() - slice ASImage leaving its corners intact, and scaling ; * the middle part.; * SYNOPSIS; * ASImage*; * slice_asimage2( ASVisual *asv, ASImage *src,; * int slice_x_start, int slice_x_end,; * int slice_y_start, int slice_y_end,; * int to_width,; * int to_height,; * Bool scaled,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage.; * slice_x_start - ending of the left corners; * slice_x_end - begining of the right corners; * slice_y_start - ending of the top corners; * slice_y_end - begining of the bottom corners; * to_width - width of the generated image;; * to_height - height of the generated image;; * scaled - if True - middle part of the image will be scaled, ; * other",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:2097,failure,failure,2097,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"ttp://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks. The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; backend used:. ~~~{.py}; import ROOT. # Define correct imports and access the distributed RDataFrame appropriate for the; # backend used in the analysis; RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame. if __name__ == ""__main__"":; # The `npartitions` optional argument tells the RDataFrame how many tasks are desired; df = RDataFrame(""mytree"",""myfile.root"", npartitions=NPARTITIONS); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. Note that when processing a TTree or TChain dataset, the `n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:41166,avail,available,41166,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"tyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Begin_Macro(source); {; auto ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; auto he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRange(40,48);; ce4->cd(1);; he4->Draw(""E4"");; ce4->cd(2);; auto he3 = (TH1F*)he4->DrawClone(""E3"");; he3->SetTitle(""Distribution drawn option E3"");; }; End_Macro. 2D histograms can be drawn with error bars as shown is the follow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26694,error,error,26694,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"type of TFile depends on the file name specified by 'url'.; /// If 'url' is a '|'-separated list of file URLs, the 'URLs' are tried; /// sequentially in the specified order until a successful open.; /// If the file starts with ""root:"", ""roots:"" or ""rootk:"" a TNetFile object; /// will be returned, with ""http:"" a TWebFile, with ""file:"" a local TFile,; /// etc. (see the list of TFile plugin handlers in $ROOTSYS/etc/system.rootrc; /// for regular expressions that will be checked) and as last a local file will; /// be tried.; /// Before opening a file via TNetFile a check is made to see if the URL; /// specifies a local file. If that is the case the file will be opened; /// via a normal TFile. To force the opening of a local file via a; /// TNetFile use either TNetFile directly or specify as host ""localhost"".; /// The netopt argument is only used by TNetFile. For the meaning of the; /// options and other arguments see the constructors of the individual; /// file classes. In case of error, it returns a nullptr.; ///; /// For TFile implementations supporting asynchronous file open, see; /// TFile::AsyncOpen(...), it is possible to request a timeout with the; /// option <b>`TIMEOUT=<secs>`</b>: the timeout must be specified in seconds and; /// it will be internally checked with granularity of one millisec.; /// For remote files there is the option: <b>CACHEREAD</b> opens an existing; /// file for reading through the file cache. The file will be downloaded to; /// the cache and opened from there. If the download fails, it will be opened remotely.; /// The file will be downloaded to the directory specified by SetCacheFileDir().; ///; /// *The caller is responsible for deleting the pointer.*; /// In READ mode, a nullptr is returned if the file does not exist or cannot be opened.; /// In CREATE mode, a nullptr is returned if the file already exists or cannot be created.; /// In RECREATE mode, a nullptr is returned if the file can not be created.; /// In UPDATE mode, a nullptr i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1367,error,error,1367,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['error'],['error']
Availability,"u / Compile Macro; by clicking on the corresponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4462,Down,Down,4462,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,2,"['Down', 'down']","['Down', 'down']"
Availability,"uble_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13100,error,errors,13100,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['error'],['errors']
Availability,"uery_screen_visual(); * NAME; * query_screen_visual_id(); * NAME; * query_screen_visual(); * SYNOPSIS; * Bool query_screen_visual_id( ASVisual *asv, Display *dpy, int screen,; * Window root, int default_depth,; *							 VisualID visual_id, Colormap cmap );; * Bool query_screen_visual( ASVisual *asv, Display *dpy, int screen,; * Window root, int default_depth );; * INPUTS; * asv 		- preallocated ASVisual structure.; * dpy 		- valid pointer to opened X display.; * screen 	- screen number on which to query visuals.; * root 	- root window on that screen.; * default_depth- default colordepth of the screen.; * visual_id - optional ID of prefered Visual.; * cmap - optional colormap to be used.; * RETURN VALUE; * True on success, False on failure; * ASVisual structure pointed by asv will have the following data; * members set on success :; * dpy, visual_info, colormap, own_colormap, black_pixel, white_pixel.; * DESCRIPTION; * query_screen_visual_id() will go though prioritized list of possible; * Visuals and attempt to match those to what is available on the; * specified screen. If all items from list fail, then it goes about; * querying default visual.; * query_screen_visual is identical to query_screen_visual_id with; * visual_id and cmap set to 0.; * Once X Visual has been identified, we create X colormap and allocate; * white and black pixels from it.; *********/; /****f* libAfterImage/setup_truecolor_visual(); * NAME; * setup_truecolor_visual(); * SYNOPSIS; * Bool setup_truecolor_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * RETURN VALUE; * True on success, False if visual is not TrueColor.; * DESCRIPTION; * setup_truecolor_visual() checks if Visual is indeed TrueColor and if; * so it goes about querying color masks, deducing real XImage; * colordepth, and whether we work in BGR mode. It then goes about; * setting up correct hooks to X IO functions.; *********/; /****f* libAfterImage/setup_pseudo_visual(); * NAME; * setup_pseudo_visu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1073,avail,available,1073,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['avail'],['available']
Availability,"ula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if used in; conjunction with a variable or a parameter. Variables and parameters are treated; as doubles internally for which these operators are not defined.; This means the following command will run successfully; ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; but not; ```root -l -q -e TFormula("""", ""x%10"").Eval(0)```. The operator `^` is defined to mean exponentiation instead of the C/C++; interpretation xor. `**` is added, also meaning exponentiation. The operators `++` and `@` are added, and are shorthand for the a linear; function. That means the expression `x@2` will be expanded to; ```[n]*x + [n+1]*2``` where n is the first previously unused parameter number. \class TFormulaFunction; Helper class for TFormula. \class TFormulaVariable; Another helper class for TFormula. \class TFormulaParamOrder; Functor defining the parameter order; */; // prefix used for function name passed to Cling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:6913,error,error,6913,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['error'],['error']
Availability,"ultPtr<RCutFlowReport>; relative all named filters in the section of the chain between the main RDataFrame and that node (included). Stats are stored in the same order as named filters have been added to the graph, and *refer to the latest event-loop*; that has been run using the relevant RDataFrame. \anchor ranges; ### Ranges; When RDataFrame is not being used in a multi-thread environment (i.e. no call to EnableImplicitMT() was made),; Range() transformations are available. These act very much like filters but instead of basing their decision on; a filter expression, they rely on `begin`,`end` and `stride` parameters. - `begin`: initial entry number considered for this range.; - `end`: final entry number (excluded) considered for this range. 0 means that the range goes until the end of the dataset.; - `stride`: process one entry of the [begin, end) range every `stride` entries. Must be strictly greater than 0. The actual number of entries processed downstream of a Range() node will be `(end - begin)/stride` (or less if less; entries than that are available). Note that ranges act ""locally"", not based on the global entry count: `Range(10,50)` means ""skip the first 10 entries; *that reach this node*, let the next 40 entries pass, then stop processing"". If a range node hangs from a filter node,; and the range has a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; preceding filter*. Ranges allow ""early quitting"": if all branches of execution of a functional graph reached their `end` value of; processed entries, the event-loop is immediately interrupted. This is useful for debugging and quick data explorations. \anchor custom-columns; ### Custom columns; Custom columns are created by invoking `Define(name, f, columnList)`. As usual, `f` can be any callable object; (function, lambda expression, functor class...); it takes the values of the columns listed in `columnList` (a list of; strings) as parameters, in the same order as th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:31329,down,downstream,31329,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,"['avail', 'down']","['available', 'downstream']"
Availability,"umerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desired limits). Therefore the internal error matrix kept by; Minuit must be transformed to an external error matrix for t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:12293,error,errors,12293,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['error'],['errors']
Availability,"upported LOHs are:; // * So called non-ADRP-related:; // - .loh AdrpAddLdr L1, L2, L3:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // L3: ldr xC, [xB, #imm]; // - .loh AdrpLdrGotLdr L1, L2, L3:; // L1: adrp xA, sym@GOTPAGE; // L2: ldr xB, [xA, sym@GOTPAGEOFF]; // L3: ldr xC, [xB, #imm]; // - .loh AdrpLdr L1, L3:; // L1: adrp xA, sym@PAGE; // L3: ldr xC, [xA, sym@PAGEOFF]; // - .loh AdrpAddStr L1, L2, L3:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // L3: str xC, [xB, #imm]; // - .loh AdrpLdrGotStr L1, L2, L3:; // L1: adrp xA, sym@GOTPAGE; // L2: ldr xB, [xA, sym@GOTPAGEOFF]; // L3: str xC, [xB, #imm]; // - .loh AdrpAdd L1, L2:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // For all these LOHs, L1, L2, L3 form a simple chain:; // L1 result is used only by L2 and L2 result by L3.; // L3 LOH-related argument is defined only by L2 and L2 LOH-related argument; // by L1.; // All these LOHs aim at using more efficient load/store patterns by folding; // some instructions used to compute the address directly into the load/store.; //; // * So called ADRP-related:; // - .loh AdrpAdrp L2, L1:; // L2: ADRP xA, sym1@PAGE; // L1: ADRP xA, sym2@PAGE; // L2 dominates L1 and xA is not redifined between L2 and L1; // This LOH aims at getting rid of redundant ADRP instructions.; //; // The overall design for emitting the LOHs is:; // 1. AArch64CollectLOH (this pass) records the LOHs in the AArch64FunctionInfo.; // 2. AArch64AsmPrinter reads the LOHs from AArch64FunctionInfo and it:; // 1. Associates them a label.; // 2. Emits them in a MCStreamer (EmitLOHDirective).; // - The MCMachOStreamer records them into the MCAssembler.; // - The MCAsmStreamer prints them.; // - Other MCStreamers ignore them.; // 3. Closes the MCStreamer:; // - The MachObjectWriter gets them from the MCAssembler and writes; // them in the object file.; // - Other ObjectWriters ignore them.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:3440,redundant,redundant,3440,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['redundant'],['redundant']
Availability,"uption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,; up to the moment there is not enough room left in the buffer to guarantee decoding another full block,; which maximum size is provided in `ZSTD_frameHeader` structure, field `blockSizeMax`.; At which point, decoding can resume from the beginning of the buffer.; Note that already decoded data stored in the buffer should be flushed before being overwritten. There are alternatives possible, for example using two or more buffers of size `windowSize` each, though they consume more memory. Finally, if you control the compression process, you can also ignore all buffer size rules,; as long as the encoder and decoder progress in ""lock-step"",; aka use exactly the same buffer sizes, break contiguity at the same place, etc. Once buffers are setup, start decompression, with ZSTD_decompressBegin().; If decom",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:2069,error,error,2069,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['error'],['error']
Availability,"ure.; * root - Window ID of the root window of destination screen; * mask, gcvalues - values for creation of new GC - see XCreateGC() for; * details.; * RETURN VALUE; * New GC created for regular window on success. NULL on failure.; * DESCRIPTION; * create_visual_gc() will create temporary window for the ASVisual; * specific depth and Visual and it will then create GC for such window.; * Obtained GC should be good to be used for manipulation of windows and; * Pixmaps created for the same ASVisual.; *********/; /****f* libAfterImage/create_visual_pixmap(); * NAME; * create_visual_pixmap(); * SYNOPSIS; * Pixmap create_visual_pixmap( ASVisual *asv, Window root,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * width, height - size of the pixmap to create.; * depth - depth of the pixmap to create. If 0 asv->true_depth; * will be used.; * RETURN VALUE; * ID of the newly created pixmap on success. None on failure.; * DESCRIPTION; * create_visual_pixmap() will perform sanity checks on passed; * parameters, and attempt to create pixmap for the specified ASVisual,; * root and depth.; *********/; /****f* libAfterImage/create_visual_ximage(); * NAME; * create_visual_ximage(); * SYNOPSIS; * XImage* create_visual_ximage( ASVisual *asv,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * width, height - size of the XImage to create.; * depth - depth of the XImage to create. If 0 asv->true_depth; * will be used.; * RETURN VALUE; * pointer to newly created XImage on success. NULL on failure.; * DESCRIPTION; * create_visual_ximage() will perform sanity checks on passed; * parameters, and it will attempt to create XImage of sufficient size,; * and specified colordepth. It will also setup hooks for XImage; * deallocation to be handled by custom function.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:2315,failure,failure,2315,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,2,['failure'],['failure']
Availability,"urrent pad/canvas is; subdivided into a number of pads equal to the number of histograms and each; histogram is paint into a separate pad. The following example shows various types of stacks (hstack.C). Begin_Macro(source); ../../../tutorials/hist/hstack.C; End_Macro. The option `nostackb` allows to draw the histograms next to each; other as bar charts:. Begin_Macro(source); {; auto cst0 = new TCanvas(""cst0"",""cst0"",600,400);; auto hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. auto h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. auto h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. auto h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; hs->GetXaxis()->SetNdivisions(-10);; cst0->SetGridx();; }; End_Macro. If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option `HIST` should be used. Begin_Macro(source); {; auto cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. auto hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. auto hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");; }; End_Macro. \anchor HP27; ### Drawing of 3D implicit functions. 3D implicit functions (`TF3`) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Begin_Macro(source); {; auto c2 = new TCanvas(""c2""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:96680,error,errors,96680,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],"['error', 'errors']"
Availability,"urvature = {; x: Math.min((posEnd.x - posStart.x) / 3, 15),; y: 5; }. // Curving to the right...; startHandle.x = posStart.x + curvature.x;; // ... and upwards from the start node.; startHandle.y = posStart.y - curvature.y;. // And to the left...; endHandle.x = posEnd.x - curvature.x;; // ... and upwards from the end node.; endHandle.y = posEnd.y - curvature.y;. } else {; // Case #3; // Starting from the bottom right corner...; posStart.x = startRect.right;; posStart.y = startRect.bottom;. // ...and ending also at the bottom right corner, but of the end token.; posEnd.x = endRect.right - 1;; posEnd.y = endRect.bottom + 1;. // Utility object with x and y offsets for handles.; var curvature = {; x: Math.min((posStart.x - posEnd.x) / 3, 15),; y: 5; }. // Curving to the left...; startHandle.x = posStart.x - curvature.x;; // ... and downwards from the start node.; startHandle.y = posStart.y + curvature.y;. // And to the right...; endHandle.x = posEnd.x + curvature.x;; // ... and downwards from the end node.; endHandle.y = posEnd.y + curvature.y;; }. // Put it all together into a path.; // More information on the format:; // https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths; var pathStr = ""M"" + posStart.x + "","" + posStart.y + "" "" +; ""C"" + startHandle.x + "","" + startHandle.y + "" "" +; endHandle.x + "","" + endHandle.y + "" "" +; posEnd.x + "","" + posEnd.y;. arrow.setAttribute(""d"", pathStr);; };. var drawArrows = function() {; const numOfArrows = document.querySelectorAll(""path[id^=arrow]"").length;; for (var i = 0; i < numOfArrows; ++i) {; drawArrow(i);; }; }. var toggleArrows = function(event) {; const arrows = document.querySelector(""#arrows"");; if (event.target.checked) {; arrows.setAttribute(""visibility"", ""visible"");; } else {; arrows.setAttribute(""visibility"", ""hidden"");; }; }. window.addEventListener(""resize"", drawArrows);; document.addEventListener(""DOMContentLoaded"", function() {; // Whenever we show invocation, locations change, i.e. we; // need to redraw ar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:5833,down,downwards,5833,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['down'],['downwards']
Availability,"usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation of values shared; /// among variations only happen once for all variations. Thus, the event loop; /// run-time typically scales much better than linearly with the number of; /// variations.; ///; /// RDataFrame lazily computes the varied values required to produce the; /// outputs of \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". If \ref; /// ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" was not called for a result, the computations are only; /// run for the nominal case.; ///; /// See other overloads for examples when variations are added for multiple existing columns,; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1931,down,down,1931,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['down'],['down']
Availability,"used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:19802,avail,available,19802,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['avail'],['available']
Availability,"utoSave is automatically called by; /// TTree::Fill when the number of bytes generated since the previous; /// AutoSave is greater than -fAutoSave bytes.; /// If fAutoSave is positive, AutoSave is automatically called by; /// TTree::Fill every N entries.; /// This function may also be invoked by the user.; /// Each AutoSave generates a new key on the file.; /// Once the key with the tree header has been written, the previous cycle; /// (if any) is deleted.; ///; /// Note that calling TTree::AutoSave too frequently (or similarly calling; /// TTree::SetAutoSave with a small value) is an expensive operation.; /// You should make tests for your own application to find a compromise; /// between speed and the quantity of information you may loose in case of; /// a job crash.; ///; /// In case your program crashes before closing the file holding this tree,; /// the file will be automatically recovered when you will connect the file; /// in UPDATE mode.; /// The Tree will be recovered at the status corresponding to the last AutoSave.; ///; /// if option contains ""SaveSelf"", gDirectory->SaveSelf() is called.; /// This allows another process to analyze the Tree while the Tree is being filled.; ///; /// if option contains ""FlushBaskets"", TTree::FlushBaskets is called and all; /// the current basket are closed-out and written to disk individually.; ///; /// By default the previous header is deleted after having written the new header.; /// if option contains ""Overwrite"", the previous Tree header is deleted; /// before written the new header. This option is slightly faster, but; /// the default option is safer in case of a problem (disk quota exceeded); /// when writing the new header.; ///; /// The function returns the number of bytes written to the file.; /// if the number of bytes is null, an error has occurred while writing; /// the header to the file.; ///; /// ## How to write a Tree in one process and view it from another process; ///; /// The following two scripts illustr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1290,recover,recovered,1290,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['recover'],['recovered']
Availability,"utomatically. For; // arbitrary operands, we expect the user to define the classes and their; // relations to one another (for example, 8-bit signed immediates as a; // subset of 32-bit immediates).; //; // By partitioning the operands in this way, we guarantee that for any; // tuple of classes, any single instruction must match either all or none; // of the sets of operands which could classify to that tuple.; //; // In addition, the subset relation amongst classes induces a partial order; // on such tuples, which we use to resolve ambiguities.; //; // 2. The input can now be treated as a tuple of classes (static tokens are; // simple singleton sets). Each such tuple should generally map to a single; // instruction (we currently ignore cases where this isn't true, whee!!!),; // which we can emit a simple matcher for.; //; // Custom Operand Parsing; // ----------------------; //; // Some targets need a custom way to parse operands, some specific instructions; // can contain arguments that can represent processor flags and other kinds of; // identifiers that need to be mapped to specific values in the final encoded; // instructions. The target specific custom operand parsing works in the; // following way:; //; // 1. A operand match table is built, each entry contains a mnemonic, an; // operand class, a mask for all operand positions for that same; // class/mnemonic and target features to be checked while trying to match.; //; // 2. The operand matcher will try every possible entry with the same; // mnemonic and will check if the target feature for this mnemonic also; // matches. After that, if the operand to be matched has its index; // present in the mask, a successful match occurs. Otherwise, fallback; // to the regular operand parsing.; //; // 3. For a match success, each operand class that has a 'ParserMethod'; // becomes part of a switch from where the custom method is called.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:4239,mask,mask,4239,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,2,['mask'],['mask']
Availability,"v(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /****f* libAfterImage/transform/scale_asimage(); * NAME; * scale_asimage() - scales source ASImage into new image of requested ; * dimensions. ; * SYNOPSIS; * ASImage *scale_asimage( struct ASVisual *asv,; * ASImage *src,; * unsigned int to_width,; * unsigned int to_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv 		- pointer to valid ASVisual structure; * src 		- source ASImage; * to_width 	- desired width of the resulting image; * to_height	- desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality 	- output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * If size has to be reduced - then several neighboring pixels will be ; * averaged into single pixel. If size has to be increased then new ; * pixels will be interpolated based on values of four neighboring pixels.; * EXAMPLE; * ASScale; *********/; /****f* libAfterImage/transform/tile_asimage(); * NAME; * tile_asimage() - tiles/crops ASImage to desired size, while optionaly ; * tinting it at the same time.; * SYNOPSIS; * ASImage *tile_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x,; * int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 tint,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * tint ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:2238,failure,failure,2238,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['failure'],['failure']
Availability,"valuateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero content are by default excluded in the chi-squared fit.; /// In general, one should not fit a histogram with non-empty bins and zero errors.; ///; /// If the bin errors are not known, one should use the fit option ""W"", which gives a weight=1 for each bin (it is an unweighted least-square; /// fit). When using option ""WW"" the empty bins will be also considered in the chi-square fit with an error of 1.; /// Note that in this fitting case (option ""W"" or ""WW"") the resulting fitted parameter errors; /// are corrected by the obtained chi2 value using this scaling expression:; /// `errorp *= sqrt(chisquare/(ndf-1))` as it is done when fitting a TGraph with; /// no point errors.; ///; /// #### Excluding points; ///; /// You can use TF1::RejectPoint inside your fitting function to exclude some points; /// within a certain range from the fit. See the tutorial `fit/fitExclude.C`.; ///; ///; /// #### Warning when using the option ""0""; ///; /// When selecting the option ""0"", the fitted function is added ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18322,error,error,18322,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['error'],['error']
Availability,"vec; x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; \f]. where m is the quantity of parameters. Expanding left part of (2) over parameter increments and; retaining only linear terms one gets. \f[; \left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; \vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); = 0\tag{3}; \f]. Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:. \f[; {\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k} +; \sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; {\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; \f]. In FUMILI algorithm for second derivatives of Chi-square approximate; expression is used when last term in (4) is discarded. It is often; done, not always wittingly, and sometimes causes troubles, for example,; if user wants to limit parameters with positive values by writing down; \f$\theta_i^2\f$ instead of \f$\theta_i\f$. FUMILI will fail if one tries; minimize \f$\chi^2 = g^2(\vec\theta)\f$ where g is arbitrary function. Approximate value is:; \f[{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}\approx; Z_{ik}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k}\tag{5}; \f]. Then the equations for parameter increments are; \f[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; \qquad i=1\ldots m\tag{6}; \f]. Remarkable feature of algorithm is the technique for step; restriction. For an initial value of parameter \f${\vec\theta}^0\f$ a; parallelepiped \f$P_0\f$ is built with the center at \f${\vec\theta}^0\f$ and; axes parallel to coordinate axes \f$\theta_i\f$. The lengths of; parallelepiped sides along i-th axis is \f$2b_i\f$, where \f$b_i\f$ is such a; value that the functions \f$f_j(\ve",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:2029,down,down,2029,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['down'],['down']
Availability,"w.; * width, height - initial size of the new window.; * border_width - initial border width of the new window.; * wclass - Window class - InputOnly or InputOutput.; * mask - defines what attributes are set.; * attributes - different window attributes.; * RETURN VALUE; * ID of the newly created window on success. None on failure.; * DESCRIPTION; * create_visual_window() will do sanity checks on passed parameters,; * it will then add mandatory attributes if needed, and attempt to; * create window for the specified ASVisual.; *********/; /****f* libAfterImage/create_visual_gc(); * NAME; * create_visual_gc(); * SYNOPSIS; * GC create_visual_gc( ASVisual *asv, Window root,; * unsigned long mask, XGCValues *gcvalues );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * mask, gcvalues - values for creation of new GC - see XCreateGC() for; * details.; * RETURN VALUE; * New GC created for regular window on success. NULL on failure.; * DESCRIPTION; * create_visual_gc() will create temporary window for the ASVisual; * specific depth and Visual and it will then create GC for such window.; * Obtained GC should be good to be used for manipulation of windows and; * Pixmaps created for the same ASVisual.; *********/; /****f* libAfterImage/create_visual_pixmap(); * NAME; * create_visual_pixmap(); * SYNOPSIS; * Pixmap create_visual_pixmap( ASVisual *asv, Window root,; * unsigned int width, unsigned int height,; * unsigned int depth );; * INPUTS; * asv - pointer to the valid ASVisual structure.; * root - Window ID of the root window of destination screen; * width, height - size of the pixmap to create.; * depth - depth of the pixmap to create. If 0 asv->true_depth; * will be used.; * RETURN VALUE; * ID of the newly created pixmap on success. None on failure.; * DESCRIPTION; * create_visual_pixmap() will perform sanity checks on passed; * parameters, and attempt to create pixmap for the specified ASVisual,; * root ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1482,failure,failure,1482,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['failure'],['failure']
Availability,"web/20000816232553/www.inforamp.net/; * ~poynton/notes/colour_and_gamma/ColorFAQ.txt ); * Charles Poynton poynton at poynton.com; *; * Y = 0.212671 * R + 0.715160 * G + 0.072169 * B; *; * which can be expressed with integers as; *; * Y = (6969 * R + 23434 * G + 2365 * B)/32768; *; * Poynton's current link (as of January 2003 through July 2011):; * <http://www.poynton.com/notes/colour_and_gamma/>; * has changed the numbers slightly:; *; * Y = 0.2126*R + 0.7152*G + 0.0722*B; *; * which can be expressed with integers as; *; * Y = (6966 * R + 23436 * G + 2366 * B)/32768; *; * Historically, however, libpng uses numbers derived from the ITU-R Rec 709; * end point chromaticities and the D65 white point. Depending on the; * precision used for the D65 white point this produces a variety of different; * numbers, however if the four decimal place value used in ITU-R Rec 709 is; * used (0.3127,0.3290) the Y calculation would be:; *; * Y = (6968 * R + 23435 * G + 2366 * B)/32768; *; * While this is correct the rounding results in an overflow for white, because; * the sum of the rounded coefficients is 32769, not 32768. Consequently; * libpng uses, instead, the closest non-overflowing approximation:; *; * Y = (6968 * R + 23434 * G + 2366 * B)/32768; *; * Starting with libpng-1.5.5, if the image being converted has a cHRM chunk; * (including an sRGB chunk) then the chromaticities are used to calculate the; * coefficients. See the chunk handling in pngrutil.c for more information.; *; * In all cases the calculation is to be done in a linear colorspace. If no; * gamma information is available to correct the encoding of the original RGB; * values this results in an implicit assumption that the original PNG RGB; * values were linear.; *; * Other integer coefficients can be used via png_set_rgb_to_gray(). Because; * the API takes just red and green coefficients the blue coefficient is; * calculated to make the sum 32768. This will result in different rounding; * to that used above.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:1882,avail,available,1882,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['avail'],['available']
Availability,"with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass lowers the pseudo control flow instructions to real; /// machine instructions.; ///; /// All control flow is handled using predicated instructions and; /// a predicate stack. Each Scalar ALU controls the operations of 64 Vector; /// ALUs. The Scalar ALU can update the predicate for any of the Vector ALUs; /// by writing to the 64-bit EXEC register (each bit corresponds to a; /// single vector ALU). Typically, for predicates, a vector ALU will write; /// to its bit of the VCC register (like EXEC VCC is 64-bits, one for each; /// Vector ALU) and then the ScalarALU will AND the VCC register with the; /// EXEC to update the predicates.; ///; /// For example:; /// %vcc = V_CMP_GT_F32 %vgpr1, %vgpr2; /// %sgpr0 = SI_IF %vcc; /// %vgpr0 = V_ADD_F32 %vgpr0, %vgpr0; /// %sgpr0 = SI_ELSE %sgpr0; /// %vgpr0 = V_SUB_F32 %vgpr0, %vgpr0; /// SI_END_CF %sgpr0; ///; /// becomes:; ///; /// %sgpr0 = S_AND_SAVEEXEC_B64 %vcc // Save and update the exec mask; /// %sgpr0 = S_XOR_B64 %sgpr0, %exec // Clear live bits from saved exec mask; /// S_CBRANCH_EXECZ label0 // This instruction is an optional; /// // optimization which allows us to; /// // branch if all the bits of; /// // EXEC are zero.; /// %vgpr0 = V_ADD_F32 %vgpr0, %vgpr0 // Do the IF block of the branch; ///; /// label0:; /// %sgpr0 = S_OR_SAVEEXEC_B64 %sgpr0 // Restore the exec mask for the Then; /// // block; /// %exec = S_XOR_B64 %sgpr0, %exec // Update the exec mask; /// S_BRANCH_EXECZ label1 // Use our branch optimization; /// // instruction again.; /// %vgpr0 = V_SUB_F32 %vgpr0, %vgpr // Do the THEN block; /// label1:; /// %exec = S_OR_B64 %exec, %sgpr0 // Re-enable saved exec mask bits; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp:1352,mask,mask,1352,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerControlFlow.cpp,5,['mask'],['mask']
Availability,"xception; //; //===----------------------------------------------------------------------===//; //; // This file defines helper classes for UninitializedObjectChecker and; // documentation about the logic of it.; //; // The checker reports uninitialized fields in objects created after a; // constructor call.; //; // This checker has several options:; // - ""Pedantic"" (boolean). If its not set or is set to false, the checker; // won't emit warnings for objects that don't have at least one initialized; // field. This may be set with; //; // `-analyzer-config optin.cplusplus.UninitializedObject:Pedantic=true`.; //; // - ""NotesAsWarnings"" (boolean). If set to true, the checker will emit a; // warning for each uninitialized field, as opposed to emitting one warning; // per constructor call, and listing the uninitialized fields that belongs; // to it in notes. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:NotesAsWarnings=true`.; //; // - ""CheckPointeeInitialization"" (boolean). If set to false, the checker will; // not analyze the pointee of pointer/reference fields, and will only check; // whether the object itself is initialized. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:CheckPointeeInitialization=true`.; //; // TODO: With some clever heuristics, some pointers should be dereferenced; // by default. For example, if the pointee is constructed within the; // constructor call, it's reasonable to say that no external object; // references it, and we wouldn't generate multiple report on the same; // pointee.; //; // - ""IgnoreRecordsWithField"" (string). If supplied, the checker will not; // analyze structures that have a field with a name or type name that; // matches the given pattern. Defaults to """".; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreRecordsWithField=""[Tt]ag|[Kk]ind""`.; //; // - ""IgnoreGuardedFields"" (boolean). If set to true, the checker will analyze; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h:1267,CheckPoint,CheckPointeeInitialization,1267,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,1,['CheckPoint'],['CheckPointeeInitialization']
Availability,"xis is drawn on the top side of the plot. |; | ""Y+"" | The Y-axis is drawn on the right side of the plot. |; | ""MIN0"" | Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). |. \anchor HP01b; #### Options supported for 1D histograms. | Option | Description |; |----------|-------------------------------------------------------------------|; | "" "" | Default. |; | ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; | ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; | ""B"" | Bar chart option.|; | ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; | ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; | ""C"" | Draw a smooth Curve through the histogram bins.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E1"" | Draw error bars with perpendicular lines at the edges.|; | ""E2"" | Draw error bars with rectangles.|; | ""E3"" | Draw a fill area through the end points of the vertical error bars.|; | ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; | ""L"" | Draw a line through the bin contents.|; | ""P"" | Draw current marker at each bin except empty bins.|; | ""P*"" | Draw a star marker at each bin except empty bins.|; | ""P0"" | Draw current marker at each bin including empty bins.|; | ""PIE"" | Draw histogram as a Pie Chart.|; | ""*H"" | Draw histogram with a * at each bin.|; | ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:8634,error,error,8634,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['error'],['error']
Availability,"xmap(); * SYNOPSIS; * Pixmap asimage2pixmap ( struct ASVisual *asv, Window root,; * ASImage *im, GC gc, Bool use_cached);; * INPUTS; * asv 		- pointer to valid ASVisual structure; * root 		- root window of destination screen; * im 		- source ASImage; * gc 		- precreated GC to use for XImage transfer. If NULL,; * 			 asimage2pixmap() will use DefaultGC.; * use_cached	- If True will make asimage2pixmap() to use XImage; * 			 attached to ASImage, instead of creating new one. Only; * 			 works if ASImage->ximage data member is not NULL.; * RETURN VALUE; * On success returns newly pixmap of the same colordepth as ASVisual.; * None on failure.; * DESCRIPTION; * asimage2pixmap() creates new pixmap of exactly same size as; * supplied ASImage. It then calls asimage2drawable to copy entire content; * of the ASImage onto that created pixmap.; * EXAMPLE; * asview.c: ASView.5; * SEE ALSO; * asimage2ximage(); * asimage2drawable(); * create_visual_pixmap(); *********/; /****f* libAfterImage/asimage2mask(); * NAME; * asimage2mask(); * SYNOPSIS; * Pixmap asimage2mask ( struct ASVisual *asv, Window root,; * ASImage *im, GC gc, Bool use_cached);; * asv - pointer to valid ASVisual structure; * root - root window of destination screen; * im - source ASImage; * gc - precreated GC for 1 bit deep drawables to use for; * XImage transfer. If NULL, asimage2mask() will create one.; * use_cached - If True will make asimage2mask() to use mask XImage; * 			attached to ASImage, instead of creating new one. Only; * 			works if ASImage->alt.mask_ximage data member is not NULL.; * RETURN VALUE; * On success returns newly created pixmap of the colordepth 1.; * None on failure.; * DESCRIPTION; * asimage2mask() creates new pixmap of exactly same size as; * supplied ASImage. It then calls asimage2mask_ximage().; * It then uses supplied gc, or creates new gc, to transfer; * XImage to the server and put it on Pixmap.; * Missing scanlines get filled with 1s.; * SEE ALSO; * asimage2mask_ximage(); **********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:5894,mask,mask,5894,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,2,"['failure', 'mask']","['failure', 'mask']"
Availability,"y integer h with; (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value; (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination; which is usually the case, a good compromise between breakdown value and; efficiency is obtained by putting h=[.75*n].; 2. If h=n,the MCD location estimate is the average of the whole dataset, and; the MCD scatter estimate is its covariance matrix. Report this and stop; 3. If nvariables=1 (univariate data), compute the MCD estimate by the exact; algorithm of Rousseeuw and Leroy (1987, pp.171-172) in O(nlogn)time and stop; 4. From here on, h<n and nvariables>=2.; 1. If n is small:; - repeat (say) 500 times:; - construct an initial h-subset, starting from a random (nvar+1)-subset; - carry out 2 C-steps (described in the comments of CStep function); - for the 10 results with lowest det(S):; - carry out C-steps until convergence; - report the solution (T, S) with the lowest det(S); 2. If n is larger (say, n>600), then; - construct up to 5 disjoint random subsets of size nsub (say, nsub=300); - inside each subset repeat 500/5 times:; - construct an initial subset of size hsub=[nsub*h/n]; - carry out 2 C-steps; - keep the best 10 results (Tsub, Ssub); - pool the subsets, yielding the merged set (say, of size nmerged=1500); - in the merged set, repeat for each of the 50 solutions (Tsub, Ssub); - carry out 2 C-steps; - keep the 10 best results; - in the full dataset, repeat for those best results:; - take several C-steps, using n and h; - report the best final result (T, S); 5. To obtain consistency when the data comes from a multivariate normal; distribution, covariance matrix is multiplied by a correction factor; 6. Robust distances for all elements, using the final (T, S) are calculated; Then the very final mean and covariance estimates are calculated only for; values, whose robust distances are less than a cutoff value (0.975 quantile; of chi2 distribution with nvariables degrees of freedom); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:4769,Robust,Robust,4769,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,2,"['Robust', 'robust']","['Robust', 'robust']"
Availability,"y1[size];; double py2[size];; double py3[size];. for ( int i = 0; i < size ; ++i ) {; px[i] = i;; py1[i] = size - i;; py2[i] = size - 0.5 * i;; py3[i] = size - 0.6 * i;; }. auto gr1 = new TGraph( size, px, py1 );; gr1->SetName(""gr1"");; gr1->SetTitle(""graph 1"");; gr1->SetMarkerStyle(21);; gr1->SetDrawOption(""AP"");; gr1->SetLineColor(2);; gr1->SetLineWidth(4);; gr1->SetFillStyle(0);. auto gr2 = new TGraph( size, px, py2 );; gr2->SetName(""gr2"");; gr2->SetTitle(""graph 2"");; gr2->SetMarkerStyle(22);; gr2->SetMarkerColor(2);; gr2->SetDrawOption(""P"");; gr2->SetLineColor(3);; gr2->SetLineWidth(4);; gr2->SetFillStyle(0);. auto gr3 = new TGraph( size, px, py3 );; gr3->SetName(""gr3"");; gr3->SetTitle(""graph 3"");; gr3->SetMarkerStyle(23);; gr3->SetLineColor(4);; gr3->SetLineWidth(4);; gr3->SetFillStyle(0);. mg->Add( gr1 );; mg->Add( gr2 );. gr3->Draw(""ALP"");; mg->Draw(""LP"");; c3->BuildLegend();; }; End_Macro. \anchor MG01e; #### Automatic coloring. Automatic coloring according to the current palette is available as shown in the; following example:. Begin_Macro(source); ../../../tutorials/graphs/multigraphpalettecolor.C; End_Macro. \anchor MG01f; #### Reverse axis. \since **ROOT version 6.19/02**. When a TMultiGraph is drawn, the X-axis is drawn with increasing values from left to; right and the Y-axis from bottom to top. The two options RX and RY allow to change; this order. The option RX allows to draw the X-axis with increasing values from; right to left and the RY option allows to draw the Y-axis with increasing values; from top to bottom. The following example illustrate how to use these options. Begin_Macro(source); {; auto *c = new TCanvas();; c->Divide(2,1);. auto *g1 = new TGraphErrors();; g1->SetPoint(0,-4,-3);; g1->SetPoint(1,1,1);; g1->SetPoint(2,2,1);; g1->SetPoint(3,3,4);; g1->SetPoint(4,5,5);; g1->SetPointError(0,1.,2.);; g1->SetPointError(1,2,1);; g1->SetPointError(2,2,3);; g1->SetPointError(3,3,2);; g1->SetPointError(4,4,5);; g1->SetMarkerStyle(21);. auto *g2 = n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:4480,avail,available,4480,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['avail'],['available']
Availability,"yh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""A graph with bend errors"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; End_Macro. \anchor GrP3d; #### TGraphMultiErrors; A `TGraphMultiErrors` works basically the same way like a `TGraphAsymmErrors`.; It has the possibility to define more than one type / dimension of y-Errors.; This is useful if you want to plot statistic and systematic errors at once. To be able to define different drawing options for the multiple error dimensions; the option string can consist of multiple blocks separated by semicolons.; The painting method assigns these blocks to the error dimensions. The first block; is always used for the general draw options and options concerning the x-Errors.; In case there are less than NErrorDimensions + 1 blocks in the option string; the first block is also used for the first error dimension which is reserved for; statistical errors. The remaining blocks are assigned to the remaining dimensions. In addition to the draw options of options of `TGraphAsymmErrors` the following are possible:. | Option | Block | Description |; |----------|----------------|-------------------------------------------------------------------|; | ""X0"" | First one only | Do not draw errors for points with x = 0 |; | ""Y0"" | First one only | Do not draw errors for points with y = 0 |; | ""s=%f"" | Any | Scales the x-Errors with %f similar to `gStyle->SetErrorX(dx)` but does not affect them directly (Useful when used in addition with box errors to make the box only half as wide as the x-Errors e.g. s=0.5) |; | ""S"" | First one only | Use individual TAttFill and TAttLine attributes for the different error dimensions inste",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:13429,Error,Errors,13429,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['Error'],['Errors']
Availability,"ynchronous mode). A ZSTD_CCtx object is required to track streaming operations.; Use ZSTD_createCCtx() / ZSTD_freeCCtx() to manage resource.; ZSTD_CCtx object can be re-used multiple times within successive compression operations. Start by initializing a context.; Use ZSTD_compressBegin(), or ZSTD_compressBegin_usingDict() for dictionary compression,; or ZSTD_compressBegin_advanced(), for finer parameter control.; It's also possible to duplicate a reference context which has already been initialized, using ZSTD_copyCCtx(). Then, consume your input using ZSTD_compressContinue().; There are some important considerations to keep in mind when using this advanced function :; - ZSTD_compressContinue() has no internal buffer. It uses externally provided buffers only.; - Interface is synchronous : input is consumed entirely and produces 1+ compressed blocks.; - Caller must ensure there is enough space in `dst` to store compressed data under worst case scenario.; Worst case evaluation is provided by ZSTD_compressBound().; ZSTD_compressContinue() doesn't guarantee recover after a failed compression.; - ZSTD_compressContinue() presumes prior input ***is still accessible and unmodified*** (up to maximum distance size, see WindowLog).; It remembers all previous contiguous blocks, plus one separated memory segment (which can itself consists of multiple contiguous blocks); - ZSTD_compressContinue() detects that prior input has been overwritten when `src` buffer overlaps.; In which case, it will ""discard"" the relevant memory section from its history. Finish a frame with ZSTD_compressEnd(), which will write the last block(s) and optional checksum.; It's possible to use srcSize==0, in which case, it will write a final empty block to end the frame.; Without last block mark, frames are considered unfinished (hence corrupted) by compliant decoders. `ZSTD_CCtx` object can be re-used (ZSTD_compressBegin()) to compress again.; */; /*===== Buffer-less streaming compression functions =====*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1573,recover,recover,1573,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['recover'],['recover']
Availability,"ynomial, a linear fitter is initialised.; /// To create a linear function, use the following syntax: linear parts; /// separated by `++` sign.; /// Example: to fit the parameters of the function `p0*x + p1*sin(x)`, you can create a; /// TF1 object as; ///; /// TF1 *f1 = new TF1(""f1"", ""x++sin(x)"", xmin, xmax);; ///; /// For such a TF1 you don't have to set the initial conditions and the linear fitter is used.; /// Going via the linear fitter for functions, linear in parameters, gives a; /// considerable advantage in speed.; /// When using the linear fitting it is also possible to perform a robust fitting with the; /// Least Trimmed Square (LTS) regression algorithm, by using the fit option `ROB`.; /// See the tutorial `fitLinearRobust.C`.; ///; /// ### Notes on TGraph/TGraphErrors Fitting:; ///; /// 1. By using the ""effective variance"" method a simple linear regression; /// becomes a non-linear case, which takes several iterations; /// instead of 0 as in the linear case.; /// 2. The effective variance technique assumes that there is no correlation; /// between the x and y coordinate.; /// 3. The standard chi2 (least square) method without error in the coordinates (x) can; /// be forced by using option ""EX0""; /// 4. The linear fitter doesn't take into account the errors in x. When fitting a; /// TGraphErrors with a linear functions the errors in x will not be considered.; /// If errors in x are important, use option ""F"" for linear function fitting.; /// 5. When fitting a TGraph (i.e. no errors associated with each point),; /// a correction is applied to the errors on the parameters with the following; /// formula:; /// `parameter_error *= sqrt(chisquare/(ndf-1))`; ///; /// ### General Fitting documentation; ///; /// See in TH1::Fit for the documentation of; /// - [Fit Result](\ref HFitRes); /// - [Fit Status](\ref HFitStatus); /// - [Fit Statistics Box](\ref HFitStatBox); /// - [Fitting in a Range](\ref HFitRange); /// - [Setting Initial Conditions](\ref HFitInitial)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:5693,error,error,5693,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,6,['error'],"['error', 'errors']"
Availability,"you need to calculate a selection's efficiency from two histograms,; one containing all entries, and one containing the subset of these entries; that pass the selection, and when you have a parametrization available for; the efficiency as a function of the variable(s) under consideration. A very common problem when estimating efficiencies is that of error estimation:; when no other information is available than the total number of events N and; the selected number n, the best estimate for the selection efficiency p is n/N.; Standard binomial statistics dictates that the uncertainty (this presupposes; sufficiently high statistics that an approximation by a normal distribution is; reasonable) on p, given N, is; \f[; \sqrt{\frac{p(1-p)}{N}}; \f]; However, when p is estimated as n/N, fluctuations from the true p to its; estimate become important, especially for low numbers of events, and giving; rise to biased results. When fitting a parametrized efficiency, these problems can largely be overcome,; as a hypothesized true efficiency is available by construction. Even so, simply; using the corresponding uncertainty still presupposes that Gaussian errors; yields a reasonable approximation. When using, instead of binned efficiency; histograms, the original numerator and denominator histograms, a binned maximum; likelihood can be constructed as the product of bin-by-bin binomial probabilities; to select n out of N events. Assuming that a correct parametrization of the; efficiency is provided, this construction in general yields less biased results; (and is much less sensitive to binning details). A generic use of this method is given below (note that the method works for 2D; and 3D histograms as well):. ~~~ {.cpp}; {; TH1* denominator; // denominator histogram; TH1* numerator; // corresponding numerator histogram; TF1* eff; // efficiency parametrization; .... // set step sizes and initial parameter; .... // values for the fit function; .... // possibly also set ranges, see TF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:1598,avail,available,1598,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['avail'],['available']
Availability,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:6060,avail,available,6060,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['avail'],['available']
Availability,"ype of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; `= pcev` (default `= 0111`). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. 1. When `v = 1` is specified, only the non-fixed parameters are shown.; 2. When `v = 2` all parameters are shown. Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; to `gStyle->SetOptFit(111)`. \anchor HP09; ### The error bars options. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""E"" | Default. Shows only the error bars, not a marker.|; | ""E1"" | Small lines are drawn at the end of the error bars.|; | ""E2"" | Error rectangles are drawn.|; | ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; | ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; | ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; | ""E5"" | Like E3 but ignore the bins with 0 contents.|; | ""E6"" | Like E4 but ignore the bins with 0 contents.|; | ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; }; End_Macro. The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some art",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:26114,error,error,26114,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['error'],['error']
Availability,"ypes are inferred automatically. The string must be; valid C++ and it is just-in-time compiled. The process has a small runtime overhead and like with filters it is currently the only possible approach when using PyROOT. Previously, when showing the different ways an RDataFrame can be created, we showed a constructor that takes a; number of entries as a parameter. In the following example we show how to combine such an ""empty"" RDataFrame with Define(); transformations to create a dataset on the fly. We then save the generated data on disk using the Snapshot() action.; ~~~{.cpp}; RDataFrame d(100); // an RDF that will generate 100 entries (currently empty); int x = -1;; auto d_with_columns = d.Define(""x"", [&x] { return ++x; }); .Define(""xx"", [&x] { return x*x; });; d_with_columns.Snapshot(""myNewTree"", ""newfile.root"");; ~~~; This example is slightly more advanced than what we have seen so far. First, it makes use of lambda captures (a; simple way to make external variables available inside the body of C++ lambdas) to act on the same variable `x` from; both Define() transformations. Second, we have *stored* the transformed dataframe in a variable. This is always; possible, since at each point of the transformation chain users can store the status of the dataframe for further use (more; on this [below](#callgraphs)). You can read more about defining new columns [here](#custom-columns). \image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action."". ### Running on a range of entries; It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:23051,avail,available,23051,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['avail'],['available']
Availability,"ys constructor</td>; <td>GetEmatrixSysUncorr()</td><td> n.a. </td>; <td>uncorrelated errors on the input matrix histA, taken as the errors; provided with the histogram. These are typically statistical errors; from finite Monte Carlo samples.</td>; </tr>; <tr>; <td>(b)</td><td>AddSysError()</td><td>GetEmatrixSysSource()</td>; <td>GetDeltaSysSource()</td>; <td>correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure. Several; such error sources may be defined</td>; </tr>; <tr>; <td>(c)</td><td>SetTauError()</td><td>GetEmatrixSysTau()</td>; <td>GetDeltaSysTau()</td>; <td>A systematic error on the regularisation parameter tau</td>; </tr>; <tr><td>(d)</td><td>SubtractBackground()</td>; <td>GetEmatrixSysBackgroundUncorr()</td><td>n.a.</td>; <td>uncorrelated errors on background sources, originating from the errors; provided with the background histograms</td>; </tr>; <tr>; <td>(e)</td><td>SubtractBackground</td>; <td>GetEmatrixSysBackgroundScale()</td><td>GetDeltaSysBackgroundScale()</td>; <td>scale errors on background sources</td>; </tr>; <tr>; <td>(i)</td><td>SetInput()</td>; <td>GetEmatrixInput()</td><td>n.a.</td><td>statistical uncertainty of; the input (the measurement)</td>; </tr>; <tr>; <td>(i)+(d)+(e)</td><td>see above</td><td>GetEmatrix()</td><td>n.a.</td>; <td>Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding</td>; </tr>; <tr>; <td>; (i)+(a)+(b)+(c)+(d)+(e)</td><td>see above</td><td>GetEmatrixTotal()</td>; <td>n.a.</td><td>All known error sources summed up</td>; </tr>; </table>. Note: (a), (b), (c) are propagated to the result AFTER unfolding,; whereas the background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason the errors of type (d) and (e) are; INCLUDED in the standard error matrix and other methods provided by; the base class TUnfold, whereas errors of type (a), (b), (c) are NOT; INCLUDED in the methods p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx:4513,error,errors,4513,hist/unfold/src/TUnfoldSys.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldSys.cxx,3,['error'],['errors']
Availability,"{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16647,error,error,16647,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['error'],['error']
Availability,"|; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// The Pen Attributes can be changed using pa(color, style, width). Example:; ///; /// h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; ///; /// sets the line color to 2, line type to 1 and line width to2. Note that if; /// pa() is not specified, the histogram ""h2"" line attributes are used. Note; /// also that operators for SPEC option can be cumulated and specified in; /// any order.; ///; /// The buffer size can be change with bf(size). Example:; ///; /// h2->Draw(""SPEC bf(8000)"");; ///; /// The spectrum painter needs a buffer to paint the spectrum. By default the; /// buffer size is set to 1600. In most cases this buffer size is enough. But; /// if the canvas size is very big, for instance 8000x5000 this buffer size is; /// too small. An error message is issued telling to use the option bf().; ///; /// The number of nodes can be change with n(nodesx, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) chan",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3358,error,error,3358,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['error'],['error']
Deployability," (iKind = 2).; /// \param[in] nout If xout is not specified, interpolation takes place at n equally; /// spaced points spanning the interval [min(x), max(x)], where; /// nout = max(nout, number of input data).; /// \param[in] xout an optional set of values specifying where interpolation is to; /// take place.; /// \param[in] yleft the value to be returned when input x values less than min(x).; /// The default is defined by the value of rule given below.; /// \param[in] yright the value to be returned when input x values greater than max(x).; /// The default is defined by the value of rule given below.; /// \param[in] rule an integer describing how interpolation is to take place outside; /// the interval [min(x), max(x)]. If rule is 0 then the given yleft; /// and yright values are returned, if it is 1 then 0 is returned; /// for such points and if it is 2, the value at the closest data; /// extreme is used.; /// \param[in] f For method=""constant"" a number between 0 and 1 inclusive,; /// indicating a compromise between left- and right-continuous step; /// functions. If y0 and y1 are the values to the left and right of; /// the point then the value is y0*f+y1*(1-f) so that f=0 is; /// right-continuous and f=1 is left-continuous; /// \param[in] ties Handling of tied x values. An integer describing a function with; /// a single vector argument returning a single number result:; /// - ties = ""ordered"" (iTies = 0): input x are ""ordered""; /// - ties = ""mean"" (iTies = 1): function ""mean""; /// - ties = ""min"" (iTies = 2): function ""min""; /// - ties = ""max"" (iTies = 3): function ""max""; ///; /// Details:; ///; /// At least two complete (x, y) pairs are required.; /// If there are duplicated (tied) x values and ties is a function it is; /// applied to the y values for each distinct x value. Useful functions in; /// this context include mean, min, and max.; /// If ties=""ordered"" the x values are assumed to be already ordered. The; /// first y value will be used for interpolation t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:1430,continuous,continuous,1430,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,1,['continuous'],['continuous']
Deployability," * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLWrite; \ingroup Geometry_gdml. This class contains implementation of converting ROOT's gGeoManager; geometry to GDML file. gGeoManager is the instance of TGeoManager class; containing tree of geometries creating resulting geometry. GDML is xml; based format of file mirroring the tree of geometries according to GDML; schema rules. For more information about GDML see http://gdml.web.cern.ch.; Each object in ROOT is represented by xml tag (=xml node/element) in GDML. This class is not needed to be instanciated. It should always be called; by gGeoManager->Export(""xyz.gdml"") method. Export is driven by extenstion; that is why "".gdml"" is important in resulting name. Whenever a new ROOT geometry object is implemented or there is a change; in GDML schema this class is needed to be updated to ensure proper mapping; between ROOT objects and GDML elements. Current status of mapping ROOT -> GDML is implemented in method called; TGDMLWrite::ChooseObject and it contains following ""map"":. #### Solids:. ~~~; TGeoBBox -> <box ... >; TGeoParaboloid -> <paraboloid ...>; TGeoSphere -> <sphere ...>; TGeoArb8 -> <arb8 ...>; TGeoConeSeg -> <cone ...>; TGeoCone -> <cone ...>; TGeoPara -> <para ...>; TGeoTrap -> <trap ...> or; - -> <arb8 ...>; TGeoGtra -> <twistedtrap ...> or; - -> <trap ...> or; - -> <arb8 ...>; TGeoTrd1 -> <trd ...>; TGeoTrd2 -> <trd ...>; TGeoTubeSeg -> <tube ...>; TGeoCtub -> <cutTube ...>; TGeoTube -> <tube ...>; TGeoPcon -> <polycone ...>; TGeoTorus -> <torus ...>; TGeoPgon -> <polyhedra ...>; TGeoEltu -> <eltube ...>; TGeoHype -> <hype ...>; TGeoXtru -> <xtru ...>; TGeoTessellated -> <tessellated ...>; TGeoCompositeShape -> <union ...> or; - -> <subtraction ...> or; - -> <intersection ...>. Special cases of solids:; TGeoScaledShape ->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:1215,update,updated,1215,geom/gdml/src/TGDMLWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx,1,['update'],['updated']
Deployability," *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1215,install,installation,1215,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['install'],['installation']
Deployability," +1 or three states with indices -1,0 and +1.; /// <tr><td> `ShiftToZero(bool flag)` <td> Shift entire curve such that lowest visible point is at exactly zero.; /// Mostly useful when plotting -log(L) or \f$ \chi^2 \f$ distributions; /// <tr><td> `AddTo(const char* name, double_t wgtSelf, double_t wgtOther)` <td> Create a projection of this PDF onto the x-axis, but; /// instead of plotting it directly, add it to an existing curve with given name (and relative weight factors).; /// <tr><td> `Components(const char* names)` <td> When plotting sums of PDFs, plot only the named components (*e.g.* only; /// the signal of a signal+background model).; /// <tr><td> `Components(const RooArgSet& compSet)` <td> As above, but pass a RooArgSet of the components themselves.; ///; /// <tr><th> Type of argument <th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3697,integrat,integrating,3697,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrating']
Deployability," - when selected object (histogram as a whole) is different from previous; then emit `Picked()` signal; - when selected (highlighted) bin from histogram is different from previous; then emit `Highlighted()` signal. Any user function (or functions) has to be defined; `UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)`.; In example (see below) has name `PrintInfo()`. All parameters of user; function are taken from. void TCanvas::Highlighted(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y). - `pad` is pointer to pad with highlighted histogram; - `obj` is pointer to highlighted histogram; - `x` is highlighted x bin for 1D histogram; - `y` is highlighted y bin for 2D histogram (for 1D histogram not in use). Example how to create a connection from any `TCanvas` object to a user; `UserFunction()` slot (see also `TQObject::Connect()` for additional info). TQObject::Connect(""TCanvas"", ""Highlighted(TVirtualPad*,TObject*,Int_t,Int_t)"",; 0, 0, ""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. or use non-static ""simplified"" function; `TCanvas::HighlightConnect(const char *slot)`. c1->HighlightConnect(""UserFunction(TVirtualPad*,TObject*,Int_t,Int_t)"");. NOTE the signal and slot string must have a form; ""(TVirtualPad*,TObject*,Int_t,Int_t)"". root [0] .x $ROOTSYS/tutorials/hsimple.C; root [1] hpx->SetHighlight(kTRUE); root [2] .x hlprint.C. file `hlprint.C`; ~~~ {.cpp}; void PrintInfo(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y); {; auto h = (TH1F *)obj;; if (!h->IsHighlight()) // after highlight disabled; h->SetTitle(""highlight disable"");; else; h->SetTitle(TString::Format(""bin[%03d] (%5.2f) content %g"", x,; h->GetBinCenter(x), h->GetBinContent(x)));; pad->Update();; }. void hlprint(); {; if (!gPad) return;; gPad->GetCanvas()->HighlightConnect(""PrintInfo(TVirtualPad*,TObject*,Int_t,Int_t)"");; }; ~~~. \image html hlsimple.gif ""Highlight mode and simple user function"". For more complex demo please see for example `$ROOTSYS/tutorials/tree/temperature.C` file. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:107904,Update,Update,107904,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['Update'],['Update']
Deployability," Base struct for all ""concrete attribute"" deductions.; ///; /// The abstract attribute is a minimal interface that allows the Attributor to; /// orchestrate the abstract/fixpoint analysis. The design allows to hide away; /// implementation choices made for the subclasses but also to structure their; /// implementation and simplify the use of other abstract attributes in-flight.; ///; /// To allow easy creation of new attributes, most methods have default; /// implementations. The ones that do not are generally straight forward, except; /// `AbstractAttribute::updateImpl` which is the location of most reasoning; /// associated with the abstract attribute. The update is invoked by the; /// Attributor in case the situation used to justify the current optimistic; /// state might have changed. The Attributor determines this automatically; /// by monitoring the `Attributor::getAAFor` calls made by abstract attributes.; ///; /// The `updateImpl` method should inspect the IR and other abstract attributes; /// in-flight to justify the best possible (=optimistic) state. The actual; /// implementation is, similar to the underlying abstract state encoding, not; /// exposed. In the most common case, the `updateImpl` will go through a list of; /// reasons why its optimistic state is valid given the current information. If; /// any combination of them holds and is sufficient to justify the current; /// optimistic state, the method shall return UNCHAGED. If not, the optimistic; /// state is adjusted to the situation and the method shall return CHANGED.; ///; /// If the manifestation of the ""concrete attribute"" deduced by the subclass; /// differs from the ""default"" behavior, which is a (set of) LLVM-IR; /// attribute(s) for an argument, call site argument, function return value, or; /// function, the `AbstractAttribute::manifest` method should be overloaded.; ///; /// NOTE: If the state obtained via getState() is INVALID, thus if; /// AbstractAttribute::getState().isValidState() ret",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:944,update,updateImpl,944,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['update'],['updateImpl']
Deployability," Cling setup script %s; !define APP_NAME ""Cling""; !define COMP_NAME ""CERN""; !define WEB_SITE ""http://cling.web.cern.ch/""; !define VERSION ""%s""; !define COPYRIGHT ""Copyright © 2007-2014 by the Authors; Developed by The ROOT Team, CERN and Fermilab""; !define DESCRIPTION ""Interactive C++ interpreter""; !define INSTALLER_NAME ""%s""; !define MAIN_APP_EXE ""cling.exe""; !define INSTALL_TYPE ""SetShellVarContext current""; !define PRODUCT_ROOT_KEY ""HKLM""; !define PRODUCT_KEY ""Software\\Cling"". ###############################################################################. VIProductVersion ""%s.0.0""; VIAddVersionKey ""ProductName"" ""${APP_NAME}""; VIAddVersionKey ""CompanyName"" ""${COMP_NAME}""; VIAddVersionKey ""LegalCopyright"" ""${COPYRIGHT}""; VIAddVersionKey ""FileDescription"" ""${DESCRIPTION}""; VIAddVersionKey ""FileVersion"" ""${VERSION}"". ###############################################################################. SetCompressor /SOLID Lzma; Name ""${APP_NAME}""; Caption ""${APP_NAME}""; OutFile ""${INSTALLER_NAME}""; BrandingText ""${APP_NAME}""; XPStyle on; InstallDir ""C:\\Cling\\cling-${VERSION}"". ###############################################################################; ; MUI settings; !include ""MUI.nsh"". !define MUI_ABORTWARNING; !define MUI_UNABORTWARNING; !define MUI_HEADERIMAGE. ; Theme; !define MUI_ICON ""%s\\LLVM.ico""; !define MUI_UNICON ""%s\\Contrib\\Graphics\\Icons\\orange-uninstall.ico"". !insertmacro MUI_PAGE_WELCOME. !define MUI_LICENSEPAGE_TEXT_BOTTOM ""The source code for Cling is freely redistributable under the terms of the GNU Lesser General Public License (LGPL) as published by the Free Software Foundation.""; !define MUI_LICENSEPAGE_BUTTON ""Next >""; !insertmacro MUI_PAGE_LICENSE ""%s"". !insertmacro MUI_PAGE_DIRECTORY. !insertmacro MUI_PAGE_INSTFILES. !define MUI_FINISHPAGE_RUN ""$INSTDIR\\bin\\${MAIN_APP_EXE}""; !insertmacro MUI_PAGE_FINISH. !insertmacro MUI_UNPAGE_CONFIRM. !insertmacro MUI_UNPAGE_INSTFILES. !insertmacro MUI_UNPAGE_FINISH. !insertmacro MUI_LANGUAGE ""Engli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1056,Install,InstallDir,1056,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Install'],['InstallDir']
Deployability," GrP6); - [Graphs in logarithmic scale](\ref GrP7); - [Highlight mode for graph](\ref GrP8). \anchor GrP0; ### Introduction. Graphs are drawn via the painter `TGraphPainter` class. This class; implements techniques needed to display the various kind of; graphs i.e.: `TGraph`, `TGraphErrors`, `TGraphBentErrors` and `TGraphAsymmErrors`. To draw a graph `graph` it's enough to do:. graph->Draw(""AL"");. The option `AL` in the `Draw()` method means:. 1. The axis should be drawn (option `A`),; 2. The graph should be drawn as a simple line (option `L`). By default a graph is drawn in the current pad in the current coordinate system.; To define a suitable coordinate system and draw the axis the option; `A` must be specified. `TGraphPainter` offers many options to paint the various kind of graphs. It is separated from the graph classes so that one can have graphs without the; graphics overhead, for example in a batch program. When a displayed graph is modified, there is no need to call `Draw()` again; the; image will be refreshed the next time the pad will be updated. A pad is updated; after one of these three actions:. 1. a carriage return on the ROOT command line,; 2. a click inside the pad,; 3. a call to `TPad::Update`. \anchor GrP1; ### Graphs' plotting options; Graphs can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |; | ""I"" | Combine with option 'A' it draws invisible axis |; | ""L"" | A simple polyline is drawn |; | ""F"" | A fill area is drawn ('CF' draw a smoothed fill area) |; | ""C"" | A smooth Curve is drawn |; | ""*"" | A Star is plotted at each point |; | ""P"" | The current marker is plotted at each point |; | ""B"" | A Bar chart is drawn |; | ""1"" | When a graph is drawn as a bar chart, this option makes the bars start from the bottom of the pad. By default they start at 0. |; | ""X+"" | The X-axis is drawn on the top side o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:1665,update,updated,1665,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,1,['update'],['updated']
Deployability," Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of architecture slices; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd-v3; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-abi-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undef",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:3050,install,install-name,3050,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['install'],['install-name']
Deployability," Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NeymanConstruction; \ingroup Roostats. NeymanConstruction is a concrete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to create the SamplingDistribution of a user-; defined test statistic for each parameter point of interest,; - defining the acceptance region in the data by finding the thresholds on the; t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:1140,configurat,configurations,1140,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,1,['configurat'],['configurations']
Deployability," TClonesArray is an array of TTrack objects,; this function will create one subbranch for each data member of; the object TTrack. \anchor fillthetree; ## Fill the Tree. A TTree instance is filled with the invocation of the TTree::Fill method:; ~~~ {.cpp}; tree.Fill(); ~~~; Upon its invocation, a loop on all defined branches takes place that for each branch invokes; the TBranch::Fill method. \anchor addcoltoexistingtree; ## Add a column to an already existing Tree. You may want to add a branch to an existing tree. For example,; if one variable in the tree was computed with a certain algorithm,; you may want to try another algorithm and compare the results.; One solution is to add a new branch, fill it, and save the tree.; The code below adds a simple branch to an existing tree.; Note the kOverwrite option in the Write method, it overwrites the; existing tree. If it is not specified, two copies of the tree headers; are saved.; ~~~ {.cpp}; void tree3AddBranch() {; TFile f(""tree3.root"", ""update"");. Float_t new_v;; auto t3 = f->Get<TTree>(""t3"");; auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");. Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3. for (Long64_t i = 0; i < nentries; i++) {; new_v = gRandom->Gaus(0, 1);; newBranch->Fill();; }. t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; }; ~~~; It is not always possible to add branches to existing datasets stored in TFiles: for example,; these files might not be writeable, just readable. In addition, modifying in place a TTree; causes a new TTree instance to be written and the previous one to be deleted.; For this reasons, ROOT offers the concept of friends for TTree and TChain:; if is good practice to rely on friend trees rather than adding a branch manually. \anchor fullexample; ## An Example. Begin_Macro; ../../../tutorials/tree/tree.C; End_Macro. ~~~ {.cpp}; // A simple example with histograms and a tree; //; // This program creates :; // - a one dimen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:11133,update,update,11133,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['update'],['update']
Deployability," TEfficiency::Draw method.; At the moment drawing is only supported for 1- and 2-dimensional TEfficiency objects.; In the 1-dimensional case, you can use the same options as for the TGraphAsymmErrors::Draw; method. For 2-dimensional TEfficiency objects, you can pass the same options as; for a TH2::Draw object. \anchor EFF064; ### VI.4 TEfficiency object's axis customisation; The axes of a TEfficiency object can be accessed and customised by calling the; GetPaintedGraph method and then GetXaxis() or GetYaxis() and the corresponding TAxis; methods.; Note that in order to access the painted graph via GetPaintedGraph(), one should either; call Paint or, better, gPad->Update(). Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);; c1->Divide(2,1);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }; c1->cd(1);; pEff->Draw(""AP"");; c1->cd(2);; pEff->Draw(""AP"");; gPad->Update();; pEff->GetPaintedGraph()->GetXaxis()->SetTitleSize(0.05);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelFont(42);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelSize(0.05);; pEff->GetPaintedGraph()->GetYaxis()->SetTitleOffset(0.85);; pEff->GetPaintedGraph()->GetYaxis()->SetTitleSize(0.05);; pEff->GetPaintedGraph()->GetYaxis()->SetLabelFont(42);; pEff->GetPaintedGraph()->GetYaxis()->SetLabelSize(0.05);; pEff->GetPaintedGraph()->GetXaxis()->SetRangeUser(3,7);; }; End_Macro. */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor; ///; /// Should not be used explicitly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:25789,Update,Update,25789,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['Update'],['Update']
Deployability," The header file name is the fully qualified name of the class after all the special characters; /// ""<>,:"" are replaced by underscored. For example for std::pair<edm::Vertex,int> the file name is; /// pair_edm__Vertex_int_.h; ///; /// In the generated classes, map, multimap when the first template parameter is a class; /// are replaced by a vector of pair. set and multiset when the tempalte parameter; /// is a class are replaced by a vector. This is required since we do not have the; /// code needed to order and/or compare the object of the classes.; /// This is a quick explanation of the options available:; /// Option | Details; /// -------|--------; /// new (default) | A new directory dirname is created. If dirname already exist, an error message is printed and the function returns.; /// recreate | If dirname does not exist, it is created (like in ""new""). If dirname already exist, all existing files in dirname are deleted before creating the new files.; /// update | New classes are added to the existing directory. Existing classes with the same name are replaced by the new definition. If the directory dirname doest not exist, same effect as ""new"".; /// genreflex | Use genreflex rather than rootcint to generate the dictionary.; /// par | Create a PAR file with the minimal set of code needed to read the content of the ROOT file. The name of the PAR file is basename(dirname), with extension '.par' enforced; the PAR file will be created at dirname(dirname).; ///; /// If, in addition to one of the 3 above options, the option ""+"" is specified,; /// the function will generate:; /// - a script called MAKEP to build the shared lib; /// - a dirnameLinkDef.h file; /// - rootcint will be run to generate a dirnameProjectDict.cxx file; /// - dirnameProjectDict.cxx will be compiled with the current options in compiledata.h; /// - a shared lib dirname.so will be created.; /// If the option ""++"" is specified, the generated shared lib is dynamically; /// linked with the current exe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1763,update,update,1763,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['update'],['update']
Deployability," XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BMP, ICO.; *; * 7. Image quantization to arbitrary size colormap.; *; * 8. libAfterImage could be used without X window system, which is; * coninient for such thing as web development. XML Image manipulation; * tool, that could be used in such activity is included (see ascompose.c); *; * 9. Image reference counting; *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at compilation time - libAfterImage; * will use extract from libAfterBase included with libAfterImage.; *; * SEE ALSO; * Examples; * API Reference; *; * TODO; * Implement support for Targa and PCX image format and maybe some other; * formats as well.; *; * Implement complete support for I18N internationalization.; *; * Implement color<->pixel conversion for all colordepths.; *; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *********/; /****h* libAfterImage/Examples; * EXAMPLE; * ASView - image loading from the file and displaying in window.; * ASScale - image loading from file and scaling to arbitrary size.; * ASTile - image loading from file, tiling and tinting to arbitrary; * size and color.; * ASMerge - imgae loading and merging with another image.; * ASGrad - mutlipoint gradient drawing.; * ASFlip - image loading from file and rotation.; * ASText - trexturized semitransparent antialised text drawing.; *;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:5320,configurat,configuration,5320,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['configurat'],['configuration']
Deployability," Z; value found via a linear interpolation on the plane defined by the triangle above; the (X,Y) coordinates of the bin center. The existing (X,Y,Z) points can be randomly scattered.; The Delaunay triangles are build in the (X,Y) plane. These 2D triangles are then; used to define flat planes in (X,Y,Z) over which the interpolation is done to fill; the 2D histogram. The 3D triangles int takes build a 3D surface in; the form of tessellating triangles at various angles. The triangles found can be; drawn in 3D with one of the TGraph2D specific drawing options. The histogram generated by the Delaunay interpolation can be accessed using the; `GetHistogram()` method. The axis settings (title, ranges etc ...) can be changed accessing the axis via; the GetXaxis GetYaxis and GetZaxis methods. They access the histogram axis created; at drawing time only. Therefore they should called after the TGraph2D is drawn:. ~~~ {.cpp}; auto g = new TGraph2D();. [...]. g->Draw(""tri1"");; gPad->Update();; g->GetXaxis()->SetTitle(""X axis title"");; ~~~. \anchor G2D02; ## Examples. \anchor G2D021; ### SURF1 Example. Begin_Macro(source); {; auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,400);; Double_t x, y, z, P = 6.;; Int_t np = 200;; auto dt = new TGraph2D();; dt->SetTitle(""Graph title; X axis title; Y axis title; Z axis title"");; auto r = new TRandom();; for (Int_t N=0; N<np; N++) {; x = 2*P*(r->Rndm(N))-P;; y = 2*P*(r->Rndm(N))-P;; z = (sin(x)/x)*(sin(y)/y)+0.2;; dt->SetPoint(N,x,y,z);; }; gStyle->SetPalette(1);; dt->Draw(""surf1"");; }; End_Macro. \anchor G2D022; ### Fitting Example. 2D graphs can be fitted as shown by the following example:. Begin_Macro(source); ../../../tutorials/fit/graph2dfit.C; End_Macro. \anchor G2D023; ### PCOL Example. Example showing the PCOL option. Begin_Macro(source); {; auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,400);; Double_t P = 5.;; Int_t npx = 20 ;; Int_t npy = 20 ;; Double_t x = -P;; Double_t y = -P;; Double_t z;; Int_t k = 0;; Double_t dx = (2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:4224,Update,Update,4224,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['Update'],['Update']
Deployability," ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the prox",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4305,Integrat,Integrated,4305,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Integrat'],['Integrated']
Deployability," a progress bar](\ref progressbar); - [Working with missing values in the dataset](\ref missing-values); - [Efficient analysis in Python](\ref python); - <a class=""el"" href=""classROOT_1_1RDataFrame.html#reference"" onclick=""javascript:toggleInherit('pub_methods_classROOT_1_1RDF_1_1RInterface')"">Class reference</a>. \anchor cheatsheet; ## Cheat sheet; These are the operations which can be performed with RDataFrame. ### Transformations; Transformations are a way to manipulate the data. | **Transformation** | **Description** |; |------------------|--------------------|; | Alias() | Introduce an alias for a particular column name. |; | DefaultValueFor() | If the value of the input column is missing, provide a default value instead. |; | Define() | Create a new column in the dataset. Example usages include adding a column that contains the invariant mass of a particle, or a selection of elements of an array (e.g. only the `pt`s of ""good"" muons). |; | DefinePerSample() | Define a new column that is updated when the input sample changes, e.g. when switching tree being processed in a chain. |; | DefineSlot() | Same as Define(), but the user-defined function must take an extra `unsigned int slot` as its first parameter. `slot` will take a different value, `0` to `nThreads - 1`, for each thread of execution. This is meant as a helper in writing thread-safe Define() transformation when using RDataFrame after ROOT::EnableImplicitMT(). DefineSlot() works just as well with single-thread execution: in that case `slot` will always be `0`. |; | DefineSlotEntry() | Same as DefineSlot(), but the entry number is passed in addition to the slot number. This is meant as a helper in case the expression depends on the entry number. For details about entry numbers in multi-threaded runs, see [here](\ref helper-cols). |; | Filter() | Filter rows based on user-defined conditions. |; | FilterAvailable() | Specialized Filter. If the value of the input column is available, keep the entry, otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:3808,update,updated,3808,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['update'],['updated']
Deployability," a threshold function; TF1* f2 = new TF1(""thres"",""0.8"",0,10);; f2->SetLineColor(kRed);; //add it to the list of functions; //use add first because the parameters of the last function will be displayed; pEff->GetListOfFunctions()->AddFirst(f2);. pEff->Draw(""AP"");; }; End_Macro. \anchor EFF063; ### VI.3 Draw a TEfficiency object; A TEfficiency object can be drawn by calling the usual TEfficiency::Draw method.; At the moment drawing is only supported for 1- and 2-dimensional TEfficiency objects.; In the 1-dimensional case, you can use the same options as for the TGraphAsymmErrors::Draw; method. For 2-dimensional TEfficiency objects, you can pass the same options as; for a TH2::Draw object. \anchor EFF064; ### VI.4 TEfficiency object's axis customisation; The axes of a TEfficiency object can be accessed and customised by calling the; GetPaintedGraph method and then GetXaxis() or GetYaxis() and the corresponding TAxis; methods.; Note that in order to access the painted graph via GetPaintedGraph(), one should either; call Paint or, better, gPad->Update(). Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);; c1->Divide(2,1);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }; c1->cd(1);; pEff->Draw(""AP"");; c1->cd(2);; pEff->Draw(""AP"");; gPad->Update();; pEff->GetPaintedGraph()->GetXaxis()->SetTitleSize(0.05);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelFont(42);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelSize(0.05);; pEff->GetPaintedGraph()->GetYaxis()->SetTitleOffset(0.85);; pEff->GetP",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:25097,Update,Update,25097,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['Update'],['Update']
Deployability," and all fit parameters (the; template fractions) declared (initially unbounded). ## Applying constraints; Fit parameters can be constrained through. fit->Constrain(parameter #, lower bound, upper bound);. Setting lower bound = upper bound = 0 removes the constraint (a la Minuit);; however, a function. fit->Unconstrain(parameter #). is also provided to simplify this. ## Setting parameter values; The function. ROOT::Fit::Fitter* fitter = fit->GetFitter();. is provided for direct access to the ROOT::Fit::Fitter object. This allows to; set and fix parameter values, limits and set step sizes directly via. fitter->Config().ParSettings(parameter #).Set(const std::string &name, double value, double step, double lower, double upper);. ## Restricting the fit range; The fit range can be restricted through. fit->SetRangeX(first bin #, last bin #);; and freed using. fit->ReleaseRangeX();; For 2D histograms the Y range can be similarly restricted using. fit->SetRangeY(first bin #, last bin #);; fit->ReleaseRangeY();; and for 3D histograms also. fit->SetRangeZ(first bin #, last bin #);; fit->ReleaseRangeZ();; It is also possible to exclude individual bins from the fit through. fit->ExcludeBin(bin #);; where the given bin number is assumed to follow the TH1::GetBin() numbering.; Any bins excluded in this way can be included again using the corresponding. fit->IncludeBin(bin #);. ## Weights histograms; Weights histograms (for a motivation see the above publication) can be specified; for the individual MC sources through. fit->SetWeight(parameter #, pointer to weights histogram);; and unset by specifying a null pointer. ## Obtaining fit results; The fit is carried out through. Int_t status = fit->Fit();; where status is the code returned from the ""MINIMIZE"" command. For fits; that converged, parameter values and errors can be obtained through. fit->GetResult(parameter #, value, error);; and the histogram corresponding to the total Monte Carlo prediction (which; is not the same as a s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:3709,Release,ReleaseRangeY,3709,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Release'],['ReleaseRangeY']
Deployability," be forwarded to the hasher type:; /// * decltype(std::declval<HasherT &>().final()) final(); /// * decltype(std::declval<HasherT &>().result()) result(); ///; /// From a user point of view, the interface provides the following:; /// * `template<typename T> add(const T &Value)`; /// The `add` function implements hashing of various types.; /// * `template <typename ItT> void addRange(ItT First, ItT Last)`; /// The `addRange` function is designed to aid hashing a range of values.; /// It explicitly adds the size of the range in the hash.; /// * `template <typename ItT> void addRangeElements(ItT First, ItT Last)`; /// The `addRangeElements` function is also designed to aid hashing a range of; /// values. In contrast to `addRange`, it **ignores** the size of the range,; /// behaving as if elements were added one at a time with `add`.; ///; /// User-defined `struct` types can participate in this interface by providing; /// an `addHash` templated function. See the associated template specialization; /// for details.; ///; /// This interface does not impose requirements on the hasher; /// `update(ArrayRef<uint8_t> Data)` method. We want to avoid collisions for; /// variable-size types; for example for; /// ```; /// builder.add({1});; /// builder.add({2, 3});; /// ```; /// and; /// ```; /// builder.add({1, 2});; /// builder.add({3});; /// ```; /// . Thus, specializations of `add` and `addHash` for variable-size types must; /// not assume that the hasher type considers the size as part of the hash; they; /// must explicitly add the size to the hash. See for example specializations; /// for `ArrayRef` and `StringRef`.; ///; /// Additionally, since types are eventually forwarded to the hasher's; /// `void update(ArrayRef<uint8_t>)` method, endianness plays a role in the hash; /// computation (for example when computing `add((int)123)`).; /// Specifiying a non-`native` `Endianness` template parameter allows to compute; /// stable hash across platforms with different endianness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:1577,update,update,1577,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['update'],['update']
Deployability," calculated, or because constant parameters have; /// changed value or parameters have changed const/float status, the minimum is recalculated. void RooStats::HistFactory::RooBarlowBeestonLL::validateAbsMin() const; {; // Check if constant status of any of the parameters have changed; if (_absMinValid) {; _piter->Reset() ;; RooAbsArg* par ;; while((par=(RooAbsArg*)_piter->Next())) {; if (_paramFixed[par->GetName()] != par->isConstant()) {; cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") constant status of parameter "" << par->GetName() << "" has changed from ""; << (_paramFixed[par->GetName()]?""fixed"":""floating"") << "" to "" << (par->isConstant()?""fixed"":""floating""); << "", recalculating absolute minimum"" << endl ;; _absMinValid = false ;; break ;; }; }; }. // If we don't have the absolute minimum w.r.t all observables, calculate that first; if (!_absMinValid) {. cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") determining minimum likelihood for current configurations w.r.t all observable"" << endl ;. // Save current values of non-marginalized parameters; std::unique_ptr<RooArgSet> obsStart{(RooArgSet*) _obs.snapshot(false)};. // Start from previous global minimum; if (_paramAbsMin.size()>0) {; const_cast<RooSetProxy&>(_par).assignValueOnly(_paramAbsMin) ;; }; if (_obsAbsMin.size()>0) {; const_cast<RooSetProxy&>(_obs).assignValueOnly(_obsAbsMin) ;; }. // Find minimum with all observables floating; const_cast<RooSetProxy&>(_obs).setAttribAll(""Constant"",false) ;; _minuit->migrad() ;. // Save value and remember; _absMin = _nll ;; _absMinValid = true ;. // Save parameter values at abs minimum as well; _paramAbsMin.removeAll() ;. // Only store non-constant parameters here!; std::unique_ptr<RooArgSet> tmp{(RooArgSet*) _par.selectByAttrib(""Constant"",false)};; _paramAbsMin.addClone(*tmp) ;. _obsAbsMin.addClone(_obs) ;. // Save constant status of all parameters; _piter->Reset() ;; R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1276,configurat,configurations,1276,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,1,['configurat'],['configurations']
Deployability," can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9482,integrat,integrator,9482,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrator']
Deployability," containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the current class's name,; <tt>%SRCFILE%</tt> and <tt>%INCFILE%</tt> by the name of the source and header file, resp.; (as given by <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetImplFileName()</a>,; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetImplFileLine"">TClass::GetDeclFileName()</a>).; If the header is not generated for a class, they will be replaced by """".</p>. <p>Root's footer starts with the tag &lt;!--SIGNATURE--&gt;. It includes the; author(s), last update, copyright, the links to the Root home page, to the; user home page, to the index file (ClassIndex.html), to the top of the page; and <tt>this page is automatically generated</tt> information. It ends with the; tags <tt>&lt;/body&gt;&lt;/html&gt;</tt>. If you want to replace it,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will search for some; tags in your footer: Occurrences of the strings <tt>%AUTHOR%</tt>, <tt>%UPDATE%</tt>, and; <tt>%COPYRIGHT%</tt> are replaced by their; corresponding values before writing the html file. The <tt>%AUTHOR%</tt> tag will be; replaced by the exact string that follows Root.Html.Author, no link; generation will occur.</p>. <h4><a name=""conf:search"">II.7 Links to searches, home page, ViewVC</a></h4>. <p>Additional parameters can be set by Root.Html.Homepage (address of the; user's home page), Root.Html.SearchEngine (search engine for the class; documentation), Root.Html.Search (search URL, where %u is replaced by the; referer and %s by the escaped search expression",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:10805,update,update,10805,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['update'],['update']
Deployability," data.; ///; /// ### Input:; /// a,b: One-dimensional arrays of length na, nb, respectively.; /// The elements of a and b must be given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; /// ib++;; /// if (ib > nb) {ok = kTRUE; break;}; /// } else {; /// rdiff += sb - sa;; /// ia++;; /// ib++;; /// if ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1299,integrat,integrated,1299,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['integrat'],['integrated']
Deployability," defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-version: 0 # Optional: defaults to 0; objc-constraint: none # Optional: defaults to none; exports: # List of export sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols; */; /*. YAML Format specification. --- !tapi-tbd-v2; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:1515,install,install-name,1515,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['install'],['install-name']
Deployability," editor usage is the following :. - you can write C expressions made of leaf names by hand or you can insert; any item from the right panel by clicking on it (recommandable);; - you can click on other expressions/leaves to paste them in the editor;; - you should write the item alias by hand since it not only make the; expression meaningful, but it also highly improve the layout for big; expressions; - you may redefine an old alias - the other expressions depending on it will; be modified accordingly. An alias must not be the leading string of other; aliases. When Draw commands are issued, the name of the corresponding; histogram axes will become the aliases of the expressions. User commands can be issued directly from the textbox labeled ""Command""; from the upper-left toolbar by typing and pressing Enter at the end. Another way is from the right panel context menu : ExecuteCommand.; All commands can be interrupted at any time by pressing the STOP button; from the bottom-left; You can toggle recording of the current command in the history file by; checking the Rec button from the top-right. ### Context menus. You can activate context menus by right-clicking on items or inside the; right panel. Context menus for mapped items from the left tree-type list :; The items from the left that are provided with context menus are tree and; branch items. You can directly activate the *MENU* marked methods of TTree; from this menu. Context menu for the right panel:. A general context menu is activated if the user right-clicks the right panel. Commands are :; - EmptyAll : clears the content of all expressions;; - ExecuteCommand : execute a ROOT command;; - MakeSelector : equivalent of TTree::MakeSelector();; - NewExpression : add an expression item in the right panel;; - Process : equivalent of TTree::Process();; - SaveSource : save the current session as a C++ macro;; - SetScanFileName : define a name for the file where TTree::Scan command; is redirected when the `<Scan>` button ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:5704,toggle,toggle,5704,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['toggle'],['toggle']
Deployability," example:. Begin_Macro(source); {; auto c0 = new TCanvas(""c1"",""multigraph L3"",200,10,700,500);. auto mg = new TMultiGraph();. auto gr1 = new TGraph(); gr1->SetLineColor(kBlue);; auto gr2 = new TGraph(); gr2->SetLineColor(kRed);; auto gr3 = new TGraph(); gr3->SetLineColor(kGreen);; auto gr4 = new TGraph(); gr4->SetLineColor(kOrange);. Double_t dx = 6.28/1000;; Double_t x = -3.14;. for (int i=0; i<=1000; i++) {; x = x+dx;; gr1->SetPoint(i,x,2.*TMath::Sin(x));; gr2->SetPoint(i,x,TMath::Cos(x));; gr3->SetPoint(i,x,TMath::Cos(x*x));; gr4->SetPoint(i,x,TMath::Cos(x*x*x));; }. mg->Add(gr4); gr4->SetTitle(""Cos(x*x*x)""); gr4->SetLineWidth(3);; mg->Add(gr3); gr3->SetTitle(""Cos(x*x)"") ; gr3->SetLineWidth(3);; mg->Add(gr2); gr2->SetTitle(""Cos(x)"") ; gr2->SetLineWidth(3);; mg->Add(gr1); gr1->SetTitle(""2*Sin(x)"") ; gr1->SetLineWidth(3);. mg->SetTitle(""Multi-graph Title; X-axis Title; Y-axis Title"");. mg->Draw(""a fb l3d"");. mg->GetHistogram()->GetXaxis()->SetRangeUser(0.,2.5);; gPad->Modified();; gPad->Update();; }; End_Macro. \anchor MG01d; #### Legend drawing. The method TPad::BuildLegend is able to extract the graphs inside a; multigraph. The following example demonstrate this. Begin_Macro(source); {; auto c3 = new TCanvas(""c3"",""c3"",600, 400);. auto mg = new TMultiGraph(""mg"",""mg"");. const Int_t size = 10;. double px[size];; double py1[size];; double py2[size];; double py3[size];. for ( int i = 0; i < size ; ++i ) {; px[i] = i;; py1[i] = size - i;; py2[i] = size - 0.5 * i;; py3[i] = size - 0.6 * i;; }. auto gr1 = new TGraph( size, px, py1 );; gr1->SetName(""gr1"");; gr1->SetTitle(""graph 1"");; gr1->SetMarkerStyle(21);; gr1->SetDrawOption(""AP"");; gr1->SetLineColor(2);; gr1->SetLineWidth(4);; gr1->SetFillStyle(0);. auto gr2 = new TGraph( size, px, py2 );; gr2->SetName(""gr2"");; gr2->SetTitle(""graph 2"");; gr2->SetMarkerStyle(22);; gr2->SetMarkerColor(2);; gr2->SetDrawOption(""P"");; gr2->SetLineColor(3);; gr2->SetLineWidth(4);; gr2->SetFillStyle(0);. auto gr3 = new TGraph( size, px, py3 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:3136,Update,Update,3136,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['Update'],['Update']
Deployability," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1797,integrat,integrate,1797,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,2,['integrat'],['integrate']
Deployability," files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get list of files to process and process them; /// 1 get the list of files to be scanned and return it in flist; /// 2 process the files in flist (according to sopt); /// When defined flist is under the responsability the caller.; ///; /// If avgsz > 0 it is used for the final update of the dataset global counters.; ///; /// If 'mss' is defined use it to initialize the stager (instead of the Url in the; /// TFileInfo objects); ///; /// If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; /// all files marked as 'staged' are still open or touched); ///; /// Return code; /// 1 dataset was not changed; /// 2 dataset was changed; ///; /// The number of touched, opened and disappeared files are returned in the respective; /// variables, if these are defined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:2272,update,update,2272,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['update'],['update']
Deployability," for C++-style I/O for; * basic data types (bool, char, short, int, long, long long, float, double; * and their unsigned counterparts). Data is transmitted binary (i.e. no; * formatting to strings like std::cout does). There are also overloads to; * support C-style zero terminated strings and std::string. In terms of; * performance, the former is to be preferred.; *; * If the caller needs to multiplex input and output to/from several pipes, the; * class provides the poll() method which allows to block until an event occurs; * on any of the polled pipes.; *; * After the BidirMMapPipe is closed, no further operations may be performed on; * that object, save for the destructor which may still be called.; *; * If the BidirMMapPipe has not properly been closed, the destructor will call; * close. However, the exit code of the child is lost in that case.; *; * Closing the object causes the mmapped memory to be unmapped and the two; * pipes to be closed. We also install an atexit handler in the process of; * creating BidirMMapPipes. This ensures that when the current process; * terminates, a SIGTERM signal is sent to the child processes created for all; * unclosed pipes to avoid leaving zombie processes in the OS's process table.; *; * BidirMMapPipe creation, closing and destruction are thread safe. If the; * BidirMMapPipe is used in more than one thread, the other operations have to; * be protected with a mutex (or something similar), though.; *; * End of file (other end closed its pipe, or died) is indicated with the eof(); * method, serious I/O errors set a flags (bad(), fail()), and also throw; * exceptions. For normal read/write operations, they can be suppressed (i.e.; * error reporting only using flags) with a constructor argument.; *; * Technicalities:; * - there is a pool of mmapped pages, half the pages are allocated to the; * parent process, half to the child; * - when one side has accumulated enough data (or a flush forces dirty pages; * out to the other end), i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:2615,install,install,2615,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['install'],['install']
Deployability," in new ASImage( see asimage_start(); * for more ).; * RETURN VALUE; * Pointer to newly allocated and initialized ASImage structure on; * Success. NULL in case of any kind of error - that should never happen.; *********/; /****f* libAfterImage/asimage/clone_asimage(); * NAME ; * clone_asimage(); * SYNOPSIS; * ASImage *clone_asimage(ASImage *src, ASFlagType filter );; * INPUTS; * src - original ASImage.; * filter - bitmask of channels to be copied from one image to another.; * RETURN VALUE; * New ASImage, as a copy of original image.; * DESCRIPTION; * Creates exact clone of the original ASImage, with same compression,; * back_color and rest of the attributes. Only ASImage data will be; * carried over. Any attached alternative forms of images (XImages, etc.); * will not be copied. Any channel with unset bit in filter will not be; * copied. Image name, ASImageManager and ref_count will not be copied -; * use store_asimage() afterwards and make sure you use different name,; * to avoid clashes with original image.; *********/; /****f* libAfterImage/asimage/destroy_asimage(); * NAME; * destroy_asimage() frees all the memory allocated for specified ASImage. ; * SYNOPSIS; * void destroy_asimage( ASImage **im );; * INPUTS; * im				- pointer to valid ASImage structure.; * NOTES; * If there was XImage attached to it - it will be deallocated as well.; * EXAMPLE; * asview.c: ASView.5; *********/; /****f* libAfterImage/asimage/asimage_replace(); * NAME; * asimage_replace() will replace ASImage's data using data from ; * another ASImage; * SYNOPSIS; * Bool asimage_replace (ASImage *im, ASImage *from);; * INPUTS; * im				- pointer to valid ASImage structure.; * from				- pointer to ASImage from which to take the data.; * NOTES; * this function updates image without reallocating structure itself, which ; * means that all pointers to it will still be valid. If that function ; * succeeds - [from] ASImage will become unusable and should be deallocated ; * using free() call.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:3760,update,updates,3760,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['update'],['updates']
Deployability," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1260,install,installed,1260,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,5,['install'],"['installation', 'installed']"
Deployability," it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2681,Continuous,Continuous,2681,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Continuous'],['Continuous']
Deployability," iterations and exploits ILP via compiler transformations.; //; // There are multiple methods for analyzing a loop and creating a schedule.; // An example algorithm is Swing Modulo Scheduling (implemented by the; // MachinePipeliner). The details of how a schedule is arrived at are irrelevant; // for the task of actually rewriting a loop to adhere to the schedule, which; // is what this file does.; //; // A schedule is, for every instruction in a block, a Cycle and a Stage. Note; // that we only support single-block loops, so ""block"" and ""loop"" can be used; // interchangably.; //; // The Cycle of an instruction defines a partial order of the instructions in; // the remapped loop. Instructions within a cycle must not consume the output; // of any instruction in the same cycle. Cycle information is assumed to have; // been calculated such that the processor will execute instructions in; // lock-step (for example in a VLIW ISA).; //; // The Stage of an instruction defines the mapping between logical loop; // iterations and pipelined loop iterations. An example (unrolled) pipeline; // may look something like:; //; // I0[0] Execute instruction I0 of iteration 0; // I1[0], I0[1] Execute I0 of iteration 1 and I1 of iteration 1; // I1[1], I0[2]; // I1[2], I0[3]; //; // In the schedule for this unrolled sequence we would say that I0 was scheduled; // in stage 0 and I1 in stage 1:; //; // loop:; // [stage 0] x = I0; // [stage 1] I1 x (from stage 0); //; // And to actually generate valid code we must insert a phi:; //; // loop:; // x' = phi(x); // x = I0; // I1 x'; //; // This is a simple example; the rules for how to generate correct code given; // an arbitrary schedule containing loop-carried values are complex.; //; // Note that these examples only mention the steady-state kernel of the; // generated loop; prologs and epilogs must be generated also that prime and; // flush the pipeline. Doing so is nontrivial.; //; //===-------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:1516,pipeline,pipelined,1516,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['pipeline'],['pipelined']
Deployability," look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi</tt> appears in the source file.; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7954,configurat,configuration,7954,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['configurat'],['configuration']
Deployability," method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * model.fitTo(data, IntegrateBins(>0.));; * ```; *; * \see RooAbsPdf::fitTo(); * \see IntegrateBins(); *; * \note This feature is currently limited to one-dimensional PDFs.; *; *; * \htmlonly <style>div.image img[src=""RooBinSamplingPdf_OFF.png""]{width:12cm;}</style> \endhtmlonly; * \htmlonly <style>div.image img[src=""RooBinSamplingPdf_ON.png"" ]{width:12cm;}</style> \endhtmlonly; * <table>; * <tr><th> Binned fit without %RooBinSamplingPdf <th> Binned fit with %RooBinSamplingPdf </td></tr>; * <tr><td> \image html RooBinSamplingPdf_OFF.png """"; * </td>; * <td> \image html RooBinSamplingPdf_ON.png """"; * </td></tr>; * </table>; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:3438,integrat,integration,3438,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,5,"['Integrat', 'integrat']","['IntegrateBins', 'integrate', 'integration']"
Deployability," not model those delays because they are irrelevant as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// currently handled by the legacy itinerary tables.; ///; /// A note on out-of-order execution and, more generally, instruction; /// buffers. Part of the CPU pipeline is always in-order. The issue point, which; /// is the point of reference for counting cycles, only makes sense as an; /// in-order part of the pipeline. Other parts of the pipeline are sometimes; /// falling behind and sometimes catching up. It's only interesting to model; /// those other, decoupled parts of the pipeline if they may be predictably; /// resource constrained in a way that the scheduler can exploit.; ///; /// The LLVM machine model distinguishes between in-order constraints and; /// out-of-order constraints so that the target's scheduling strategy can apply; /// appropriate heuristics. For a well-balanced CPU pipeline, out-of-order; /// resources would not typically be treated as a hard scheduling; /// constraint. For example, in the GenericScheduler, a delay caused by limited; /// out-of-order resources is not directly reflected in the number of cycles; /// that the scheduler sees between issuing an instruction and its dependent; /// instructions. In other words, out-of-order resources don't directly increase; /// the latency between pairs of instructions. However, they can still be used; /// to detect potential bottlenecks across a sequence of instructions and bi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:2484,pipeline,pipeline,2484,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['pipeline'],['pipeline']
Deployability," of entries printed; n : name of histogram is printed. For example, to print only name of histogram and number of entries do:. gStyle->SetOptStat(""ne"");. To print only the name of the histogram do:. gStyle->SetOptStat(""n"");. The default value is:. gStyle->SetOptStat(""nemr"");. When a histogram is painted, a `TPaveStats` object is created and added; to the list of functions of the histogram. If a `TPaveStats` object; already exists in the histogram list of functions, the existing object is just; updated with the current histogram parameters. Once a histogram is painted, the statistics box can be accessed using; `h->FindObject(""stats"")`. In the command line it is enough to do:. Root > h->Draw(); Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""). because after `h->Draw()` the histogram is automatically painted. But; in a script file the painting should be forced using `gPad->Update()`; in order to make sure the statistics box is created:. h->Draw();; gPad->Update();; TPaveStats *st = (TPaveStats*)h->FindObject(""stats"");. Without `gPad->Update()` the line `h->FindObject(""stats"")` returns a null pointer. When a histogram is drawn with the option `SAME`, the statistics box; is not drawn. To force the statistics box drawing with the option; `SAME`, the option `SAMES` must be used.; If the new statistics box hides the previous statistics box, one can change; its position with these lines (`h` being the pointer to the histogram):. Root > TPaveStats *st = (TPaveStats*)h->FindObject(""stats""); Root > st->SetX1NDC(newx1); //new x start position; Root > st->SetX2NDC(newx2); //new x end position. To change the type of information for an histogram with an existing; `TPaveStats` one should do:. st->SetOptStat(mode);. Where `mode` has the same meaning than when calling `gStyle->SetOptStat(mode)`; (see above). One can delete the statistics box for a histogram `TH1* h` with:. h->SetStats(0). and activate it again with:. h->SetStats(1). Labels used in the statistics box (""Mean""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:23902,Update,Update,23902,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['Update'],['Update']
Deployability," opened. In general, using this instead of GetEntries will avoid; /// opening all files in the chain which could be very costly for very; /// large number of files stored at a remote location.; ///; /// The logic depends on whether the dataset is a TTree or a TChain. In the; /// first case, it simply returns the total number of entries in the tree. In; /// the latter case, it depends on which point of the processing of the chain; /// this function is called. During most of the chain processing, this; /// function will return TTree::kMaxEntries. When the chain arrives at the; /// last file, then the function will return the accumulated total number of; /// entries in the whole chain. A notable use case where this function; /// becomes quite useful is when writing the following for loop to traverse; /// the entries in the dataset:; ///; /// \code{.cpp}; /// for(Long64_t ievent = 0; ievent < dataset.GetEntriesFast(); ievent++) {; /// // Do something with the event in the dataset; /// }; /// \endcode; ///; /// In the example above, independently on whether the dataset is a TTree or; /// a TChain, the GetEntriesFast call will provide the correct stopping; /// condition for the loop (i.e. the total number of entries). In the TChain; /// case, calling GetEntries instead would open all the files in the chain; /// upfront which could be costly.; ///; /// The functionality offered by this method can also be seen when used in; /// conjunction with LoadTree. For a call like <tt> LoadTree(ievent) </tt>,; /// the condition <tt> ievent < dataset.GetEntriesFast() </tt> is only; /// satisfied if \p ievent is strictly smaller than the total number of; /// entries in the dataset. In fact, even when the dataset is a TChain, the; /// first time LoadTree is called with an entry number that belongs to the; /// last file of the chain, this will update the internal data member of the; /// class so that the next call to GetEntriesFast returns the total number; /// of entries in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:2104,update,update,2104,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['update'],['update']
Deployability," output type; // type = 111 portrait ps; // type = 112 landscape ps; // type = 113 eps; Int_t type = 111;. // create a postscript file and set the paper size; TPostScript ps(""test.ps"",type);; ps.Range(16,24); //set x,y of printed page. // draw 3 histograms from file hsimple.root on separate pages; hpx->Draw();; c1.Update(); //force drawing in a macro; hprof->Draw();; c1.Update();; hpx->Draw(""lego1"");; c1.Update();; ps.Close();; }; ~~~. ## Making several pictures in the same Postscript file: case 2. This example shows 2 pages. The canvas is divided.; `TPostScript::NewPage` must be called before starting a new; picture.`object->Draw` does not clear the canvas in this case; because we clear only the pads and not the main canvas.; Note that `c1->Update` must be called at the end of the first picture. ~~~ {.cpp}; {; TFile *f1 = new TFile(""hsimple.root"");; TCanvas *c1 = new TCanvas(""c1"");; TPostScript *ps = new TPostScript(""file.ps"",112);; c1->Divide(2,1);; // picture 1; ps->NewPage();; c1->cd(1);; hpx->Draw();; c1->cd(2);; hprof->Draw();; c1->Update();. // picture 2; ps->NewPage();; c1->cd(1);; hpxpy->Draw();; c1->cd(2);; ntuple->Draw(""px"");; c1->Update();; ps->Close();. // invoke Postscript viewer; gSystem->Exec(""gs file.ps"");; }; ~~~. ## Making several pictures in the same Postscript file: case 3; This is the recommended way. If the Postscript file name finishes with; ""("", the file remains opened (it is not closed). If the Postscript file name; finishes with "")"" and the file has been opened with ""("", the file is closed. Example:; ~~~ {.cpp}; {; TCanvas c1(""c1"");; h1.Draw();; c1.Print(""c1.ps(""); // write canvas and keep the ps file open; h2.Draw();; c1.Print(""c1.ps""); // canvas is added to ""c1.ps""; h3.Draw();; c1.Print(""c1.ps)""); // canvas is added to ""c1.ps"" and ps file is closed; }; ~~~; The `TCanvas::Print(""file.ps("")` mechanism is very useful, but it can; be a little inconvenient to have the action of opening/closing a file being; atomic with printing a page. Particu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:5139,Update,Update,5139,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['Update'],['Update']
Deployability," please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:1220,Configurat,Configuration,1220,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['Configurat'],['Configuration']
Deployability," plotted in an empty frame, it; /// will show a unit normalized curve in the frame variable, taken at the present value; /// of other observables defined for this PDF.; ///; /// \param[in] frame pointer to RooPlot; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; ///; /// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""}, {&jetCategory, ""3jet""}});; /// ```; ///; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1129,integrat,integrating,1129,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrating']
Deployability," requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2..Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. ### References:. 1. A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2. A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:1622,integrat,integration,1622,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,5,['integrat'],['integration']
Deployability," should be released before execution; // ends.; // - If a handle is released, it should not be released again.; // - If a handle is released, it should not be used for other purposes; // such as I/O.; //; // In this checker, each tracked handle is associated with a state. When the; // handle variable is passed to different function calls or syscalls, its state; // changes. The state changes can be generally represented by following ASCII; // Art:; //; //; // +-------------+ +------------+; // acquire_func succeeded | | Escape | |; // +-----------------> Allocated +---------> Escaped <--+; // | | | | | |; // | +-----+------++ +------------+ |; // | | | |; // acquire_func | release_func | +--+ |; // failed | | | handle +--------+ |; // +---------+ | | | dies | | |; // | | | +----v-----+ +---------> Leaked | |; // | | | | | |(REPORT)| |; // | +----------+--+ | Released | Escape +--------+ |; // | | | | +---------------------------+; // +--> Not tracked | +----+---+-+; // | | | | As argument by value; // +----------+--+ release_func | +------+ in function call; // | | | or by reference in; // | | | use_func call; // unowned | +----v-----+ | +-----------+; // acquire_func | | Double | +-----> Use after |; // succeeded | | released | | released |; // | | (REPORT) | | (REPORT) |; // +---------------+ +----------+ +-----------+; // | Allocated |; // | Unowned | release_func; // | +---------+; // +---------------+ |; // |; // +-----v----------+; // | Release of |; // | unowned handle |; // | (REPORT) |; // +----------------+; //; // acquire_func represents the functions or syscalls that may acquire a handle.; // release_func represents the functions or syscalls that may release a handle.; // use_func represents the functions or syscall that requires an open handle.; //; // If a tracked handle dies in ""Released"" or ""Not Tracked"" state, we assume it; // is properly used. Otherwise a bug and will be reported.; //; // Note that, the analyzer does not always know for sure if a fun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp:1382,Release,Released,1382,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,4,"['Release', 'release']","['Release', 'Released', 'released']"
Deployability," special A4 format permitting the full; usage of the A4 area; in this case larger margins are not necessary; and Type=1 or 2 can be used.; - 3 : Encapsulated PostScript. This Type permits the generation of files; which can be included in other documents, for example in LaTeX files. ## Making several pictures in the same Postscript file: case 1. The following macro is an example illustrating how to open a Postscript; file and draw several pictures. The generation of a new Postscript page; is automatic when `TCanvas::Clear` is called by `object->Draw()`. ~~~ {.cpp}; {; TFile f(""hsimple.root"");; TCanvas c1(""c1"",""canvas"",800,600);. // select postscript output type; // type = 111 portrait ps; // type = 112 landscape ps; // type = 113 eps; Int_t type = 111;. // create a postscript file and set the paper size; TPostScript ps(""test.ps"",type);; ps.Range(16,24); //set x,y of printed page. // draw 3 histograms from file hsimple.root on separate pages; hpx->Draw();; c1.Update(); //force drawing in a macro; hprof->Draw();; c1.Update();; hpx->Draw(""lego1"");; c1.Update();; ps.Close();; }; ~~~. ## Making several pictures in the same Postscript file: case 2. This example shows 2 pages. The canvas is divided.; `TPostScript::NewPage` must be called before starting a new; picture.`object->Draw` does not clear the canvas in this case; because we clear only the pads and not the main canvas.; Note that `c1->Update` must be called at the end of the first picture. ~~~ {.cpp}; {; TFile *f1 = new TFile(""hsimple.root"");; TCanvas *c1 = new TCanvas(""c1"");; TPostScript *ps = new TPostScript(""file.ps"",112);; c1->Divide(2,1);; // picture 1; ps->NewPage();; c1->cd(1);; hpx->Draw();; c1->cd(2);; hprof->Draw();; c1->Update();. // picture 2; ps->NewPage();; c1->cd(1);; hpxpy->Draw();; c1->cd(2);; ntuple->Draw(""px"");; c1->Update();; ps->Close();. // invoke Postscript viewer; gSystem->Exec(""gs file.ps"");; }; ~~~. ## Making several pictures in the same Postscript file: case 3; This is the recommended way. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:4401,Update,Update,4401,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['Update'],['Update']
Deployability," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1389,install,installed,1389,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['install'],['installed']
Deployability," the control flow edges from InBB to OutBB have now been replaced, the; /// function also updates any PHINodes in OutBB. For each such PHINode, the; /// operands corresponding to incoming blocks are moved to a new PHINode in the; /// hub, and the hub is made an operand of the original PHINode.; ///; /// Input CFG:; /// ----------; ///; /// Def; /// |; /// v; /// In1 In2; /// | |; /// | |; /// v v; /// Foo ---> Out1 Out2; /// |; /// v; /// Use; ///; ///; /// Create hub: Incoming = {In1, In2}, Outgoing = {Out1, Out2}; /// ----------------------------------------------------------; ///; /// Def; /// |; /// v; /// In1 In2 Foo; /// | Hub | |; /// | + - - | - - + |; /// | ' v ' V; /// +------> Guard1 -----> Out1; /// ' | '; /// ' v '; /// ' Guard2 -----> Out2; /// ' ' |; /// + - - - - - + |; /// v; /// Use; ///; /// Limitations:; /// -----------; /// 1. This assumes that all terminators in the CFG are direct branches (the; /// ""br"" instruction). The presence of any other control flow such as; /// indirectbr, switch or callbr will cause an assert.; ///; /// 2. The updates to the PHINodes are not sufficient to restore SSA; /// form. Consider a definition Def, its use Use, incoming block In2 and; /// outgoing block Out2, such that:; /// a. In2 is reachable from D or contains D.; /// b. U is reachable from Out2 or is contained in Out2.; /// c. U is not a PHINode if U is contained in Out2.; ///; /// Clearly, Def dominates Out2 since the program is valid SSA. But when the; /// hub is introduced, there is a new path through the hub along which Use is; /// reachable from entry without passing through Def, and SSA is no longer; /// valid. To fix this, we need to look at all the blocks post-dominated by; /// the hub on the one hand, and dominated by Out2 on the other. This is left; /// for the caller to accomplish, since each specific use of this function; /// may have additional information which simplifies this fixup. For example,; /// see restoreSSA() in the UnifyLoopExits pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h:1594,update,updates,1594,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BasicBlockUtils.h,1,['update'],['updates']
Deployability," the data structures needed to scan; * convert regions. Two different scan conversion; * methods are available -- the even-odd method, and; * the winding number method.; * The even-odd rule states that a point is inside; * the polygon if a ray drawn from that point in any; * direction will pass through an odd number of; * path segments.; * By the winding number rule, a point is decided; * to be inside the polygon if a ray drawn from that; * point in any direction passes through a different; * number of clockwise and counter-clockwise path; * segments.; *; * These data structures are adapted somewhat from; * the algorithm in (Foley/Van Dam) for scan converting; * polygons.; * The basic algorithm is to start at the top (smallest y); * of the polygon, stepping down to the bottom of; * the polygon by incrementing the y coordinate. We; * keep a list of edges which the current scanline crosses,; * sorted by x. This list is called the Active Edge Table (AET); * As we change the y-coordinate, we update each entry in; * in the active edge table to reflect the edges new xcoord.; * This list must be sorted at each scanline in case; * two edges intersect.; * We also keep a data structure known as the Edge Table (ET),; * which keeps track of all the edges which the current; * scanline has not yet reached. The ET is basically a; * list of ScanLineList structures containing a list of; * edges which are entered at a given scanline. There is one; * ScanLineList per scanline at which an edge is entered.; * When we enter a new edge, we move it from the ET to the AET.; *; * From the AET, we can implement the even-odd rule as in; * (Foley/Van Dam).; * The winding number rule is a little trickier. We also; * keep the EdgeTableEntries in the AET linked by the; * nextWETE (winding EdgeTableEntry) link. This allows; * the edges to be linked just as before for updating; * purposes, but only uses the edges linked by the nextWETE; * link as edges representing spans of the polygon to; * drawn (a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:1018,update,update,1018,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['update'],['update']
Deployability," the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2827,integrat,integration,2827,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Deployability," the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, to allocate some memory for the generated code that is only released at the end of the application. This commonly results in memory usage creep in long-running applications that create many RDataFrames one after the other. Possible mitigations include creating and running each RDataFrame event loop in a sub-process, or booking all operations for all different RDataFrame computation graphs before the first event loop is triggered, so that the interpreter is invoked only once for all computation graphs:. ~~~{.cpp}; // assuming df1 and df2 are separate computation graphs, do:; auto h1 = df1.Histo1D(""x"");; auto h2 = df2.Histo1D(""y"");; h1->Draw(); // we just-in-time compile everything needed by df1 and df2 here; h2->Draw(""SAME"");. // do not:; auto h1 = df1.Histo1D(""x"");; h1->Draw(); // we just-in-time compile here; auto h2 = df2.Histo1D(""y"");; h2->Draw(""SAME""); // we just-in-time compile again here, as the second Histo1D call is new; ~~~. \anchor more-features; ## M",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:53743,release,released,53743,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['release'],['released']
Deployability," the interval used by a resource in bottom and top; /// scheduling.; ///; /// Consider an instruction that uses resources X0, X1 and X2 as follows:; ///; /// X0 X1 X1 X2 +--------+-------------+--------------+; /// |Resource|AcquireAtCycle|ReleaseAtCycle|; /// +--------+-------------+--------------+; /// | X0 | 0 | 1 |; /// +--------+-------------+--------------+; /// | X1 | 1 | 3 |; /// +--------+-------------+--------------+; /// | X2 | 3 | 4 |; /// +--------+-------------+--------------+; ///; /// If we can schedule the instruction at cycle C, we need to; /// compute the interval of the resource as follows:; ///; /// # TOP DOWN SCHEDULING; ///; /// Cycles scheduling flows to the _right_, in the same direction; /// of time.; ///; /// C 1 2 3 4 5 ...; /// ------|------|------|------|------|------|----->; /// X0 X1 X1 X2 ---> direction of time; /// X0 [C, C+1); /// X1 [C+1, C+3); /// X2 [C+3, C+4); ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in top-down; /// scheduling is:; ///; /// [C+AcquireAtCycle, C+ReleaseAtCycle); ///; ///; /// # BOTTOM UP SCHEDULING; ///; /// Cycles scheduling flows to the _left_, in opposite direction; /// of time.; ///; /// In bottom up scheduling, the scheduling happens in opposite; /// direction to the execution of the cycles of the; /// instruction. When the instruction is scheduled at cycle `C`,; /// the resources are allocated in the past relative to `C`:; ///; /// 2 1 C -1 -2 -3 -4 -5 ...; /// <-----|------|------|------|------|------|------|------|---; /// X0 X1 X1 X2 ---> direction of time; /// X0 (C+1, C]; /// X1 (C, C-2]; /// X2 (C-2, C-3]; ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in bottom-up; /// scheduling is:; ///; /// [C-ReleaseAtCycle+1, C-AcquireAtCycle+1); ///; ///; /// NOTE: In both cases, the number of cycles booked by a; /// resources is the value (Releas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1127,Release,ReleaseAtCycle,1127,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['Release'],['ReleaseAtCycle']
Deployability," to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell MC exploration |; | nBin | 8 | No. of bins in edge-histogram in cell exploration |; | OptRej | 1 | OptRej = 0, weighted; OptRej=1, wt=1 MC events |; | OptDrive | 2 | Maximum weight reduction, =1 for variance reduction |; | EvPerBin | 25 | Maximum number of the effective wt=1 events/bin, |; | | | EvPerBin=0 deactivates this option |; | Chat | 1 | =0,1,2 is the ``chat level'' in the standard output |; | MaxWtRej | 1.1 | Maximum weight used to get w=1 MC events |. The above can be redefined before calling Initialize() method,; for instance `FoamObject->SetkDim(15)` sets dimension of the distribution to 15.; Only `kDim` HAS TO BE redefined, the other parameters may be left at their defaults.; `nCell` may be increased up to about million cells for wildly peaked distributions.; Increasing `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:1860,integrat,integration,1860,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['integrat'],['integration']
Deployability," up to the implementation of the NLL creation method if the data is cloned or not.; * <tr><td> `Offset(std::string const& mode)` <td> Likelihood offsetting mode. Can be either:; * <table>; * <tr><th> Mode <th> Description; * <tr><td> **none** - *default* <td> No offsetting.; * <tr><td> **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9031,Integrat,IntegrateBins,9031,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['Integrat', 'integrat']","['IntegrateBins', 'integrate']"
Deployability," variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2716,integrat,integration,2716,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Deployability," we also look for the presence of the VCTP instruction,; /// which determines whether we can generated the tail-predicated low-overhead; /// loop form.; ///; /// Assumptions and Dependencies:; /// Low-overhead loops are constructed and executed using a setup instruction:; /// DLS, WLS, DLSTP or WLSTP and an instruction that loops back: LE or LETP.; /// WLS(TP) and LE(TP) are branching instructions with a (large) limited range; /// but fixed polarity: WLS can only branch forwards and LE can only branch; /// backwards. These restrictions mean that this pass is dependent upon block; /// layout and block sizes, which is why it's the last pass to run. The same is; /// true for ConstantIslands, but this pass does not increase the size of the; /// basic blocks, nor does it change the CFG. Instructions are mainly removed; /// during the transform and pseudo instructions are replaced by real ones. In; /// some cases, when we have to revert to a 'normal' loop, we have to introduce; /// multiple instructions for a single pseudo (see RevertWhile and; /// RevertLoopEnd). To handle this situation, t2WhileLoopStartLR and t2LoopEnd; /// are defined to be as large as this maximum sequence of replacement; /// instructions.; ///; /// A note on VPR.P0 (the lane mask):; /// VPT, VCMP, VPNOT and VCTP won't overwrite VPR.P0 when they update it in a; /// ""VPT Active"" context (which includes low-overhead loops and vpt blocks).; /// They will simply ""and"" the result of their calculation with the current; /// value of VPR.P0. You can think of it like this:; /// \verbatim; /// if VPT active: ; Between a DLSTP/LETP, or for predicated instrs; /// VPR.P0 &= Value; /// else; /// VPR.P0 = Value; /// \endverbatim; /// When we're inside the low-overhead loop (between DLSTP and LETP), we always; /// fall in the ""VPT active"" case, so we can consider that all VPR writes by; /// one of those instruction is actually a ""and"".; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:2226,update,update,2226,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['update'],['update']
Deployability," will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2184,update,updated,2184,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['update'],['updated']
Deployability," with UPLO = 'U' or 'u', the array AP must */; /* contain the Upper triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 1, 2 ) */; /* and a( 2, 2 ) respectively, and so on. */; /* Before entry with UPLO = 'L' or 'l', the array AP must */; /* contain the Lower triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 2, 1 ) */; /* and a( 3, 1 ) respectively, and so on. */; /* Unchanged on exit. */; /* X - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCX ) ). */; /* Before entry, the incremented array X must contain the n */; /* element vector x. */; /* Unchanged on exit. */; /* INCX - INTEGER. */; /* On entry, INCX specifies the increment for the Elements of */; /* X. INCX must not be zero. */; /* Unchanged on exit. */; /* BETA - DOUBLE PRECISION. */; /* On entry, BETA specifies the scalar beta. When BETA is */; /* supplied as zero then Y need not be set on input. */; /* Unchanged on exit. */; /* Y - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCY ) ). */; /* Before entry, the incremented array Y must contain the n */; /* element vector y. On exit, Y is overwritten by the updated */; /* vector y. */; /* INCY - INTEGER. */; /* On entry, INCY specifies the increment for the Elements of */; /* Y. INCY must not be zero. */; /* Unchanged on exit. */; /* Level 2 Blas routine. */; /* -- Written on 22-October-1986. */; /* Jack Dongarra, Argonne National Lab. */; /* Jeremy Du Croz, Nag Central Office. */; /* Sven Hammarling, Nag Central Office. */; /* Richard Hanson, Sandia National Labs. */; /* .. Parameters .. */; /* .. Local Scalars .. */; /* .. External Functions .. */; /* .. External Subroutines .. */; /* .. */; /* .. Executable Statements .. */; /* Test the input parameters. */; /* Parameter adjustments */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspmv.cxx:2429,update,updated,2429,math/minuit2/src/mndspmv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspmv.cxx,1,['update'],['updated']
Deployability," with this OperandBundleUser.; ///; /// OperandBundleUser uses the descriptor area co-allocated with the host User; /// to store some meta information about which operands are ""normal"" operands,; /// and which ones belong to some operand bundle.; ///; /// The layout of an operand bundle user is; ///; /// +-----------uint32_t End-------------------------------------+; /// | |; /// | +--------uint32_t Begin--------------------+ |; /// | | | |; /// ^ ^ v v; /// |------|------|----|----|----|----|----|---------|----|---------|----|-----; /// | BOI0 | BOI1 | .. | DU | U0 | U1 | .. | BOI0_U0 | .. | BOI1_U0 | .. | Un; /// |------|------|----|----|----|----|----|---------|----|---------|----|-----; /// v v ^ ^; /// | | | |; /// | +--------uint32_t Begin------------+ |; /// | |; /// +-----------uint32_t End-----------------------------+; ///; ///; /// BOI0, BOI1 ... are descriptions of operand bundles in this User's use; /// list. These descriptions are installed and managed by this class, and; /// they're all instances of OperandBundleUser<T>::BundleOpInfo.; ///; /// DU is an additional descriptor installed by User's 'operator new' to keep; /// track of the 'BOI0 ... BOIN' co-allocation. OperandBundleUser does not; /// access or modify DU in any way, it's an implementation detail private to; /// User.; ///; /// The regular Use& vector for the User starts at U0. The operand bundle; /// uses are part of the Use& vector, just like normal uses. In the diagram; /// above, the operand bundle uses start at BOI0_U0. Each instance of; /// BundleOpInfo has information about a contiguous set of uses constituting; /// an operand bundle, and the total set of operand bundle uses themselves; /// form a contiguous set of uses (i.e. there are no gaps between uses; /// corresponding to individual operand bundles).; ///; /// This class does not know the location of the set of operand bundle uses; /// within the use list -- that is decided by the User using this class via; /// the BeginIdx arg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h:1033,install,installed,1033,interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,1,['install'],['installed']
Deployability,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1143,install,installed,1143,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['install'],['installed']
Deployability,"""""""; <html>; <title>{}</title>; <meta charset=""utf-8"" />; <head>; <link rel='stylesheet' type='text/css' href='style.css'>; <script type=""text/javascript"">; /* Simple helper to show/hide the expanded message of a remark. */; function toggleExpandedMessage(e) {{; var FullTextElems = e.parentElement.parentElement.getElementsByClassName(""full-info"");; if (!FullTextElems || FullTextElems.length < 1) {{; return false;; }}; var FullText = FullTextElems[0];; if (FullText.style.display == 'none') {{; e.innerHTML = '-';; FullText.style.display = 'block';; }} else {{; e.innerHTML = '+';; FullText.style.display = 'none';; }}; }}; </script>; </head>; <body>; <div class=""centered"">; <table class=""source"">; <thead>; <tr>; <th style=""width: 2%"">Line</td>; <th style=""width: 3%"">Hotness</td>; <th style=""width: 10%"">Optimization</td>; <th style=""width: 70%"">Source</td>; <th style=""width: 15%"">Inline Context</td>; </tr>; </thead>; <tbody>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:234,toggle,toggleExpandedMessage,234,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,1,['toggle'],['toggleExpandedMessage']
Deployability,"""""""; <tr><td>%(result)s</td><td class=""name"" onclick=""toggle('%(id)s')""><a name=""%(id)sAnchor"">%(name)s</a></td><td>%(args)s</td></tr>; <tr><td colspan=""4"" class=""doc"" id=""%(id)s""><pre>%(comment)s</pre></td></tr>; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:54,toggle,toggle,54,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,1,['toggle'],['toggle']
Deployability,"""""""; Add a LayerNormalization operator to the particular function target; in the Graph Initializer. Parameters:; gin: The GNN Initializer to which the LayerNorm operator will be added; module_layer: Extracted LayerNorm from graph_nets' model; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:287,update,update,287,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; Add update function for respective function target, either of nodes, edges or globals; based on the supplied component_model. Parameters:; gin: The GNN Initializer to which the update function will be added; component_model: The update function to add, either of MLP or Sequential; graph_type: The type of the graph, i.e. GNN or GraphIndependent; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:9,update,update,9,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,4,['update'],['update']
Deployability,"""""""; Add weights to respective function targets, either of nodes, edges or globals. Parameters:; gin: The GNN Initializer to which the weights will be added; weights: Weight information, containing the names, shapes and values of initialized tensors; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:295,update,update,295,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; An enumeration representing the style of an integrated test keyword or; command. TAG: A keyword taking no value. Ex 'END.'; COMMAND: A keyword taking a list of shell commands. Ex 'RUN:'; LIST: A keyword taking a comma-separated list of values.; SPACE_LIST: A keyword taking a space-separated list of values.; BOOLEAN_EXPR: A keyword taking a comma-separated list of; boolean expressions. Ex 'XFAIL:'; INTEGER: A keyword taking a single integer. Ex 'ALLOW_RETRIES:'; CUSTOM: A keyword with custom parsing semantics.; DEFINE: A keyword taking a new lit substitution definition. Ex; 'DEFINE: %{name}=value'; REDEFINE: A keyword taking a lit substitution redefinition. Ex; 'REDEFINE: %{name}=value'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:49,integrat,integrated,49,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Deployability,"""""""; Calculates the function signature.; Updates the class with a new attribute args_info which contains the mapping of the parameter of the function to its type and value.; args_info: dict{parameter_name(str): (type, value)}; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:41,Update,Updates,41,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['Update'],['Updates']
Deployability,"""""""; CmpRuns - A simple tool for comparing two static analyzer runs to determine; which reports have been added, removed, or changed. This is designed to support automated testing using the static analyzer, from; two perspectives:; 1. To monitor changes in the static analyzer's reports on real code bases,; for regression testing. 2. For use by end users who want to integrate regular static analyzer testing; into a buildbot like environment. Usage:. # Load the results of both runs, to obtain lists of the corresponding; # AnalysisDiagnostic objects.; #; resultsA = load_results_from_single_run(singleRunInfoA, delete_empty); resultsB = load_results_from_single_run(singleRunInfoB, delete_empty). # Generate a relation from diagnostics in run A to diagnostics in run B; # to obtain a list of triples (a, b, confidence).; diff = compare_results(resultsA, resultsB). """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py:368,integrat,integrate,368,interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,1,['integrat'],['integrate']
Deployability,"""""""; Create a pull request in `self.repo_name`. The base branch of the; pull request will be chosen based on the the milestone attached to; the issue represented by `self.issue_number` For example if the milestone; is Release 13.0.1, then the base branch will be release/13.x. `branch`; will be used as the compare branch.; https://docs.github.com/en/get-started/quickstart/github-glossary#base-branch; https://docs.github.com/en/get-started/quickstart/github-glossary#compare-branch; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:218,Release,Release,218,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,2,"['Release', 'release']","['Release', 'release']"
Deployability,"""""""; Create an Linear model and add it to the GNN Initializer. Parameters:; gin: The GNN Initializer to which the model will be added.; model: The model extracted from graph_nets's GNN component; function_target: Target for the function to update either of nodes, edges or globals; graph_type: The type of the graph, i.e. GNN or GraphIndependent. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:240,update,update,240,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; Create an MLP model and add it to the GNN Initializer. Parameters:; gin: The GNN Initializer to which the model will be added.; model: The model extracted from graph_nets's GNN component; function_target: Target for the function to update either of nodes, edges or globals; graph_type: The type of the graph, i.e. GNN or GraphIndependent. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:237,update,update,237,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:230,configurat,configuration,230,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,2,['configurat'],['configuration']
Deployability,"""""""; Download the project and apply the local patchfile if it exists.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:46,patch,patchfile,46,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['patch'],['patchfile']
Deployability,"""""""; Enables real-time data representation for the given drawable objects.; The objects are drawn and updated every time a partial result returns from distributed execution. Args:; drawable_callback_dict (dict): A dictionary where keys are drawable objects ; and values are optional corresponding callback functions. . global_callback (function): An optional global callback function that ; is applied to all drawable objects. Raises:; ValueError: If a passed drawable object is not valid.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:102,update,updated,102,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,1,['update'],['updated']
Deployability,"""""""; Expand each path in a test suite to a Lit test using that path and assuming; it is a file containing the test. File extensions excluded by the configuration; or not contained in the allowed extensions are ignored.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py:148,configurat,configuration,148,interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,1,['configurat'],['configuration']
Deployability,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:19,integrat,integration,19,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,2,['integrat'],['integration']
Deployability,"""""""; Function to create a dictionary mapping the parameters of the function to the corresponding columns or values.; Updates the class to have a new attribute func_args which contains the above mapping. Arguments:; cols_list: A python list that contains the columns which the function uses.; extra_args: A dictionary containing any extra parameters the function requires.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:117,Update,Updates,117,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['Update'],['Updates']
Deployability,"""""""; Function to create a list of parameters func needs.; Updates the class to have a new attribute params which is a list of the parameters of func. Arguments:; func: A python callable. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:58,Update,Updates,58,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['Update'],['Updates']
Deployability,"""""""; Generate binned Asimov dataset for a continuous pdf.; One should in principle be able to use; pdf.generateBinned(x, n_events, RooFit::ExpectedData()).; Unfortunately it has a problem: it also has the bin bias that this tutorial; demonstrates, to if we would use it, the biases would cancel out.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:42,continuous,continuous,42,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['continuous'],['continuous']
Deployability,"""""""; Generates a function call and signature. Gives a unique name to the function if it is a lambda function.; Updates the class with new attributes func_call and func_sign to hold them,; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:111,Update,Updates,111,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['Update'],['Updates']
Deployability,"""""""; Get the activation function for the model. Parameters:; model: The graph_nets' component model to extract the activation function from.; The component model can be either of the update functions for; nodes, edges or globals. Returns:; The activation function enum value.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:183,update,update,183,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; Given a SARIF message object, checks if the text property contains an embedded link and; updates the run index if necessary.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:94,update,updates,94,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['updates']
Deployability,"""""""; Given a SARIF object, checks its dictionary entries for a 'message' property.; If it exists, updates the message index of embedded links in the run index. Recursively looks through entries in the dictionary.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:98,update,updates,98,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['updates']
Deployability,"""""""; Hi!. This issue may be a good introductory issue for people new to working on LLVM. If you would like to work on this issue, your first steps are:. 1. In the comments of the issue, request for it to be assigned to you.; 2. Fix the issue locally.; 3. [Run the test suite](https://llvm.org/docs/TestingGuide.html#unit-and-regression-tests) locally. Remember that the subdirectories under `test/` create fine-grained testing targets, so you can e.g. use `make check-clang-ast` to only run Clang's AST tests.; 4. Create a Git commit.; 5. Run [`git clang-format HEAD~1`](https://clang.llvm.org/docs/ClangFormat.html#git-integration) to format your changes.; 6. Open a [pull request](https://github.com/llvm/llvm-project/pulls) to the [upstream repository](https://github.com/llvm/llvm-project) on GitHub. Detailed instructions can be found [in GitHub's documentation](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request). If you have any further questions about this issue, don't hesitate to ask via a comment in the thread below.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:620,integrat,integration,620,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['integrat'],['integration']
Deployability,"""""""; Main function. Calls all other functions, depending on whether the macro input is in python or c++.; It adds the header information. Also, it adds a cell that draws all canvases. The working text is; then converted to a version 3 jupyter notebook, subsequently updated to a version 4. Then, metadata; associated with the language the macro is written in is attatched to he notebook. Finally the; notebook is executed and output as a Jupyter notebook.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:266,update,updated,266,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,1,['update'],['updated']
Deployability,"""""""; Merges two given iterables of values that were returned by two mapper; function executions. Returns the first argument with its values updated from; the second.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:140,update,updated,140,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,1,['update'],['updated']
Deployability,"""""""; Minimal clang-rename integration with Vim. Before installing make sure one of the following is satisfied:. * clang-rename is in your PATH; * `g:clang_rename_path` in ~/.vimrc points to valid clang-rename executable; * `binary` in clang-rename.py points to valid to clang-rename executable. To install, simply put this into your ~/.vimrc for python2 support. noremap <leader>cr :pyf <path-to>/clang-rename.py<cr>. For python3 use the following command (note the change from :pyf to :py3f). noremap <leader>cr :py3f <path-to>/clang-rename.py<cr>. IMPORTANT NOTE: Before running the tool, make sure you saved the file. All you have to do now is to place a cursor on a variable/function/class which; you would like to rename and press '<leader>cr'. You will be prompted for a new; name if the cursor points to a valid symbol.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py:26,integrat,integration,26,interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,3,"['install', 'integrat']","['install', 'installing', 'integration']"
Deployability,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:15,integrat,integrator,15,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrator']
Deployability,"""""""; Static Analyzer qualification infrastructure. The goal is to test the analyzer against different projects,; check for failures, compare results, and measure performance. Repository Directory will contain sources of the projects as well as the; information on how to build them and the expected output.; Repository Directory structure:; - ProjectMap file; - Historical Performance Data; - Project Dir1; - ReferenceOutput; - Project Dir2; - ReferenceOutput; ..; Note that the build tree must be inside the project dir. To test the build of the analyzer one would:; - Copy over a copy of the Repository Directory. (TODO: Prefer to ensure that; the build directory does not pollute the repository to min network; traffic).; - Build all projects, until error. Produce logs to report errors.; - Compare results. The files which should be kept around for failure investigations:; RepositoryCopy/Project DirI/ScanBuildResults; RepositoryCopy/Project DirI/run_static_analyzer.log. Assumptions (TODO: shouldn't need to assume these.):; The script is being run from the Repository Directory.; The compiler for scan-build and scan-build are in the PATH.; export PATH=/Users/zaks/workspace/c2llvm/build/Release+Asserts/bin:$PATH. For more logging, set the env variables:; zaks:TI zaks$ export CCC_ANALYZER_LOG=1; zaks:TI zaks$ export CCC_ANALYZER_VERBOSE=1. The list of checkers tested are hardcoded in the Checkers variable.; For testing additional checkers, use the SA_ADDITIONAL_CHECKERS environment; variable. It should contain a comma separated list.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:1195,Release,Release,1195,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['Release'],['Release']
Deployability,"""""""; Static Analyzer qualification infrastructure: adding a new project to; the Repository Directory. Add a new project for testing: build it and add to the Project Map file.; Assumes it's being run from the Repository Directory.; The project directory should be added inside the Repository Directory and; have the same name as the project ID. The project should use the following files for set up:; - cleanup_run_static_analyzer.sh - prepare the build environment.; Ex: make clean can be a part of it.; - run_static_analyzer.cmd - a list of commands to run through scan-build.; Each command should be on a separate line.; Choose from: configure, make, xcodebuild; - download_project.sh - download the project into the CachedSource/; directory. For example, download a zip of; the project source from GitHub, unzip it,; and rename the unzipped directory to; 'CachedSource'. This script is not called; when 'CachedSource' is already present,; so an alternative is to check the; 'CachedSource' directory into the; repository directly.; - CachedSource/ - An optional directory containing the source of the; project being analyzed. If present,; download_project.sh will not be called.; - changes_for_analyzer.patch - An optional patch file for any local; changes; (e.g., to adapt to newer version of clang); that should be applied to CachedSource; before analysis. To construct this patch,; run the download script to download; the project to CachedSource, copy the; CachedSource to another directory (for; example, PatchedSource) and make any; needed modifications to the copied; source.; Then run:; diff -ur CachedSource PatchedSource \; > changes_for_analyzer.patch; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py:1205,patch,patch,1205,interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,6,"['Patch', 'patch']","['PatchedSource', 'patch']"
Deployability,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,configurat,configurations,46,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,29,['configurat'],['configurations']
Deployability,"""""""; The number of partitions for this dataframe is updated only if the user; did not initially specify one when creating the dataframe.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:52,update,updated,52,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['update'],['updated']
Deployability,"""""""; This class implements the sub-commands for the release-workflow command.; The current sub-commands are:; * create-branch; * create-pull-request. The execute_command method will automatically choose the correct sub-command; based on the text in stdin.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:52,release,release-workflow,52,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['release'],['release-workflow']
Deployability,"""""""; This script is run by GitHub actions to ensure that the code in PR's conform to; the coding style of LLVM. It can also be installed as a pre-commit git hook to; check the coding style before submitting it. The canonical source of this script; is in the LLVM source tree under llvm/utils/git. For C/C++ code it uses clang-format and for Python code it uses darker (which; in turn invokes black). You can learn more about the LLVM coding style on llvm.org:; https://llvm.org/docs/CodingStandards.html. You can install this script as a git hook by symlinking it to the .git/hooks; directory:. ln -s $(pwd)/llvm/utils/git/code-format-helper.py .git/hooks/pre-commit. You can control the exact path to clang-format or darker with the following; environment variables: $CLANG_FORMAT_PATH and $DARKER_FORMAT_PATH.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:127,install,installed,127,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,2,['install'],"['install', 'installed']"
Deployability,"""""""; This script reads input from a unified diff and reformats all the changed; lines. This is useful to reformat all the lines touched by a specific patch.; Example usage for git/svn users:. git diff -U0 --no-color --relative HEAD^ | {clang_format_diff} -p1 -i; svn diff --diff-cmd=diff -x-U0 | {clang_format_diff} -i. It should be noted that the filename contained in the diff is used unmodified; to determine the source file to update. Users calling this script directly; should be careful to ensure that the path in the diff is correct relative to the; current working directory.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-diff.py:150,patch,patch,150,interpreter/llvm-project/clang/tools/clang-format/clang-format-diff.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-diff.py,2,"['patch', 'update']","['patch', 'update']"
Deployability,"""""""; This script:; - Builds clang with user-defined flags; - Uses that clang to build an instrumented clang, which can be used to collect; PGO samples; - Builds a user-defined set of sources (default: clang) to act as a; ""benchmark"" to generate a PGO profile; - Builds clang once more with the PGO profile generated above. This is a total of four clean builds of clang (by default). This may take a; while. :). This scripts duplicates https://llvm.org/docs/AdvancedBuilds.html#multi-stage-pgo; Eventually, it will be updated to instead call the cmake cache mentioned there.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py:517,update,updated,517,interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,1,['update'],['updated']
Deployability,"""""""; Trigger the computation graph. The list of actions to be performed is retrieved by calling; generate_computation_graph. Afterwards, the C++ RDF computation graph is; triggered through the `ROOT::Internal::RDF::TriggerRun` function with; the GIL released. Args:; graph: A representation of the computation graph. starting_node: The node where the generation of the; computation graph is started. Either an actual RDataFrame or the; result of a Range operation (in case of empty data source). range_id: The id of the current range. Needed to assign a; file name to a partial Snapshot if it was requested. Returns:; list: A list of objects that can be either used as or converted into; mergeable values.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:250,release,released,250,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,1,['release'],['released']
Deployability,"""""""; Update reference results for static analyzer.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUpdateDiffs.py:5,Update,Update,5,interpreter/llvm-project/clang/utils/analyzer/SATestUpdateDiffs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUpdateDiffs.py,1,['Update'],['Update']
Deployability,"""""""; Wrapper class for graph_nets' GNN model;s parsing and inference generation. graph_nets' GNN model comprises of three components, the nodes, edges and globals.; The entire model and its inference is based on the respective update functions,; and aggregate function with other components.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:227,update,update,227,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"""""""; find_tests_for_inputs(lit_config, inputs) -> [Test]. Given a configuration object and a list of input specifiers, find all the; tests to execute.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:66,configurat,configuration,66,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['configurat'],['configuration']
Deployability,"""""""; getUnsupportedFeatures() -> list of strings. Returns a list of features from UNSUPPORTED that are present; in the test configuration's features.; Throws ValueError if an UNSUPPORTED line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:124,configurat,configuration,124,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['configurat'],['configuration']
Deployability,"""""""; isExpectedToFail() -> bool. Check whether this test is expected to fail in the current; configuration. This check relies on the test xfails property which by; some test formats may not be computed until the test has first been; executed.; Throws ValueError if an XFAIL line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:93,configurat,configuration,93,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['configurat'],['configuration']
Deployability,"""""""; lit - LLVM Integrated Tester. See lit.pod for more information.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py:16,Integrat,Integrated,16,interpreter/llvm-project/llvm/utils/lit/lit/main.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py,1,['Integrat'],['Integrated']
Deployability,"""""""; load_from_path(path, litConfig). Load the configuration module at the provided path into the given config; object.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:47,configurat,configuration,47,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['configurat'],['configuration']
Deployability,"""""""; parseIntegratedTestScriptCommands(source_path) -> commands. Parse the commands in an integrated test script file into a list of; (line_number, command_type, line).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:90,integrat,integrated,90,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Deployability,"""""""; pre-push git hook integration; =============================. This script is intended to be setup as a pre-push hook, from the root of the; repo run:. ln -sf ../../llvm/utils/git/pre-push.py .git/hooks/pre-push. From the git doc:. The pre-push hook runs during git push, after the remote refs have been; updated but before any objects have been transferred. It receives the name; and location of the remote as parameters, and a list of to-be-updated refs; through stdin. You can use it to validate a set of ref updates before a push; occurs (a non-zero exit code will abort the push).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:23,integrat,integration,23,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,4,"['integrat', 'update']","['integration', 'updated', 'updates']"
Deployability,"""""""; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:107,release,release,107,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['release'],['release']
Deployability,"""""""; | <tr>; | <td class=""SUMM_DESC"">{bug_type}</td>; | <td class=""Q"">{bug_count}</td>; | <td>; | <center>; | <input checked type=""checkbox""; | onClick=""ToggleDisplay(this,'{bug_type_class}');""/>; | </center>; | </td>; | </tr>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:153,Toggle,ToggleDisplay,153,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['Toggle'],['ToggleDisplay']
Deployability,"""""""<html>; <head>; <title>File Bug</title>; <link rel=""stylesheet"" type=""text/css"" href=""/scanview.css"" />; </head>; <script language=""javascript"" type=""text/javascript"">; var reporters = %(reportersArray)s;; function updateReporterOptions() {; index = document.getElementById('reporter').selectedIndex;; for (var i=0; i < reporters.length; ++i) {; o = document.getElementById(reporters[i] + ""ReporterOptions"");; if (i == index) {; o.style.display = """";; } else {; o.style.display = ""none"";; }; }; }; </script>; <body onLoad=""updateReporterOptions()"">; <h3>; <a href=""/"">Summary</a> > ; %(reportingFor)s; File Bug</h3>; <form name=""form"" action=""/report_submit"" method=""post"">; <input type=""hidden"" name=""report"" value=""%(report)s"">. <table class=""form"">; <tr><td>; <table class=""form_group"">; <tr>; <td class=""form_clabel"">Title:</td>; <td class=""form_value"">; <input type=""text"" name=""title"" size=""50"" value=""%(title)s"">; </td>; </tr>; <tr>; <td class=""form_label"">Description:</td>; <td class=""form_value"">; <textarea rows=""10"" cols=""80"" name=""description"">; %(description)s; </textarea>; </td>; </tr>. %(attachFileRow)s. </table>; <br>; <table class=""form_group"">; <tr>; <td class=""form_clabel"">Method:</td>; <td class=""form_value"">; <select id=""reporter"" name=""reporter"" onChange=""updateReporterOptions()"">; %(reporterSelections)s; </select>; </td>; </tr>; %(reporterOptionsDivs)s; </table>; <br>; </td></tr>; <tr><td class=""form_submit"">; <input align=""right"" type=""submit"" name=""Submit"" value=""Submit"">; </td></tr>; </table>; </form>. %(extraIFrame)s. </body>; </html>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:218,update,updateReporterOptions,218,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,3,['update'],['updateReporterOptions']
Deployability,"""""""A parser for LLVM/Clang style integrated test scripts. keyword: The keyword to parse for. It must end in either '.' or ':'.; kind: An value of ParserKind.; parser: A custom parser. This value may only be specified with; ParserKind.CUSTOM.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:33,integrat,integrated,33,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Deployability,"""""""A script to generate FileCheck statements for 'opt' analysis tests. This script is a utility to update LLVM opt analysis test cases with new; FileCheck patterns. It can either update all of the tests in the file or; a single test function. Example usage:; $ update_analyze_test_checks.py --opt=../bin/opt test/foo.ll. Workflow:; 1. Make a compiler patch that requires updating some number of FileCheck lines; in regression test files.; 2. Save the patch and revert it from your local work area.; 3. Update the RUN-lines in the affected regression tests to look canonical.; Example: ""; RUN: opt < %s -passes='print<cost-model>' -disable-output 2>&1 | FileCheck %s""; 4. Refresh the FileCheck lines for either the entire file or select functions by; running this script.; 5. Commit the fresh baseline of checks.; 6. Apply your patch from step 1 and rebuild your local binaries.; 7. Re-run this script on affected regression tests.; 8. Check the diffs to ensure the script has done something reasonable.; 9. Submit a patch including the regression test diffs for review. A common pattern is to have the script insert complete checking of every; instruction. Then, edit it down to only check the relevant instructions.; The script is designed to make adding checks to a test case fast, it is *not*; designed to be authoratitive about what constitutes a good test!; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py:99,update,update,99,interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_analyze_test_checks.py,7,"['Update', 'patch', 'update']","['Update', 'patch', 'update']"
Deployability,"""""""A script to generate FileCheck statements for 'opt' regression tests. This script is a utility to update LLVM opt test cases with new; FileCheck patterns. It can either update all of the tests in the file or; a single test function. Example usage:. # Default to using `opt` as found in your PATH.; $ update_test_checks.py test/foo.ll. # Override the path lookup.; $ update_test_checks.py --tool-binary=../bin/opt test/foo.ll. # Use a custom tool instead of `opt`.; $ update_test_checks.py --tool=yourtool test/foo.ll. Workflow:; 1. Make a compiler patch that requires updating some number of FileCheck lines; in regression test files.; 2. Save the patch and revert it from your local work area.; 3. Update the RUN-lines in the affected regression tests to look canonical.; Example: ""; RUN: opt < %s -instcombine -S | FileCheck %s""; 4. Refresh the FileCheck lines for either the entire file or select functions by; running this script.; 5. Commit the fresh baseline of checks.; 6. Apply your patch from step 1 and rebuild your local binaries.; 7. Re-run this script on affected regression tests.; 8. Check the diffs to ensure the script has done something reasonable.; 9. Submit a patch including the regression test diffs for review.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_test_checks.py:101,update,update,101,interpreter/llvm-project/llvm/utils/update_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_test_checks.py,7,"['Update', 'patch', 'update']","['Update', 'patch', 'update']"
Deployability,"""""""A test case update script. This script is a utility to update LLVM 'llc' based test cases with new; FileCheck patterns. It can either update all of the tests in the file or; a single test function.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_llc_test_checks.py:15,update,update,15,interpreter/llvm-project/llvm/utils/update_llc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_llc_test_checks.py,3,['update'],['update']
Deployability,"""""""A test case update script. This script is a utility to update LLVM 'llvm-mca' based test cases with new; FileCheck patterns.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py:15,update,update,15,interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mca_test_checks.py,2,['update'],['update']
Deployability,"""""""A utility to update LLVM IR CHECK lines in C/C++ FileCheck test files. Example RUN lines in .c/.cc test files:. // RUN: %clang -emit-llvm -S %s -o - -O2 | FileCheck %s; // RUN: %clangxx -emit-llvm -S %s -o - -O2 | FileCheck -check-prefix=CHECK-A %s. Usage:. % utils/update_cc_test_checks.py --llvm-bin=release/bin test/a.cc; % utils/update_cc_test_checks.py --clang=release/bin/clang /tmp/c/a.cc; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:16,update,update,16,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,3,"['release', 'update']","['release', 'update']"
Deployability,"""""""CTU configuration is created from the chosen phases and dir.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:7,configurat,configuration,7,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,['configurat'],['configuration']
Deployability,"""""""Checks for reverts of commits across a given git commit. To clarify the meaning of 'across' with an example, if we had the following; commit history (where `a -> b` notes that `b` is a direct child of `a`):. 123abc -> 223abc -> 323abc -> 423abc -> 523abc. And where 423abc is a revert of 223abc, this revert is considered to be 'across'; 323abc. More generally, a revert A of a parent commit B is considered to be; 'across' a commit C if C is a parent of A and B is a parent of C. Please note that revert detection in general is really difficult, since merge; conflicts/etc always introduce _some_ amount of fuzziness. This script just; uses a bundle of heuristics, and is bound to ignore / incorrectly flag some; reverts. The hope is that it'll easily catch the vast majority (>90%) of them,; though. This is designed to be used in one of two ways: an import in Python, or run; directly from a shell. If you want to import this, the `find_reverts`; function is the thing to look at. If you'd rather use this from a shell, have a; usage example:. ```; ./revert_checker.py c47f97169 origin/main origin/release/12.x; ```. This checks for all reverts from the tip of origin/main to c47f97169, which are; across the latter. It then does the same for origin/release/12.x to c47f97169.; Duplicate reverts discovered when walking both roots (origin/main and; origin/release/12.x) are deduplicated in output.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker.py:1104,release,release,1104,interpreter/llvm-project/llvm/utils/revert_checker.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker.py,3,['release'],['release']
Deployability,"""""""Config should be a list of parameters given to the %config command.; We allow only one setting per %config line and that setting can only; have one value. Assuming the parameters are valid, update the kernel's setting with; the new value. If there is an error, raise a TableGenKernelException. >>> k.parse_config_magic([]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k._cell_reset; False; >>> k.parse_config_magic([""a"", ""b"", ""c""]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k.parse_config_magic([""notasetting"", ""...""]); Traceback (most recent call last):; ...; TableGenKernelException: Unknown kernel setting ""notasetting"". Possible settings are: ""cellreset"".; >>> k.parse_config_magic([""cellreset"", ""food""]); Traceback (most recent call last):; ...; TableGenKernelException: Invalid value for setting ""cellreset"", expected ""on"" or ""off"".; >>> k.parse_config_magic([""cellreset"", ""on""]); >>> k._cell_reset; True; >>> k.parse_config_magic([""cellreset"", ""off""]); >>> k._cell_reset; False; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:193,update,update,193,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,1,['update'],['update']
Deployability,"""""""Configure the test suite to be able to invoke clang. Sets up some environment variables important to clang, locates a; just-built or optionally an installed clang, and add a set of standard; substitutions useful to any test suite that makes use of clang. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:150,install,installed,150,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['install'],['installed']
Deployability,"""""""Configure the test suite to be able to invoke lld. Sets up some environment variables important to lld, locates a; just-built or optionally an installed lld, and add a set of standard; substitutions useful to any test suite that makes use of lld. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:146,install,installed,146,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['install'],['installed']
Deployability,"""""""Count number of passes (pass-managers excluded) in pipeline object.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:54,pipeline,pipeline,54,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create copy of pipeline object srcPipeObj.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:18,pipeline,pipeline,18,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create new pipeline object by removing empty pass-managers (those with count = 0) from srcPipeObj.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:14,pipeline,pipeline,14,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create new pipeline object by removing pass with index removeIndex from pipeObj.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:14,pipeline,pipeline,14,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create pipeline object from string representation.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:10,pipeline,pipeline,10,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create string representation of pipeline object.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:35,pipeline,pipeline,35,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Create two new pipeline objects by splitting pipeObj in two directly after pass with index splitIndex.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:18,pipeline,pipeline,18,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""Extend existing compilation database with new entries.; Duplicate entries are detected and not present in the final output.; The output is not continuously updated, it's done when the build; command finished. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:146,continuous,continuously,146,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,2,"['continuous', 'update']","['continuously', 'updated']"
Deployability,"""""""Find the executable program 'name', optionally using the specified; environment variable as an override before searching the build directory; and then optionally the configuration's PATH.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:169,configurat,configuration,169,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['configurat'],['configuration']
Deployability,"""""""GIL was released by accident for by-value returns""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:11,release,released,11,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['release'],['released']
Deployability,"""""""Get base score from an XGBoost sklearn estimator. Copy-pasted from XGBoost unit test code. See also:; * https://github.com/dmlc/xgboost/blob/a99bb38bd2762e35e6a1673a0c11e09eddd8e723/python-package/xgboost/testing/updater.py#L13; * https://github.com/dmlc/xgboost/issues/9347; * https://discuss.xgboost.ai/t/how-to-get-base-score-from-trained-booster/3192; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py:216,update,updater,216,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py,1,['update'],['updater']
Deployability,"""""""Install the kernel spec for user in given prefix.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/install.py:3,Install,Install,3,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/install.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/install.py,1,['Install'],['Install']
Deployability,"""""""LitConfig - Configuration data for a 'lit' test runner instance, shared; across all tests. The LitConfig object is also used to communicate with client configuration; files, it is always passed in as the global variable 'lit' so that; configuration files can access common functionality and internal components; easily.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:15,Configurat,Configuration,15,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,3,"['Configurat', 'configurat']","['Configuration', 'configuration']"
Deployability,"""""""Run 'encode' on 'container[key]' value and update it.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:46,update,update,46,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['update']
Deployability,"""""""Script to sort the top-most block of #include lines. Assumes the LLVM coding conventions. Currently, this script only bothers sorting the llvm/... headers. Patches; welcome for more functionality, and sorting other header groups.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sort_includes.py:159,Patch,Patches,159,interpreter/llvm-project/llvm/utils/sort_includes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sort_includes.py,1,['Patch'],['Patches']
Deployability,"""""""ShTest is a format with one file per test. This is the primary format for regression tests as described in the LLVM; testing guide:. http://llvm.org/docs/TestingGuide.html. The ShTest files contain some number of shell-like command pipelines, along; with assertions about what should be in the output.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py:235,pipeline,pipelines,235,interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/shtest.py,1,['pipeline'],['pipelines']
Deployability,"""""""Test installing and calling global C++ function as python method""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:8,install,installing,8,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,1,['install'],['installing']
Deployability,"""""""Update Options.td for the flags changes in https://reviews.llvm.org/Dxyz. This script translates Options.td from using Flags to control option visibility; to using Vis instead. It is meant to be idempotent and usable to help update; downstream forks if they have their own changes to Options.td. Usage:; ```sh; % update_options_td_flags.py path/to/Options.td > Options.td.new; % mv Options.td.new path/to/Options.td; ```. This script will be removed after the next LLVM release.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py:3,Update,Update,3,interpreter/llvm-project/clang/utils/update_options_td_flags.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py,3,"['Update', 'release', 'update']","['Update', 'release', 'update']"
Deployability,"""""""Updates FileCheck checks in MIR tests. This script is a utility to update MIR based tests with new FileCheck; patterns. The checks added by this script will cover the entire body of each; function it handles. Virtual registers used are given names via; FileCheck patterns, so if you do want to check a subset of the body it; should be straightforward to trim out the irrelevant parts. None of; the YAML metadata will be checked, other than function names, and fixedStack; if the --print-fixed-stack option is used. If there are multiple llc commands in a test, the full set of checks; will be repeated for each different check pattern. Checks for patterns; that are common between different commands will be left as-is by; default, or removed if the --remove-common-prefixes flag is provided.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mir_test_checks.py:3,Update,Updates,3,interpreter/llvm-project/llvm/utils/update_mir_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_mir_test_checks.py,2,"['Update', 'update']","['Updates', 'update']"
Deployability,"""""""Utility functions for creating and manipulating LLVM 'opt' NPM pipeline objects.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py:66,pipeline,pipeline,66,interpreter/llvm-project/llvm/utils/pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/pipeline.py,1,['pipeline'],['pipeline']
Deployability,"""""""\; LLVM {} Release. # A note on binaries. Volunteers make binaries for the LLVM project, which will be uploaded; when they have had time to test and build these binaries. They might; not be available directly or not at all for each release. We suggest; you use the binaries from your distribution or build your own if you; rely on a specific platform or configuration.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py:14,Release,Release,14,interpreter/llvm-project/llvm/utils/release/github-upload-release.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py,3,"['Release', 'configurat', 'release']","['Release', 'configuration', 'release']"
Deployability,"""""""_parseKeywords. Scan an LLVM/Clang style integrated test script and extract all the lines; pertaining to a special parser. This includes 'RUN', 'XFAIL', 'REQUIRES',; 'UNSUPPORTED', 'ALLOW_RETRIES', 'END', 'DEFINE', 'REDEFINE', as well as; other specified custom parsers. Returns a dictionary mapping each custom parser to its value after; parsing the test.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:44,integrat,integrated,44,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Deployability,"""""""cppyy-cling installation.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:15,install,installation,15,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,1,['install'],['installation']
Deployability,"""""""gen_std.py is a tool to generate a lookup table (from qualified names to; include headers) for C/C++ Standard Library symbols by parsing archived HTML; files from cppreference. The generated files are located in clang/include/Tooling/Inclusions. Caveats and FIXMEs:; - only symbols directly in ""std"" namespace are added, we should also add std's; subnamespace symbols (e.g. chrono).; - symbols with multiple variants or defined in multiple headers aren't added,; e.g. std::move, std::swap. Usage:; 1. Install BeautifulSoup dependency, see instruction:; https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-beautiful-soup; 2. Download cppreference offline HTML files (html_book_20220730.zip in Unofficial Release) at; https://en.cppreference.com/w/Cppreference:Archives; 3. Unzip the zip file from step 2 (e.g., to a ""cppreference"" directory). You should; get a ""cppreference/reference"" directory.; 4. Run the command:; // Generate C++ symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=cpp > StdSymbolMap.inc; // Generate C symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=c > CSymbolMap.inc; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py:504,Install,Install,504,interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,3,"['Install', 'Release', 'install']","['Install', 'Release', 'installing-beautiful-soup']"
Deployability,"""""""parseIntegratedTestScript - Scan an LLVM/Clang style integrated test; script and extract the lines to 'RUN' as well as 'XFAIL', 'REQUIRES',; 'UNSUPPORTED' and 'ALLOW_RETRIES' information into the given test. If additional parsers are specified then the test is also scanned for the; keywords they specify and all matches are passed to the custom parser. If 'require_script' is False an empty script; may be returned. This can be used for test formats where the actual script; is optional or ignored.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:56,integrat,integrated,56,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Deployability,"""""""root attribute - The root configuration for the test suite.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:29,configurat,configuration,29,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['configurat'],['configuration']
Deployability,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:72,configurat,configuration,72,interpreter/llvm-project/clang/docs/analyzer/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py,3,['configurat'],['configuration']
Deployability,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:56,configurat,configuration,56,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,3,['configurat'],['configuration']
Deployability,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:56,configurat,configuration,56,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,3,['configurat'],['configuration']
Deployability,# -*- coding: utf-8 -*-; #; # LLVM documentation build configuration file.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:55,configurat,configuration,55,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,3,['configurat'],['configuration']
Deployability,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:56,configurat,configuration,56,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,3,['configurat'],['configuration']
Deployability,"# -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:13,configurat,configuration,13,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['configurat'],['configuration']
Deployability,"# -------------------------------------------------------; # User configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:66,configurat,configuration,66,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['configurat'],['configuration']
Deployability,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:337,integrat,integration,337,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Deployability,"# -----------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:219,integrat,integration,219,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Deployability,"# ----------------------------------; # The Actual Tutorial Macro; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. Use RooFit's direct integration to get p-value & significance; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # It takes ~4 min without PROOF and ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:217,integrat,integration,217,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Deployability,"# A regex that matches %dbg(ARG), which lit inserts at the beginning of each; # run command pipeline such that ARG specifies the pipeline's source line; # number. lit later expands each %dbg(ARG) to a command that behaves as a null; # command in the target shell so that the line number is seen in lit's verbose; # mode.; #; # This regex captures ARG. ARG must not contain a right parenthesis, which; # terminates %dbg. ARG must not contain quotes, in which ARG might be enclosed; # during expansion.; #; # COMMAND that follows %dbg(ARG) is also captured. COMMAND can be; # empty as a result of conditinal substitution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:92,pipeline,pipeline,92,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,['pipeline'],['pipeline']
Deployability,"# Activate debug-level messages for topic integration to be able to follow; # actions below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:42,integrat,integration,42,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Deployability,"# Add Integration topic to existing INFO stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:6,Integrat,Integration,6,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['Integrat'],['Integration']
Deployability,"# Add any extra paths that contain custom files (such as robots.txt or; # .htaccess) here, relative to this directory. These files are copied; # directly to the root of the documentation.; #html_extra_path = []; # If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a j",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:233,update,updated,233,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['update'],['updated']
Deployability,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:9,integrat,integration,9,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"# AddressSanitizer runtime and ROOT configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:36,configurat,configuration,36,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['configurat'],['configuration']
Deployability,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,integrat,integration,19,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,3,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:188,configurat,configuration,188,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,4,"['configurat', 'install']","['configuration', 'install']"
Deployability,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:184,integrat,integration,184,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,"['configurat', 'integrat']","['configuration', 'integration']"
Deployability,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:221,configurat,configuration,221,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['configurat'],['configuration']
Deployability,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:25,integrat,integrating,25,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,1,['integrat'],['integrating']
Deployability,"# Another possibility: Change global default for 1D numeric integration; # strategy on finite domains",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:60,integrat,integration,60,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Deployability,"# Avoid Windows heuristics which try to detect potential installer; # programs (which may need to run with elevated privileges) and ask; # if the user wants to run them in that way. This heuristic may; # match for executables containing the substrings ""patch"" (which is; # a substring of ""dispatch""), ""update"", ""setup"", etc. Set this; # environment variable indicating that we want to execute them with; # the current user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:57,install,installer,57,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,3,"['install', 'patch', 'update']","['installer', 'patch', 'update']"
Deployability,"# Build artifacts should only be uploaded for full builds, and only for; # ""official"" branches (master, v?-??-??-patches), i.e. not for pull_request; # We also want to upload any successful build, even if it fails testing; # later on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:113,patch,patches,113,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['patch'],['patches']
Deployability,"# CMS data taken in 2012 (11.6 fb^-1 integrated luminosity)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:37,integrat,integrated,37,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,1,['integrat'],['integrated']
Deployability,"# Calculate integral over landau custom numeric integrator specified as; # object default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:48,integrat,integrator,48,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrator']
Deployability,"# Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:64,integrat,integrator,64,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrator']
Deployability,"# Check Windows registry for keys that prove an MS Visual Studio 14.0 installation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:70,install,installation,70,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['install'],['installation']
Deployability,"# Check for nested test suites, first in the execpath in case there is a; # site configuration and then in the source path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:81,configurat,configuration,81,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['configurat'],['configuration']
Deployability,# Check if there is a local configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:28,configurat,configuration,28,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['configurat'],['configuration']
Deployability,"# Check the substitution's name.; #; # Do not extend this to permit '.' or any sequence that's special in a; # python pattern. We could escape that automatically for; # DEFINE/REDEFINE directives in test files. However, lit configuration; # file authors would still have to remember to escape them manually in; # substitution names but not in values. Moreover, the manually chosen; # and automatically chosen escape sequences would have to be consistent; # (e.g., '\.' vs. '[.]') in order for REDEFINE to successfully redefine; # a substitution previously defined by a lit configuration file. All; # this seems too error prone and confusing to be worthwhile. If you; # want your name to express structure, use ':' instead of '.'.; #; # Actually, '{' and '}' are special if they contain only digits possibly; # separated by a comma. Requiring a leading letter avoids that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:224,configurat,configuration,224,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,2,['configurat'],['configuration']
Deployability,"# Choose between lit's internal shell pipeline runner and a real shell.; # If LIT_USE_INTERNAL_SHELL is in the environment, we use that as an; # override.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:38,pipeline,pipeline,38,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['pipeline'],['pipeline']
Deployability,"# Cleanup previous installation directory if any",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:19,install,installation,19,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,2,['install'],['installation']
Deployability,"# Collapse lines with trailing '\\', or add line with line number to; # start a new pipeline.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:84,pipeline,pipeline,84,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['pipeline'],['pipeline']
Deployability,# Command line overrides configuration for maxIndividualTestTime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py:25,configurat,configuration,25,interpreter/llvm-project/llvm/utils/lit/lit/main.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py,1,['configurat'],['configuration']
Deployability,# Compute heuristic 1: look at context of patch lines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:42,patch,patch,42,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,1,['patch'],['patch']
Deployability,# Compute the updated line number by counting the intervening; # newlines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:14,update,updated,14,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['update'],['updated']
Deployability,# Configuration files to look for when discovering test suites.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:2,Configurat,Configuration,2,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Configurat'],['Configuration']
Deployability,"# Configuration for usage from Jupyter notebooks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Configurat,Configuration,2,bindings/pyroot/pythonizations/python/ROOT/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py,1,['Configurat'],['Configuration']
Deployability,# Copy the cached source and apply any patches to the copy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:39,patch,patches,39,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['patch'],['patches']
Deployability,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:151,configurat,configuration,151,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,1,['configurat'],['configuration']
Deployability,"# Create a SparkContext with the configuration stored in `sparkconf`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:33,configurat,configuration,33,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,1,['configurat'],['configuration']
Deployability,"# Create a copy of the global environment and modify it for; # this one command. There might be multiple envs in a pipeline,; # and there might be multiple envs in a command (usually when; # one comes from a substitution):; # env FOO=1 llc < %s | env BAR=2 llvm-mc | FileCheck %s; # env FOO=1 %{another_env_plus_cmd} | FileCheck %s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:115,pipeline,pipeline,115,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['pipeline'],['pipeline']
Deployability,# Create configuration defaults from list of checks,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:9,configurat,configuration,9,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['configurat'],['configuration']
Deployability,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:144,integrat,integration,144,tutorials/roofit/rf315_projectpdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py,2,['integrat'],['integration']
Deployability,"# Create study manager with separate generation and fit model. ROOT.This configuration; # is set up to generate bad fits as the fit and generator model have different means; # and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:73,configurat,configuration,73,tutorials/roofit/rf802_mcstudy_addons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py,1,['configurat'],['configuration']
Deployability,"# Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:213,integrat,integrate,213,tutorials/roofit/rf316_llratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py,1,['integrat'],['integrate']
Deployability,"# Deleting the last node releases the RVecs and releases the reference; # to the numpy array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:25,release,releases,25,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,2,['release'],['releases']
Deployability,# Determine the builtin includes directory so that we can update tests that; # depend on the builtin headers. See get_clang_builtin_include_dir() and; # use_clang() in llvm/utils/lit/lit/llvm/config.py.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:58,update,update,58,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['update'],['update']
Deployability,"# Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,integrat,integration,19,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Deployability,"# Documents to append as an appendix to all manuals.; # texinfo_appendices = []; # If false, no module index is generated.; # texinfo_domain_indices = True; # How to display URL addresses: 'footnote', 'no', or 'inline'.; # texinfo_show_urls = 'footnote'; # Example configuration for intersphinx: refer to the Python standard library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:265,configurat,configuration,265,interpreter/llvm-project/clang/docs/analyzer/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py,1,['configurat'],['configuration']
Deployability,"# Done, finalized and trigger an update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:33,update,update,33,tutorials/pyroot/hsum.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py,1,['update'],['update']
Deployability,"# Enable thread safety for the whole mapper function. We need to do; # this since two tasks could be invoking the C++ interpreter; # simultaneously, given that this function will release the GIL; # before calling into C++ to run the event loop. Dask multi-threaded; # or even multi-process workers could trigger such a scenario.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:179,release,release,179,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,1,['release'],['release']
Deployability,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:55,integrat,integrator,55,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['integrat'],['integrator']
Deployability,"# Example: Change global precision for 1D integrals from 1e-7 to 1e-6; #; # The relative epsilon (change as fraction of current best integral estimate) and; # absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; # separately. For most pdf integrals the relative change criterium is the most important,; # however for certain non-pdf functions that integrate out to zero a separate absolute; # change criterium is necessary to declare convergence of the integral; #; # NB: ROOT.This change is for illustration only. In general the precision should be at least 1e-7; # for normalization integrals for MINUIT to succeed.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:382,integrat,integrate,382,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrate']
Deployability,# Expand pipeline if '-print-pipeline-passes'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py:9,pipeline,pipeline,9,interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py,2,['pipeline'],"['pipeline', 'pipeline-passes']"
Deployability,"# Explicitly close any redirected files. We need to do this now because we; # need to release any handles we may have on the temporary files (important; # on Win32, for example). Since we have already spawned the subprocess, our; # handles have already been transferred so we do not need them anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:86,release,release,86,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['release'],['release']
Deployability,"# Express your chain of operations with clarity!; # We are discussing an example here but it is not hard to imagine much more; # complex pipelines of actions acting on data. Those might require code; # which is well organised, for example allowing to conditionally add filters; # or again to clearly separate filters and actions without the need of; # writing the entire pipeline on one line. This can be easily achieved.; # We'll show this re-working the `Count` example:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:137,pipeline,pipelines,137,tutorials/dataframe/df001_introduction.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,# FIXME: Record some information on the lit configuration used?; # FIXME: Record information from the individual test suites?; # Encode the tests.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py:44,configurat,configuration,44,interpreter/llvm-project/llvm/utils/lit/lit/reports.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py,1,['configurat'],['configuration']
Deployability,"# FIXME: the blame cache could probably be made more effective still if; # instead of storing the requested base_revision in the cache, the last; # revision before the base revision this file/path got changed in gets; # stored. That way multiple project revisions for which this specific; # file/patch hasn't changed would get cache hits (instead of misses in; # the current implementation).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:296,patch,patch,296,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,1,['patch'],['patch']
Deployability,"# Formatting the output line with the updated mass and width",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py:38,update,updated,38,etc/pdg_table_update.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py,1,['update'],['updated']
Deployability,"# General view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:15,configurat,configuration,15,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['configurat'],['configuration']
Deployability,"# Handle in-process builtins.; #; # Handle ""echo"" as a builtin if it is not part of a pipeline. This; # greatly speeds up tests that construct input files by repeatedly; # echo-appending to a file.; # FIXME: Standardize on the builtin echo implementation. We can use a; # temporary file to sidestep blocking pipe write issues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:86,pipeline,pipeline,86,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['pipeline'],['pipeline']
Deployability,# Heuristic 1: assume good reviewers are the ones that touched the same; # lines before as this patch is touching.; # Heuristic 2: assume good reviewers are the ones that touched the same; # files before as this patch is touching.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:96,patch,patch,96,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,2,['patch'],['patch']
Deployability,"# Icon view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,configurat,configuration,12,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['configurat'],['configuration']
Deployability,"# If development release, then add revision to the version",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:17,release,release,17,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['release'],['release']
Deployability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:298,configurat,configuration,298,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,2,['configurat'],['configuration']
Deployability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:297,configurat,configuration,297,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['configurat'],['configuration']
Deployability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration ------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be; # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom; # ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:297,configurat,configuration,297,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['configurat'],['configuration']
Deployability,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:21,update,updated,21,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['update'],['updated']
Deployability,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; # html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; # html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; # html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; # html_additional_pages = {}; # If false, no module index is generated.; # html_domain_indices = True; # If false, no index is generated.; # html_use_index = True; # If true, the index is split into individual pages for each letter.; # html_split_index = False; # If true, links to the reST sources are added to the pages.; # html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; # html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; # html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; # html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; # html_file_suffix = None; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:21,update,updated,21,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,2,['update'],['updated']
Deployability,"# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:21,update,updated,21,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['update'],['updated']
Deployability,"# If there is a '`' in the line, assume it is a ustack(1) entry in; # the form of <modulename>`<modulefunc>, where <modulefunc> is never; # truncated (but does need the mangling patched).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py:178,patch,patched,178,interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,1,['patch'],['patched']
Deployability,"# If true, show URL addresses after external links.; # man_show_urls = False; # FIXME: Define intersphinx configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:106,configurat,configuration,106,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['configurat'],['configuration']
Deployability,"# If you do the fit the usual was in RooFit, you will get a bias in the; # result. This is because the continuous, normalized pdf is evaluated only; # at the bin centers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:103,continuous,continuous,103,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['continuous'],['continuous']
Deployability,"# In the case of an exponential function, the bias that you get by; # evaluating the pdf only at the bin centers is a constant scale factor in; # each bin. Here, we can do a trick to get rid of the bias: we also; # evaluate the normalization integral for the pdf the same way, i.e.,; # summing the values of the unnormalized pdf at the bin centers. Like this; # the bias cancels out. You can achieve this by customizing the way how the; # pdf is integrated (see also the rf901_numintconfig tutorial).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:446,integrat,integrated,446,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrated']
Deployability,"# Initialize configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,configurat,configuration,13,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['configurat'],['configuration']
Deployability,"# Insert the files to be installed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:25,install,installed,25,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['install'],['installed']
Deployability,# Install the built-in keyword parsers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:2,Install,Install,2,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['Install'],['Install']
Deployability,# Install user-defined additional parsers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:2,Install,Install,2,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['Install'],['Install']
Deployability,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:61,integrat,integrate,61,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['integrat'],['integrate']
Deployability,"# Integrate IPython >= 5 with ROOT's event loop; # Check for new GUI events until there is some user input to process",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:2,Integrat,Integrate,2,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['Integrat'],['Integrate']
Deployability,"# Integrate model over projModel = Int model dmean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Integrat,Integrate,2,tutorials/roofit/rf211_paramconv.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py,1,['Integrat'],['Integrate']
Deployability,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:2,Integrat,Integrate,2,tutorials/roofit/rf110_normintegration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py,2,['Integrat'],['Integrate']
Deployability,"# Integrated luminosity of the data samples",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:2,Integrat,Integrated,2,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,1,['Integrat'],['Integrated']
Deployability,"# Internal attribute to keep track of the number of partitions. We also; # check whether it was specified by the user when creating the dataframe.; # If so, this attribute will not be updated when triggering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:184,update,updated,184,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['update'],['updated']
Deployability,"# JupyROOT sample configuration file for nbconvert",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py:18,configurat,configuration,18,etc/notebook/html/sample_config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py,1,['configurat'],['configuration']
Deployability,"# Keep display handle for canvases to be able update them",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:46,update,update,46,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['update'],['update']
Deployability,"# Let's fit the Gaussian to the data. The mean is updated accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:50,update,updated,50,tutorials/roofit/rf409_NumPyPandasToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py,1,['update'],['updated']
Deployability,"# List view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,configurat,configuration,12,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['configurat'],['configuration']
Deployability,# Lit configuration,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py:6,configurat,configuration,6,interpreter/llvm-project/llvm/utils/release/bump-version.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py,1,['configurat'],['configuration']
Deployability,"# Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; # Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:190,integrat,integration,190,tutorials/roofit/rf316_llratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py,1,['integrat'],['integration']
Deployability,"# Make a difficult to normalize pdf in 3 dimensions that is; # integrated numerically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:63,integrat,integrated,63,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['integrat'],['integrated']
Deployability,"# Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:61,integrat,integrating,61,tutorials/roofit/rf306_condpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py,1,['integrat'],['integrating']
Deployability,"# Needs brew install python. We should only install if we need the; # functionality",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:13,install,install,13,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,2,['install'],['install']
Deployability,"# Otherwise we have a directory to search for tests, start by getting the; # local configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:83,configurat,configuration,83,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['configurat'],['configuration']
Deployability,"# Otherwise, copy the current config and load the local configuration; # file into it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:56,configurat,configuration,56,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['configurat'],['configuration']
Deployability,# Patch file instead,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:2,Patch,Patch,2,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['Patch'],['Patch']
Deployability,"# Patch files to add links, but skip binary files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:2,Patch,Patch,2,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['Patch'],['Patch']
Deployability,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:31,configurat,configuration,31,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['configurat'],['configuration']
Deployability,"# Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; # Use four processes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py:39,integrat,integration,39,tutorials/roofit/rf603_multicpu.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py,1,['integrat'],['integration']
Deployability,"# Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:224,integrat,integrated,224,tutorials/roofit/rf501_simultaneouspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py,1,['integrat'],['integrated']
Deployability,"# Plot full decay distribution; # ----------------------------------------------------------; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:135,integrat,integrated,135,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Deployability,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:77,configurat,configuration,77,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['configurat'],['configuration']
Deployability,"# Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:88,integrat,integrated,88,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Deployability,"# Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:90,integrat,integrated,90,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Deployability,"# Pretty printers for gdb; # \author: Stephan Hageboeck, CERN; # These pretty printers will make ROOT objects more readable when printed in gdb.; # If the pretty-printed output is not sufficient, one can always use ""print /r <object>""; # for raw printing.; #; # When a debug build is used, they will be installed next to the ROOT libraries.; # gdb will load them automatically if the auto-load-safe-path is set to ROOT's library directory.; # For this, one has to add `add-auto-load-safe-path <ROOT lib dir>` to .gdbinit; #; # If loaded successfully, typing `info pretty-printer` at the gdb prompt should list the; # printers registered at the end of this file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/gdbPrinters/libCore.so-gdb.py:303,install,installed,303,misc/gdbPrinters/libCore.so-gdb.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/gdbPrinters/libCore.so-gdb.py,2,['install'],['installed']
Deployability,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,configurat,configuration,8,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,2,['configurat'],['configuration']
Deployability,"# Print streams configuration in verbose, also shows inactive streams",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:16,configurat,configuration,16,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['configurat'],['configuration']
Deployability,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:81,integrat,integrations,81,tutorials/roofit/rf608_fitresultaspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py,1,['integrat'],['integrations']
Deployability,# Remove potentially stale patched source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:27,patch,patched,27,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['patch'],['patched']
Deployability,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,configurat,configuration,42,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,3,['configurat'],['configuration']
Deployability,"# Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:309,integrat,integrated,309,tutorials/roofit/rf212_plottingInRanges_blinding.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py,1,['integrat'],['integrated']
Deployability,"# Run manager, make plots; # ---------------------------------------------; # Run 1000 experiments. ROOT.This configuration will generate a fair number; # of (harmless) MINUIT warnings due to the instability of the Chebychev polynomial fit; # at low statistics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:110,configurat,configuration,110,tutorials/roofit/rf803_mcstudy_addons2.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py,1,['configurat'],['configuration']
Deployability,# Run scan-build from within the patched source directory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:33,patch,patched,33,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['patch'],['patched']
Deployability,"# Set the configuration for the X and Y axis for the cumulative normal; # distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,configurat,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['configurat'],['configuration']
Deployability,"# Set the configuration for the X and Y axis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,configurat,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['configurat'],['configuration']
Deployability,"# Set the configuration of X and Y axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,configurat,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['configurat'],['configuration']
Deployability,# Setting up a virtualenv to run this script can be done by running the; # following commands:; # $ virtualenv venv; # $ . ./venv/bin/activate; # $ pip install Phabricator,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:152,install,install,152,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,1,['install'],['install']
Deployability,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:99,configurat,configuration,99,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,6,['configurat'],['configuration']
Deployability,# Step #-1; # Launch 'opt' once with '-print-pipeline-passes' to expand pipeline before; # starting reduction. Allows specifying a default pipelines (e.g.; # '-passes=default<O3>').,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:45,pipeline,pipeline-passes,45,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,3,['pipeline'],"['pipeline', 'pipeline-passes', 'pipelines']"
Deployability,"# Step #1; # Try to narrow down the failing pass sequence by splitting the pipeline in two; # opt invocations (A and B) starting with invocation A only running the first; # pipeline pass and invocation B the remaining. Keep moving the split point; # forward as long as invocation A exits normally and invocation B fails with; # the expected error. This will accomplish two things first the input IR will be; # further reduced and second, with that IR, the reduced pipeline for invocation; # B will be sufficient to reproduce.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:75,pipeline,pipeline,75,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,3,['pipeline'],['pipeline']
Deployability,# Step #2; # Try removing passes from the end of the remaining pipeline while still; # reproducing the error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:63,pipeline,pipeline,63,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,1,['pipeline'],['pipeline']
Deployability,# Step #3; # Now that we have a pipeline that is reduced both front and back we do; # exhaustive sweeps over the remainder trying to remove one pass at a time.; # Repeat as long as reduction is possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:32,pipeline,pipeline,32,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,1,['pipeline'],['pipeline']
Deployability,"# TCanvas.Update() draws the frame, after which one can change it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py:10,Update,Update,10,tutorials/pyroot/graph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py,1,['Update'],['Update']
Deployability,"# TODO: any type should be replaced with the correct github type, but it requires refactoring to; # not require the github module to be installed everywhere.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:136,install,installed,136,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,1,['install'],['installed']
Deployability,"# TODO: numba_extensions will load all extensions even if the package; # itself is not otherwise imported, just installed; in the case of cppyy,; # that is currently too heavy (and breaks on conda); #entry_points={; # 'numba_extensions': [; # 'init = cppyy.numba_ext:_init_extension',; # ],; #},",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:112,install,installed,112,bindings/pyroot/cppyy/cppyy/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py,1,['install'],['installed']
Deployability,# Take the last failing exit code from the pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:43,pipeline,pipeline,43,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['pipeline'],['pipeline']
Deployability,"# Test RDataFrame integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:18,integrat,integration,18,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['integrat'],['integration']
Deployability,"# Test cling integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:13,integrat,integration,13,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['integrat'],['integration']
Deployability,# The fallback behavior if graphviz is not installed!,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py:43,install,installed,43,interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,1,['install'],['installed']
Deployability,"# The host triple might not be set, at least if we're compiling clang; # from an already installed llvm.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:89,install,installed,89,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['install'],['installed']
Deployability,"# The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:85,release,release,85,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['release'],['release']
Deployability,"# The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:85,release,release,85,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['release'],['release']
Deployability,"# The name of the directory containing the source code that will be analyzed.; # Each time a project is analyzed, a fresh copy of its CachedSource directory; # will be copied to the PatchedSource directory and then the local patches; # in PATCHFILE_NAME will be applied (if PATCHFILE_NAME exists).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:182,Patch,PatchedSource,182,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,2,"['Patch', 'patch']","['PatchedSource', 'patches']"
Deployability,# The name of the patchfile specifying any changes that should be applied; # to the CachedSource before analyzing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:18,patch,patchfile,18,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['patch'],['patchfile']
Deployability,# The test suite configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:17,configurat,configuration,17,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['configurat'],['configuration']
Deployability,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short X.Y version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:97,release,release,97,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['release'],['release']
Deployability,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:97,release,release,97,interpreter/llvm-project/clang/docs/analyzer/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py,1,['release'],['release']
Deployability,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short version.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:97,release,release,97,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['release'],['release']
Deployability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; # html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; # html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; # html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; # html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; # html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; # html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:379,release,release,379,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,2,['release'],['release']
Deployability,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.; #html_theme_path = []; # The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:377,release,release,377,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['release'],['release']
Deployability,"# This file is a minimal clang-format sublime-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Put this file into your sublime Packages directory, e.g. on Linux:; # ~/.config/sublime-text-2/Packages/User/clang-format-sublime.py; # - Add a key binding:; # { ""keys"": [""ctrl+shift+c""], ""command"": ""clang_format"" },; #; # With this integration you can press the bound key and clang-format will; # format the current lines and selections for all cursor positions. The lines; # or regions are extended to the next bigger syntactic entities.; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py:46,integrat,integration,46,interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,3,"['install', 'integrat']","['install', 'integration']"
Deployability,"# This file is a minimal clang-format vim-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Add to your .vimrc:; #; # if has('python'); # map <C-I> :pyf <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:pyf <path-to-this-file>/clang-format.py<cr>; # elseif has('python3'); # map <C-I> :py3f <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:py3f <path-to-this-file>/clang-format.py<cr>; # endif; #; # The if-elseif-endif conditional should pick either the python3 or python2; # integration depending on your vim setup.; #; # The first mapping enables clang-format for NORMAL and VISUAL mode, the second; # mapping adds support for INSERT mode. Change ""C-I"" to another binding if you; # need clang-format on a different key (C-I stands for Ctrl+i).; #; # With this integration you can press the bound key and clang-format will; # format the current line in NORMAL and INSERT mode or the selected region in; # VISUAL mode. The line or region is extended to the next bigger syntactic; # entity.; #; # You can also pass in the variable ""l:lines"" to choose the range for; # formatting. This variable can either contain ""<start line>:<end line>"" or; # ""all"" to format the full file. So, to format the full file, write a function; # like:; # :function FormatFile(); # : let l:lines=""all""; # : if has('python'); # : pyf <path-to-this-file>/clang-format.py; # : elseif has('python3'); # : py3f <path-to-this-file>/clang-format.py; # : endif; # :endfunction; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py:42,integrat,integration,42,interpreter/llvm-project/clang/tools/clang-format/clang-format.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py,4,"['install', 'integrat']","['install', 'integration']"
Deployability,"# This is a private builtin parameter which can be used to perform; # translation of configuration paths. Specifically, this parameter; # can be set to a dictionary that the discovery process will consult; # when it finds a configuration it is about to load. If the given; # path is in the map, the value of that key is a path to the; # configuration to load instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:85,configurat,configuration,85,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,3,['configurat'],['configuration']
Deployability,"# This is an internal option in CPT, meant to be integrated into Cling's build system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:49,integrat,integrated,49,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['integrat'],['integrated']
Deployability,# This list is used by TestRunner.py to restrict running only tests that; # require one of the features in this list if this list is non-empty.; # Configurations can set this list to restrict the set of tests to run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:147,Configurat,Configurations,147,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['Configurat'],['Configurations']
Deployability,"# This time, the bias is not the same factor in each bin! This means our; # trick by sampling the integral in the same way doesn't cancel out the; # bias completely. The average bias is canceled, but there are per-bin; # biases that remain. Still, this method has some value: it is cheaper than; # rigurously correcting the bias by integrating the pdf in each bin. So if; # you know your per-bin bias variations are small or performance is an; # issue, this approach can be sufficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:332,integrat,integrating,332,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrating']
Deployability,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:76,Integrat,IntegrateBins,76,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,3,"['Integrat', 'integrat']","['IntegrateBins', 'integrated']"
Deployability,# Update config defaults.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:2,Update,Update,2,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['Update'],['Update']
Deployability,"# Update display every kUPDATE events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py:2,Update,Update,2,tutorials/pyroot/hsimple.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py,2,['Update'],['Update']
Deployability,"# Update it to the range of entries for this task",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Update,Update,2,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,2,['Update'],['Update']
Deployability,"# Update kernel configuration first, if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:2,Update,Update,2,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,"# Update local test object ""in place"" from remote test object. This; # ensures that the original test object which is used for printing test; # results reflects the changes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py:2,Update,Update,2,interpreter/llvm-project/llvm/utils/lit/lit/run.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py,1,['Update'],['Update']
Deployability,# Update the current stdin source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:2,Update,Update,2,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['Update'],['Update']
Deployability,# Update the cwd in the parent environment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:2,Update,Update,2,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['Update'],['Update']
Deployability,# Update the total call count,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py:2,Update,Update,2,interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,3,['Update'],['Update']
Deployability,"# Update to existing branch, examine new commits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:2,Update,Update,2,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,1,['Update'],['Update']
Deployability,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Update,Updates,2,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,2,"['Update', 'configurat']","['Updates', 'configuration']"
Deployability,"# Upgrade v3 to v4; # Load notebook string into json format, essentially creating a dictionary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:2,Upgrade,Upgrade,2,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,1,['Upgrade'],['Upgrade']
Deployability,"# User configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:7,configurat,configuration,7,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['configurat'],['configuration']
Deployability,# Validate that this user is allowed to modify releases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py:47,release,releases,47,interpreter/llvm-project/llvm/utils/release/github-upload-release.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py,1,['release'],['releases']
Deployability,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:230,release,release,230,tutorials/dataframe/distrdf004_dask_lxbatch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py,2,"['Install', 'release']","['Install', 'release']"
Deployability,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:420,integrat,integration,420,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Deployability,"# `current_head` is a well-known branch, e.g. master, or v6-28-00-patches. Use the matching branch; # upstream as the fork repository may be out-of-sync",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:66,patch,patches,66,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['patch'],['patches']
Deployability,"# adding the edge update function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,update,update,18,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,2,['update'],['update']
Deployability,"# adding the global update function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:20,update,update,20,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,2,['update'],['update']
Deployability,"# adding the node update function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,update,update,18,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['update'],['update']
Deployability,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,update,update,18,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,3,['update'],['update']
Deployability,"# all other objects do not support update and can be ignored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:35,update,update,35,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['update'],['update']
Deployability,# back off to subprocess if we don't have psutil installed,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py:49,install,installed,49,interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,1,['install'],['installed']
Deployability,"# base install",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:7,install,install,7,bindings/pyroot/cppyy/cppyy/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py,3,['install'],['install']
Deployability,"# custom install of backend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:9,install,install,9,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,2,['install'],['install']
Deployability,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:35,install,installed,35,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,2,['install'],['installed']
Deployability,"# do not copy wchar.h & friends b/c the pch should be generated at install time,; # so preventing conflict",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:67,install,install,67,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,1,['install'],['install']
Deployability,"# happens during egg_info and other non-build/install commands",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py:46,install,install,46,bindings/pyroot/cppyy/CPyCppyy/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py,1,['install'],['install']
Deployability,# iterate through subobjects and update it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:33,update,update,33,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['update']
Deployability,# line is a new line that got introduced in this patch.; # Do not record it as a changed line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:49,patch,patch,49,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,1,['patch'],['patch']
Deployability,"# monkey patch to be able to select a specific backend based on PyPy's version,; # which is not possible in the pyproject.toml file as there is currently no; # marker for it (this may change, after which this file can be removed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:9,patch,patch,9,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,1,['patch'],['patch']
Deployability,"# no formatter installed, let's keep it in bytes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py:15,install,installed,15,interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,1,['install'],['installed']
Deployability,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:88,install,installed,88,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,2,['install'],"['install', 'installed']"
Deployability,"# pythonize the animal release function to take ownership on return",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:23,release,release,23,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['release'],['release']
Deployability,"# sdkpath is something like /.../SDKs/MacOSX11.1.sdk, which is a; # symlink to MacOSX.sdk in the same directory. Resolve the symlink,; # to make the symlink in out_dir less likely to break when the SDK; # is updated (which will bump the number on xcrun's output, but not; # on the symlink destination).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py:208,update,updated,208,interpreter/llvm-project/llvm/utils/sysroot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py,1,['update'],['updated']
Deployability,"# self.update(0, '')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:7,update,update,7,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['update'],['update']
Deployability,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:39,configurat,configuration,39,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['configurat'],['configuration']
Deployability,"# setuptools expects to be invoked from within the directory of setup.py, but it; # is nice to allow:; # python path/to/setup.py install; # to work (for scripts, etc.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/setup.py:129,install,install,129,interpreter/llvm-project/llvm/utils/lit/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/setup.py,1,['install'],['install']
Deployability,"# sys.displayhook is called on the result of evaluating an expression entered; # in an interactive Python session.; # Therefore, this function will call EndOfLineAction after each interactive; # command (to update display etc.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:207,update,update,207,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['update'],['update']
Deployability,"# the following ensures proper build/installation order, after which the normal; # install through setup.py picks up their wheels from the cache (TODO: note the; # duplication here with setup.py; find a better way)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:37,install,installation,37,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,2,['install'],"['install', 'installation']"
Deployability,# update matches from right to left to make increasing character length (9->10) smoother,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:2,update,update,2,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['update']
Deployability,# update subcommand,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATest.py:2,update,update,2,interpreter/llvm-project/clang/utils/analyzer/SATest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATest.py,1,['update'],['update']
Deployability,"# use $MAKE to install if it is defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:15,install,install,15,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,1,['install'],['install']
Deployability,"# we only merge runs, so we only need to update the run index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:41,update,update,41,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['update'],['update']
Deployability,"#! /usr/bin/env python; #; # Harvest the solved issues for a certain tag and print them out in a format; # which is ready to be pasted in the release notes.; #; # Copyright (c) 2024 Rene Brun and Fons Rademakers; # Author: Enrico Guiraud, Axel Naumann, Danilo Piparo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.ci/get_solved_issues-github-actions.py:142,release,release,142,.ci/get_solved_issues-github-actions.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.ci/get_solved_issues-github-actions.py,1,['release'],['release']
Deployability,"#!/usr/bin/env python3; # ===-- github-upload-release.py ------------------------------------------===#; #; # Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; # See https://llvm.org/LICENSE.txt for license information.; # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; #; # ===------------------------------------------------------------------------===#; #; # Create and manage releases in the llvm github project.; #; # This script requires python3 and the PyGithub module.; #; # Example Usage:; #; # You will need to obtain a personal access token for your github account in; # order to use this script. Instructions for doing this can be found here:; # https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line; #; # Create a new release from an existing tag:; # ./github-upload-release.py --token $github_token --release 8.0.1-rc4 create; #; # Upload files for a release; # ./github-upload-release.py --token $github_token --release 8.0.1-rc4 upload --files llvm-8.0.1rc4.src.tar.xz; #; # You can upload as many files as you want at a time and use wildcards e.g.; # ./github-upload-release.py --token $github_token --release 8.0.1-rc4 upload --files *.src.*; # ===------------------------------------------------------------------------===#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py:46,release,release,46,interpreter/llvm-project/llvm/utils/release/github-upload-release.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py,10,['release'],"['release', 'releases']"
Deployability,#!/usr/bin/env python3; # A tool to parse ASTMatchers.h and update the documentation in; # ../LibASTMatchersReference.html automatically. Run from the; # directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:60,update,update,60,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,2,['update'],['update']
Deployability,#!/usr/bin/env python3; # A tool to parse the FormatStyle struct from Format.h and update the; # documentation in ../ClangFormatStyleOptions.rst automatically.; # Run from the directory in which this file is located to update the docs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py:83,update,update,83,interpreter/llvm-project/clang/docs/tools/dump_format_style.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_style.py,2,['update'],['update']
Deployability,#!/usr/bin/env python3; # A tool to parse the output of `clang-format --help` and update the; # documentation in ../ClangFormat.rst automatically.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_help.py:82,update,update,82,interpreter/llvm-project/clang/docs/tools/dump_format_help.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_format_help.py,1,['update'],['update']
Deployability,#!/usr/bin/env python3; # Automatically formatted with yapf (https://github.com/google/yapf); # Fake 'opt' program that can be made to crash on request. For testing; # the 'reduce_pipeline.py' automatic 'opt' NPM pipeline reducer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py:213,pipeline,pipeline,213,interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline_test/fake_opt.py,1,['pipeline'],['pipeline']
Deployability,#!/usr/bin/env python3; # Automatically formatted with yapf (https://github.com/google/yapf); # Script for automatic 'opt' pipeline reduction for when using the new; # pass-manager (NPM). Based around the '-print-pipeline-passes' option.; #; # The reduction algorithm consists of several phases (steps).; #; # Step #0: Verify that input fails with the given pipeline and make note of the; # error code.; #; # Step #1: Split pipeline in two starting from front and move forward as long as; # first pipeline exits normally and the second pipeline fails with the expected; # error code. Move on to step #2 with the IR from the split point and the; # pipeline from the second invocation.; #; # Step #2: Remove passes from end of the pipeline as long as the pipeline fails; # with the expected error code.; #; # Step #3: Make several sweeps over the remaining pipeline trying to remove one; # pass at a time. Repeat sweeps until unable to remove any more passes.; #; # Usage example:; # reduce_pipeline.py --opt-binary=./build-all-Debug/bin/opt --input=input.ll --output=output.ll --passes=PIPELINE [EXTRA-OPT-ARGS ...],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py:123,pipeline,pipeline,123,interpreter/llvm-project/llvm/utils/reduce_pipeline.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/reduce_pipeline.py,11,"['PIPELINE', 'pipeline']","['PIPELINE', 'pipeline', 'pipeline-passes']"
Deployability,"#!/usr/bin/env python3; # This script was committed on 20/11/2019 and it would probably make sense to remove; # it after the next release branches.; # This script is pipe based and converts an arm_neon.td (or arm_fp16.td) file; # using the old single-char type modifiers to an equivalent new-style form where; # each modifier is orthogonal and they can be composed.; #; # It was used to directly generate the .td files on main, so if you have any; # local additions I would suggest implementing any modifiers here, and running; # it over your entire pre-merge .td files rather than trying to resolve any; # conflicts manually.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/convert_arm_neon.py:130,release,release,130,interpreter/llvm-project/clang/utils/convert_arm_neon.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/convert_arm_neon.py,1,['release'],['release']
Deployability,"#!/usr/bin/env python3; #; # ======- pre-push - LLVM Git Help Integration ---------*- python -*--========#; #; # Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; # See https://llvm.org/LICENSE.txt for license information.; # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; #; # ==------------------------------------------------------------------------==#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:62,Integrat,Integration,62,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,1,['Integrat'],['Integration']
Deployability,"#!/usr/bin/env python; # Author: Pau Miquel i Mir <pau.miquel.mir@cern.ch> <pmm1g15@soton.ac.uk>>; # Date: July, 2016; #; # DISCLAIMER: This script is a prototype and a work in progress. Indeed, it is possible that; # it may not work for certain tutorials, and that it, or the tutorial, might need to be; # tweaked slightly to ensure full functionality. Please do not hesitate to email the author; # with any questions or with examples that do not work.; #; # HELP IT DOESN'T WORK: Two possible solutions:; # 1. If the tutorial takes a long time to execute (more than 90 seconds), add the name of the; # tutorial to the list of long tutorials listLongTutorials, in the function findTimeout.; # 2. Check that helper functions are recognised correctly in split(text).; #; # REQUIREMENTS: This script needs jupyter to be properly installed, as it uses the python; # package nbformat and calls the shell commands `jupyter nbconvert` and `jupyter trust`. The; # rest of the packages used should be included in a standard installation of python. The script; # is intended to be run on a UNIX based system.; #; #; # FUNCTIONING:; # -----------; # The converttonotebook script creates Jupyter notebooks from raw C++ or python files.; # Particularly, it is indicated to convert the ROOT tutorials found in the ROOT; # repository.; #; # The script should be called from bash with the following format:; # python /path/to/script/converttonotebook.py /path/to/<macro>.C /path/to/outdir; #; # Indeed the script takes two arguments, the path to the macro and the path to the directory; # where the notebooks will be created; #; # The script's general functioning is as follows. The macro to be converted is imported as a string.; # A series of modifications are made to this string, for instance delimiting where markdown and; # code cells begin and end. Then, this string is converted into ipynb format using a function; # in the nbconvert package. Finally, the notebook is executed and output.; #; # For convertin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:827,install,installed,827,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,2,['install'],"['installation', 'installed']"
Deployability,"#!/usr/bin/env python; # This script extracts the VPlan digraphs from the vectoriser debug messages; # and saves them in individual dot files (one for each plan). Optionally, and; # providing 'dot' is installed, it can also render the dot into a PNG file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_vplan.py:201,install,installed,201,interpreter/llvm-project/llvm/utils/extract_vplan.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_vplan.py,1,['install'],['installed']
Deployability,#!/usr/bin/env python; # To use:; # 1) Update the 'decls' list below with your fuzzing configuration.; # 2) Run with the clang binary as the command-line argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/modfuzz.py:39,Update,Update,39,interpreter/llvm-project/clang/utils/modfuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/modfuzz.py,2,"['Update', 'configurat']","['Update', 'configuration']"
Deployability,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:540,configurat,configuration,540,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,1,['configurat'],['configuration']
Deployability,"## Declare Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; # // Creating the factory object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:541,configurat,configuration,541,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['configurat'],['configuration']
Deployability,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:266,configurat,configuration,266,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['configurat'],['configuration']
Deployability,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:198,update,updates,198,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,2,['update'],"['update', 'updates']"
Deployability,"## \file rf505_asciicfg.py; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: reading and writing ASCII configuration files; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:144,configurat,configuration,144,tutorials/roofit/rf505_asciicfg.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py,1,['configurat'],['configuration']
Deployability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:113,release,release,113,tutorials/dataframe/df107_SingleTopAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Spark connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Spark; ## cluster, namely a SparkConf object holding configuration parameters and a; ## SparkContext object created with the desired options. After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to the SparkContext instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset.; ##; ## \macro_code; ## \macro_image; ##; ## \date March 2021; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:266,configurat,configuration,266,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,1,['configurat'],['configuration']
Deployability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:124,release,release,124,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:129,release,release,129,tutorials/dataframe/df104_HiggsToTwoPhotons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:116,release,release,116,tutorials/dataframe/df105_WBosonAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_pyroot; ## Example frame with one box where the user can increase or decrease a number; ## and the shown value will be updated accordingly.; ##; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/numberEntry.py:150,update,updated,150,tutorials/pyroot/numberEntry.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/numberEntry.py,1,['update'],['updated']
Deployability,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:107,release,release,107,tutorials/rcanvas/df104.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:94,release,release,94,tutorials/rcanvas/df105.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py,3,['release'],['release']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:429,integrat,integrating,429,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrating']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how MC sampling algorithms; ## on specific pdfs are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:90,configurat,configuration,90,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,1,['configurat'],['configuration']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how numeric (partial) integrals are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:90,configurat,configuration,90,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['configurat'],['configuration']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: examples on normalization and integration of pdfs, construction; ## of cumulative distribution functions from monodimensional pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:107,integrat,integration,107,tutorials/roofit/rf110_normintegration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py,1,['integrat'],['integration']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: marginizalization of multi-dimensional pdfs through integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:133,integrat,integration,133,tutorials/roofit/rf315_projectpdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py,1,['integrat'],['integration']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: normalization and integration of pdfs, construction of; ## cumulative distribution functions from pdfs in two dimensions; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:99,integrat,integration,99,tutorials/roofit/rf308_normintegration2d.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py,1,['integrat'],['integration']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: projecting pdf and data ranges in continuous observables; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf311_rangeplot.py:115,continuous,continuous,115,tutorials/roofit/rf311_rangeplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf311_rangeplot.py,1,['continuous'],['continuous']
Deployability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:169,integrat,integration,169,tutorials/roofit/rf313_paramranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py,1,['integrat'],['integration']
Deployability,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:175,install,installed,175,tutorials/sql/sqlselect.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py,1,['install'],['installed']
Deployability,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1037,configurat,configuration,1037,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['configurat'],['configuration']
Deployability,"### User configuration; # If you want to use a different 'benchmark' than building clang, make this; # function do what you want. out_dir is the build directory for clang, so all; # of the clang binaries will live under ""${out_dir}/bin/"". Using clang in; # ${out_dir} will magically have the profiles go to the right place.; #; # You may assume that out_dir is a freshly-built directory that you can reach; # in to build more things, if you'd like.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py:9,configurat,configuration,9,interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,1,['configurat'],['configuration']
Deployability,###############################################################################; # Configuration setup.; ###############################################################################; # Find Clang for static analysis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:83,Configurat,Configuration,83,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['Configurat'],['Configuration']
Deployability,"###############################################################################; # argparse configuration #; ###############################################################################",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:92,configurat,configuration,92,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['configurat'],['configuration']
Deployability,###; # Toggle to use checked versions of enumeration routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:7,Toggle,Toggle,7,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['Toggle'],['Toggle']
Deployability,"#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MetropolisHastings; \ingroup Roostats. This class uses the Metropolis-Hastings algorithm to construct a Markov Chain; of data points using Monte Carlo. In the main algorithm, new points in the; parameter space are proposed and then visited based on their relative; likelihoods. This class can use any implementation of the ProposalFunction,; including non-symmetric proposal functions, to propose parameter points and; still maintain detailed balance when constructing the chain. The ""Likelihood"" function that is sampled when deciding what steps to take in; the chain has been given a very generic implementation. The user can create; any RooAbsReal based on the parameters and pass it to a MetropolisHastings; object with the method SetFunction(RooAbsReal&). Be sure to tell; MetropolisHastings whether your RooAbsReal is on a (+/-) regular or log scale,; so that it knows what logic to use when sampling your RooAbsReal. For example,; a common use is to sample from a -log(Likelihood) distribution (NLL), for which; the appropriate configuration calls are SetType(MetropolisHastings::kLog);; SetSign(MetropolisHastings::kNegative);; If you're using a traditional likelihood function:; SetType(MetropolisHastings::kRegular); SetSign(MetropolisHastings::kPositive);; You must set these type and sign flags or MetropolisHastings will not construct; a MarkovChain. Also note that in ConstructChain(), the values of the variables are randomized; uniformly over their intervals before construction of the MarkovChain begins. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx:1516,configurat,configuration,1516,roofit/roostats/src/MetropolisHastings.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx,1,['configurat'],['configuration']
Deployability,"#------------------------------; # Create updated pdg_table.txt; #------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py:42,update,updated,42,etc/pdg_table_update.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/pdg_table_update.py,1,['update'],['updated']
Deployability,"#; ## apply patches (in order); #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:12,patch,patches,12,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,1,['patch'],['patches']
Deployability,"#; ## manylinux1 specific patch, as there a different, older, compiler is used; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:26,patch,patch,26,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,1,['patch'],['patch']
Deployability,"' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen.; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the sliders the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using this slider the effect of binning the data into; bins can be made visible => statistical fluctuations; 'Axis Range': with the DoubleSlider it is possible to zoom into; the specified axis range. It is also possible to set; the upper and lower limit in fields below the slider; 'Delayed drawing': all the Binning sliders can be set to delay; draw mode. Then the changes on the histogram are only; updated, when the Slider is released. This should be; activated if the redrawing of the histogram is too; time consuming. //; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:3939,update,updated,3939,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,2,"['release', 'update']","['released', 'updated']"
Deployability,'''; %define __spec_install_post %{nil}; %define debug_package %{nil}; %define __os_install_post %{_dbpath}/brp-compress. Summary: Interactive C++ interpreter; Name: cling; Version: 0.2~dev; Release: ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:191,Release,Release,191,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Release'],['Release']
Deployability,'''; CPT will now attempt to install the distro package automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,install,install,29,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['install'],['install']
Deployability,'''; CPT will now attempt to update/install the requisite packages automatically. Make sure you have MacPorts installed.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,update,update,29,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,3,"['install', 'update']","['install', 'installed', 'update']"
Deployability,'''; CPT will now attempt to update/install the requisite packages automatically.; Do you want to continue? [yes/no]: ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:29,update,update,29,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,4,"['install', 'update']","['install', 'update']"
Deployability,'''; Install/update the required packages by:; sudo apt-get update; sudo apt-get install {0} {1}; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Install,Install,5,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,4,"['Install', 'install', 'update']","['Install', 'install', 'update']"
Deployability,'''; Install/update the required packages by:; sudo port -v selfupdate; sudo port install {0} {1}; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Install,Install,5,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,3,"['Install', 'install', 'update']","['Install', 'install', 'update']"
Deployability,'''; Install/update the required packages by:; sudo yum install git cmake gcc gcc-c++ rpm-build; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:5,Install,Install,5,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,3,"['Install', 'install', 'update']","['Install', 'install', 'update']"
Deployability,"'''; License: LGPLv2+ or NCSA; Group: Development/Languages/Other; SOURCE0 : %{name}-%{version}.tar.bz2; URL: http://cling.web.cern.ch/; Vendor: Developed by The ROOT Team; CERN and Fermilab; Packager: Anirudha Bose <ani07nov@gmail.com>. BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root. %description; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers. One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development. %prep; %setup; mkdir -p $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc; mv $RPM_BUILD_DIR/%{name}-%{version}/bin/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/docs/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share/doc/; mv $RPM_BUILD_DIR/%{name}-%{version}/lib/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/include/ $RPM_BUILD_DIR/%{name}-%{version}/usr; mv $RPM_BUILD_DIR/%{name}-%{version}/share/* $RPM_BUILD_DIR/%{name}-%{version}/usr/share. rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/docs; rm -Rf $RPM_BUILD_DIR/%{name}-%{version}/share. if [ ${RPM_ARCH} = 'x86_64' ]; then; mv $RPM_BUILD_DIR/%{name}-%{version}/usr/lib $RPM_BUILD_DIR/%{name}-%{version}/usr/lib64; fi. %build; # Empty section. %install; rm -rf %{buildroot}; mkdir -p %{buildroot}. # in builddir; cp -a * %{buildroot}. %clean; rm -rf %{buildroot}. %files; %defattr(-,root,root,-); %{_bindir}/*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:282,release,release,282,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['release'],['release']
Deployability,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:326,install,installation,326,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,2,['install'],"['installation', 'installed']"
Deployability,"'''\; Python script that loops over a chain to create histograms.; There are two ways to do it: one is parsing the name of the configuration file as argument,; that must have a proper syntax as shown in the class documentation of TSimpleAnalysis. Example:; user@users-desktop:~$ rootdrawtree input_file.txt # input_file.txt is the configuration file. The other way is to pass as arguments the name of the output file, the name of the .root input; files, the expressions (that will be shown in the histograms) and the name of the tree (that; is optional if there is only one tree inside the first .root input file). Examples:; user@users-desktop:~$ rootdrawtree --output output.root --input hsimple.root --tree ntuple --histo 'hpxpy=px:py if px>2'; user@users-desktop:~$ rootdrawtree --output output.root --input hsimple.root hsimple2.root --histo 'hpx=px' 'hpxpy=px:py if px>2'. '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootdrawtree.py:127,configurat,configuration,127,main/python/rootdrawtree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootdrawtree.py,2,['configurat'],['configuration']
Deployability,"'', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a javascript file (relative to the configuration directory) that; # implements a search results scorer. If empty, the default will be used.; #html_search_scorer = 'scorer.js'; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:2033,configurat,configuration,2033,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['configurat'],['configuration']
