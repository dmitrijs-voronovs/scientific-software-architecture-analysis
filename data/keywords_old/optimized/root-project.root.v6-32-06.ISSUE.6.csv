quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,This PR introduces a new way to express python unit tests with two CMake functions (see commit message) and leverages the new mechanism to re-formulate the PyROOT unit tests and to add new tests for the TDF pyROOT interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1031:95,message,message,95,https://root.cern,https://github.com/root-project/root/pull/1031,2,"['interface', 'message']","['interface', 'message']"
Integrability,"This PR introduces new PyROOT features that allow for conversion between the RooDataHist and the NumPy arrays, following up a PR that already introduced similar functionality for the RooDataSet:; https://github.com/root-project/root/pull/9346. The new methods are (with checkmarks if they are already implemented in this PR):. - [x] `RooDataHist.to_numpy()`; - [x] `RooDataHist.from_numpy()`. These new methods are also advertised in the release notes, and the existing `rf409_NumPyPandasToRooFit.py` tutorial is extended to also explain the functionality introduced in this PR. Note that any new Python functions prefixed with an underscore are not meant to be part of the public stable user interface, which is why they are not advertised in the release notes and also don't have docstrings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8784:693,interface,interface,693,https://root.cern,https://github.com/root-project/root/pull/8784,1,['interface'],['interface']
Integrability,This PR introduces the possibility to obtain a dot representation of the operations graph in the Dataframe. This PR depends the the [PR-2259](https://github.com/root-project/root/pull/2259). This PR is related to the Jira issue ROOT-9458,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2313:116,depend,depends,116,https://root.cern,https://github.com/root-project/root/pull/2313,1,['depend'],['depends']
Integrability,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208:429,interface,interface,429,https://root.cern,https://github.com/root-project/root/pull/11208,1,['interface'],['interface']
Integrability,This PR is a WIP for implementing dictionary reusing within a branch in ZSTD. The work is based on previous work of Brian for the Compression Engine although it does not make use of any of the functions associated with training. This work depends on: https://github.com/root-project/root/pull/3947. Two extra file are added (ZSTDEngine2.hxx/cxx) that provide the infrastructure to perform a detailed analysis of the compression and decompression at basket level. An analysis related with the current performance of this implementation can be found [here](https://gist.github.com/fylux/ac92de799ac3e9d3e81d5edeeeef46f6).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4248:239,depend,depends,239,https://root.cern,https://github.com/root-project/root/pull/4248,1,['depend'],['depends']
Integrability,"This PR is a do-over of #8385 and #8412 and, as such, again the second part of a split and clean-up of #8294. The most important blocker in those PRs was the inclusion of a patched libzmq in RooFitZMQ itself. [This patch has now been included in libzmq proper](https://github.com/zeromq/libzmq/pull/4255). Another blocking review comment was that libzmq symbols must not be allowed to be exported through our libraries. [This has been solved in theory, and in practice is pending another PR to libzmq](https://github.com/zeromq/libzmq/pull/4266). Having fixed these two blockers, we should now be able to continue. To recap:. > In this PR, we introduce two packages: RooFitZMQ and RooFit::MultiProcess. It also adds two builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:748,depend,dependency,748,https://root.cern,https://github.com/root-project/root/pull/9078,1,['depend'],['dependency']
Integrability,"This PR is a new attempt on #1166. It adds the `geom` and `geombuilder` modules, with:; - geombuilder set OFF by default; - geom set ON by default. Disabling geom also disables its dependant modules, i.e. Eve and gviz3d. Related roottest PR: https://github.com/root-project/roottest/pull/1190. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16514:181,depend,dependant,181,https://root.cern,https://github.com/root-project/root/pull/16514,1,['depend'],['dependant']
Integrability,"This PR is a work in progress for a parallel version of the snapshot action introduced recently to TDataFrame. This version compiles and passes the `test_snaphot.C` test from roottest.git, but still needs quite a bit of work. I imported the files we use with attributed authorship for each part, but we now need to move them to the right place if needed and refactor the interfaces according to feedback from various sources. Please feel free to make comments directly on the code, and I will try to address everything by the deadline for branching out 6.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533:371,interface,interfaces,371,https://root.cern,https://github.com/root-project/root/pull/533,1,['interface'],['interfaces']
Integrability,"This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`; - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`; - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`; - `TActionResultProxy.hxx`: class `TActionResultProxy`; - `TDFOperations.{hxx,cxx}`: all `*Operation` classes; - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**; - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency; - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`; - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`; - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423:1120,depend,depends,1120,https://root.cern,https://github.com/root-project/root/pull/423,4,['depend'],"['dependency', 'depends']"
Integrability,"This PR is on top of #1777 and adds the method `TTree.AsMatrix(columns)` as pythonization, which returns the content of the tree as numpy array powered by `TDataFrame` and the memory adption with the `__array_interface__`. TODO:; - ~~Infere the final datatype of the numpy array in a clever way (currently `double` is the default). Implicit type conversion is done by the lambda passed to `TDataFrame` in the backend.~~ Done in python, with tests.; - ~~More error-handling?~~ Can't think of any more checks.; - ~~More tests? Corner-cases missed?~~ Ideas? Any corner-cases missed?; - ~~What about not supported datatypes? Currently implemented for `float`, `double`, `int`, `unsigned int`, `long`, `unsigned long`. This is dependent on the memory adption feature of #1777 for `std.vector`.~~ Added proper error-handling.; - ~~Apply `clang-format`~~ ~~ Let's travis do this.; - ~~Shall we provide a `TTree.AsMatrix()` without given columns, which defaults to all columns? -> Most likely: Yes (but with proper error-handling!) -> White-listing branch types?~~ Done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856:722,depend,dependent,722,https://root.cern,https://github.com/root-project/root/pull/1856,1,['depend'],['dependent']
Integrability,"This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385:200,depend,dependency,200,https://root.cern,https://github.com/root-project/root/pull/8385,3,"['depend', 'wrap']","['dependency', 'wrapped']"
Integrability,"This PR makes it easier to construct valid `RFieldDescriptors`. **Edit:** The initial version of this PR removed the move-only semantics on field descriptors. Instead, I added a `Clone` method for field descriptors. . <details>; <summary>Discarded rationale for reintroducing copy constructor for field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:581,adapter,adapter,581,https://root.cern,https://github.com/root-project/root/pull/5934,1,['adapter'],['adapter']
Integrability,"This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct TestClass {; template<class T> void templatedMember(const T& value) { }; };; """"""). t = ROOT.TestClass(); t.templatedMember('int')(1); ```; The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3237:553,inject,injection,553,https://root.cern,https://github.com/root-project/root/pull/3237,2,['inject'],"['inject', 'injection']"
Integrability,"This PR modifies the TBufferMerger callback (that CMS requested) so that it wraps the merge operation--the callback is passed the function to perform the merge and is responsible for calling it. The motivation for this change is that the merge operation is taking enough CPU time that we need it to be executed in the CMSSW framework's TBB task arena so that we don't overrun our CPU commitment. With this change, we can use a callback like. ```; mergeExec_ = [this](const std::function<void()> &f){; std::promise<void> barrier;; auto fwrap = [&]() { ; auto set_value = [](decltype(barrier)* b) { b->set_value(); };; std::unique_ptr<decltype(barrier), decltype(set_value)> release(&barrier, set_value);; f();; };; taskArena_->enqueue(fwrap);; barrier.get_future().wait();; };; ```. to queue the merge operation to our task arena and wait for it to complete. This also ensures that any IMT operations invoked by the merge operation are also executed in our task arena. Since the callback can still perform any operations it wants after executing the merge operation, this is a superset of the previous callback functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:76,wrap,wraps,76,https://root.cern,https://github.com/root-project/root/pull/1706,1,['wrap'],['wraps']
Integrability,"This PR moves the responsibility of knowing which custom columns have been defined at which point of the functional graph from `TCustomColumn` to `TInterface`. As an added improvement `TInterface` now checks that custom columns do not override each other (which was wrongly allowed before). As a consequence, `TCustomColumn` nodes are not required to be in the functional graph anymore (their function was to signal the point where a certain column name became valid), allowing simplifications of the graph traversing that TDF does during the event loop (e.g. to check all filters in a functional chain). `Define` now returns the same type as the node it was called on rather than `TInterface<TCustomColumn<Fun, PrevNode>>`. For this reason this PR is expected to break `test_templateRecursionLimit`, which depends on the exact type returned by `Define`. The test will be fixed by a separate PR to roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924:807,depend,depends,807,https://root.cern,https://github.com/root-project/root/pull/924,1,['depend'],['depends']
Integrability,"This PR provides some refactoring around the `RNTupleProcessor`. Most notably, the `RNTupleProcessor` class has been changed into an abstract class only providing the generic interfaces. A subclass, `RNTupleChainProcessor` has been added to take care of the internal machinery for vertically concatenated (""chained"") ntuples. The rationale behind this refactoring is that in this way, we can also provide an `RNTupleJoinProcessor` subclass which takes care of horizontal concatenations, using the same class design. Once this has been added, the `RNTupleProcessor` base class could be used to take care of combinations of chain- and join-based processors and the scheduling thereof.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16592:175,interface,interfaces,175,https://root.cern,https://github.com/root-project/root/pull/16592,1,['interface'],['interfaces']
Integrability,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15084:86,interface,interface,86,https://root.cern,https://github.com/root-project/root/pull/15084,2,['interface'],['interface']
Integrability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:124,interface,interface,124,https://root.cern,https://github.com/root-project/root/pull/6841,4,['interface'],"['interface', 'interfaces']"
Integrability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:577,message,message,577,https://root.cern,https://github.com/root-project/root/pull/16090,1,['message'],['message']
Integrability,"This PR refactors RooMinimizerFcn into two separate classes: RooAbsMinimizerFcn and a new RooMinimizerFcn derived from that. RooAbsMinimizerFcn contains all common synchronization ""logistics"" necessary between RooFit and Minuit function parameters. The implementations of this abstract base class are then expected to supply the actual function evaluation parts. This allows us to later implement classes that calculate the gradient outside of Minuit. We will provide both a serial implementation of this and later on a parallel one using the MultiProcess framework. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569:164,synchroniz,synchronization,164,https://root.cern,https://github.com/root-project/root/pull/8569,1,['synchroniz'],['synchronization']
Integrability,"This PR removes a dependency which was wrongly added in Mathcore from Mathmore. ; Mathcore should use their own headers (e.g. PdfFuncMathCore instead of PdfFunc.h). In addition, the files PdfFunc.h, ProbFunc.h and QuantFunc.h should not also be used when building the mathcore dictionary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5418:18,depend,dependency,18,https://root.cern,https://github.com/root-project/root/pull/5418,1,['depend'],['dependency']
Integrability,This PR removes the `RResult` wrapper from the public `RNTupleImporter` interface; private methods are still wrapped. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:30,wrap,wrapper,30,https://root.cern,https://github.com/root-project/root/pull/12565,3,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13718:20,depend,dependency,20,https://root.cern,https://github.com/root-project/root/pull/13718,2,['depend'],['dependency']
Integrability,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:34,Integrat,Integrates,34,https://root.cern,https://github.com/root-project/root/pull/4911,1,['Integrat'],['Integrates']
Integrability,This PR sets Minuit2 building to ON by default in the make ROOT build option file. . This is needed now since Roofit now depends on Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8689:121,depend,depends,121,https://root.cern,https://github.com/root-project/root/pull/8689,1,['depend'],['depends']
Integrability,"This PR sits on top of #1871. Adds pythonization `TTree.Asmatrix(columns, dtype)`. `columns` can be `None`, which results in taking all branches. `dtype` is by default `double` but can be set to all types, which are supported by the array interface of `std.vector` (error-handling provided).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872:239,interface,interface,239,https://root.cern,https://github.com/root-project/root/pull/1872,1,['interface'],['interface']
Integrability,This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/433:79,depend,depends,79,https://root.cern,https://github.com/root-project/root/pull/433,1,['depend'],['depends']
Integrability,"This PR updates the Cppyy copy of experimental PyROOT, in particular with:; - cppyy v1.4.1; - cppyy_backend v1.7.0 (clingwrapper); - CPyCppyy v1.5.1. This update brings in, among other things:; * A few fixes in Cppyy for Windows.; * The possibility to set an environment variable with the path to `libcppyy_backend.so`. This is needed in macOS, where all the Python tests are failing because macOS SIP prevents the Python process from seeing `DYLD_LIBRARY_PATH`:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/20/LABEL=mac1014,SPEC=default/; * A fix for `addressof` in Cppyy.; * No insertion anymore of `__iter__` in `TCollection`s, which makes it possible to implement an iterator for `TCollection` that all subclasses inherit.; * A new Cppyy interface to create converters of multi-dimensional arrays. On the other hand, this update introduces a warning when Cppyy tries to generate a PCH for standard and system headers. This is to be addressed in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322:748,interface,interface,748,https://root.cern,https://github.com/root-project/root/pull/3322,1,['interface'],['interface']
Integrability,This PR uses clad to calculate the AD-based derivatives for the C/C++ functions wrapped by the RooFuncWrapper class and introduces the 'getGradient' interface to get these derivatives from the generated gradient function. It also replaces a `std::span` templated type with `std::size` to avoid conflicts with system headers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12219:80,wrap,wrapped,80,https://root.cern,https://github.com/root-project/root/pull/12219,2,"['interface', 'wrap']","['interface', 'wrapped']"
Integrability,"This PR:; - Generalises the DataSetFactory::RandomGenerator class and moves it to TMVA::Tools.; - Replaces use of the old class with the new one.; - Adds test cases for the new class. This could be taken a step further and be put in a separate header in ROOT proper alongside its friends `ROOT::Math::TRandomEngine<Engine>`, `TRandom : public ROOT::Math::TRandomEngine`, `ROOT::Math::StdEngine<Engine>`, and `TRandomGen<Engine> : public TRandom`.; These classes define the TRandom interface and adapts foreign interfaced to that of TRandom. This PR provides an interface for going in the other direction. One could then imagine renaming this class to `TRandomAsStdEngine` and move it outside of TMVA for all to benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1628:481,interface,interface,481,https://root.cern,https://github.com/root-project/root/pull/1628,3,['interface'],"['interface', 'interfaced']"
Integrability,"This Pull Request adds more speaking information to users to make warnings of the type; `delgam < 0 : first derivatives increasing along search line`; useful. Note that I do not have too much knowledge on the details of Minuit2, and the information messages of course reflect my state of knowledge. If someone else with more in-depth knowledge on Minuit2 could check that this is valid, that would of course be very valuable!. The motivation for this PR is that these warnings can hint to significant issues in the minimized function, however as a user, it is difficult to understand the problem or what to look for if one does not know how Minuit exactly works. Also they so far miss information needed to actually use these warnings to find problems with the minimized function. This commit adds explanatory text printed in loglevel `Info`, and a short discovery note in the old warnings. To demonstrate why this warning + info with the new `s0` and `p1` information is useful, this is an example where I encountered them in the wild and used its newly printed `s0` and `p1` information to plot the function between `s0` and `p1`, pointing to an issue in the likelihood function I use:. ![image](https://user-images.githubusercontent.com/31772910/199365936-6994973a-8946-4083-b1b9-da2f4f69cc6f.png). This commit also adds a link to the ""Tutorial"" that is referenced for documentation, since otherwise it is very non-trivial for inexperienced people to find it just based on its mention in a comment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11652:249,message,messages,249,https://root.cern,https://github.com/root-project/root/pull/11652,1,['message'],['messages']
Integrability,"This Pull request adds Google Test fixture functionality in the RNTuple DAOS test suite, enabling automatic storage cleanup when running unit tests with real DAOS clusters. ## Changes or fixes:. - Introduces a fixture class for the test suite and registers all five existing tests under it through the `TEST_F` macro. ; - Consolidates shared functionality in the fixture definition. Namely, pool and container label data and expected diagnostics messages from `ROOT::TestSupport`. ; - Uses the `TearDownTestSuite()` call to automatically destroy DAOS containers created for the unit tests when all of them are completed.; - Replaces some duplicated string literals that specify ntuples and models for variables.; - Introduces preproc definition `R__DAOS_TEST_MOCK` to CMake to bypass container destruction system call if using the mock library as underlying storage. ## Pending:. - One error message is not currently suppressed, as it is not emitted by ROOT's exception diagnostics: `client ERR src/client/api/container.c:148 daos_cont_create_with_label() daos_cont_create label=test-multiple-ntuples failed, DER_EXIST(-1004): 'Entity already exists'`. This is the (normal) output of `RDaosContainer` attempting to create a container by default, and ignoring the error if it already exists in the DAOS pool. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12106:446,message,messages,446,https://root.cern,https://github.com/root-project/root/pull/12106,2,['message'],"['message', 'messages']"
Integrability,"This Pull request adds several improvements to use UNU.RAN using the DistSampler interface; (through the TUnuranSampler class). This is to fix issue #7332 adding functionality as requested. ; ; The major improvements are:; - Improvements in using directly the string API from `DistSampler`; - Better support for setting method and method options using the `DistSamplerOptions` class; - Support for setting dpdf, cdf and multi-sim mode in the DistSampler interface; - Add test program for all the new DistSampler functionality. This PR fixes #7332",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8630:81,interface,interface,81,https://root.cern,https://github.com/root-project/root/pull/8630,2,['interface'],['interface']
Integrability,"This Pull request adds tutorials for RModelParser_ONNX, RModelParser_Keras, and RModelParser_PyTorch.; This depends on the SOFIE's Keras Parser (#8430) & PyTorch Parser (#8684). This work is a part of my project **ROOT Storage of Deep Learning Models** of Google Summer of Code'21. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8874:108,depend,depends,108,https://root.cern,https://github.com/root-project/root/pull/8874,1,['depend'],['depends']
Integrability,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10944:1492,interface,interface,1492,https://root.cern,https://github.com/root-project/root/pull/10944,1,['interface'],['interface']
Integrability,This Pull request fixes the correct dependency of some TMVA tutorial and PyMVA tests to avoid that the input data files are written at the same time. The PR contains also a fix for th TMVA_SOFIE_RSofieReader tutorial to handle correctly the model output vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12211:36,depend,dependency,36,https://root.cern,https://github.com/root-project/root/pull/12211,1,['depend'],['dependency']
Integrability,"This Pull request introduces the Root Storage for BDT. ; Initially developed by @guitargeek(https://github.com/guitargeek/tmva-to-xgboost/) this PR implements the data structure for storing the model configuration & weights, Parse function for translating a TMVA BDT `.xml` file, and a mapping interface for generating inference code. ## Progress; - [x] Data structure for storing model configuration and weights; - [x] Serialization of the class for writing/reading to `.root` files; - [x] `Parse()` function for translating a TMVA BDT `.xml` file ; - [ ] Mapping Interface to TMVA Tree Inference for generating inference code. ## Checklist:; - [x] tested changes for `Parse()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8873:294,interface,interface,294,https://root.cern,https://github.com/root-project/root/pull/8873,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:29,wrap,wrappers,29,https://root.cern,https://github.com/root-project/root/pull/12109,5,"['Wrap', 'wrap']","['Wraps', 'wrapper', 'wrappers']"
Integrability,This Pull request provides a small fix to stressRooFit by doing correctly the plot in the full range and in the restricted range as it is done in the corresponding tutorial.; It also provides a fix for an error message in the RooUnitTest class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9134:211,message,message,211,https://root.cern,https://github.com/root-project/root/pull/9134,1,['message'],['message']
Integrability,"This Pull request removes a log message reported when using MethodCategory, see ; https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10707:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/10707,1,['message'],['message']
Integrability,This Pull request: fixes some error messages and spelling mistakes in operators . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:36,message,messages,36,https://root.cern,https://github.com/root-project/root/pull/10435,1,['message'],['messages']
Integrability,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417:337,interface,interface,337,https://root.cern,https://github.com/root-project/root/pull/8417,6,"['interface', 'message']","['interface', 'message']"
Integrability,"This adds a new standalone Minuit2 build system built in CMake to replace the old one that no longer works. The following features are part of the design:. * Full featured CMake build, based on https://github.com/GooFit/Minuit2; - Only requires CMake 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:450,integrat,integrated,450,https://root.cern,https://github.com/root-project/root/pull/1680,1,['integrat'],['integrated']
Integrability,"This affects all ROOT versions so far, and it means that simultaneous fits don't work with the `SumW2Error()` option. I noticed this problem now because it's also an issue for the JSON IO. Reproducer:; ```C++; void repro(); {; using namespace RooFit;. RooRealVar x{""x"", ""x"", 0, 10};; RooCategory cat{""cat"", ""cat"", {{""sample_0"", 0}}};; RooRealVar weight{""weight"", ""weight"", 1.0};. RooDataSet data1{""data"", ""data"", {x, cat, weight}, WeightVar(weight), StoreError(weight)};. data1.add({x, cat}, 2.0, 0.3);. std::unique_ptr<TList> dataList{data1.split(cat, true)};; auto& data2 = static_cast<RooDataSet&>(*dataList->At(0));. data1.get(0);; std::cout << data1.weightError() << std::endl;; data2.get(0);; std::cout << data2.weightError() << std::endl;; }; ```. The output will be:. ```; [#0] ERROR:DataHandling -- An event weight error was passed to the RooDataSet 'sample_0', but the weight variable 'weight' does not store errors. Check `StoreError` in the RooDataSet constructor.; 0.3; 0; ```. In ROOT releases before 6.28.00, you don't even get error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12453:1049,message,message,1049,https://root.cern,https://github.com/root-project/root/issues/12453,1,['message'],['message']
Integrability,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15437:243,depend,dependence,243,https://root.cern,https://github.com/root-project/root/pull/15437,1,['depend'],['dependence']
Integrability,"This allows `static_assert(false)` to not be ill-formed in template definitions. This change is applied as a DR in all C++ modes. Of notes, a couple of tests were relying of the eager nature of static_assert. * test/SemaTemplate/instantiation-dependence.cpp; * test/SemaTemplate/instantiate-var-template.cpp. I don't know if the changes to `static_assert`; still allow that sort of tests to be expressed. Reviewed By: #clang-language-wg, erichkeane, aaron.ballman. Differential Revision: https://reviews.llvm.org/D144285. ---. Fixes the build with newer versions of MSVC's STL, reported as https://github.com/root-project/root/issues/15321. (cherry picked from commit c767271b30bde91d885d147b95e2f91d3d7a20b6, backport of https://github.com/root-project/root/pull/15437)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15753:243,depend,dependence,243,https://root.cern,https://github.com/root-project/root/pull/15753,1,['depend'],['dependence']
Integrability,This allows us to access the `llvm::orc::LLJIT` similar to the `getExecutionEngine` interface in clang-repl which is required for the functioning of libInterOp starting from LLVM 16. cc: @vgvassilev @devajithvs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16537:84,interface,interface,84,https://root.cern,https://github.com/root-project/root/pull/16537,1,['interface'],['interface']
Integrability,This allows us to inject -DGSL_LIBRARY etc for relwase builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3214:18,inject,inject,18,https://root.cern,https://github.com/root-project/root/pull/3214,1,['inject'],['inject']
Integrability,"This avoids the indirect dependence of ROOT on CURL, because the CURL dependence of CFITSIO is optional since version 3.49: https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/docs/changes.txt#L199. Note: I tested the `builtin_cfitsio` locally on Linux, and for macOS and Linux the CI will cover it because these platforms configure with `builtin_cfitsio=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508:25,depend,dependence,25,https://root.cern,https://github.com/root-project/root/pull/15508,2,['depend'],['dependence']
Integrability,This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3745:66,message,message,66,https://root.cern,https://github.com/root-project/root/pull/3745,1,['message'],['message']
Integrability,"This change is done in order to avoid that the pythonizations modules; depend on methods defined in TPython. This commit can be descarded when we will update to CPyCppyy-1.9.7,; since TPython::CPPInstance_FromVoidPtr will become; CPyCppyy::CPPInstance_FromVoidPtr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4643:71,depend,depend,71,https://root.cern,https://github.com/root-project/root/pull/4643,1,['depend'],['depend']
Integrability,"This change is introduced to fix a problem with redefinition of RooMath; when running stressRooFit in interpreted mode on some CI nodes. You can see the errors here for example:; https://github.com/root-project/root/pull/9004#issuecomment-954950871. Copy paste from the log:; ```; Processing /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx...; In file included from input_line_8:1:; In file included from /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h:25:7: error: redefinition of 'RooMath'; class RooMath {; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/RooGaussModel.h:21:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site in header from module 'RooFit.RooGaussModel.h'; #include ""RooMath.h""; ^; /home/sftnight/build/workspace/root-pullrequests-build/build/include/module.modulemap:2717:10: note: RooFit.RooGaussModel.h defined here; module ""RooGaussModel.h"" { header ""RooGaussModel.h"" export * }; ^; /home/sftnight/build/workspace/root-pullrequests-build/root/test/stressRooFit.cxx:15:10: note: '/home/sftnight/build/workspace/root-pullrequests-build/build/include/RooMath.h' included multiple times, additional include site here; #include ""RooMath.h""; ^; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:227 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9214:1529,message,message,1529,https://root.cern,https://github.com/root-project/root/pull/9214,1,['message'],['message']
Integrability,"This change is redesign of REveDataCollection to visualize heavy events using DigitSets or REveCaloData elements.; This change also makes online tooltips in calorimeters possible.; Note: In macro collection_proxies.C is an example of REveDigitSet using REveDataCollection. The demo has calorimeters included, but are not yet integrated in collections, e.g. individual towers can't be queried in table view.; ![caloyellow](https://user-images.githubusercontent.com/2516492/96306020-b844a080-0fb3-11eb-953f-0de383b61517.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6656:325,integrat,integrated,325,https://root.cern,https://github.com/root-project/root/pull/6656,1,['integrat'],['integrated']
Integrability,"This change reflects the nature of vecops, which have nothing to do with treeplayer in principle. In addition, this refactoring paves the way for the future evolution of vecops, for example in the context of an integration with VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1827:211,integrat,integration,211,https://root.cern,https://github.com/root-project/root/pull/1827,1,['integrat'],['integration']
Integrability,"This class holds all necessary parameters to start any supported web display.; These are kind of browser, width, height, URL and extra URL options.; Simplifies for the future extension of that API.; Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2845:256,interface,interface,256,https://root.cern,https://github.com/root-project/root/pull/2845,1,['interface'],['interface']
Integrability,"This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10560:99,depend,dependency,99,https://root.cern,https://github.com/root-project/root/pull/10560,1,['depend'],['dependency']
Integrability,"This commit adds a C/C++ function wrapper class that takes in code as a string, declares it, and stores it as a function pointer. Currently, only functions of type `double (*)(double* )` are supported. This class will later be used to store a roofit model as code for automatic differentiation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12050:34,wrap,wrapper,34,https://root.cern,https://github.com/root-project/root/pull/12050,1,['wrap'],['wrapper']
Integrability,This commit adds a ROOT::Math::Functor based interface to the minimizer for RooFuncWrapper. A functor based approach allows for the wrapper to choose between using AD/analytical and numerical derivatives easily.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12381:45,interface,interface,45,https://root.cern,https://github.com/root-project/root/pull/12381,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10685:285,interface,interface,285,https://root.cern,https://github.com/root-project/root/pull/10685,1,['interface'],['interface']
Integrability,"This commit changes the way in which the input dataset is split in logical ranges of entries. It also changes the subsequent creation of an RDataFrame instance inside a distributed task.; For a TTree based dataset, this happens through the creation of a TChain that represents the subset of the original dataset that contains the entries in the range. Before this commit:; For the TTree based case, the entries of the range are global with respect to the TChain created inside the distributed task.; `TChain.SetCacheEntryRange` is called with the start and end entries of the range to make sure we don't read more than needed; An RDataFrame is created with the chain as argument. The `Range` operation is used to select only the entries of the TChain in the current task that are inside the input entry range. After this commit:; For the TTree based case, the input range will report global entries with respect to the TChain of the task. But it will also report local entries with respect to each single file of the TChain in the current task.; A global TEntryList is created and filled with one sub-TEntryList per file in the chain. This allows to do a preselection directly in the TChain of the entries that should be processed or not.; `SetCacheEntryRange` is still called to ensure we don't read more than needed (hence the need to still keep global entries in the range object); The TChain (with the TEntryList) is passed as argument to an RDataFrame constructor. ## TODOs. - [x] ~add some check against using multiple times the same filename, to prevent hitting https://github.com/root-project/root/issues/8505~ No longer needed after #8660 ; - [x] Old tests adapted to new logic; - [x] Added one new test to check against reading the wrong number of entries depending on the number of partitions (a result of using TEntryList with multiple times the same treename and filename)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646:1766,depend,depending,1766,https://root.cern,https://github.com/root-project/root/pull/8646,1,['depend'],['depending']
Integrability,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139:282,inject,injected,282,https://root.cern,https://github.com/root-project/root/pull/7139,2,['inject'],"['injected', 'injection']"
Integrability,"This commit introduces an alias for raw pointers for indicating that the return type of a RooFit function is an owning pointer that must be deleted by the caller. For RooFit developers, it can be very useful to make this an alias to `std::unique_ptr<T>`, in order to check that your code has no memory problems. Changing this alias is equivalent to forcing all code immediately wraps the result of functions returning a `RooFit::OwningPtr<T>` in a `std::unique_ptr<T>`. The two fundamental RooFit functions `RooAbsArg::getVariables()` and `RooAbsArg::getParameters()` are also migrated to this new alias, and I tried to recompile ROOT locally using the `std::unique_ptr<T>` alias. This commit includes also the necessary changes to make ROOT compile with both raw and smart pointer alias, always wrapping the result of these functions in `std::unique_ptr<RooArgSet>`. There are many benefits of this alias, and my ultimate goal here is to eventually make PyROOT aware of it to always take ownership of the referenced objects. But it's also a great tool for developers to check that there are no memory issues in RooFit code. Now that this PR sets the first examples of how to use this alias, I can make further migrations also a good warm-up projects for new contributors such as students.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12614:378,wrap,wraps,378,https://root.cern,https://github.com/root-project/root/pull/12614,2,['wrap'],"['wrapping', 'wraps']"
Integrability,This commit provides improvement to the BrentRootFinder and to TF1::GetX which uses it.; Now the bracketing is improved and the algorithms find in case of multiple roots the one with lower x value. ; In case the interval does not contain a ROOT an error message is produced and a NaN is returned instead of returning a random value as before.; This commit fixes the problem reported in ; ROOT-4998. The current test. testRootFinder is improved using gtest and adding the case of multiple roots and of log grid searchj that BrentRootFinder supports.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3425:254,message,message,254,https://root.cern,https://github.com/root-project/root/pull/3425,1,['message'],['message']
Integrability,"This commit reduces ExcludeModules, which reduces dependency on rootmap files. These modules contain global variables which conflict with users' code such as PI and ERROR. This commit also undefines them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3635:50,depend,dependency,50,https://root.cern,https://github.com/root-project/root/pull/3635,1,['depend'],['dependency']
Integrability,"This commit refactors the mapper function so that the logic responsible; for creating the correct RDataFrame instance based on the type of data; source is done in its corresponding HeadNode class. This makes the; interface more uniform and will contribute to adding new data sources in; the future more easily. In each HeadNode class there is now a method; called `generate_rdf_creator`, responsible for creating a function that; in turns knows how to build an RDataFrame instance from one metadata; range (i.e. the information sent to a distributed task).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9298:213,interface,interface,213,https://root.cern,https://github.com/root-project/root/pull/9298,1,['interface'],['interface']
Integrability,"This commit separates the parameters and observables passed to RooFuncWrapper. Now, the wrapper function accepts two different arrays and only calculates the gradient of the underlying func wrt. the parameter array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12289:88,wrap,wrapper,88,https://root.cern,https://github.com/root-project/root/pull/12289,1,['wrap'],['wrapper']
Integrability,"This conservative assert intended to capture future uses of the shouldPermanentlyIgnore routine and check if we have specified an absolute non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may move files around. Then the iterable (official) filename's real path might differ at the point of iteration and the point of the check. Some file systems use a temporary filename while copying/moving file and the rename it to the real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the iterator gives the expected real path of the filename which is not yet available when we ask for the real path of that path we get something different (using the same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal (@pcanal) for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5683:88,rout,routine,88,https://root.cern,https://github.com/root-project/root/pull/5683,1,['rout'],['routine']
Integrability,"This conservative assert intended to capture future uses of the; shouldPermanentlyIgnore routine and check if we have specified an absolute; non-symlinked path. Turns out that when we scan for libraries we iterate a given folder which may; move files around. Then the iterable (official) filename's real path might; differ at the point of iteration and the point of the check. Some file systems; use a temporary filename while copying/moving file and the rename it to the; real filename preserving atomicity of the operations. It looks like this exactly happens in the description of ROOT-10791 -- the; iterator gives the expected real path of the filename which is not yet available; when we ask for the real path of that path we get something different (using the; same inode) eg: `mathsymb.ps` vs `mathsymb.ps_tmp_4810`. Instead of asserting, let the file system handles this instead. Kudos to Philippe Canal for investigating this sporadic failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5741:89,rout,routine,89,https://root.cern,https://github.com/root-project/root/pull/5741,1,['rout'],['routine']
Integrability,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938:5,depend,depends,5,https://root.cern,https://github.com/root-project/root/pull/5938,3,['depend'],"['dependencies', 'dependent', 'depends']"
Integrability,This fix corresponds to a cppyy patch for MetaCling:. https://bitbucket.org/wlav/cppyy-backend/src/dfb9f7a46d7b703325179deea193bb1eb823728e/cling/patches/nodeleted.diff. Drops properties of deleted methods and chooses move in wrapper generator if no copy available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5925:226,wrap,wrapper,226,https://root.cern,https://github.com/root-project/root/pull/5925,1,['wrap'],['wrapper']
Integrability,"This fixes #12358. When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of `std::tuple` is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12532:307,depend,depends,307,https://root.cern,https://github.com/root-project/root/pull/12532,1,['depend'],['depends']
Integrability,"This fixes #14425 (the reproducer is added as test). Note that the patch comes straight from upstream cppyy https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 even though it's a patch in TCling. I open this PR as a draft to start the discussion as to how we can integrate this change, since it's necessary to fix a bug that also affects usage of ROOT classes via PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426:353,integrat,integrate,353,https://root.cern,https://github.com/root-project/root/pull/14426,1,['integrat'],['integrate']
Integrability,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5463:87,Wrap,Wrapper,87,https://root.cern,https://github.com/root-project/root/pull/5463,2,['Wrap'],['Wrapper']
Integrability,"This fixes ROOT-10712. Note, that the problem appears if; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->SetUnloaded();; ```; is called right before main; so it is not due to Cling/Clang being partially tore down. Also calling; ```; TClass::GetClass(""""art::Wrapper<art::Assns<string,int,void> >"")->GetClassInfo();; ```; works properly. This indicates that thes parts of SetUnloaded are ""triggering"" the problem:. ```; InsertTClassInRegistryRAII insertRAII(fState, fName, fNoInfoOrEmuOrFwdDeclNameRegistry);. // Make sure SetClassInfo, re-calculated the state.; fState = kForwardDeclared;. delete fIsA; fIsA = 0;; // Disable the autoloader while calling SetClassInfo, to prevent; // the library from being reloaded!; {; TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; TInterpreter::SuspendAutoParsing autoParseRaii(gCling);; gInterpreter->SetClassInfo(this,kTRUE);; }; ```. Likely disabling template instantiation inside SetClassInfo in this use case. ```; art: /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h:1837: void clang::ClassTemplateSpecializationDecl::setInstantiationOf(clang::ClassTemplatePartialSpecializationDecl*, const clang::TemplateArgumentList*): Assertion `!SpecializedTemplate.is<SpecializedPartialSpecialization*>() && ""Already set to a class template partial specialization!""' failed. . Program received signal SIGABRT, Aborted. 0x00007ffff089a377 in raise () from /lib64/libc.so.6. . #1 0x00007ffff089ba68 in abort () from /lib64/libc.so.6. #2 0x00007ffff0893196 in __assert_fail_base () from /lib64/libc.so.6. #3 0x00007ffff0893242 in __assert_fail () from /lib64/libc.so.6. #4 0x00007fffe33d590f in clang::ClassTemplateSpecializationDecl::setInstantiationOf (this=0x7e8b810, PartialSpec=0x3b75340, TemplateArgs=0x7e91418). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/AST/DeclTemplate.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:87,Wrap,Wrapper,87,https://root.cern,https://github.com/root-project/root/pull/5462,2,['Wrap'],['Wrapper']
Integrability,This fixes ROOT-9409. Depends on: #4268,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2999:22,Depend,Depends,22,https://root.cern,https://github.com/root-project/root/pull/2999,1,['Depend'],['Depends']
Integrability,"This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. ; Now for parameter which have a very small error the step size is correctly estimated. ; The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the; confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3853:54,depend,depending,54,https://root.cern,https://github.com/root-project/root/pull/3853,1,['depend'],['depending']
Integrability,"This fixes [ROOT-9322](https://sft.its.cern.ch/jira/browse/ROOT-9322). If a `TTreeReaderValue` is used to read fixed or variable size array, TTreeReader now complains and does not finish construction successfully (rather than successfully construct and read only the first element of the array). When such a (wrongly constructed) `TTreeReaderValue `is used, the following error messages are printed on screen:. ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch arr: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch arr contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you remember to call TTreeReader.Set(Next)Entry()?; ```. I could not find a way to avoid the last two `Error`s and still have `TTreeReaderValue::IsValid` return `false`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1842:378,message,messages,378,https://root.cern,https://github.com/root-project/root/pull/1842,1,['message'],['messages']
Integrability,"This fixes a test failure on i686:. 95/593 Test #45: mathmore-testSpecFunc ......................................***Failed 0.40 sec; tgamma(9.0) :	 OK; lgamma(0.1) :	 OK; inc_gamma(1,0.001) :	 OK; inc_gamma(100,99) :	 OK; inc_gamma_c(100,99) :	 OK; inc_gamma_c(1000,1000.1) :	 OK; erf(0.5) :	 OK; erfc(-1.0) :	 OK; beta(1.0, 5.0) :	 OK; inc_beta(1,1,1) :	 OK; inc_beta(0.5,0.1,1.0) :	 OK; assoc_laguerre(4, 2, 0.5) :	 OK; assoc_legendre(10, 1, -0.5) :	 OK; comp_ellint_1(0.50) :	 OK; comp_ellint_2(0.50) :	 OK; comp_ellint_3(0.5, 0.5) :	 OK; conf_hyperg(1, 1.5, 1) :	 OK; cyl_bessel_i(1.0, 1.0) :	 OK; cyl_bessel_j(0.75, 1.0) :	 OK; cyl_bessel_k(1.0, 1.0) :	 OK; cyl_neumann(0.75, 1.0) :	 OK; ellint_1(0.50, PI/3.0) :	 OK; ellint_2(0.50, PI/3.0) :	 OK; ellint_3(-0.50, 0.5, PI/3.0) :	 OK; expint(1.0) :	 OK; hyperg(8, -8, 1, 0.5) :	 OK; laguerre(4, 1.) :	 FAILED ; Discrepancy in laguerre(4, 1.) () :; -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16); legendre(10, -0.5) :	 OK; riemann_zeta(-0.5) :	 OK; sph_bessel(1, 10.0) :	 OK; sph_legendre(3, 1, PI/2.) :	 OK; sph_neumann(0, 1.0) :	 OK; airy_Ai(-0.5) :	 OK; airy_Bi(0.5) :	 OK; airy_Ai_deriv(-2) :	 OK; airy_Bi_deriv(-3) :	 OK; airy_zero_Ai(2) :	 OK; airy_zero_Bi(2) :	 OK; airy_zero_Ai_deriv(2) :	 OK; airy_zero_Bi_deriv(2) :	 OK; Error: Special Functions Test FAILED !!!!!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/400:1462,message,message,1462,https://root.cern,https://github.com/root-project/root/pull/400,1,['message'],['message']
Integrability,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366:356,interface,interface,356,https://root.cern,https://github.com/root-project/root/pull/8366,3,"['interface', 'message']","['interface', 'message']"
Integrability,This fixes that regex characters in the source directory path; cause the CMake configuration to fail with cryptic error messages. This happens because we interpret the source directory as a regex in a; few places in our CMake code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/923:120,message,messages,120,https://root.cern,https://github.com/root-project/root/pull/923,1,['message'],['messages']
Integrability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:112,depend,dependency,112,https://root.cern,https://github.com/root-project/root/pull/813,1,['depend'],['dependency']
Integrability,This fixes the deprecation taken root-project/root#4716. We print the deprecation message but we still do what's intended. cc: @reikdas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4735:82,message,message,82,https://root.cern,https://github.com/root-project/root/pull/4735,1,['message'],['message']
Integrability,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:368,message,message,368,https://root.cern,https://github.com/root-project/root/pull/11153,2,['message'],['message']
Integrability,This fixes the following type of error with recent versions of Visual Studio (v17.6):; ```; 800: Processing C:/root-dev/git/debug/tutorials/roofit/rf614_binned_fit_problems.C...; 800: IncrementalExecutor::executeFunction: symbol '__std_find_trivial_8' unresolved while linking [cling interface function]!; 800: You are probably missing the definition of __std_find_trivial_8; 800: Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13254:284,interface,interface,284,https://root.cern,https://github.com/root-project/root/pull/13254,1,['interface'],['interface']
Integrability,"This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found, do the option QUIET is added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5002:255,depend,depend,255,https://root.cern,https://github.com/root-project/root/pull/5002,2,"['depend', 'message']","['depend', 'message']"
Integrability,This fixes the problem described in http://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914/1 (And avoid the same error message in another circumstance).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2786:144,message,message,144,https://root.cern,https://github.com/root-project/root/pull/2786,2,['message'],['message']
Integrability,"This fixes the results of multi-range fits where the shape of the pdf; depends on the normalization set, e.g. with a multidimenstional; `RooProdPdf`. A unit test was implemented to test that the result of such a 2D; multi-range fit is compatible with the fit result over the full range.; It is expected that if the union of the ranges is the full range, the; result will exactly match the full-range fit. This has already been; checked so far in the 1D case. The `stressRooFit` reference file has been updated, because there is; such a 2D multi-range fits in the tests (see also the; rf312_multirangefit tutorial).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9150:71,depend,depends,71,https://root.cern,https://github.com/root-project/root/pull/9150,1,['depend'],['depends']
Integrability,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8030:23,message,messages,23,https://root.cern,https://github.com/root-project/root/pull/8030,1,['message'],['messages']
Integrability,"This generalization of the RooArgusBG pdf in RooFit allows integration with parameter c (slope parameter) >= 0. Therefor unwanted (and unnecessary) mathematical restrictions are lifted, making ; the pdf and fitting more stable by not reaching a parameter edge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3009:59,integrat,integration,59,https://root.cern,https://github.com/root-project/root/pull/3009,1,['integrat'],['integration']
Integrability,"This has a couple more fixes from the study of a previous bug, some typo fixes, etc. The commit messages have more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494:96,message,messages,96,https://root.cern,https://github.com/root-project/root/pull/494,1,['message'],['messages']
Integrability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:81,integrat,integration,81,https://root.cern,https://github.com/root-project/root/pull/303,2,['integrat'],['integration']
Integrability,"This hotfixes the crashes seen in the recent PR builds. However, having to use `std::move` in pyROOT is quite unpythonic and we; should think about an improved interface for creating RooFit datasets; from RDataFrame in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8768:160,interface,interface,160,https://root.cern,https://github.com/root-project/root/pull/8768,1,['interface'],['interface']
Integrability,"This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python; df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \; .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""); npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)); print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))); print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))); ```; ```; Number of events selected: 2846996; Average number of primary vertices per event: 16.03; Average number of muons per event: 1.29; ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python; ROOT.gInterpreter.Declare(""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a function that returns such an object. This is called to fill the dataframe.; CustomObject fill_object() { return CustomObject(); }; """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""); npy = df.AsNumpy(); print(npy); ```; ```; {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,; <ROOT.CustomObject object at 0x79bd140>,; <ROOT.CustomObject object at 0x743f440>,; <ROOT.CustomObject object at 0x7359710>], dtype=object)}; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3107:975,wrap,wrapped,975,https://root.cern,https://github.com/root-project/root/pull/3107,2,"['Inject', 'wrap']","['Inject', 'wrapped']"
Integrability,This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2914:5,integrat,integrates,5,https://root.cern,https://github.com/root-project/root/pull/2914,1,['integrat'],['integrates']
Integrability,"This is a *very common* problem that keeps hitting out users and even our own builds in Jenkins. We need to fail to configure with mismatched versions of Python and its libraries, as ROOT will fail at runtime with such a broken configuration anyway. The error message should be enough to quickly fix the configuration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3044:260,message,message,260,https://root.cern,https://github.com/root-project/root/pull/3044,1,['message'],['message']
Integrability,"This is a backport of all the relevant RooFit PRs that were recently merged to master to v6-28-00-patches (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/12089; 2. https://github.com/root-project/root/pull/12022; Commits 3 and 4 that have not been backported yet, as the next PR in this list depends on that change (everything is backported from that PR now except the last commit); 4. https://github.com/root-project/root/pull/12079; 5. https://github.com/root-project/root/pull/12040. Related to https://github.com/root-project/root/issues/11856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12092:360,depend,depends,360,https://root.cern,https://github.com/root-project/root/pull/12092,1,['depend'],['depends']
Integrability,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/13044. After merging this PR, the following RooFit commits in ROOT `master` (as of 6276954184) are the ones that are not in `v6-28-00-patches` (as of `8c19761`). ```txt; 9b93dbb7d2 [RF] Apply clang-tidy `performance-faster-string-find`; 04fbc4efb3 [RF] Don't have RooFitCuda as dependency for RooFitCore; cf653869f7 [RF] Don't bar xroofit behind `root7` anymore; e5a67bc647 [RF] More type safety and better memory management with CUDA interface; bbeb520a1a [RF] Implement `RooPower` and `RooExpPoly` in RooBatchCompute; 529ba82432 [RF] RAII management of CUDA events and streams; cc3ee9200a [RF] Only allow automatic memory management for CUDA device arrays; 77299a2c34 [RF] Reduce public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:512,depend,dependency,512,https://root.cern,https://github.com/root-project/root/pull/13295,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,This is a backport of some RooFit PRs that were recently merged to master to v6-30-00-patches:. - https://github.com/root-project/root/pull/14021; - https://github.com/root-project/root/pull/14043; - https://github.com/root-project/root/pull/14044; - https://github.com/root-project/root/pull/13373 (as a dependency of the next PR on Minuit 2); - https://github.com/root-project/root/pull/14026; - https://github.com/root-project/root/pull/13863; - https://github.com/root-project/root/pull/14100. Related to https://github.com/root-project/root/issues/13458. Link to the previous backport PR:; https://github.com/root-project/root/pull/13940,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14047:305,depend,dependency,305,https://root.cern,https://github.com/root-project/root/pull/14047,1,['depend'],['dependency']
Integrability,"This is a breaking interface change: Filter now returns templated; TInterface<TFilter<F,P>> objects instead of TInterface<TFilterBase>; as before (and anagolously for Define and Range).; Jitted transformations still return TInterfaces wrapping the base; classes (e.g. TFilterBase). Filter, Define and Range returned TInterfaces wrapping pointers to the; base classes representing the corresponding nodes. This choice was made; to limit compile time and ease the introduction of jitted transformations.; As a consequence, nodes of the functional graph communicated with each; other through virtual calls. This commit lets nodes call into each other through the derived (template); types instead. Given that all nodes' virtual methods are marked `final`,; this should allow compilers to de-virtualize such calls. Because of the interface change this commit is expected to break `test_templateRecursionLimit`. A PR to `root-project/roottest` will deal with this issue ([here](https://github.com/root-project/roottest/pull/67)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/869:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/869,4,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,"This is a collection of commits that are preparing the update of category functions. Since this is a very heavy change, it's better to first merge the preparation works here. So, here we have:; - Improvements of docs, especially to group legacy interfaces into dedicated legacy groups; - Cleanups, such as removing unnecessary overrides, dead files; - Introduce small feature to batch data storage such that batch data from function calls like `getVal()` doesn't get overwritten by a subsequent call to `getLogVal()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5213:245,interface,interfaces,245,https://root.cern,https://github.com/root-project/root/pull/5213,1,['interface'],['interfaces']
Integrability,"This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make; it possible to use also variable clones as integration variables, but it; failed to cover the case where the integration variable is only an; indirect server of the integrated function. This was because; `valueClients()` used for the graph traversal was still called on the; clone, not the variable in the actual computation graph of the; integrated function. This commit fixes this by passing the correct variable to; `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the; RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597; * https://github.com/root-project/root/pull/11619; * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,; using the RooWorkspace factory. This reduces the time of increamental builds; where one changes the RooFit library, because the RooFitCore tests don't need; to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11783:189,integrat,integration,189,https://root.cern,https://github.com/root-project/root/pull/11783,6,"['depend', 'integrat', 'interface']","['depend', 'integrated', 'integration', 'interface']"
Integrability,"This is a first step towards the change in ownership management; required by ROOT-9416, and unblocks development of features that depend on actions staying around even after their event-loop has completed, e.g. generalized merging mechanism, necessary for distributed execution",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2447:130,depend,depend,130,https://root.cern,https://github.com/root-project/root/pull/2447,1,['depend'],['depend']
Integrability,"This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8940:147,message,messages,147,https://root.cern,https://github.com/root-project/root/pull/8940,1,['message'],['messages']
Integrability,This is a follow up to https://github.com/root-project/root/pull/9475. See the commit messages for more info.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9478:86,message,messages,86,https://root.cern,https://github.com/root-project/root/pull/9478,1,['message'],['messages']
Integrability,This is a follow-up to https://github.com/root-project/root/pull/9004. Further description can be found in the commit messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9420:118,message,messages,118,https://root.cern,https://github.com/root-project/root/pull/9420,1,['message'],['messages']
Integrability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:454,depend,depend,454,https://root.cern,https://github.com/root-project/root/pull/11619,2,"['depend', 'integrat']","['depend', 'integration']"
Integrability,"This is a leftover from e6d7c53889f35bfbb986bf1890a89501b6900d41,; dependency for rootd.rc.d needs to be deleted. This patch fixes this error when you run install:; ```; CMake Error at cmake_install.cmake:132 (file):; file INSTALL cannot find; ""/build/yuka/build-py2-rootpy/BUILD/slc7_amd64_gcc700/lcg/root/6.15.01-cms/build/etc/daemons/rootd.rc.d"".; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:67,depend,dependency,67,https://root.cern,https://github.com/root-project/root/pull/3094,1,['depend'],['dependency']
Integrability,"This is a proof of concept for a part of a TMVA GUI replacement. The basic ideas:; - Make it modular, no monolithic tool; - Provide tight integration with RDataFrame. I copy below the tutorial that I've added in the PR. Known issues:; - The automatic range for the histos is very weird.; - Naming of the class is not optimal. ```cpp; void tmva005_RVariablePlotter(); // Initialize ROOT dataframes from signal and background datasets; const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";; ROOT::RDataFrame sig1(""TreeS"", filename);; ROOT::RDataFrame bkg1(""TreeB"", filename);. // Apply transformations on the datasets to be included in the study; auto transform = [](auto df) { return df.Define(""var5"", ""var1 * var2""); };; auto sig2 = transform(sig1);; auto bkg2 = transform(bkg1);; auto sig3 = sig2.Filter(""var1 > 0"");. // Create a variable plotter object giving the dataframes and the class labels.; RVariablePlotter plotter({sig2, bkg2, sig3},; {""Signal"", ""Background"", ""Signal (var1 > 0)""});. // Create a canvas with four pads for plotting; auto c = new TCanvas("""", """", 1200, 800);; c->Divide(3, 2);. // Place plots on the pads of the canvas; const std::vector<std::string> variables = {""var1"", ""var2"", ""var3"", ""var4"", ""var5""};; for (unsigned int i = 0; i < variables.size(); i++) {; c->cd(i + 1);; plotter.Draw(variables[i]);; }; c->cd(6);; plotter.DrawLegend();; c->DrawClone();; }; ```. ![x](https://user-images.githubusercontent.com/6951222/63058987-7b33d880-beee-11e9-974d-264d06ea0869.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4211:138,integrat,integration,138,https://root.cern,https://github.com/root-project/root/pull/4211,1,['integrat'],['integration']
Integrability,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:54,Interface,Interface,54,https://root.cern,https://github.com/root-project/root/pull/5757,1,['Interface'],['Interface']
Integrability,"This is a very conservative proposed solution to [ROOT-9274](https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-9274), where one unneeded `Types.h` usage is removed and one more is wrapped in a protector. This allows a build system to turn off the including of `Types.h` if required. A slightly less conservative one would be to include `RConfigure.h` instead of `Types.h`, then `VecCore/VecCore` if the vec core define is on. It is possible that a user might want the side effects of `Types.h`, and Types does include `vc/vc` before VecCore, and I'm not sure if that's needed on first import, so I left this conservative.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1658:185,wrap,wrapped,185,https://root.cern,https://github.com/root-project/root/pull/1658,1,['wrap'],['wrapped']
Integrability,This is a workaround for a missing feature in our ROOT_GENERATE_DICTIONARY where we should also propagate the include paths of dependent third-party modules. Partially addresses ROOT-10980,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999:127,depend,dependent,127,https://root.cern,https://github.com/root-project/root/pull/6999,1,['depend'],['dependent']
Integrability,"This is an alternative fix vs. #3360 mentioned on Mattermost; this renames `root/ROOT/RConfig.h` to `root/ROOT/RConfig.hxx` so that on case insensitive filesystems `root/RConfig.h` doesn't end up including itself if a user has the base directory ROOT is installed in before the `root` include in the include path. A file `root/ROOT/RConfig.h` is provided that also points at `root/ROOT/RConfig.hxx` for backward compatibility, and it prints a removal message. Since including `ROOT/RConfig.h` is probably quite rare, this could be dropped. Or it could avoid printing a message because it does no harm. (Even `RConfig.h` probably tends to be included mostly by ROOT). If most/all other includes are `.h`, this might be better for consistency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3361:451,message,message,451,https://root.cern,https://github.com/root-project/root/pull/3361,2,['message'],['message']
Integrability,"This is an internal change. The user interface remains unchanged, as we probably want to copy callables passed to `TDataFrame` by value in all cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/354:37,interface,interface,37,https://root.cern,https://github.com/root-project/root/pull/354,1,['interface'],['interface']
Integrability,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:216,wrap,wraps,216,https://root.cern,https://github.com/root-project/root/pull/507,1,['wrap'],['wraps']
Integrability,"This is an updated PR of #507 that is an update of #40. . As a reminder, this PR integrates a new minimizer in ROOT, CMA-ES see https://github.com/beniz/libcmaes/ . It rebases the new commits from @beniz to the current master and fixes the Eigen configuration issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7044:81,integrat,integrates,81,https://root.cern,https://github.com/root-project/root/pull/7044,1,['integrat'],['integrates']
Integrability,"This is another commit to clean RooFit of unneeded code and associated documentation. The RooRefCountList is only kept for IO backwards compatibility. From an IO point of view, it is equivalent to its parent class, the `RooLinkedList`. So we don't need to keep all the member function implementations. IN the one place where the `refCount()` member function is used in IO schema evolution rules, it now uses the `RooLinkedList` interface directly. This PR was tested by reading some old workspaces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13501:428,interface,interface,428,https://root.cern,https://github.com/root-project/root/pull/13501,1,['interface'],['interface']
Integrability,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:88,message,message,88,https://root.cern,https://github.com/root-project/root/pull/10546,1,['message'],['message']
Integrability,"This is done to better separate CUDA-specific code from the generic code; in RooBatchCompute. Two problems are addressed in this commit:. 1. The RooBatchCompute library had too many CUDA specific functions. The virtual RooBatchCompute interface should be backend agnostic, but; it had CUDA specific functions like `cudaMalloc()` and `cudaFree()`,; which where only implemented in the CUDA case. So an abstraction; didn't make much sense there. It's better to move the CUDA specifics; to a new `roofitcuda` library. Then, the functions from this library; are used in `batchcompute` and `roofitcore` behind preprocessor; macros when using CUDA. 2. Passing around `cudaStream_t` and `cudaEvent_t`. These types are only; available to `nvcc`, and in case gcc is used, these were forward; declared as stucts. This is a hack that should be avoided. In; particular, it can cause linker errors because the types are not the; same in the CUDA and C++ translation units. The proposed solution is to wrap the `cudaStream_t` and `cudaEvent_t`; pointers into C++ structs that are in the new CUDA support library,; and only when using `nvcc` it is allowed to unwrap these types. 3. Too specific signature of `RooAbsReal::computeBatch()`. This function; should not be too backend specific, but it took the `cudaStream_t`; directly. This parameter is removed. Now, the CUDA stream is stored; in a `RooBatchCompute::Config` struct that is passed around in the; `DataMap`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13409:235,interface,interface,235,https://root.cern,https://github.com/root-project/root/pull/13409,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,"This is necessary to give the user a clear error message, since otherwise the build will go on and fail anyway with a cryptic message. See [ROOT-9441](https://sft.its.cern.ch/jira/browse/ROOT-9441).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2150:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/2150,2,['message'],['message']
Integrability,"This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requireme",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1238,depend,dependency,1238,https://root.cern,https://github.com/root-project/root/pull/15272,1,['depend'],['dependency']
Integrability,This is part of a series of PRs aimed at disentangling class dependencies in RNodes.hxx by splitting it in multiple header files. The process also helps fixing includes and forward declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2604:61,depend,dependencies,61,https://root.cern,https://github.com/root-project/root/pull/2604,1,['depend'],['dependencies']
Integrability,"This is part of the ongoing effort to reduce the public interface of RooFit. Also remove the unnecessary base classes (`TNamed`, `RooPrintable`). The; only thing what was used from them was the `ClassName()` functionality; from `TClass()`, but this can easily be replaced with a single new; virtual function `generatorName()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11905:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/pull/11905,1,['interface'],['interface']
Integrability,This is required to inject SOFIE's inference functions into RDataFrame's event loops.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9241:20,inject,inject,20,https://root.cern,https://github.com/root-project/root/issues/9241,1,['inject'],['inject']
Integrability,"This is special C++ object which is associated with started web-based display.; It is low-level handle to open different web widgets.; Potentially one can use it to display any HTML page from ROOT - not only with RWebWindow. Make C++ `Creator` interface to make such instances specific for each supported platform - chrome, firefox, CEF, Qt5, system browser. This `Creator` interface provided by each plugin. Such interface is much easier to extend to support other platforms in the future. RWebDisplayHandle solves problem with correct cleanup of different platforms. ; Like only now all Qt5 objects can be correctly destroyed when window is closed.; Or forked process can be properly killed.; Or firefox temporary profile can be correctly removed. Cleanup and format CEF/Qt5 code. . Provide possibilities to embed arbitrary RWebWindow into existing QWidget when running with Qt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2819:244,interface,interface,244,https://root.cern,https://github.com/root-project/root/pull/2819,3,['interface'],['interface']
Integrability,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16007:56,depend,depend,56,https://root.cern,https://github.com/root-project/root/pull/16007,1,['depend'],['depend']
Integrability,This is the continuation of the campaign to slim down the public RooFit interface:. 1. Remove deprecated `RooCatType`; 2. Make `RooGenProdProj` private; 3. Get rid of `RooScaledFunc`.; 4. Remove RooAbsRootFinder; 5. Remove deprecated RooAbsString; 6. Remove internal `RooFormula` from public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12800:72,interface,interface,72,https://root.cern,https://github.com/root-project/root/pull/12800,2,['interface'],['interface']
Integrability,"This is the final version of ""printValue"" discussion. We agreed that printValue interface should be altered to to_string; interface, which can be invoked `gInterpreter->to_string(XYZ)`. This patch contains:. - Implementation of to_string in Interpreter.cpp; - Re-Implementation of ClingPrintValue to use to_string because I changed to use Evaluate some time ago.; - Removing of RVec version of printValue which wasn't used at all; - Fix test/vecops_rvec.cxx, printValue is never supposed to be called by a normal user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/2698,2,['interface'],['interface']
Integrability,"This is the first column with the delta+split encoding. Having now cast, split, and delta+split encoding and the byte swap on big-endian machines, it required some streamlining of the packing/unpacking routines in RColumnElement. Still missing and for a follow-up PR: (Split)Index64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12502:202,rout,routines,202,https://root.cern,https://github.com/root-project/root/pull/12502,1,['rout'],['routines']
Integrability,This is the follow-up to #4877. It removes the hard Davix dependency from RDataFrame.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4878:58,depend,dependency,58,https://root.cern,https://github.com/root-project/root/pull/4878,1,['depend'],['dependency']
Integrability,"This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist.; - An ambiguity for `operator[]` is solved.; - A constructor overload from iterators is added.; - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6542:46,interface,interface,46,https://root.cern,https://github.com/root-project/root/pull/6542,1,['interface'],['interface']
Integrability,"This is to avoid any num-diff fallback in RooFit, which results in annoying warnings for the user. A new function `ROOT::Math::digamma` is added to the public interface, which wraps `gsl_sf_psi`. The digamma function is the derivative of `lgamma`, so it is used in `CladDerivator.h` to define the derivatives of `TMath::LnGamma` and the related gamma functions that are used to define Poisson cdfs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16747:159,interface,interface,159,https://root.cern,https://github.com/root-project/root/pull/16747,2,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"This is to avoid output that doesn't indicate any problem and only makes; the test output harder to interpret. That's how the output of test 27 was before this commit:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); Test 27 : Integration over non-rectangular regions...............OK; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:278,integrat,integrator,278,https://root.cern,https://github.com/root-project/root/pull/8611,2,"['Integrat', 'integrat']","['Integration', 'integrator']"
Integrability,"This is to test a potential fix to a recent regression in llvm wrt exposing symbols to the JIT from dlopened with RTLD_LOCAL libraries. This regression forced ROOT to revert this patch, adding one more patch to the list of llvm patches. We want to check if D33529 fixes our issue and make sure it goes in the next llvm release (coming soon). @marsupial, I failed to apply D33657 on top and D33658. They are marked as dependencies but it looks like they do not apply cleanly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744:417,depend,dependencies,417,https://root.cern,https://github.com/root-project/root/pull/744,1,['depend'],['dependencies']
Integrability,"This is useful to flush all write buffers and trigger compression outside of a critical section, which might be needed to synchronize writing to a shared `TFile`. Closes #16241",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16391:122,synchroniz,synchronize,122,https://root.cern,https://github.com/root-project/root/pull/16391,1,['synchroniz'],['synchronize']
Integrability,"This is very first prototype for testing and further development. Idea to scan geometry and create render data on C++ side, ; only final WebGL display implemented in web browser. Also will be test-case for OpenUI TableTree integration. One need specialized OData-like requests to show only visible part of geometry hierarchy. tutorials/eve7/viewer.C shows basic usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3194:223,integrat,integration,223,https://root.cern,https://github.com/root-project/root/pull/3194,1,['integrat'],['integration']
Integrability,This is workaround to avoid circular dependency between v7primitives; and v7gpad. Detected by cmake on some platforms,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3468:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/3468,1,['depend'],['dependency']
Integrability,"This issue only occurs when the conda environment is activated.; I followed the default install method with `conda create -c conda-forge --name <my-environment> root`. I want to use a wrapper class for TChain called [Ntuple](https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py); https://github.com/Allen319/Ntuple/blob/master/python/Ntuple.py; But I cannot initialize this class with conda environment (If I use ROOT installed from source codes, it works well).; The error message:; ```; Traceback (most recent call last):; File ""./example_ntuple.py"", line 9, in <module>; n = Ntuple(""DataTree""); File ""/Users/allen/Documents/GitHub/tuple/python/Ntuple.py"", line 29, in __init__; TChain.__init__(self, name); TypeError: none of the 2 overloaded methods succeeded. Full details:; TChain::TChain() =>; TypeError: takes at most 0 arguments (1 given); no constructor available for 'TChain'; ```; It is strange that there is no other overloaded method with 2 args",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6467:184,wrap,wrapper,184,https://root.cern,https://github.com/root-project/root/issues/6467,2,"['message', 'wrap']","['message', 'wrapper']"
Integrability,This leads to errors due to absolute paths if ROOT is already; installed in the configured prefix (e.g. /usr/lib64/root):. CMake Error at cmake/modules/RootNewMacros.cmake:288 (message):; Header path; '/usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx'; /usr/lib64/root/include/ROOT/RVirtualCanvasPainter.hxx; is not relative!; Call Stack (most recent call first):; cmake/modules/RootNewMacros.cmake:968 (ROOT_GENERATE_DICTIONARY); graf2d/gpadv7/CMakeLists.txt:6 (ROOT_STANDARD_LIBRARY_PACKAGE),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3303:177,message,message,177,https://root.cern,https://github.com/root-project/root/pull/3303,1,['message'],['message']
Integrability,"This line was introduced by commit 0f1f12931f in 2016, in what looks like an unrelated change. All ROOT tests pass after removing it. @Axel-Naumann unless you happen to remember why this was introduced, I will synchronize this to the monorepo and we get rid of another patch...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13123:210,synchroniz,synchronize,210,https://root.cern,https://github.com/root-project/root/pull/13123,1,['synchroniz'],['synchronize']
Integrability,This makes the array interface pythonizations truly lazy so that the classes are not touched during `import ROOT`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3158:21,interface,interface,21,https://root.cern,https://github.com/root-project/root/pull/3158,1,['interface'],['interface']
Integrability,"This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15239:266,interface,interface,266,https://root.cern,https://github.com/root-project/root/pull/15239,2,"['interface', 'synchroniz']","['interface', 'synchronize']"
Integrability,"This new feature allows to display the storage layout of an RNTuple and to click on its pages to display information about a page. It creates a new ntupledraw library to limit dependencies.; Syntax is similar to RNTupleReader and RNTupleWriter:; `auto reader = RNTupleReader::Open(""ntupleName"", ""fileName"");`; `auto draw = RNTupleDraw::Open(reader);`; `draw->Draw();`; or; `auto draw = RNTupleDraw(reader);`; `draw.Draw();`. An example of a displayed RNTuple is shown below, zooming into the pages is possible:; <img width=""1440"" alt=""Screenshot 2019-11-21 at 12 18 57"" src=""https://user-images.githubusercontent.com/45257539/69346926-e884a180-0c73-11ea-939a-166e36552d83.png"">",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4634:176,depend,dependencies,176,https://root.cern,https://github.com/root-project/root/pull/4634,1,['depend'],['dependencies']
Integrability,"This new release includes some improvements:; * Add experimental support for forward vector mode; * Add pushforwards for std::floor and std::ceil; * Improve AD function interfaces with bitmasked options. For example:; clad::differentiate<<clad::order::first, clad::opts::vector_mode>(f) will; be equivalent to clad::differentiate<<1, clad::opts::vector_mode>(f) and; will request the first order derivative of f in forward vector mode.; * LLVM16 Support. See more at: https://github.com/vgvassilev/clad/blob/v1.2/docs/internalDocs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13269:169,interface,interfaces,169,https://root.cern,https://github.com/root-project/root/pull/13269,1,['interface'],['interfaces']
Integrability,This new release includes some improvements:; * Add support for pushforward- and pullback-style functions; * More supported constructs in forward and reverse mode; * Forward mode support for CUDA programs; * AD-based Floating Point Error Estimation Framework; * Integration with Enzyme. See more at: https://github.com/vgvassilev/clad/blob/v1.0/docs/internalDocs/ReleaseNotes.md. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11544:262,Integrat,Integration,262,https://root.cern,https://github.com/root-project/root/pull/11544,1,['Integrat'],['Integration']
Integrability,"This patch adds deprecation messages in the pq2 steering main, in rootd, proofd, ssh2rpd, and in all related man pages. Part of the agreed deprecation campaign.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1755:28,message,messages,28,https://root.cern,https://github.com/root-project/root/pull/1755,1,['message'],['messages']
Integrability,"This patch hasn't landed in 5.0, so the LLVM upgrade overwrote this; patch without bringing in the upstreamed fixed version. Original commit message:. The default VFS for the FileManager should be created from the CompilerInvocation; instead of assuming there is none.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1274:141,message,message,141,https://root.cern,https://github.com/root-project/root/pull/1274,1,['message'],['message']
Integrability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:434,interface,interface,434,https://root.cern,https://github.com/root-project/root/pull/3267,2,['interface'],['interface']
Integrability,This patch moves code which does similar things into standalone routines. This; way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:64,rout,routines,64,https://root.cern,https://github.com/root-project/root/pull/3865,1,['rout'],['routines']
Integrability,This patch works around compatibility issues between libcxx and glibc. It should fix the set up of the FNAL ART framework. Thanks to Chris Green this patch should resolve ROOT-10677. Depends on #5423,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5424:183,Depend,Depends,183,https://root.cern,https://github.com/root-project/root/pull/5424,1,['Depend'],['Depends']
Integrability,"This prevent the inappropriate execution on a rule intent for; an inner object on the outer object('s memory space). In a case where the top level branch is:; ```; 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >; ```; which contains; ```; 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>; 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase; 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**; ```; The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough; it was not split and it did so because it did not recognize there was a branch for; it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2860:171,Wrap,Wrapper,171,https://root.cern,https://github.com/root-project/root/pull/2860,2,['Wrap'],['Wrapper']
Integrability,"This prevents certain ugly error messages in case an exception is; thrown during a multi-thread event loop: before this patch, in that; case the thread's slot number was never returned to the RSlotStack; and it could result in some misleading error messages being printed on; screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6601:33,message,messages,33,https://root.cern,https://github.com/root-project/root/pull/6601,4,['message'],['messages']
Integrability,"This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863:105,depend,dependent,105,https://root.cern,https://github.com/root-project/root/pull/12863,1,['depend'],['dependent']
Integrability,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10930:340,depend,dependent,340,https://root.cern,https://github.com/root-project/root/pull/10930,2,['depend'],"['dependent', 'depends']"
Integrability,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775:793,interface,interface,793,https://root.cern,https://github.com/root-project/root/pull/10775,1,['interface'],['interface']
Integrability,"This pull request fixes a misuse of the `TVirtualCollectionProxy` iterator interface. Specifically the `Next()` and `DeleteTwoIterators()` functions take a pointer to the iterator itself (not a pointer-to-pointer). The misuse was most likely due to the lack of proper documentation on the `TVirtualCollectionProxy` class. The documentation for this class should be thus updated in a follow-up PR. The issue was originally introduced in https://github.com/root-project/root/pull/12380 and first noticed by @Nowakus on March 13, when trying to write a `xAOD::DataVector<T>` into RNTuple. This PR should fix the observed misbehavior. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:75,interface,interface,75,https://root.cern,https://github.com/root-project/root/pull/12542,1,['interface'],['interface']
Integrability,"This pull request fixes the search for contour points in Minuit2. ; Three separated problems were identified (see the commit messages); - a bug in Minos for computing errors when close to the border; - an issue in finding the contour point in case the first attempt failed.; - an issue in the seed when one of the second derivative is zero. Use now an arbitrary value (e.g. 1) instead of using a very small g2, resulting in a very large covariance causing later on problem in the minimization. . This PR fixes the issue #13729",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13918:125,message,messages,125,https://root.cern,https://github.com/root-project/root/pull/13918,1,['message'],['messages']
Integrability,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:593,interface,interfaces,593,https://root.cern,https://github.com/root-project/root/pull/10860,2,"['interface', 'wrap']","['interfaces', 'wrappers']"
Integrability,"This pull request improves the support for storage of collections that use `TVirtualCollectionProxy`, which was initially landed in #11525. However, `TVirtualCollectionProxy` allows for traversing a collection using iterators, which should be faster than using `TVirtualCollectionProxy::At()`. Also, this interface avoids (where possible) an additional copy during element insertion. ## Changes or fixes:; - Switches from using `TVirtualCollectionProxy::{Size,At}()` to the use of iterators. After merging this PR, an implementation for the following functions is required instead: `TVirtualCollectionProxy::GetFunctionCreateIterators()`, `GetFunctionNext()`, and `GetFunctionDeleteTwoIterators`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11671.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12380:305,interface,interface,305,https://root.cern,https://github.com/root-project/root/pull/12380,1,['interface'],['interface']
Integrability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Convolutions can also be nested with each other and `NSUM`s. Note: this is the corrected version of PR #846.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/853:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/853,1,['integrat'],['integrates']
Integrability,"This pull request integrates the `TF1Convolution` object into `TF1` so that one can directly create a `TF1` with a convolution in it. The syntax to construct such a convolution is:; `new TF1(""f"", ""CONV(f1, f2)"")`; Note that convolutions can be nested with each other and `NSUM`s. Also, if you are helping me merge, please note that this pull request contains within it the `TF1NormSum` code from PR #799. . **Edit:** Due to problems with the rebase, this PR has been closed. Please see PR #853 instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/846:18,integrat,integrates,18,https://root.cern,https://github.com/root-project/root/pull/846,1,['integrat'],['integrates']
Integrability,"This pull request introduces RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldK",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:657,interface,interface,657,https://root.cern,https://github.com/root-project/root/pull/11525,2,['interface'],['interface']
Integrability,"This pull request is a attempt to fix the problem described here:; https://root-forum.cern.ch/t/graphical-and-variable-cuts-in-ttree-draw/32862. When a selection including a graphical cut and and other cut is done on a tree having array variables, the selected entries depend in the order in which the graphical and the normal cut are done. The simplest macro showing the problem (using the root file attached to the forum) is:. ```; {; auto file = new TFile(""ptmac.root"");; auto C = new TCanvas();; C->Divide(2,1);. TCutG *gcut = new TCutG(""CUTG"",5);; gcut->SetVarX(""z"");; gcut->SetVarY(""theta"");; gcut->SetPoint(0,-30,2);; gcut->SetPoint(1,-10,5);; gcut->SetPoint(2,-5,40);; gcut->SetPoint(3,-50,25);; gcut->SetPoint(4,-30,2);. C->cd(1); tree->Draw(""z"",""z>-20 && CUTG"","""",10000);; C->cd(2); tree->Draw(""z"",""CUTG && z>-20"","""",10000);; }; ```. without this fix the two plots are different whereas they should be the same. . Not being an expert in that part of the ROOT code, I am not completely sure this fix is the best.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3591:269,depend,depend,269,https://root.cern,https://github.com/root-project/root/pull/3591,1,['depend'],['depend']
Integrability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:1391,interface,interface,1391,https://root.cern,https://github.com/root-project/root/pull/12279,1,['interface'],['interface']
Integrability,"This pull-request disables the warning `redundant parentheses surrounding declarator [-Wredundant-parens]` for everything except input parsed via `Interpreter::process()` (e.g., for prompt input). ## Changes or fixes:; - `CompilationOptions::IgnorePromptDiags` extended to >1 bit and renamed to `CompilationOptions::IgnoreDiagsMask`. Several values from the `IgnoreDiags` enumeration can be bitwise-OR'd together. The original purpose of `IgnorePromptDiags` now corresponds to the `IgnoreDiags::kPromptBasic` flag.; - `FilteringDiagConsumer` has been extended to handle groups of diagnostics that can be masked via `CompilationOptions::IgnoreDiagsMask`.; - Default ignore diagnostics mask can be (optionally) specified as an argument to `Interpreter::makeDefaultCompilationOpts()`. All interface functions use `IgnoreDiags::kPromptExtended` except `Interpreter::process()`. ## Checklist:; - [X] tested changes locally. This PR fixes [SPI-2064](https://sft.its.cern.ch/jira/browse/SPI-2064).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9695:786,interface,interface,786,https://root.cern,https://github.com/root-project/root/pull/9695,1,['interface'],['interface']
Integrability,This pull-request is a backport of https://github.com/root-project/root/pull/9244 to v6.24. The original PR suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc. For more information see #9244. This PR fixes #8622.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10120:153,wrap,wrapper,153,https://root.cern,https://github.com/root-project/root/pull/10120,1,['wrap'],['wrapper']
Integrability,"This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:; - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options.; - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused.; - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor.; - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8452:312,depend,dependent,312,https://root.cern,https://github.com/root-project/root/pull/8452,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"This pull-request moves the `SerializeXxx` routines for fundamental integer types; to a named namespace. The aim is to make these functions reusable by other; parts of the RNTuple code, e.g., alternative backends, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8003:43,rout,routines,43,https://root.cern,https://github.com/root-project/root/pull/8003,1,['rout'],['routines']
Integrability,"This pull-request suppresses `-Wunused-result` diagnostics for wrapper functions generated by TClingCallFunc (see below). A TClingCallFunc wrapper function might look as the excerpt below, where the function denoted by `func` may have been annotated as `[[nodiscard]]`. Note that if `ret == nullptr` the result of the call is unused.; ```c++; extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret) {; if (ret) {; new (ret) (return_type) ((class_name*)obj)->func(args...);; }; else {; ((class_name*)obj)->func(args...);; }; }; ```. In turn, this triggers warnings when used by cppyy/PyROOT, e.g.; ```python; >>> import ROOT; >>> v = ROOT.std.vector(int)(); >>> v.empty(); input_line_34:10:7: warning; ignoring return value of function declared with 'nodiscard' attribute; [-Wunused-result]; ((const vector<int>*)obj)->empty();; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; True; >>>; ```. ## Changes or fixes:; - Given the above situation, this commit supresses `-Wunused-result` diagnostics only for TClingCallFunc wrapper functions. ## Checklist:; - [X] tested changes locally. This PR fixes #8622. Sibling PR in roottest: https://github.com/root-project/roottest/pull/791",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244:63,wrap,wrapper,63,https://root.cern,https://github.com/root-project/root/pull/9244,3,['wrap'],['wrapper']
Integrability,This put libMultiProc on par with libImt (which now uses/depends on libMultiProc) and allow to delay creation; of the StreamerInfo needed for reading rootpcm. Both libImt and libMultiProc contains classes not intended; for I/O anyway and not expected to be instropected (so no strong benefit to having a rootpcm).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7073:57,depend,depends,57,https://root.cern,https://github.com/root-project/root/pull/7073,1,['depend'],['depends']
Integrability,This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3757:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/3757,1,['depend'],['dependency']
Integrability,This removes the false positive dependencies in the rootbench builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4230:32,depend,dependencies,32,https://root.cern,https://github.com/root-project/root/pull/4230,1,['depend'],['dependencies']
Integrability,"This removes the implementation headers dependent on OpenCascade from the include directory of geocad (moved to src), keeping only the interface header. Added an example of use in tutorials (geo2occ.C)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3069:40,depend,dependent,40,https://root.cern,https://github.com/root-project/root/pull/3069,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"This results in more modular code that is also safer: the `ROOT::Fit::Fitter` has no access to the RooAbsMinimizerFcn anymore, only to the member that is a lightweight adapter. This means the `RooAbsMinimizerFcn` also doesn't get cloned unexpectedly, so we don't need extra checks in the RooMinimizer to account for that!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348:168,adapter,adapter,168,https://root.cern,https://github.com/root-project/root/pull/12348,1,['adapter'],['adapter']
Integrability,"This reverts commit 1e8c04dd4beff8fc3d34cfd21e45358e85ae0f79.; In this commit, main idea was to use clang binary to retrieve information; about resource-clang-dir. Sadly ROOT patched LLVM/Clang is built; without clang binary and ROOT CMake crash then with next error:. -- /home/oksana/CERN_sources/llvm-clang-root/inst/bin; CMake Error at core/clingutils/CMakeLists.txt:80 (message):; Cannot determine clang resource directory path",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4259:374,message,message,374,https://root.cern,https://github.com/root-project/root/pull/4259,1,['message'],['message']
Integrability,This reverts commit 3efc1356fcd48771c821314fab6c4427078480bd. `/mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/tutorials/hist/ContourList.C:23:19: error: expected unqualified-id; const Double_t PI = TMath::Pi();; /usr/share/R/include/R_ext/Constants.h:36:24: note: expanded from macro 'PI'; #define PI M_PI; /usr/include/math.h:777:16: note: expanded from macro M_PI; CMake Error at /mnt/build/night/LABEL/ROOT-ubuntu18.04/SPEC/rtcxxmod/root/cmake/modules/RootTestDriver.cmake:230 (message):; error code: 1`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3589:493,message,message,493,https://root.cern,https://github.com/root-project/root/pull/3589,1,['message'],['message']
Integrability,"This reverts commit 8bb0a978a34e8f026a98642afe118e15d2356b6c. With ACLiC, which means if you do ""root.exe hsimple.C+"", ROOT generates; library for hsimple.C and execute this library instead of interpreting it at; runtime. This didn't work with our ""preloading modules"" infrastructure,; as it's not even interpreting. We can fix this by; 1. Adding NEEDED section when generating so files.; This is like a ""static linker"" solution, which means we'll change; rootcling_impl to properly add dependency libraries.; 2. Try to get callback from library; I think this makes ACLiC slower, so I like the 1st solution. However, for now, let's just revert this patch. edit:; https://gist.github.com/yamaguchi1024/644b7ee431fce460fb27c1402e92c903; https://gist.github.com/yamaguchi1024/d5a69666d1e10f0b2cfc176a07792420",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187:487,depend,dependency,487,https://root.cern,https://github.com/root-project/root/pull/2187,1,['depend'],['dependency']
Integrability,"This reverts part of 63636f6aeb3 from a few days ago, which also changed the interface of virtual functions, which was not the intention and breaks user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16491:77,interface,interface,77,https://root.cern,https://github.com/root-project/root/pull/16491,1,['interface'],['interface']
Integrability,"This should allow us to build non-standard modules such as boost. This patch should enable building the cmssw third-party modules for external dependencies. Cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:143,depend,dependencies,143,https://root.cern,https://github.com/root-project/root/pull/5359,1,['depend'],['dependencies']
Integrability,"This should be the last crop of fixes needed by ROOT-10216. In brief, the changes are to replace lookup by simpler search to avoid nested; initialization of TClasses (leading to the outer nested initialization; to end using deleted memory). Some explanation of the reasons for and details of the actual changes. With. ```; namespace User {; class TrackerVtxBase; class BeamFlux : public User::TrackerVtxBase; class NTrackerVtx : public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:555,rout,routines,555,https://root.cern,https://github.com/root-project/root/pull/4389,2,['rout'],['routines']
Integrability,This should fix the following error on Windows:; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1518 (message):; PyROOT: Python development package not found and pyroot component required; (python executable: C:/Python38-32/python.exe),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5414:114,message,message,114,https://root.cern,https://github.com/root-project/root/pull/5414,1,['message'],['message']
Integrability,"This somewhat huge commit mainly demotes many class-versions to 0. . If wanted, I can for sure squash some things (right now, the commit messages contain the underlying reasoning). . In ROOT, a lot of classes were equipped with class-versions > 0 even though they are not meant for IO / streaming. ; This produces unnecessary overhead (creation of Streamer() functions) and might be misleading for users (especially if they believe streaming of these classes would be ok and then lose parts of their data). That's even more helpful when testing framework's dataobject-code. . These classes were identified by https://github.com/olifre/rootStaticAnalyzer (a new project still in early stages) and I have created this PR to fix almost all these issues. . The last commit in the series also explicitly marks two members (of TSeqCollection and THashList) as transient, even though these classes are already class-version 0. This is purely to make it more explicit that these are not streamed - and allow for programmatic testing (since then the `kTransient` bit of the `TRealData` will be set correctly). . Several issues alerted by `rootStaticAnalyzer` still remain which are probably real bugs in ROOT 6. . Examples: . ```; TMVA/PDF.h:0: error: Data object class 'TMVA::PDF' will not stream the following indirect members: members 'fConfigName, fConfigDescription, fReferenceFile' from class 'TMVA::Configurable' (class-version 0)!; ```. It seems like `TMVA::PDF` is meant for streaming, but inherits from a base which is not. . Similar to that:. ```; include/TTreeResult.h:0: error: Data object class 'TTreeResult' will not stream the following indirect members: members 'fRowCount' from class 'TSQLResult' (class-version 0)!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/169:137,message,messages,137,https://root.cern,https://github.com/root-project/root/pull/169,1,['message'],['messages']
Integrability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:77,depend,dependencies,77,https://root.cern,https://github.com/root-project/root/pull/15272,2,['depend'],['dependencies']
Integrability,"This turned out to be quite a bit harder to fix than I anticipated, but now almost all headers should be picked from the source directory, and many missing dependencies were added. After I also fix `ROOT_GENERATE_EXECUTABLE()` to use headers from the source directory, then generate headers out of `${CMAKE_BINARY_DIR}/include` and add them to their respective owning targets, we should be able to move the headers to the build directory only at the very end of the build in order to make ROOT usable from the build directory. However, in order to catch missing includes and other dependencies at build time, we need to keep using headers from the source directory only during the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299:156,depend,dependencies,156,https://root.cern,https://github.com/root-project/root/pull/4299,2,['depend'],['dependencies']
Integrability,"This was causing roottest-root-core-execStatusBitsCheck failure. TEmulatedTuple is injected to AST by creating virtual file called; `input_line_<number>`. This is the same way as we inject ""ClassDef(name,; id)"" and we need to `undef __ROOTCLING__` in that case (because it's not; ROOTCLING)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112:83,inject,injected,83,https://root.cern,https://github.com/root-project/root/pull/2112,2,['inject'],"['inject', 'injected']"
Integrability,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:263,depend,depending,263,https://root.cern,https://github.com/root-project/root/pull/2764,1,['depend'],['depending']
Integrability,"This was last methods where TVirtualPad and TVirtualPainter3D were used.; Now dependency from libGpad remains only via libTreePlayer.; Later these specialized classes will be moved to separate library to make libROOTEve only depend from libGeom, libCore, libMath libraries",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3199:78,depend,dependency,78,https://root.cern,https://github.com/root-project/root/pull/3199,2,['depend'],"['depend', 'dependency']"
Integrability,"This was spotted by @vepadulano. As the title suggests: RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python. Minimal repro:; ```py; >>> import ROOT; >>> ds2 = ROOT.RDF.Experimental.RDatasetSpec(""tree"", ""z.root"", (10, 7)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 5 overloaded methods succeeded. Full details:; RDatasetSpec::RDatasetSpec(ROOT::RDF::Experimental::RDatasetSpec&&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const vector<string>& fileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 2; RDatasetSpec::RDatasetSpec(const vector<pair<string,string> >& treeAndFileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: takes at most 2 arguments (3 given); RDatasetSpec::RDatasetSpec(const ROOT::RDF::Experimental::RDatasetSpec&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const string& fileNameGlob, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 3; ```; This is instead supposed to trigger:; ```cpp; RDatasetSpec::REntryRange::REntryRange(Long64_t begin, Long64_t end) : fBegin(begin), fEnd(end); {; if (fBegin > fEnd); throw std::logic_error(""The starting entry cannot be larger than the ending entry in the ""; ""creation of a dataset specification."");; }; ```; P.S. very interesting that an overload is not recognized depending on the same basic types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11051:1637,depend,depending,1637,https://root.cern,https://github.com/root-project/root/issues/11051,1,['depend'],['depending']
Integrability,This way when we introduce dependencies in TMath that require linkage (f.e. Vc) it won't suppose a problem for libCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/466:27,depend,dependencies,27,https://root.cern,https://github.com/root-project/root/pull/466,1,['depend'],['dependencies']
Integrability,This will be replaced with a proper error message in the future; once we have a reliable way of implmenting such an error. For; now it's already an improvement if we always print a warning; when we build a module on demand.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1336:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/1336,1,['message'],['message']
Integrability,This will be the interface to apply for void returning functions (or when you have no need to return the map vector -this implies no reduction- and want to save some space),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/397:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/397,1,['interface'],['interface']
Integrability,"This would allow CMSSW to build its third party modules by calling:. ```; rootcling bare-cling -xc++ -I${ROOTSYS}/etc -I ${headers_location}; -fmodules -Xclang -emit-module -fmodule-name=tinyxml2; -fmodules-cache-path=${CMSSW_LIBDIR} -o ${module_file_location}; ${headers_location}/module.modulemap; ```. This commit has several issues one is that it does not order the dependencies so if libc.pcm goes out of date the build system does not regenerate std.pcm. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521:370,depend,dependencies,370,https://root.cern,https://github.com/root-project/root/pull/5521,1,['depend'],['dependencies']
Integrability,"Those dictionaries also generate a C++ module, but we don't specify; as of yet the dependencies on the referenced C++ modules from ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/914:83,depend,dependencies,83,https://root.cern,https://github.com/root-project/root/pull/914,1,['depend'],['dependencies']
Integrability,"To be merged after #2709 (depends on it).; Only the last 5 commits of this PR are new, the rest are already present in #2709 . This resolves ROOT-9468 (""[DF] Jitting of large Snapshots is too slow"").",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2713:26,depend,depends,26,https://root.cern,https://github.com/root-project/root/pull/2713,1,['depend'],['depends']
Integrability,"To facilitate the creation of RooFit datasets from RDataFrame, an; ActionHelper is added to RooFit.; It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7317:146,depend,depends,146,https://root.cern,https://github.com/root-project/root/pull/7317,1,['depend'],['depends']
Integrability,To stay consistent with the interface method.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/642:28,interface,interface,28,https://root.cern,https://github.com/root-project/root/pull/642,1,['interface'],['interface']
Integrability,Trouble with CMake Integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:19,Integrat,Integration,19,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Integrat'],['Integration']
Integrability,"True` as optional argument. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", numba_only=True); def f(x); return 2.0 * x; ```. In addition, you can set a `verbose` flag to let PyROOT tell you if the decorator falls back to the generic implementation. ```python; @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); def f(x); return ROOT.std.string(str(x)). ROOT.CppCallable.f(x); # 1) Throws Python warning:; # /home/stefan/foo.py:5: RuntimeWarning: Failed to compile Python callable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strong",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:1742,Inject,Inject,1742,https://root.cern,https://github.com/root-project/root/pull/3488,1,['Inject'],['Inject']
Integrability,Try to fix a missing dependency of Imt on TBB (at least on Windows),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12777:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/12777,1,['depend'],['dependency']
Integrability,"Try to keep old interface as is - if by chance anybody uses it outside ROOT. In any case, one **MUST** fix problem with TVirtualGL.cxx.; In original code (current master) not a pointer on the function but double pointer on the variable was provided - code was never working before",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2652:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/2652,1,['interface'],['interface']
Integrability,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:84,interface,interfaces,84,https://root.cern,https://github.com/root-project/root/pull/4968,1,['interface'],['interfaces']
Integrability,"Two substantive changes:; 1) Explicitly catch errors in pyroot when the wrapper function fails to compile (this is actually an expanded version of a partial fix which is already upstream in cppyy: https://github.com/wlav/cppyy-backend/commit/8de6ed5ffcabaeba52fba5b8471149c6bb1fe71d); 2) Make sure template instantiation fails by catching clang errors within LookupHelper and rolling back the transaction where appropriate (still not entirely sure this is exactly the right fix, @Axel-Naumann @jalopezg-git please take a look); 3) Implement a mechanism for redirecting cling diagnostics to a user provided ostream and use this in cppyy to capture the diagnostic output and append it to the python exceptions or warnings as appropriate. This PR fixes https://github.com/root-project/root/issues/11854. There are still some remaining problems with the transaction rollback, however template instantiation from cppyy now behaves the same as calling ```TInterpreter::Declare``` in this respect. This is likely related to the issues described by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:72,wrap,wrapper,72,https://root.cern,https://github.com/root-project/root/pull/12449,1,['wrap'],['wrapper']
Integrability,"Typical example is:. ```; auto h1 = new TH1I(Form(""name%d"",i),Form(""title%d"",i), 100, 0, 100);; ```. Similar interface was used when creating branches. Extreme case when:. ```; Form(""%s_somthing"", Form(""incpsulated%d"", cnt));; ```. In all these places use `TString::Format` instead which returns `TString` instance. Do same in `tmva/tests` and `tmva/tmvagui`. Fixes: https://github.com/root-project/root/issues/13136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13433:109,interface,interface,109,https://root.cern,https://github.com/root-project/root/pull/13433,1,['interface'],['interface']
Integrability,Uniformize Interface of Random Generators in Math,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12410:11,Interface,Interface,11,https://root.cern,https://github.com/root-project/root/pull/12410,1,['Interface'],['Interface']
Integrability,"Unify the main common entry points between local and distributed RDataFrame API. Currently these changes:. - The ROOT.RDataFrame constructor; - ROOT.RDF.RunGraphs; - ROOT.RDF.Experimental.VariationsFor. Anytime one of the above is called, a pythonization will dispatch to the appropriate RDataFrame flavour, depending on the arguments. Previous usage of the distributed module with fully qualified names of functions still works, although usage of the unified API is preferrable and advisable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16681:308,depend,depending,308,https://root.cern,https://github.com/root-project/root/pull/16681,1,['depend'],['depending']
Integrability,Until now we let users use `array_view` columns to signal that they were reading c-style-array branches from a root file (and therefore we needed a `TTreeReaderArray` as a reader).; We now use our own `TArrayBranch` class for that purpose instead of embedding `array_view` with a meaning it does not have. This is a breaking interface change.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1303:325,interface,interface,325,https://root.cern,https://github.com/root-project/root/pull/1303,1,['interface'],['interface']
Integrability,"Up to now only TVirtualPadPainter interface was redefined.; Now also TVirtualPS is used, which is important for 3D painters.; This is just minimal workaround to support existing painters before appropriate JavaScript code will be provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2837:34,interface,interface,34,https://root.cern,https://github.com/root-project/root/pull/2837,1,['interface'],['interface']
Integrability,Update ROOT's R interface for Rcpp 1.0.13,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:16,interface,interface,16,https://root.cern,https://github.com/root-project/root/pull/16075,1,['interface'],['interface']
Integrability,Update a warning message when using RooFit::NumCpu with strategy=3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/5735,1,['message'],['message']
Integrability,"Update the cleanup routine. Add cleaning up failed fits as well, i.e.,; CLs < 0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6219:19,rout,routine,19,https://root.cern,https://github.com/root-project/root/pull/6219,1,['rout'],['routine']
Integrability,Update to VecCore integration in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/830:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/830,2,['integrat'],['integration']
Integrability,Update warning message as suggested by Stephan in https://github.com/root-project/root/pull/5724,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5735:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/5735,1,['message'],['message']
Integrability,Updates DeclCollectorPPAdapter to new clang interface that reports an when every **#undef** encountered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/645:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/645,1,['interface'],['interface']
Integrability,Updating dependencies for onepcm in case of runtime_cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2687:9,depend,dependencies,9,https://root.cern,https://github.com/root-project/root/pull/2687,1,['depend'],['dependencies']
Integrability,Use REveElement render state interface so user can control visibility of collection through checkbox in the tree node.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5046:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/5046,1,['interface'],['interface']
Integrability,Use TTaskGroup interface to unzip baskets in parallel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:15,interface,interface,15,https://root.cern,https://github.com/root-project/root/pull/1010,1,['interface'],['interface']
Integrability,Use dictionary object files as dependencies for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4330:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/4330,1,['depend'],['dependencies']
Integrability,Use dictionary source file as dependency for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4329:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/4329,1,['depend'],['dependency']
Integrability,Use dictionary source files as extra dependencies for the PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4355:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/4355,1,['depend'],['dependencies']
Integrability,Use find_package(BLAS) to satisfy MathMore's cblas dependencies introduced by GSL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950:51,depend,dependencies,51,https://root.cern,https://github.com/root-project/root/pull/6950,1,['depend'],['dependencies']
Integrability,Use more override syntax in main interface classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10469:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/10469,1,['interface'],['interface']
Integrability,Use proper printing Interface in RVec.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2640:20,Interface,Interface,20,https://root.cern,https://github.com/root-project/root/pull/2640,1,['Interface'],['Interface']
Integrability,Use proper printing interface in RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/2644,1,['interface'],['interface']
Integrability,Use very nice feature of openui5 SplitApp to manage different pages together!. * Re-implement GUI which was designed before using dat.GUI.; * Change a lot TGeoPainter interface - especially for setting control parameters; * Newest JSROOT code with several improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4223:167,interface,interface,167,https://root.cern,https://github.com/root-project/root/pull/4223,1,['interface'],['interface']
Integrability,Used in `RCanvas::SaveAs()` method to avoid failure message when image production in ; tutorials macros is not possible. Should fix newly introduced errors in Jenkins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13115:52,message,message,52,https://root.cern,https://github.com/root-project/root/pull/13115,1,['message'],['message']
Integrability,"Users might want to connect to a notebook server launched with 'root --notebook' from another computer. This setting of the Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container, binding on localhost might fail. This looks like the issue reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3037:259,Depend,Depending,259,https://root.cern,https://github.com/root-project/root/pull/3037,1,['Depend'],['Depending']
Integrability,"Users might want to connect to a notebook server launched with; 'root --notebook' from another computer. This setting of the; Jupyter configuration makes that possible. This also solves the issue explained here:. https://github.com/ipython/ipython/issues/6193. Depending on the network configuration of a machine/container,; binding on localhost might fail. This looks like the issue; reported on ROOT-9829.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3052:261,Depend,Depending,261,https://root.cern,https://github.com/root-project/root/pull/3052,1,['Depend'],['Depending']
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding and Truncate ROOT::RVec temp adopted from &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16341:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16341,2,"['bridg', 'depend']","['bridge', 'depends']"
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Padding with std::fill() or Truncate &vec depends on vec_size and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16342:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16342,2,"['bridg', 'depend']","['bridge', 'depends']"
Integrability,"Using ""bridge with numpy"" between batch data from RBatchGenerator to torch.tensor(); Using std::resize() and direct copy in rchunkloader.hxx AssignVector() function",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16340:7,bridg,bridge,7,https://root.cern,https://github.com/root-project/root/pull/16340,1,['bridg'],['bridge']
Integrability,Using TFile::Open produces an Error message catch by the jenkins rules declaring the doc failure. These changes test the file existence before using them. A warning (not an Error) is printed if not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10471:36,message,message,36,https://root.cern,https://github.com/root-project/root/pull/10471,1,['message'],['message']
Integrability,"Using `nlohmann_json` as a public dependency of ROOT can result in different troubles, like #14188. That's why it's better to avoid this dependency if we can, also to minimize the dependency of RooFit on the interface level. In the case of RooFit, the only reason for this dependency was the `HeatmapAnalyzer::getMetadata()` function. However, it just returned a json with a vector of string lables. We can also return a `std::vector<std::string>` here. I already talked with @Zeff020 about this change, and he is completely fine with it. The class was also only used by the RooFit Multiprocess developers so far, so changing the interface is fine. With this interface change, only some refactoring was necessary to avoid including `nlohmann_json` in the RooFit headers. This commit is similar to 9d7aa4a96e.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14266:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/14266,7,"['depend', 'interface']","['dependency', 'interface']"
Integrability,Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380:19,wrap,wrapper,19,https://root.cern,https://github.com/root-project/root/pull/10380,1,['wrap'],['wrapper']
Integrability,Using target_compile_options to set INTERFACE items on IMPORTED targets; is only supported in cmake 3.11 and up (see similar PR #5396). Reported in issue #7654.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7667:36,INTERFACE,INTERFACE,36,https://root.cern,https://github.com/root-project/root/pull/7667,1,['INTERFACE'],['INTERFACE']
Integrability,VA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1753,message,message,1753,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5236,message,message,5236,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"Various small fixes and improvements to RooFit, described further in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8632:80,message,messages,80,https://root.cern,https://github.com/root-project/root/pull/8632,1,['message'],['messages']
Integrability,"Via `TVirtualPad.h` it was spread over many sources.; But only `enum ECursor` was required in `TVirtualPad.h`; I just moved `ECursor` to `GuiTypes.h`, where many similar enum are defined.; Now one can fully remove `TVirtualX.h` from `TVirtualPad.h`, `TCanvas.h` and co. Also GUI classes do not require to populate `TVirtualX` interface via headers - ; one can put `#include ""TVirtualX.h""` in sources where it really used.; If necessary, we could place back TVirtualX.h into TGWindow.h - I can remove last commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5072:326,interface,interface,326,https://root.cern,https://github.com/root-project/root/pull/5072,1,['interface'],['interface']
Integrability,"Virtually any git operation will trigger a regeneration of VCSRevision.h.; As cling, dictionaries, and libraries depend on this file, we need to; *not* regenerate it - we won't need it anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8006:113,depend,depend,113,https://root.cern,https://github.com/root-project/root/pull/8006,1,['depend'],['depend']
Integrability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6850:83,interface,interface,83,https://root.cern,https://github.com/root-project/root/pull/6850,1,['interface'],['interface']
Integrability,"Walking the dyld map manually is missing the libc lock. Instead, use the; official interface for this. Make sure that any call to UpdateListOfLoadedSharedLibraries; is actually locked by gInterpreterMutex. (cherry picked from commit 653d927f1d21a50812b049bc16a73e91302485d4)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6877:83,interface,interface,83,https://root.cern,https://github.com/root-project/root/pull/6877,1,['interface'],['interface']
Integrability,"We accidentially check and annotate the return type of the function twice for; being a pointer/reference type when we do the ""else"" part of the; wrapper. This patch removes this wrong second check and extends; the tests to check that the cast in both branches of the if/else; is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/667:145,wrap,wrapper,145,https://root.cern,https://github.com/root-project/root/pull/667,1,['wrap'],['wrapper']
Integrability,"We construct a vector of string pairs and pass it through to the; RNTuple::Merge function for merging. This implements a ""legacy bridge""; between hadd/TFileMerger and the new RNTuple library. We adhere to the Merge(TCollection*, TFileMergeInfo*) interface without; using either class in the implementation by carefully casting the; RNTuple information vector and output file string pointers. An example of this technique is shown here, which passes UBSan, ASan,; and strict aliasing checks on gcc 10 and clang 10: https://godbolt.org/z/7ff3e8. For demonstration, the `hadd` output for merging two `ntuple` files looks like: ; ```shell; $ ./bin/hadd -f dir/merged.root ntuple1.root ntuple2.root; hadd Target file: dir/merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: dir/merged.root:/; Warning in <TFileMerger::MergeRecursive>: merging RNTuples is experimental. # note: TFileMerger debug output begins ; examining ntuple1.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; examining ntuple2.root:/; got key for type ROOT::Experimental::RNTuple with name ntuple; got ntuple from file 'ntuple1.root:/' named 'ntuple'; got ntuple from file 'ntuple2.root:/' named 'ntuple'. # note: RNTuple::Merge debug output begins; RNTuple merger output file is dir/merged.root:/; merging ntuple from file 'ntuple1.root:/ named 'ntuple'; merging ntuple from file 'ntuple2.root:/ named 'ntuple'; RNTuple merging is unimplemented. # control is passed back to TFileMerger::MergeRecursive; Error in <TFileMerger::MergeRecursive>: error merging RNTuples; Error in <TFileMerger::Merge>: error during merge of your ROOT files; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6101:129,bridg,bridge,129,https://root.cern,https://github.com/root-project/root/pull/6101,2,"['bridg', 'interface']","['bridge', 'interface']"
Integrability,"We currently don't support numba 0.60.0 yet:; https://github.com/root-project/root/blob/master/requirements.txt#L17. One can see the problem when going into `roottest/python/numba` and running the test there:; ```bash; python PyROOT_numbatests.py; ```. Output with ROOT master and numba 0.59, where it's only a warning:; ```txt; PyROOT_numbatests.py::TestClasNumba::test03_inheritance; /home/rembserj/spaces/master/root/src/root/roottest/python/numba/PyROOT_numbatests.py:107: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors; Exception origin:; File ""/home/rembserj/spaces/master/install/lib/root/cppyy/numba_ext.py"", line 349, in generic_resolve; f = typ._scope.__dict__[attr]; ~~~~~~~~~~~~~~~~~~~^^^^^^. return obj.get_one(). -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html; ```. Supporting numba 0.60.0 would be nice, because 0.59.0 doesn't support NumPy 2 yet. Thus, our current environment falls back to NumPy 1 and we are lacking NumPy 2 test support.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16201:546,depend,depending,546,https://root.cern,https://github.com/root-project/root/issues/16201,1,['depend'],['depending']
Integrability,"We currently fail to create a module for RootFit with the following error; message when merging a union in signal.h:; ```; In file included from input_line_12:67:; In file included from /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/RooErrorHandler.h:20:; In file included from /usr/include/signal.h:394:; /usr/include/bits/pthreadtypes.h:130:3: error: typedef redefinition with different types ('union pthread_cond_t' vs 'union pthread_cond_t'); } pthread_cond_t;; ^; /usr/include/sys/types.h:271:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'Hist.Foption.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:820:10: note: Hist.Foption.h defined here; module ""Foption.h"" { header ""Foption.h"" export * }; ^; /usr/include/signal.h:394:11: note: '/usr/include/bits/pthreadtypes.h' included multiple times, additional include site in header from module 'RooFitCore.RooErrorHandler.h'; ^; /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/module.modulemap:2449:10: note: RooFitCore.RooErrorHandler.h defined here; module ""RooErrorHandler.h"" { header ""RooErrorHandler.h"" export * }; ^; Error: /build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/bin/rootcling: compilation failure (/build/jenkins/workspace/root-nightly-runtime-cxxmodules/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/lib/libRooFitCorecbd7d3c40e_dictUmbrella.h); make[2]: *** [roofit/roofitcore/G__RooFitCore.cxx] Error 1; ```. This patch adds the header to the modulemap which prevents us from; trying to merge this struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1020:75,message,message,75,https://root.cern,https://github.com/root-project/root/pull/1020,1,['message'],['message']
Integrability,"We currently get the error below from stdlib.h as we have problems merging; these special declarations with GCC annotations. We can't add stdlib.h to; the normal libc module as this would cause a dependency cycle between the; builtin modules of clang and libc, but having this as a standalone module; seems to work for me. ```; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:8: error: reference to 'lldiv_t' is ambiguous; extern lldiv_t lldiv (long long int __numer,; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; /usr/include/stdlib.h:81:5: note: candidate found by name lookup is 'lldiv_t'; } lldiv_t;; ^; In file included from input_line_12:18:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/BasicFunctionGradient.h:13:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/MnMatrix.h:31:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/LASymMatrix.h:24:; In file included from /home/teemperor/root/dbg-build/include/Minuit2/StackAllocator.h:28:; In file included from /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/7.2.0/../../../../include/c++/7.2.0/cstdlib:75:; In file included from /home/teemperor/root/dbg-build/etc/cling/lib/clang/5.0.0/include/stdlib.h:8:; /usr/include/stdlib.h:742:16: error: functions that differ only in their return type cannot be overloaded; extern lldiv_t lldiv (lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1231:196,depend,dependency,196,https://root.cern,https://github.com/root-project/root/pull/1231,1,['depend'],['dependency']
Integrability,"We currently have two ODR errors when using modules. One is when; using setjmp, the other is coming from TException. This patch; makes TException non-textual and moves it to the config module; to prevent cyclic dependencies. We also add setjmp to the; modulemap to fix the ODR errors on the setjmp struct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/876:211,depend,dependencies,211,https://root.cern,https://github.com/root-project/root/pull/876,1,['depend'],['dependencies']
Integrability,"We deferred the evaluation of dependent immediate invocations in https://reviews.llvm.org/D119375 until instantiation. We should also not consider them referenced from a non-consteval context. Fixes: https://github.com/llvm/llvm-project/issues/55601. ```; template<typename T>; class Bar {; consteval static T x() { return 5; }; public:; Bar() : a(x()) {}. private:; int a;; };. Bar<int> g();; ```; Is now accepted by clang. Previously it errored with: `cannot take address of consteval function 'x' outside of an immediate invocation Bar() : a(x()) {}`. Differential Revision: https://reviews.llvm.org/D132031. ---. Fixes https://github.com/root-project/root/issues/13698, a problem with the new C++ headers from the new macOS SDK.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13700:30,depend,dependent,30,https://root.cern,https://github.com/root-project/root/pull/13700,1,['depend'],['dependent']
Integrability,We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:; ```; ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':; creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14121:488,message,message,488,https://root.cern,https://github.com/root-project/root/issues/14121,1,['message'],['message']
Integrability,"We do not need to install rdict here, because it is already installed.; Also this FIXME doesn't work as the list of pcms change; depending on which -D option that you give to cmake.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3228:129,depend,depending,129,https://root.cern,https://github.com/root-project/root/pull/3228,1,['depend'],['depending']
Integrability,"We get these symbols even for a simple hello world message. While it is not clear if we can skip all weak undefined symbols, we can certainly skip those which get resolved to libgcj.so and libitm.so. Oddly enough gcc emits a weak undefined symbol to _Jv_RegisterClasses (resolved in libgcj.so) which is some gcc/java library. _ITM_deregisterTMCloneTable and _ITM_registerTMCloneTable are emitted because (resolved in libitm.so) of pointer arithmetics for transactional memory support. The current understanding is that we can safely omit these when harvesting library dependencies. This should fix the rootbench builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4254:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/4254,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2154:466,depend,dependency,466,https://root.cern,https://github.com/root-project/root/pull/2154,2,['depend'],"['dependency', 'depending']"
Integrability,"We had test failures in runtime nightlies such as this one:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/95/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/junit/projectroot.roottest.root.math/smatrix/roottest_root_math_smatrix_testKalman/; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/lastCompletedBuild/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/. Failures were due to what @pcanal commented in #2135, that some so files in; roottest doesn't have external linkage. (It means that if you call; dlopen(libfoo.so), linux kernel can't find dependency libraries and it; emits ""undefined symbol"" error when they try to initialize global; variables in libfoo.so but couldn't find symbol definition); With pch, rootmap files were providing information about the depending library. However we stopped generating rootmap files in #2127 and that's why we; got these failures. To fix this issue, I implemented a callback to; TCling which gets called when DynamicLibraryManager fails with; ""undefined error"". I'm open to suggestion especially in DynamicLibraryManager.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:708,depend,dependency,708,https://root.cern,https://github.com/root-project/root/pull/2148,2,['depend'],"['dependency', 'depending']"
Integrability,We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:169,depend,depends,169,https://root.cern,https://github.com/root-project/root/pull/3747,1,['depend'],['depends']
Integrability,We need to set ROOT_MODULES to DEBUG when we want rootcling to; create C++ modules. For this we wrap all rootcling invocations; in cmake wrappers that set this environment variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/944:96,wrap,wrap,96,https://root.cern,https://github.com/root-project/root/pull/944,2,['wrap'],"['wrap', 'wrappers']"
Integrability,"We renamed the class of the numpy wrapper object to numpy.array so that; the wrapping is hidden from the user. However, this breaks pickling of; the object since the class name does not match the name of the true; class. Removing the renaming solves the issue. Now, the returned array; is not called numpy.array but ndarray. This PR fixes current and experimental PyROOT. @etejedor @maxgalli I think this is a feasible solution since the name of the class is anyway only visible in the `__repr__` representation and numpy.array is as good as ndarray since both indicate to the user that the object behaves like a numpy array. Jira ticket can be found here: https://sft.its.cern.ch/jira/browse/ROOT-10268",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4197:34,wrap,wrapper,34,https://root.cern,https://github.com/root-project/root/pull/4197,2,['wrap'],"['wrapper', 'wrapping']"
Integrability,We replace it with a combination of a global property and an additional custom target.; The global property is used to collect the dependencies created before the modules.idx target is created.; The custom target is used as a direct dependency of the custom_command (add_dependencies can not be used on the target of a custom_command). Then we can use; this custom target to collect the dependencies created after the modules.idx target. This fixes #10510. To test:. ```; ls -rtl lib/modules.idx lib/libEve.so; rm lib/*Eve*; ninja # or make or cmake --build ; this should update modules.idx; ls -rtl lib/modules.idx lib/libEve.so; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11506:131,depend,dependencies,131,https://root.cern,https://github.com/root-project/root/pull/11506,3,['depend'],"['dependencies', 'dependency']"
Integrability,We should provide tutorials that show how to perform NN and BDT inference with TMVA's experimental interfaces (SOFIE and the fast BDT inference engine).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9242:99,interface,interfaces,99,https://root.cern,https://github.com/root-project/root/issues/9242,1,['interface'],['interfaces']
Integrability,"We use a conformant BLAS implementation to satisfy the cblas; dependencies of MathMore coming from GSL in preference to GSL's provided; libgslcblas. GSL explicitly makes this possible by segregating its BLAS; implementation, and by not having an explicit link from libgsl.so to; libgslcblas.so. Allowing a non-GSL BLAS enables:. 1. the use of (much) more efficient implementations by mathmore / GSL; functions;. 2. consistency with other uses of BLAS within ROOT (e.g. TMVA).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6950:62,depend,dependencies,62,https://root.cern,https://github.com/root-project/root/pull/6950,1,['depend'],['dependencies']
Integrability,"We use the target clingInterpreter in a few places as a general dependency rule making sure the cling infrastructure is already built. In some cases, such as clad, the highly parallel builds trigger build of clad before clangSema, clangBasic and clangAST are built. This patch ensures the right dependencies are in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2858:64,depend,dependency,64,https://root.cern,https://github.com/root-project/root/pull/2858,2,['depend'],"['dependencies', 'dependency']"
Integrability,"We were trying to collect the owning modules of every deserialized; decl. Later, we loaded the corresponding library. This is too; much because for some entities (such as forward declarations) we; load the shared object file in vain because no CodeGen is; required.; ; This patch relies on the ASTReader to decide if a decl needs to; be CodeGenned or not. If it requires an action from CodeGen the; ASTReader passes it through the HandleInterestingDecl interface.; ; This patch brings back to normal the amount of loaded libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2006:453,interface,interface,453,https://root.cern,https://github.com/root-project/root/pull/2006,1,['interface'],['interface']
Integrability,WebEve: Add interface for custom GUI in REveManger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4103:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/4103,1,['interface'],['interface']
Integrability,Weird messages from TInterpreter::AutoParse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8904:6,message,messages,6,https://root.cern,https://github.com/root-project/root/issues/8904,1,['message'],['messages']
Integrability,"Welcome to this year's fun exercise of upgrading LLVM! :partying_face: . Dependent changes that must land before merging this PR:; * [x] https://github.com/root-project/root/pull/13243; * [x] https://github.com/root-project/root/pull/13269 (to support LLVM 16, cf. https://github.com/vgvassilev/clad/pull/589); * [x] https://github.com/root-project/root/pull/13238; * [x] https://github.com/root-project/root/pull/13310; * [x] https://github.com/root-project/roottest/pull/989; * [x] https://github.com/root-project/root/pull/13335; * [x] https://github.com/root-project/roottest/pull/994; * [x] https://github.com/root-project/root/pull/13366; * [x] https://github.com/root-project/root/pull/13448; * [x] https://github.com/root-project/root/pull/13477; * [x] https://github.com/root-project/root/pull/13482; * [x] https://github.com/root-project/root/pull/13782 and / or https://github.com/root-project/root/pull/13785; * [x] https://github.com/root-project/root/pull/13565 (or at least the last commit to remove `isInstantiatedInPCH`); * [x] https://github.com/root-project/root/pull/14110. Things to check:; * [x] Builds on all platforms; * [x] Passes all ROOT tests on all platforms; * [x] Passes Cling test suite (at least on Linux); * [x] Check increase in resource consumption:; * [x] Build directory in `Release` configuration; * [x] Install directory in `Release` configuration; * [x] Size of module files in particular; * [x] Memory requirement; * [x] CPU requirement (time to run all tests). #### Comparison of resource consumption on AlmaLinux 8, GCC 8.5.0, `CMAKE_BUILD_TYPE=Release`. | | `master` | `llvm16` |; | --- | --- | --- |; | `build` (slightly older version) | 1706284 KB = 1.7 GB | 1766156 KB = 1.7 GB |; | `build` (with `testing` + `roottest`, before `ctest`) | 2286436 KB = 2.2 GB | 2366928 KB = 2.3 GB |; | `install` | 704236 KB = 688 MB | 701032 KB = 685 MB |; | `lib/*.pcm` | 312624 KB = 306 MB | 309560 = 303 MB |; | Memory for `./bin/root.exe -q` | 204020 kbytes | 21467",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13273:73,Depend,Dependent,73,https://root.cern,https://github.com/root-project/root/pull/13273,1,['Depend'],['Dependent']
Integrability,"Well-known branch names, e.g. `master` or `v6-28-00-patches` always use the equivalent upstream roottest branch. However, we should be careful not to match a substring. Concretely, before this patch, `master-14449` was incorrectly taken as a well-known branch causing the error below.; ```; Cloning into 'roottest'...; fatal: Remote branch master-13449 not found in upstream origin; CMake Error at CMakeLists.txt:780 (message): Expected roottest at 'C:/ROOT-CI/src/roottest' (not a directory?); ```. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13504:418,message,message,418,https://root.cern,https://github.com/root-project/root/pull/13504,1,['message'],['message']
Integrability,"When Davix is not builtin to ROOT, it's not necessary to propagate link dependencies on Libxml2 and OpenSSL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2343:72,depend,dependencies,72,https://root.cern,https://github.com/root-project/root/pull/2343,1,['depend'],['dependencies']
Integrability,"When MathMore compiled, rootfit uses includes from MathMore; To do this, roofit has to depend on `MathMore`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439:87,depend,depend,87,https://root.cern,https://github.com/root-project/root/pull/5439,1,['depend'],['depend']
Integrability,"When RooWorkspaces that contain a RooStats::ModelConfig are cloned, the ModelConfig did not get updated. With current RooFit, this is impossible because of a circular dependency. The ModelConfig would therefore still point to the original workspace. By introducing an abstract interface, the circular dependency is broken such that this updating works now. **Question for reviewers**; Currently, the abstract interface does not have Type/Streamer info such that root complains:; `Warning in <TStreamerInfo::Build>: RooStats::ModelConfig: base class RooWorkspaceHandle has no streamer or dictionary it will not be saved`; How can this be silenced? Since the interface is abstract, no I/O is needed, maybe not even type info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3222:167,depend,dependency,167,https://root.cern,https://github.com/root-project/root/pull/3222,5,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"When TCanvas created with TWebCanvas, it will be marked as batch; This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2805:155,interface,interface,155,https://root.cern,https://github.com/root-project/root/pull/2805,1,['interface'],['interface']
Integrability,"When a dependent module has NO_CXXMODULE specified, we do not generate it's .pcm file. . This commit ensures CMake checks for NO_CXXMODULE property for a dependancy. Also specify NO_CXXMODULE for Tree on Windows. @vgvassilev @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5798:7,depend,dependent,7,https://root.cern,https://github.com/root-project/root/pull/5798,2,['depend'],"['dependancy', 'dependent']"
Integrability,"When a root is not found in a given interval, an error message is produced written some information in the standard output. This is now fixed and the ROOT error message reporting system is now used, so the message can in case be suppressed. ; Thanks for the user that reported in https://root-forum.cern.ch/t/turn-off-error-messages-from-tf1-getx/38175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5076:55,message,message,55,https://root.cern,https://github.com/root-project/root/pull/5076,4,['message'],"['message', 'messages-from-']"
Integrability,"When a simultaneous pdf is composed by a not-extended pdf and an extended pdf, RooSimultaneous::extendMode() returns ; `MustBeExtended` or ` CanNotBeExtended` depending on the initial category value. . See example and report on ; https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6894:159,depend,depending,159,https://root.cern,https://github.com/root-project/root/issues/6894,1,['depend'],['depending']
Integrability,"When building ROOT's libGFAL using gfal2, srm-ifce is not a build dependency",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6233:66,depend,dependency,66,https://root.cern,https://github.com/root-project/root/pull/6233,1,['depend'],['dependency']
Integrability,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770:530,depend,dependency,530,https://root.cern,https://github.com/root-project/root/issues/12770,2,['depend'],"['dependency', 'dependent']"
Integrability,"When building with CMSSW, root was being in an infinite loop when; parsing this forward declaration at TCling::RegisterModule:; `namespace reco{namespace btau{enum __attribute__((annotate(\""$clingAutoload$DataFormats/BTauReco/interface/TaggingVariable.h\""))) TaggingVariableName : unsigned int;}}`. This patch fixes the bug which nsPos was always the size of namespace; name (4, in this case)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3186:226,interface,interface,226,https://root.cern,https://github.com/root-project/root/pull/3186,1,['interface'],['interface']
Integrability,When calling Minimize the global prnit level is synchronized to the local one and; then re-set to its original value. This PR replaces #2305,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5128:48,synchroniz,synchronized,48,https://root.cern,https://github.com/root-project/root/pull/5128,1,['synchroniz'],['synchronized']
Integrability,"When calling ROOT_EXECUTABLE from outside of ROOT (e.g. roottest), the; dependency on move_headers, which only works in the project ROOT,; must be ignored.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4367:72,depend,dependency,72,https://root.cern,https://github.com/root-project/root/pull/4367,1,['depend'],['dependency']
Integrability,"When cmake flag `-Ddev=ON` specified, R__LESS_INCLUDES macro is defined. It can be used in different places to reduce/remove includes and replace them by forward declarations - if necessary. Old includes can remain for a while - otherwise lot of user codes can be broken suddenly. Code example:; ```; #ifdef R__LESS_INCLUDES; class TBranch;; class TBuffer;; class TList;; #else; #include ""TBranch.h""; #include ""TBuffer.h""; #include ""TList.h""; #endif; ```. Main changes:; * Classes `TBuffer` and `TDatime` not used in TDirectory.h, can be removed; * Also TList.h can be replaced by forward declarations in TDirectory.h; * Several includes in TClass.h are not used, but lot of code depends on it; * In TTree.h includes TBranch.h, TList.h, TBuffer.h replaced by forward declarations. Main advantage - one really see which includes are really required and not relies on the fact, that some basic includes like TSystem.h or TDirectory.h provides includes for different containers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123:680,depend,depends,680,https://root.cern,https://github.com/root-project/root/pull/5123,1,['depend'],['depends']
Integrability,"When compiled in with '-Ddev=ON', warning becomes errors. ```; In member function ‘std::string TMVA::Experimental::SOFIE::ROperator_Gemm<T>::Generate(std::string)’:; tmva/sofie/inc/TMVA/ROperator_Gemm.hxxROperator_Gemm.hxx:211:16: error: there are no arguments to ‘assert’ that depend on a template parameter, so a declaration of ‘assert’ must be available [-fpermissive]; 211 | assert(length == ConvertShapeToLength(fShapeC));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9341:278,depend,depend,278,https://root.cern,https://github.com/root-project/root/pull/9341,1,['depend'],['depend']
Integrability,"When generating such a pdf from prototype data, the prototype needs to; contain all the subcategories of the super-category, and it does so by; checking the super-category servers. However, recently; `RooSuperCategory` was changed to contain a `RooMultiCategory`; internally, and the only reported direct server is the internal; multi-category. This leads to a wrong generation (the prototype data is; ignored, the gen context refers to the current labels). The solution that this commit suggests is to use; `RooSuperCategory::inputCatList()` to inspect the internal categories; instead of using the client-server interface. Actually, the; client-server interface is not meant to be used for inspection like; that, just for general dependency management in the evaluation. Closes https://github.com/root-project/root/issues/12020.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12022:614,interface,interface,614,https://root.cern,https://github.com/root-project/root/pull/12022,3,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree ; do not import any data and make an empty dataset. ; This avoid importing the variables using the current values, which will be identical for every event.; This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7347:382,message,message,382,https://root.cern,https://github.com/root-project/root/pull/7347,1,['message'],['message']
Integrability,"When injecting symbols, do not rely on the last Module:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:5,inject,injecting,5,https://root.cern,https://github.com/root-project/root/pull/7506,2,['inject'],['injecting']
Integrability,"When integrating a region next to a narrow Crystal Ball shape, the integral; can evaluate to zero. Since RooFit cannot deal with zero integrals,; the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4000:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/4000,1,['integrat'],['integrating']
Integrability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:5,integrat,integrating,5,https://root.cern,https://github.com/root-project/root/pull/16099,2,['integrat'],"['integrating', 'integration']"
Integrability,"When linking against gtest/gmock, the include directories are not added; to the newly created targets. This adds INTERFACE includes to these; targets, so includes for all subsequent targets will fall into place. @reikdas This hopefully fixes the problem that you were seeing in `roottest`. Can you try to rebase on this branch, and test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5366:113,INTERFACE,INTERFACE,113,https://root.cern,https://github.com/root-project/root/pull/5366,1,['INTERFACE'],['INTERFACE']
Integrability,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12537:150,depend,depending,150,https://root.cern,https://github.com/root-project/root/issues/12537,1,['depend'],['depending']
Integrability,"When passing `-DPYTHON_EXECUTABLE=/my/path/to/python2` on macOS ROOT fails to configure with newer CMake versions with a bizarre error of:; ```; -- Preferring Python version 3; -- Found Python: /Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python2.7 (found version ""2.7.15"") found components: Interpreter Development; -- Could NOT find Python (missing: Development) (found version ""2.7.15""); -- Looking for OpenGL; -- Could NOT find OpenGL (missing: OPENGL_gl_LIBRARY OPENGL_INCLUDE_DIR); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:610 (message):; OpenGL package (with GLU) not found and opengl option required; Call Stack (most recent call first):; CMakeLists.txt:167 (include); ```; Looking at the variables I see a weird mixture of python 2 and python 3:; ```; //; PYTHON_EXECUTABLE-CACHED:STRING=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python. // Path to a program.; Python_EXECUTABLE:FILEPATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python2.7. // Path to a file.; Python_INCLUDE_DIR:PATH=/usr/local/Cellar/python/3.7.6/Frameworks/Python.framework/Versions/3.7/include/python3.7m. // Path to a library.; Python_LIBRARY_DEBUG:FILEPATH=Python_LIBRARY_DEBUG-NOTFOUND. // Path to a library.; Python_LIBRARY_RELEASE:FILEPATH=/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/libpython3.7m.dylib. // Path to a file.; Python_NumPy_INCLUDE_DIR:PATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/lib/python2.7/site-packages/numpy/core/include; ```; This PR includes one way of fixing the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4832:767,message,message,767,https://root.cern,https://github.com/root-project/root/pull/4832,1,['message'],['message']
Integrability,"When running ccmake in a root build directory, I noticed that some variable descriptions are empty (usually one sees a one-line description stemming from cmake/modules/RootBuildOptions.cmake). This happens when their value is forced in cmake/modules/SearchInstalledSoftware.cmake. This also affects the comments in builddir/CMakeCache.txt. I claim that when forcing these variables' values, the comment is even more important than when they remain at their defaults or user-set values. In the below patch, I basically ran an editor macro retaining the values of `${opt}_description` (as set by `ROOT_BUILD_OPTION`) and adds a very brief explanation of why the value got changed (usually by inspecting the immediate control flow and/or echoing the status message that is print out anyway). The comments are sometimes sub-optimal (when values are forced to the value that the user has set themselves anyway), but … I guess it's still nice to point out ""you had no choice here"". Unrelated to the main part:. `tmva-cuda` is force set, but nowhere else used, I suspect this should've been `tmva-gpu`. In one place I replaced; ```; if (something); else(); code; ```; by; ```; if (NOT something); code; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2056:754,message,message,754,https://root.cern,https://github.com/root-project/root/pull/2056,1,['message'],['message']
Integrability,When testing #6385 I've had issues with the linking order of the LLVM libs due to CMake not knowing about their dependencies. I don't have a log or reproducer to hand but this patch was enough to fix it:. https://github.com/chrisburr/root-feedstock/blob/4dff10152d66bd0e873b60150e72cf0f9bfa8c19/recipe/patches/0001-Use-find_package-for-llvm-clang.patch. The `get_directory_property` call was also an issue. That patch contains the values copied from a build with `builtin_llvm=ON`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7176:112,depend,dependencies,112,https://root.cern,https://github.com/root-project/root/issues/7176,1,['depend'],['dependencies']
Integrability,"When the `SplitRange` command arguemnt is used in; `RooAbsPdf::createNLL`, the actual range names used for the fit depend on the channel, with the range names suffixed by the category name. This should be considered correctly in the overlap checks. Closes #11396.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11401:115,depend,depend,115,https://root.cern,https://github.com/root-project/root/pull/11401,1,['depend'],['depend']
Integrability,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8011:154,message,message,154,https://root.cern,https://github.com/root-project/root/issues/8011,1,['message'],['message']
Integrability,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:265,integrat,integration,265,https://root.cern,https://github.com/root-project/root/pull/10995,1,['integrat'],['integration']
Integrability,"When unloading a 'compiled' TClass, TClass sets the state of the TClass to the most information possible. This usually means setting the ClassInfo if the interpreter information is still known about the class. In the case of std::tuple is order to do that we need to generate code that depends on other types (that may also be unloaded), so skip that steps (which lead to 'compilation error' from the interpreter in the report cases (and a crash due to a couple of others issues solved also in this PR).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12568:286,depend,depends,286,https://root.cern,https://github.com/root-project/root/pull/12568,1,['depend'],['depends']
Integrability,"When user invoke `InsertPointBefore(0, x, y)` with an empty TGraph (fNpoints==0), they will receive a message: . > Error in <TGraph::TGraph>: Inserted point index should be <= -1. This is confusing. The point index can not be -1. It also prevents insertion to an empty graph. People who familiar with `std::vector` may expect the behavior likes `vec.insert(vec.end(), value)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5149:102,message,message,102,https://root.cern,https://github.com/root-project/root/pull/5149,1,['message'],['message']
Integrability,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:109,integrat,integration,109,https://root.cern,https://github.com/root-project/root/issues/10763,3,['integrat'],['integration']
Integrability,"When using `builtin_openssl=ON`, CMake erroneously exports the builtin static libraries in `ROOTConfig-targets.cmake`, which causes problems with dependent projects. In order to avoid this, we need `Net` and `RHTTP` to use SSL as a private dependency. Since CMake requires `target_link_libraries()`; to either be all-plain (as before) or all-keyword (required to allow `PRIVATE` linking), we need to move the build system to use all-keyword linking only. Fixes: [ROOT-9532](https://sft.its.cern.ch/jira/browse/ROOT-9532).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2323:146,depend,dependent,146,https://root.cern,https://github.com/root-project/root/pull/2323,2,['depend'],"['dependency', 'dependent']"
Integrability,When using in TMVA Variable Array (via DataLoader::AddVariableArray) in DataSetFactory::BuildEventVector ; add a check that the data collection (in the TTree) have a size at least large as requested.; If size is smaller add a Fatal message; If size is larger add the first time a warning message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6372:232,message,message,232,https://root.cern,https://github.com/root-project/root/pull/6372,2,['message'],['message']
Integrability,"When using source bilds, all necessary source includes; will be provided via dependencies. When using installed root,; anyway ${CMAKE_BINARY_DIR}/include has to be used. Reduce usage of `find_package(ROOT)` method. ; If was misused to produce variables like `ROOT_asimage_FOUND` or `ROOT_vc_FOUND`; Now only kept at the place where it can be really used outside ROOT.; Plus two historical files in `test/` and `tutorials/` are mostly unchanged while too many such variables are used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5577:77,depend,dependencies,77,https://root.cern,https://github.com/root-project/root/pull/5577,1,['depend'],['dependencies']
Integrability,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684:31,integrat,integrate,31,https://root.cern,https://github.com/root-project/root/issues/10684,1,['integrat'],['integrate']
Integrability,When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3965:99,Depend,Depends,99,https://root.cern,https://github.com/root-project/root/pull/3965,1,['Depend'],['Depends']
Integrability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:303,depend,depending,303,https://root.cern,https://github.com/root-project/root/pull/14105,1,['depend'],['depending']
Integrability,When xmin=xmax or ymin=ymax the transformed min max are Nan and this causes the; routine to find the triangles to hang forever.; Now in this case and when also no trisangles are found the default zero value is always return. Update also the documentation of the class and of TGraphDelaunay2D. This Pull request fixes #10266,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10276:81,rout,routine,81,https://root.cern,https://github.com/root-project/root/pull/10276,1,['rout'],['routine']
Integrability,"While TBuffer has many virtual methods, provide `override` and `final` specifiers for all derived classes. This will help to maintain code in the future - any bogus changes in TBuffer class interface will be reported already during compilation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4239:190,interface,interface,190,https://root.cern,https://github.com/root-project/root/pull/4239,1,['interface'],['interface']
Integrability,"While debugging a fitting the console gets clogged by a lot of messages of calling constructors and destructors of TFoamVect. I set the debug level needed to 5 for the messages to appear, and leaving the more important ones (like errors) as they were, in debug level 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6835:63,message,messages,63,https://root.cern,https://github.com/root-project/root/pull/6835,2,['message'],['messages']
Integrability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:606,depend,depends,606,https://root.cern,https://github.com/root-project/root/issues/11955,1,['depend'],['depends']
Integrability,"While parsing LateParsedTemplates, Clang assumes that the Global DeclID matches; with the Local DeclID of a Decl. This is not the case when we have multiple; dependent modules , each having their own LateParsedTemplate section. In such a; case, a Local/Global DeclID confusion occurs which leads to improper casting of; FunctionDecl's. This commit creates a Vector to map the LateParsedTemplate section of each; Module with their module file and therefore resolving the Global/Local DeclID; confusion. Reviewed By: rsmith. Differential Revision: https://reviews.llvm.org/D86514. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307:158,depend,dependent,158,https://root.cern,https://github.com/root-project/root/pull/6307,1,['depend'],['dependent']
Integrability,"While preparing another PR, I noticed various flaws with the RooLagrangianMorphFunc that need to be fixed by someone who is more familiar with this class, like @rahulgrit:. - [x] There are [unused free functions](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L645) only in the `.cxx` source (e.g. `get()`, the other overload of `get()`, and `addCouplings()`). If they are unused in the remaining file and not part of the public interface, why not remove them?; - [x] There is an [unreachable code branch here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L1905). The `setup()` function is called in the class constructor when `_diagrams` is still empty. So the `diagrams.size() > 0` check will never be true and the if-block can be removed, no?; - [x] The [`_nonInterferig`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/inc/RooLagrangianMorphFunc.h#L266) data member is used in a few member functions, but it is never filled so always an empty vector. How meaningful is that? Can `_nonInterfering` be removed? ; - [x] It's annoying to have all these explicit usage of `this`, just to access a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:510,interface,interface,510,https://root.cern,https://github.com/root-project/root/issues/9845,1,['interface'],['interface']
Integrability,"While testing my packages which use PyROOT, I stumbled across a little problem with ROOT and pytest which I propose to fix. Assume you have this very minimal (basically empty) python package:; ```; .; ├── setup.py; └── tests; └── test_test.py. 1 directory, 2 files; ```; Content of `setup.py`:; ```python; from setuptools import setup, find_packages. setup(; name=""root_cleanup_test"",; packages=find_packages(),; setup_requires=[""pytest-runner""],; test_suite=""tests"",; ); ```; Content of `test_test.py`; ```; import unittest; import ROOT. class TestTest(unittest.TestCase):; def test_test(self):; pass; ```. Now if you run the tests with `python setup.py pytest` which gives you the warning and error I attach to the bottom of this post. I think this is maybe related to some multithreading in the pytest runner. When you run the test alone with `pytest tests/test_test.py`, you won't get the error. My setup: ROOT 6.16/00 and Python 3.7. Let me know if I can do anything else to test this! It would be great if pytest works smoothly with ROOT. ````; ========== warnings summary ==========; /usr/lib/python3.7/site-packages/ROOT.py:98: DeprecationWarning: invalid escape sequence \S; message='class \S* already in TClassTable$' ). -- Docs: https://docs.pytest.org/en/latest/warnings.html; ========== 1 passed, 1 warnings in 0.41 seconds ==========; Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/usr/lib/python3.7/site-packages/ROOT.py"", line 782, in cleanup; facade = sys.modules[ __name__ ]; KeyError: ""ROOT""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3595:1184,message,message,1184,https://root.cern,https://github.com/root-project/root/pull/3595,1,['message'],['message']
Integrability,Windows CMake project cannot find_library() after integrating with ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:50,integrat,integrating,50,https://root.cern,https://github.com/root-project/root/issues/15727,1,['integrat'],['integrating']
Integrability,"With Davix not present on the machine, the tutorials tutorials/v7/ntuple/ntpl004_dimuon.C is ran and fails:; ```; ""tutorial-v7-ntuple-ntpl004_dimuon"" start time: Dec 04 11:53 CST; Output:; ----------------------------------------------------------. Processing /home/pcanal/root_working/code/root/tutorials/v7/ntuple/ntpl004_dimuon.C...; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot find plugin handler for RRawFileDavix; CMake Error at /home/pcanal/root_working/build/master-opt/RootTestDriver.cmake:237 (message):; error code: Child aborted. <end of output>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6916:544,message,message,544,https://root.cern,https://github.com/root-project/root/issues/6916,1,['message'],['message']
Integrability,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12826:108,interface,interface,108,https://root.cern,https://github.com/root-project/root/pull/12826,5,"['depend', 'interface']","['dependents', 'depends', 'interface']"
Integrability,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16241:94,synchroniz,synchronization,94,https://root.cern,https://github.com/root-project/root/issues/16241,1,['synchroniz'],['synchronization']
Integrability,"With a file has several cluster range but has fAutoFlush set to a negative value: eg. t->Print(""clusters"");; ******************************************************************************; *Tree :t : t *; *Entries : 1000 : Total = 424803 bytes File Size = 33982 *; * : : Tree compression factor = 12.78 *; ******************************************************************************; Cluster Range # Entry Start Last Entry Size; 0 0 49 10; ….; 18 900 949 10; 19 950 999 -2000000. TClusterIterator was not estimate correctly the cluster size of the last range.; This resulted in some circumstances to message like:. Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=900 fEntryCurrent=950 fNextClusterStart=956 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two; Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=950 fEntryCurrent=950 fNextClusterStart=953 but fCurrentEntry should not be in between the two. A work-around is to increase the TTreeCacheSize to be large enough that it would contains; all the entries of the last range. See https://root-forum.cern.ch/t/ttreecache-fillbuffer-error-with-root-6-14-04/30914; the same problem was also reported by CMS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2741:602,message,message,602,https://root.cern,https://github.com/root-project/root/pull/2741,1,['message'],['message']
Integrability,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:141,inject,injecting,141,https://root.cern,https://github.com/root-project/root/pull/7506,1,['inject'],['injecting']
Integrability,"With master (commit 7f3f3428e4d20) (but has been present for a long time), PyROOT overload resolution of function that takes an enum class is unstable (it appears to depend on the value rather than the type). With the test file below compiled by ACLiC (for example) running the script:; ```python; import ROOT. ROOT.gSystem.Load(""enums_cxx""). h = ROOT.Holder(); for i in range(10, 0, -1):; h.SetTwo(i); ROOT.to_string(h.two); ```; gives; ```txt; Calling to_string for enum EOne with 0; Calling to_string for enum EOne with 1; ...; ```. I.e. even-though the argument is an 'enum ETwo', the overload take an `enum EOne` actually called. In the original example (requires the code for Celeritas and VecGeom to build). For a similar script:; ```python; for i in range(0, 14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:166,depend,depend,166,https://root.cern,https://github.com/root-project/root/issues/7077,1,['depend'],['depend']
Integrability,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343:843,synchroniz,synchronizing,843,https://root.cern,https://github.com/root-project/root/pull/16343,2,"['depend', 'synchroniz']","['depend', 'synchronizing']"
Integrability,"With this PR, the normalization integrals are placed as separate objects in the serialized computation graph for the RooFitDriver. This is done by modifying the RooFit computation graph, injecting a `RooNormalizedPdf` on top of every normalized pdf where the normalization is done instead of doing it hardcoded in the `computeBatch` function for each pdf. These changes make all the stressRooFit unit tests pass with the `CPU` and `CUDA` batch mode, so stressRooFit runs with these instances are added as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9956:187,inject,injecting,187,https://root.cern,https://github.com/root-project/root/pull/9956,1,['inject'],['injecting']
Integrability,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:218,interface,interface,218,https://root.cern,https://github.com/root-project/root/pull/15939,3,['interface'],['interface']
Integrability,"With this change, the method invocation request is received directly from civetweb server thread. The changes are executed through REveManager thread execution thread that processes. The REveManger::DoRedraw() method bacame depreciated. It is now possible to apply changes without a client interface after the connection is created. This example is implemented in autoplay of events in tutorials/eve7/event_demo.C. Other changes:; * Fix memory leaks in the client; * Reduce calls of TSystem::ProcessLine; * Add structure to transfer server messages to client log (REveLog).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8114:290,interface,interface,290,https://root.cern,https://github.com/root-project/root/pull/8114,2,"['interface', 'message']","['interface', 'messages']"
Integrability,With this only core/imt is missing dependency tracking (on MacOS).; See https://sft.its.cern.ch/jira/browse/ROOT-9066,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1198:35,depend,dependency,35,https://root.cern,https://github.com/root-project/root/pull/1198,1,['depend'],['dependency']
Integrability,With this patch we can finally do `make -j200`! (And I no longer have to explain to the summer students why they have to type `make Cling; make` to compile root :) ). We also get the module dependencies for rootcling right. See the specific commits for the individual fixes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/752:190,depend,dependencies,190,https://root.cern,https://github.com/root-project/root/pull/752,1,['depend'],['dependencies']
Integrability,With this patch we create chains with kWithoutGlobalRegistration in; RDF's constructors -- this is the chain object that RDF uses for; single-thread runs and to look up which branches exist and other; information about the input dataset. The deregistration of that chain from the global lists can take; some time in certain cases. This PR depends (and is based) on #11321 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11322:339,depend,depends,339,https://root.cern,https://github.com/root-project/root/pull/11322,1,['depend'],['depends']
Integrability,"With very few entries passing a given RDataFrame cutflow, it can happen; that a TBB task ends up processing zero ""good"" entries.; In that scenario, it could happen that the first TTree header flushed to; the output file from a Snapshot action was for a tree with no entries and; no branches. This effectively set the number of branches to; zero for all the content written to file, even if following buffers; contained well-formed TTrees. With this commit, if the output tree contains zero entries, we avoid; flushing it to file. And since the next task will remove this TTree from; the output directory, we can be sure that the buffer with the malformed; TTree will never be written out. This fixes ROOT-9471. <hr>. The fix requires that output trees are deregistered from output directories at the end of a task, so that the output directory does not ever try to flush them. This is done by giving `SnapshotHelperMT` ownership of its output trees (see explanation in the relevant commit message).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2197:989,message,message,989,https://root.cern,https://github.com/root-project/root/pull/2197,1,['message'],['message']
Integrability,"Without this dependency, a change to one of `LinkDef{1,2,3}.h` will; not trigger the regeneration of the `G__Core.cxx` dictionary, since; only the main `LinkDef.h` header was explicily listed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1374:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/1374,1,['depend'],['dependency']
Integrability,"Without this, dependencies specified in ROOT_LINKER_LIBRARY() get; dropped without any warning, leading to underlinking in external; projects that make use of ROOT CMake macros (including roottest). Fixes: [ROOT-9827](https://sft.its.cern.ch/jira/browse/ROOT-9827)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3050:14,depend,dependencies,14,https://root.cern,https://github.com/root-project/root/pull/3050,1,['depend'],['dependencies']
Integrability,"Work in progress to fully generalize gradient interfaces, in order to allow vectorization and parallelization of the fitting methods that make use of them. The implementation of Chi2 gradient has been parallelized and vectorized: these new implementations are unit tested and benchmarked against the simple scalar serial case. To do: test the general use case, where the user simply calls the fitting method specifying that the gradient should be used. Early reviews are more than welcome!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/793,1,['interface'],['interfaces']
Integrability,"Wrap owning pointers in the RooFit tutorials in `std::unique_ptr`. This has three benefits:. 1. Less memory leaks in tutorials (`delete` was almost never done); 2. Tutorials would also run if the `RooFit::OwningPtr` were to be defined at `std::unique_ptr`, which is useful for debug builds; 3. Users learn about automatic memory management correctly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12927:0,Wrap,Wrap,0,https://root.cern,https://github.com/root-project/root/pull/12927,1,['Wrap'],['Wrap']
Integrability,Wrongly printing root CLI help message when using pyROOT with '-h' or '--help' in sys.argv,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:31,message,message,31,https://root.cern,https://github.com/root-project/root/issues/7161,1,['message'],['message']
Integrability,"[ 47%] Built target rootcling_stage1; Scanning dependencies of target G__Core; [ 47%] Generating G__Core.cxx, ../lib/libCore.rootmap, ../lib/Core.pcm; Error in <CheckModuleValid>: Couldn't find module with name 'Core' in modulemap!; core/CMakeFiles/G__Core.dir/build.make:453: recipe for target 'core/G__Core.cxx' failed; make[2]: *** [core/G__Core.cxx] Error 1; CMakeFiles/Makefile2:15584: recipe for target 'core/CMakeFiles/G__Core.dir/all' failed; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; Makefile:151: recipe for target 'all' failed; make: *** [all] Error 2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3577:47,depend,dependencies,47,https://root.cern,https://github.com/root-project/root/pull/3577,1,['depend'],['dependencies']
Integrability,[BOT] Fix clang-format-bot message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/448:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/448,1,['message'],['message']
Integrability,[BOT] Minor improvements to clang-format-bot error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/437:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/437,1,['message'],['message']
Integrability,[BUILD] Add libVecOps to the dependencies of libTreePlayer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1888:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/pull/1888,1,['depend'],['dependencies']
Integrability,[CMake] Add interface includes for gtest and gmock targets.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5366:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/5366,1,['interface'],['interface']
Integrability,[CMake] CMake dependency on Python: use targets,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15145:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/15145,1,['depend'],['dependency']
Integrability,[CMake] Protect move_headers dependency when not configuring ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4367:29,depend,dependency,29,https://root.cern,https://github.com/root-project/root/pull/4367,1,['depend'],['dependency']
Integrability,[CMake] Start migrating strong dependencies outside SearchInstalledSoftware and deprecate 'python' option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/4945,1,['depend'],['dependencies']
Integrability,"[Cling] Improve help message for .x, allow macros with main.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4244:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/4244,1,['message'],['message']
Integrability,[Cling][cpt] Fix Cling CI by removing svn dependence and dropping Python 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7229:42,depend,dependence,42,https://root.cern,https://github.com/root-project/root/pull/7229,1,['depend'],['dependence']
Integrability,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3697:64,message,messages,64,https://root.cern,https://github.com/root-project/root/pull/3697,1,['message'],['messages']
Integrability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:327,integrat,integrating,327,https://root.cern,https://github.com/root-project/root/pull/16814,1,['integrat'],['integrating']
Integrability,"[DF] Add """" around unknown column names in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11772:49,message,message,49,https://root.cern,https://github.com/root-project/root/pull/11772,1,['message'],['message']
Integrability,"[DF] Add RJittedAction, a wrapper around jitted RActions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2398:26,wrap,wrapper,26,https://root.cern,https://github.com/root-project/root/pull/2398,1,['wrap'],['wrapper']
Integrability,[DF] Add fwd decls of critical routines in RInterface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3146:31,rout,routines,31,https://root.cern,https://github.com/root-project/root/pull/3146,1,['rout'],['routines']
Integrability,[DF] Avoid public dependency of RDataFrame on `nlohmann::json`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14043:18,depend,dependency,18,https://root.cern,https://github.com/root-project/root/pull/14043,1,['depend'],['dependency']
Integrability,[DF] Better error message for Vary+Fill+no Reset method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10549:18,message,message,18,https://root.cern,https://github.com/root-project/root/pull/10549,1,['message'],['message']
Integrability,[DF] Better error message in case of empty input TTree for Snapshot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6603:18,message,message,18,https://root.cern,https://github.com/root-project/root/pull/6603,1,['message'],['message']
Integrability,[DF] Fix custom actions depending on RDF+RDataSource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3559:24,depend,depending,24,https://root.cern,https://github.com/root-project/root/pull/3559,1,['depend'],['depending']
Integrability,[DF] Improve RDisplay documentation and reduce size of its public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2868:66,interface,interface,66,https://root.cern,https://github.com/root-project/root/pull/2868,1,['interface'],['interface']
Integrability,[DF] Minor improvement to a log message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11340:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/11340,1,['message'],['message']
Integrability,[DF] Print info message if RDisplay::Print is omitting some columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5984:16,message,message,16,https://root.cern,https://github.com/root-project/root/pull/5984,1,['message'],['message']
Integrability,[DF] Provide a more useful error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9858:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/9858,1,['message'],['message']
Integrability,[DF] Remove obsolete part from error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2253:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/2253,2,['message'],['message']
Integrability,[DF] Support rdfslot_ and rdfentry_ as well as avoid duplication of routines to check implicit columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2658:68,rout,routines,68,https://root.cern,https://github.com/root-project/root/pull/2658,1,['rout'],['routines']
Integrability,[DF] Try making some RDF error messages more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5861:31,message,messages,31,https://root.cern,https://github.com/root-project/root/pull/5861,1,['message'],['messages']
Integrability,[DF] Turn hard dependency on Davix into a plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5032:15,depend,dependency,15,https://root.cern,https://github.com/root-project/root/pull/5032,1,['depend'],['dependency']
Integrability,[DF] Use TLeaf::GetFullName in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7931:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/7931,1,['message'],['message']
Integrability,[DF] Use human readable type names in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2144:44,message,message,44,https://root.cern,https://github.com/root-project/root/pull/2144,2,['message'],['message']
Integrability,[DF] Veto tutorials depending on davix when it is not present,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7355:20,depend,depending,20,https://root.cern,https://github.com/root-project/root/pull/7355,1,['depend'],['depending']
Integrability,[DF][ROOT-10045] Fix custom actions depending on RDF+RDataSource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3565:36,depend,depending,36,https://root.cern,https://github.com/root-project/root/pull/3565,1,['depend'],['depending']
Integrability,[DF][ROOT-10063] Unify internal jitting interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3642:40,interface,interfaces,40,https://root.cern,https://github.com/root-project/root/pull/3642,1,['interface'],['interfaces']
Integrability,"[EDIT]: 2017-07-20 dropped commit (6953483). See the commit messages for detailed descriptions of the changes. In essence, when comparing some data with the KolmogorovTest an infinite loop was triggered. (bba95dd) We want to get an approximate solution to the test despite there being some bins with neg. content; (06024c8) To prevent the infinite loop in other cases, calling FillRandom with a histogram with negative content is now an error.; (6953483) The caching inside GetRandom can violate an invariant of the function. (Always return NaN when there is a bin with neg. content in the source histogram). [EDIT] Removed after discussion with Lorenzo. The recomputation of the integral here was deemed too expensive as the function is intended to be called in tight loops. Since these changes might have far reaching effects I am up for discussion whether any commits should be dropped. A reproducer in can be found [here](https://gist.github.com/ashlaban/05552ab5f5a7aa05e9c9b73229b2dba4).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/705:60,message,messages,60,https://root.cern,https://github.com/root-project/root/pull/705,1,['message'],['messages']
Integrability,[Experimental PyROOT] Add numpy array interface to STL vector and RVec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2468:38,interface,interface,38,https://root.cern,https://github.com/root-project/root/pull/2468,1,['interface'],['interface']
Integrability,[GSOC][TMVA][SOFIE] Some error messages and spelling mistakes fixed related to operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10435:31,message,messages,31,https://root.cern,https://github.com/root-project/root/pull/10435,1,['message'],['messages']
Integrability,[GSoC][TMVA] PyTorch Interface TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:21,Interface,Interface,21,https://root.cern,https://github.com/root-project/root/pull/5757,1,['Interface'],['Interface']
Integrability,[GUI] Silence TGFileDialog error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865:33,message,messages,33,https://root.cern,https://github.com/root-project/root/pull/14865,1,['message'],['messages']
Integrability,[IO] Backport hashing of StreamerInfos before injecting them in the type system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2179:46,inject,injecting,46,https://root.cern,https://github.com/root-project/root/pull/2179,1,['inject'],['injecting']
Integrability,[IO] Fix formatting of message for 32 bits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3679:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/3679,1,['message'],['message']
Integrability,[IO] Improve error message when no TFile::Open for remote files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11719:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/11719,1,['message'],['message']
Integrability,[JupyROOT] 6.22: Rescue lost JavaScript code injected by JupyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7215:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/7215,1,['inject'],['injected']
Integrability,[JupyROOT] Add header with license message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6202:35,message,message,35,https://root.cern,https://github.com/root-project/root/pull/6202,1,['message'],['message']
Integrability,[Math] Do not modify dbg message if never printed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14946:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/14946,1,['message'],['message']
Integrability,[MetaSema/TApplication] outdated .help message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10065:39,message,message,39,https://root.cern,https://github.com/root-project/root/issues/10065,1,['message'],['message']
Integrability,[Metacling] Integrate cppyy patch for lambdas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:12,Integrat,Integrate,12,https://root.cern,https://github.com/root-project/root/pull/5541,1,['Integrat'],['Integrate']
Integrability,[Minuit2] Add interface to pass initial values/cov matrix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:14,interface,interface,14,https://root.cern,https://github.com/root-project/root/pull/16437,1,['interface'],['interface']
Integrability,[Modulariz] Adding missing dependency MathCore for FFTW library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2409:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/2409,1,['depend'],['dependency']
Integrability,[NFC] Add missing word in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5153:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/5153,1,['message'],['message']
Integrability,[NFC] Clarification of error message in case of root7 option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3678:29,message,message,29,https://root.cern,https://github.com/root-project/root/pull/3678,1,['message'],['message']
Integrability,[NFC][DF] Fix error message in Vary,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10619:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/10619,1,['message'],['message']
Integrability,[PyROOT Exp] Use cppyy directly instead of TPython interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3217:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/3217,2,['interface'],['interface']
Integrability,[PyROOT exp] Acquire GIL in CppCallable wrapper code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3710:40,wrap,wrapper,40,https://root.cern,https://github.com/root-project/root/pull/3710,1,['wrap'],['wrapper']
Integrability,[PyROOT exp] Add 64bit long types to array interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3670:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/3670,1,['interface'],['interface']
Integrability,[PyROOT] Add numpy array interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1753:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1753,1,['interface'],['interface']
Integrability,[PyROOT] Add numpy array interface to TVec and STL vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1871,1,['interface'],['interface']
Integrability,[PyROOT] Add tutorials for array interface and TTree.AsMatrix features,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1889:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/1889,1,['interface'],['interface']
Integrability,[PyROOT] Fix array interface for empty arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3535:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/3535,1,['interface'],['interface']
Integrability,[PyROOT] Fix lazy array interface pythonization for Python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3170:24,interface,interface,24,https://root.cern,https://github.com/root-project/root/pull/3170,1,['interface'],['interface']
Integrability,[PyROOT] Fix numpy array interface for long types on 32bit systems,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1925:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1925,1,['interface'],['interface']
Integrability,[PyROOT] Improve handling of array interface if ROOT is not imported,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3192:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/3192,1,['interface'],['interface']
Integrability,[PyROOT] Integrate JsMVA into PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:9,Integrat,Integrate,9,https://root.cern,https://github.com/root-project/root/pull/15402,1,['Integrat'],['Integrate']
Integrability,[PyROOT] Make array interface pythonizations lazy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3158:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/3158,1,['interface'],['interface']
Integrability,[PyROOT] Print meaningful error message when user pythonizor fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9729:32,message,message,32,https://root.cern,https://github.com/root-project/root/pull/9729,1,['message'],['message']
Integrability,[PyROOT] Produce a more meaningful error message in addressof,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9075:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/9075,1,['message'],['message']
Integrability,[PyROOT] Provide an explanatory error message when pickling cross-inh…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/8476,1,['message'],['message']
Integrability,[PyROOT] Remove JupyROOT welcome message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14661:33,message,message,33,https://root.cern,https://github.com/root-project/root/pull/14661,1,['message'],['message']
Integrability,[PyROOT][ROOT-10109] Inject missing overloads in TH2 and more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4895:21,Inject,Inject,21,https://root.cern,https://github.com/root-project/root/pull/4895,1,['Inject'],['Inject']
Integrability,[PyROOT][ROOT-7983] Inject missing overloads for createHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4916:20,Inject,Inject,20,https://root.cern,https://github.com/root-project/root/pull/4916,1,['Inject'],['Inject']
Integrability,[PyROOT][WIP] Add numpy array interface (with py3 support),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777:30,interface,interface,30,https://root.cern,https://github.com/root-project/root/pull/1777,1,['interface'],['interface']
Integrability,[RDF] Fix a dependency issue for an RDF test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5716,1,['depend'],['dependency']
Integrability,[RDF] Fix a dependency issue for an RDF test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5695:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5695,2,['depend'],['dependency']
Integrability,[RDF] Fix inconsistency in RDF::Snapshot interfaces for jitted calls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2088:41,interface,interfaces,41,https://root.cern,https://github.com/root-project/root/pull/2088,1,['interface'],['interfaces']
Integrability,[RDF] Move dictionary generation into RDF test to fix dependency issues.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5748:54,depend,dependency,54,https://root.cern,https://github.com/root-project/root/pull/5748,2,['depend'],['dependency']
Integrability,"[RDF] Re-enable all of dataframe_{cache,simple,interface}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:47,interface,interface,47,https://root.cern,https://github.com/root-project/root/pull/2066,2,['interface'],['interface']
Integrability,"[RDF] Re-enable dataframe_{interface,simple}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2083:27,interface,interface,27,https://root.cern,https://github.com/root-project/root/pull/2083,2,['interface'],['interface']
Integrability,[REve] RenderCore integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7185:18,integrat,integration,18,https://root.cern,https://github.com/root-project/root/pull/7185,1,['integrat'],['integration']
Integrability,[RF] Add a C/C++ function wrapper class in roofit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12050:26,wrap,wrapper,26,https://root.cern,https://github.com/root-project/root/pull/12050,1,['wrap'],['wrapper']
Integrability,[RF] Add back dependency of testHistFactory on RooFitCommon,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11394:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/11394,1,['depend'],['dependency']
Integrability,[RF] Add initial interface and implementation for code-squashing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12529:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/12529,1,['interface'],['interface']
Integrability,[RF] Add initial minimizer interface for RooFuncWrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12381:27,interface,interface,27,https://root.cern,https://github.com/root-project/root/pull/12381,1,['interface'],['interface']
Integrability,[RF] Add missing Smatrix dependency for RooFitCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5437:25,depend,dependency,25,https://root.cern,https://github.com/root-project/root/pull/5437,1,['depend'],['dependency']
Integrability,[RF] Add more functional-style getValue interface to RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6615:40,interface,interface,40,https://root.cern,https://github.com/root-project/root/pull/6615,1,['interface'],['interface']
Integrability,[RF] Add the initial integration of AD to RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11773:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/11773,1,['integrat'],['integration']
Integrability,[RF] Add tutorials for RooLagrangianMorphFunc and fix factory interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/9680,1,['interface'],['interface']
Integrability,[RF] Added interface changes for TestStatatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11549,1,['interface'],['interface']
Integrability,[RF] Added interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11577,2,['interface'],['interface']
Integrability,[RF] Analytical integration for RooNDKeysPdf with custom range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8019:16,integrat,integration,16,https://root.cern,https://github.com/root-project/root/pull/8019,1,['integrat'],['integration']
Integrability,[RF] Attempt to integrate xRooFit into RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11499:16,integrat,integrate,16,https://root.cern,https://github.com/root-project/root/pull/11499,1,['integrat'],['integrate']
Integrability,[RF] Avoid `nlohmann_json` as a public dependency of RooFit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14266:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/14266,1,['depend'],['dependency']
Integrability,[RF] Avoid any dependencies of RooFitHS3 for dictionary generation and update HistFactory::JSONTool interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10082:15,depend,dependencies,15,https://root.cern,https://github.com/root-project/root/pull/10082,2,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,[RF] Avoid compile time dependency of RooFit on RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16606:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/16606,1,['depend'],['dependency']
Integrability,[RF] Avoid overhead of tracking evaluation error messages when not needed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12328:49,message,messages,49,https://root.cern,https://github.com/root-project/root/pull/12328,1,['message'],['messages']
Integrability,[RF] Backport in 6.26 a fix suppressing a RooFit Warning message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10235:57,message,message,57,https://root.cern,https://github.com/root-project/root/pull/10235,1,['message'],['message']
Integrability,[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:29,message,messages,29,https://root.cern,https://github.com/root-project/root/issues/9489,1,['message'],['messages']
Integrability,[RF] Change number of contour points in RooMinimizer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3327:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/3327,1,['interface'],['interface']
Integrability,[RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15247:48,interface,interface,48,https://root.cern,https://github.com/root-project/root/pull/15247,1,['interface'],['interface']
Integrability,[RF] Consider rangeName for integration in RooParamHistFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7198:28,integrat,integration,28,https://root.cern,https://github.com/root-project/root/pull/7198,1,['integrat'],['integration']
Integrability,[RF] Continue new batch interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6650:24,interface,interface,24,https://root.cern,https://github.com/root-project/root/pull/6650,1,['interface'],['interface']
Integrability,[RF] Correct RooPoisson integral if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11697:36,integrat,integrated,36,https://root.cern,https://github.com/root-project/root/pull/11697,1,['integrat'],['integrated']
Integrability,[RF] Correctly forward integrator config in RooImproperIntegrator1D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:23,integrat,integrator,23,https://root.cern,https://github.com/root-project/root/pull/11074,1,['integrat'],['integrator']
Integrability,[RF] Declare dependency of RooFitHS3 on nlohmann-json in CMakeLists.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9382:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/9382,1,['depend'],['dependency']
Integrability,[RF] Deprecate HistFactory-internal fitting and plotting routine,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16336:57,rout,routine,57,https://root.cern,https://github.com/root-project/root/pull/16336,1,['rout'],['routine']
Integrability,"[RF] Deprecate RooMinuit class (adapter between RooFit and minuit, got replaced by the more general RooMinimizer)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8609:32,adapter,adapter,32,https://root.cern,https://github.com/root-project/root/pull/8609,1,['adapter'],['adapter']
Integrability,[RF] Deprecate legacy interface of RooAbsArg,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16430:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/16430,1,['interface'],['interface']
Integrability,"[RF] Documentation updates, improvement of warning and error messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5315:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/5315,1,['message'],['messages']
Integrability,[RF] Don't have RooFitCuda as dependency for RooFitCore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13417:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/13417,1,['depend'],['dependency']
Integrability,[RF] Enable analytic integration of RooHistPdfs with RooLinearVars,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12482:21,integrat,integration,21,https://root.cern,https://github.com/root-project/root/pull/12482,1,['integrat'],['integration']
Integrability,[RF] Explicitly forbid integration of a `RooAbsRealLValue`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:23,integrat,integration,23,https://root.cern,https://github.com/root-project/root/pull/11162,1,['integrat'],['integration']
Integrability,[RF] Fix imt and VDT dependency for roofit BatchCompute library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9441:21,depend,dependency,21,https://root.cern,https://github.com/root-project/root/pull/9441,1,['depend'],['dependency']
Integrability,[RF] Fix the integration of a cloned RooParamHistFunc with range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:13,integrat,integration,13,https://root.cern,https://github.com/root-project/root/pull/7478,2,['integrat'],['integration']
Integrability,[RF] General interface to evaluate RooFit pdfs on the GPU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13389:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/13389,1,['interface'],['interface']
Integrability,[RF] Generalize `RooIntegrator1D` to n dimensions and merge with other Romberg integrator classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:79,integrat,integrator,79,https://root.cern,https://github.com/root-project/root/pull/13384,1,['integrat'],['integrator']
Integrability,[RF] Helper functions for bin integration for simultaneous fits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9358:30,integrat,integration,30,https://root.cern,https://github.com/root-project/root/pull/9358,1,['integrat'],['integration']
Integrability,[RF] Implement proper factory interface for RooLagrangianMorphFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11899:30,interface,interface,30,https://root.cern,https://github.com/root-project/root/pull/11899,1,['interface'],['interface']
Integrability,[RF] Improve `MarkovChain` interfaces and `MCMCInterval`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334:27,interface,interfaces,27,https://root.cern,https://github.com/root-project/root/pull/16334,1,['interface'],['interfaces']
Integrability,[RF] Improve `RooNumIntFactory` plugin system and remove RooIntegratorBinding from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13350:90,interface,interface,90,https://root.cern,https://github.com/root-project/root/pull/13350,1,['interface'],['interface']
Integrability,[RF] Improve documentation and interfaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4875:31,interface,interfaces,31,https://root.cern,https://github.com/root-project/root/pull/4875,1,['interface'],['interfaces']
Integrability,[RF] Improve interface of RooArgSet / RooArgList,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6300:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/6300,1,['interface'],['interface']
Integrability,[RF] Improve interface of RooArgSet/RooArgList,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6542:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/6542,1,['interface'],['interface']
Integrability,[RF] Improve passing `nullptr` to RooFit message logger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10546:41,message,message,41,https://root.cern,https://github.com/root-project/root/pull/10546,1,['message'],['message']
Integrability,[RF] Improving the interface to the batch mode in `RooAbsPdf::fitTo` and `RooAbsPdf::createNLL`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9420:19,interface,interface,19,https://root.cern,https://github.com/root-project/root/pull/9420,1,['interface'],['interface']
Integrability,[RF] Make RooRealIntegral conform with the client-server interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11129:57,interface,interface,57,https://root.cern,https://github.com/root-project/root/pull/11129,1,['interface'],['interface']
Integrability,[RF] Make headers of integrator implementations private,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12146:21,integrat,integrator,21,https://root.cern,https://github.com/root-project/root/pull/12146,1,['integrat'],['integrator']
Integrability,[RF] Make integrator replaceable from outside for bin sampling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6921:10,integrat,integrator,10,https://root.cern,https://github.com/root-project/root/pull/6921,1,['integrat'],['integrator']
Integrability,[RF] Minor RooFit interface updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9337:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/9337,1,['interface'],['interface']
Integrability,[RF] Minor interface changes for TestStatistics classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:11,interface,interface,11,https://root.cern,https://github.com/root-project/root/pull/11906,1,['interface'],['interface']
Integrability,[RF] Move Roo(Abs)MinimizerFcn out of public RooFit interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9874:52,interface,interfaces,52,https://root.cern,https://github.com/root-project/root/pull/9874,1,['interface'],['interfaces']
Integrability,[RF] Move internal enums of RooResolutionModels out of public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14056:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/14056,1,['interface'],['interface']
Integrability,[RF] New `EvalBackend()` command argument and reword interfaces and docs for `RooAbsPdf::createNLL()` and `fitTo()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:53,interface,interfaces,53,https://root.cern,https://github.com/root-project/root/pull/12716,1,['interface'],['interfaces']
Integrability,[RF] New `RooFit::Owner` pointer wrapper to flag owning return values,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9392:33,wrap,wrapper,33,https://root.cern,https://github.com/root-project/root/pull/9392,1,['wrap'],['wrapper']
Integrability,[RF] Purge old batch interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:21,interface,interface,21,https://root.cern,https://github.com/root-project/root/pull/6841,1,['interface'],['interface']
Integrability,[RF] Refactor fitting interface to unify code path for NLL and chi-square fits,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14336:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/14336,1,['interface'],['interface']
Integrability,[RF] Remove RooAbsNumGenerator classes from the public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11905:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/11905,1,['interface'],['interface']
Integrability,[RF] Remove RooRealMPFE from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16346:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/16346,1,['interface'],['interface']
Integrability,"[RF] Remove `add(row, weight, weightError)` from RooAbsData interface",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12479:60,interface,interface,60,https://root.cern,https://github.com/root-project/root/pull/12479,1,['interface'],['interface']
Integrability,[RF] Remove details of likelihood minimization from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9871:59,interface,interface,59,https://root.cern,https://github.com/root-project/root/pull/9871,1,['interface'],['interface']
Integrability,[RF] Remove integration code from RooEffProd,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10100:12,integrat,integration,12,https://root.cern,https://github.com/root-project/root/pull/10100,1,['integrat'],['integration']
Integrability,[RF] Remove some more classes from the public RooFit interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12800:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/12800,1,['interface'],['interface']
Integrability,[RF] RooFit should give an error message when using different variables with same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417:33,message,message,33,https://root.cern,https://github.com/root-project/root/issues/7417,1,['message'],['message']
Integrability,[RF] RooHypatia2 Analytical integral integration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254:37,integrat,integration,37,https://root.cern,https://github.com/root-project/root/issues/7254,1,['integrat'],['integration']
Integrability,[RF] RooTruthModel analytical integrals for general integration ranges,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14021:52,integrat,integration,52,https://root.cern,https://github.com/root-project/root/pull/14021,1,['integrat'],['integration']
Integrability,[RF] Synchronize param settings in RooMinimizer when returning function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10643:5,Synchroniz,Synchronize,5,https://root.cern,https://github.com/root-project/root/pull/10643,1,['Synchroniz'],['Synchronize']
Integrability,[RF] Tell CMake that `rf409_NumPyPandasToRooFit.py` depends on NumPy/Pandas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9373:52,depend,depends,52,https://root.cern,https://github.com/root-project/root/pull/9373,1,['depend'],['depends']
Integrability,[RF] Use local message level changes in stressRooFit to silence tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8611:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/8611,1,['message'],['message']
Integrability,[RF] Values of RooProdPdfs in a RooAbsPdf should not depend on its factors `normRange()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11486:53,depend,depend,53,https://root.cern,https://github.com/root-project/root/issues/11486,1,['depend'],['depend']
Integrability,[RF] Vectorize `RooAbsBinning` interface for bin index lookups,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11151:31,interface,interface,31,https://root.cern,https://github.com/root-project/root/pull/11151,1,['interface'],['interface']
Integrability,[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8427:13,message,message,13,https://root.cern,https://github.com/root-project/root/pull/8427,1,['message'],['message']
Integrability,[RF] Wrap RooAbsReal pointer key in RunContext data maps in new class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590:5,Wrap,Wrap,5,https://root.cern,https://github.com/root-project/root/pull/8590,1,['Wrap'],['Wrap']
Integrability,[RF] Wrong analytic integrals when using Gaussians with sigma depending on the observable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14320:62,depend,depending,62,https://root.cern,https://github.com/root-project/root/issues/14320,1,['depend'],['depending']
Integrability,[RF] Wrong integral for RooPoisson if integrated from a > 0 to infinity,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10868:38,integrat,integrated,38,https://root.cern,https://github.com/root-project/root/issues/10868,1,['integrat'],['integrated']
Integrability,[RF] compiler-dependent RooNaNPacker tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15908:14,depend,dependent,14,https://root.cern,https://github.com/root-project/root/pull/15908,1,['depend'],['dependent']
Integrability,[RF] factory interface for RooLagrangianMorphFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444:13,interface,interface,13,https://root.cern,https://github.com/root-project/root/pull/9444,1,['interface'],['interface']
Integrability,[RF] xRooFit: avoid having headers depending on preprocessor defines and other fixups,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11932:35,depend,depending,35,https://root.cern,https://github.com/root-project/root/pull/11932,1,['depend'],['depending']
Integrability,[RF][CMake] Use PUBLIC (not INTERFACE) for adding `res` to include dirs - Backport,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15675:28,INTERFACE,INTERFACE,28,https://root.cern,https://github.com/root-project/root/pull/15675,1,['INTERFACE'],['INTERFACE']
Integrability,[RF][Docs] Breaking changes of batch computation interface not documented in release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:49,interface,interface,49,https://root.cern,https://github.com/root-project/root/issues/7454,1,['interface'],['interface']
Integrability,[ROOT-10472] Add missing dependencies for coreclingutilstestUnit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4702:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/4702,1,['depend'],['dependencies']
Integrability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:634,message,message,634,https://root.cern,https://github.com/root-project/root/pull/5062,1,['message'],['message']
Integrability,[ROOT-10797] Seg fault and misleading error messages if system header files are missing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:44,message,messages,44,https://root.cern,https://github.com/root-project/root/issues/14571,1,['message'],['messages']
Integrability,[ROOT-10909] Add TMVA python dependencies to the requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14553:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/issues/14553,1,['depend'],['dependencies']
Integrability,"[ROOT-10987] When a PDF doesn't implement the faster batch interface,; RooFit's old, single-value computations have to be used as a fallback.; If RooFit, however, tries to precalculate those values, the nodes of; the computation graph will always yield the same wrong value, since; they are switched to ""always clean"".; This happens e.g. when a node of the graph doesn't depend on parameters,; but only on observables. To fix this, the global static that inihibits ""always clean"" has to be; set while the computation is running. (cherry picked from commit 47da6c180b7edd69dcb309fe06197cc50ffc538f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6183:59,interface,interface,59,https://root.cern,https://github.com/root-project/root/pull/6183,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"[ROOT-9518] The analytical integral of RooPoisson was interpolating between the points of the; discrete CDF. The CDF, however, is shifted by 1 such that asking for CDF_Pois(x=0, mu=1); yields 0. [ROOT-5333] Further, giving a range with an upper limit larger than max int (variables without; ranges will default to 1.E30) will overflow an integer and yield NaN. Now, max int will be used; as end of the integration range, yielding an integral of 1 in such cases. For an unlimited range,; the integral will always be 1. The CDF obtained with these changes is now discrete.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3326:402,integrat,integration,402,https://root.cern,https://github.com/root-project/root/pull/3326,1,['integrat'],['integration']
Integrability,[ROOT-9829] Make Jupyter server listen on all interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3037:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/3037,1,['interface'],['interfaces']
Integrability,[ROOT-9829] Make Jupyter server listen on all interfaces (Port 6.16),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3052:46,interface,interfaces,46,https://root.cern,https://github.com/root-project/root/pull/3052,1,['interface'],['interfaces']
Integrability,[ROOT-9876] Fix crash introduced by the lazy array interface if cppyy…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3188:51,interface,interface,51,https://root.cern,https://github.com/root-project/root/pull/3188,1,['interface'],['interface']
Integrability,[RVec] Improve error message in case of out-of-bounds access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11771:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/11771,1,['message'],['message']
Integrability,[TBranch][NFC] More expressive error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3167:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/3167,1,['message'],['message']
Integrability,[TDF] Integrate TVec with TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1676:6,Integrat,Integrate,6,https://root.cern,https://github.com/root-project/root/pull/1676,1,['Integrat'],['Integrate']
Integrability,[TDF] Make an error message slightly more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/984:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/984,1,['message'],['message']
Integrability,[TDF] Make error message more helpful,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1009:17,message,message,17,https://root.cern,https://github.com/root-project/root/pull/1009,1,['message'],['message']
Integrability,[TDF] Misc fixes for the documentation and interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1482:43,interface,interface,43,https://root.cern,https://github.com/root-project/root/pull/1482,1,['interface'],['interface']
Integrability,"[TDF][TO REVERT] Disable dataframe_{interface,simple} tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1906:36,interface,interface,36,https://root.cern,https://github.com/root-project/root/pull/1906,2,['interface'],['interface']
Integrability,[TDF][VecOps] Improve integration of VecOps and TDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1679:22,integrat,integration,22,https://root.cern,https://github.com/root-project/root/pull/1679,1,['integrat'],['integration']
Integrability,[TMVA experimental] Add iterator interface to RTensor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3995:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/3995,1,['interface'],['interface']
Integrability,[TMVA experimental] Add new reader interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4027:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/4027,1,['interface'],['interface']
Integrability,[TMVA experimental] Use http protocol to fetch model file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4589:29,protocol,protocol,29,https://root.cern,https://github.com/root-project/root/pull/4589,1,['protocol'],['protocol']
Integrability,[TMVA] Add `data()` interface to buffers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16515:20,interface,interface,20,https://root.cern,https://github.com/root-project/root/pull/16515,1,['interface'],['interface']
Integrability,[TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15512:31,depend,dependencies,31,https://root.cern,https://github.com/root-project/root/pull/15512,1,['depend'],['dependencies']
Integrability,[TMVA] Enhance usability of CVResults and Envelope interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:51,interface,interfaces,51,https://root.cern,https://github.com/root-project/root/pull/1694,2,['interface'],['interfaces']
Integrability,[TMVA] Fix printout message in MethodCategory::GetMvaValue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10707:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/10707,1,['message'],['message']
Integrability,[TMVA] Remove dependency on torch.onnx submodule,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13613:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/13613,1,['depend'],['dependency']
Integrability,[TMVA] cmake status message if PyMVA is dropped due to missing numpy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/272:20,message,message,20,https://root.cern,https://github.com/root-project/root/pull/272,1,['message'],['message']
Integrability,"[TTreeProcMT] Fix missing space, add commas in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5263:53,message,message,53,https://root.cern,https://github.com/root-project/root/pull/5263,1,['message'],['message']
Integrability,[TTreeReader] Formatting and better error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6326:42,message,message,42,https://root.cern,https://github.com/root-project/root/pull/6326,1,['message'],['message']
Integrability,[TreePlayer][ROOT-9713] Remove printing of error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2811:49,message,messages,49,https://root.cern,https://github.com/root-project/root/pull/2811,1,['message'],['messages']
Integrability,[Tree] Mention branch name in TBranchElement error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5212:51,message,message,51,https://root.cern,https://github.com/root-project/root/pull/5212,1,['message'],['message']
Integrability,[Tree] Print Error message if a friend has kEntriesReshuffled set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5182:19,message,message,19,https://root.cern,https://github.com/root-project/root/pull/5182,1,['message'],['message']
Integrability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:776,interface,interface,776,https://root.cern,https://github.com/root-project/root/issues/9335,1,['interface'],['interface']
Integrability,[VecOps] Improve wording of an error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13120:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/13120,1,['message'],['message']
Integrability,[WIP] Add a wrapper around add_subdirectory.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406:12,wrap,wrapper,12,https://root.cern,https://github.com/root-project/root/pull/2406,1,['wrap'],['wrapper']
Integrability,[WIP][Proposal] Modern TMVA application interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:40,interface,interface,40,https://root.cern,https://github.com/root-project/root/pull/3321,1,['interface'],['interface']
Integrability,[WIP][PyROOT] Move interoperability functions to ROOT.Numpy namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5252:19,interoperab,interoperability,19,https://root.cern,https://github.com/root-project/root/pull/5252,1,['interoperab'],['interoperability']
Integrability,"[backport] Remove deprecated python option, added an info message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5858:58,message,message,58,https://root.cern,https://github.com/root-project/root/pull/5858,1,['message'],['message']
Integrability,[backport][632][tutorials][tmva] Fix a dependency issue with TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15631:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/15631,1,['depend'],['dependency']
Integrability,[bug][GUI]Protection against null pointer der. and better error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:64,message,messages,64,https://root.cern,https://github.com/root-project/root/pull/6714,1,['message'],['messages']
Integrability,[bug][improvement] Fix warning message in THtml,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6689:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/6689,1,['message'],['message']
Integrability,[bugfix] [core] Extend the message ID type to Long_t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/6740,1,['message'],['message']
Integrability,[ci-config] Add dependabot to update GitHub Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:16,depend,dependabot,16,https://root.cern,https://github.com/root-project/root/pull/14683,1,['depend'],['dependabot']
Integrability,[ci] Start integration for the v6-34-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16728:11,integrat,integration,11,https://root.cern,https://github.com/root-project/root/pull/16728,1,['integrat'],['integration']
Integrability,[cling-cpt] Added new dependent arguments [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10937:22,depend,dependent,22,https://root.cern,https://github.com/root-project/root/pull/10937,2,['depend'],['dependent']
Integrability,[cling] Adapt the cling-demo to the new cling::Value interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12228:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/12228,1,['interface'],['interface']
Integrability,[cling] Add a dependency on clangSema to clingInterpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2858:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/2858,1,['depend'],['dependency']
Integrability,[cling] Add interfaces that expose JIT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16537:12,interface,interfaces,12,https://root.cern,https://github.com/root-project/root/pull/16537,1,['interface'],['interfaces']
Integrability,[cling] Assert if the cling::Value is set via the wrong interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12229:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/pull/12229,1,['interface'],['interface']
Integrability,[cling] Do not inject libCling first (ROOT-10499):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:15,inject,inject,15,https://root.cern,https://github.com/root-project/root/pull/6108,1,['inject'],['inject']
Integrability,[cling] Do not wrap overloaded `operator` function declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265:15,wrap,wrap,15,https://root.cern,https://github.com/root-project/root/pull/11265,1,['wrap'],['wrap']
Integrability,[cling] Explicitly resolve symbols also from injected libs:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/6126,1,['inject'],['injected']
Integrability,[cling] Ignore -Wunused-result in wrapped code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12654:34,wrap,wrapped,34,https://root.cern,https://github.com/root-project/root/pull/12654,1,['wrap'],['wrapped']
Integrability,[cling] Inject symbols from libc_nonshared.a,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13286:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/13286,1,['Inject'],['Inject']
Integrability,[cling] New interface to export Cling run-time configuration bits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6928:12,interface,interface,12,https://root.cern,https://github.com/root-project/root/pull/6928,1,['interface'],['interface']
Integrability,[cling] Only set result type if result type is known for auto-injection,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14451:62,inject,injection,62,https://root.cern,https://github.com/root-project/root/pull/14451,1,['inject'],['injection']
Integrability,[cling] Use the dyld to show more meaningful message when a symbol is missing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606:45,message,message,45,https://root.cern,https://github.com/root-project/root/pull/6606,1,['message'],['message']
Integrability,[cling][v6-28] Ignore -Wunused-result in wrapped code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12703:41,wrap,wrapped,41,https://root.cern,https://github.com/root-project/root/pull/12703,1,['wrap'],['wrapped']
Integrability,[cmake] Add missing dependency.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3040:20,depend,dependency,20,https://root.cern,https://github.com/root-project/root/pull/3040,1,['depend'],['dependency']
Integrability,[cmake] Correct dependencies for tutorial-tmva-TMVA_SOFIE_RDataFrame-py,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16555:16,depend,dependencies,16,https://root.cern,https://github.com/root-project/root/pull/16555,1,['depend'],['dependencies']
Integrability,[cmake] Generation of RGitCommit.h depends on nothing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1741:35,depend,depends,35,https://root.cern,https://github.com/root-project/root/pull/1741,1,['depend'],['depends']
Integrability,[cmake] Inject -isysroot ${CMAKE_OSX_SYSROOT} to unuran.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2699:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/2699,1,['Inject'],['Inject']
Integrability,[cmake] Reduce the redundant dependencies to onepcm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188:29,depend,dependencies,29,https://root.cern,https://github.com/root-project/root/pull/1188,1,['depend'],['dependencies']
Integrability,[cmake] Support INTERFACE_INCLUDE_DIRECTORIES for target dependencies in ROOT_LINKER_LIBRARY,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7026:57,depend,dependencies,57,https://root.cern,https://github.com/root-project/root/pull/7026,1,['depend'],['dependencies']
Integrability,[cmake] Synchronize LLVM flags with cling flags.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/967:8,Synchroniz,Synchronize,8,https://root.cern,https://github.com/root-project/root/pull/967,1,['Synchroniz'],['Synchronize']
Integrability,[cmake] add TBB as builtin dependency for Thread library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8023:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/8023,1,['depend'],['dependency']
Integrability,[cmake] add TBB as builtin dependency for Thread library 6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8024:27,depend,dependency,27,https://root.cern,https://github.com/root-project/root/pull/8024,1,['depend'],['dependency']
Integrability,[core] Improve readbility of unit-test-support messages.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12469:47,message,messages,47,https://root.cern,https://github.com/root-project/root/pull/12469,1,['message'],['messages']
Integrability,[cxmodules] Clarify interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3456:20,interface,interfaces,20,https://root.cern,https://github.com/root-project/root/pull/3456,1,['interface'],['interfaces']
Integrability,[cxxmodules] Add bits/unique_ptr to the modulemap to untie module dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9566:66,depend,dependency,66,https://root.cern,https://github.com/root-project/root/pull/9566,1,['depend'],['dependency']
Integrability,[cxxmodules] Add dependencies to C++ modules generated by rootcling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1038:17,depend,dependencies,17,https://root.cern,https://github.com/root-project/root/pull/1038,1,['depend'],['dependencies']
Integrability,[cxxmodules] Add missing dependencies to MathCore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2506:25,depend,dependencies,25,https://root.cern,https://github.com/root-project/root/pull/2506,1,['depend'],['dependencies']
Integrability,[cxxmodules] Add missing dependency rootcling -> complexDict,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1247:25,depend,dependency,25,https://root.cern,https://github.com/root-project/root/pull/1247,1,['depend'],['dependency']
Integrability,[cxxmodules] Add missing module dependencies to test dictionaries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/914:32,depend,dependencies,32,https://root.cern,https://github.com/root-project/root/pull/914,1,['depend'],['dependencies']
Integrability,[cxxmodules] Adding missing dependency for pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1922:28,depend,dependency,28,https://root.cern,https://github.com/root-project/root/pull/1922,1,['depend'],['dependency']
Integrability,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:299,depend,dependent,299,https://root.cern,https://github.com/root-project/root/pull/7398,1,['depend'],['dependent']
Integrability,[cxxmodules] Fix nightlies by autoload dependency libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2148:39,depend,dependency,39,https://root.cern,https://github.com/root-project/root/pull/2148,1,['depend'],['dependency']
Integrability,[cxxmodules] Implement to_string interface to gInterpreter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2698:33,interface,interface,33,https://root.cern,https://github.com/root-project/root/pull/2698,1,['interface'],['interface']
Integrability,[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443:22,depend,dependent,22,https://root.cern,https://github.com/root-project/root/pull/5443,1,['depend'],['dependent']
Integrability,[cxxmodules] Load the modules using the new LoadModule interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1362:55,interface,interface,55,https://root.cern,https://github.com/root-project/root/pull/1362,1,['interface'],['interface']
Integrability,[cxxmodules] Make the ROOT modulemap only a dependency when building ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13213:44,depend,dependency,44,https://root.cern,https://github.com/root-project/root/pull/13213,1,['depend'],['dependency']
Integrability,[cxxmodules] Move all Qt header into a wrapper module to fix warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2011:39,wrap,wrapper,39,https://root.cern,https://github.com/root-project/root/pull/2011,1,['wrap'],['wrapper']
Integrability,[cxxmodules] Preload the dependent modules if specified in rootcling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5359:25,depend,dependent,25,https://root.cern,https://github.com/root-project/root/pull/5359,1,['depend'],['dependent']
Integrability,[cxxmodules] Sink the interface for loading a module in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3444:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/3444,1,['interface'],['interface']
Integrability,[cxxmodules] Teach ACLiC to work when not all dependent libs are resolved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:46,depend,dependent,46,https://root.cern,https://github.com/root-project/root/pull/4742,1,['depend'],['dependent']
Integrability,[cxxmodules] Teach cling to build modules; Build dependent modules explicitly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521:49,depend,dependent,49,https://root.cern,https://github.com/root-project/root/pull/5521,1,['depend'],['dependent']
Integrability,[cxxmodules] The bloom filter bloom size depends on the arch bitness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4116:41,depend,depends,41,https://root.cern,https://github.com/root-project/root/pull/4116,1,['depend'],['depends']
Integrability,[cxxmodules] The newly built pcm files depend on their modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4199:39,depend,depend,39,https://root.cern,https://github.com/root-project/root/pull/4199,1,['depend'],['depend']
Integrability,[df] Improve user interface in DistrRDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309:18,interface,interface,18,https://root.cern,https://github.com/root-project/root/pull/16309,1,['interface'],['interface']
Integrability,[geom] New BVH/VoxelGrid-based implementation of TGeoParallelWorld routines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:67,rout,routines,67,https://root.cern,https://github.com/root-project/root/pull/16442,1,['rout'],['routines']
Integrability,"[hist] Fit to TH2 silently ignores the `""I""` option for bin integration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11016:60,integrat,integration,60,https://root.cern,https://github.com/root-project/root/issues/11016,1,['integrat'],['integration']
Integrability,[hist] TGraphMultiErrors: needs some improvements in interface and better documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/issues/9335,1,['interface'],['interface']
Integrability,[hist][PyROOT] Pythonize the TF1 EvalPar interface for 2D NumPy arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16371:41,interface,interface,41,https://root.cern,https://github.com/root-project/root/pull/16371,1,['interface'],['interface']
Integrability,[io/ntuple] Use RRawFileTFile for non-supported protocols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14867:48,protocol,protocols,48,https://root.cern,https://github.com/root-project/root/pull/14867,1,['protocol'],['protocols']
Integrability,[io] Add error message before assert (#8387).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8461:15,message,message,15,https://root.cern,https://github.com/root-project/root/pull/8461,2,['message'],['message']
Integrability,[json] adjust char* JSON format depending on content,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6141:32,depend,depending,32,https://root.cern,https://github.com/root-project/root/pull/6141,1,['depend'],['depending']
Integrability,[lazy-builds] Add add_subdirectory wrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3409:35,wrap,wrapper,35,https://root.cern,https://github.com/root-project/root/pull/3409,1,['wrap'],['wrapper']
Integrability,[master] root cppyy changes causing issues in dependent python projects,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:46,depend,dependent,46,https://root.cern,https://github.com/root-project/root/issues/14904,1,['depend'],['dependent']
Integrability,[math] Minuit2 errors out with `Initial matrix not pos.def.` depending on which histograms were fitted before,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852:61,depend,depending,61,https://root.cern,https://github.com/root-project/root/issues/13852,1,['depend'],['depending']
Integrability,[math] [ROOT-9673] Print message only if verbosity level allows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15683:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/15683,1,['message'],['message']
Integrability,[mathcore] Delete obscure conditions in class for adaptive quadrature integration in multi-dimensions (AdaptiveIntegratorMultiDim),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11826:70,integrat,integration,70,https://root.cern,https://github.com/root-project/root/pull/11826,1,['integrat'],['integration']
Integrability,[metacling] Offer RLogger interface to trace autoparsing:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7609:26,interface,interface,26,https://root.cern,https://github.com/root-project/root/pull/7609,1,['interface'],['interface']
Integrability,[metacling] Optimize TCling*Info interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616:33,interface,interfaces,33,https://root.cern,https://github.com/root-project/root/pull/3616,1,['interface'],['interfaces']
Integrability,"[ntuple,daos] Create wrappers around backend-specific structures",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:21,wrap,wrappers,21,https://root.cern,https://github.com/root-project/root/pull/12109,1,['wrap'],['wrappers']
Integrability,[ntuple] Fix misuse of the `TVirtualCollectionProxy` iterator interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12542:62,interface,interface,62,https://root.cern,https://github.com/root-project/root/pull/12542,1,['interface'],['interface']
Integrability,[ntuple] Fix typo in exception message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12913:31,message,message,31,https://root.cern,https://github.com/root-project/root/pull/12913,1,['message'],['message']
Integrability,[ntuple] Fix-up tutorial after RFieldBase::Create() interface change,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6698:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/pull/6698,2,['interface'],['interface']
Integrability,[ntuple] Improve column casting error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227:38,message,message,38,https://root.cern,https://github.com/root-project/root/pull/8227,1,['message'],['message']
Integrability,[ntuple] Integrate RNTupleMerger into TFileMerger,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398:9,Integrat,Integrate,9,https://root.cern,https://github.com/root-project/root/pull/14398,1,['Integrat'],['Integrate']
Integrability,[ntuple] Move `SerializeXxx` routines for fundamental types to a named namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8003:29,rout,routines,29,https://root.cern,https://github.com/root-project/root/pull/8003,1,['rout'],['routines']
Integrability,[ntuple] Remove `RResult` from public importer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565:47,interface,interface,47,https://root.cern,https://github.com/root-project/root/pull/12565,1,['interface'],['interface']
Integrability,[ntuple] Remove column model wrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15991:29,wrap,wrapper,29,https://root.cern,https://github.com/root-project/root/pull/15991,1,['wrap'],['wrapper']
Integrability,[ntuple] Remove outdated test dependency on RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16292:30,depend,dependency,30,https://root.cern,https://github.com/root-project/root/pull/16292,1,['depend'],['dependency']
Integrability,"[ntuple] Several interface improvements (unique pointer, const)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6655:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/6655,1,['interface'],['interface']
Integrability,[ntuple] Support the storage of collections using the `TVirtualCollectionProxy` interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,[ntuple] Wrap RFieldBase::Create() return field in RResult,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6687:9,Wrap,Wrap,9,https://root.cern,https://github.com/root-project/root/pull/6687,1,['Wrap'],['Wrap']
Integrability,[ntuple] add RIO Dependencies for RXTuple,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15784:17,Depend,Dependencies,17,https://root.cern,https://github.com/root-project/root/pull/15784,1,['Depend'],['Dependencies']
Integrability,[ntuple] advertise RNTuple implements hadd MergeFile interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6008:53,interface,interface,53,https://root.cern,https://github.com/root-project/root/pull/6008,1,['interface'],['interface']
Integrability,[ntuple] avoid page source/sink in public reader/writer interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14521:56,interface,interface,56,https://root.cern,https://github.com/root-project/root/pull/14521,1,['interface'],['interface']
Integrability,[ntuple] clean-up dependencies of unit tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13351:18,depend,dependencies,18,https://root.cern,https://github.com/root-project/root/pull/13351,1,['depend'],['dependencies']
Integrability,[ntuple] improve RNTuple anchor interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14518:32,interface,interface,32,https://root.cern,https://github.com/root-project/root/pull/14518,1,['interface'],['interface']
Integrability,[ntuple] improve error message when writing fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15007:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/15007,1,['message'],['message']
Integrability,[ntuple] remove page source from public RNTupleDS interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14522:50,interface,interface,50,https://root.cern,https://github.com/root-project/root/pull/14522,1,['interface'],['interface']
Integrability,[ntuple] remove page source from pulic view interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14530:44,interface,interface,44,https://root.cern,https://github.com/root-project/root/pull/14530,1,['interface'],['interface']
Integrability,[ntuple] remove page source/sink from public RField interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14591:52,interface,interface,52,https://root.cern,https://github.com/root-project/root/pull/14591,1,['interface'],['interface']
Integrability,[ntuple] replace raw pointer interface RValue::Get(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14436:29,interface,interface,29,https://root.cern,https://github.com/root-project/root/pull/14436,1,['interface'],['interface']
Integrability,[ntuple] various interface improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14454:17,interface,interface,17,https://root.cern,https://github.com/root-project/root/pull/14454,1,['interface'],['interface']
Integrability,"[pr.log](https://github.com/root-project/root/files/14873477/pr.log); This pull request changes the behavior of the create and recreate functions of the `TFile` class. When a new ROOT file is created, the underlying path may not exist. This commit modifies the logic of `TFile.cxx` such that the underlying path is explicitly created. It works only if `TFile.cxx` is compiled with the C++17 standard, otherwise the relevant code is excluded by the means of the preprocessor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ## Quick test; I prepared a small program in C++ (requires C++17) to quickly test the pull request (see at the bottom of the message). In log, with the patched ROOT version the output looks like thit:; ```; Attempt to (re)createa/b/c/test.root; Ok.; ```; while with the ROOT version 6.28 the output looks like this:; ```; Attempt to (re)createa/b/c/test.root; SysError in <TFile::TFile>: file XXXXXX/ftest/XXYqNIoC/a/b/c/test.root can not be opened No such file or directory; Fail.; ```. The program:; ```c++; #include ""TFile.h""; #include <filesystem>; #include <cstdlib>; #include <iostream>; namespace fs = std::filesystem;. char tmpname[] = ""XXXXXXXX"";. char E[] = ""test.root"";; char F[] = ""a/b/c/test.root"";; char H[] = ""a/b/d/atest.root"";. void ok(char *fname); {; if (fs::exists(fs::path(fname))); std::cout << ""Ok."" << std::endl;; else; std::cout << ""Fail."" << std::endl;; }. int main(); {; char *tmpnm = mkdtemp(tmpname);; if (tmpnm == NULL) {; std::cout << ""Error while creating tmp dir"" << std::endl;; return -1;; }; const auto tmp = fs::path(tmpnm);; const auto prev = fs::current_path();. fs::current_path(tmp);; std::cout << ""Attempt to (re)create"" << E << std::endl;; TFile e(E, ""recreate""); e.Close(); ok(E);; std::cout << ""Attempt to (re)create"" << F << std::endl;; TFile f(F, ""recreate""); f.Close(); ok(F);; std::cout << ""Attempt to open"" << F << std::endl;; TFile g(F); g.Close(); ok(F);; std::cout << ""Attempt to open"" << H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15141:684,message,message,684,https://root.cern,https://github.com/root-project/root/pull/15141,1,['message'],['message']
Integrability,[pyroot exp] Integrate cppyy fix solving issues with python include p…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3415:13,Integrat,Integrate,13,https://root.cern,https://github.com/root-project/root/pull/3415,1,['Integrat'],['Integrate']
Integrability,[pyroot] Fix dependency for pyroot rtensor test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13660:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/13660,1,['depend'],['dependency']
Integrability,[qtwebdisplay] Update to new RLogger interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6942:37,interface,interface,37,https://root.cern,https://github.com/root-project/root/pull/6942,1,['interface'],['interface']
Integrability,[rbrowser] add warning message when RBrowser stared for TBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9549:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/9549,1,['message'],['message']
Integrability,"[rbrowser] add warning message when RBrowser stared for TBrowser, 6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9550:23,message,message,23,https://root.cern,https://github.com/root-project/root/pull/9550,1,['message'],['message']
Integrability,[rdf] add RIO dependency for dataframe_splitcoll_arrayview,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15820:14,depend,dependency,14,https://root.cern,https://github.com/root-project/root/pull/15820,1,['depend'],['dependency']
Integrability,[rdf] fix gcc14 warning in InterfaceUtils #16360,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16362:27,Interface,InterfaceUtils,27,https://root.cern,https://github.com/root-project/root/pull/16362,1,['Interface'],['InterfaceUtils']
Integrability,[rdf] gcc14 issue warning in `RDF/InterfaceUtils.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16360:34,Interface,InterfaceUtils,34,https://root.cern,https://github.com/root-project/root/issues/16360,1,['Interface'],['InterfaceUtils']
Integrability,[rdf] remove lambda from InterfaceUtils.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16367:25,Interface,InterfaceUtils,25,https://root.cern,https://github.com/root-project/root/pull/16367,1,['Interface'],['InterfaceUtils']
Integrability,[reve] Integrate JSROOT TGeo geometry tessellation and hierarchy browser/table in REve,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16806:7,Integrat,Integrate,7,https://root.cern,https://github.com/root-project/root/pull/16806,1,['Integrat'],['Integrate']
Integrability,[root7] Add missing cmake dependencies for ROOTHistDraw,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4428:26,depend,dependencies,26,https://root.cern,https://github.com/root-project/root/pull/4428,1,['depend'],['dependencies']
Integrability,[rootcling] Fix typo in error message.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5404:30,message,message,30,https://root.cern,https://github.com/root-project/root/pull/5404,1,['message'],['message']
Integrability,[rootcling] Provide better information about the potential missing dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5914:67,depend,dependency,67,https://root.cern,https://github.com/root-project/root/pull/5914,1,['depend'],['dependency']
Integrability,[rootcling] add extra check for MathCore dependency from Vc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7378:41,depend,dependency,41,https://root.cern,https://github.com/root-project/root/pull/7378,1,['depend'],['dependency']
Integrability,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7379:41,depend,dependency,41,https://root.cern,https://github.com/root-project/root/pull/7379,1,['depend'],['dependency']
Integrability,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3681:15,Integrat,Integration,15,https://root.cern,https://github.com/root-project/root/pull/3681,1,['Integrat'],['Integration']
Integrability,[skip-ci] adapt to changes in TBB interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7059:34,interface,interfaces,34,https://root.cern,https://github.com/root-project/root/pull/7059,1,['interface'],['interfaces']
Integrability,[skip-ci] add deprecation messages to outdated classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14754:26,message,messages,26,https://root.cern,https://github.com/root-project/root/pull/14754,1,['message'],['messages']
Integrability,[skip-ci] improve error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11235:24,message,message,24,https://root.cern,https://github.com/root-project/root/pull/11235,1,['message'],['message']
Integrability,[skip-ci] new \legacy interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9108:22,interface,interface,22,https://root.cern,https://github.com/root-project/root/pull/9108,1,['interface'],['interface']
Integrability,"[skip-ci]. Doxygen was omitting classes that are defined in a .cxx. Although their; interface might not be too relevant for users, enabling those should help; developers. See, for example [this](https://root.cern/doc/master/namespaceRooBatchCompute_1_1RF__ARCH.html); It should in theory list the classes that are used for RF computations, but these never show up in doxygen.; Instead, we only see three helper functions. (Not to worry, the docs of this library are improved more in #7451). Especially the broken link in the **See also** is a bit unfortunate:; ![image](https://user-images.githubusercontent.com/16205615/110686280-90aed880-81df-11eb-8246-7f5ffba11183.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7453:84,interface,interface,84,https://root.cern,https://github.com/root-project/root/pull/7453,1,['interface'],['interface']
Integrability,"[tcling,v6-24] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10120:57,wrap,wrappers,57,https://root.cern,https://github.com/root-project/root/pull/10120,1,['wrap'],['wrappers']
Integrability,[tcling] Do not trace weak symbols when resolving library dependencies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4230:58,depend,dependencies,58,https://root.cern,https://github.com/root-project/root/pull/4230,1,['depend'],['dependencies']
Integrability,[tcling] Refactor code in separate routines and reduce include for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:35,rout,routines,35,https://root.cern,https://github.com/root-project/root/pull/3865,1,['rout'],['routines']
Integrability,[tcling] Suppress `-Wunused-result` diagnostics in wrappers generated by TClingCallFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9244:51,wrap,wrappers,51,https://root.cern,https://github.com/root-project/root/pull/9244,1,['wrap'],['wrappers']
Integrability,[tcling] Use the right interface to make a path absolute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3813:23,interface,interface,23,https://root.cern,https://github.com/root-project/root/pull/3813,1,['interface'],['interface']
Integrability,"[test,cxxmodules] stressMathMore depends on Smatrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2358:33,depend,depends,33,https://root.cern,https://github.com/root-project/root/pull/2358,1,['depend'],['depends']
Integrability,[tmva] Fix Keras vs Pytorch tutorial dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12367:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/12367,1,['depend'],['dependency']
Integrability,[tmva] Fix dependency of libTMVA from,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13718:11,depend,dependency,11,https://root.cern,https://github.com/root-project/root/pull/13718,1,['depend'],['dependency']
Integrability,[tmva] Fix dependency of tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15493:11,depend,dependency,11,https://root.cern,https://github.com/root-project/root/pull/15493,1,['depend'],['dependency']
Integrability,[tmva] Fix the dependency of TMVA tutorials and PyMVA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12211:15,depend,dependency,15,https://root.cern,https://github.com/root-project/root/pull/12211,1,['depend'],['dependency']
Integrability,"[tmva] Impose correct test dependencies, avoid multiple invocations of Declare, avoid races when writing model files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16711:27,depend,dependencies,27,https://root.cern,https://github.com/root-project/root/pull/16711,1,['depend'],['dependencies']
Integrability,[tmva][pymva] Fix finally the PyMVA tests dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12222:42,depend,dependency,42,https://root.cern,https://github.com/root-project/root/pull/12222,1,['depend'],['dependency']
Integrability,[tmva][sofie] Fix error message in Tanh operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11030:24,message,message,24,https://root.cern,https://github.com/root-project/root/pull/11030,1,['message'],['message']
Integrability,[tmva][tutorials] Fix dependency of TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15115:22,depend,dependency,22,https://root.cern,https://github.com/root-project/root/pull/15115,1,['depend'],['dependency']
Integrability,[tree] Clarify error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13386:21,message,message,21,https://root.cern,https://github.com/root-project/root/pull/13386,1,['message'],['message']
Integrability,[tree] Fix GetTreeFullPaths in case of `protocol://`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10217:40,protocol,protocol,40,https://root.cern,https://github.com/root-project/root/pull/10217,1,['protocol'],['protocol']
Integrability,[tree] Fix GetTreeFullPaths in case of `protocol://` (v6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10218:40,protocol,protocol,40,https://root.cern,https://github.com/root-project/root/pull/10218,1,['protocol'],['protocol']
Integrability,[tree] Fix typo in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12215:25,message,message,25,https://root.cern,https://github.com/root-project/root/pull/12215,1,['message'],['message']
Integrability,[tree] Integrate rootreadspeed into ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:7,Integrat,Integrate,7,https://root.cern,https://github.com/root-project/root/pull/11102,1,['Integrat'],['Integrate']
Integrability,[tree] avoid dependency from TreePlayer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5246:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/5246,2,['depend'],['dependency']
Integrability,"[tree] major and minor indices to long64, it was forgotten to change from 32bit of old interfaces",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967:87,interface,interfaces,87,https://root.cern,https://github.com/root-project/root/pull/14967,1,['interface'],['interfaces']
Integrability,[treereader] Clearer error message in SetEntriesRange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705:27,message,message,27,https://root.cern,https://github.com/root-project/root/pull/10705,1,['message'],['message']
Integrability,[tutorials][tmva] Fix a dependency issue with TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15622:24,depend,dependency,24,https://root.cern,https://github.com/root-project/root/pull/15622,1,['depend'],['dependency']
Integrability,[v626][RF] Remove details of likelihood minimization from public interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9873:65,interface,interface,65,https://root.cern,https://github.com/root-project/root/pull/9873,1,['interface'],['interface']
Integrability,[v628][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15262:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15262,1,['interface'],['interface']
Integrability,[v630][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15261:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15261,1,['interface'],['interface']
Integrability,[v630][TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15584:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/15584,1,['depend'],['dependencies']
Integrability,[v632][RF] Comment out `ryml` backend for RooFit JSON interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15260:54,interface,interface,54,https://root.cern,https://github.com/root-project/root/pull/15260,1,['interface'],['interface']
Integrability,[v632][TMVA] Add missing TMVA python dependencies to requirements.txt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15583:37,depend,dependencies,37,https://root.cern,https://github.com/root-project/root/pull/15583,1,['depend'],['dependencies']
Integrability,[webgui] add Net to list of librariy dependency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11824:37,depend,dependency,37,https://root.cern,https://github.com/root-project/root/pull/11824,1,['depend'],['dependency']
Integrability,"[webgui] always use loopback for web widgets, adjust warning messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:61,message,messages,61,https://root.cern,https://github.com/root-project/root/pull/14119,1,['message'],['messages']
Integrability,[webgui] suppress error messages from browsers [6.32],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15358:24,message,messages,24,https://root.cern,https://github.com/root-project/root/pull/15358,1,['message'],['messages']
Integrability,[webgui] suppress log messages from chrome/firefox browsers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15357:22,message,messages,22,https://root.cern,https://github.com/root-project/root/pull/15357,1,['message'],['messages']
Integrability,[win] Fix window position & add missing dependencies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9866:40,depend,dependencies,40,https://root.cern,https://github.com/root-project/root/pull/9866,1,['depend'],['dependencies']
Integrability,[wincxxmodules] Backport D86514 - Correctly parse LateParsedTemplates in case of dependent modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6307:81,depend,dependent,81,https://root.cern,https://github.com/root-project/root/pull/6307,1,['depend'],['dependent']
Integrability,[wincxxmodules] Remove Cling as a dependency of win32gdk,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5796:34,depend,dependency,34,https://root.cern,https://github.com/root-project/root/pull/5796,1,['depend'],['dependency']
Integrability,"[x] Checked for duplicates. ### Describe the bug; Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior; ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce; Load a dynamic library with ; `gROOT->ProcessLine("".L path_to_library.dylib"")`; or equivalent. ### Setup; 1. ROOT 6.27/01; 2. macOS 11.4; 3. built from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9697:56,message,message,56,https://root.cern,https://github.com/root-project/root/issues/9697,1,['message'],['message']
Integrability,"\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4696,message,message,4696,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10769,message,message,10769,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:2417,message,message,2417,https://root.cern,https://github.com/root-project/root/pull/11153,1,['message'],['message']
Integrability,"] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:2779,integrat,integration,2779,https://root.cern,https://github.com/root-project/root/pull/12681,18,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5127,message,message,5127,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597:1503,interface,interface,1503,https://root.cern,https://github.com/root-project/root/pull/11597,5,"['depend', 'integrat', 'interface', 'wrap']","['depend', 'integration', 'interface', 'wrapper']"
Integrability,"`-Dxproofd=ON` was deprecated in ROOT 6.28 and throws an error since version 6.30. ---. Weakly depends on https://github.com/root-project/root/pull/15244 because `net/netx/CMakeLists.txt` has; ```cmake; target_include_directories(Netx PRIVATE ${CMAKE_SOURCE_DIR}/proof/proofd/inc); ```. The removal of `xpdtest` is optional, I'm not sure if it is of relevance without `xproofd`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15308:95,depend,depends,95,https://root.cern,https://github.com/root-project/root/pull/15308,1,['depend'],['depends']
Integrability,"`; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1351,message,message,1351,https://root.cern,https://github.com/root-project/root/issues/10203,1,['message'],['message']
Integrability,"`AppendImpl()` returns the number of bytes written. For collections, this accounts for the size of the written elements + one element in the index column. However, `sizeof(RColumnElement<T>)` was erroneously taken as the size of the latter. Instead, use the packed size of an element in the principal column. Note that such size may be either 64 or 32 bit, depending on whether small clusters are used. The `RNTuple.SmallClusters` test was adjusted accordingly. As side effect, this PR should fix the RNTuple.SmallClusters test on Win32 (and thus supersedes #13004). ## Changes or fixes:; - Fix return value of `AppendImpl()` for collection fields.; - Adjust RNTuple.SmallClusters; also, set the target zipped cluster size and no compression, as otherwise the estimation of the zipped cluster size hits in. ## Checklist:; - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13021:357,depend,depending,357,https://root.cern,https://github.com/root-project/root/pull/13021,1,['depend'],['depending']
Integrability,"`Count` should return the same type that we use to enumerate entries, by definition. A related PR in roottest updates `test_misc` to comply with the interface change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1046:149,interface,interface,149,https://root.cern,https://github.com/root-project/root/pull/1046,1,['interface'],['interface']
Integrability,`EnableThreadSafety()` is called in `_batchgenerator.py` making another call for it redundant and `class RBatchGenerator` depends to Internal namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14860:122,depend,depends,122,https://root.cern,https://github.com/root-project/root/pull/14860,1,['depend'],['depends']
Integrability,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6310:481,interface,interfaces,481,https://root.cern,https://github.com/root-project/root/pull/6310,2,"['integrat', 'interface']","['integrate', 'interfaces']"
Integrability,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10679:40,wrap,wrapper,40,https://root.cern,https://github.com/root-project/root/pull/10679,2,['wrap'],['wrapper']
Integrability,"`RPagePersistentSink::Create` guesses the concrete derived sink without wrapping it in a `RPageSinkBuf`, which is now entirely left in the responsibility of the `RNTupleWriter`. (as suggested in https://github.com/root-project/root/pull/14519#discussion_r1477061194)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14597:72,wrap,wrapping,72,https://root.cern,https://github.com/root-project/root/pull/14597,1,['wrap'],['wrapping']
Integrability,"`RPageSinkBuf::CommitPage` currently allocates a sealed page buffer with the same size as the uncompressed page:; https://github.com/root-project/root/blob/226e4c00e5dc4b7aaf881bad810a0c78c8a14185/tree/ntuple/v7/src/RPageSinkBuf.cxx#L148. Instead the code should seal / compress the page into a temporary buffer, at which point the exact compressed size is known and the contents can be copied into an appropriately sized allocation. This saves (significant) memory depending on the compression factor, while the extra `memcpy` should not be visible compared to the compression itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16752:466,depend,depending,466,https://root.cern,https://github.com/root-project/root/issues/16752,1,['depend'],['depending']
Integrability,"`RooLinkedList::At(ix)` was implemented using an `ix`-step walk through the list. We found that in HistFactory models, `At` was used to loop over the list, which thus caused a lot of double walking through the list. This PR (a cherry-pick from the [roofit-dev fork](https://github.com/roofit-dev/root/tree/linked_list_at)) improves this situation by replacing `At`'s walk by a direct lookup from a `std::vector` of `RooLinkedListElem` pointers. In our HistFactory-based benchmark, this gave a significant speed boost of 1.6x on a likelihood minimization task. Since this was not the focus of the roofit-dev project, unfortunately, I had no time yet to wrap up this feature into a nice PR, do rigorous testing and benchmarking, etcetera. I would appreciate reviews and suggestions or additional commits for improvements. For instance, I put `//!` behind the index vector (the name of this `//!` feature currently eludes me), so I wouldn't have to update the class version, but I guess this will break the class when it is (de)serialized. I'll gladly take any advice on how to best handle this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024:652,wrap,wrap,652,https://root.cern,https://github.com/root-project/root/pull/3024,1,['wrap'],['wrap']
Integrability,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:319,depend,dependencies,319,https://root.cern,https://github.com/root-project/root/pull/11687,3,"['depend', 'message']","['dependencies', 'depends-on', 'message']"
Integrability,`TRandom::Poisson(double mu)` returns an 32 bit integer.; When passing a value `mu>=int_max` (i.e. ~ 2.E9) it returns -2147483648. Also this happens when my is a NaN. ; This can create confusions. ; I think an error message should be produced such that users needs to take actions and protect it. ; In addition one the function return value could be changed from int to unsigned long . To reproduce: . ```; cout << gRandom->Poisson(1.E10) << endl;; cout << gRandom->Poisson(TMath::QuietNaN()) << endl;; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6927:216,message,message,216,https://root.cern,https://github.com/root-project/root/issues/6927,1,['message'],['message']
Integrability,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:2091,rout,routine,2091,https://root.cern,https://github.com/root-project/root/issues/15221,3,['rout'],['routine']
Integrability,"```cpp; #include <TFile.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ULong64_t x[3] = {1ull, 2ull, 3ull};; t.Branch(""x"", &x, ""x[3]/l"");; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; // this works:; TTreeReaderArray<ULong64_t> x(r, ""x"");; // this does not:; TTreeReaderArray<ULong64_t> x2(r, ""x.x"");. r.Next();. return 0;; }; ```. produces the following (bad) error message:. ```; Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: Leaf of type ULong64_t cannot be read by TTreeReaderValue<unsigned long long>.; ```. Although the usecase in the reproducer is solved by using `""x""` instead of `""x.x""`, the usecase in the original report [on the forum](https://root-forum.cern.ch/t/ttreereader-with-long-long-variables/48603) has a branch name different from the leafname so the longer spelling must be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9758:476,message,message,476,https://root.cern,https://github.com/root-project/root/issues/9758,1,['message'],['message']
Integrability,"```cpp; $ cat test.h; int add42(int i);. $ cat test.cpp; int add42(int i) {; return i + 42;; }. $ clang++ test.cpp -shared -fPIC -o libtest.so. $ root -l -b; root [0] #include ""test.h""; root [1] gSystem->Load(""./libtest.so""); (int) 0; root [2] add42(1) // postpone this and all is fine!!; (int) 43; root [3] gInterpreter->Declare(""double add42d(double d) { return d + 42.; }\nint add42(int i) { return i + 42; }""); [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_Z5add42i'; (bool) true; root [4] add42d(1.) // innocent bystander; IncrementalExecutor::executeFunction: symbol '_Z6add42dd' unresolved while linking [cling interface function]!; You are probably missing the definition of add42d(double); Maybe you need to load the corresponding shared library?; root [5] ; ```. I believe the JIT considers `add42` as a strong symbol and when we re-define it we have a problem. I think this is the right behavior however we allowed this in the past and we might be breaking (sometimes silently) existing code. cc: @wlav",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12277:642,interface,interface,642,https://root.cern,https://github.com/root-project/root/issues/12277,1,['interface'],['interface']
Integrability,"`from ROOT import *` leads to a segmentation violation when used with Python 3.6. One could try fixing it instead of disabling it but the code which is used to install the lookup handler in the module `RootModule::SetRootLazyLookup` depends on internal CPython implementation details of the dict class which are not part of the public API. As a consequence keeping this alive will lead to very; fragile code, require continuous effort to adapt to internal changes and cause a lot of #ifdef handling. (as a matter of fact, Python 3.7 would probably already require new changes to this code already). . Also there's a statement in the bug report that `from ROOT import *` is broken in Python 3 so I don't understand why it's not disabled as it will only confuse users: https://sft.its.cern.ch/jira/browse/ROOT-8931. As such I would propose to instead have a clear error message that `from ROOT import *` does not work. This pr adds an `ImportError` which is easy to handle but cannot be just ignored by the user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/825:233,depend,depends,233,https://root.cern,https://github.com/root-project/root/pull/825,2,"['depend', 'message']","['depends', 'message']"
Integrability,"`gInterpreter::ProcessLine` has an important run-time cost.; Instead of calling it everytime the jitting of an action is required, we now store all the strings that are to jit in TLoopManager and do a single call to `gInterpreter::ProcessLine` before running the event-loop. A couple of life-time issues had to be resolved for this to work properly: in order to let result proxies and action helpers share ownership of the result object, I introduced (simple) manual lifetime management of a shared_ptr (weird, I know). In order to deal with deferred jitting of an action that hangs from a node whose `TInterface` has already been destroyed (can happen due to the deferral of jitting) all `BuildAndBook` functions have been made independent of `TInterface`. In the long term it might be possible to refactor the jitting mechanism so that the `TAction` (and the `TTreeReaderValue/Array`s that it contains) is jitted but the action helpers are not, lifting the requirement of manual lifetime management of a shared_ptr. Although this should be possible in principle, I currently don't see how we could integrate it with the existing logic, so I decided for this much less invasive solution. Before/after runtimes for two extreme scenarios:. `test_inference.cxx` (which performs a lot of jitting).; compile time: ~8s -> ~9s; run time: ~40s -> ~7s. 50 jitted Histo1D calls in a loop (thanks to Attila for the use-case):; run time: ~35s -> <2s. This PR conflicts with #713 . Depending on which one gets merged first I will rebase the other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/720:1100,integrat,integrate,1100,https://root.cern,https://github.com/root-project/root/pull/720,2,"['Depend', 'integrat']","['Depending', 'integrate']"
Integrability,"`mtbb201_parallelHistoFill.C` fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14854:193,interface,interface,193,https://root.cern,https://github.com/root-project/root/pull/14854,2,['interface'],['interface']
Integrability,"`rootfit/CMakeLists.txt` does not check whether `HistFactory` is on, despite hs3 depending on it. This happens e.g. if there's no libxml2. See https://root-forum.cern.ch/t/installing-root-error-on-ubuntu/49146/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10103:81,depend,depending,81,https://root.cern,https://github.com/root-project/root/issues/10103,1,['depend'],['depending']
Integrability,"aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2086,depend,dependabot-security-updates,2086,https://root.cern,https://github.com/root-project/root/pull/11864,1,['depend'],['dependabot-security-updates']
Integrability,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4369,message,message,4369,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10442,message,message,10442,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"add GLEW as dependency for FTGL, v 6.20 [ROOT-10631]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5210:12,depend,dependency,12,https://root.cern,https://github.com/root-project/root/pull/5210,1,['depend'],['dependency']
Integrability,add MathMore dependency to roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5439:13,depend,dependency,13,https://root.cern,https://github.com/root-project/root/pull/5439,1,['depend'],['dependency']
Integrability,"al-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2394,message,message,2394,https://root.cern,https://github.com/root-project/root/issues/10203,1,['message'],['message']
Integrability,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:14386,message,message,14386,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"al::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (316 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Exper",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:15136,message,message,15136,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"allable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2214,interface,interface,2214,https://root.cern,https://github.com/root-project/root/pull/3488,1,['interface'],['interface']
Integrability,"arameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7228,wrap,wrapping,7228,https://root.cern,https://github.com/root-project/root/issues/12429,1,['wrap'],['wrapping']
Integrability,"ard for unknown arguments. ; * `TRint` crashes when instantiated with `*argc = nullptr` and / or `argv = nullptr` which are the default values for `TApplication` and hence may be used by existing users of the `TRint` constructor. . ### Affected use cases; Applications may do something like:; ```cpp; TRint *app = new TRint(""app"", 0, NULL);; ...; app->Run(kTRUE);; ```; Applications may also use `TRint` during operation. One existing model some applications I use are employing is:; * Create a `TRint` shortly after startup, passing in `argc` and `argv`. ; * Allow the user to drop to a ROOT interpreter prompt. This is then done by calling `app->Run(kTRUE);`. A user can use the interpreter to inspect state of the analysis software, and exit it again to let the software continue. . The latter approach is extremely useful for example to shell out after analysis software startup, or inside an event, such that the user can interactively analyze objects right from a ROOT interpreter shell. . ### Questions; * Is the use case ""use TRint as class to drop into the interpreter"" supported? ; The changelog of 6.26.00 reads like `TRint` is meant for internal use by `root.exe` only, but there seems to be no easy alternative. ; Depending on the reply, this could be a separate bug report, or a ""wontfix"". ; * If the use case is / should be supported, It would be useful to be able to allow unsupported arguments to pass through, for use in applications which are not `root.exe`. ; * For improved backwards compatibility and safety, not crashing when being passed `*argc = nullptr` and / or `argv = nullptr` would be nice. . In case somebody else is hit by this, I am right now using this hack as workaround:; ```cpp; int dargc = 1;; char** dargv = &argv[0];; myApp = new TRint(""myApp"", &dargc, dargv, nullptr, 0, kTRUE);; myApp->GetOptions(&argc, (argv));; gSystem->SetProgname(argv[0]);; ```; This allows to re-use the `TApplication` functionality as before, without triggering one of the two issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090:1479,Depend,Depending,1479,https://root.cern,https://github.com/root-project/root/issues/10090,1,['Depend'],['Depending']
Integrability,"ard<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. {code}; interp SnapshotImpl calls; interp std::make_shared<ROOT::Detail::RDF::RLoopManager …; interp std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all interpreted.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; interp std::make_shared<ROOT::RDF::RInterface …; interp std::allocate_shared<ROOT::RDF::RInterface …; interp std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. I.e. the major difference is that we have the shared_ptr constructor (which contains std::forward) being",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:1570,rout,routine,1570,https://root.cern,https://github.com/root-project/root/pull/2158,1,['rout'],['routine']
Integrability,"arker style is influenced by the marker line width I added the function HasMarkerLineWidth to TAttMarker. **Marker size and draw method**; Since the calculation of the size of the marker assumed ultimatly thin lines up to now, the bounding box of the marker would have increased when setting a larger marker line width. To counter that, I decreased the marker size by the amount it would have increased due to the line width. However, note that this only works with round line caps and round line joins, since for example with miter joins the bounding box becomes infinitly large for infinitly small angles. This is also the reason why I decided to used round caps and round joins when drawing the marker lines in a TPad. However for the vector graphic export classes the line join method is set by gStyle->GetJoinLinePS(). Since there was no corresponding implementation for the line cap, I added it to TStyle. Furthermore, the line join method setting was ignored by the SVG export until now, so I decided to add it there as well. **Further changes**; Another thing I noted is that the markers 3 and 5 (and 31) were looking different depending on whether they were drawn by a class based on TVirtualPadPainter or based on TVirtualPS. Furthermore the behaviour for marker styles 9-19 were different between the implementations. (You can see the differences when you compare the canvas created by `TMarker::DisplayMarkerTypes()` with the marker style example picture in the class reference of TAttMarker.); I thought that the marker style definition used by classes based on TVirtualPadPainter seems better than the one by classes based on TVirtualPS. However, if you think that the definition of classes based on TVirtualPS is more correct, I can change this quickly but would then propose to also change definition in the TVirtualPadPainter classes since the markers should look the same everywhere. If you have any further recommendations please let me know.; Thanks and all the best,; Simon Spies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721:2587,depend,depending,2587,https://root.cern,https://github.com/root-project/root/pull/4721,1,['depend'],['depending']
Integrability,"arry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2388,synchroniz,synchronized,2388,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronized']
Integrability,"as merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Pol",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:1006,Integrat,Integrating,1006,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"ase we also made some changes to the build system: libImt is now *always* built, but when the flag is disabled it only contains the TExecutor class. Sounds sneaky and it is confusing, but it's the best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:2111,interface,interfaces,2111,https://root.cern,https://github.com/root-project/root/pull/6327,1,['interface'],['interfaces']
Integrability,"at version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-endian. Here the bytes are in the right order, but shifted 4 bytes. $ printf '%016x\n%016x\n' 1234605615003729920 287454020; 1122334400000000; 0000000011223344; $ printf '%016x\n%016x\n' 6153737371142586367 1432778632; 55667788ffffffff; 0000000055667788; ~~~; 449/1272 Test #424: gtest-tree-ntuple-v7-test-ntuple-endian .............................***Failed 0.04 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 9 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 9 tests from RColumnElementEndian; [ RUN ] RColumnElementEndian.Float; [ OK ] RColumnElementEndian.Float (6 ms); [ RUN ] RColumnElementEndian.Double; [ OK ] RColumnElementEndian.Double (3 ms); [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:2762,message,message,2762,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"at<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3536,message,message,3536,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ate_base&, long)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_max_concurrency(tbb::interface7::task_arena const*)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface9::global_control::active_value(int)'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_terminate()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_initialize()'; /work1/celeritas/pcanal/geant-public/gcc12/install/opt/lib/libImt.so: undefined reference to `tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const; ```. Notes. * Adding the `libtbb` installed by ROOT explicitly solves the problem.; * doing `ldd` on `libImt` prints the expected path for `libtbb`; * re-doing the failing link with `LD_LIBRARY_PATH` containing the directory where the builtin `libtbb` is solved the problem; * redoing the failing link adding to `-Wl,-rpath-link,` the directory where the builtin `libtbb` is solved the problem ; * The main difference is that when linking `libImt` with builtin the link line uses `-ltbb` while when linking against an external `tbb` it list the full pathname of the library (while the ROOT library use a relative path). So the problem is might be either that; * we use `-ltbb` for the buitin; * the CMake fragment used by the dependent product does not add the ROOT library path to `rpath` (in contrast both Geant4 and VecGeom add their path to rpath or so it seems. ### Reproducer. build ROOT with buitin tbb; build Celeritas against that ROOT install. ### ROOT version. at least v6.28/04 and master. ### Installation method. hand build. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13079:2028,depend,dependent,2028,https://root.cern,https://github.com/root-project/root/issues/13079,1,['depend'],['dependent']
Integrability,"ave anything to do with PROOF and TProofOutputFile, I thought I'd rather continue the discussion in a new thread. What I originally observed was that in the latest 5.34.XX version some of my PROOF jobs would return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558:1251,depend,depends,1251,https://root.cern,https://github.com/root-project/root/issues/14558,1,['depend'],['depends']
Integrability,"bCore.so; #12 0x00007f682e411d18 in TScopeAdapter::Init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) () from /sw/atlas/Athena/22.0.60/InstallArea/x86_64-centos7-gcc11-opt/lib/libDataModelRoot.so; ```. The place in the code where it's crashing in GetSplit after it calls; to StdLen:. ```; if ( mode & kDropStd) {; unsigned int offset = (0==strncmp(""const "",full.c_str(),6)) ? 6 : 0;; RemoveStd( full, offset );; }; ```. where RemoveStd is inlined:. ```; static void RemoveStd(std::string &name, size_t pos = 0); {; size_t len = StdLen({name.data()+pos,name.length()-pos});; if (len) {; ```. So, it calls to StdLen, which apparently then crashes by branching to 0.; It's unfortunately difficult to then tell exactly why that happened.; FWIW, the registers at the crash were:. ```; rip: 0033:0000000000000000 eflags: 0000000000010202; rax: 00000000ffffffeb rbx: 0000000000000220; rcx: 0000000000000078 rdx: 0000000000000000; r08: ffffffffffffffff r09: 00007f68354af4d0; r10: 72543a3a444f4178 r11: 0000000000000006; r12: 00000000961170c0 r13: 00007f67e4395a90; r14: 0000000000000000 r15: 00007f683459fb22; rsi: 00000000961170c0 rdi: 000000000000001f; rbp: 00007f67e4395c28 rsp: 00007f67e4395a48; ```. However, the reason i'm writing this up here is that StdLen contains; a mutable, static std::set instance:. ```; static ShuttingDownSignaler<std::set<std::string>> gInlined;; ```. So this appears to be a thread-safety issue, regardless of whether; this is actually reponsible for the observed crash. There is no lock protecting this in either StdLen or in the TClass; methods that call it. There is a lock (gCoreMutex) taken in TClass::GetClass,; so we should be safe against other code that's using GetClass.; However, ATLAS code also directly uses TClassEdit in a number of places,; so i think we do have a potential race. (Though we don't use it from so many places, so it may be feasible; to wrap our uses of TClassEdit with taking gCoreMutex.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10353:3501,wrap,wrap,3501,https://root.cern,https://github.com/root-project/root/issues/10353,1,['wrap'],['wrap']
Integrability,"b](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. ; If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. ; It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`.; . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ); ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) ; ; ## Setup. 1. ROOT version 6.22-6.23; 2. Operating system lxplus ; 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context; <!--; Add any other context about the problem here.; -->; It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552:1062,depend,depend,1062,https://root.cern,https://github.com/root-project/root/issues/6552,1,['depend'],['depend']
Integrability,"back port of https://github.com/root-project/root/pull/12863. This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12914:167,depend,dependent,167,https://root.cern,https://github.com/root-project/root/pull/12914,1,['depend'],['dependent']
Integrability,"bleGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5839,message,message,5839,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:1822,interface,interface,1822,https://root.cern,https://github.com/root-project/root/issues/7258,1,['interface'],['interface']
Integrability,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:1175,depend,dependent,1175,https://root.cern,https://github.com/root-project/root/issues/7704,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"builtins for ZeroMQ to ease dependency management: libzmq and cppzmq. The builtin for libzmq is especially necessary at this point because it has recently gained a necessary feature that has not been released yet.; > ; > RooFit::MultiProcess is a task-based parallelization framework.; > ; > It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of wr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:1673,depend,dependency,1673,https://root.cern,https://github.com/root-project/root/pull/9078,2,"['depend', 'wrap']","['dependency', 'wrapped']"
Integrability,but add a comment to the jitted code in order to obtain a clear error message if; the user tries to use this type in a jitted action/transformation later in the chain.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558:70,message,message,70,https://root.cern,https://github.com/root-project/root/pull/2558,1,['message'],['message']
Integrability,"by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/interpreter/llvm/src/include/llvm/Support/Error.h:782!. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; 44	 return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;; (gdb) . ```; I will try with dwarf-5 for everything, let's see if that helps. At least GDB didn't crash this time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:2905,wrap,wrapped,2905,https://root.cern,https://github.com/root-project/root/pull/11882,1,['wrap'],['wrapped']
Integrability,c -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/rint/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/zip/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/thread/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/textinput/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/clingutils/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/foundation/v7/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/unix/inc -I/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:3103,Message,MessageTypes,3103,https://root.cern,https://github.com/root-project/root/issues/7206,1,['Message'],['MessageTypes']
Integrability,"c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197.; Are you already aware of any fix for that?. Thank you,; Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:9067,interface,interface,9067,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"c/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Error in <TFile::Init>: file test_large_file1.root has an incorrect header length (1677721600) or incorrect end of file length (-1760683648); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:159: Failure; Value of: f; Actual: false; Expected: true; *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:8390,message,message,8390,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,c/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1670,message,message,1670,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,c/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1895,message,message,1895,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,cannot buid the dependent project,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:16,depend,dependent,16,https://root.cern,https://github.com/root-project/root/issues/8942,1,['depend'],['dependent']
Integrability,"cation is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1121,message,message,1121,https://root.cern,https://github.com/root-project/root/issues/14113,1,['message'],['message']
Integrability,"ce `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:3899,interface,interface,3899,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"ce all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:1829,interface,interfaces,1829,https://root.cern,https://github.com/root-project/root/pull/5502,2,['interface'],['interfaces']
Integrability,"ce, the EIGC allows its (External) user to use Minuit2 ""Internal"" parameter space, i.e. the parameter space that may be bounded into some range using transformation functions. This allowed us to exactly (floating point bit-wise) replicate the Minuit2 gradient calculation outside of Minuit2 itself, allowing us to parallelize this gradient calculation process exactly without having to worry about breaking Minuit2. The replication, `NumericalDerivatorMinuit2`, was based on earlier work by @lmoneta who already had separated out the bulk of the gradient calculation code from Minuit2.; 2. To make this all work, we also had to upgrade precision of the transformation functions to long double instead of double, otherwise round off errors would still persist and ruin any chances of exact bit-wise equality.; 2. In `mathcore`: Some additions to `IFunction` were made to allow Minuit2 to probe functions for their ability to generate gradients and second derivatives. Similar additions were made to function adapter classes in Minuit2.; 3. In RooFit:; 1. Most RooMinimizerFcn functionality was moved into an abstract base class RooAbsMinimizerFcn, which in turn forms the base class of the new RooMinimizerFcn, but also of the added RooGradMinimizerFcn (serial, but gradient external to Minuit2) and MinuitFcnGrad (with parallel MultiProcess back-end) classes.; 2. The RooRealMPFE based classes can make use of an added parameter `CPUAffinity`. In Unix systems (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:2341,adapter,adapter,2341,https://root.cern,https://github.com/root-project/root/pull/8294,1,['adapter'],['adapter']
Integrability,ce/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f55,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6626,interface,interface,6626,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,ce; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLog,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2356,message,message,2356,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,ch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming the condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 22: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 23: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 24: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 25: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 27: 'inrmin' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 29: Assuming 'delta' is >= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 30: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:446; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:447; /opt/root_src/geom/geom/src/TGeoCone.cxx:462:30: warning: The left operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 2: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoCone.cxx:1181; 3: Calling ',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:15210,rout,rout,15210,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,"ch is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1716,integrat,integrationRange,1716,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrationRange']
Integrability,"ch test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3625,depend,dependencies,3625,https://root.cern,https://github.com/root-project/root/issues/7936,1,['depend'],['dependencies']
Integrability,"ch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPackage; , fetchFromGitHub; , fetchpatch; , makeWrapper; , cmake; , coreutils; , git; , davix; , ftgl; , gl2ps; , glew; , gnugrep; , gnused; ,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2972,depend,dependencies,2972,https://root.cern,https://github.com/root-project/root/issues/11920,1,['depend'],['dependencies']
Integrability,change the TBufferMerger callback to wrap the merge operation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:37,wrap,wrap,37,https://root.cern,https://github.com/root-project/root/pull/1706,1,['wrap'],['wrap']
Integrability,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:389,message,message,389,https://root.cern,https://github.com/root-project/root/pull/13542,1,['message'],['message']
Integrability,"cked for duplicates. ### Description. When using Python in interactive mode, the web window does not launch properly (see screenshot). It works from a C++ macro. One can also save canvas contents in ROOT batch mode. ![image](https://github.com/root-project/root/assets/1557360/2181f05e-27bd-4473-9151-b28a90773900). ### Reproducer. ```python; import ROOT; import numpy as np. def main():; voltages = np.array([1,2,3], dtype=np.uint32); capacitances = np.array([4,5,6], dtype=np.float32). #ROOT.gROOT.SetBatch(True); df = ROOT.RDF.FromNumpy({'voltages': voltages, 'capacitances': capacitances}); df = df.Define('inv', '1/(capacitances*capacitances)'). c = ROOT.TCanvas(); graph = df.Graph('voltages', 'inv'); graph.Draw('APL'). c.SaveAs(""graph.pdf""). if __name__ == ""__main__"":; main(); ```; Output:; ```bash; $ python3 -i repro.py ; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9449; Opening in existing browser session.; [102887:102898:0312/160727.268507:ERROR:object_proxy.cc(576)] Failed to call method: org.freedesktop.DBus.Properties.Get: object_path= /org/freedesktop/portal/desktop: org.freedesktop.DBus.Error.InvalidArgs: No such interface “org.freedesktop.portal.FileChooser”; [102887:102898:0312/160727.268546:ERROR:select_file_dialog_linux_portal.cc(285)] Failed to read portal version property; [102887:102887:0312/160727.306050:ERROR:policy_logger.cc(156)] :components/enterprise/browser/controller/chrome_browser_cloud_management_controller.cc(161) Cloud management controller initialization aborted as CBCM is not enabled. Please use the `--enable-chrome-browser-cloud-management` command line flag to enable it if you are not using the official Google Chrome build.; 13986 bytes written to file /home/jakob/Documents/CERN/ROOT/demo/graph.pdf; Info in <ProduceImage>: PDF file graph.pdf with 1 pages has been created; >>> ; ```. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14943:1200,interface,interface,1200,https://root.cern,https://github.com/root-project/root/issues/14943,1,['interface'],['interface']
Integrability,clarify error message with bash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11530:14,message,message,14,https://root.cern,https://github.com/root-project/root/pull/11530,1,['message'],['message']
Integrability,cling depends on exact macOS SDK headers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7021:6,depend,depends,6,https://root.cern,https://github.com/root-project/root/issues/7021,1,['depend'],['depends']
Integrability,"cmake fails if `arrow` not installed while ARROW_VERSION is not defined. Error message is:; ```; CMake Error at cmake/modules/FindArrow.cmake:40 (if):; if given arguments:. ""0"" ""AND"" ""VERSION_GREATER_EQUAL"" ""10.0.0"". Unknown arguments specified; Call Stack (most recent call first):; cmake/modules/SearchInstalledSoftware.cmake:18 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1062 (find_package); CMakeLists.txt:249 (include); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11706:79,message,message,79,https://root.cern,https://github.com/root-project/root/pull/11706,1,['message'],['message']
Integrability,"cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); CMakeLists.txt:5 (find_package); ```. And not sure how to solve it. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:1986,message,message,1986,https://root.cern,https://github.com/root-project/root/issues/14163,1,['message'],['message']
Integrability,"cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6714,message,message,6714,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2408,Depend,Dependabot,2408,https://root.cern,https://github.com/root-project/root/pull/11864,1,['Depend'],['Dependabot']
Integrability,"com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When `TBrowser` is opened, all the child items (files and folders) of the super-directories will be shown. This cause it to get stuck when one of them contains a huge amount of files and directories. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `TBrowser` is opened smoothly without being overwhelmed by the upstream folders. Possible solutions include:; * Provide an option not to follow the symlink; * Provide an option to specify the number of super-directory to show. These solution would require changes of User Interface or even the TBrowser API, but it might be useful when moving the files to somewhere with thinner directory tree is inconvenient/impossible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Easy:. 1. `cd` into a temporary directory (`/dev/shm` would be convenient); 2. ```bash; mkdir testdir; cd testdir; for i in {1..100000}; do mkdir $i; done; cd 50000; cp /path/to/root/tutorial/hsimple.root .; root; ```; 3. Inside the ROOT interpreter,; ```ROOT; TBrowser tb; ```. Practical:; 1. Install [Nix package manager](https://nixos.org/) by executing the installation script, by setting up a NixOS, or by using the docker image.; 2. Fill `/nix/store` with packages by installing packages, `nix-shell` or `nix-build`; 2. Install ROOT by `nix-env -iA root`; 3. ```bash; cd ~/.nix-profile/tutorials; root; ```; 4. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7213:1029,Interface,Interface,1029,https://root.cern,https://github.com/root-project/root/issues/7213,1,['Interface'],['Interface']
Integrability,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466:2735,wrap,wrapping,2735,https://root.cern,https://github.com/root-project/root/pull/11466,1,['wrap'],['wrapping']
Integrability,conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:25,depend,depends,25,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"cs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2318,depend,dependabot-automerge-start,2318,https://root.cern,https://github.com/root-project/root/pull/11864,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"cypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:11475,Wrap,WrapperCall,11475,https://root.cern,https://github.com/root-project/root/issues/15117,1,['Wrap'],['WrapperCall']
Integrability,d ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1199,message,message,1199,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"d Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not match",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1270,depend,dependency,1270,https://root.cern,https://github.com/root-project/root/pull/15272,1,['depend'],['dependency']
Integrability,"d by; transaction created during the callbacks executed during the; ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':; ```; int main(int argc, char ** argv); {; char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";; auto const result [[gnu::unused]] = TClass::GetClass(class_string);; return 0;; }; ```; which is a representation of real use case (in a more complex setup) in ART.; We were getting:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; (*(TStreamerInfo**)ret) = new TStreamerInfo();; return;; }; else {; new TStreamerInfo();; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented!; Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:1213,wrap,wrapper,1213,https://root.cern,https://github.com/root-project/root/pull/2776,2,['wrap'],['wrapper']
Integrability,"d from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/Service",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4696,depend,depends,4696,https://root.cern,https://github.com/root-project/root/issues/11765,1,['depend'],['depends']
Integrability,"d it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value; collect2: error: ld returned 1 exit status; ```; Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:4296,message,message,4296,https://root.cern,https://github.com/root-project/root/issues/7936,1,['message'],['message']
Integrability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:4397,integrat,integrated,4397,https://root.cern,https://github.com/root-project/root/pull/11808,1,['integrat'],['integrated']
Integrability,"d. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_lzma=ON -Dbuiltin_veccore=ON \; -DXROOTD_ROOT_DIR=~/software/xrootd/4.12.2/x86_64-ubuntu2004-gcc9-opt \; -DTBB_ROOT_DIR=~/software/oneTBB/2020.2/x86_64-ubuntu2004-gcc9-opt \; -DCMAKE_INSTALL_PREFIX=~/software/root/6.20.08/x86_64-ubuntu2004-gcc9-opt ../root-6.20.08/; ninja; ```. ## Setup. A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:2241,depend,dependencies,2241,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['dependencies']
Integrability,de -compilerI/usr/lib/clang/14.0.5/include -compilerI/usr/include -I/home/mkrzewic/src/root_build/include -I/home/mkrzewic/src/root_build/ginclude -I/home/mkrzewic/src/root_src/core/base/inc -I/home/mkrzewic/src/root_src/core/foundation/inc -I/home/mkrzewic/src/root_src/core/cont/inc -I/home/mkrzewic/src/root_src/core/gui/inc -I/home/mkrzewic/src/root_src/core/meta/inc -I/home/mkrzewic/src/root_src/core/clib/inc -I/home/mkrzewic/src/root_src/core/rint/inc -I/home/mkrzewic/src/root_src/core/zip/inc -I/home/mkrzewic/src/root_src/core/thread/inc -I/home/mkrzewic/src/root_src/core/textinput/inc -I/home/mkrzewic/src/root_src/core/clingutils/inc -I/home/mkrzewic/src/root_src/core/base/v7/inc -I/home/mkrzewic/src/root_src/core/foundation/v7/inc -I/home/mkrzewic/src/root_src/core/unix/inc -I/usr/local/include -I/home/mkrzewic/src/root_src/builtins/xxhash -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:4525,Message,MessageTypes,4525,https://root.cern,https://github.com/root-project/root/issues/12787,1,['Message'],['MessageTypes']
Integrability,dictionary payload parsing diagnostics: no more error message when header not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:54,message,message,54,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"dientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2720,synchroniz,synchronize,2720,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronize']
Integrability,"during its build:. ![root-6 20 08-build](https://user-images.githubusercontent.com/30694331/94133565-1d97ec80-fe61-11ea-927d-94b8926cd41b.png). The build starts ""pretty much"" at the left hand side of the timeline, and lasts until ""pretty much"" the right hand side of it. As you can see, the build starts out very well. Building LLVM scales perfectly to 64 threads. And I believe it would scale well to even beyond that. But once the LLVM build is done, many bottlenecks show up. First there is a big bottleneck with building `libCling` and `rootcling`, but after that the build of `libRIO` is also taking a surprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:1337,depend,dependencies,1337,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['dependencies']
Integrability,"dy. However, I would like to put this forward not as a ""final MR"" (would need to be rebased anyway), but as a way to get a preliminary review of this code. Purpose: HistFactory and RooWorkspace should be able to import and export their contents from and to text files, using a common JSON/YAML syntax. Method: The code has been written in such a way as to. - Minimize the amount of changes to existing code; - Make it as easy as possible for users to add new serializers/deserializers for new or existing classes; - Provide a clean interface as much as possible. Dependencies: The code requires a JSON/YML parser and emitter.; ROOT already includes the nlohmann JSON module, which is used as a default for the interface.; However, for development, I have been using the rapidyml package, which also supports reading and writing of YML files. As the code for this already exists, I have kept this in as an optional dependency. When available, it replaces the nlohmann interface and then also provides YML reading and writing capabilities, while the default is limited to JSON. Please review:. - general coding style; - packaging: Should these new files continue to live in RooStats, or should they go to a new subpackage of RooFit?; - code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?; - build system: Is the way I encoded the optional dependency acceptable?; - class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. Please don't review yet:; - lack of functionality - more things will be added over time; - individual violations of the style guide (e.g. missing spaces or newlines) . Please specifically suggest where documenation should be added!; Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151:1052,interface,interface,1052,https://root.cern,https://github.com/root-project/root/pull/5151,1,['interface'],['interface']
Integrability,"e 3.1+; - Support for adding as a subdirectory, using from build directory, or installing; - Works inside of ROOT or standalone; - Support for CPack binary `make package`; - Options for MPI and OpenMP integrated with main ROOT build; - Support for macOS, Linux, and Windows; - Version captured from ROOT; - CTest support; - `make docs` support (CMake 3.8+ only); * No need for extra ""prepare"" shell scripts, everything is done cross-platform through CMake and CPack; - Files can be copied in to make redistributable source with `-Dminuit2-standalone=ON`; - `make package_source` on Unix creates `.tar.gz` and `.zip` files (non-binary CPack); - `make purge` can remove copied files; * Helpful `README.md` and `DEVELOP.md` files. ### To produce a source distribution:; Make sure you have CMake 3.1+ (ROOT requires 3.4.3+, so that's likely). Then, from `/math/minuit2/build` run:. ```bash; cmake .. -Dminuit2-standalone=ON; make package_source; make purge; ```. ### You can also build Minuit2 for testing (standalone option on or off) with:. ```; make; ```. ### And you can make a prebuilt binary package with:. ```; make package; ```. (Standard CPack option for different generators apply.). ### Maintenence. If new files are needed by Minuit2 due to additions to ROOT, they should be added to the source files lists in `/math/minuit2/src/Math/CMakeLists.txt` and `/math/minuit2/src/CMakeLists.txt` (depending on if it's a new Math or Minuit2 requirement). ### Windows; This works on Windows; and you can even then create binary installers for Windows trivially. (Though ""package_source"" does not seem to be supported on Windows). This is the procedure on Windows:. First, install Visual Studio 17, Git, CMake, and NSIS. Then from the `math/minuit2/build directory` of your ROOT checkout, run:. ```; ""C:\Program Files\CMake\bin\cmake.exe"" ..; ""C:\Program Files\CMake\bin\cmake.exe"" --build .; ""C:\Program Files\CMake\bin\cmake.exe"" --build . --target package; ```. This creates a `.exe` installer file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680:1647,depend,depending,1647,https://root.cern,https://github.com/root-project/root/pull/1680,1,['depend'],['depending']
Integrability,"e _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:59:1: note: expanded from here; R__dummyintdefault78; ```. ### Expected behavior. The code should compile without problems. ### To Reproduce. Put together some code which by chance has two ClassImp statements in the same line in two different files which end up in the same compilation unit.; In the end it turned out that the name expanded from the ClassImp statements does not depend on the name of the class but only one the line of the ClassImp statement in the code. Both calls. `ClassImp(PairAnalysisSpectrum)` . and . `ClassImp(PairAnalysisHn)`. generated the same name. `R__dummyintdefault78`. which is only defined by the line number. Adding one empty line in one of the files work around the problem. ### Setup. 1. ROOT version: 6.22.08; 2. Operating system: macosx 11 and 12. Probably will fail also on other systems and with newer ROOT versions. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948:2902,depend,depend,2902,https://root.cern,https://github.com/root-project/root/issues/10948,1,['depend'],['depend']
Integrability,"e best solution we have right now to avoid circular dependencies in the build system. . * The status of the different executors' interfaces at the end of this PR is sumarized in the following table, where TExecutor has chunking interfaces but will only chunk if the policy is multithreaded, ignoring the chunking parameter otherwise:. Executor | Map | Reduce | MapReduce | Foreach | Chunking | Parallel reduction | ; ---------- | ----- | -------- | ------------- | -------- | ----------- | ------------------ |; TExecutorCRTP | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TExecutor | ✔️ | ✔️ | ✔️ | ❌ | ✓ | ❌ |; TThreadExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ | ✔️ |; TProcessExecutor | ✔️ | ✔️ | ✔️ | ❌ | ❌ | ❌ |; TSequentialExecutor | ✔️ | ✔️ | ✔️ | ✔️ | ❌ | ❌ |. * [WIP] All common interfaces (no chunking, no foreach, no parallel reduction) are declared in the base class, TExecutorCRTP. Among these, the only three differing Map implementations call MapImpl, deleted functions on the base class and expected to be implemented by the child classes. * Every other interface (chunking, foreach, parallel reduction) is declared and implemented in the executor that supports it. ### TODO. Some things still left to work on/agree/doublecheck:. - [x] Naming?. - [x] Formatting. - [x] Check question 2 in: https://indico.cern.ch/event/870356/contributions/3670548/attachments/1961441/3260066/3_PPP_Questions.pdf (EDIT: I think this is provided by chunking). - [x] Extend the initializer_list interface to all the executors. - [x] Add tests. - [x] Discuss the build system and the new dependencies. - [x] Improve documentation. Left for the end, potentially for following PRs:; - [ ] Adapt ROOT Fitting; - [x] Change the policies to kSequential, kMultiThread and KMultiProcess; - [ ] Moving it out of the Internal namespace; - [x] Refactoring the switch statements if possible; - [ ] Adapt the Mapreduce signature to allow returning [something other than T](https://github.com/root-project/root/pull/6327#discussion_r526016153)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6327:2393,interface,interface,2393,https://root.cern,https://github.com/root-project/root/pull/6327,3,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"e class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:14213,interface,interface,14213,https://root.cern,https://github.com/root-project/root/issues/7518,1,['interface'],['interface']
Integrability,"e configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:1223,depend,dependency-versions,1223,https://root.cern,https://github.com/root-project/root/issues/9436,1,['depend'],['dependency-versions']
Integrability,e logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2273,message,message,2273,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"e provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception?. ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com/root-project/root/files/7872239/build_root-v6_25_02-e20-p399-debug.log.gz); * [build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz](https://github.com/root-project/root/files/7872240/build_root-v6_25_02-e20-p399-debug-runtime_cxxmodules.log.gz); * [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7872241/runtime_cxxmodules-reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:2141,message,messages,2141,https://root.cern,https://github.com/root-project/root/issues/9583,1,['message'],['messages']
Integrability,e.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/VariableTransformBase.h: mutable MsgLogger* fLogger; //! message logger; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2657,message,message,2657,https://root.cern,https://github.com/root-project/root/issues/9792,13,['message'],['message']
Integrability,"ears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1036,message,message,1036,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"ease search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integral works); # but not in the y project",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:1034,integrat,integration,1034,https://root.cern,https://github.com/root-project/root/issues/12646,1,['integrat'],['integration']
Integrability,"ebgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1676,depend,dependencies,1676,https://root.cern,https://github.com/root-project/root/issues/10777,1,['depend'],['dependencies']
Integrability,"ect/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. On Linux, in a Juyter/ROOT Python notebook, every cell execution makes the `python` process open two ""files"":; ; lrwx------ 1 user users 64 2 Jun 22.33 77 -> /dev/pts/7; lr-x------ 1 user users 64 2 Jun 22.33 78 -> 'pipe:[214404]'; ; one to the terminal bound to the notebook server (`/dev/pts/7`), and another always a different pipe reading for nothing to write in it, e.g. from `lsof`:; ; python3.8 16586 user 78r FIFO 0,10 0t0 214404 pipe; ; These stay open, making the process reach the OS limit of open files sooner or later, at which point grief ensues.; Some commands (e.g. `matplotlib` figures) may create additional pairs out of the void. ### Expected behavior. The open file descriptor count should be roughly stable and not proportional to the number of executed cells. ### To Reproduce; ; jupyter --notebook # or root --notebook; ; then execute _(empty lines mark cell boundaries)_:; ```.py; import os; def printFiles(): print(f""PID={os.getpid()} files={len(os.listdir(f'/proc/{os.getpid()}/fd'))}""); printFiles(). printFiles(). printFiles(). printFiles(). import ROOT; printFiles(). printFiles(). printFiles(). printFiles(); ```; I get a file count of `43` or `44` on each cell before importing ROOT, and from the _next_ cell, each cell increments by 4 (`48`, `52`, ...).; The issue does not appear on plain `python`/`ipython`. ### Setup. Working with:; * Gentoo Linux, amd64, kernel 5.12.4 (last update a few days ago); * ROOT 6.24/00; * Python 3.8.10 (`dev-lang/python-3.8.10_p1` from Gentoo); * Jupyter 1.0.0; * ipython 7.24.0. I assume this issue is setup-dependent, or it would have been reported already... ([actually, it was in 2017](https://github.com/matplotlib/matplotlib/issues/8308)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8326:1957,depend,dependent,1957,https://root.cern,https://github.com/root-project/root/issues/8326,1,['depend'],['dependent']
Integrability,educe public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:1956,interface,interface,1956,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"efault_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3811,message,message,3811,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"elEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2432,Integrat,Integrating,2432,https://root.cern,https://github.com/root-project/root/pull/6632,1,['Integrat'],['Integrating']
Integrability,"ementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add inti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:2394,interface,interface,2394,https://root.cern,https://github.com/root-project/root/pull/12723,5,['interface'],['interface']
Integrability,"ementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We could get rid of TTaskGroup in my current implemention and synchronously map baskets to different tasks. If we do not mind a little performance drops, the current implementation should be fine. Thanks,. Zhe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:1928,interface,interface,1928,https://root.cern,https://github.com/root-project/root/pull/1010,1,['interface'],['interface']
Integrability,"ems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash; $ root; input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]; #include <new>; ^; input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]; input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:3:; /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]; #include ""cling/Interpreter/DynamicExprInfo.h""; ^; ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash; <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]; While building module 'MathCore':; In file included from <module-includes>:3:; In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:; /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'; std::vector<double> ones{1, 1, 1, 1};; ^ ~~~~~~~~~~~~~~~~; ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:1744,depend,dependency,1744,https://root.cern,https://github.com/root-project/root/issues/8518,1,['depend'],['dependency']
Integrability,"eneral use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; str",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2599,wrap,wrapper,2599,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapper']
Integrability,"er handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:1096,depend,depend,1096,https://root.cern,https://github.com/root-project/root/issues/15197,1,['depend'],['depend']
Integrability,"er/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent with respect to the previous point because a compiler in `PATH` takes precedence over the directories determined at build time, while a compiler out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11612:1225,message,messages,1225,https://root.cern,https://github.com/root-project/root/issues/11612,1,['message'],['messages']
Integrability,"er` | `ESnapshotOutputFormat::kDefault` | `ESnapshotOutputFormat::kRNTuple` |. ## Implementation; As mentioned, the existing `Snapshot` interface is used. A new `SnapshotRNTupleHelper` has been created to handle the creation and writing of the RNTuple, akin to the existing `SnapshotHelper` (which has been renamed to `SnapshotTTreeHelper` for consistency). ### RLoopManager data source initialization (rev bbf221f); The snapshot action creates a new loop manager which manages the snapshotted data set. The loop manager gets initialized before the actual snapshotting takes place. Originally, the pointer to the data source owned by the loop manager was marked as `const`. Because the RNTuple's data source _has_ to be created after the loop manager, for this PR the `const` qualifier has been dropped. ### Move `ROOT::RDF::Experimental::FromRNTuple` (rev 0a29b02); For snapshotting RNTuples, we need to include the header file for RNTupleDS in `ActionHelpers.hxx`. To avoid dependency conflicts related to including `ROOT/RDataFrame.hxx`, the free `FromRNTuple` functions have been moved to a separate header. ## Current limitations and follow-ups; This PR adds the minimal functionality for (single-threaded) snapshotting to RNTuple. A number of follow-ups are foreseen:. ### RNTuple write options; Currently no RNTuple-specific write options have been added to `RSnapshotOptions` yet, except for compression settings which were already present as an option. Adding (a subset) of the other `RNTupleWriteOptions` is trivial. ### Default compression settings; `RSnapshotOptions`' default compression setting is 101 (Zlib). However, RNTuple's default compression setting is 505 (zstd). We could change the default compression setting to `kInherit` and decide which settings to use according to the target data format (unless explicitly set by the user, of course). ### Multithreaded snapshotting; This PR only adds single-threaded RNTuple snapshotting. Multithreaded (and parallel) snapshotting will b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15750:1706,depend,dependency,1706,https://root.cern,https://github.com/root-project/root/pull/15750,1,['depend'],['dependency']
Integrability,"eras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1872,depend,dependencies,1872,https://root.cern,https://github.com/root-project/root/issues/16553,1,['depend'],['dependencies']
Integrability,"erlaps`](https://root.cern.ch/doc/master/classTGeoManager.html#afa2bfedf7f02398fdf5867072a77a884) the first parameter `ovlp` is described as a limit for the overlap size (which we understand to be the minimal size before considering it as illegal and triggering the error).; This method lead through chained calls to either `TGeoChecker::MakeCheckOverlap` (standard surface/edge/point check) or `TGeoChecker::CheckOverlapsBySampling` (sampling check):; ```; TGeoManager::CheckOverlaps => TNode::CheckOverlaps => TGeoVolume::CheckOverlaps => TGeoPainter::CheckOverlaps => TGeoChecker::CheckOverlaps | => TGeoChecker::MakeCheckOverlap; | => TGeoChecker::CheckOverlapsBySampling; ```. However [the line using this parameter in the sampling case (l.1271) is commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1271).; It was commented in https://github.com/root-project/root/commit/406af49ee13e135d7c2f1268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Proposed solutions:; - either un-comment the line to re-enable the threshold if it is not bringing other bugs (see simple pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:1106,message,message,1106,https://root.cern,https://github.com/root-project/root/issues/14675,1,['message'],['message']
Integrability,"ers\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:2266,message,message,2266,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ery strict source compatibility requirements: ""we should only break source compatibility if the ROOT constructs were actively harmful in some way, the volume of affected ROOT code is relatively small, and we can provide source compatibility and migration"". As discussed with @pcanal, and with TExecutor introduced in ROOT 6.08, there's little possibilities any user has implemented a new derived class from TExecutor. If this happened, the user is most probably advanced enough to be able to change the implementation. In any case, the volume of affected ROOT code will be relatively small. . As suggested by @dpiparo, for the moment we will keep the new ```TExecutor``` in ```ROOT::Internals```, not exposing it to the user. The executor usage will look as following:. ```cpp ; ROOT::Internal::TExecutor pool(ROOT::Fit::ExecutionPolicy::kSerial);; auto mapFunction = [](unsigned i){return 1u;};; auto reductionFunction = [](const std::vector<unsigned> &v) {; return std::accumulate(v.begin(), v.end(), 0u);; };. pool.MapReduce(ROOT::Fit::ExecutionPolicy::kSerial, mapFunction, ROOT::TSeq<unsigned>(20), reductionFunction);; ```. **TLDR;** This PR changes the behaviour of existing executors and introduces; new ones:. * TExecutor: changes its functionality to be a general Executor, while; TExecutorBaseImpl takes the role of the previous TExecutor. TExecutor; now acts as a general interface to the executors. The executor it will; resolve to is specified by a execution policy parameter in its; constructor. * TExecutorBaseImpl: Plays the previous role of TExecutor. * TSequentialExecutor: provides a sequential implementation of the; executor model, defined by TExecutorBaseImpl. This PR is not finished, but I'm opening it for discussion. Things left:; - [x] Change kSerial to kSequential. - [x] Move Execution Policies to ROOT::Internal. - [x] Adapt Fitting functions to use the new TExecutor instead of if statements. A test can be found here: https://github.com/root-project/roottest/pull/106",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312:2254,interface,interface,2254,https://root.cern,https://github.com/root-project/root/pull/1312,1,['interface'],['interface']
Integrability,"es was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide function states() with direct access to map of category names; to category numbers.; - Add functions getCurrent{Index|Label} to make clear that they access; class state. - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change. Changes in special category classes:; - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:2055,interface,interfaces,2055,https://root.cern,https://github.com/root-project/root/pull/5502,1,['interface'],['interfaces']
Integrability,"es. ### Description. `TTreeFormula` (and thus by extend `TTree::Scan` and `TTree::Draw`) does not handle well (under-statement) cases of schema evolution that involves renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **************************************************************************************; ************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:967,Wrap,Wrapper,967,https://root.cern,https://github.com/root-project/root/issues/14493,1,['Wrap'],['Wrapper']
Integrability,"es; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatTyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:1047,interface,interface,1047,https://root.cern,https://github.com/root-project/root/pull/5502,1,['interface'],['interface']
Integrability,est of a Composite Object (containing Vector's and Matrices); ******************************************************************************; Test Using CINT library; TrackD creation 		................ OK; TrackD addition 		................ OK; TrackD write 		................ OK; TrackD read 		................ OK; TrackD after read 		................ OK; TrackD32 creation 		................ OK; TrackD32 addition 		................ OK; TrackD32 write 		................ OK; TrackD32 read 		................ OK; TrackD32 after read 		................ OK; TrackD32 Double32 test 		................ OK; TrackErrD creation 		................ OK; TrackErrD addition 		................ OK; TrackErrD write 		................ OK; TrackErrD read 		................ OK; TrackErrD after read 		................ OK; TrackErrD32 creation 		................ OK; TrackErrD32 addition 		................ OK; TrackErrD32 write 		................ OK; TrackErrD32 read 		................ OK; TrackErrD32 after read 		................ OK; TrackErrD32 Double32 test 		................ OK; VecTrack<TrackD> creation 		................ OK; VecTrack<TrackD> addition 		................ OK; VecTrack<TrackD> write 		................ OK; VecTrack<TrackD> read 		................ OK; VecTrack<TrackD> after read 		................ OK; VecTrack<TrackErrD> creation 		................ OK; VecTrack<TrackErrD> addition 		................ OK; VecTrack<TrackErrD> write 		................ OK; VecTrack<TrackErrD> read 		................ OK; VecTrack<TrackErrD> after read 		................ OK; ******************************************************************************; stressMathCore: Real Time = 2.70 seconds Cpu Time = 2.02 seconds; ROOTMARKS = 3022.77 ROOT version: 6.08/06	v6-08-06@v6-08-06; *******************************************************************************; stressMathCore Test Failed !!; CMake Error at /builddir/build/BUILD/root-6.08.06/cmake/modules/RootTestDriver.cmake:201 (message):; error code: 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/401:11487,message,message,11487,https://root.cern,https://github.com/root-project/root/pull/401,1,['message'],['message']
Integrability,"ests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:14653,Wrap,WrapperCall,14653,https://root.cern,https://github.com/root-project/root/issues/12771,1,['Wrap'],['WrapperCall']
Integrability,"esult.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 4. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. #### Wrong `IsDirectory()` from `TSystemDirectory::GetListOfFiles()` elements; ```console; $ mkdir bar; $ mkdir foodir; $ touch foodir/foo; $ touch foodir/bar; $ tree; .; ├── bar; └── foodir; ├── bar; └── foo. 2 directories, 2 files; $ root -l; root [0] for (const auto &&tsysfChildRaw: *TSystemDirectory(""foodir"", ""foodir"").GetL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:2043,interface,interfaces,2043,https://root.cern,https://github.com/root-project/root/issues/12350,8,['interface'],"['interface', 'interfaces']"
Integrability,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22952,wrap,wrapPoint,22952,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapPoint']
Integrability,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007fffa2affe20 in cling::MetaParser::isCommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16537,wrap,wrapPoint,16537,https://root.cern,https://github.com/root-project/root/issues/12372,1,['wrap'],['wrapPoint']
Integrability,"ets the path of the directory from its title (`fTitle`), and returns a `TList *`, each element in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1600,interface,interface,1600,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,"evel 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furtherm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2460,message,messages,2460,https://root.cern,https://github.com/root-project/root/issues/6421,1,['message'],['messages']
Integrability,"ewer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binary. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:1311,depend,dependency,1311,https://root.cern,https://github.com/root-project/root/issues/14595,1,['depend'],['dependency']
Integrability,"example makefile from tutorials/tmva should use the same c++ standard as; root (otherwise one faces errors from string views in the root headers; when building the tutorials). Note:; - I also changed in the global CMakeLists.txt `tutorial_file` into `artifact_file`, (which looks like a renaming variable mistake to me, but didn't go through the history); - This causes `tutorials/tmva/makefile` to not appear in artifact_files_builddir and thus the dependencies of move_artifacts. → I am not sure if I broke dependencies here. (WIP struggeling to install the configured makefile)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2547:450,depend,dependencies,450,https://root.cern,https://github.com/root-project/root/pull/2547,2,['depend'],['dependencies']
Integrability,external nlohmann/json.hpp is not forwarded as dependency or should be linked PRIVATE?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784:47,depend,dependency,47,https://root.cern,https://github.com/root-project/root/issues/6784,1,['depend'],['dependency']
Integrability,"feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, provided we can make TDataFrame sufficiently fast.; * A Python-based numpy export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; * The numpy interface is low-level for Python; we intend to furt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:1318,interface,interfaces,1318,https://root.cern,https://github.com/root-project/root/pull/2519,1,['interface'],['interfaces']
Integrability,"ferent numeric integration methods (more detail in the PR description).; It will also make porting the numerical integration with the Romberg method to the GPU much easier. The changes were validated with the following script:; ```c++; // runNumIntValidation.C. #include <RooFormulaVar.h>; #include <RooNumIntConfig.h>; #include <RooRealVar.h>. void testIntegrationMethod(int ndim, std::string const &label); {; RooRealVar x{""x"", ""x"", 0, 10};; RooRealVar y{""y"", ""y"", 0, 10};. std::string funcName = std::string(""func"") + label;; RooFormulaVar func{funcName.c_str(), ""x*std::sqrt(x) + y*std::sqrt(y) + x*y"", {x, y}};. std::cout << label << "":"" << std::endl;. RooNumIntConfig cfg(*func.getIntegratorConfig());. if (ndim == 2) {; cfg.method2D().setLabel(label.c_str());; }; if (ndim == 1) {; cfg.method1D().setLabel(label.c_str());; }. RooArgSet iset{x};; if (ndim > 1); iset.add(y);; std::unique_ptr<RooAbsReal> integ{func.createIntegral(iset, RooFit::NumIntConfig(cfg))};; double val = integ->getVal();; std::cout << std::setprecision(15) << val << std::endl;. std::cout << std::endl;; }. void runNumIntValidation(); {; RooHelpers::LocalChangeMsgLevel changeMsgLvl(RooFit::WARNING);. std::vector<std::string> methods1d{""RooIntegrator1D"", ""RooSegmentedIntegrator1D""};; std::vector<std::string> methods2d{""RooAdaptiveIntegratorND"", ""RooIntegrator2D"", ""RooSegmentedIntegrator2D""};. for (auto const &label : methods1d) {; testIntegrationMethod(1, label);; }. for (auto const &label : methods2d) {; testIntegrationMethod(2, label);; }; }; ```. The output with this PR is the same as with ROOT master:; ```; RooIntegrator1D:; 488.294986988088. RooSegmentedIntegrator1D:; 488.294680086881. RooAdaptiveIntegratorND:; 5029.82213550336. RooIntegrator2D:; 5029.84276464679. RooSegmentedIntegrator2D:; 5029.82506801992; ```. A new unit test that checks these numbers is also implemented. This is a follow up to #13350, which made it possible to implement different numeric integration plugins with the same class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:2273,integrat,integration,2273,https://root.cern,https://github.com/root-project/root/pull/13384,1,['integrat'],['integration']
Integrability,fixes the issues about dependencies mentioned in #16553,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16555:23,depend,dependencies,23,https://root.cern,https://github.com/root-project/root/pull/16555,1,['depend'],['dependencies']
Integrability,"flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:4809,Depend,DependInfo,4809,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Depend'],['DependInfo']
Integrability,"flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_create failed: Resource temporarily unavailable; 616573:sh: fork: retry: Resource temporar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3728,message,message,3728,https://root.cern,https://github.com/root-project/root/issues/16552,1,['message'],['message']
Integrability,"for copyright info; ==22765== Command: root.exe -e #define\ ClingWorkAroundPrintfIssues -e #define\ ClingWorkAroundLackOfModule -e #define\ ClingWorkAroundProxyConfusion -e #define\ ClingWorkAroundMissingDynamicScope -e #define\ ClingWorkAroundMultipleInclude -e #define\ ClingWorkAroundAutoParseUsingNamespace -e #define\ ClingWorkAroundExtraParensWithImplicitAuto -e #define\ ClingWorkAroundNoPrivateClassIO -e #define\ ClingWorkAroundBrokenUnnamedReturn -e #define\ ClingWorkAroundUnnamedDetection2 -e #define\ ClingWorkAroundUnnamedInclude -e #define\ ClingWorkAroundJITfullSymbolResolution -e #define\ ClingWorkAroundNoDotNamespace -e #define\ ClingWorkAroundNoDotInclude -e #define\ ClingWorkAroundTClassUpdateDouble32 -e #define\ ClingWorkAroundUnloadingVTABLES -q -l -b assertSparseSelection.C; ==22765== . Processing assertSparseSelection.C...; ==22765== Conditional jump or move depends on uninitialised value(s); ==22765== at 0x9D9A01A: llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F2CBA: (anonymous namespace)::SymbolicallyEvaluateGEP(llvm::GEPOperator const*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F35A1: (anonymous namespace)::ConstantFoldInstOperandsImpl(llvm::Value const*, unsigned int, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:1934,depend,depends,1934,https://root.cern,https://github.com/root-project/root/issues/11385,1,['depend'],['depends']
Integrability,"fs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:9571,wrap,wrapper,9571,https://root.cern,https://github.com/root-project/root/pull/13295,1,['wrap'],['wrapper']
Integrability,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:6027,interface,interfaces,6027,https://root.cern,https://github.com/root-project/root/pull/14039,1,['interface'],['interfaces']
Integrability,"g interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4249,interface,interface,4249,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"g.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:3205,message,message,3205,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,gInterpreter->Evaluate is a proper interface for printing purposes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2644:35,interface,interface,35,https://root.cern,https://github.com/root-project/root/pull/2644,1,['interface'],['interface']
Integrability,"git dpkg-dev cmake binutils libx11-dev libxpm-dev \; libxft-dev libxext-dev; sudo apt-get install gfortran libssl-dev libpcre3-dev \; xlibmesa-glu-dev libglew1.5-dev libftgl-dev \; libmysqlclient-dev libfftw3-dev libcfitsio-dev \; graphviz-dev libavahi-compat-libdnssd-dev \; libldap2-dev python-dev libxml2-dev libkrb5-dev \; libgsl0-dev libqt4-dev; sudo apt install gdb. sudo apt install libstdc++ # then add flag -stdlib=libstdc++. wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh; (echo ''; echo 'yes'; echo ''; echo 'yes';) | bash ./Miniconda3-latest-Linux-x86_64.sh; source .bashrc; source activate base; pip install numpy sklearn xgboost matplotlib. #################################### install projects #############################3; # Get ROOT; cd; git clone git@github.com:LucaZampieri/root.git. # build with gcc; mkdir build_gcc && cd build_gcc && cmake ../root && make -j8. ## Google bench; cd; # Check out the library.; git clone https://github.com/google/benchmark.git; # Benchmark requires Google Test as a dependency. Add the source tree as a subdirectory.; git clone https://github.com/google/googletest.git benchmark/googletest. # Go to the library root directory; cd benchmark ; mkdir build_gcc; cd build_gcc ; cmake -DCMAKE_BUILD_TYPE=Release ../root && make -j8. # XGBoost; cd; git clone --recursive https://github.com/dmlc/xgboost; cd xgboost; mkdir build_gcc; cd build_gcc; cmake -DCMAKE_BUILD_TYPE=Release ../. # Setup aliases; echo ""alias bdt='cd ~/root/tmva/tmva/src/BDT'"" >> ~/.bashrc; source .bashrc. # Add the folders missing from github (add them directly in github?) ; cd; bdt ; git checkout backend/FastInference; mkdir build. # For ROOT; echo 'export ROOTSYS=""~/root/""' >> ~/.bashrc; echo 'export ROOTBUILD=""~/build_gcc/""' >> ~/.bashrc; echo 'source $ROOTBUILD/bin/thisroot.sh' >> ~/.bashrc. echo 'export XGBOOST_ROOT=""~/xgboost""' >> ~/.bashrc. echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/xgboost/lib/' >> ~/.bashrc. source .bashrc; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4351:3427,depend,dependency,3427,https://root.cern,https://github.com/root-project/root/pull/4351,1,['depend'],['dependency']
Integrability,"gletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms); [ RUN ] RNTuple.SerializeFieldStructure; [ OK ] RNTuple.SerializeFieldStructure (0 ms); [ RUN ] RNTuple.SerializeEnvelope; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11159,message,message,11159,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"gtests can print errors using ROOT's message system, but these get; ignored completely.; Several problems could have been caught automatically, but they went undetected. This adds a default regex to all gtests that checks for; ""(Fatal|Error|Warning) in <"", unless an explicit FAILREGEX is passed to; ROOT_ADD_GTEST. ### How to fix the tests:; - [Easy, but unsafe] Add `FAILREGEX """"` to `ROOT_ADD_GTEST`. In that case, we will not grep for anything.; - [Safe] Use the macros from https://github.com/root-project/root/blob/master/test/unit_testing_support/ROOTUnitTestSupport.h and catch the diagnostics ; - Fix what triggers the warnings/errors",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591:37,message,message,37,https://root.cern,https://github.com/root-project/root/pull/5591,1,['message'],['message']
Integrability,"gui/src/TRootCanvas.cxx:1789; #10 0x00007f5b3e8464fd in TGFrame::HandleEvent(Event_t*) (this=0x55e767938e70, event=0x7f5b79adff40) at ../gui/gui/src/TGFrame.cxx:476; #11 0x00007f5b3e7f4c9a in TGClient::HandleEvent(Event_t*) (this=0x55e768de2290, event=0x7f5b79adff40) at ../gui/gui/src/TGClient.cxx:846; #12 0x00007f5b3e7f531d in TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:656; #13 TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:648; #14 0x00007f5b3e7f536b in TGClient::HandleInput() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:703; #15 0x00007f5b8dcb0ff8 in TUnixSystem::DispatchOneEvent(bool) (this=0x55e75ccfd080, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:1351,Wrap,WrapperCall,1351,https://root.cern,https://github.com/root-project/root/pull/9139,1,['Wrap'],['WrapperCall']
Integrability,"h ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; 1554fba5e2 [RF] More use of `snapshot()` overload with output parameter; 72cfdc9192 [RF] Bring back `RooStats::FeldmanCousins::SetData()`; faea4c9de4 [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:4363,wrap,wrapper,4363,https://root.cern,https://github.com/root-project/root/pull/12681,8,['wrap'],['wrapper']
Integrability,"h T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w Mixi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6445,wrap,wraps,6445,https://root.cern,https://github.com/root-project/root/issues/6939,1,['wrap'],['wraps']
Integrability,"h. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:18429,Wrap,WrapperCall,18429,https://root.cern,https://github.com/root-project/root/issues/15117,1,['Wrap'],['WrapperCall']
Integrability,"had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dicti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:1142,depend,depend,1142,https://root.cern,https://github.com/root-project/root/issues/14186,1,['depend'],['depend']
Integrability,"he generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, ev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:3105,wrap,wrapped,3105,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapped']
Integrability,"here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:153:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillParHelper<TH1D>, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillParHelper<TH1D>, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' reques",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:2152,Interface,InterfaceUtils,2152,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"his:; ```; y; B; y; xxxxxxxxxxxxxxxxxx A xxxxxx; y; y; ```; where A and B are the minima along the x and y axis respectively. This approach has the advantage that the number of function evaluations scales like with k * n, where k is the number of dimensions and n the number of steps per dimension, while a full grid search scales like n ^ k. However, this approach will fail miserably when x and y are correlated, trying this on the Rosenbrock function for instance gives terrible results (basically no improvement with respect to the starting value). ### What to do?. The current behavior of MnScan is not what people usually consider a scan, which most people understand as a full grid search over the whole N-dimensional space. It seems that MnScan is not really used in ROOT, but I may be mistaken. If it is not really used, I would suggested to keep the name MnScan and change the implemenation to do a full hypercube scan. I am strongly convinced that MnScan should do a full grid search instead of what it currently does, because the current implementation is fairly pointless for most real-world functions which have correlations. If MnScan has a use case that I am not aware of, then I propose to add a new Minimizer, MnHyperScan (or similar name), which implements the full scan. ### Other issues with current MnScan. - One cannot configure the number of steps taken per dimension when MnScan is called through the minimizer interface (MnApplication). The maxcalls option should be used for this.; - A gradient and second derivatives are computed for the starting values, only to be discarded. This is wasteful.; - The scan returns EDM = 0, which is very misleading. It should either return inf or NaN, to indicate that the EDM is invalid. Ideally, a proper EDM should be calculated for the obtained minimum after the scan.; - MnScan always builds a vector of all the (parameter, function value) pairs obtained during the scan, but that vector is discarded after the run. This is wasteful.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6862:2361,interface,interface,2361,https://root.cern,https://github.com/root-project/root/issues/6862,1,['interface'],['interface']
Integrability,hod_vectorcall () from /lib64/libpython3.13.so.1.0; #35 0x00007f3f14178546 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #36 0x00007f3f1423d53d in _PyObject_VectorcallDictTstate () from /lib64/libpython3.13.so.1.0; #37 0x00007f3f14291f67 in slot_tp_call () from /lib64/libpython3.13.so.1.0; #38 0x00007f3f1415ea6b in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #39 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #40 0x00007f3f141a5d0b in slot_tp_init () from /lib64/libpython3.13.so.1.0; #41 0x00007f3f1415e9c5 in _PyObject_MakeTpCall () from /lib64/libpython3.13.so.1.0; #42 0x00007f3f1417d188 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #43 0x00007f3f1423f8eb in PyEval_EvalCode () from /lib64/libpython3.13.so.1.0; #44 0x00007f3f1425afe4 in builtin_exec () from /lib64/libpython3.13.so.1.0; #45 0x00007f3f1418e3e7 in cfunction_vectorcall_FASTCALL_KEYWORDS () from /lib64/libpython3.13.so.1.0; #46 0x00007f3f14160f57 in PyObject_Vectorcall () from /lib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. CMake Error at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 129; ```. ### Reproducer. Compile root with Python 3.13. Run tests. ### ROOT version. 6.32.00. ### Installation method. RPM package build from source. ### Operating system. Fedora 41 (rawhide). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:25409,message,message,25409,https://root.cern,https://github.com/root-project/root/issues/15799,1,['message'],['message']
Integrability,"https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2143,Depend,Dependabot,2143,https://root.cern,https://github.com/root-project/root/pull/11864,1,['Depend'],['Dependabot']
Integrability,"https://github.com/root-project/root/pull/16768 seems to have unexpected consequence on ATLAS workflow, see https://github.com/root-project/root/pull/16768#discussion_r1829743338. Per @amete :. > This is in a mutli-chain workflow. The first step creates an RNTuple that is read by the second step. We throw on the very first event of the second step, seemingly related to reading an empty top-level field, e.g. (the messages need to be improved but that's independent):. ```; 12:37:41 ERROR (pool):; 12:37:41 Unknown Source> field iteration over empty fields is unsupported: xAOD__EventInfo_v1_EventInfo; 12:37:41 At:; 12:37:41 ROOT::Experimental::RNTupleGlobalRange ROOT::Experimental::Internal::GetFieldRange(const ROOT::Experimental::RFieldBase&, const RPageSource&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RNTupleView.cxx:42]; 12:37:41 ; 12:37:41 EventData(xAOD::EventInfo_v1/EventInfo)> Cannot open ROOT container(Tree/Branch); 12:37:41 StorageSvc 0 0 ERROR Could not read object: [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:416,message,messages,416,https://root.cern,https://github.com/root-project/root/issues/16826,1,['message'],['messages']
Integrability,"https://github.com/root-project/root/pull/7506 for v6-24. With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7524:199,inject,injecting,199,https://root.cern,https://github.com/root-project/root/pull/7524,1,['inject'],['injecting']
Integrability,"ib:arm64e+0x52ba4); #1 0x1062c0d60 in ROOT::Experimental::Detail::RFieldBase::GenerateValue() RField.cxx:332; #2 0x1062efd48 in ROOT::Experimental::RNTupleModel::CreateEntry() const RNTupleModel.cxx:147; #3 0x104699f00 in main ao2dToAO2NT.cxx:145; #4 0x186307f24 (<unknown module>). SUMMARY: AddressSanitizer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:8893,message,message,8893,https://root.cern,https://github.com/root-project/root/issues/13996,1,['message'],['message']
Integrability,"icPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15751:1825,integrat,integrator,1825,https://root.cern,https://github.com/root-project/root/issues/15751,6,['integrat'],['integrator']
Integrability,"if(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}). doxygen_add_docs(doc ALL; ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR}/doc/cmake.dox ${CMAKE_SOURCE_DIR}/usb; ALLOW_DUPLICATE_CUSTOM_TARGETS; #USE_STAMP_FILE; COMMENT ""Generating doxygen documentation for ${PROJECT_NAME}""; ). # install generated files; #install(; # DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc/html; # TYPE DOC; # OPTIONAL # because available only after ""make doc""; #); else(); message(FATAL_ERROR ""Doxygen is needed to build the documentation.""); endif(). add_custom_target(dox ALL; #DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt; ); include(make_documentation); PARSE_CMAKE_DOCUMENTATION(INCLUDES ""${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.txt"" EXCLUDES ""${CMAKE_CURRENT_BINARY_DIR}/*"" ); WRITE_CMAKE_DOCUMENTATION( ""${CMAKE_CURRENT_SOURCE_DIR}/cmake.dox"" SORTED ); endif(); ```; ### Aditional context; https://github.com/root-project/root/issues/8950; https://github.com/root-project/root/issues/8947; https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:3370,message,message,3370,https://root.cern,https://github.com/root-project/root/issues/8999,3,"['DEPEND', 'message']","['DEPENDS', 'message']"
Integrability,"ify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXX",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:5692,interface,interface,5692,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"ile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9846,message,message,9846,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:7485,depend,depend,7485,https://root.cern,https://github.com/root-project/root/issues/7893,1,['depend'],['depend']
Integrability,"imental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of typeinfo for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:3919,interface,interface,3919,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"imilar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:965,message,message,965,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,imt should depend on MultiProc for TExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7040:11,depend,depend,11,https://root.cern,https://github.com/root-project/root/pull/7040,1,['depend'],['depend']
Integrability,"in CIFactory:; - Add -fno-threadsafe-statics flag (for Windows only), to prevent potential unresolved symbols at run-time. in MetaProcessor::readInputFromFile:; - add required std::ifstream::binary flag when opening the std::ifstream; - add missing backslashes. in PlatformWin:; - properly format error messages; - in IsDLL(): check and return false if the file size is 0; - fix _CxxThrowException symbol name (not fully understood - to be reviewed); - filter out a couple of system dlls when looking for symbols",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607:303,message,messages,303,https://root.cern,https://github.com/root-project/root/pull/1607,1,['message'],['messages']
Integrability,"in_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5396; From [`target_compile_options` documentation](https://cmake.org/cmake/help/latest/command/target_compile_options.html#arguments): ""New in version 3.11: Allow setting INTERFACE items on IMPORTED targets.""; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:6340,INTERFACE,INTERFACE,6340,https://root.cern,https://github.com/root-project/root/issues/7654,3,['INTERFACE'],['INTERFACE']
Integrability,inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1822,message,message,1822,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether the TMapFile will be created; 5. Assuming the ""hisprod"" works and creates a ""hsimple.map"" file, run ""./hisplot"" in a new Terminal to check whether the TMapFile and TApplication could work together. In the Makefile, it is required to have the link of -lNew or --new for running TMapFile. With different combinations of ROOT and operating versions, the error message might be different. . ### ROOT version. Ubuntu 20.04.2 LTS; ROOT 6.12.06 to 6.28.04. ### Installation method. both of compiling and binary package. ### Operating system. Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:2571,message,message,2571,https://root.cern,https://github.com/root-project/root/issues/13511,1,['message'],['message']
Integrability,"ing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:; 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4971,message,message,4971,https://root.cern,https://github.com/root-project/root/issues/6597,1,['message'],['message']
Integrability,"inor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1515,rout,routines,1515,https://root.cern,https://github.com/root-project/root/issues/14555,1,['rout'],['routines']
Integrability,io: Add version number to missing StreamerInfo record error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4374:60,message,message,60,https://root.cern,https://github.com/root-project/root/pull/4374,1,['message'],['message']
Integrability,"ion whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which contains the MinuitFcnGrad, which contains the LikelihoodWrapper. A comment in MinuitFcnGrad.h refers to this, reminding future devs to also flip offsets_reset_ when (un)setting squared weights.; * LikelihoodWrapper now holds the likelihood_type. This cleans up some code duplication in LikelihoodSerial and LikelihoodJob, which previously used the type only in their ctors, and avoids dynamic_casts later, e.g. on when calculating offsets.; * A RooSubsidiaryL can now also be computed with LikelihoodSerial and LikelihoodJob; this case was still missing in their evaluation functions.; * The LikelihoodSerial, LikelihoodJob and LikelihoodGradientJob ""ConstrainedAndOffset"" test cases used the wrong argument for the constrained parameter. These are now corrected from alpha_bkg_obs_A to become alpha_bkg_A.; * In LikelihoodJobTest, the added test case ""UnbinnedGaussian1DSelectedParameterValues"" shows where splitting over events can lead to bit-wise differences",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:3453,interface,interface,3453,https://root.cern,https://github.com/root-project/root/pull/12202,1,['interface'],['interface']
Integrability,"itic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1523,integrat,integrator,1523,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrator']
Integrability,"its between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:1370,integrat,integrator,1370,https://root.cern,https://github.com/root-project/root/issues/6557,4,"['integrat', 'interface', 'message']","['integrator', 'interface', 'message']"
Integrability,"iz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time on some experiments (data + code available on demand from Auger group, ask me). I am available for help in testing and possibly integrating and maintaining this addition, just let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:2128,integrat,integrating,2128,https://root.cern,https://github.com/root-project/root/pull/40,1,['integrat'],['integrating']
Integrability,"ize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation for code-squashing.; f230374eb5 [RF] Enable passing of gradient function directly to RooMinimizer; 0e5633535a [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:2316,depend,dependency,2316,https://root.cern,https://github.com/root-project/root/pull/12681,4,['depend'],['dependency']
Integrability,"k since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce; * On ROOT version 6.22/08; ```; $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] Take(v, 2); (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }; root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);; root [3] firstTwo; (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; root [4] auto firstTwo2 = Take(v, 2);; ROOT_prompt_4:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'; |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>; | |-DeclStmt 0x38829b8 <line:1:1, col:28>; | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'; | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x3882960 <col:26> 'int' 2; | `-NullStmt 0x38829d0 <line:2:1>; |-AnnotateAttr 0x38827f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x38828c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP"". *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f0bd055ce56 in wait4 () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #1 0x00007f0bd04dc447 in do_system () from /nix/store/jsp3h3wpzc842j0rz61m5ly71ak6qgdn-glibc-2.32-54/lib/libc.so.6; #2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:1659,depend,dependent,1659,https://root.cern,https://github.com/root-project/root/issues/9261,3,['depend'],['dependent']
Integrability,"keModelAndMeasurementFast(RooStats::HistFactory::Measurement&) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libHistFactory.so; ```. Note that this happens only for some setups, so I tried to debug it a bit and see what is special about the setups that crash. I will briefly describe what I found out:. We use AddPreprocessFunction() method to reparametrise our likelihood, this generally seems to work, but for some special cases this seems to cause problems. I created the XML files for the problematic setups and tried to use `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10840:3643,Depend,Dependents,3643,https://root.cern,https://github.com/root-project/root/issues/10840,1,['Depend'],['Dependents']
Integrability,"kes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necess",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:3002,depend,depends,3002,https://root.cern,https://github.com/root-project/root/pull/8596,1,['depend'],['depends']
Integrability,"l observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:1824,synchroniz,synchronization,1824,https://root.cern,https://github.com/root-project/root/pull/12202,1,['synchroniz'],['synchronization']
Integrability,"l::RNTupleReader;; using ROOT::Experimental::RNTupleWriter;. void modelextension() {; {; auto model = RNTupleModel::Create();. auto fld = model->MakeField<float>(""fld"", 42.0);. auto ntuple = RNTupleWriter::Recreate(std::move(model), ""ntuple"",; ""modelext.root"");. ntuple->Fill();; ntuple->CommitCluster();. auto modelUpdater = ntuple->CreateModelUpdater();. modelUpdater->BeginUpdate();; auto extField = modelUpdater->MakeField<std::vector<float>>(""extVecFld"", std::vector<float>{1., 2., 3.});; modelUpdater->CommitUpdate();. ntuple->Fill();; ntuple->CommitCluster();; }. auto ntuple = RNTupleReader::Open(""ntuple"", ""modelext.root"");; ntuple->PrintInfo(ENTupleInfo::kStorageDetails);. auto inspector = RNTupleInspector::Create(""ntuple"", ""modelext.root"");; }; ```; Running this macro will result in an exception with the following message:; ```txt; compression setting mismatch between column ranges (505 vs 0); ```; The output of `PrintInfo` is as follows:; ```txt; ============================================================; NTUPLE: ntuple; Compression: 505; ------------------------------------------------------------; # Entries: 2; # Fields: 4; # Columns: 3; # Alias Columns: 0; # Pages: 5; # Clusters: 2; Size on storage: 36 B; Compression rate: 1.00; Header size: 110 B; Footer size: 304 B; Meta-data / data: 11.500; ------------------------------------------------------------; CLUSTER DETAILS; ------------------------------------------------------------; # 0 Entry range: [0..0] -- 1; # Pages: 2; Size on storage: 12 B; Compression: 1.00; # 1 Entry range: [1..1] -- 1; # Pages: 3; Size on storage: 24 B; Compression: 1.00; ------------------------------------------------------------; COLUMN DETAILS; ------------------------------------------------------------; extVecFld [#0] -- SplitIndex64 {id:1}; # Elements: 2; # Pages: 2; Avg elements / page: 1; Avg page size: 8 B; Size on storage: 16 B; Compression: 1.00; ............................................................; extVecFld._0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15661:2953,message,message,2953,https://root.cern,https://github.com/root-project/root/issues/15661,1,['message'],['message']
Integrability,"lar expression found in output. Regex=[: error:] 30.90 sec. Processing /home/vvassilev/workspace/sources/root/tutorials/dataframe/df004_cutFlowReport.C...; In module 'std' imported from input_line_1:1:; /usr/include/c++/7/string_view:88:41: error: static data member 'npos' already has an initializer; static constexpr size_type npos = size_type(-1);; ^; /usr/include/c++/7/string_view:319:43: note: in instantiation of static data member 'std::basic_string_view<char, std::char_traits<char> >::npos' requested here; rfind(_CharT __c, size_type __pos = npos) const noexcept;; ^; /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/include/ROOT/RDF/RInterface.hxx:468:14: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::SnapshotImpl<double, int>' requested here; return SnapshotImpl<ColumnTypes...>(treename, filename, columnList, options);; ^; input_line_102:2:206: note: in instantiation of function template specialization 'ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::Snapshot<double, int>' requested here; *reinterpret_cast<ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager>>*>(0x7fffffff9598) = reinterpret_cast<ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase>*>(0x7fffffff95d0)->Snapshot<__rdf1::b13_type, __rdf1::b24_type>(""myTree"", ""df004_cutFlowReport.root"", *reinterpret_cast<std::vector<std::string>*>(0x7fffffff9940),*reinterpret_cast<ROOT::RDF::RSnapshotOptions*>(0x7fffffff9a40));; ^; /usr/include/c++/7/string_view:88:41: note: previous initialization is here; static constexpr size_type npos = size_type(-1);; ^; terminate called after throwing an instance of 'std::runtime_error'; what(): ; An error occurred while jitting in Snapshot. The lines above might indicate the cause of the crash. CMake Error at /home/vvassilev/workspace/builds/root_runtime_modules_builtin_clang_debug/RootTestDriver.cmake:238 (message):; error code: Child aborted. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4437:2403,message,message,2403,https://root.cern,https://github.com/root-project/root/pull/4437,1,['message'],['message']
Integrability,"ld return me an empty TTree, even though the job reported that it selected some events. For a while I was not able to find a handle on what triggered this problem, as it seemed quite random. (The same job would not always return empty trees.). I think I now understand what's going on. It has to do with the issue in TFileMerger that was discovered in ATLAS production jobs a long time ago. When TFileMerger is given multiple files, the first of which doesn't have any branches in it, the merged output file will not have any branches either. Even if the rest of the files given to TFileMerger did have some structure. In my PROOF jobs this happens because my code only sets up the format of its output TTree when it opens its first file. The output TTree format depends a bit on what branches are available on the input, so I can't do this any sooner. But PROOF in some cases will not process any events in some of its workers. When this happens, it's actually these workers that return their output files to the PROOF master first. Files which hold completely empty TTree-s. This made my jobs random, as PROOF would not always do this, sometimes (depending on the state of our cluster) it would actually process some events on all of the workers in this job. The problem can be demonstrated very easily. Attached is a macro that does this. (The macro was first written to demonstrate a problem with merging a file into a file on XRootD, but this issue doesn't depend on where the file is put.). While I may be able to circumvent the problem in my analysis code for now (by initializing the TTree format earlier in the code), this merging problem would be very good to solve. As I wrote at the beginning, the ATLAS production system also has to have extra code in place which knows not to give files with empty TTrees to hadd as the first file. Cheers,; Attila. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558:1637,depend,depending,1637,https://root.cern,https://github.com/root-project/root/issues/14558,2,['depend'],"['depend', 'depending']"
Integrability,"ld/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using Keras since tensorflow is not installed; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using PyTorch since torch is not installed; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7638,message,message,7638,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"leView` advertises a defaulted move constructor, but unconditionally frees state in it's destructor causing a double free in the destructor of the second instance. This is caused by the call to `fField.DestroyValue(fValue);` in the dtor. `fValue` is copyable and moveable since the copy special member functions are not deleted, but contains pointers to allocated memory which are not duplicated during copies or transferred during a move (with leaving the moved from pointer `nullptr`) and thus shared between two instances of `RNTupleView`. Although the documentation of `RFieldValue`, the type of `fValue`, claims that the class owns no memory, the class receives a heap allocated value during the call chain of the constructor initialization list of `RNTupleView`: `fValue(fField.GenerateValue())`. Since the ownership model is convoluted to me, I cannot propose an easy fix. From the perspective of `RNTupleView`, `RFieldValue` would need a user-defined move ctor transferrign ownership of the heap-allocated pointer and `RNTupleView`'s dtor needs to be able to detect and handle a moved-from state. But the former is against the documented intent of the class, so I need to leave this to the designers of those classes :). ### Expected behavior; The move ctor of `RNTupleView` should let the dtors of both `RNTupleView` instances finish correctly. ### To Reproduce. Example:; ```c++; auto ntuple = RE::RNTupleReader::Open(RE::RNTupleModel::Create(), ""DecayTree"", ""B2HHH~none.ntuple"");; {; auto viewH1IsMuon = ntuple->GetView<int>(""H1_isMuon"");; {; auto copy{std::move(viewH1IsMuon)};; } // dtor for copy, frees shared state; } // dtor for viewH1IsMuon, double free; ```. I assume the problem does not depend on the input file, so it can probably be reproduced in a smaller setup. ### Setup; ```; bgruber@graviola:$ root --version; ROOT Version: 6.29/01; Built for linuxx8664gcc on Jan 16 2023, 14:47:00; From remotes/origin/HEAD@v6-29-01-212-gc8ad008463; ```; Built with g++-12 on Ubuntu 22.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12136:1735,depend,depend,1735,https://root.cern,https://github.com/root-project/root/issues/12136,1,['depend'],['depend']
Integrability,"lease\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; This has also be fixed in LLVM. See https://github.com/llvm/llvm-project/commit/aa5492e7b218b7c79bf975ff751631392b03cecf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:11309,message,message,11309,https://root.cern,https://github.com/root-project/root/pull/12523,3,['message'],['message']
Integrability,"ler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #16 0x00007f58658504a8 in Warning(char const*, char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #17 0x00007f5865881acf in ROOT::TGenericClassInfo::TGenericClassInfo(char const*, int, char const*, int, std::type_info const&, ROOT::Internal::TInitBehavior const*, TClass* (*)(), TVirtualIsAProxy*, int, int) (); from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #18 0x00007f5861aadcae in ROOT::GenerateInitInstanceLocal(edm::Wrapper<edm::Association<std::vector<reco::TrackExtra, std::allocator<reco::TrackExtra> > > > const*) [clone .constprop.0] (); from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #19 0x00007f5861aab4c6 in _GLOBAL__sub_I_RecoE2EDataFormats_xr.cc () from /build/mkortela/debug/debug2/CMSSW_12_4_8/lib/slc7_amd64_gcc10/libRecoE2EDataFormats.so; #20 0x00007f586644c9c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f586645159e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #23 0x00007f5866450b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f5865042fab in dlopen_doit () from /lib64/libdl.so.2; #25 0x00007f586644c7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #26 0x00007f58650435ad in _dlerror_run () from /lib64/libdl.so.2; #27 0x00007f5865043041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #28 0x00007f5866483946 in edmplugin::SharedL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:4960,Wrap,Wrapper,4960,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Wrap'],['Wrapper']
Integrability,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:1892,depend,depending,1892,https://root.cern,https://github.com/root-project/root/issues/7284,4,['depend'],"['depend', 'depending', 'depends']"
Integrability,libNew is a custom memory allocator used in ROOT to output more information about memory pressure. It essentially overrides the new and delete operators. The functionality of libNew is only available in *rootn.exe* and libNew is statically linked to the binary. In root-project/root#4717 we discovered that dlopening libNew at random time can trigger earthquakes because it allows the dynamic linker to *sometimes* resolve new and delete to the symbols from libNew and libc++. Since libNew was not designed to be dlopened we should make it a static library to enforce this protocol more strongly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722:573,protocol,protocol,573,https://root.cern,https://github.com/root-project/root/pull/4722,1,['protocol'],['protocol']
Integrability,"licates. ### Description. One of the overloads of the function abuses the logic of the class:. https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataLoader.cxx#L126-L133. In this overload a `DatasetInfo` object is created on the heap (as a temporary). Then `DatasetManager::AddDatasetInfo` takes the input argument as l-value ref and finally stores the `DatasetInfo` object as a shallow-reference in the internal `TList` data member `fDataSetInfoCollection`. This data member is not owning, thus at destruction time it will not take care of deleting its items. . https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataSetManager.cxx#L105-L113. At the same time, the `DataSetInfo` object was created with `new` but never deleted. This logic is faulty and is related to the following report by valgrind:. ```; ==290973== Conditional jump or move depends on uninitialised value(s); ==290973== at 0x2C720F3A: TMVA::DataLoader::AddTree(TTree*, TString const&, double, TCut const&, TMVA::Types::ETreeType) (DataLoader.cxx:360); ==290973== by 0x2C72113C: TMVA::DataLoader::AddSignalTree(TTree*, double, TMVA::Types::ETreeType) (DataLoader.cxx:373); ==290973== by 0x4F9573B: ???; ==290973== by 0x4F9107E: ???; ==290973== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/vpadulan/Programs/rootproject/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:986,depend,depends,986,https://root.cern,https://github.com/root-project/root/issues/14433,1,['depend'],['depends']
Integrability,"linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460; root [2] &RooArgSet::operator delete; (void (*)(void *) noexcept) Function @0x7f94fd5e3900; ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:3219,interface,interface,3219,https://root.cern,https://github.com/root-project/root/issues/10203,1,['interface'],['interface']
Integrability,"ll [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1693,message,message,1693,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11153:1092,message,message,1092,https://root.cern,https://github.com/root-project/root/pull/11153,1,['message'],['message']
Integrability,log message was missing a closing parenthesis,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1859:4,message,message,4,https://root.cern,https://github.com/root-project/root/pull/1859,1,['message'],['message']
Integrability,"ls/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *.........................",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9623,message,message,9623,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"lvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:2592,message,message,2592,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"m name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, even the global namespace. What is a sane solution here?; - [ ] How many copies we are doing finally? What is the performance?; - [ ] What happens in MT scenarios? Put in a test case!; - [ ] We have to ship the public cppyy interface with the ROOT headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:3908,wrap,wrapper,3908,https://root.cern,https://github.com/root-project/root/pull/3488,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"m/Support/type_traits.h(79,1): warning C4624: 'llvm::detail::copy_construction_triviality_helper<T>': destructor was implicitly defined as deleted [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits(585): message : see reference to class template instantiation 'llvm::detail::copy_construction_triviality_helper<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/Support/type_traits.h(100): message : see reference to class template instantiation 'std::is_copy_constructible<llvm::detail::copy_construction_triviality_helper<T>>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(312): message : see reference to class template instantiation 'llvm::is_trivially_copy_constructible<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; 04:42:17 T=clang::FixItHint; 04:42:17 ]; 04:42:17 C:\build\night\LABEL\windows64\SPEC\default\V\master\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(1168): message : see reference to class template instantiation 'llvm::SmallVectorImpl<T>' being compiled [C:\build\night\LABEL\windows64\SPEC\default\V\master\build\interpreter\cling\lib\Utils\obj.clingUtils.vcxproj]; 04:42:17 with; 04:42:17 [; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12379:1034,message,message,1034,https://root.cern,https://github.com/root-project/root/pull/12379,2,['message'],['message']
Integrability,mOutsideS' in /opt/root_src/geom/geom/src/TGeoCone.cxx:503; 9: Assuming 'dz' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:365; 11: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 12: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:370; 13: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 14: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:379; 15: Assuming 'ro1' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 16: '?' condition is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:393; 17: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 18: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:397; 19: Assuming 'rin' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 20: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:400; 21: Assuming 'rout' is <= 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 22: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:406; 23: 'in' is false in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 24: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:410; 25: 'inrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 26: Taking false branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:443; 27: 'hasrmin' is true in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 28: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:459; 29: Assuming 'delta' is > 0 in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 30: Taking true branch in /opt/root_src/geom/geom/src/TGeoCone.cxx:461; 31: The left operand of '+' is a garbage value in /opt/root_src/geom/geom/src/TGeoCone.cxx:462; /opt/root_src/geom/geom/src/TGeoCone.cxx:476:22: warning: The left operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'i' is < 'vecsize' in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:17616,rout,rout,17616,https://root.cern,https://github.com/root-project/root/issues/7428,1,['rout'],['rout']
Integrability,"mbinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unzipped directory, type ""make"" to compile the files; 3. Run ""./appdemo"" in a terminal to check whether TApplication works properly; 4. Run ""./hisprod"" in a termianl to check whether t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:1157,message,message,1157,https://root.cern,https://github.com/root-project/root/issues/13511,1,['message'],['message']
Integrability,"md64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:; While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:5402,interface,interface,5402,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"ment in which represents the child item (with basename `file` and path `sdirpath`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1708,interface,interface,1708,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/VariableTransformBase.h: mutab,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2585,message,message,2585,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"mldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-rbox-py (Failed); Errors while running CTest; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:2171,message,message,2171,https://root.cern,https://github.com/root-project/root/pull/9035,1,['message'],['message']
Integrability,"ms (not macOS), this makes the MPFE based parallelization a lot faster by pinning processes to physical CPU cores.; 3. To accomodate the new minimization frameworks, RooMinimizer was changed quite a bit as well. It is still backwards compatible, but the new functionality can be accessed through a new `create` template factory function. This template function allows users to pass in their own calculation back-ends, e.g. for calculating on GPUs or in autograd enabled frameworks. The commit history also contains the proof of concept version, the benchmark results of which were presented at [ACAT19](https://indico.cern.ch/event/708041/contributions/3276177/) and [CHEP19](https://doi.org/10.1051/epjconf/202024506027) (and [preliminary results at the 2018 ROOT Users workshop in Sarajevo](https://indico.cern.ch/event/697389/contributions/3062028/)). That version was redesigned starting from 2019 to better integrate with the rest of the code and at the same time untangle the test statistics classes to conceptually bring them closer to the math, instead of the more implementation-detail oriented existing design (RooAbsTestStatistic et al.). The new packages include the following tests, which should probably still be added to the testing infrastructure somehow:. 1. MultiProcess:; 1. test_RooFitMultiProcess_Messenger; 2. test_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:3703,integrat,integrate,3703,https://root.cern,https://github.com/root-project/root/pull/8294,1,['integrat'],['integrate']
Integrability,"mtbb201_parallelHistoFill.C fails on Windows x86 and VS v17.9 with the following error:; ```; IncrementalExecutor::executeFunction: symbol '_Thrd_sleep_for@4' unresolved while linking [cling interface function]!; ```; Due to this line:; ```; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14936:191,interface,interface,191,https://root.cern,https://github.com/root-project/root/pull/14936,1,['interface'],['interface']
Integrability,mva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1513,message,message,1513,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"n help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_types.h`: maybe we could replace this with @guitargeek's new configuration structs.; 4. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test. Finally, one thing that in an ideal world I would have liked to do is add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, I'm rather short on time right now, and these things almost always tend to take longer than one expects, so I'm hesitant to build it now. The **advantage** would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the `MultiProcess` minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in [""PR 7"" (see overview)](https://whimsical.com/roofit-multiprocess-teststatistics-pr-dependencies-QP47k9PyS24VuboQUP5W6P). So, up for discussion, two choices: **A:** add ""`LikelihoodGradientSerial`"" class (based on `RooGradMinimizerFcn`) so we can add an integration test in this PR; **B:** wait for the integration test in PR 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:3180,depend,dependencies-,3180,https://root.cern,https://github.com/root-project/root/pull/8700,3,"['depend', 'integrat']","['dependencies-', 'integration']"
Integrability,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:8118,interface,interface,8118,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:3613,message,message,3613,https://root.cern,https://github.com/root-project/root/issues/14155,1,['message'],['message']
Integrability,"nStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:5329,depend,depends,5329,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"nal/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml; In file included from input_line_8:57:; In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]; #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h""; ^; Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a ; dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'.; Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic.; While building module 'CalibTrackerRecords':; While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:4010,interface,interface,4010,https://root.cern,https://github.com/root-project/root/issues/11765,1,['interface'],['interface']
Integrability,nclude -I/bld6/root/src/core/base/inc -I/bld6/root/src/core/base/v7/inc -I/bld6/root/src/core/clib/inc -I/bld6/root/src/core/clingutils/inc -I/bld6/root/src/core/clingutils/res -I/bld6/root/src/core/cont/inc -I/bld6/root/src/core/foundation/inc -I/bld6/root/src/core/foundation/v7/inc -I/bld6/root/src/core/foundation/res -I/bld6/root/src/core/gui/inc -I/bld6/root/src/core/meta/inc -I/bld6/root/src/core/rint/inc -I/bld6/root/src/core/textinput/inc -I/bld6/root/src/core/textinput/src -I/bld6/root/src/core/thread/inc -I/bld6/root/src/core/zip/inc -I/bld6/root/src/core/lzma/inc -I/bld6/root/bld_nvhpc/include -I/bld6/root/src/core/lz4/inc -I/bld6/root/src/core/zstd/inc -I/bld6/root/src/builtins/zstd -I/bld6/root/src/core/unix/inc -I/bld6/root/src/core/unix/../clib/res -I/usr/include -I/bld6/root/src/builtins/xxhash -I/bld6/root/src/builtins/lz4 ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14250:5699,Message,MessageTypes,5699,https://root.cern,https://github.com/root-project/root/issues/14250,1,['Message'],['MessageTypes']
Integrability,"ne 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: tutorial-tmva-TMVA_CNN_Classification-py ............................***Failed 1.33 sec; TMVA_CNN_Classificaton:0: RuntimeWarning: Skip using K",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:7101,wrap,wrapping,7101,https://root.cern,https://github.com/root-project/root/issues/12429,1,['wrap'],['wrapping']
Integrability,"nformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1402,message,message,1402,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,night/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/rint/src/TRint.cxx:461:22; #19 0x514b4a in main /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/main/src/rmain.cxx:84:12; #20 0x7f885647ed84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f92f9985bf742e6e1ea71e6851f27783568e23d4). SUMMARY: AddressSanitizer: heap-use-after-free /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8 in TClass::Size() const; Shadow bytes around the buggy address:; 0x0c2c800baf30: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa; 0x0c2c800baf40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800baf50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd; =>0x0c2c800baf80: fd fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd; 0x0c2c800baf90: fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c2c800bafb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c2c800bafd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07 ; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==1544443==ABORTING. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 1 but expected 0. Standard Output. -- TEST COMMAND --,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:22405,message,message,22405,https://root.cern,https://github.com/root-project/root/issues/12715,1,['message'],['message']
Integrability,"not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3334,message,message,3334,https://root.cern,https://github.com/root-project/root/issues/16242,1,['message'],['message']
Integrability,nsistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1273,message,message,1273,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"nst*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #13 0x00007f6ff46276da in TCling::TCling(char const*, char const*, char const* const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007f6ff4628c20 in CreateInterpreter () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007f70030165d9 in TROOT::InitInterpreter() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007f7003016a8f in ROOT::Internal::GetROOT2() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007f70035e68a2 in __static_initialization_and_destruction_0(int, int) [clone .constprop.376] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libcppyy_backend3_8.so; #18 0x00007f704e7d19c3 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #19 0x00007f704e7d659e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #20 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #21 0x00007f704e7d5b8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #22 0x00007f704dbf1fab in dlopen_doit () from /lib64/libdl.so.2; #23 0x00007f704e7d17d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #24 0x00007f704dbf25ad in _dlerror_run () from /lib64/libdl.so.2; #25 0x00007f704dbf2041 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; ... (more Python-related stack); ```. Installing the ROOT dependencies in the system fixed the error. I ran the following command:. `sudo yum install git make cmake3 gcc-c++ gcc binutils libX11-devel libXpm-devel libXft-devel libXext-devel python openssl-devel`. but I don't know exactly what dependency fixed it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157:5068,depend,dependencies,5068,https://root.cern,https://github.com/root-project/root/issues/8157,2,['depend'],"['dependencies', 'dependency']"
Integrability,"nt); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:2895,depend,dependencies,2895,https://root.cern,https://github.com/root-project/root/issues/10107,1,['depend'],['dependencies']
Integrability,"nterpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : No constructor could take the source type, or constructor overload resolution was ambiguous [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3521,19): message : or 'std::string std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:8316,message,message,8316,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"obably have; incompatible bins. Rather than wait for failures like. `Error in <Merge>: Cannot merge histograms - limits are inconsistent`. that happen only when the distributed execution has already started and; may be hidden inside worker logs, raise an error in the local user; machine. An example of the error raised with this change: running this snippet; ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; from dask.distributed import Client, LocalCluster. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":; df = RDataFrame(10, daskclient = create_connection()).Define(""x"",""rdfentry_""); m = ROOT.RDF.TH1DModel(""name"",""title"",10,0,10); df.Histo1D(m, ""x""); print(""After first Histo1D""); df.Histo1D((""name"",""title"",10,0,10), ""x""); print(""After second Histo1D""); df.Histo1D(""x""); print(""After third Histo1D""); ```; results in; ```; After first Histo1D; After second Histo1D; Traceback (most recent call last):; File ""/home/vpadulan/projects/rootcode/distrdf-histo-nomodel/test.py"", line 17, in <module>; df.Histo1D(""x""); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Proxy.py"", line 240, in _create_new_op; op = Operation.create_op(self.proxied_node._new_op_name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 118, in create_op; return SUPPORTED_OPERATIONS[name](name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 60, in __init__; raise TypeError(textwrap.fill(message)); TypeError: A histogram was created without a model. This cannot work in; distributed mode because histograms resulting from different tasks; would have incompatible bins. Please make sure to pass the histogram; model as the first argument to the function. See the RDataFrame docs; for help.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:1888,message,message,1888,https://root.cern,https://github.com/root-project/root/pull/10368,1,['message'],['message']
Integrability,"oducer. ```c++; RooRealVar x{""x"", ""x"", 0, 1};; RooRealVar y{""y"", ""y"", 0, 1};. RooGenericPdf pdfx{""pdfx"", ""1.0 + x - x"", {x}};; RooGenericPdf pdfxy{""pdfxy"", ""1.0 + x - x + y - y"", {x, y}};. RooProdPdf pdf{""pdf"", ""pdf"", pdfx, RooFit::Conditional(pdfxy, y)};. RooArgSet normSet{x, y};. RooCategory cat{""cat"", ""cat"", {{""0"", 0}}};; RooSimultaneous simPdf{""simPdf"", ""simPdf"", {{""0"", &pdf}}, cat};. {; std::cout << ""This looks good:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(pdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; {; std::cout << ""Too many integrals:"" << std::endl;; RooFit::Detail::CompileContext ctx{normSet};; std::unique_ptr<RooAbsPdf> compiled{static_cast<RooAbsPdf*>(simPdf.compileForNormSet(normSet, ctx).release())};; compiled->getVal(normSet);; }; ```; The output is:; ```; This looks good:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfx_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pdfxy_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y). Too many integrals:; [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([_0_pdfx_over__0_pdfx_Int[_0_x]_X__0_pdfxy_over__0_pdfxy_Int[_0_y]]_Norm[_0_x,_0_y]_denominator_Int[_0_x,_0_y]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(_0_x,_0_y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfx_Int[_0_x]) using numeric integrator RooIntegrator1D to calculate Int(_0_x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(_0_pdfxy_Int[_0_y]) using numeric integrator RooIntegrator1D to calculate Int(_0_y); [#1] IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15751:1539,integrat,integrator,1539,https://root.cern,https://github.com/root-project/root/issues/15751,2,['integrat'],['integrator']
Integrability,"of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = ak.to_rdataframe({""x"": ak_array_in}); >>> data_frame.Snapshot(""ListArray"", ""filename.root"", (""x"",)); TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_T4lNHLu6jVU: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4354,message,message,4354,https://root.cern,https://github.com/root-project/root/issues/11602,1,['message'],['message']
Integrability,ogger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message log,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1969,message,message,1969,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"ol testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; A system with GCC 4.8.5 is necessary, but probably the issue will also be triggered with other 4.8.x versions. Then, configure from the build dir with `cmake .. -Dtesting=ON` (actually, I was configuring with `cmake .. -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON`, but probably the first two options are not necessary). Build with `make` and it should crash, with the logs showing the above quoted messages. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: source build from GitHub. ### Additional context; None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:2694,message,messages,2694,https://root.cern,https://github.com/root-project/root/issues/9370,1,['message'],['messages']
Integrability,"olation; 304: ******************************************************************; 304: * SYS: FreeBSD hack 13.2-RELEASE-p1 FreeBSD 13.2-RELEASE-p1 GENERIC; 304: ******************************************************************; 304: ******************************************************************; 304: * ROOTMARKS =4262.5 * Root6.29/01 20221221/1150; 304: ******************************************************************; 304: Time at the end of job = 18.882812 seconds; 304: Generating stack trace...; 304: 0x0000000826fefe68 in _ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_1 at /usr/include/c++/v1/__hash_table:2070 from /home/mkrzewic/build/root/lib/libTree.so; 304: 0x0000000830314f3e in TClass::TDeclNameRegistry::AddQualifiedName(char const*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x0000000830315169 in TClass::InsertTClassInRegistryRAII::~InsertTClassInRegistryRAII() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x000000083032618c in TClass::SetUnloaded() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008302d88cb in ROOT::RemoveClass(char const*, TClass*) at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: 0x00000008303344d7 in ROOT::TGenericClassInfo::~TGenericClassInfo() at /usr/include/c++/v1/stdexcept:153 from /home/mkrzewic/build/root/lib/libCore.so; 304: CMake Error at /home/mkrzewic/build/root/RootTestDriver.cmake:232 (message):; 304: error code: 129; 304:; 304:; 1/1 Test #304: test-stressroofit-batchmode-cpu ...***Failed 22.19 sec; ```. ### Reproducer. ctest -V -R test-stressroofit-batchmode-cpu. ### ROOT version. master. ### Installation method. source. ### Operating system. freeBSD 13.2p1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13200:2302,message,message,2302,https://root.cern,https://github.com/root-project/root/issues/13200,1,['message'],['message']
Integrability,ols/root-6.32.04/core/textinput/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/textinput/src -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/thread/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zip/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lzma/inc -I/opt/homebrew/include -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/lz4/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/zstd/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zstd -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/macosx/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/inc -I/Users/josiahlee/WORK/Tools/root-6.32.04/core/unix/../clib/res -I/Users/josiahlee/WORK/Tools/root_build_release/builtins/pcre/PCRE-prefix/src/PCRE-build -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/zlib -I/Users/josiahlee/WORK/Tools/root-6.32.04/builtins/xxhash ROOT/TErrorDefaultHandler.hxx ROOT/TExecutorCRTP.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMapFile.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:14214,Message,MessageTypes,14214,https://root.cern,https://github.com/root-project/root/issues/16498,1,['Message'],['MessageTypes']
Integrability,"on RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1359,wrap,wrapper,1359,https://root.cern,https://github.com/root-project/root/issues/11515,1,['wrap'],['wrapper']
Integrability,"on of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4973,interface,interface,4973,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,"onary build twice.; See the result of $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap""; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". With this change, G__Imt.cxx has only one target:; $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". This fixes sporadic build problems due to two targets creating the same output file concurrently:; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; Scanning dependencies of target G__Imt; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; [ 73%] Building CXX object core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o; g++: error: /mnt/build/workspace/lcg_release_tar/BUILDTYPE/Debug/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-6.16.00/src/ROOT-6.16.00-build/core/imt/G__Imt.cxx: No such file or directory; g++: fatal error: no input files; compilation terminated.; core/imt/CMakeFiles/Imt.dir/build.make:106: recipe for target 'core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o' failed; make[5]: *** [core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o] Error 1; [ 73%] Built target G__Imt; make[5]: Target 'core/imt/CMakeFiles/Imt.dir/build' not remade because of errors.; CMakeFiles/Makefile2:18311: recipe for target 'core/imt/CMakeFiles/Imt.dir/all' failed; make[4]: *** [core/imt/CMakeFiles/Imt.dir/all] Error 2. (cherry picked from commit a3e7a3c535b80c3a6cf0883a0bf8de66eca7d93f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3636:1247,depend,dependencies,1247,https://root.cern,https://github.com/root-project/root/pull/3636,1,['depend'],['dependencies']
Integrability,"ooRealVar x(""x"",""x"",0,50);; RooGenericPdf func(""func"",""Test Function"",""x"",x);. RooPlot* xframe = x.frame();. func.plotOn(xframe, RooFit::Name(""funcCurve""));. RooCurve* funcCurve = xframe->getCurve(""funcCurve"");; Double_t xFirst, xLast;; std::cout << ""\ni, f(i), f(i+0.1), avg[i,i+0.1]\n"" << std::endl;. for (Double_t i = 10; i < 11; i += 0.1); {; Double_t avg = funcCurve->average(i,i+0.1);; xFirst = funcCurve->interpolate(i, 1e-10);; xLast = funcCurve->interpolate(i+0.1, 1e-10);; std::cout << i << "", "" << xFirst << "", "" << xLast << "", "" << avg << std::endl;; }; }; ```; Run with `root -l ExampleMacro.C`. Output, marking the higher than expected averages with `<--`:; ```; root [0] ; Processing ExampleMacro.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x). i, f(i), f(i+0.1), avg[i,i+0.1]. 10, 0.004, 0.00404, 0.00402; 10.1, 0.00404, 0.00408, 0.02456 <--; 10.2, 0.00408, 0.00412, 0.0041; 10.3, 0.00412, 0.00416, 0.02464 <--; 10.4, 0.00416, 0.0042, 0.00418; 10.5, 0.0042, 0.00424, 0.00422; 10.6, 0.00424, 0.00428, 0.02576 <--; 10.7, 0.00428, 0.00432, 0.0043; 10.8, 0.00432, 0.00436, 0.02584 <--; 10.9, 0.00436, 0.0044, 0.00438; 11, 0.0044, 0.00444, 0.00442; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.24/06; Built for linuxx8664gcc; From tags/v6-24-06@v6-24-06; Installed manually within WSL Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->; I first encountered this behaviour when calculating the chi^2 between a fitted RooCurve and data, where the data had bin sizes of 0.1, and the RooCurve was taking steps of 1. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:2423,integrat,integrator,2423,https://root.cern,https://github.com/root-project/root/issues/9838,1,['integrat'],['integrator']
Integrability,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4076,message,message,4076,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"ools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:10149,message,message,10149,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06; Integrating Polynomial 4th order, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06; 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02; 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03; [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig; Integrating Breit-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:2724,integrat,integrator,2724,https://root.cern,https://github.com/root-project/root/pull/6632,1,['integrat'],['integrator']
Integrability,"ore sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.com/root-project/root/commit/6b129bedf5f6fe2e971c0a24fce0bf53e6c40284~~. **Update**: two of the above dependency PRs were merged. Only #8567 still needs to be merged and hence is also still included in this PR to make it compile. I have marked these three `math/minuit2` files with a review comment. All the other files actually do belong to this PR. So, in short: ready for review!. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:3653,depend,dependency,3653,https://root.cern,https://github.com/root-project/root/pull/8596,1,['depend'],['dependency']
Integrability,"ot updated appropriately. The following error messages are displayed if one attepts to read a TNDArrayT from an earlier ROOT version:; `Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArray::fSizes from type: Long64_t* to type: vector<Long64_t>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNdimPlusOne should not be skipped from class TNDArray; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<double>::fData from type: double* to type: vector<double>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<double>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Warning in <TStreamerInfo::BuildOld>: Cannot convert TNDArrayT<float>::fData from type: float* to type: vector<float>, skip element; Warning in <TStreamerInfo::Compile>: Counter fNumData should not be skipped from class TNDArrayT<float>; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 2057 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 1088 instead of 100433348; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too few bytes: 17 instead of 57; Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<double> read too few bytes: 68 instead of 200866628; Error in <TBufferFile::CheckByteCount>: object of class TNDArray read too many bytes: 100369 instead of 57; Warning in <TBufferFile::CheckByteCount>: TNDArray::Streamer() not in sync with data on file XXX, fix Streamer(); Error in <TBufferFile::CheckByteCount>: object of class TNDArrayT<float> read too few bytes: 50244 instead of 100433348`. ### Expected behavior; E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382:475,message,messages,475,https://root.cern,https://github.com/root-project/root/issues/10382,1,['message'],['messages']
Integrability,"ot.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1193,depend,dependsOn,1193,https://root.cern,https://github.com/root-project/root/issues/9547,1,['depend'],['dependsOn']
Integrability,"ou are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&); Maybe you need to load the corresponding shared library?; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:5275,interface,interface,5275,https://root.cern,https://github.com/root-project/root/issues/14587,3,['interface'],['interface']
Integrability,"ount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1397,depend,dependsOn,1397,https://root.cern,https://github.com/root-project/root/issues/9547,1,['depend'],['dependsOn']
Integrability,"out of threads, see #16552 ):; ```; 47:PyMVA-Keras-Classification; 348:PyMVA-Keras-Regression; 349:PyMVA-Keras-Multiclass; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 985:tutorial-tmva-TMVA_SOFIE_Keras; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py; 1246:tutorial-tmva-TMVA_SOFIE_Models-py; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; 1252:tutorial-tmva-keras-GenerateModel-py; 1253:tutorial-tmva-keras-MulticlassKeras-py; ```; However in 2., several tests still failed (even-though resources where no longer an issue):; ```; 50:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 986:tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py; ```; The errors listed there included:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; tutorials/tmva/TMVA_SOFIE_RDataFrame.C:29:10: fatal error: 'Higgs_trained_model.hxx' file not found; /tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:1397,interface,interface,1397,https://root.cern,https://github.com/root-project/root/issues/16553,2,['interface'],['interface']
Integrability,"owing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`.; See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:; - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file.; - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use.; ```; +-------------------------+-------------------------------+; | Redeclaration kind | Time (us) for 1000000 lookups |; +-------------------------+-------------------------------+; | ForVisibleRedeclaration | 27617 |; | NotForRedeclaration | 717458 |; +-------------------------+-------------------------------+; ```. ## Checklist:; - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9788:1254,wrap,wrapper,1254,https://root.cern,https://github.com/root-project/root/pull/9788,1,['wrap'],['wrapper']
Integrability,"place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, provided we can make TDataFrame sufficiently fast.; * A Python-based numpy export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; * The numpy interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:1558,interface,interface,1558,https://root.cern,https://github.com/root-project/root/pull/2519,7,['interface'],['interface']
Integrability,"ppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:2328,wrap,wrapped,2328,https://root.cern,https://github.com/root-project/root/pull/3488,1,['wrap'],['wrapped']
Integrability,"produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215; ```; however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process.; When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like; I believe the operation would be much more robust if; 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly; 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered; Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context; Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:2503,message,messages,2503,https://root.cern,https://github.com/root-project/root/issues/8952,1,['message'],['messages']
Integrability,"proj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:5492,message,message,5492,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"pyspark is added to requirements.txt along the other python runtime dependencies. For now it is ignored in `dependency_versions.py` since we already check that pyspark tests can be run in the environment through the `test_distrdf_pyspark` build option. At the same time, on some nodes where `dependency_versions.py` is run (because it's [always activated with the pythonization tests except for windows](https://github.com/root-project/root/blob/296fad253ee07a2e081d68020a9fbf3ad5980a72/bindings/pyroot/pythonizations/test/CMakeLists.txt#L19) ) pyspark could not be present for various reasons. So we resort to using the build option only to check this dependency for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7511:68,depend,dependencies,68,https://root.cern,https://github.com/root-project/root/pull/7511,2,['depend'],"['dependencies', 'dependency']"
Integrability,"r element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time via `TClass`.; - `RCollectionClassField::ReadGlobalImpl()`: reduce the number of virtual calls to `TVirtualCollectionProxy::Insert()` by reading and inserting a block of elements at once. The size of the buffer that holds the elements is set by `RCollectionClassField::kReadChunkSize` (in bytes).; - Provide implementation and tests for `RPrintValueVisitor::VisitCollectionClassField()`; - Add unit tests for collections of fundamental types, compound types, vector of a collection proxy, and nested collection proxies.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:2248,interface,interface,2248,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,r/lib/clang/13.0.0/include -compilerI/usr/include -compilerI/usr/lib/clang/13.0.0/include -compilerI/usr/include -I/home/cai/root/bld/include -I/usr/local/include -I/usr/local/include -I/home/cai/root/bld/ginclude -I/home/cai/root/root-6.26.06/core/base/inc -I/home/cai/root/root-6.26.06/core/foundation/inc -I/home/cai/root/root-6.26.06/core/cont/inc -I/home/cai/root/root-6.26.06/core/gui/inc -I/home/cai/root/root-6.26.06/core/meta/inc -I/home/cai/root/root-6.26.06/core/clib/inc -I/home/cai/root/root-6.26.06/core/rint/inc -I/home/cai/root/root-6.26.06/core/zip/inc -I/home/cai/root/root-6.26.06/core/thread/inc -I/home/cai/root/root-6.26.06/core/textinput/inc -I/home/cai/root/root-6.26.06/core/clingutils/inc -I/home/cai/root/root-6.26.06/core/base/v7/inc -I/home/cai/root/root-6.26.06/core/foundation/v7/inc -I/home/cai/root/root-6.26.06/core/unix/inc -I/usr/include ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:4338,Message,MessageTypes,4338,https://root.cern,https://github.com/root-project/root/issues/11430,1,['Message'],['MessageTypes']
Integrability,r; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1586,message,message,1586,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"r<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:2383,Interface,InterfaceUtils,2383,https://root.cern,https://github.com/root-project/root/issues/13656,1,['Interface'],['InterfaceUtils']
Integrability,"r<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<char,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9609,message,message,9609,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"re probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4589,interface,interface,4589,https://root.cern,https://github.com/root-project/root/issues/14587,1,['interface'],['interface']
Integrability,remove dependency on tbb interfaces from RTaskArena,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062:7,depend,dependency,7,https://root.cern,https://github.com/root-project/root/pull/7062,2,"['depend', 'interface']","['dependency', 'interfaces']"
Integrability,"replace all uses of the deprecated tbb_task_scheduler_init and its; implicit task_arena by explicit manipulation of our own central; instance of task_arena, as suggested by intel:; https://software.intel.com/sites/default/files/managed/b2/d2/TBBRevamp.pdf. work out some gymnastics to keep tbb out of the headers. We can't; forward-declare tbb::task_arena as it is an alias of a versioned; namespace dependent class (right now tbb::interface7::tbb_task_arena). Interface details to discuss: Should we add an ExecuteIsolated and an Execute call to TPoolManager?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5551:400,depend,dependent,400,https://root.cern,https://github.com/root-project/root/pull/5551,2,"['Interface', 'depend']","['Interface', 'dependent']"
Integrability,requested here: https://root-forum.cern.ch/t/tgraph-synchronization/52211/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11659:52,synchroniz,synchronization,52,https://root.cern,https://github.com/root-project/root/pull/11659,1,['synchroniz'],['synchronization']
Integrability,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:3849,inject,injected,3849,https://root.cern,https://github.com/root-project/root/pull/9128,1,['inject'],['injected']
Integrability,"rial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1832,integrat,integrationRange,1832,https://root.cern,https://github.com/root-project/root/pull/11049,1,['integrat'],['integrationRange']
Integrability,"ring foo{""foo""};; std::memcpy(st.char_buffer, foo.data(), foo.size());; }. """"""); struct = ROOT.Struct(); ROOT.fill_char_buffer(struct); char_buffer = struct.char_buffer. # With thew new cppyy, you get access to the lower level buffer instead:; print(""struct.char_buffer : "", char_buffer). # However, you can turn the buffer into a string very easily with as_string():; print(""struct.char_buffer.as_string(): "", char_buffer.as_string()); ```; The output:; ```txt; struct.char_buffer : <cppyy.LowLevelView object at 0x74c7a2682fb0>; struct.char_buffer.as_string(): foo; ```. ## Associated GitHub issues. This will close the following GitHub issue:; * https://github.com/root-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/root/issues/11411; * https://github.com/root-project/root/issues/11596. ## Upstream contributions to cppyy in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:2128,synchroniz,synchronization,2128,https://root.cern,https://github.com/root-project/root/pull/14507,1,['synchroniz'],['synchronization']
Integrability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:4021,integrat,integration,4021,https://root.cern,https://github.com/root-project/root/pull/11808,1,['integrat'],['integration']
Integrability,"root-project/root@72fe06a does not permit passing random options to rootcling; as improvement in encapsulation. Rootcling used to permit random flags usually; coming CXXFLAGS and it captured only -I, -D and -U. The old implementation; used to pass all flags directly to cling thus clang. This lead to allowing; the dictionaries to be compiled with incompatible to the rest of the build; flags. Some users passed their entire CXXFLAGS from the build systems and the current; rootcling implementation started to reject it breaking backward compatibility. This patch implements a sink for all unrecognized flags and issues a deprecation; message. Should address the rest of the concerns of ROOT-10303.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4356:635,message,message,635,https://root.cern,https://github.com/root-project/root/pull/4356,1,['message'],['message']
Integrability,"root/pull/12970; 9. https://github.com/root-project/root/pull/13043. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12971. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `e1c68d0`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13044:1868,interface,interface,1868,https://root.cern,https://github.com/root-project/root/pull/13044,1,['interface'],['interface']
Integrability,"root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7331. #16 0x00007fffe3e0a679 in clang::Sema::RequireCompleteType (this=0x7da020, Loc=..., T=..., Diagnoser=...) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaType.cpp:7109. #17 0x00007fffe35607f9 in clang::Sema::RequireCompleteType<clang::SourceRange> (this=0x7da020, Loc=..., T=..., DiagID=2588). at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/include/clang/Sema/Sema.h:1653. --Type <RET> for more, q to quit, c to continue without paging--c. #18 0x00007fffe355c52a in clang::Sema::RequireCompleteDeclContext (this=0x7da020, SS=..., DC=@0x7fffffff61e0: 0x7e8ed48) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/llvm/src/tools/clang/lib/Sema/SemaCXXScopeSpec.cpp:235. #19 0x00007fffe28426bb in cling::LookupHelper::findScope (this=0x78a0e0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffff65f0, instantiateTemplate=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/interpreter/cling/lib/Interpreter/LookupHelper.cpp:703. #20 0x00007fffe26b2ba8 in TClingClassInfo::TClingClassInfo (this=0x3e04b90, interp=0x77e5d0, name=0x6a1ad0 ""art::Wrapper<art::Assns<string,int,void> >"") at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TClingClassInfo.cxx:95. #21 0x00007fffe26cacba in TCling::SetClassInfo (this=0x77bdf0, cl=0x3983b80, reload=true) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/metacling/src/TCling.cxx:3785. #22 0x00007ffff74d245f in TClass::SetUnloaded (this=0x3983b80) at /scratch/greenc/test-products/root/v6_20_04/source/root-6.20.04/core/meta/src/TClass.cxx:6081. #23 0x00000000004025f5 in main (argc=3, argv=0x7fffffff68f8) at /scratch/greenc/build/mrb-art-devel/e20-debug/build_slf7.x86_64/art/art/Framework/Art/art.cc:26. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:6543,Wrap,Wrapper,6543,https://root.cern,https://github.com/root-project/root/pull/5462,1,['Wrap'],['Wrapper']
Integrability,"root_generate_dictionary does not properly handle ""all"" include directory properties from its dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12263:94,depend,dependencies,94,https://root.cern,https://github.com/root-project/root/issues/12263,1,['depend'],['dependencies']
Integrability,root_generate_dictionary: Improve propagation of INCLUDE_DIRECTORY properties from target and dependencies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12264:94,depend,dependencies,94,https://root.cern,https://github.com/root-project/root/pull/12264,1,['depend'],['dependencies']
Integrability,rootcling does not error out when failing to read dependent PCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788:50,depend,dependent,50,https://root.cern,https://github.com/root-project/root/issues/12788,1,['depend'],['dependent']
Integrability,rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5211:17,depend,dependency,17,https://root.cern,https://github.com/root-project/root/pull/5211,1,['depend'],['dependency']
Integrability,rootcling: do not select classes of dependent type (ROOT-9185).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2021:36,depend,dependent,36,https://root.cern,https://github.com/root-project/root/pull/2021,1,['depend'],['dependent']
Integrability,roottools CMake target purpose is to provide handle to used as a dependency in roottest.git.; It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279:65,depend,dependency,65,https://root.cern,https://github.com/root-project/root/pull/3279,1,['depend'],['dependency']
Integrability,"rpolation; RooHistFunc histFunc{""histFunc"", ""histFunc"", x, templHist, 0};; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, templHist, 0};. RooWrapperPdf wrapperPdf{""wrapperPdf"", ""wrapperPdf"", histFunc};. RooKeysPdf keysPdf{""keysPdf"", ""keysPdf"", x, templData};. RooArgSet normSet0{}; // check empty normalization set; RooArgSet normSet1{x}; // check ""usual"" normalization set; RooArgSet normSet2{x, y}; // it should also handle extra disconnected observables. // init caches; wrapperPdf.getVal(normSet1);. auto test = [&](RooAbsReal const &func, RooArgSet const &nset) {; int maxValCode = func.getMaxVal(nset);; double maxVal = NAN;; if (maxValCode != 0); maxVal = func.maxVal(maxValCode);; std::cout << func.ClassName() << nset << "": "" << func.getVal(nset) << "" "" << maxVal << std::endl;; };. for (auto &normSet : {normSet0, normSet1, normSet2}) {; std::cout << std::endl;. test(histFunc, normSet);; test(histPdf, normSet);; test(keysPdf, normSet);; test(crystalBall, normSet);; test(cbShape, normSet);; test(wrapperPdf, normSet);; test(binSamplingPdf, normSet);; // still missing: RooFFTConvPdf, RooSPHarmonic, and RooLegendre; }; ```. The output is:; ```; RooHistFunc(): 100 nan; RooHistPdf(): 500 nan; RooKeysPdf(): 0.201299 nan; RooCrystalBall(): 1 nan; RooCBShape(): 1 nan; RooWrapperPdf(): 100 nan; RooBinSamplingPdf(): 0.308511 nan. RooHistFunc(x): 100 105; RooHistPdf(x): 5 105; RooKeysPdf(x): 0.218569 0.205937; RooCrystalBall(x): 9.92564 9.92564; RooCBShape(x): 9.92564 9.92564; RooWrapperPdf(x): 5 105; RooBinSamplingPdf(x): 3.06217 9.92564. RooHistFunc(x,y): 100 105; RooHistPdf(x,y): 5 105; RooKeysPdf(x,y): 0.218569 0.205937; RooCrystalBall(x,y): 9.92564 9.92564; RooCBShape(x,y): 9.92564 9.92564; RooWrapperPdf(x,y): 5 105; RooBinSamplingPdf(x,y): 3.06217 9.92564; ```; * It's probably okay to not return values when the normalization set is empty, although it could easily implemented to do it (well, maybe not for the `RooAddPdf`...); * Expect for the crystal ball functions, the values a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12317:2104,wrap,wrapperPdf,2104,https://root.cern,https://github.com/root-project/root/issues/12317,1,['wrap'],['wrapperPdf']
Integrability,"rprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:1871,depend,depends,1871,https://root.cern,https://github.com/root-project/root/issues/6432,1,['depend'],['depends']
Integrability,"rrors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:1040,message,messages,1040,https://root.cern,https://github.com/root-project/root/issues/6421,1,['message'],['messages']
Integrability,"rse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1645,message,message,1645,https://root.cern,https://github.com/root-project/root/issues/6791,1,['message'],['message']
Integrability,"rsions of `FLAGS` variables, since CMake expects the flags to be a real list in most cases (really everywhere except in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:1595,INTERFACE,INTERFACE,1595,https://root.cern,https://github.com/root-project/root/pull/1959,1,['INTERFACE'],['INTERFACE']
Integrability,"rts of errors. Consider the following example code:. ```Python; from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf; ; allvars = []; ; xvals = RooArgList(); variables = RooArgSet(); muvals = RooArgList(); ; for i in range(0,3):; mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10); muvals.add(mu); x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.); xvals.add(x); variables.add(x); ; # side problem: unless these two lines are executed, the python garbage collector deletes mu and x; # causing a segfault in the construction of the RooMultiVarGaussian; allvars.append(mu); allvars.append(x); ; covmat = TMatrixDSym(3); covmat[0][0] = 1.; covmat[1][1] = 2.; covmat[2][2] = 3.; covmat[0][1] = 0.2; covmat[1][0] = 0.2; covmat[1][2] = 0.6; covmat[2][1] = 0.6; covmat[2][0] = 0.3; covmat[0][2] = 0.3; ; nevents = 1000.; mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat); allvars.append(mvg); ; ws = RooWorkspace(""ws""); ws.Import(mvg); mc = RooStats.ModelConfig(""model"",""model"",ws); mc.SetObservables(xvals); mc.SetParametersOfInterest(muvals); mc.SetPdf(mvg.GetName()); ; # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()); ```; ; Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once.; Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000); extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm); ws.Import(extmvg,RooFit.RecycleConflictNodes()); mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws); mc_cnt.SetObservables(xvals); mc_cnt.SetParametersOfInterest(muvals); mc_cnt.SetPdf(extmvg.GetName()); ; data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet())",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7967:1473,wrap,wrapping,1473,https://root.cern,https://github.com/root-project/root/issues/7967,1,['wrap'],['wrapping']
Integrability,"ry useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1507,interface,interface,1507,https://root.cern,https://github.com/root-project/root/pull/943,1,['interface'],['interface']
Integrability,"s is that help messages are automatically generated:; ```; OVERVIEW: rootcling; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file>; ; OPTIONS:; ; Generic Options:; ; -help - Display available options (-help-hidden for more); -help-list - Display list of available options (-help-list-hidden for more); -version - Display the version of this program; ; rootcling common options:; ; -D=<string> - Specify defined macros.; -I=<string> - Specify an include path.; -W=<string> - Specify compiler diagnostics options.; -c - Deprecated, legacy flag which is ignored.; -cxxmodule - Generate a C++ module.; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Split the dictionary into two parts: one containing the IO (ClassDef)information and another the interactivity support.; Choose verbosity level:; -v - Show errors (default).; -v0 - Show only fatal errors.; -v1 - Show errors (the same as -v).; -v2 - Show warnings.; -v3 - Show notes.; -v4 - Show information.; ```; ; This patch deprecates:; 1) +P, +V, +STUB, -gccxml, -cint, -reflex -- they are old CINT legacy options which had no meaning in rootcling.; 2) -p, -c -- remove old options used by rootcling -generate-pch as now th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:1522,depend,dependent,1522,https://root.cern,https://github.com/root-project/root/pull/4171,1,['depend'],['dependent']
Integrability,"s is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyClass>(""fieldKlass""); // Regular class; auto fieldCollection = model->MakeField<ProxiedCollection>(""fieldCollection""); // Class with associated collection proxy; ```; **This tag is not required when using the type-erased interface** (i.e., `RFieldBase::Create()`), as the use of a collection proxy can be determined at run time vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:1446,interface,interface,1446,https://root.cern,https://github.com/root-project/root/pull/11525,1,['interface'],['interface']
Integrability,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:1883,integrat,integrationRange,1883,https://root.cern,https://github.com/root-project/root/pull/11049,2,['integrat'],['integrationRange']
Integrability,"s renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **************************************************************************************; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:1146,Wrap,Wrapper,1146,https://root.cern,https://github.com/root-project/root/issues/14493,1,['Wrap'],['Wrapper']
Integrability,"s://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://stackoverflow.com/questions/74247557/warning-failed-to-call-main-to-execute-the-macro/74445395#74445395",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707:3813,message,messages,3813,https://root.cern,https://github.com/root-project/root/issues/11707,1,['message'],['messages']
Integrability,"scribed by @jalopezg-git in https://github.com/root-project/root/pull/12449#issuecomment-1467860880 and can be fixed in a future PR. Consider the following test case:. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. test.py; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). print(""calling helper""). for i in range(2):; print(f""call attempt {i}""); try:; res = ROOT.call_helper(helper); print(""helper call succeeded:"", res); except Exception as e:; print(""helper call failed""); print(e); ```. The output below is now close to optimal for the first instantiation attempt. On the second instantiation attempt the error message is different/less useful because of the imperfect transaction rollback already noted. (but the same happens instantiating the template through ```TInterpreter::Declare``` as said). ```; declare ret True; creating helper; calling helper; call attempt 0; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; In file included from input_line_52:1:; /home/b/bendavid/pyrootdebug6/test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; /home/b/bendavid/pyrootdebug6/test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:2007,message,message,2007,https://root.cern,https://github.com/root-project/root/pull/12449,1,['message'],['message']
Integrability,"se of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = new TApplication(""Shared Mem - Producer"", &argc, argv);; hprod();; theApp->Run();; }; #endif . void hprod(); {; TH1F *hpx;; TH2F *hpxpy;; TProfile *hprof;; TMapFile::SetMapAddress(0xb46a5000);; TMapFile *mfile = TMapFile::Create(""hsimple.map"",""RECREATE"", 100000,""Memory Mapped Hist"");; hpx = new TH1F(""hpx"",""This is the px distribution"",100,-4,4);; ; // Print status of mapped file; mfile->Print();; ; // Endless loop filling histograms with random numbers; Float_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:2530,message,messages,2530,https://root.cern,https://github.com/root-project/root/issues/11353,1,['message'],['messages']
Integrability,se/v7/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/clib/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/cont/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/foundation/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/macosx/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/unix/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/winnt/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/clingutils/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/meta/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/gui/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/textinput/inc -I/opt/fairsoft/source/nov20/build/Build/root/include -I/opt/fairsoft/source/nov20/build/Source/root -I/opt/local/include -I/opt/fairsoft/source/nov20/build/Source/root/builtins/xxhash -I/opt/local/include -I/opt/local/include -writeEmptyRootPCM ROOT/StringConv.hxx ROOT/TExecutor.hxx ROOT/TSequentialExecutor.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TError.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6839:3427,Message,MessageTypes,3427,https://root.cern,https://github.com/root-project/root/issues/6839,1,['Message'],['MessageTypes']
Integrability,segfault in TClass::InheritsFrom() depending on linking order,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6670:35,depend,depending,35,https://root.cern,https://github.com/root-project/root/issues/6670,1,['depend'],['depending']
Integrability,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5715:62,depend,dependency,62,https://root.cern,https://github.com/root-project/root/pull/5715,1,['depend'],['dependency']
Integrability,spurrious cmake message about AfterImage with -Dminimal=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15027:16,message,message,16,https://root.cern,https://github.com/root-project/root/issues/15027,1,['message'],['message']
Integrability,ssage logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/VarTransformHandler.h: mutable MsgLogger* f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2515,message,message,2515,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"ssages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show our users debug messages, too. Right now, we cannot, because DEBUG messages can only be enabled at compile-time, not at run-time. The DEBUG messages are also problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). For wrappers like iminuit, it is important to redirect the log to its own streams that can be readout and displayed in Python, for example in a Jupyter notebook session (std::cerr and std::cout always go to the terminal and are invisible in a Jupyter notebook).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:3682,rout,routines,3682,https://root.cern,https://github.com/root-project/root/issues/6421,8,"['message', 'rout', 'wrap']","['messages', 'routines', 'wrappers']"
Integrability,"sults, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:2642,Integrat,Integration,2642,https://root.cern,https://github.com/root-project/root/issues/12645,1,['Integrat'],['Integration']
Integrability,"t in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC ROOT::Libraries ROOT::Flags); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:2390,depend,dependency,2390,https://root.cern,https://github.com/root-project/root/pull/1959,1,['depend'],['dependency']
Integrability,"t is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTTP or XRootD. This is perhaps something to keep in m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:1034,interface,interface,1034,https://root.cern,https://github.com/root-project/root/pull/2322,1,['interface'],['interface']
Integrability,"t webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1482,depend,dependencies,1482,https://root.cern,https://github.com/root-project/root/issues/14479,1,['depend'],['dependencies']
Integrability,"t's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1585,interface,interfaces,1585,https://root.cern,https://github.com/root-project/root/pull/5219,1,['interface'],['interfaces']
Integrability,"t-Wigner distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05; 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02; 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25; Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001; Integrating Breit-Wigner distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18; 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18; 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16; Integrating Breit-Wigner distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3; 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25; 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2; [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf; Integrating Gaussian distribution, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04; 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07; 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03; Integrating Gaussian distribution, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02; 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02; 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07; Integrating Gaussian distribution, relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03; 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06; 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:3530,Integrat,Integrating,3530,https://root.cern,https://github.com/root-project/root/pull/6632,3,['Integrat'],['Integrating']
Integrability,t-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-redhat-linux/12/include -compilerI/usr/local/include -compilerI/usr/include -I/reproducer/build/include -I/reproducer/build/ginclude -I/reproducer/source/core/base/inc -I/reproducer/source/core/foundation/inc -I/reproducer/source/core/cont/inc -I/reproducer/source/core/gui/inc -I/reproducer/source/core/meta/inc -I/reproducer/source/core/clib/inc -I/reproducer/source/core/rint/inc -I/reproducer/source/core/zip/inc -I/reproducer/source/core/thread/inc -I/reproducer/source/core/textinput/inc -I/reproducer/source/core/clingutils/inc -I/reproducer/source/core/base/v7/inc -I/reproducer/source/core/foundation/v7/inc -I/reproducer/source/core/unix/inc -I/usr/include -I/reproducer/source/builtins/xxhash -I/reproducer/source/builtins/lz4 -I/reproducer/source/builtins/zstd ROOT/TErrorDefaultHandler.hxx ROOT/TSequentialExecutor.hxx ROOT/StringConv.hxx Buttons.h Bytes.h Byteswap.h KeySymbols.h MessageTypes.h Riostream.h Rtypes.h TApplication.h TAtt3D.h TAttAxis.h TAttBBox2D.h TAttBBox.h TAttFill.h TAttLine.h TAttMarker.h TAttPad.h TAttText.h TBase64.h TBenchmark.h TBuffer3D.h TBuffer3DTypes.h TBuffer.h TColor.h TColorGradient.h TDatime.h TDirectory.h TEnv.h TException.h TExec.h TFileCollection.h TFileInfo.h TFolder.h TInetAddress.h TMacro.h TMathBase.h TMD5.h TMemberInspector.h TMessageHandler.h TNamed.h TNotifyLink.h TObject.h TObjString.h TParameter.h TPluginManager.h TPoint.h TPRegexp.h TProcessID.h TProcessUUID.h TQClass.h TQCommand.h TQConnection.h TQObject.h TRedirectOutputGuard.h TRefCnt.h TRef.h TRegexp.h TRemoteObject.h TROOT.h TRootIOCtor.h TStopwatch.h TStorage.h TString.h TStringLong.h TStyle.h TSysEvtHandler.h TSystemDirectory.h TSystemFile.h TSystem.h TTask.h TThreadSlots.h TTime.h TTimer.h TTimeStamp.h TUri.h TUrl.h TUUID.h TVersionCheck.h TVirtualAuth.h TVirtualFFT.h TVirtualGL.h TVirtualMonitoring.h TVirtualMutex.h TVirtualPadEditor.h TVirtualPad.h TVirtualPadPain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:5559,Message,MessageTypes,5559,https://root.cern,https://github.com/root-project/root/issues/10478,1,['Message'],['MessageTypes']
Integrability,"t/pull/12973; 15. https://github.com/root-project/root/pull/12974. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/12905. After merging this PR, the following RooFit commits in ROOT `master` (as of 79b80a3163) are the ones that are not in `v6-28-00-patches` (as of `tofillout`). ```txt; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:2010,interface,interface,2010,https://root.cern,https://github.com/root-project/root/pull/12971,1,['interface'],['interface']
Integrability,"t\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *>' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\Glob",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6959,message,message,6959,https://root.cern,https://github.com/root-project/root/pull/12523,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"t_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):; Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'; ```; The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a temporary problem on GitHub Actions, or of course a problem with how we build (although that seems to be finally CMake, https://github.com/SyneRBI/SIRF-SuperBuild/blob/master/SuperBuild/External_ROOT.cmake). Any ideas?. ### Reproducer. I cannot reproduce this on my own Ubuntu 22.04 machine at present. We do get the failures in our GitHub Actions jobs. ### ROOT version. see above. ### Installation method. CMake. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:2679,message,message,2679,https://root.cern,https://github.com/root-project/root/issues/14520,1,['message'],['message']
Integrability,"tchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:4971,message,message,4971,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"tchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; ```; Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:11044,message,message,11044,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"te if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; };",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9279,message,message,9279,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,"test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.30.02/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. - Build root with gcc 14 on Fedora 40 on aarch64, ppc64le or s390x; - Run the test. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Fedora Linux 40. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:2102,message,message,2102,https://root.cern,https://github.com/root-project/root/issues/14446,1,['message'],['message']
Integrability,"th`) inside the directory the following ways:; * If the element is a directory, it would be `new TDirectory(file, sdirpath)`; * If the element is a file, it would be `new TFile(file, fTitle)`. Which results in the following bugs:. * If an element of `TSystemDirectory::GetListOfFiles()` is a file, its `IsDirectory()` will try to look for the file basename in the *current working directory* and produce the wrong result.; * As its perfectly legal to cast `TSystemDirectory *` to `TSystemFile *`, a `TSystemFile *tsysfFoo` with name ""foo"" and title ""foo"" could mean either; * A file with path `foo/foo`; * A directory with path `foo`, which was originally an instance of `TSystemDirectory *`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The name-title interface of both `TSystemFile` and `TSystemDirectory` is unified. Due to the inconsistency of the original interface, there's no fully-backward-compatible solution. The possible interface would be one of the followings:. | Name | Title | Pros | Cons |; |-|-|-|-|; | basename | dirname | the most informative and good-looking; closer to what GetListOfFiles() tries to output | incompatible to the original `TSystemFile` and `TSystemDirectory` interfaces |; | basename | full path | closer to the original `TSystemDirectory` interface | incompatible to the original `TSystemDirectory` interface |; | full path | dirname | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | basename | closer to the original `TSystemFile` interface | incompatible to the original `TSystemDirectory` interface |; | full path | full path | closer to the original `TSystemFile` and `TSystemDirectory` interfaces | carry the least information |. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required inpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12350:1779,interface,interface,1779,https://root.cern,https://github.com/root-project/root/issues/12350,1,['interface'],['interface']
Integrability,"the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:30463,wrap,wrapper,30463,https://root.cern,https://github.com/root-project/root/issues/10528,1,['wrap'],['wrapper']
Integrability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1913,interface,interfaces,1913,https://root.cern,https://github.com/root-project/root/pull/5219,3,['interface'],"['interface', 'interfaces']"
Integrability,"the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to further explore the ideal high-level interface through projects such as https://github.com/diana-hep/plur. So indeed, lot's of experimental / internal interface work here - but we felt that (a) a sufficient amount depends on this and (b) we've demonstrated enough utility that it was time to start talking about merging. (With many thanks to @jpivarski for driving this work home with his work on a python interface!)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1797,interface,interface,1797,https://root.cern,https://github.com/root-project/root/pull/943,7,"['depend', 'interface']","['depends', 'interface']"
Integrability,"the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:7545,Wrap,Wrapping,7545,https://root.cern,https://github.com/root-project/root/issues/6939,1,['Wrap'],['Wrapping']
Integrability,therewith avoiding memory hogging because of the attached TTreeChaches. This code has been written by David Smith and minimally edited for its integration in root.; See sister PR in roottest: https://github.com/root-project/roottest/pull/1161. This PR fixes [ROOT-6286](https://its.cern.ch/jira/browse/ROOT-6286),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16198:143,integrat,integration,143,https://root.cern,https://github.com/root-project/root/pull/16198,1,['integrat'],['integration']
Integrability,"therewith dealing with the concrete type of the source rather than its; virtual interface.; This change has no impact for the user, both in C++ and Python, since; a templated constructor has been added to RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2963:80,interface,interface,80,https://root.cern,https://github.com/root-project/root/pull/2963,1,['interface'],['interface']
Integrability,"this is a backport of; https://gitlab.cern.ch/lhcb/Rec/commit/6103563cc0fc537d8920a2918117b27a48823772#5c0090c3eee645cadb8dd97f9faf43e9664403ce_191_190. There are actually two changes:; - add an override in MethodBase generated code; - remove trailing whitespaces in the code of a MLP w/ normalise variable transformation. discussion points:; - one could also remove trailing whitespaces in other files (`grep -- ' "" << std::endl;'`); - the whitespaces are a bit on the boarder of history noise vs. useful; - the override will make the generated code for all code generated methods (not only MLP) depend on c++11 (which to my knowledge is the case for MLP already, but not for the other methods).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1456:597,depend,depend,597,https://root.cern,https://github.com/root-project/root/pull/1456,1,['depend'],['depend']
Integrability,"tion (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31293,Wrap,WrapperCall,31293,https://root.cern,https://github.com/root-project/root/issues/12372,1,['Wrap'],['WrapperCall']
Integrability,"tion ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~^~~~; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories_HistFactory.cxx.o: in function `std::vector<double, std::allocator<double> >& RooFit::Detail::operator<< <double>(std::vector<double, std::allocator<double> >&, RooFit::Detail::JSONNode const&) [clone .isra.0]':; JSONFactories_HistFactory.cxx:(.text+0xc212): undefined reference to `double RooFit::Detail::JSONNode::val_t<double>() const'; collect2: error: ld returned 1 exit status; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:200: lib/libRooFitHS3.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ### Reproducer. Clone ROOT repository, go to the build directory,. > cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; > cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. > commit 870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). Should I use that? I thought there is continuous integration and people check for errors before committing. . ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. Had to remove RooFit support from `CMakeCache.txt`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:5931,integrat,integration,5931,https://root.cern,https://github.com/root-project/root/issues/13101,1,['integrat'],['integration']
Integrability,"tionWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu (9 ms); [----------] 6 tests from RooProdPdf/TestProdPdf (75 ms total); [----------] Global test environment tear-down; [==========] 8 tests from 2 test suites ran. (949 ms total); [ PASSED ] 7 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RooProdPdf.TestGetPartIntList; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:2948,message,message,2948,https://root.cern,https://github.com/root-project/root/issues/12430,1,['message'],['message']
Integrability,"tl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ----------------------------------------------------------------------; Ran 2 tests in 0.174s; FAILED (failures=1); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-dataframe-df006_ranges-py. TypeError: none of the 2 overloaded methods succeeded.; ~~~; 1096/1272 Test #1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 an",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:4594,message,message,4594,https://root.cern,https://github.com/root-project/root/issues/12429,1,['message'],['message']
Integrability,"torBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassTemplatedBase (260 ms); [ RUN ] RNTuple.TVirtualCollectionProxy; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TVirtualCollectionProxy (4036 ms); [ RUN ] RNTuple.Enums; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.Enums (29 ms); [ RUN ] RNTuple.Traits; [ OK ] RNTuple.Traits (0 ms); [----------] 18 tests from RNTuple (5604 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (5604 ms total); [ PASSED ] 17 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RNTuple.Casting; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:24092,message,message,24092,https://root.cern,https://github.com/root-project/root/issues/12426,1,['message'],['message']
Integrability,"tp_iter is used to implement an iterator protocol for Python using the; ""data"" member function of std::vector. However, the specialization; `vector<bool>` is not required to have this member function, which; breaks the iterator. Removing the tp_iter field does not break iterating; vector<bool> in Python, it falls back to the old iterator mechanism via; the get/setitem special functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4731:41,protocol,protocol,41,https://root.cern,https://github.com/root-project/root/pull/4731,1,['protocol'],['protocol']
Integrability,"ude ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecWithArgsAndReturn(address, args, ret)>: Called with no wrapper, not implemented!; res = 7.31217e-322; (int) 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12549:2067,wrap,wrapper,2067,https://root.cern,https://github.com/root-project/root/issues/12549,1,['wrap'],['wrapper']
Integrability,"ue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.2...v1.2.3"">v1.2.3</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>more failing proto pollution tests <a href=""https://github.com/minimistjs/minimist/commit/13c01a5327736903704984b7f65616b8476850cc""><code>13c01a5</code></a></li>; <li>even more aggressive checks for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab""><code>38a4d1c</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.1...v1.2.2"">v1.2.2</a> - 2020-03-10</h2>; <h3>Commits</h3>; <ul>; <li>failing test for protocol pollution <a href=""https://github.com/minimistjs/minimist/commit/0efed0340ec8433638758f7ca0c77cb20a0bfbab""><code>0efed03</code></a></li>; <li>cleanup <a href=""https://github.com/minimistjs/minimist/commit/67d3722413448d00a62963d2d30c34656a92d7e2""><code>67d3722</code></a></li>; <li>console.dir -&gt; console.log <a href=""https://github.com/minimistjs/minimist/commit/47acf72c715a630bf9ea013867f47f1dd69dfc54""><code>47acf72</code></a></li>; <li>don't assign onto <strong>proto</strong> <a href=""https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94""><code>63e7ed0</code></a></li>; </ul>; <!-- raw HTML omi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:4284,protocol,protocol,4284,https://root.cern,https://github.com/root-project/root/pull/11865,1,['protocol'],['protocol']
Integrability,"uilt for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface.; All commands must be preceded by a . (dot), except; for the evaluation statement { } and the ?.; ===========================================================================; > [file] : output redirection to [file]; 2> [file] : error redirection to [file]; >& [file] : output&error redirection to [file]; Help: ? : help; help : help; /[keyword] : search keyword in help information; Shell: ![shell] : execute shell command; Source: v <[line]>: view source code <around [line]>; V [stack] : view source code in function call stack; t : show function call stack; f [file] : select file to debug; T : turn on/off trace mode for all source; J [stat] : Set warning level [0-5]; A [1|0] : allowing automatic variable on/off; trace <classname> : turn on trace mode for class; deltrace <classname> : turn off trace mode for class; Evaluation: p [expr] : evaluate expression (no declaration/loop/condition); Evaluation: s [expr] : step into expression (no declaration/loop/condition); Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:2019,interface,interface,2019,https://root.cern,https://github.com/root-project/root/issues/10191,1,['interface'],['interface']
Integrability,"ulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) memory directly as numpy arrays, allowing for efficient access to ROOT-serialized objects from the Python language.; - The `numpy` interface is low-level for Python; we intend to furth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:1174,interface,interfaces,1174,https://root.cern,https://github.com/root-project/root/pull/943,2,['interface'],"['interface', 'interfaces']"
Integrability,"ull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration 'size_t strlcat(char*, const char*, size_t)'; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ^~~~~~~; ~~~. ### Reproducer. Compile root on a system using the latest dev version of glibc, e.g. Fedora Rawhide. ### ROOT version. 6.28.04. ### Installation method. RPM package build (uses mock, i.e. a clean change root environment). ### Operating system. Fedora Rawhide (f39). ### Additional context. See the failures in Fedora's continuous integration test build at:; https://koschei.fedoraproject.org/package/root?collection=f39",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:2605,integrat,integration,2605,https://root.cern,https://github.com/root-project/root/issues/13156,1,['integrat'],['integration']
Integrability,"ult_delete<llvm::GIMatchDagPredicate>>*&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3536,20): message : or 'std::wstring std::format(const std::locale &,const std::basic_format_string<wchar_t,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Reason: cannot convert from 'const char [5]' to 'const std::locale' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3531,19): message : or 'std::string std::format(const std::locale &,const std::basic_format_string<char,type_identity<_Args>::type...>,_Types &&...)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,18): message : 'initializing': cannot convert from 'const char [5]' to 'const std::locale &' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:9884,message,message,9884,https://root.cern,https://github.com/root-project/root/pull/12523,1,['message'],['message']
Integrability,"unique_ptr can be nullptr too sometimes *and* anyway TStreamerInfo::Build does not make the same restriction.; The mismatch lead to baffling error message like:. Warning in <TStreamerInfo::BuildOld>: Cannot convert A::h from type: B to type: B, skip element. This solves one of the problems seen in https://sft.its.cern.ch/jira/browse/ROOT-9702.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2960:147,message,message,147,https://root.cern,https://github.com/root-project/root/pull/2960,1,['message'],['message']
Integrability,unittests-pyroot-pyz-rdataframe-asnumpy; Start 55: pyunittests-pyroot-pyz-rdataframe-makenumpy; 134/1231 Test #55: pyunittests-pyroot-pyz-rdataframe-makenumpy ......................... Passed 10.99 sec; 151/1231 Test #54: pyunittests-pyroot-pyz-rdataframe-asnumpy ........................... Passed 23.56 sec; Start 363: gtest-tree-dataframe-test-dataframe-friends; Start 364: gtest-tree-dataframe-test-dataframe-colnames; Start 365: gtest-tree-dataframe-test-dataframe-cache; 388/1231 Test #364: gtest-tree-dataframe-test-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372: gtest-tree-dataframe-test-dataframe-report .......................... Passed 0.79 sec; Start 374: gtest-tree-dataframe-test-dataframe-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-tes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:1252,interface,interface,1252,https://root.cern,https://github.com/root-project/root/pull/10300,1,['interface'],['interface']
Integrability,"ur nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:1726,interface,interface,1726,https://root.cern,https://github.com/root-project/root/issues/6563,2,"['interface', 'message']","['interface', 'message']"
Integrability,"urce> <dest>`; It set current time when file is copied.; Fine if changing done locally - new file modification will trigger; file copy. But problem appears when changes checkout from repository.; Git preserves time of last modification and this conflicts with logic; of incremental build. Example: . If one builds ROOT today, all files stamp will be from today in build directory.; If somebody commit changes already yesterday, all timestamps for that; changes will be from yesterday. If one checkout these commits, checked out ; files will get time stamps from yesterday. And when running cmake - it will do nothing. This is typical case with `js/` and `ui5/` folders with many files inside.; Very often changes in JSROOT and openui5 are missed by incremental builds. The only way to preserve timestamp in cmake - use `file(COPY ...)` command.; This PR does exactly this. . BUT!!! Drawback - cmake always run rule if source and target file stamps; matches. Incremental builds will be always filled with messages (even when nothing is changed). I did not found way to convince cmake do nothing if time stamp matches.; Probably, there is somewhere the option. Maybe one can apply such brutal-force; approach for `ui5/` and `js/` folders, where main problems appears for me. ```; [ 56%] Generating tutorials/fit/graph2dfit.C; [ 56%] Generating tutorials/fit/langaus.C; [ 56%] Generating tutorials/fit/line3Dfit.C; [ 56%] Generating tutorials/fit/minuit2FitBench.C; [ 56%] Generating tutorials/fit/minuit2GausFit.C; [ 56%] Generating tutorials/fit/minuit2FitBench2D.C; [ 56%] Generating tutorials/fit/multifit.py; [ 56%] Generating tutorials/fit/myfit.C; [ 56%] Generating tutorials/fit/multifit.C; [ 56%] Generating tutorials/fit/multidimfit.C; [ 56%] Generating tutorials/fit/qa2.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial3.C; [ 56%] Generating tutorials/fit/vectorizedFit.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial1.C; [ 56%] Generating tutorials/fitsio/FITS_tutorial2.C; [ 56%] Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804:1119,message,messages,1119,https://root.cern,https://github.com/root-project/root/pull/9804,1,['message'],['messages']
Integrability,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1518,message,message,1518,https://root.cern,https://github.com/root-project/root/issues/9489,4,['message'],"['message', 'messages']"
Integrability,"ut default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing to that makes more sense. Also, it just hasn't been tested at all with Minuit 1, I'm not even sure it will work with that version. Other than these `RooMinimizer` changes and the addition of `RooGradMinimizerFcn`, a new test was added called `testRooGradMinimizer`. It also uses a `test_lib.h` header that will also be used later on in tests of other new likelihood minimization implementations. **Do note that the test currently fails.** I originally had carefully made sure the results were bit-wise exactly the same as those from using classic `RooMinimizerFcn`, but there must have been some change in the meantime that I have not been able to integrate yet. I suspect it is caused by a change in Kahan summation, but have to inspect. In any case, the results are minor differences that do not negatively affect the effectiveness, the minimization just takes slightly different paths to the end results that will agree within the desired precision when set high enough. ~~**Final note:** this PR depends on three others: #8369, #8567 and #8569. These branches as they currently are were merged into this branch before making the one commit that adds everything in this actual commit. Do not merge this one before those. Also take care that this branch will be rebased and force pushed after each of those three are merged. In short: probably it will be easier to review this branch after those others are merged. However, of course, a review is already most welcome. Just make sure to only look at the diff from the final commit: https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:2650,integrat,integrate,2650,https://root.cern,https://github.com/root-project/root/pull/8596,1,['integrat'],['integrate']
Integrability,"v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2475,Depend,Dependabot,2475,https://root.cern,https://github.com/root-project/root/pull/11864,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,v6.20 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5713:13,depend,dependent,13,https://root.cern,https://github.com/root-project/root/pull/5713,1,['depend'],['dependent']
Integrability,v6.20: Fix potential startup error messages on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5628:35,message,messages,35,https://root.cern,https://github.com/root-project/root/pull/5628,1,['message'],['messages']
Integrability,v622 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5712:12,depend,dependent,12,https://root.cern,https://github.com/root-project/root/pull/5712,1,['depend'],['dependent']
Integrability,va/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RootFinder.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Rule.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleCut.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleEnsemble.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/RuleFit.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/RuleFitAPI.h: mutable MsgLogger fLogger; // message logger; tmva/inc/TMVA/RuleFitParams.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVKernelMatrix.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SVWorkingSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/SimulatedAnnealing.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/TActivationChooser.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/TransformationHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Types.h: mutable MsgLogger* fLogger; // ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:2439,message,message,2439,https://root.cern,https://github.com/root-project/root/issues/9792,1,['message'],['message']
Integrability,"webgui: adjust v7 classes drawing, synchronize jsroot code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:35,synchroniz,synchronize,35,https://root.cern,https://github.com/root-project/root/pull/1647,1,['synchroniz'],['synchronize']
Integrability,webgui: introduce binary interface for TWebWindow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785:25,interface,interface,25,https://root.cern,https://github.com/root-project/root/pull/1785,1,['interface'],['interface']
Integrability,"wiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Code-Squash AD support for RooFlexibleInterpVar.; 79b80a3163 [RF] Add Code-Squash AD support for RooPoisson.; a493684a19 [RF] Add Code-Squash AD support for the Hist* classes.; cc9e2730d0 [RF] Support extended fits in RooFit code generation plus AD; 4925e0c366 [RF] Remove debug output from `RooCurve::shiftCurveToZero()`; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:4862,interface,interface,4862,https://root.cern,https://github.com/root-project/root/pull/13295,1,['interface'],['interface']
Integrability,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:6881,rout,routine,6881,https://root.cern,https://github.com/root-project/root/issues/11385,1,['rout'],['routine']
Integrability,"xec<0>' requested here; static_cast<Action_t *>(this)->Exec(slot, entry, TypeInd_t());; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/RAction.hxx:223:4: note: in instantiation of member function 'ROOT::Internal::RDF::RActionCRTP<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > > >::Run' requested here; RAction(Helper &&h, const ColumnNames_t &bl, std::shared_ptr<PrevDataFrame> pd,; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/bin/../lib/gcc/x86_64-conda-linux-gnu/7.5.0/../../../../x86_64-conda-linux-gnu/include/c++/7.5.0/bits/unique_ptr.h:821:34: note: in instantiation of member function 'ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >::RAction' requested here; { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:157:19: note: in instantiation of function template specialization 'std::make_unique<ROOT::Internal::RDF::RAction<ROOT::Internal::RDF::FillHelper, ROOT::Detail::RDF::RNodeBase, ROOT::TypeTraits::TypeList<ROOT::VecOps::RVec<bool> > >, ROOT::Internal::RDF::FillHelper, const std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > &, std::shared_ptr<ROOT::Detail::RDF::RNodeBase>, ROOT::Internal::RDF::RBookedCustomColumns>' requested here; return std::make_unique<Action_t>(Helper_t(h, nSlots), bl, std::move(prevNode), std::move(customColumns));; ^; /home/stefan/src/miniconda3/envs/test-jupyroot/include/ROOT/RDF/InterfaceUtils.hxx:458:21: note: in instantiation of function template specialization 'ROOT::Internal::RDF::BuildAction<ROOT::VecOps::RVec<bool> , ROOT::Detail::RDF::RNodeBase>' requested here; auto act",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6675:6116,Interface,InterfaceUtils,6116,https://root.cern,https://github.com/root-project/root/issues/6675,1,['Interface'],['InterfaceUtils']
Integrability,"xport/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628==; ==75628== Conditional jump or move depends on uninitialised value(s); ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:2732,depend,depends,2732,https://root.cern,https://github.com/root-project/root/issues/16123,1,['depend'],['depends']
Integrability,"zed. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same.; 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree).; 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup; 1. ROOT 6.22/06. ### Additional context; I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:2752,interface,interfaces,2752,https://root.cern,https://github.com/root-project/root/issues/7308,1,['interface'],['interfaces']
Integrability,"zer: bad-free (libclang_rt.asan_osx_dynamic.dylib:arm64e+0x52ce0) in wrap_free+0x98; ==5670==ABORTING; [1] 5670 abort ./a.out AO2D.root; ```. Besides the crash, i would appreciate if one could show me how to create RNTuples in a given folder (which is probably something trivial I am missing). ### Reproducer. ```C++; #include <iostream>; #include <getopt.h>; #include <TFile.h>; #include <TTree.h>; #include <TKey.h>; #include <TLeaf.h>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RField.hxx>. void print_help(); {; std::cout << ""Usage: ao2dToAO2NT [options] input_file"" << std::endl;; std::cout << ""Options:"" << std::endl;; std::cout << "" -o, --output-file <file> Output file name"" << std::endl;; std::cout << "" -h, --help Print this help message"" << std::endl;; std::cout << "" -v, --verbose Verbose output"" << std::endl;; }. bool verbose = false;; std::string outputFile = ""ntuple.root"";; std::string inputFile;. void debug(const std::string& message); {; if (verbose) {; std::cout << message << std::endl;; }; }. void log(const std::string& message); {; std::cout << message << std::endl;; }. void error(const std::string& message); {; std::cerr << message << std::endl;; exit(1);; }. int main(int argc, char* argv[]); {; // Use getopt_long to parse the command line; // the first positional argument is the input file.; // -o is the output file; // -h is the help message; // -v is the verbose flag; static struct option long_options[] = {; {""output-file"", required_argument, nullptr, 'o'},; {""help"", no_argument, nullptr, 'h'},; {""verbose"", no_argument, nullptr, 'v'},; {nullptr, 0, nullptr, 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:9098,message,message,9098,https://root.cern,https://github.com/root-project/root/issues/13996,2,['message'],['message']
Integrability,… case. Thanks @Axel-Naumann !. This fixes the performance issues for millions of request to the type system from cppyy if the type is for example a `std::vector<int>`. Waiting for response of Wim for integration in the official cppyy-clingwrapper repo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3515:201,integrat,integration,201,https://root.cern,https://github.com/root-project/root/pull/3515,1,['integrat'],['integration']
Integrability,"… enum. Extend root-project/root@c14934ec983 to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. ```; scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^; ```. cc: @smuzaffar, @davidlange6, @oshadura.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4985:625,interface,interface,625,https://root.cern,https://github.com/root-project/root/pull/4985,2,['interface'],['interface']
Integrability,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:909,depend,depends,909,https://root.cern,https://github.com/root-project/root/pull/2803,1,['depend'],['depends']
Integrability,…argets. ROOT builds cling and then moves a set of headers under the semi-private $ROOTSYS/etc/cling. This poses an issue -- the set of proper cling dependencies seem not enough to propagate that information to rootcling for example. Instead of adding LLVMRES to rootcling (as it is the case for rootcling_stage1) add the dependency to something more fundamental such as ClingUtils. This will propagate it transitively to all parties without having to specify the sort-of internal LLVMRES target. This patch should fix the incremental builds where the error is:; error: file '/.../RuntimePrintValue.h' from the precompiled header has been overridden. cc: @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4488:149,depend,dependencies,149,https://root.cern,https://github.com/root-project/root/pull/4488,2,['depend'],"['dependencies', 'dependency']"
Integrability,…ath on different platforms. Also integrated in official cppyy repo:; https://bitbucket.org/wlav/cppyy/pull-requests/4/use-platform-independent-python-include/diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3415:34,integrat,integrated,34,https://root.cern,https://github.com/root-project/root/pull/3415,1,['integrat'],['integrated']
Integrability,"…chInstalledSoftware. This change was already proposed in PR 4647, commit b8cd32, for the; following reason: apparently, SearchInstalledSoftware is called AFTER RootInstallDirs;; the consequence of this is that CMAKE_INSTALL_PYROOTDIR does not take; the proper value ONLY IF its value is NOT specified by the user.; The reason for this is that the value assigned to; CMAKE_INSTALL_PYROOTDIR depends on the Python version that is found.; For this reason, the search for Python is here moved to; RootBuildOptions, which is run BEFORE RootInstallDirs, and this; guarantees that the default value is the correct one. Example of current (wrong) behavior on an Ubuntu machine:; CMAKE_INSTALL_PYROOTDIR -> lib/site-packages. Example of correct behavior (this PR):; CMAKE_INSTALL_PYROOTDIR -> lib/python2.7/dist-packages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4939:391,depend,depends,391,https://root.cern,https://github.com/root-project/root/pull/4939,2,['depend'],['depends']
Integrability,"…eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class; that inherits from the base C++	class. Since I/O on jitted classes is not; supported by ROOT, trying to pickle a cross-inheritance Python object fails.; For this to work, dictionaries would need to be generated for the jitted class; before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error; message when the user tries to pickle a cross-inheritance Python object. It is; suggested in the message to define a custom `__reduce__` method for the derived; Python class. That `__reduce__` method can e.g. return a callable and some; arguments with which the derived object can be constructed during deserialization,; thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did; not suffer from the problem described above), but serialization/deserialization; of cross-inheritance Python objects was not properly supported anyway,; since the class of the unpickled object was the base C++ class, not the derived; Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8476:89,wrap,wrapper,89,https://root.cern,https://github.com/root-project/root/pull/8476,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"…ethod of a histogram. Fix the following warning and errors when selecting `Add` from the context menu (as decribed [on the forum](https://root-forum.cern.ch/t/problem-adding-histograms-in-tbrowser/40088)):; ```; Warning in <TRootContextMenu::Dialog>: data type is not basic type, assuming (int). Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!; ```; And add `gPad->Update()` in `TObject::Execute()` to properly update the canvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6046:355,interface,interface,355,https://root.cern,https://github.com/root-project/root/pull/6046,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"…he calling package (CMake 3.17). Example: . CMake Warning (dev) at /usr/share/cmake-3.17/Modules/FindPackageHandleStandardArgs.cmake:272 (message):; The package name passed to `find_package_handle_standard_args` (MYSQL) does; not match the name of the calling package (MySQL). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindMySQL.cmake:65 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:15 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:601 (find_package); CMakeLists.txt:168 (include); This warning is for project developers. Use -Wno-dev to suppress it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5245:139,message,message,139,https://root.cern,https://github.com/root-project/root/pull/5245,1,['message'],['message']
Integrability,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6097:307,interface,interface,307,https://root.cern,https://github.com/root-project/root/pull/6097,3,['interface'],['interface']
Integrability,"…istered with gtest_main.a. Error message is not obvious: usr/bin/ld: ../../../googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function main:gtest_main.cc:(.text.startup+0x26): undefined reference to testing::InitGoogleTest(int*, char**)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5523:34,message,message,34,https://root.cern,https://github.com/root-project/root/pull/5523,1,['message'],['message']
Integrability,"…ndows). This fixes the following:. CMake is re-running because C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp is out-of-date.; the file 'C:/Users/sftnight/git/master/CMakeLists.txt'; is newer than 'C:/Users/sftnight/build/debug/CMakeFiles/generate.stamp.depend'; result='-1'; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.16299.; -- Looking for python; -- Preferring Python version 3; -- Found Python: C:/Python37-32/python.exe (found version ""3.7.4"") found components: Interpreter Development; CMake Error at C:/Program Files/CMake/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:226 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; C:/Program Files/CMake/share/cmake-3.16/Modules/FindPython.cmake:347 (find_package_handle_standard_args); cmake/modules/SearchRootCoreDeps.cmake:72 (find_package); CMakeLists.txt:120 (include). -- Configuring incomplete, errors occurred!; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeOutput.log"".; See also ""C:/Users/sftnight/build/debug/CMakeFiles/CMakeError.log"".; CMake Configure step failed. Build files cannot be regenerated correctly. Looking at cmake/modules/SearchRootCoreDeps.cmake, line 72:; find_package(Python COMPONENTS NumPy). spotted by Bertrand on Windows.; Apparently the keyword REQUIRED is not enough to avoid stopping the; compilation if a package is not found (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5001:264,depend,depend,264,https://root.cern,https://github.com/root-project/root/pull/5001,2,"['depend', 'message']","['depend', 'message']"
Integrability,"…ws. Resolves #9607. Fix the following compilation errors when using the `/permissive-` compiler flag:; ```; hist\hist\inc\TF1.h(463,1): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\inc\TF1.h(463,1): message : could be 'TString'; hist\hist\inc\TF1.h(463,1): message : or 'const char *'. hist\hist\src\TH1.cxx(3128,91): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; hist\hist\src\TH1.cxx(3128,91): message : could be 'TString'; hist\hist\src\TH1.cxx(3128,91): message : or 'const char *'. gui\gui\src\TGFileDialog.cxx(390,53): error C2445: result type of conditional expression is ambiguous: types 'TString' and 'const char [1]' can be converted to multiple common types; gui\gui\src\TGFileDialog.cxx(390,53): message : could be 'TString'; gui\gui\src\TGFileDialog.cxx(390,53): message : or 'const char *'. graf2d\win32gdk\src\TGWin32.cxx(2690,47): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; graf2d\win32gdk\src\TGWin32.cxx(3055,44): error C2664: 'void gdk_gc_set_clip_mask(GdkGC *,GdkBitmap *)': cannot convert argument 2 from 'const unsigned long' to 'GdkBitmap *'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613:310,message,message,310,https://root.cern,https://github.com/root-project/root/pull/9613,6,['message'],['message']
Modifiability," 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2713,config,configuration,2713,https://root.cern,https://github.com/root-project/root/issues/9436,1,['config'],['configuration']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47751,variab,variable,47751,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49447,variab,variable,49447,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:134734,Variab,VariableDecorrTransform,134734,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability, 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat16_t:' at line 119 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:121:30: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:26920,variab,variable,26920,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]; df[""dif",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3293,Flexible,FlexibleInterpVar,3293,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability," <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https://github.com/NixOS/nixpkgs). The original work is licensed under the MIT license by Eelco Dolstra and the Nixpkgs/NixOS contributors. 1. Run `mkdir test-root-6.27`; 2. Place the following files into the `test-root-6.27` directory:. `setup-hook.sh` and `sw_vers.patch` from https://github.com/NixOS/nixpkgs/tree/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root. `default.nix`. ```Nix; { stdenv; , lib; , callPack",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2830,sandbox,sandbox,2830,https://root.cern,https://github.com/root-project/root/issues/11920,1,['sandbox'],['sandbox']
Modifiability," Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24713,Config,Configurable,24713,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kBool_t:' at line 173 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174:35: warning: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:47539,variab,variable,47539,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:61097,variab,variable,61097,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62793,variab,variable,62793,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability, Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:67881,variab,variable,67881,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -6.61703e-01; 2 alpha_NP_shape -2.12313e-01; 3 mu 1.10747e+00; ```; where the pull for `alpha_NP_norm` has increased, which makes sense given the removal of its constraint term. #### `HistoSys` with uniform constraint [not working as expected]. To see the behavior of the `HistoSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration for `NP_shape`. The measurement s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1918,config,configuration,1918,https://root.cern,https://github.com/root-project/root/issues/9070,1,['config'],['configuration']
Modifiability," Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:1078,Config,Configure,1078,https://root.cern,https://github.com/root-project/root/issues/9524,1,['Config'],['Configure']
Modifiability," Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""math"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.call(cmd, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL). if file_renamed != file:; os.rename(file_renamed, file). """"""; Finally, replace the ClassDef with the ClassDefOverride macros.; find math -type f -print | xargs sed -i 's/ClassDef(/ClassDefOverride(/'; ...and change back the ClassDefOverride of non-overriding base classes.; """"""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083:1598,config,config,1598,https://root.cern,https://github.com/root-project/root/pull/10083,1,['config'],['config']
Modifiability," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:1025,extend,extended,1025,https://root.cern,https://github.com/root-project/root/issues/8976,1,['extend'],['extended']
Modifiability," This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:375,config,config,375,https://root.cern,https://github.com/root-project/root/issues/16689,1,['config'],['config']
Modifiability," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:1759,variab,variable,1759,https://root.cern,https://github.com/root-project/root/issues/7345,1,['variab'],['variable']
Modifiability," [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1284,plugin,pluginFWCoreServicesPlugins,1284,https://root.cern,https://github.com/root-project/root/issues/10732,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3913,variab,variable,3913,https://root.cern,https://github.com/root-project/root/issues/10191,2,['variab'],['variable']
Modifiability," at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; //c->cd(1);//works; c->cd();//fails; TText* t= new TText(0.5,0.5,""some text"");; t->Draw();; delete t;; delete c;; delete C;; return 0;; }. ```; Compile. ```; g++ pad4.cxx $(root-config --glibs --cflags --libs) -o pad4 -g; ```. run. ```; ./pad4; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7/EPEL. ## Additional context; Possible fix:; Change ; ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; return gPad;; }; ..... ```; to. ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; if (!fPrimitives) fPrimitives = new TList;; return gPad;; }; ..... ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:2490,config,config,2490,https://root.cern,https://github.com/root-project/root/issues/6447,1,['config'],['config']
Modifiability," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:2423,variab,variable,2423,https://root.cern,https://github.com/root-project/root/pull/8329,1,['variab'],['variable']
Modifiability," but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1812,config,config,1812,https://root.cern,https://github.com/root-project/root/issues/11977,1,['config'],['config']
Modifiability," char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /home/user/Builds/root_build/lib/libCling.so; #18 0x00007f2da61bdc7f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #19 0x00007f2da61be51e in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/user/Builds/root_build/lib/libCling.so; #20 0x00007f2dab964d69 in TApplication::ExecuteFile(char const*, int*, bool) () from /home/user/Builds/root_build/lib/libCore.so; #21 0x00007f2dabd06bdc in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/user/Builds/root_build/lib/libRint.so; #22 0x00007f2dabd0f3ad in TRint::Run(bool) () from /home/user/Builds/root_build/lib/libRint.so; #23 0x00000000004011ad in main (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:5252,variab,variable,5252,https://root.cern,https://github.com/root-project/root/issues/14037,1,['variab'],['variable']
Modifiability," error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd638000000-7fd638021000 rw-p 00000000 00:00 0 ; 7fd638021000-7fd63c000000 ---p 00000000 00:00 0 ; 7fd63ffc8000-7fd6400c3000 r--p 00000000 00:32 432514122 /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256:1133,config,config,1133,https://root.cern,https://github.com/root-project/root/issues/8256,1,['config'],['config']
Modifiability," gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # lsof # for ROOT (>=6.28); man; which; ]}""; patchRcPathFish ""$out/bin/thisroot.fish"" ""${lib.makeBinPath [; coreutils; man; which; ]}""; '';. setupHook = ./setup-hook.sh;; }; ```. `flake.nix`. ```Nix; {; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/2787fc7d1e51404678614bf0fe92fc296746eec0"";. outputs = { flake-utils, nixpkgs, ... }: flake-utils.lib.eachDefaultSystem (system:; let; lib = nixpkgs.lib;; pkgs = nixpkgs.legacyPackages.${system};; root = with pkgs; callPackage ./. {; python = python3;; inherit (darwin.apple_sdk.frameworks) Cocoa CoreSymbolication OpenGL;; # https://github.com/NixOS/nixpkgs/issues/201254; stdenv = if stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU then gcc11Stdenv else stdenv;; };; in; {; packages = {; default = root;; inherit root;; };; });; }; ```. `flake.lock`. ```JSON; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1667395993,; ""narHash"": ""sha256-nuEHfE/LcWyuSWnS8t12N1wc105Qtau+/OdUAjtQ0rA="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""5aed5285a952e0b949eb3ba02c12fa4fcfef535f"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1670507980,; ""narHash"": ""sha256-riNZa0xzM1it3pzxciwALeMs+0CsBMWIW2FqulzK8vM="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; }; },; ""root"": {; ""inputs"": {; ""flake-utils"": ""flake-utils"",; ""nixpkgs"": ""nixpkgs""; }; }; },; ""root"": ""root"",; ""version"": 7; }; ```. 4. Run `nix --extra-experimental-features 'nix-command flakes' build --no-link --k",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:9259,inherit,inherit,9259,https://root.cern,https://github.com/root-project/root/issues/11920,1,['inherit'],['inherit']
Modifiability," https://root-forum.cern.ch/t/how-to-implement-a-horizontal-shift-for-roohistpdf/16787/6. I think I can approximately reproduce the workflow of the user that posted on the forum with this code. ```C++; void repro(); {; using namespace RooFit;. RooRealVar x(""x"", """", 1000, 1500);; x.setBins(50);. RooRealVar shift(""shift"", """", 10.0, -100, 100);. RooFormulaVar xShifted(""x_shifted"", ""x - shift"", {x, shift});; // Doesn't work better either...; // RooLinearVar xShifted(""x_shifted"", """", x, RooConst(1.0), shift);. std::vector<std::unique_ptr<RooDataHist>> templateHists;; RooArgSet pdfs;; RooArgSet yields;. // Fill the templates; for (std::size_t i = 0; i < 2; ++i) {; auto suffix = std::to_string(i);. TF1 pdf(""pdf"", ""gaus"", x.getMin(), x.getMax());; pdf.SetParameters(1, 1200 + 100 * i, 50);; pdf.Print();; TH1D h(""h"", """", x.numBins(), x.getMin(), x.getMax());; h.FillRandom(""pdf"", 10000);. templateHists.emplace_back(std::make_unique<RooDataHist>((""template_data_hist_"" + suffix).c_str(), """", x, &h));; pdfs.addOwned(; *new RooHistPdf((""template_hist_pdf_"" + suffix).c_str(), """", xShifted, x, *templateHists.back(), 0));; yields.addOwned(*new RooRealVar((""n_"" + suffix).c_str(), """", 1000, 100, 100000));; }. // Construct final model; RooAddPdf model(""model"", """", pdfs, yields);. std::unique_ptr<RooDataHist> data{model.generateBinned(x)};. // If the range is larger than the variable range, the problem is even amplified; model.fitTo(*data, Range(0.0, 5000));. TCanvas c1;. auto frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, Range(0.0, 2000.0));; model.plotOn(frame, Components(*pdfs[0]), LineStyle(kDashed), LineColor(kRed));; model.plotOn(frame, Components(*pdfs[1]), LineStyle(kDashed), LineColor(kBlue));; frame->Draw();. c1.SaveAs(""plot.png"");; }; ```. The plot looks like this:; ![plot](https://github.com/root-project/root/assets/6578603/fb0b4c49-50b6-4f6b-ae50-8a1cac2248a8). It would be nice if this plotting would work better, sampling the RooHistPdf at the correct points.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13030:1916,variab,variable,1916,https://root.cern,https://github.com/root-project/root/issues/13030,1,['variab'],['variable']
Modifiability, in /opt/root_src/build/rmkdepend/parse.c:335; 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340; 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340; 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345; 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345; 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376; 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376; 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384; 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384; 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388; 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389; 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389; 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392; /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108; /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:42778,variab,variable,42778,https://root.cern,https://github.com/root-project/root/issues/7410,1,['variab'],['variable']
Modifiability, in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52836,variab,variable,52836,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability," in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3556,Config,ConfigurableParam,3556,https://root.cern,https://github.com/root-project/root/issues/8180,3,"['Config', 'config']","['ConfigurableParam', 'configFile']"
Modifiability," in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zstd clad dataframe exceptions gdml http imt mlp minuit2 roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva spectrum vdt x11 xml; -- Configuring done; -- Generating done; -- Build files have been written to: /reproducer/build; + cmake --bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:2583,Config,Configuration,2583,https://root.cern,https://github.com/root-project/root/issues/10478,1,['Config'],['Configuration']
Modifiability," industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1863,variab,variable,1863,https://root.cern,https://github.com/root-project/root/pull/16442,1,['variab'],['variable']
Modifiability," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6); #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594); #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29); #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c); #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca); ; ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1; SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) ; ==6948==ABORTING; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. ; ```; ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. `git clone https://github.com/root-project/root.git root_src`; 3. `mkdir root_build && cd root_build`; 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`; 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ); 6. `set ASAN_OPTIONS=detect_odr_violation=0`; 7. `cmake --build . --config Release` . ### Setup; <!--; 1. Operating system: Windows 10; 2. How you obtained ROOT: built it myself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:7062,config,config,7062,https://root.cern,https://github.com/root-project/root/issues/9445,1,['config'],['config']
Modifiability," is the expected behaviour?. After a call to a fit function, e.g.`h1->Fit(...)` (see below) , expect `TVirtualFitter::GetFitter() != nullptr` to be true. ### How to reproduce?. This snippet (taken from the test-stresshistogram source),; ```; ROOT::DisableImplicitMT();; double gaus1d(const double *x, const double * p) { return p[0] * TMath::Gaus( x[0], p[1], p[2], true); }; TH1D * h1 = new TH1D(""h1"",""h1"",100,-5,5);; TF1 * gaus = new TF1(""gaus1d"",gaus1d,-5,5,3);; gaus->SetParameters(1,0,1);; h1->FillRandom(""gaus1d"",10000);; auto res = h1->Fit(gaus,""L0S"");; cout << TVirtualFitter::GetFitter() << endl;; ```; run either interactively or in compiled code, should print a non-zero number, which it does on older platforms. But it prints `0x0` with the latest ROOT/macOS/Xcode (details below). ### ROOT version. 6.28.04, 6.26.10. ### How did you install ROOT?. Custom build from source. ### Which operating system are you using?. macOS 13.4, Xcode 14.3.1; macOS 12.6.5, Xcode 14.2. ### Additional context. It works with ROOT 6.28.04 on macOS 11.7.7 (Intel) with Xcode 13.2.1. It fails with the exact same ROOT, compiled with the exact same configuration, on macOS 13.4 (Intel) with Xcode 14.3.1. Details:; ```; $ root-config --cflags; -stdlib=libc++ -pthread -std=c++17 -m64 -I/Users/ole/Develop/BUILD/ROOT/6.28.04/include; $ root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_freetype builtin_glew builtin_gtest builtin_llvm builtin_openui5 builtin_tbb builtin_unuran builtin_vdt clad cocoa dataframe exceptions fftw3 fortran gdml gviz http imt libcxx mathmore mlp minuit2 mysql opengl pgsql pyroot pythia8 qt6web roofit webgui root7 rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vc vdt vecgeom xml xrootd; ```. It also fails with ROOT 6.26.10 on the macOS 13.4 system, and it also works with that ROOT version on the macOS 11.7.7 system. This seems to be an incompatibility with the newer macOS and/or Xcode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13041:1689,config,configuration,1689,https://root.cern,https://github.com/root-project/root/issues/13041,3,['config'],"['config', 'configuration']"
Modifiability," it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1458,Config,ConfigType,1458,https://root.cern,https://github.com/root-project/root/issues/12358,4,['Config'],['ConfigType']
Modifiability," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1365,variab,variable,1365,https://root.cern,https://github.com/root-project/root/issues/16577,1,['variab'],['variable']
Modifiability, of '||' is true in /opt/root_src/math/mathcore/src/triangle.c:15901; 152: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15902; 153: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15902; 154: Assuming field 'edgesout' is 0 in /opt/root_src/math/mathcore/src/triangle.c:15940; 155: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:15940; 156: Assuming field 'voronoi' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:15947; 157: Taking true branch in /opt/root_src/math/mathcore/src/triangle.c:15947; 158: Passing null pointer value via 3rd parameter 'vpointlist' in /opt/root_src/math/mathcore/src/triangle.c:15949; 159: Calling 'writevoronoi' in /opt/root_src/math/mathcore/src/triangle.c:15949; 160: Field 'quiet' is not equal to 0 in /opt/root_src/math/mathcore/src/triangle.c:14972; 161: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:14972; 162: Dereference of null pointer (loaded from variable 'vpointlist') in /opt/root_src/math/mathcore/src/triangle.c:14976; /opt/root_src/math/mathcore/src/triangle.c:15380:3: warning: Value stored to 'worstaspect' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'worstaspect' is never read in /opt/root_src/math/mathcore/src/triangle.c:15380; /opt/root_src/math/matrix/inc/TMatrixT.h:280:4: warning: Returning null reference [clang-analyzer-core.uninitialized.UndefReturn]; 1: Taking false branch in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Loop condition is false. Exiting loop in /opt/root_src/math/matrix/src/TMatrixT.cxx:121; 4: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 5: Control jumps to 'case kTransposed:' at line 135 in /opt/root_src/math/matrix/src/TMatrixT.cxx:123; 6: Calling 'TMatrixT::Allocate' in /opt/root_src/math/matrix/src/TMatrixT.cxx:136; 7: Assuming 'no_rows' is >= 0 in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:123337,variab,variable,123337,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability," of a split and clean-up of #8294. ## Changes or fixes:; - Adds `LikelihoodJob` and `LikelihoodGradientJob` under the `RooFit::TestStatistics` namespace.; - Adds the `LikelihoodGradientJob` test case, which also covers the rest of the `TestStatistics` framework, as promised in https://github.com/root-project/root/pull/8700#issue-947741252.; - Adds two `KahanSum` constructors that allow for initialization of the full internal state. This is necessary for serializing and rematerializing `KahanSum`s so they can be sent over ZeroMQ sockets.; - `RooMinimizer` templated constructors and create factory functions were removed. These are replaced with enum class flags that allow the user to choose the type of `RooAbsMinimizerFcn` (this was already in place) and the `Likelihood(Gradient)Wrapper` implementations to use, i.e. the classes introduced in this PR. Similar changes were made in `MinuitFcnGrad`, which is now also template-free.; - `RooMinimizer`'s (now) two constructors use two helper functions now to avoid code duplication.; - There were some mistakes in the build setup of `RooFitZMQ` and `RooFit::MultiProcess` that only came to light now when building these classes that depend on `RooFit::MultiProcess`. These are fixed.; - A few functions had to be added to `LikelihoodGradientWrapper` and `MinuitFcnGrad` for passing along previous gradient, second derivative and step size information from Minuit2 to RooFit and back, i.e. using the functionality introduced in #8694. ## Checklist:. - [x] tested changes locally; - [x] update the docs (if necessary); - [x] unify copyright/license headers with previous commits; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] refactor member names: underscore suffix; - [x] remove commented out code and TODOs and other junk; - [x] clang-tidy up; - [ ] rebase into two commits (one for `KahanSum` and one for the rest); - [x] make Readme.md for developers with some examples to run",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349:2289,refactor,refactor,2289,https://root.cern,https://github.com/root-project/root/pull/9349,1,['refactor'],['refactor']
Modifiability," of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistFactory::Measurement&, RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration const&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; ```. ### Reproducer. Unfortunately, I do not have a simple reproducer. But I can provide the XML files produced by the code if that helps?. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Nov 26 2023, 09:58:47; From remotes/origin/HEAD@v6-31-01-341-gab6cdd5dda. ### Installation method. build from source. ### Operating system. Ubuntu 23.10. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:3386,Config,Configuration,3386,https://root.cern,https://github.com/root-project/root/issues/14225,1,['Config'],['Configuration']
Modifiability," of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1061,Config,ConfigType,1061,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Config'],['ConfigType']
Modifiability," out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://root.cern/forum; 2187: Only if you are really convinced it is a bug in ROOT then please submit a; 2187: report at https://root.cern/bugs Please post the ENTIRE stack trace; 2187: from above as an attachment in addition to anything else; 2187: that might help us fixing this issue.; 2187: ===========================================================; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:7307,variab,variable,7307,https://root.cern,https://github.com/root-project/root/issues/11867,1,['variab'],['variable']
Modifiability," realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:1959,variab,variable,1959,https://root.cern,https://github.com/root-project/root/pull/15044,1,['variab'],['variable']
Modifiability," remove; -- Looking for remove - found; -- Looking for shmat; -- Looking for shmat - found; -- Looking for IceConnectionNumber in ICE; -- Looking for IceConnectionNumber in ICE - found; -- X11_INCLUDE_DIR: /usr/include; -- X11_LIBRARIES: /usr/lib/libSM.so;/usr/lib/libICE.so;/usr/lib/libX11.so;/usr/lib/libXext.so; -- X11_Xpm_INCLUDE_PATH: /usr/include; -- X11_Xpm_LIB: /usr/lib/libXpm.so; -- X11_Xft_INCLUDE_PATH: /usr/include; -- X11_Xft_LIB: /usr/lib/libXft.so; -- X11_Xext_INCLUDE_PATH: /usr/include; -- X11_Xext_LIB: /usr/lib/libXext.so; -- Found GIF: /usr/lib/libgif.so (found version ""5.2.1""); -- Found TIFF: /usr/lib/libtiff.so (found version ""4.3.0""); -- Found PNG: /usr/lib/libpng.so (found version ""1.6.37""); -- Found JPEG: /usr/lib/libjpeg.so (found version ""80""); -- Looking for AfterImage; -- Could NOT find AfterImage (missing: AFTERIMAGE_INCLUDE_DIR AFTERIMAGE_LIBRARIES); -- AfterImage not found. Switching on builtin_afterimage option; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.8.0""); -- Found GSL: /usr/include (found suitable version ""2.7.1"", minimum required is ""1.10""); -- Looking for OpenGL; -- Found OpenGL: /usr/lib/libOpenGL.so; -- Looking for GLEW; -- Could NOT find GLEW (missing: GLEW_INCLUDE_DIRS GLEW_LIBRARIES); -- GLEW not found. Switching on builtin_glew option; -- Looking for gl2ps; -- Could NOT find gl2ps (missing: GL2PS_LIBRARY GL2PS_INCLUDE_DIR); -- gl2ps not found. Switching on builtin_gl2ps option; -- Looking for LibXml2; -- Found LibXml2: /usr/lib/libxml2.so (found version ""2.9.13""); -- Found OpenSSL: /usr/lib/libcrypto.so (found version ""1.1.1n""); -- Looking for MySQL; -- Found MySQL: /usr/include/mysql; -- Looking for Oracle; -- Oracle not found.; -- Oracle: You can specify includes: -DORACLE_PATH_INCLUDES=/usr/include/oracle/10.2.0.3/client; -- currently found includes:; -- Oracle: You can specify libs: -DORACLE_PATH_LIB=/usr/lib/oracle/10.2.0.3/client/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:4700,config,config,4700,https://root.cern,https://github.com/root-project/root/issues/10528,1,['config'],['config']
Modifiability," simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapsh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:3983,variab,variable,3983,https://root.cern,https://github.com/root-project/root/pull/12905,4,['variab'],['variable']
Modifiability," ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2240,config,configuration,2240,https://root.cern,https://github.com/root-project/root/issues/7936,1,['config'],['configuration']
Modifiability," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3363,config,configuring,3363,https://root.cern,https://github.com/root-project/root/issues/10291,1,['config'],['configuring']
Modifiability," think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:1344,plugin,plugins,1344,https://root.cern,https://github.com/root-project/root/issues/14492,3,['plugin'],['plugins']
Modifiability," time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it probably interests only a very small fraction of use cases for; distributed RDataFrame, mainly regarding quick checks done locally before; actually sending the computations to a cluster. Co-authored-by: Enric Tejedor Saavedra <enric.tejedor.saavedra@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:1322,variab,variable,1322,https://root.cern,https://github.com/root-project/root/pull/9811,1,['variab'],['variable']
Modifiability," uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The executable can be compiled with:; ```bash; g++ $(root-config --cflags) -o convolution convolution.cc $(root-config --libs) -lRooFitCore -lRooFit; ```. An interesting observation is that by turning the `RooProdPdf` into a `RooRealSumPdf` by adding another `RooUniform` with coefficient zero, the problem is gone. So the problem is really in the interaction between `RooProdPdf` and `RooFFTConvPdf`. <img src=""https://user-images.githubusercontent.com/6578603/107349328-5eb73300-6ac8-11eb-953b-b21e90db8abc.png"" width=""400"" alt=""convolution""/> <img src=""https://user-images.githubusercontent.com/6578603/107349528-9de58400-6ac8-11eb-997a-ea938868de60.png"" width=""400"" alt=""convolution_hotfix""/>. ### Setup. Current ROOT master built on CentOS 7. ### Additional context. * Originally reported in the [ROOT forum](https://root-forum.cern.ch/t/roofftconvpdf-gives-constant-zero/43443); * In the forum it was reported that this problem also arises with the numerical convolution `RooNumConvPdf`, **however**, the example in **this issue works fine** with `RooNumConvPdf`!; * Two Jira issues appear to be connected to this issue: [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:2110,config,config,2110,https://root.cern,https://github.com/root-project/root/issues/7157,1,['config'],['config']
Modifiability," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1748,config,configuration,1748,https://root.cern,https://github.com/root-project/root/pull/11882,1,['config'],['configuration']
Modifiability," weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1035,variab,variable,1035,https://root.cern,https://github.com/root-project/root/issues/11333,1,['variab'],['variable']
Modifiability,""" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1867,config,configure,1867,https://root.cern,https://github.com/root-project/root/issues/11787,1,['config'],['configure']
Modifiability,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1739,variab,variable,1739,https://root.cern,https://github.com/root-project/root/issues/7844,1,['variab'],['variable']
Modifiability,"""bad"" test fails when the reproducer is built against a ROOT with `runtime_cxxmodules=ON` but passes when `runtime_cxxmodules=OFF`. Verified with 6.24/06 and 6.25/02. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tests ""good,"" and ""bad"" should both pass. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1477,config,configured,1477,https://root.cern,https://github.com/root-project/root/issues/9583,1,['config'],['configured']
Modifiability,"""overloadedFreePtsq"", ROOT.squared). #will fail because argument name determination from overloads is ambiguous; d = d.Define(""overloadedFreePtsq"", ROOT.squared2). #templated free function; d = d.Define(""templatedFreeNmuonsSq"", ROOT.squared[""int""], [""nMuons""]). #static class member; d = d.Define(""staticPtsq"", ROOT.Callable.mul, [""Muon_pt"", ""Muon_pt""]). #class member; d = d.Define(""overloadedMemberPtsq"", ROOT.Callable().squared, [""Muon_pt""]). #templated class member; d = d.Define(""templatedMemberNmuonsSq"", ROOT.Callable().squared[""int""], [""nMuons""]). #overloaded operator(); d = d.Define(""overloadedCallPtsq"", ROOT.Callable(), [""Muon_pt""]). #string expression; d = d.Define(""lambdaPtsq"", ""Muon_pt*Muon_pt""). #complete lambda expression (direct jitting without parsing); d = d.Define(""lambdaPtsq"", ""[](float x) { return x*x; }"", [""Muon_pt""]). #complete lambda expression with inferred column names and argument types (direct jitting without parsing, argument names determined from cling after jitting); d = d.Define(""lambdaAutoPtsq"", ""[](auto Muon_pt) { return Muon_pt*Muon_pt; }""); ```. A few remaining issues here:; - ""Warning: failed - offset calculation between TList and TViewPubFunctions"" in some cases (related to extracting argument names through cling machinery). - cppyy gives limited or obscure errors on template instantiation. In this case the templates are instantiated in code compiled by TClingCallFunc::compile_wrapper() which apparently has different verbosity than TCling::Declare (jitting through this route also does not forcibly disable the null pointer check like Declare does, and possibly other subtleties); In particular there's one nasty case which is fairly common and produces totally incomprehensible errors compared to compiling the same code in gcc (or even with TCling::Declare), where an incorrect number of columns is passed to Declare compare to the callable. All of the above functionality can be easily extended to Filter once we're happy with the direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:4299,extend,extended,4299,https://root.cern,https://github.com/root-project/root/pull/9174,1,['extend'],['extended']
Modifiability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:78,layers,layers,78,https://root.cern,https://github.com/root-project/root/pull/2117,2,['layers'],['layers']
Modifiability,# Backport. This will backport the following commits from `master` to `v6-32-00-patches`:; - [[skip-ci] improve labeling in candle plot examples.](https://github.com/root-project/root/pull/15659); - [Fix warnings in timeaxis3.C](https://github.com/root-project/root/pull/15659); - [Simplify timeonaxis.C and make the year labels clearer](https://github.com/root-project/root/pull/15659); - [simplify timeonaxis examples.](https://github.com/root-project/root/pull/15659); - [Remove an unused variable and use exact dates.](https://github.com/root-project/root/pull/15659). <!--- Backport version: 9.5.1 -->. ### Questions ?; Please refer to the [Backport tool documentation](https://github.com/sorenlouv/backport),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:492,variab,variable,492,https://root.cern,https://github.com/root-project/root/pull/15674,1,['variab'],['variable']
Modifiability,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:622,refactor,refactored,622,https://root.cern,https://github.com/root-project/root/pull/2118,2,['refactor'],"['refactor', 'refactored']"
Modifiability,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:96,variab,variables,96,https://root.cern,https://github.com/root-project/root/pull/10780,4,['variab'],"['variable', 'variables']"
Modifiability,"# Problem; It is more efficient to debug applications relying on ROOT having a debug ROOT build. # Solution I would like. Provide debug builds for nightlies (and optionally for releases). # Alternatives . - Debug on Linux with released ROOT works perfectly for standard RedHat distros ( the others are less relevant ).; This is a very good alternative (thanks to Mattias!), but Linux-only and release-only. . - Building from the sources is a very-very bad alternative, as the created builds cannot be transferred elsewhere, i.e. shared with collaborators. Another reason why this is a bad alternative: building with the full configuration on Mac in a reasonable time requires a lot of CPU power, much more than a single user laptop can provide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6430:625,config,configuration,625,https://root.cern,https://github.com/root-project/root/issues/6430,1,['config'],['configuration']
Modifiability,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10745:202,variab,variable,202,https://root.cern,https://github.com/root-project/root/pull/10745,1,['variab'],['variable']
Modifiability,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10997:254,variab,variable,254,https://root.cern,https://github.com/root-project/root/pull/10997,1,['variab'],['variable']
Modifiability,# This Pull request: Improves documentation of TRandom::GetSeed() methods in derived classes. ## Changes or fixes:; Documentation involving inconsistencies in `TRandom::GetSeed()` methods. In the derived classes the seed variable is used to store internal state of the generator not to keep track of the initial state with which it was invoked. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #14580,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14687:221,variab,variable,221,https://root.cern,https://github.com/root-project/root/pull/14687,1,['variab'],['variable']
Modifiability,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10992:143,variab,variables,143,https://root.cern,https://github.com/root-project/root/pull/10992,1,['variab'],['variables']
Modifiability,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10883:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/10883,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11037:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11037,2,['variab'],['variable']
Modifiability,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11058:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/11058,2,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request: [Fix #6981] RDisplay::Print to list custom number of elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed.; ; Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element.; ; Additional paramter to the constructor of the the RDisplay() was added,; that is the nMaxCollectionElements. It determines, number of elements to be; shown from long collction. Default is 10.; ; Corresponding tests were adapted and additional ones were added to check; the new functionality.; ; Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9105:676,adapt,adapted,676,https://root.cern,https://github.com/root-project/root/pull/9105,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. ## Changes or fixes:. - The `CMAKE_GENERATOR_PLATFORM` is only set when manually specified with `cmake -A <platform>`. The `CMAKE_SIZEOF_VOID_P` variable is set automatically by the `project()` call (and it's used elsewhere in the code). This also breaks building with Ninja for Windows x64; - The `ClingTargets.cmake` where no correctly generated when running `cmake --install` on Cling. It looks like the `CLING_HAS_EXPORTS` was removed at some point, but the packaging code was never updated. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes # . Closes https://github.com/root-project/cling/issues/454",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11632:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/11632,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Add `dependabot.yml` file which will configure the dependabot to periodically create PRs whenever GitHub actions can be updated. Currently configured to submit the PR weekly with a maximum of 5 concurrent open PRs. GitHub actions cannot (or should not) be configured to run on the latest version, you can only specify which major version to run. Many times whenever there is a new version released it never gets updated on the developer's end. This PR fixes this with the added benefit of a dedicated PR for each action which should test if there are any breaking changes. The PR also contains a link to the action changelog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:81,config,configure,81,https://root.cern,https://github.com/root-project/root/pull/14683,3,['config'],"['configure', 'configured']"
Modifiability,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14271:190,extend,extend,190,https://root.cern,https://github.com/root-project/root/pull/14271,1,['extend'],['extend']
Modifiability,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15752:261,enhance,enhanced,261,https://root.cern,https://github.com/root-project/root/pull/15752,1,['enhance'],['enhanced']
Modifiability,# This Pull request:. ## Changes or fixes:. Fixes that CMake was still trying to look for `llvm-config-9` instead of `llvm-config-13` after for #10294. To prevent this I added two variable in the beginning of the file so that it is less likely to be forgotten next time. I also moved the versioned version before the unversioned one. This should make sure it actually takes the right version if `llvm-config` defaults to a version that is not 13 (currently the case in Debian e.g.). /cc @hahnjo @vgvassilev @bellenot. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12150:96,config,config-,96,https://root.cern,https://github.com/root-project/root/pull/12150,4,"['config', 'variab']","['config', 'config-', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of; the generated code in `Rcpp/generated` and `Rcpp/module` when; compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16075:242,adapt,adapts,242,https://root.cern,https://github.com/root-project/root/pull/16075,1,['adapt'],['adapts']
Modifiability,"# This Pull request:. ## Changes or fixes:. I noticed that the current `.clang-format` file does not fully comply with the schema (https://clang.llvm.org/docs/ClangFormatStyleOptions.html). I updated the configuration file so it's compliant (I made the choices based on what I thought the original authors wanted to achieve with the selected options). I am not sure if the lack of compliance with the schema is because of updates to `clang-format` or not. The changes in this PR should only affect style, but these updates may make `clang-format` behave differently than before (because previous options may have being ignored). ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14690:204,config,configuration,204,https://root.cern,https://github.com/root-project/root/pull/14690,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627:692,Config,Config,692,https://root.cern,https://github.com/root-project/root/pull/11627,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776:157,variab,variable,157,https://root.cern,https://github.com/root-project/root/pull/10776,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. Some minor interface changes to reflect better the underlying TestStatistics classes and how we intend to bring it to users in the upcoming release. . The 'NewStyle' name was changed to 'ModularL' to reflect the fact that these new test statistics are modular. Note that we are undecided on 'ModularL' versus just 'Modular', so if you have a strong opinion on this feel free to change it. Some of the functionality included in the added named arguments is not implemented yet, this is because we plan to add the respective backend for these new features in the near future. Therefore these named arguments were added under RooFit::Experimental namespace. Do we also need to add these not yet functioning arguments already to the RooMinimizer config struct, since we plan to add them in the near future?. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11906:786,config,config,786,https://root.cern,https://github.com/root-project/root/pull/11906,1,['config'],['config']
Modifiability,"# This Pull request:. ## Changes or fixes:. TMath.cxx and TMath.h. . Define BreitWignerRelativistic(...) in TMath.h and then calculate in TMath.cxx, following same convention for names of variables, default values and normalization as BreitWigner(...) which is already defined in TMath. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9926:188,variab,variables,188,https://root.cern,https://github.com/root-project/root/pull/9926,1,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The `evaluate()` function on the `RooFit::TestStatistics::RooRealL` class was not functional. This PR fixes it by adding a `RooArgSet` member to `RooRealL` called `vars_obs_` which initially contains the same variables as the `RooArgProxy` and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the `RooArgSet` `vars_obs_`) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9402:253,variab,variables,253,https://root.cern,https://github.com/root-project/root/pull/9402,3,['variab'],['variables']
Modifiability,# This Pull request:. ## Changes or fixes:. The evaluate() function on the RooFit::TestStatistics::RooRealL class was not functional. This PR fixes it by adding a RooArgSet member to RooRealL called vars_obs_ which initially contains the same variables as the RooArgProxy and ensures that the proxy variables are properly transferred to the internal variables of the likelihood (contained in the RooArgSet vars_obs_) before evaluation. This change was made with the help of @wverkerke. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9456:243,variab,variables,243,https://root.cern,https://github.com/root-project/root/pull/9456,3,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:802,Config,Config,802,https://root.cern,https://github.com/root-project/root/pull/11791,3,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"# This Pull request:. ## Changes or fixes:. This PR re-implements the `TH1` method `GetCumulative(forward, suffix)`, which is equivalent to the original implementation (with #11948 applied) on 1D histograms, but produces more sensible result for 2D and 3D histograms. That is,. $$S_{i_x i_y i_z} = \sum_{j_x = n_{x0}}^{i_x} \sum_{j_y = n_{y0}}^{i_y} \sum_{j_z = n_{z0}}^{i_z} a_{j_x j_y j_z}\ (\text{forward})$$. $$S_{i_x i_y i_z} = \sum_{j_x = i_x}^{n_x} \sum_{j_y = i_y}^{n_y} \sum_{j_z = i_z}^{n_z} a_{j_x j_y j_z}\ (\text{backward})$$. To achieve $O(n_x n_y n_z)$ time complexity (instead of $O(n_x^2 n_y^2 n_z^2)$ ), the method is implemented using the [inclusion-exclusion principle](https://en.wikipedia.org/wiki/Inclusion%E2%80%93exclusion_principle) while referencing the content of the previously-computed neighboring bins. Namely,. $$\begin{cases}; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x-1) i_y i_z} + S_{i_x (i_y-1) i_z} + S_{i_x i_y (i_z-1)} - S_{(i_x-1) (i_y-1) i_z} - S_{i_x (i_y-1) (i_z-1)} - S_{(i_x-1) i_y (i_z-1)} + S_{(i_x-1) (i_y-1) (i_z-1)} & (\text{forward}) \\; S_{i_x i_y i_z} = a_{i_x i_y i_z} + S_{(i_x+1) i_y i_z} + S_{i_x (i_y+1) i_z} + S_{i_x i_y (i_z+1)} - S_{(i_x+1) (i_y+1) i_z} - S_{i_x (i_y+1) (i_z+1)} - S_{(i_x+1) i_y (i_z+1)} + S_{(i_x+1) (i_y+1) (i_z+1)} & (\text{backward}); \end{cases}$$. This is useful when computing the selection efficiency of two variables:; For example, one can get a histogram (`*h2_eff_pt_eta`) in which each bin represents the selection efficiency where pt and eta is greater than the lower edges of the bin from the 2D histogram of these variables (`*h2_pt_eta`) with the following code,. ```c++; TH2 *h2_eff_pt_eta = h2_pt_eta->GetCumulative(kFALSE, ""_efficiency"");; h2_eff_pt_eta->Scale(h2_eff_pt_eta->GetBinContent(1, 1));; ```. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949:1397,variab,variables,1397,https://root.cern,https://github.com/root-project/root/pull/11949,2,['variab'],['variables']
Modifiability,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12476:109,variab,variable,109,https://root.cern,https://github.com/root-project/root/pull/12476,1,['variab'],['variable']
Modifiability,"# This Pull request:. ## Changes or fixes:. This is just a suggestion to align a bit more with Clang's coding standards https://opensource.apple.com/source/lldb/lldb-112/llvm/docs/CodingStandards.html#ll_ns_std. If the change is welcome, I can extend to the rest of parts of ROOT that have this statement. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14922:244,extend,extend,244,https://root.cern,https://github.com/root-project/root/pull/14922,1,['extend'],['extend']
Modifiability,# This Pull request:. ## Changes or fixes:. nWorkers setting was actually not being set when the RooMinimizer was called with the nWorkers setting enabled in `RooMinimizer::Config`. Now that is fixed by passing the `RooMinimizer::Config::nWorkers` setting to the multiprocessing internal config. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11840:173,Config,Config,173,https://root.cern,https://github.com/root-project/root/pull/11840,3,"['Config', 'config']","['Config', 'config']"
Modifiability,"# This Pull request:. ## Changes or fixes:; * `thisroot.sh`:; * Pass `shellcheck`; ```sh; shellcheck -s sh config/thisroot.sh; shellcheck -s dash config/thisroot.sh; shellcheck -s ksh config/thisroot.sh; shellcheck -s bash config/thisroot.sh; ```; Notable fixes:; * <code>&DiacriticalGrave;my-command&DiacriticalGrave;</code> -> `$(my-command)`; (SC2006, &DiacriticalGrave;&DiacriticalGrave; is a legacy Bourn shell syntax with several issues); * `[ ""x$foo"" = ""x"" ]` -> `[ -z ""${foo-}"" ]` and `[ ""x$foo"" != ""x"" ]` -> `[ -n ""${foo-}""]`; * `cond && run-true || run-false` -> `if cond; then run-true; else run false; fi`; (SC2015: run-false may be triggered when run-true fails); * [ ""$foo"" == ""$bar"" ] -> [ ""$foo"" = ""$bar"" ] (SC3014, POSIX-conformance). * Fix unbound variables; * Whenever a variable `$foo` is possibly not set, call it like `${foo-}`; * Now it can be sourced with `set -u`. * Unify indentation: use three spaces everywhere. * `thisroot.fish`:; * `dirname` -> `path dirname` so that Fish users don't have to call the `dirname` executable.; ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11557:107,config,config,107,https://root.cern,https://github.com/root-project/root/pull/11557,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11068:224,extend,extended,224,https://root.cern,https://github.com/root-project/root/pull/11068,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance; - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference; - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271:68,Config,ConfigParser,68,https://root.cern,https://github.com/root-project/root/pull/9271,2,['Config'],['ConfigParser']
Modifiability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:568,Extend,Extend,568,https://root.cern,https://github.com/root-project/root/pull/15499,2,['Extend'],['Extend']
Modifiability,"# This Pull request:. ## Changes or fixes:; Makes `Findcppzmq.cmake` check for the version of the zmq.hpp header that it may find installed on the system. If it is too old (below 4.8.0) then the module will consider cppzmq not found. In `SearchInstalledSoftware.cmake`, then, configuration will either fall back to the cppzmq built-in or it will fail if `fail-on-missing` is on. Thanks to @Axel-Naumann for the bug report. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9473:276,config,configuration,276,https://root.cern,https://github.com/root-project/root/pull/9473,1,['config'],['configuration']
Modifiability,"# This Pull request:. ## Changes or fixes:; The main feature is that this PR makes it possible (in the final commit 5227996a9941918404d0a36037daa2c91e29833a) to run minimizations with both LikelihoodGradientJob and LikelihoodJob activated at the same time. This adds likelihood parallelization at the event-level to the non-gradient phases of Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:690,extend,extended,690,https://root.cern,https://github.com/root-project/root/pull/10966,1,['extend'],['extended']
Modifiability,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797:220,enhance,enhanced,220,https://root.cern,https://github.com/root-project/root/pull/15797,3,"['enhance', 'refactor']","['enhanced', 'refactoring', 'refactorings']"
Modifiability,"# This Pull request:. ## Changes or fixes:; This commit adds the Config class to provide a user-accessible place set the desired number of workers. The number of workers was previously settable from a static public member of JobManager, but since we do not expose MultiProcess internals to users, it was unreachable from the ROOT interpreter and scripts. Thanks to @Zeff020 for noticing this omission. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9409:65,Config,Config,65,https://root.cern,https://github.com/root-project/root/pull/9409,1,['Config'],['Config']
Modifiability,"# This Pull request:. ## Changes or fixes:; This is a proof of concept to refactor the TGraph class to use C++ Standard Library smart pointers to user-provided arrays. The main benefits are less memory usage because the data is not copied, and faster constructing of TGraph objects. Having this as an option does change the behaviour of the TGraph class a little; but that trade-off may be worth it for memory constrained local machines or time/memory constrained HPC jobs with large data sets. At least a few more changes are necessary: 1) by default, TGraph constructors should still copy array data so that installed code is backwards-compatible, and 2) writing a TGraph to a ROOT file would need an updated dictionary. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610:74,refactor,refactor,74,https://root.cern,https://github.com/root-project/root/pull/9610,1,['refactor'],['refactor']
Modifiability,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10574:56,variab,variables,56,https://root.cern,https://github.com/root-project/root/pull/10574,3,['variab'],"['variable', 'variables']"
Modifiability,"# This Pull request:. ## Changes or fixes:; warns of overflow with an error message. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). See https://root-forum.cern.ch/t/break-segmentation-violation-while-using-geometry-package/53087/7. Side note: To allow for Long64_t, a complete rewrite of all variables' data types would be needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12028:314,rewrite,rewrite,314,https://root.cern,https://github.com/root-project/root/pull/12028,2,"['rewrite', 'variab']","['rewrite', 'variables']"
Modifiability,"# This Pull request:. * Histogram nodes now contain histogram name and number of entries (test included);; * Label nodes now use html, allowing for more custom fonts;; * Colors of different element types were changed to be easier to; distinguish;; * Empty RLoopManager is more clearly indicated;; * Actions which has run are more clearly indicated;; * Tests adapted accordingly. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #9556",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9722:358,adapt,adapted,358,https://root.cern,https://github.com/root-project/root/pull/9722,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. - Cleans up dangling[^1] images and unused containers before running; - Renames `buildroot.yml` to `root-ci.yml` and `rootci-installers/` to `root-ci-config`; - Enables unbuffered python output again. Buffered python output sometimes (often) causes the output to be sorted by stderr first, then stdout. This makes the grouping wrong and warnings out of order. Disabling buffering is also a very minor performance loss for the CI because CMake, CTest and git writes most of their output to stderr, which is already unbuffered. [^1]: Images that are still on disk, but no longer tagged because they are overwritten by an updated one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12309:172,config,config,172,https://root.cern,https://github.com/root-project/root/pull/12309,1,['config'],['config']
Modifiability,"# This Pull request:. - adds helper functions to RooGenericPdf and RooFormulaVar; - makes sure the HS3 JSON contains the names of the variables entering RooFormula-based PDF and function types also in cases where the functions have been constructed with the ""x[0]"" notation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13225:134,variab,variables,134,https://root.cern,https://github.com/root-project/root/pull/13225,1,['variab'],['variables']
Modifiability,"# This Pull request:. Added some instrospection methods to TestStatistics Likelihood classes and also added corresponding tests. In particular added GetName() and GetInfo(). GetName() follows the same interface as the other RooFit classes in order to stay consistent. GetInfo() returns an std::string which allows for the added flexibility of concatenating more information about the class. Also added getComponents() to RooSumL in order to retrieve the vector of components from the sum likelihood. Note I am not completely happy about the implementation of the naming, in particular with the fact that the name needs to be supplied to the constructor of the RooAbsL class. Another option would be to override the GetName() and GetInfo() functions in each of the child classes explicitly with the same implementation, in which case we could have a unique name_ variable in each of the child classes and no need for the modification to the constructors. Let me know if this is preferred. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043:862,variab,variable,862,https://root.cern,https://github.com/root-project/root/pull/10043,1,['variab'],['variable']
Modifiability,# This Pull request:. Adds a mechanism to RRawFile to report limitations of vector read requests. Xrootd servers are enforcing such limits. Extends the XRootD RRawFile plugin to query and report the server-side limits. Extends the RNTuple file page source to properly schedule vector reads in presence of limits. ## Changes or fixes:. Fixes RNTuple reading from XRootD. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14175:140,Extend,Extends,140,https://root.cern,https://github.com/root-project/root/pull/14175,3,"['Extend', 'plugin']","['Extends', 'plugin']"
Modifiability,# This Pull request:. Adds a unit test for regular (non-virtual) inheritance. Forbids virtual inheritance (and tests for it). ## Changes or fixes:. Fixes #15048. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15051:65,inherit,inheritance,65,https://root.cern,https://github.com/root-project/root/pull/15051,2,['inherit'],['inheritance']
Modifiability,# This Pull request:. Adds more functionality to the RooPolyFunc. ## Changes or fixes:. Add a new constructor and change an existing one slightly to avoid collisions.; Add getters for internal variables.; Fix bugs in printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11953:193,variab,variables,193,https://root.cern,https://github.com/root-project/root/pull/11953,1,['variab'],['variables']
Modifiability,# This Pull request:. Adds more options to generate asimov datasets by; - allowing to generate asimov datasets for RooMultiVarGaussian; - adding a new constructor to RooExtendPdf that allows to more easily extend pdfs to fixed nEvents; - improving error messages emitted by AsymptoticsCalculator when creating error messages. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034:206,extend,extend,206,https://root.cern,https://github.com/root-project/root/pull/12034,1,['extend'],['extend']
Modifiability,"# This Pull request:. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer, these setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11549:301,config,configuration,301,https://root.cern,https://github.com/root-project/root/pull/11549,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15169:27,plugin,plugin,27,https://root.cern,https://github.com/root-project/root/pull/15169,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:643,variab,variables,643,https://root.cern,https://github.com/root-project/root/pull/15105,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,# This Pull request:. Casted variable rc to void in roofit/multiprocess/src/Messenger.cxx to disable the warning.; It is used only in assert statement besides the cast. ## Changes or fixes: roofit/multiprocess/src/Messenger.cxx. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9368:29,variab,variable,29,https://root.cern,https://github.com/root-project/root/pull/9368,1,['variab'],['variable']
Modifiability,"# This Pull request:. Changes the parametrization of some of the PDFs and a few of their keys. In the process, a mechanism for automatic reparametrization is introduced. ## Changes or fixes:. - the HS3 implementation of RooExponential should invert the meaning of ""c"", such that the JSON represenation reads ""-c"" rather than ""c""; - RooPoisson should write out & read ""noRounding"" as ""integer"" ; - lognormal should be adjusted to adhere to the standard definition by transforming the variables ; - rename multinormal_dist to multivariate_normal_dist; - ""bounds"" now called ""edges"" for irregular binned histograms. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13627:483,variab,variables,483,https://root.cern,https://github.com/root-project/root/pull/13627,1,['variab'],['variables']
Modifiability,"# This Pull request:. Explicitly set `Vdt_ROOT` when `builtin_vdt` was used for the build. This way, a default location would be provided for VDT, which the user could still override if they wanted to. ## Changes or fixes:. This fixes the issue reported in #14163. Following up from the changes introduced in #11844. Note that this fix requires CMake 3.12+, with [CMP0074](https://cmake.org/cmake/help/latest/policy/CMP0074.html#policy:CMP0074) set to `NEW`. :thinking: Supporting older CMake versions, or that policy set to `OLD` would also be possible, but would require a lot more lines of code. (`FindVdt.cmake` would need to learn about a new hint variable itself.). Still, if people here feel very strongly about it, it would be possible to go that route as well. :thinking: . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) (N/A). This PR fixes: #14163",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14178:653,variab,variable,653,https://root.cern,https://github.com/root-project/root/pull/14178,1,['variab'],['variable']
Modifiability,# This Pull request:. Extends @guitargeek s fixups with a few small additional bugfixes. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12490:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/12490,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Extends the functionality of `TGraphErrors` class on the manner of the `TGraph` class such that one does not need to prepare arrays with data before creating the `TGraphErrors` class and simply add points one-by-one. ## Changes or fixes:. The pull request adds a new method to the class `TGraphErrors` called `AddPointError`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (added a doxygen line). ## Code to test functionality:; (run as a root script). ```c++; void apge() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);. c1->SetGrid();. const Int_t n = 20;; TGraphErrors *gr = new TGraphErrors;; for (Int_t i=0;i<n;i++) {; Double_t x = i*0.1;; gr->AddPointError(i*0.1, 10*sin(x+0.2), 0.3/(x*x+3.), x*x/(x*x + 8.));; }; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""AP"");. // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15232:22,Extend,Extends,22,https://root.cern,https://github.com/root-project/root/pull/15232,1,['Extend'],['Extends']
Modifiability,"# This Pull request:. Fixes a problem where RooFormulaVar instances using the `@1`, `@2` syntax were not properly exported. ## Changes or fixes:. Variables referenced by `@N` in the expression of RooFormulaVar or RooGenericPdf are now replaced by the variable names upon export. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13555:146,Variab,Variables,146,https://root.cern,https://github.com/root-project/root/pull/13555,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14289:841,variab,variables,841,https://root.cern,https://github.com/root-project/root/pull/14289,1,['variab'],['variables']
Modifiability,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10744:185,config,configuration-option,185,https://root.cern,https://github.com/root-project/root/pull/10744,1,['config'],['configuration-option']
Modifiability,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:850,variab,variable,850,https://root.cern,https://github.com/root-project/root/pull/16437,1,['variab'],['variable']
Modifiability,"# This Pull request:. Note that this PR does not need to be merged, although it could be, I'm mainly putting it up here to test it on CI. I needed it to rebase another branch on top of, which I will submit for a PR soon too. I leave it up to you whether you want to consider these two things separately. ## Changes or fixes:. The `RooGradMinimizerFcn` was not necessary anymore, so it has been removed. We do plan to repurpose its code later on for a ""`LikelihoodGradientSerial`"" implementation of `LikelihoodGradientWrapper`. This removal also simplifies construction of `RooMinimizer`, which no longer needs it. That, in turn, simplifies the test case configuration in testLikelihoodGradientJob.cpp. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:654,config,configuration,654,https://root.cern,https://github.com/root-project/root/pull/11716,1,['config'],['configuration']
Modifiability,"# This Pull request:. Overwrites #11549. Adds new interface features to `RooAbsPdf::fitTo()` and `RooMinimizer::Minimize()` to use new (parallel) teststatistics based classes. . ## Changes or fixes:. - Adds new Parallelize() and NewStyle() named arguments to RooAbsPdf::fitTo() to respectively determine parallelisation configuration and whether to use new style likelihoods.; - Adds a configuration struct to the RooMinimizer that is the single source of truth on RooMinimizer config parameters, including the new parallelisation parameters. This struct can be given to the RooMinimizer constructor, whereas previously all configuration was done after the creation of the constructor through setters on the RooMinimizer. These setters also maintain their original functionality. Note that the parallelisation parameters can *only* be given in the RooMinimizer constructor.; - Adds tests to test the aforementioned new functionality; - Also, since I made a lot of changes to the file, this PR also includes an entire reformat of the RooMinimizer.cxx and RooMinimizer.h with clang-format.; - Finally, this PR includes also makes the setters to the static _theFitter attribute on the RooMinimizer static. Note there is some weird behaviour with this still, on which I comment in the code. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11577:320,config,configuration,320,https://root.cern,https://github.com/root-project/root/pull/11577,4,['config'],"['config', 'configuration']"
Modifiability,"# This Pull request:. Previously, the Exec method of the FillTGraphHelper was ambiguous.; Currently, Exec properly handles container and non-container types.; Corresponding tests added.; Small adjustments of the variable names of Graph in RInterface.hxx. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9770:212,variab,variable,212,https://root.cern,https://github.com/root-project/root/pull/9770,1,['variab'],['variable']
Modifiability,# This Pull request:. Refactors the code and moves the logic of creating variables in RooWorkspace to C++-backend. ## Changes:. Moves `make_json_for_variable` from `_rooworkspace.py` to `varJSONString` in `JSONIOUtils`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13150:22,Refactor,Refactors,22,https://root.cern,https://github.com/root-project/root/pull/13150,2,"['Refactor', 'variab']","['Refactors', 'variables']"
Modifiability,"# This Pull request:. Resolves #12297. Changes the matrix to do some jobs with different options, e.g. `DLLVM_BUILD_TYP=Debug` for one of the ubuntu22 builds. (can be changed). Also rewrites the matrix to explicitly type each job, instead of doing a N x M jobs. I believe this syntax is easier to configure and makes implementation cleaner, as opposed to using nested lists to provide matrix options. Example run (picture added in case it expires): https://github.com/olemorud/root/actions/runs/4284703493; ![image](https://user-images.githubusercontent.com/82065181/221802381-3394775e-2b1b-45e9-8e3c-63ce0d44bd18.png). ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12388:182,rewrite,rewrites,182,https://root.cern,https://github.com/root-project/root/pull/12388,2,"['config', 'rewrite']","['configure', 'rewrites']"
Modifiability,"# This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14137:283,config,config,283,https://root.cern,https://github.com/root-project/root/pull/14137,1,['config'],['config']
Modifiability,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:138,variab,variable,138,https://root.cern,https://github.com/root-project/root/pull/13813,3,"['Flexible', 'variab']","['FlexibleInterpVars', 'variable', 'variables']"
Modifiability,"# This Pull request:. This PR is continuing #13457 by Ahmat and it is based on https://github.com/root-project/root/pull/12941 and [Dynamic-Op](https://github.com/root-project/root/compare/master...Neel-Shah-29:root-1:Dynamic-Op) both by Neel Shah. # Changes of Fixes. - Introduce intermediate tensors with parametric shapes (Dynamic tensors); - Implement the [Range operator](https://github.com/onnx/onnx/blob/main/docs/Operators.md#Range); - Add tests for the Range operator; - Add full support for Input tensors with parametric shapes (using the Dim structure) and propagate the shapes using Dim also in the intermediate ones.; - Start changing operators to support inputs/output tensors with Dim shapes. ; - support now Gemm, Relu, Concat, LayerNormalization; - Add support for input Dim shapes in GNN classes to support fully variable number of nodes and edges",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14413:831,variab,variable,831,https://root.cern,https://github.com/root-project/root/pull/14413,1,['variab'],['variable']
Modifiability,# This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:30,refactor,refactors,30,https://root.cern,https://github.com/root-project/root/pull/9728,1,['refactor'],['refactors']
Modifiability,"# This Pull request:. This follows on from a recent pull request which added a relativistic breit wigner to ROOT https://github.com/root-project/root/pull/10760, to add a relativistic voigt which is a natural extension. **Brief summary**; Files added:; math/mathmore/inc/Math/VoigtRelativistic.h - Defines VoigtRelativistic class with two functions, evaluate which calculates the relativistic voigt, and dumpingFunction which calculates the relativisitic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this val",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:632,variab,variables,632,https://root.cern,https://github.com/root-project/root/pull/11049,1,['variab'],['variables']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8941:147,variab,variable,147,https://root.cern,https://github.com/root-project/root/pull/8941,1,['variab'],['variable']
Modifiability,"# This Pull request:. This pull request allows to root as a sub-project using `FetchContent`.; It a cleaner Pull request than (#8941). ## Changes or fixes:; It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally ; Was compiling both in ""standard"" and ""FetchContent ""; - [ X] updated the docs (if necessary) ; - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9516:187,variab,variable,187,https://root.cern,https://github.com/root-project/root/pull/9516,1,['variab'],['variable']
Modifiability,"# This Pull request:. [DF] Change the signature of RInterface::Describe. ## Changes or fixes:. A new structure `DFDescription` is introduced.; It has 2 member strings, corresponding to the brief and the full description.; It allows more interactive output of these strings. `RInterface::Describe` now returns a `DFDescription`.; As brief description is the output from `RInterface::DescribeDataset`.; As full description is the remaining code from `RInterface::Describe`.; Moreover, `RInterface::DescribeDataset` is now a private method. RDFDescription has the following methods:; * `AsString(bool)` -> returning brief/full description as a string; * `Print(bool)` -> printing the content of `AsString(bool)`; * overloaded `<<` -> returns ostream corresponding to `AsString(shortFormat=false)`; * printValue -> returns string corresponding to AsString(shortFomat=false); * `__repr__` pythonization -> assigning `__repr__` to `AsString(shortFormat=false)`. Tests and Tutorials were adapted correspondingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #8893",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9551:981,adapt,adapted,981,https://root.cern,https://github.com/root-project/root/pull/9551,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. [Fix #6981] RDisplay::Print to show more elements from collections. ## Changes or fixes:. AddCollectionToRow() modified so that the first 10 elements of long collections; are to be printed, then followed by ""..."". Previously, only the first and last; elements of collections of size >=3 were printed. Print() logic is now simplified, since after ""..."" there is no guarantee; that there is going to be a next element. Current unit tests were adapted and a new one is added, to test showing; elements around the treshold, i.e. of <10, 10, 11, >11 elements. Regarding #6981 - to display the whole collection, please use AsString(). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6981",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9095:463,adapt,adapted,463,https://root.cern,https://github.com/root-project/root/pull/9095,1,['adapt'],['adapted']
Modifiability,"# This Pull request:. `TRatioPlot` defines three pads named `upper_pad`, `lower_pad` and `top_pad`. If single canvas contains two or more `TRatioPlot`s, the saved C macro declares same object variable names resulting in runtime error. This fix adds counter suffix to pads (like for histograms) resulting in unique pad names. ## Changes or fixes:. Modifications to `SavePrimitive` members of `TPad` and `TCanvas` to count instances and renumerate written object variable names. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . ### Example. Consider MWE; ```c++; {; TH1I * h1 = new TH1I(""h1"", ""h1"", 10, -5, 5);; TH1I * h2 = new TH1I(""h2"", ""h2"", 10, -5, 5);. h1->FillRandom(""gaus"", 1000);; h2->FillRandom(""gaus"", 1000);. TCanvas * can = new TCanvas(""c_pads_test"", ""c_pads_test"", 800, 400);. can->cd(0);; TPad * p1 = new TPad(""p1"", ""p1"", 0, 0.3, 0.5, 1.0);; p1->Draw();; p1->cd();; TRatioPlot ratio1(h1, h2);; ratio1.Draw();. can->cd(0);; TPad * p2 = new TPad(""p2"", ""p2"", 0.5, 0.3, 1.0, 1.0);; p2->Draw();; p2->cd();; TRatioPlot ratio2(h2, h1);; ratio2.Draw();. can->cd(0);; TPad * p3 = new TPad(""p3"", ""p3"", 0.0, 0.0, 1.0, 0.3);; p3->Draw();; p3->cd();; h1->Draw();; h2->Draw(""same"");. can->Draw();. can->SaveAs("".C"");; }; ```; Run the macro and then try to run resulting `c_pads_test.C`. The output will be:. ```; Processing c_pads_test.C...; In file included from input_line_10:1:; /home/rlalik/c_pads_test.C:229:10: error: redefinition of 'upper_pad'; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:27:10: note: previous definition is here; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:303:10: error: redefinition of 'lower_pad'; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0.3);; ^; /home/rlalik/c_pads_test.C:103:10: note: previous definition is here; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12349:192,variab,variable,192,https://root.cern,https://github.com/root-project/root/pull/12349,2,['variab'],['variable']
Modifiability,# This Pull request:; - Moves away from the legacy pass manager to the new llvm pass manager. Care is take to ensure the same behavior before and after the update. Could benefit from more testing. ## Changes or fixes:; - Adapt the existing passes for the new pass manager. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267:221,Adapt,Adapt,221,https://root.cern,https://github.com/root-project/root/pull/14267,1,['Adapt'],['Adapt']
Modifiability,"# This Pull request:; ; Add factory interface for the RooLagrangianMorphFunc in `RooFactoryWSTool.cxx`. The interface case be used ; along the following lines,; ```; ws.factory( “lagrangianmorph::func($filename(‘inputs.root’),  $couplings({cHq3[-10,10],SM[1]},  $NewPhysics(cHq3=1,SM=0)),  $folders({‘input1’,’input2’,’input3’})”); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9444:229,coupling,couplings,229,https://root.cern,https://github.com/root-project/root/pull/9444,1,['coupling'],['couplings']
Modifiability,# This Pull request:; Added correct treatment of extended term in asymptotically correct method for uncertainty determination in the presence of weights. This improvement will allow for extended unbinned maximum likelihood fits to use the asymptotically correct method. . ## Changes or fixes:; -Added extended term to asymptotically correct method to allow for weighted extended maximum likelihood fits; -Usage of logarithmic PDFs for derivatives may have some numerical benefits; -Fixed RooDerivative to not use the parameter range in the step size calculation in case the parameter supplied has no range. This now allows to use the method (and RooDerivative in general) for parameters that do not specify a range. ; -Added warning in case of binned fits. In this case a chi2 fit using the std. treatment of weights should be preferrable. ## Checklist:. - [x] tested changes locally. This PR fixes # ; resolves https://its.cern.ch/jira/browse/ROOT-10827; resolves https://its.cern.ch/jira/browse/ROOT-10866; related #11660 ; note https://github.com/root-project/root/issues/11112 can not be fixed since the resulting minuit covariance matrix is not positive definite (set PrintLevel(0) to see this). Calculations with the inverse Hessians are thus not reliable. High stats fit show the expected behaviour.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751:49,extend,extended,49,https://root.cern,https://github.com/root-project/root/pull/14751,4,['extend'],['extended']
Modifiability,"# This Pull request:; Adds GDML support for `scaledSolid` tag; ## Changes or fixes:; Given that Geant4 supports the `scaledSolid` tag, all TGeo scaled solids are exported using this tag now. Below is a snapshot of the solids produced after importing the Geant4 persistency example `examples/extended/persistency/gdml/G01/scaledSolids.gdml` <img src=""https://github.com/root-project/root/assets/18400453/dd95e08f-a3b7-47c1-8e86-844a66aae167"" width=""600"">. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13194",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13241:291,extend,extended,291,https://root.cern,https://github.com/root-project/root/pull/13241,1,['extend'],['extended']
Modifiability,# This Pull request:; Adds a GitHub Actions workflow that runs clang-format on pull requests. Could be extended with jobs to also run the clang-tidy checks that Travis currently runs. ## Changes or fixes:; - Adds a GH Actions workflow that runs on pull requests; - Modifies one line of the format_script.sh so that both Travis and GH Actions can run it.; - Modifies the .travis.yml to pass in the base ref SHA hash to the format_script.sh. ## Checklist:. - [x] tested changes locally (see https://github.com/roofit-dev/root/pull/23); - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8530:103,extend,extended,103,https://root.cern,https://github.com/root-project/root/pull/8530,1,['extend'],['extended']
Modifiability,"# This Pull request:; Adds experimental support for histogramming on GPU with CUDA. ; `[skip-ci]`. ## Changes or fixes:; - N-dimensional histograms with fixed and variable sized bins can be filled on the GPU; - Histogram statistics (sum of weights, sum of square of weights, etc.) can be calculated on GPU . ## Checklist:; - [ ] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12572:163,variab,variable,163,https://root.cern,https://github.com/root-project/root/pull/12572,1,['variab'],['variable']
Modifiability,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:150,config,configurations,150,https://root.cern,https://github.com/root-project/root/pull/11102,1,['config'],['configurations']
Modifiability,"# This Pull request:; Adds the support to CONST properties (double scalars) to TGeoOpticalSurface instances.; This MR enables the TGeoOpticalSurface to have the same functionality as the G4OpticalSurface from Geant4.; Since the class TGeoOpticalSurface is only enhanced by additional member data/functions, the backwards ; compatibility is ensured. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14617:261,enhance,enhanced,261,https://root.cern,https://github.com/root-project/root/pull/14617,1,['enhance'],['enhanced']
Modifiability,"# This Pull request:; Allows multiple (discontinuous) ranges for `HFitInterface::FillData`, see [here](https://root-forum.cern.ch/t/fitting-one-function-to-multiple-ranges-simultaneously/49061/3). @lmoneta - one thing I didn't implement was checking if the different ranges overlapped at all. If several of the ranges are overlapping (i.e. [0,50], [25, 75]), then at present the bins in both regions will be added twice, not sure what sort of behavior this would cause. I think the best way to get around that is to check when the range are added, I note that one such check is already in place in [`DataRange::CleanRangeSet`](https://root.cern/root/html606/DataRange_8cxx_source.html#l00165), this could be extended. Wanted to flag with you first before I changed too much though. Example for 1D use:. ```; TF1 *back = new TF1(""back"", ""[0] + x*[1]"", -10, 10);; TF1 *comb = new TF1(""comb"", ""[0] + x*[1] + [2]*exp(-((x-[3])**2)/[4])"", -10, 10);; ; TH1F *th1 = new TH1F(""th1"", ""th1"", 100, -10, 10); . comb->SetParameter(0, 10.);; comb->SetParameter(1, -0.5);; comb->SetParameter(2, 15.0);; comb->SetParameter(3, 1.0);; comb->SetParameter(4, 1.5);. TCanvas *c1 = new TCanvas();; th1->FillRandom(""comb"", 5000);; th1->Draw(""colz"");. ROOT::Fit::DataRange range;; //x ranges to miss the peak; range.AddRange(0, -10, -2.5);; range.AddRange(0, 4.5, 10);; ; ROOT::Fit::DataOptions opt;; ROOT::Fit::BinData data(opt, range);; ROOT::Fit::FillData(data, th1);; ; back->SetParameter(0, 10.);; back->SetParameter(1, -0.5);; ; ROOT::Math::WrappedMultiTF1 fitFunc(*back, back->GetNdim());; ROOT::Fit::Fitter fitter;; fitter.SetFunction(fitFunc, false);; fitter.LikelihoodFit(data);; fitter.Result().Print(std::cout);. th1->Draw(""hist"");; back->Draw(""same"");; ```. or 2D use:. ```; TF2 *back = new TF2(""back"", ""[0] + (x-[1])**2/[2]**2 + (y-[3])**2/[4]**2"", -10, 10, -10, 10);; TF2 *comb = new TF2(""comb"", ""[0] + (x-[1])**2/[2]**2 + (y-[3])**2/[4]**2 + [5]*TMath::Gaus(x,[6],[7])*TMath::Gaus(y,[8],[9])"", -10, 10, -10, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101:708,extend,extended,708,https://root.cern,https://github.com/root-project/root/pull/10101,1,['extend'],['extended']
Modifiability,"# This Pull request:; Fixes some small issues with debug printout during integration or generation. ## Changes or fixes:; The first commit changes the debug printout in `RooRealIntegral::evaluate`. `_mode` here is the analytical integral code, `_intOperMode` is the variable that can be `Hybrid`, `Analytic` or `PassThrough` (like in the switch-case above). The second commit adds `printMultiline` to `RooEffGenContext`. This is used when requesting verbose printout during dataset generation, which is supposed to recursively print all gen contexts. Before this change, having a `RooEffProd` inside the model stopped the recursive printout. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178:266,variab,variable,266,https://root.cern,https://github.com/root-project/root/pull/12178,1,['variab'],['variable']
Modifiability,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10726:119,variab,variable,119,https://root.cern,https://github.com/root-project/root/pull/10726,1,['variab'],['variable']
Modifiability,"# This Pull request:; In the GDML writing there is a confusion with the use of:; TGeoManager::fgDefaultUnits or TGeoManager::GetDefaultUnits(). -- It is used both to determine if the length unit string is defined as ""cm"" or ""mm"".; -- At the same time this variable is used by the elements and materials to discriminate; between the system of units. This confusion then ultimately leads to this bug:; -- If TGeo units are ON and the GDML should be written in the G4 convention (mm); automatically the densities and the atomic weights go wrong. If in TGeoManager.cxx line 302; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kG4Units;; is changed to:; TGeoManager::EDefaultUnits TGeoManager::fgDefaultUnits = TGeoManager::kRootUnits;. This fixes the problem, because the usage of TGeoManager::GetDefaultUnits(); when the elements/materials were created is then consistent with the GDML writing.; See:; https://root-forum.cern.ch/t/problem-with-elements-in-exported-gdml-files/46473/5. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8955:256,variab,variable,256,https://root.cern,https://github.com/root-project/root/pull/8955,1,['variab'],['variable']
Modifiability,"# This Pull request:; Make changes in the class AdaptiveIntegratorMultiDim.; ## Changes or fixes:; Delete obscure conditions on evaluating integration status. The mentioned conditions are absent in the original RadMul algorithm. The problem with these conditions is in that they compare some arbitrary hard-coded constants with the absolute value of the integrated function. This lead to incorrect integration of some complicated function. Moreover, if one multiply integrand by some arbitrary factor and then divide the integral by it, then time and accuracy integration will change, but it shouldn't be so. For example, if integrated function return result of order 10^-38, then sometimes integration gives nonsense result with very low number of integrated function calls. The parameter RelAccuracy is not accounted for by the algorithm in this case (return result with some lower accuracy). But if the return value of integrated function multiply by 10^38 and then multiply the result of integration by 10^-38 then the integration gives the correct result with appropriate number of integrand calls. The parameter RelAccuracy then does work in this case. All this is because of mentioned hard-coded constants. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11826:48,Adapt,AdaptiveIntegratorMultiDim,48,https://root.cern,https://github.com/root-project/root/pull/11826,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13803:54,config,config,54,https://root.cern,https://github.com/root-project/root/pull/13803,2,['config'],['config']
Modifiability,"# This Pull request:; The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. ; This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:; - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up ; - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes; - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9717:786,refactor,refactoring,786,https://root.cern,https://github.com/root-project/root/pull/9717,1,['refactor'],['refactoring']
Modifiability,"# This Pull request:; This is the Scipy plugin for ROOT math libraries for minimization; * Implementation using Python C API that supports several methods such as; Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,; Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov.; * It supports:; * Jacobian (Gradients); * Hessian; * Bounds for the variables.; * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented.; * The implementation of extra parameters was implemented.; * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12997:40,plugin,plugin,40,https://root.cern,https://github.com/root-project/root/pull/12997,2,"['plugin', 'variab']","['plugin', 'variables']"
Modifiability,"# This Pull request:; Translates all ""math"" tutorials into Python.; ## Changes or fixes:; It shows creative ways of using C++ methods in Python more than; the usual way of ROOT.gROOT.ProcessLine method. There are some notes; about why we should or shouldn't use some syntax(inherited from C++-ROOT) ; in Python.; Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15960:274,inherit,inherited,274,https://root.cern,https://github.com/root-project/root/pull/15960,1,['inherit'],['inherited']
Modifiability,"# This Pull request:; [DF] Added SaveGraph Tutorials; [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph.; Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #9145",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9540:770,adapt,adapted,770,https://root.cern,https://github.com/root-project/root/pull/9540,1,['adapt'],['adapted']
Modifiability,"# This Pull request:; adds a new ColumnType `Real32Trunc`, that stores a real value as a tightly-packed, IEEE-754 single precision float using less than 32 bits. The missing bits are simply truncated from the mantissa, causing the value to be rounded towards zero.; The valid range of bit widths is `[10, 31]` inclusive. This is the first ColumnType with a variable bit width, therefore it requires some extra handling on the RColumnElement and RField side, but it uses a single type id on disk (`0x1D`) and a single enum value `EColumnType::kReal32Trunc`. The way to use it is by calling the new `SetTruncated(nBits)` method on `RField<float>`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16192:357,variab,variable,357,https://root.cern,https://github.com/root-project/root/pull/16192,1,['variab'],['variable']
Modifiability,"# This Pull request:; adds the possibility of requesting metrics in `RNTupleReadOptions`. ; Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15953:449,inherit,inherit,449,https://root.cern,https://github.com/root-project/root/pull/15953,1,['inherit'],['inherit']
Modifiability,"# This Pull request:; fixes an issue when installing as root changes the permissions of the `etc` folder and makes the installation unusable for other users. This happened because `etc` didn't have enough permissions in the source tree for other users and those are preserved in the installation directory.; ## Changes or fixes:; The issue is the following, if `etc` has permissions, for example, 700 in the source tree, after compiling as a user and then using `sudo ninja install`, the folder `etc` keeps the same permissions. This is an ls of the installation folder when I install to `/usr/local`:; ```; Permissions Size User Date Modified Name; drwxr-xr-x - root 3 Apr 18:08 bin; drwxr-xr-x - root 3 Apr 18:08 cmake; drwxr-xr-x - root 3 Apr 18:08 config; drwx------ - root 3 Apr 18:08 etc; drwxr-xr-x - root 28 Jan 09:45 fonts; drwxr-xr-x - root 28 Jan 09:45 icons; drwxr-xr-x - root 3 Apr 18:08 include; drwxr-xr-x - root 3 Apr 18:08 js; drwxr-xr-x - root 3 Apr 18:08 lib; .rw-r--r-- 847 root 29 Oct 2023 LICENSE; drwxr-xr-x - root 28 Jan 09:45 macros; drwxr-xr-x - root 28 Jan 09:44 man; drwxr-xr-x - root 28 Jan 09:45 README; drwxr-xr-x - root 3 Apr 18:08 tutorials; drwxr-xr-x - root 28 Jan 09:45 ui; ```; This PR fixes it by setting the right permissions at installation time, so that the permissions in the source tree don't matter. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). I'm using CMake 3.29 and compiling ROOT 6.30.06 but this has been happening for a while for different versions of CMake and ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15138:752,config,config,752,https://root.cern,https://github.com/root-project/root/pull/15138,1,['config'],['config']
Modifiability,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16080:22,refactor,refactors,22,https://root.cern,https://github.com/root-project/root/pull/16080,2,"['extend', 'refactor']","['extend', 'refactors']"
Modifiability,"# environement. ```; (master)> cmake --version; cmake version 3.20.1; ```. ```; (master)> uname -rs; Linux 5.12.0-2-default; ```. ```; (master)> grep -e ""^VERSION_ID="" -e ""^NAME="" /etc/*release; NAME=""openSUSE Tumbleweed""; VERSION_ID=""20210502""; ```. ```; (master)> python --version; Python 2.7.18; ```. ```; (master)> python3 --version; Python 3.8.9; ```. ```; (master)> whereis python; python: /usr/bin/python3.8 /usr/bin/python /usr/bin/python2.7 /usr/bin/python2.7-config /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib64/python3.8 /usr/lib64/python /usr/lib64/python2.7 /usr/local/lib/python3.8 /usr/include/python2.7 /usr/include/python /usr/share/man/man1/python.1.gz; ```. ```; (master)> sudo zypper se -i python | grep -e ""Interpreter"" -e ""dev""; i | libpython2_7-1_0 | Python Interpreter shared library | package; i | libpython3_8-1_0 | Python Interpreter shared library | package; i+ | python | Python Interpreter | package; i | python-base | Python Interpreter base package | package; i+ | python-devel | Include Files and Libraries Mandatory for Building Python Modules | package; i | python38 | Python 3 Interpreter | package; i | python38-base | Python 3 Interpreter and Stdlib Core | package; i | python38-pyudev | Udev bindings for Python | package; ```. # output. ```; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_INCLUDE_DIRS Python3_LIBRARIES Python3_NumPy_INCLUDE_DIRS Development NumPy Development.Module Development.Embed) (found version ""3.8.9""); -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- ROOT Platform: linux; -- ROOT Compiler: Clang 12.0.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analys",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:469,config,config,469,https://root.cern,https://github.com/root-project/root/issues/8097,1,['config'],['config']
Modifiability,"## Changes or fixes:. 1. Environment variable `CLING_HISTFILE` to specify history file path.; 2. Environment variable `CLING_HISTSIZE` to specify history size. The original behavior is to not set the history size explicitly.; That is equivalent to unlimited history size according to `textinput::History::AppendToFile()` (history file will never be pruned so it grows indefinitely). This is probably not most users expect. @Axel-Naumann, @vgvassilev do you think it makes sense to set default cling history size to something like 500 ? (That changes current behavior.). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11286:37,variab,variable,37,https://root.cern,https://github.com/root-project/root/pull/11286,2,['variab'],['variable']
Modifiability,"## Changes or fixes:. Use registry pattern for the ONNX parser. Now the operators and the tensor types are stored in a std::unordered_map. All the implemented operators are registered automatically when creating an object of type RModelParser_ONNX. When parsing an onnx graph the parser checks the type of the onnx node and throw an exception if it's not implemented or call the corresponding function to parse it. This PR also makes SOFIE more modular. Now operators can be added simply by defining an operator class that inherits from ROperator, defining a function to parse the onnx node and registering this function to the parser. ## Example of adding a new ONNX operator. ```{c++}; #include ""onnx_proto3.pb.h""; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx"". using namespace TMVA::Experimental::SOFIE;. template<typename T>; struct ROperator_Sign : public ROperator {; std::string fNX;; std::string fNY;; std::vector<size_t> fShapeX;; std::vector<size_t> fShapeY;. ROperator_Sign(std::string nameX, std::string nameY) : fNX(nameX), fNY(nameY) {}. std::vector<std::vector<size_t>> ShapeInference(std::vector<std::vector<size_t>> input) override {; return input;; }. std::vector<ETensorType> TypeInference(std::vector<ETensorType> input) override {; return input;; }. void Initialize(RModel& model) override {; if (!model.CheckIfTensorAlreadyExist(fNX)) {; throw std::runtime_error(""TMVA::SOFIE - Tensor "" + fNX + "" not found."");; }; fShapeX = model.GetTensorShape(fNX);; fShapeY = fShapeX;; //fShapeY = ShapeInference({fShapeX})[0];; model.AddIntermediateTensor(fNY, model.GetTensorType(fNX), fShapeY);; }. std::string Generate(std::string OpName) override {; OpName = ""op_"" + OpName;; std::stringstream out;. out << SP << ""\n//---- Operator"" << OpName << ""\n"";; size_t length = ConvertShapeToLength(fShapeX);; out << SP << ""for (size_t i = 0; i < "" << length << ""; i++) {\n"";; out << SP << SP << ""if (tensor_"" << fNX << ""[i] > 0.) {\n"";; out << SP << SP << SP << ""tensor_"" << ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11518:523,inherit,inherits,523,https://root.cern,https://github.com/root-project/root/pull/11518,1,['inherit'],['inherits']
Modifiability,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:40,refactor,refactoring,40,https://root.cern,https://github.com/root-project/root/pull/8700,2,"['inherit', 'refactor']","['inheritance', 'refactoring']"
Modifiability,"## Describe the bug. `CMAKE_CXX_FLAGS`, set by hand in `ROOTUseFile.cmake`, includes a specification on cxx standard, which should be specified rather by `CMAKE_CXX_STANDARD` variable. In a projects using ROOT, the inclusion causes doubly-specified cxx-standard in their compile procedure, and the maintainer transferred me here; see the thread here:. https://github.com/iLCSoft/LCIO/issues/109#issuecomment-694867125. ## Expected behavior. `--std=` options should be set in `CMAKE_CXX_STANDARD`, rather than `CMAKE_CXX_FLAGS`. ## To Reproduce. see https://github.com/iLCSoft/LCIO/issues/109#issuecomment-694867125. ## Setup. ROOT Docker images: docker pull rootproject/root:6.22.02-ubuntu20.04, ran on docker on WSL2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6384:175,variab,variable,175,https://root.cern,https://github.com/root-project/root/issues/6384,1,['variab'],['variable']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The virtual C++ methods overriden in some python class is ignored in the subsequent subclass. . Simple examples is given in [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15); In short:; - C++ class A, ; - python class B, that inherits from A and override virtual method from A ; - python class C, that inherits from B and override (the same) virual method form A (and B); - python class D, that inherits from B and has empty body . And f one call the method from A, B, C , D ; - for A one gets original C++ behaviour (OK); - for B one gets the overriden behaviour (OK); - for C one gets overriden behaviour defined in C (OK); - for D one gets the original C++ behaviour ( that is not OK) . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It is expected that D picks up the overriden method from class B, as naturally expected for the inheritance pattern . ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Simple gist is [here] (https://gist.github.com/VanyaBelyaev/fb58efd76b693a7777c9c83a6f43ae15). ## Setup. 1. ROOT version 623/01; 2. Operating system CentOS7, lxplus x86, 64-centos7-gcc9-opt. 3. How you obtained ROOT: `dev3/latest` nightly LCG slot,. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6470:351,inherit,inherits,351,https://root.cern,https://github.com/root-project/root/issues/6470,4,['inherit'],"['inheritance', 'inherits']"
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. With [ROOT-10692](https://sft.its.cern.ch/jira/browse/ROOT-10692) fixed, ROOT now, by default, uses the default C++ standard of the compiler rather than always using C++11. However, due to how our cmake logic is structured, root7 is still turned off by default, even if the default C++ standard used by the compiler was detected to be C++14 or higher. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. With a compiler that defaults to `-std=C++14` or above, a vanilla `cmake path/to/root` should have root7 turned on. ## Additional context; <!--; Add any other context about the problem here.; -->. I think the root cause is that, at the following lines in our main `CMakeLists.txt`, we _first_ include `RootBuildOptions` (which sets root7 to OFF by default because it doesn't detect a high-enough C++ standard) and _then_ we include `CheckCompiler`, which sets our default `CMAKE_CXX_STANDARD` to the compiler default. https://github.com/root-project/root/blob/33458dc53621cf3e685a302a4bf899108aed0d0c/CMakeLists.txt#L128-L134. Moving `include(CheckCompiler)` above `include(RootBuildOptions)` fixes this issue but breaks Windows, because some cmake variable that `CheckCompiler` needs in the case of windows were defined earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6406:1295,variab,variable,1295,https://root.cern,https://github.com/root-project/root/issues/6406,1,['variab'],['variable']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Serialization of ROOT objects in python using `dill` is broken for `python3`, but it works ok for `python2`.; ; ( `dill` serialization is vital for the proper paralllel and distributive python calculations using `pathos` suite. The functionality of ; regular paralell python `pp` and `multiprocessing` module is very limited due to limitations of `pickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/relea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:541,extend,extending,541,https://root.cern,https://github.com/root-project/root/issues/6370,1,['extend'],['extending']
Modifiability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The following code works fine with 6.20.04, but segfaults with 6.22.02. ```cpp; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""TFile.h""; #include ""TTree.h"". int main(int argc, char* argv[]) {; TTree* tree = new TTree(""tree"", ""tree"");; double var = 1;; tree->Branch(""var"", &var, ""var/D"");; tree->Fill();. RooRealVar* roovar = new RooRealVar(""var"", ""var"", 0, 10);; TFile* output_file = new TFile(""test.root"", ""RECREATE"", ""output_file"");. output_file->Print();; RooDataSet* data_set = new RooDataSet(""data_set"", ""data_set"", tree, RooArgSet(*roovar));; output_file->Print();. return 0;; }; ```. The segfault happens on the last `output_file->Print();` line - it seems the creation of the `RooDataSet` somehow destroys the object pointed to by `output_file`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the code to run without segfaulting. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Save the quoted code to `mwe_tfile.cc`; 2. Build with `g++ mwe_tfile.cc -o mwe_tfile $(root-config --cflags --glibs) -lRooFitCore`; 3. Run `./mwe_tfile`. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Ubuntu 18.04; Binary ROOT installs; Works with 6.20.04; Doesn't work with 6.22.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6408:1384,config,config,1384,https://root.cern,https://github.com/root-project/root/issues/6408,1,['config'],['config']
Modifiability,"## Describe the bug; Crash. ```; user@lxplus733 ~]$ g++ pad.cxx $(root-config --glibs --cflags --libs) -o pad -g; [user@lxplus733 ~]$ ./pad ; Warning in <UnknownClass::SetDisplay>: DISPLAY not set, setting it to pcatlas18.mppmu.mpg.de:0.0. *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f73109b046c in waitpid () from /lib64/libc.so.6; #1 0x00007f731092df62 in do_system () from /lib64/libc.so.6; #2 0x00007f731533f5dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f731534206a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374:71,config,config,71,https://root.cern,https://github.com/root-project/root/issues/6374,1,['config'],['config']
Modifiability,"## Describe the bug; Crash.; ```; [host@hermes Desktop]$ g++ canvas.cxx $(root-config --glibs --cflags --libs) -o canvas -g; [host@hermes Desktop]$ ./canvas. *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f481d5d946c in __libc_waitpid (pid=1478152, stat_loc=stat_loc; entry=0x7ffe12925160, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f481d556f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f4821f685dc in TUnixSystem::StackTrace (this=0x244d980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f4821f6b06a in TUnixSystem::DispatchSignals (this=0x244d980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 TPad::ResizePad (this=0x2503ca0, option=0x7f4820490bae """") at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:5490; #6 0x00007f4820448f84 in TCanvas::Build (this=0x2503ca0) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:637; #7 0x00007f482044969e in TCanvas::Constructor (this=this; entry=0x2503ca0, name=name; entry=0x400cc3 ""canvas"", title=title; entry=0x400cc3 ""canvas"", ww=4, ww; entry=-4, wh=wh; entry=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:425; #8 0x00007f482044c88c in TCanvas::TCanvas (this=0x2503ca0, name=0x400cc3 ""canvas"", title=0x400cc3 ""canvas"", ww=-4, wh=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:366; #9 0x0000000000400ba3 in main (argc=1, argv=0x7ffe12927dc8) at canvas.cxx:5; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are reall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6379:79,config,config,79,https://root.cern,https://github.com/root-project/root/issues/6379,1,['config'],['config']
Modifiability,"## Describe the bug; Crash.; ```; [user@lxplus733 ~]$ g++ pavelabel.cxx $(root-config --glibs --cflags --libs) -o pavelabel -g; [user@lxplus733 ~]$ ./pavelabel ; Warning in <UnknownClass::SetDisplay>: DISPLAY not set, setting it to hostname:0.0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f4b1f57246c in waitpid () from /lib64/libc.so.6; #1 0x00007f4b1f4eff62 in do_system () from /lib64/libc.so.6; #2 0x00007f4b23f015dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f4b23f0406a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f4b22407674 in TPad::PaintBox(double, double, double, double, char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f4b229661a3 in TBox::PaintBox(double, double, double, double, char const*) () from /usr/lib64/root/libGraf.so.6.22; #7 0x00007f4b229a7570 in TPave::PaintPave(double, double, double, double, int, char const*) () from /usr/lib64/root/libGraf.so.6.22; #8 0x00007f4b229aa009 in TPaveLabel::PaintPaveLabel(double, double, double, double, char const*, char const*) () from /usr/lib64/root/libGraf.so.6.22; #9 0x0000000000400d05 in main (argc=1, argv=0x7fff9bced0c8) at pavelabel.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ============",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6375:79,config,config,79,https://root.cern,https://github.com/root-project/root/issues/6375,1,['config'],['config']
Modifiability,"## Describe the bug; Using cppyy in ROOT master (51eb56e), I have a Python class that inherits from a C++ class (with two abstract classes) and I need to pass an instance of the Python class to a C++ function that accepts a pointer to one of the base classes. When the C++ function tries to call a method from the instance, I get a segmentation fault (actually I enter in an infinite segfault loop, where ROOT segfault handler segfaults too). ## Expected behavior; Just that called the C++ function can use the passed instance. ## To Reproduce; From a directory containing the file:; ```reproducer.py; import cppyy. cppyy.gbl.gInterpreter.Declare(""""""; #include <array>; #include <iostream>. struct Interface1 {; virtual void do_1() = 0;; virtual ~Interface1() = default;; };. struct Interface2 {; virtual void do_2() = 0;; virtual ~Interface2() = default;; };. struct Base : virtual public Interface1, virtual public Interface2 {; Base() {; std::cout << std::hex << ""Base* "" << this << ""\nInt1* "" << static_cast<Interface1*>( this ) << ""\nInt2* ""; << static_cast<Interface2*>( this ) << '\n';; }; };. struct Derived : Base, virtual public Interface2 {; void do_1() override { std::cout << std::hex << this << ""->do_1\n""; }; void do_2() override { std::cout << std::hex << this << ""->do_2\n""; }; };. void my_func( Interface2* i ) { i->do_2(); }; """"""). class PyDerived(cppyy.gbl.Derived):; pass. i = PyDerived(); i.do_1(); i.do_2(). cppyy.gbl.my_func(i). ```; call; ```; python reproducer.py; ```. ## Setup; - ROOT version: 51eb56e; - OS: CentOS7; - arch: x86_64; - compiler: gcc 9.2.0. ## Additional context; I'm using the nightly builds by CERN SFT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6376:86,inherit,inherits,86,https://root.cern,https://github.com/root-project/root/issues/6376,1,['inherit'],['inherits']
Modifiability,"## Description; Development of the functionality for parsing a PyTorch PT file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object; - [x] Support for PyTorch nn.Module, nn.Sequential, nn.ModuleList containers.; - [x] Supports Linear, ReLU and Transpose Layers/operations.; - [x] Header file for the function; - [x] Function implementation . ## Interface; The parser requires the shape and data type of the input tensors. Shape is a mandatory parameter, whereas the function defaults to Float data-type for the input tensors, if not explicitly mentioned.; ; **Example usage**; ```; std::vector<size_t> s1{120,1};; std::vector<std::vector<size_t>> inputShape{s1};; auto model = TMVA::Experimental::SOFIE::PyTorch::Parse(""trained_model_dense.pt"",inputShape);; ```; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests ; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests . ## Documentation; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8684:536,Layers,Layers,536,https://root.cern,https://github.com/root-project/root/pull/8684,2,"['Config', 'Layers']","['Configuration', 'Layers']"
Modifiability,"## Description; Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress; - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries; - [x] Parser function for extracting the model information and weights and instantiate a RModel Object ; - [x] Support for Keras Sequential API Models ; - [x] Support for Keras Functional API Models ; - [x] Supports Dense (with relu activation),ReLU and Permute Layers ; - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root); - [x] Header file for the function ; - [x] Function implementation ; ; ## Checklist:; - [x] tested changes locally; - [x] Parser. ## Tests; - [x] Emit Files for generating header files; - [x] Tests for Parser; - [x] CMake Configuration for tests. ## Documentation ; - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8430:677,Layers,Layers,677,https://root.cern,https://github.com/root-project/root/pull/8430,2,"['Config', 'Layers']","['Configuration', 'Layers']"
Modifiability,"## Explain what you would like to see improved; There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:1057,variab,variables,1057,https://root.cern,https://github.com/root-project/root/issues/7308,1,['variab'],['variables']
Modifiability,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7239:887,inherit,inherits,887,https://root.cern,https://github.com/root-project/root/issues/7239,1,['inherit'],['inherits']
Modifiability,"## Pythonic interaction with the RooWorkspace. This issue tracks the progress on the GSoC project on the Pythonic interaction with the RooWorkspace:; https://hepsoftwarefoundation.org/gsoc/2023/proposal_RooFit-RooWorkspacePythonization.html. This project was assigned to @yashnator. ## Milestones and TODOs. - [x] Pythonic way to use the RooWorkspace factory language using `__setitem__` on the workspace (#12911); - [x] Enable creation of pdf, functions and variables from Python dictionaries passed to `RooWorksapce.__setitem__` (#12994); - [x] Implement automatic loading of JSON IO keys (#13152); - [ ] Support creation of binned datasets from dictionaries as described in [this comment](https://github.com/root-project/root/issues/13185#issuecomment-1621628860); - [ ] Move all logic except for `dict` to string conversion to the C++ side; - [ ] Avoid using nlohmann-json directly, but use RooFits `JSONInterface` instead. ## Merged PRs. 1. https://github.com/root-project/root/pull/12911; 2. https://github.com/root-project/root/pull/12994; 3. https://github.com/root-project/root/pull/13152; 4. https://github.com/root-project/root/pull/13150",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13185:459,variab,variables,459,https://root.cern,https://github.com/root-project/root/issues/13185,1,['variab'],['variables']
Modifiability,"## SOFIE-SYCL; SOFIE-SYCL extends SOFIE functionality so that SYCL inference code can be generated for Intel GPUs using Intel oneAPI libraries for the BLAS routines. This functionality is already enabled by default when -Dtmva-sofie=On. The inference code should be compiled with a SYCL compiler and linked against the Intel oneAPI MKL library. Currently, the only SYCL Implementation supported is IntelDPCPP. The correctness of the SYCL implementations of the ONNX Operators has been tested with the SOFIE gtests. Also, missing gtests for BatchNormalization, Slice, Transpose have been added. In addition, the transpose convolution for 3d (ConvTranspose3d) operator that was not supported before has been added for both C++ and SYCL inference code, as well as the respective gtest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13550:26,extend,extends,26,https://root.cern,https://github.com/root-project/root/pull/13550,1,['extend'],['extends']
Modifiability,"## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). ; Stating the PR message for clarity. The pull request add the tutorials for the lagrangian ; morphing class and also add an example for the factory interface. The are some accompanying ; fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:845,coupling,couplings,845,https://root.cern,https://github.com/root-project/root/pull/9680,1,['coupling'],['couplings']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour?. No error message when generating `module.idx`. ### How to reproduce?. This can be reproduced with a modified ROOT:; ```diff; diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx; index 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:188,variab,variable,188,https://root.cern,https://github.com/root-project/root/issues/12988,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When root is built with minuit2_omp=on then using RooFit with Minuit2 is broken out of the box because minuit2 multithreads the objective function evaluation, where the objective function is provided by RooFit and is in general not thread safe. ### What is the expected behaviour?. Probably RooFit should disable the minuit2 multithreading when it calls minuit2 (but actually I couldn't even figure out how to do this myself beyond the brute force solution of setting the environment variable OMP_NUM_THREADS=1. ### How to reproduce?. In a build with minuit2_omp (e.g. standard root package on arch linux). ```python. import ROOT; import time. def gaussian_minuit2():; """"""; """""". axis = ROOT.RooRealVar(""x"", ""x"", 50, 130); axis.setBins(100); axis.setRange(50, 130). mu = ROOT.RooRealVar(""mu"", ""mu"", 91.0, 85.0, 97.0) # 91; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 4.0, 0.5, 10.0) # 4. background = ROOT.RooGaussian(""gauss_bkg"", ""Gaussian background"",; axis, mu, sigma). NDATA = 100000. data = background.generateBinned({axis}, NDATA); data.SetName(""Data_gauss""). mu2 = ROOT.RooRealVar(""mu2"", ""mu2"", 97.0, 50.0, 130.0) # 91; sigma2 = ROOT.RooRealVar(""sigma2"", ""sigma2"", 6.0, 0.5, 10.0) # 4. bkg_fit = ROOT.RooGaussian(""bkg_fit"", ""Gaussian background for fit"",; axis, mu2, sigma2). expected_num = ROOT.RooRealVar(; ""nexp"", ""nexp"", NDATA, 90000, 110000). model = ROOT.RooExtendPdf(; ""Extended"", ""extend"", bkg_fit, expected_num). res2 = model.fitTo(data, ; ROOT.RooFit.Extended(True), ; ROOT.RooFit.Minimizer(""Minuit2""),; ROOT.RooFit.Save(True), ; ROOT.RooFit.PrintLevel(0)). print(""***********************************""); res2.Print(); res2.correlationMatrix().Print(); print(res2.status()); print(res2.covQual()). '''; c = ROOT.TCanvas(); c.cd(); frame = axis.frame(Title=""Title""); data.plotOn(frame); model.plotOn(frame); frame.Draw(); c.SaveAs(""gaussian.png""); '''. if __name__ == '__main__':. ROOT.RooRandom.randomGenerat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12940:564,variab,variable,564,https://root.cern,https://github.com/root-project/root/issues/12940,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153. Manipulating in any way the std namespace should not be done, this is why namespace exists in the first place, to separate things. In this case this will collide with https://en.cppreference.com/w/cpp/container/span. ### What is the expected behaviour?. If you want / need to use a span adaptor and you can not use c++20 do not inject in the std namespace but use another one, this is why namespace exists!. ### How to reproduce?. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines. ### ROOT version. master. ### How did you install ROOT?. irrelevant. ### Which operating system are you using?. irrelevant. ### Additional context. https://github.com/root-project/root/blob/master/core/foundation/inc/ROOT/span.hxx#L153 is violating c++ guidelines",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:456,adapt,adaptor,456,https://root.cern,https://github.com/root-project/root/issues/13042,1,['adapt'],['adaptor']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. # TL;DR. ROOT doesn't work on SWAN within any Spark job, unless these environment variables are explicitly set in the worker env beforehand:. * `PATH`: `/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin`; * `ROOT_INCLUDE_PATH`: `/cvmfs/sft-nightlies.cern.ch/lcg/views/devswan/Thu/x86_64-centos7-gcc11-opt/include`. This behaviour has appeared since LCG102, which means ROOT 6.26. On LCG101 (ROOT 6.24.06), the behaviour is not shown. # The long story. ROOT doesn't work on certain platforms, given the following situation particular situation (which could then be extrapolated to more general ones). On SWAN, when spawning Spark executors, their environment is cherry-picked to ensure their proper functioning. In particular, only these environment variables are defined:; ```python; ['CLASSPATH',; 'CONTAINER_ID',; 'HADOOP_COMMON_HOME',; 'HADOOP_CONF_DIR',; 'HADOOP_HDFS_HOME',; 'HADOOP_HOME',; 'HADOOP_TOKEN_FILE_LOCATION',; 'HADOOP_YARN_HOME',; 'HOME',; 'JAVA_HOME',; 'JVM_PID',; 'LANG',; 'LD_LIBRARY_PATH',; 'LOCAL_DIRS',; 'LOCAL_USER_DIRS',; 'LOGNAME',; 'LOG_DIRS',; 'MALLOC_ARENA_MAX',; 'NM_AUX_SERVICE_mapreduce_shuffle',; 'NM_AUX_SERVICE_spark2_shuffle',; 'NM_AUX_SERVICE_spark_shuffle',; 'NM_HOST',; 'NM_HTTP_PORT',; 'NM_PORT',; 'OMP_NUM_THREADS',; 'PATH',; 'PRELAUNCH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:157,variab,variables,157,https://root.cern,https://github.com/root-project/root/issues/13811,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A PyRoot for loop isn't iterating as many times as it should (actually about half as many times as it should). ### Reproducer. I have a TTree in a for loop and have been comparing the number of events (the details of which are in branches) with someone else at various points in that loop. Within that loop is a second loop where I'm looking at the number of tracks coming from those events. It is clear that that inner track isn't iterating anywhere nearly as much as it should be. ```python; # This is the event loop ; for entryNum in range (0, AutreeData.GetEntries()):; if (entryNum % 5000 == 0):; print(""Data Fourth Pass (Vn Corrected for Resolution)"", entryNum). # TTree; AutreeData.GetEntry(entryNum). # Event and track variables; px = AutreeData.Px; py = AutreeData.Py; pz = AutreeData.Pz; q = AutreeData.Charge; tofBeta = AutreeData.tofBeta; dEdx = AutreeData.dEdx; NSigmaPr = AutreeData.nSigmaPr; NSigmaKa = AutreeData.nSigmaKa; NSigmaPi = AutreeData.nSigmaPi; vx = AutreeData.Vx; vy = AutreeData.Vy; vz = AutreeData.Vz; Centrality = AutreeData.centrality; EPDnMIP = AutreeData.EPDnMip; EPDID = AutreeData.EPDid; DCA = AutreeData.DCA; NHits = AutreeData.nHits; NHitsdEdx = AutreeData.nHitsDedx; NHitsFit = AutreeData.nHitsFit; NHitsPoss = AutreeData.nHitsPoss; Tracknumber = AutreeData.tracknumber. # Various checks and irrelevant things go here. # Track loop; for index in range(Tracknumber):; # This histogram is filled to determine how many tracks there were initially. I had half of the other person's tracks (rougly); OverallTrackCheck.Fill(1) . # Irrelevant things go here; ```. ### ROOT version. 6.20. ### Installation method. It was in an online Jupyter notebook. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14215:802,variab,variables,802,https://root.cern,https://github.com/root-project/root/issues/14215,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798:683,config,config,683,https://root.cern,https://github.com/root-project/root/issues/13798,1,['config'],['config']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:408,config,configuration,408,https://root.cern,https://github.com/root-project/root/issues/15212,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211:492,config,configuration,492,https://root.cern,https://github.com/root-project/root/issues/15211,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846:1661,variab,variable,1661,https://root.cern,https://github.com/root-project/root/issues/13846,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:480,config,configuration,480,https://root.cern,https://github.com/root-project/root/issues/14163,3,['config'],"['config', 'configuration']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. I noticed that sometimes, when trying to produce .C macros for my figures, the `SaveAs()` function would return broken macros. I narrowed it down to the `Name()` arguments passed to the `plotOn()` function when plotting RooFit pdf's. The problem seems to be that the default `Name()` value contains special characters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15887:468,variab,variable,468,https://root.cern,https://github.com/root-project/root/issues/15887,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits',",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:259,config,configuration,259,https://root.cern,https://github.com/root-project/root/issues/14595,2,"['Config', 'config']","['Configuring', 'configuration']"
Modifiability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10943. BDT.cxx line 33 and DecisionTreeNode.cxx line 61 define the same external variable; ```cpp; bool TMVA::DecisionTreeNode::fgIsTraining = false;; ```; This is forbidden by C++ standard. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14568:198,variab,variable,198,https://root.cern,https://github.com/root-project/root/issues/14568,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5009. In TClass, the following function:; ```cpp; void SetDeclFile(const char* name, int line); ```; stores its second parameter in a Short_t:; ```cpp; fDeclFileLine = line;; Short_t	fDeclFileLine	line of class declaration; ```. Both GCC and I agree that:; ```; /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h: In member function &acirc;&euro;&tilde;void TClass::SetDeclFile(const char*, int)&acirc;&euro;&trade;:; /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/root/5.34.05-x86_64-slc5-gcc4.3/include/TClass.h:342: warning: conversion to &acirc;&euro;&tilde;Short_t&acirc;&euro;&trade; from &acirc;&euro;&tilde;int&acirc;&euro;&trade; may alter its value; ``. A Short_t is smaller than an int:; ```; Short_t Signed Short integer 2 bytes (short); ```; and thus this function could truncate the received value. Either the type of the second parameter of SetDeclFile should be a Short_t (makes sense since this is what the corresponding GetDeclFile returns), or the internal variable needs to be made an 'int' (and GetDeclFile then needs to be updated to reflect this too). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14562:1148,variab,variable,1148,https://root.cern,https://github.com/root-project/root/issues/14562,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello @guitargeek @cburgard !. My student @mathyuu is trying to use the JSON functionality for some combination workflow, and at first we are making sure we can ""round-trip"" existing workspaces. There are problems importing JSON files that were produced by the export functionality. More specifically, when importing ""generic functions"", aka RooFormulas, the parser used to get the names of the dependent variables is extremely brittle and cannot handle numbers in scientific notation in all cases... and to be honest, reading the code, what surprises me is that it can at all work in some cases. Can't you rely on the built-in parsers for `RooFormula` instead, for instance ?. The issue is in `extractArguments` function. BTW, if you fix the bug, can you take the opportunity to change the output from `vector<string>` to `set<string>` ? There are warnings printed down the line with a difference between what the function ""claims to use"" and what it ""is in use"", that all come from variables that appear several times in the formula. See below for reproducer. ### Reproducer. Here is a copy of the function:. ``` C++; #include <vector>; #include <algorithm>; #include <string>; #include <iostream>; #include <cctype>. std::vector<std::string> extractArguments(std::string expr); {; // Get rid of whitespaces; expr.erase(std::remove_if(expr.begin(), expr.end(), [](unsigned char c) { return std::isspace(c); }), expr.end());. std::vector<std::string> arguments;; size_t startidx = expr.size();; for (size_t i = 0; i < expr.size(); ++i) {; if (startidx >= expr.size()) {; if (isalpha(expr[i])) {; startidx = i;; }; } else {; if (!isdigit(expr[i]) && !isalpha(expr[i]) && expr[i] != '_') {; if (expr[i] == '(') {; startidx = expr.size();; continue;; }; std::string arg(expr.substr(startidx, i - startidx));; startidx = expr.size();; arguments.push_back(arg);; }; }; }; if (startidx < expr.size()) {; arguments.push_back(expr.su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14637:480,variab,variables,480,https://root.cern,https://github.com/root-project/root/issues/14637,2,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:240,config,configuration,240,https://root.cern,https://github.com/root-project/root/issues/13656,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi ROOT team,. We ran into some trouble last night with the ROOT ""HEAD"" builds that have CUDA enabled in our LCG nightlies. The builds failed on these platforms: x86_64-centos7-gcc11-opt, x86_64-centos8-gcc11-opt, and el9-gcc11-opt. These are the ones we use for this configuration. @bellenot: asked me to let you know, so here's the ticket. Here's the error message we got:. ```; Error: Module 'RooFitCuda.pcm' failed to load.; ```; and this:; ```; make[5]: *** [roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/build.make:519: roofit/roofitcore/G__RooFitCore.cxx] Error 1; make[5]: Target 'roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/depend' not remade because of errors.; make[4]: *** [CMakeFiles/Makefile2:44521: roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/all] Error 2; ```. you can find the full build logs here:. http://cdash.cern.ch/upload/d526fd513d6f4007d95aa0eeb56dfc0627929bf1/ROOT-HEAD-build.log. Thanks for looking into this, and let me know if you need anything else!. Cheers,; Dmitri. ### Reproducer. No reproducer. ### ROOT version. HEAD. ### Installation method. build from sources. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415:343,config,configuration,343,https://root.cern,https://github.com/root-project/root/issues/13415,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I found that putting a RooBinSamplingPdf that wraps an extended pdf inside a RooAddPdf (that is in 'no-coefficient' mode, so that it is also extended), you cannot construct the NLL for this. The reason I think is that the RooBinSamplingPdf class does not forward the createExpectedEventsFunc call to the underlying pdf. Will submit a fix in just a moment. ### Reproducer. Here's a minimal reproducer:; ```; RooWorkspace w;; w.factory(""RooAddPdf::apdf(RooBinSamplingPdf::p(x,RooExtendPdf::epdf(EXPR::pdf('x',x[0,10]),e[100])))"");; RooDataSet d(""data"",""data"",*w.var(""x""));; w.pdf(""apdf"")->createNLL(d);; ```; Produces:; ```; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(apdf) fixing normalization set for coefficient determination to observables in data; [#0] ERROR:InputArguments -- The pdf ""p"" of type RooBinSamplingPdf did not overload RooAbsPdf::createExpectedEventsFunc()!. *** Break *** segmentation violation; ```. ### ROOT version. 6.34. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16796:130,extend,extended,130,https://root.cern,https://github.com/root-project/root/issues/16796,3,['extend'],['extended']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16520:75,Inherit,Inherit,75,https://root.cern,https://github.com/root-project/root/issues/16520,4,"['Inherit', 'inherit']","['Inherit', 'inheritance', 'inherited']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It seems that one can configure tmva into a state that cudnn is disabled, but it's still trying to link:; ```; [ 78%] Linking CXX shared library ../../lib/libTMVA.so; cd /root/build/tmva/tmva && /usr/bin/cmake -E cmake_link_script CMakeFiles/TMVA.dir/link.txt --verbose=1; /usr/bin/c++ -fPIC -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual; [...]; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.1]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x1b): undefined reference to `cudnnGetErrorString'; /usr/bin/ld: CMakeFiles/TMVA.dir/src/DNN/Architectures/Cudnn.cu.o: in function `TMVA::DNN::cudnnError(cudnnStatus_t, char const*, int, bool) [clone .part.0] [clone .constprop.2]':; tmpxft_0001274b_00000000-6_Cudnn.cudafe1.cpp:(.text+0x5b): undefined reference to `cudnnGetErrorString'; [...]; ```. I believe the way to trick it is to set `tmva-cudnn=ON`. It looks like users were not supposed to touch it, instead they should have set `-Dcudnn=On`. Setting the latter, the following code runs:; https://github.com/root-project/root/blob/45f13f0c6e145b0ddef82bf049a43fbe4870381b/cmake/modules/SearchInstalledSoftware.cmake#L1638-L1654. Instead, I set `tmva-cudnn` directly, the code above doesn't run, and tmva fails to link because the location of cudnn is never discovered. Maybe, one of `cudnn` or `tmva-cudnn` should be removed, and only a single flag should enable or disable it. ### Reproducer. On ubuntu with cuda and cudnn, I did:; ```; (ROOT-CI) root@102b09e3cf56:~/build# cmake -Dtmva-gpu=On -Dtesting=On -Dtmva-cudnn=On -Dbuiltin_openui5=Off -Dclad=Off -Dgdml=Off -Dgeom=Off -Dopengl=Off -Droot7=Off -Dspectrum=Off -Droofit=Off -Dvdt=Off ../root; ```. ```; $ apt list --installed | grep cudnn; libcudnn9-cuda-12/unknown,now 9.3.0.75-1 amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16715:97,config,configure,97,https://root.cern,https://github.com/root-project/root/issues/16715,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:318,Config,Configuration,318,https://root.cern,https://github.com/root-project/root/issues/16638,1,['Config'],['Configuration']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:187,Flexible,FlexibleInterpVar,187,https://root.cern,https://github.com/root-project/root/issues/13749,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16600:411,variab,variables,411,https://root.cern,https://github.com/root-project/root/issues/16600,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The dataset produces by RooFit's built-in generate method appears to have some buggy behaviour, exhibited at least in its behaviour of the `reduce` method on it. ; The xRooFit built-in generate method's dataset does not exhibit these issues. ### Reproducer. ```; {; using namespace ROOT::Experimental::XRooFit;; // create a two-channel model; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/SR""]->SetXaxis(1,0,1);; w[""simPdf/CR""]->SetXaxis(1,0,1);; w[""simPdf/SR/bkg""]->SetBinContent(1,20);; w[""simPdf/CR/bkg""]->SetBinContent(1,20);. // xRooFit's generate method works fine:; auto toy = w[""simPdf""]->generate();; std::cout << toy.get<RooAbsData>()->reduce(""channelCat==0"")->sumEntries() << "" vs "" << toy.get<RooAbsData>()->sumEntries(""channelCat==0"") << std::endl;. // but RooFit's generate method produces a buggy dataset:. // extract list of obs and access RooAbsPdf:; RooArgSet obs( *w.obs().get<RooArgList>() );; auto pdf = w[""simPdf""]->get<RooAbsPdf>();. // call RooFit's generate method:; auto ds = pdf->generate(obs,RooFit::Extended());. std::cout << ds->reduce(""channelCat==0"")->sumEntries() << "" vs "" << ds->sumEntries(""channelCat==0"") << std::endl;; ; }; ```. ### ROOT version. 6.32, possibly 6.30 as well. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15744:1122,Extend,Extended,1122,https://root.cern,https://github.com/root-project/root/issues/15744,1,['Extend'],['Extended']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The legacy backend can be used with models with categorical parameters (minimization can proceed if it is held constant). ; The new cpu backend appears to not include the categorical param in its list of variables (from `getVariables()`) and also just crashes when you try to evaluate the function. ### Reproducer. ```; {; // create a one-channel on-bin model, with two samples in the channel, which are each scaled by a factor; // that depends on the state of a category; xRooNode w(""RooWorkspace"",""combined"",""my workspace"");; w[""simPdf/chan1""]->SetXaxis(1,0,1);; w[""simPdf/chan1/bkg1""]->SetBinContent(1,5);; w[""simPdf/chan1/bkg2""]->SetBinContent(1,10);; w[""simPdf/chan1/bkg1""]->Multiply(""fac1('myCat==0?1:0',myCat[a,b])"",""func"");; w[""simPdf/chan1/bkg2""]->Multiply(""fac2('myCat==0?0:1',myCat)"",""func"");; w[""simPdf/chan1""]->SetBinData(1,12);. w.pars()[""myCat""]->get<RooAbsArg>()->setAttribute(""Constant""); // how I would hold the param constant. auto nll = w[""simPdf""]->nll(""obsData"",{RooFit::EvalBackend(""cpu"")});; nll->getVariables()->Print(); // in cpu mode ""myCat"" doesn't appear here!!; nll->getVariables()->setCatLabel(""myCat"",""a"");. cout << nll->getVal() << endl; // this crashes for cpu mode. }; ```. ### ROOT version. 6.32 , master. ### Installation method. source. ### Operating system. all?. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15701:279,variab,variables,279,https://root.cern,https://github.com/root-project/root/issues/15701,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16047:93,variab,variable,93,https://root.cern,https://github.com/root-project/root/issues/16047,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This issue stems originally from https://github.com/cms-sw/cmssw/issues/43077 and is a place to continue the discussions of https://github.com/root-project/root/pull/14261 and https://github.com/root-project/root/pull/14276 . ## The symptoms. In seemingly innocent examples we end up opening a huge amount of files at ROOT startup time. See in particular https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 or https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781128718 . It turns out that the immediate cause of the large amount of open calls is that some symbol is missing and cling needs to traverse many files in order to find it. So far, offending symbols have been `TString::kNPOS` and `k*` variables from `TError.h`. ## The way forward. While the two linked ROOT PRs solve (maybe hide?) the immediate problem, there is an underlying root cause which is highlighted by the fact that in ROOT 6.26 (LLVM9) none of this was an issue. Ideally, we need to find a way to avoid the eager search of symbols in all libraries in `$LD_LIBRARY_PATH`. In fact, the mere fact that we search for the symbol `TString::kNPOS` in such simple examples is a problem, that shouldn't be necessary. ### Reproducer. https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225. ### ROOT version. `>=6.28`. ### Installation method. build from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14277:798,variab,variables,798,https://root.cern,https://github.com/root-project/root/issues/14277,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```; using namespace RooFit;. void mytest() {. const int nBin=100;; double xbins[nBin+1];; const float left_Val = 150;; const float rightVal = 1150; ; const float logxmin = TMath::Log10(left_Val);; const float logxmax = TMath::Log10(rightVal);; const double dxLog = (logxmax-logxmin)/nBin;; for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);; f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);; h1->FillRandom(""f1"",10000000);; RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);; RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));; TCanvas *cExpo1 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test1 = mInv.frame();; hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));; plot_test1->Draw();; h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);; h2->FillRandom(""f1"",10000000);; RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));; TCanvas *cExpo2 = new TCanvas();; gPad->SetLogx();; gPad->SetLogy();; auto plot_test2 = mInv.frame();; hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));; plot_test2->Draw();; h2->Draw(""same"");. }; ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16028:286,variab,variable,286,https://root.cern,https://github.com/root-project/root/issues/16028,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Unable to get he asymmetry projections using RooSimultaneous by using the argument ; `Asymmetry(const [RooCategory](https://root.cern.ch/doc/master/classRooCategory.html)& c)`. ### Reproducer. This code is written by Jonas Rembser:. ```c++; void repro(); {; using namespace RooFit;. RooWorkspace ws;; ws.factory(""Gaussian::gauss_A(x_A[-10, 10], -1.0, 1.0)"");; ws.factory(""Gaussian::gauss_B(x_B[-10, 10], +1.0, 1.0)"");; ws.factory(""ExtendPdf::pdf_A(gauss_A, n_A[10000.])"");; ws.factory(""ExtendPdf::pdf_B(gauss_B, n_B[10000.])"");; ws.factory(""SIMUL::simPdf(sample[A=-1, B=+1], A=pdf_A, B=pdf_B)"");. RooRealVar &xA = *ws.var(""x_A"");; RooRealVar &xB = *ws.var(""x_B"");; RooCategory &sample = *ws.cat(""sample"");. std::unique_ptr<RooDataSet> data{ws.pdf(""simPdf"")->generate({xA, xB, sample})};. auto frame = ws.var(""x_A"")->frame();; ws.pdf(""simPdf"")->plotOn(frame, Asymmetry(sample), ProjWData(sample, *data));. frame->Draw();; }; ```. ### ROOT version. 6.28/04. ### Installation method. pre-built binary. ### Operating system. Ubuntu, 20.04. ### Additional context. **What made me open this issue?**. I have the working code for a weighted 2D simultaneous PDF. It has 2 mass variables which I fit and two separate datasets corresponding to the D0 and D0bar samples. How do I get the asymmetry of as a function of the two mass variables from the D0 and D0bar PDFs corresponding to each mass variable. I can do it for histograms using TH1::GetAsymmetry but I am not able to do it in the Roofit code. Here’s the code that I am using:; [asym_proj_forum.zip](https://github.com/root-project/root/files/13694702/asym_proj_forum.zip). The root file can be found at:; https://drive.google.com/file/d/1g9iV072zb0h3qGo4Ui5EcYxtDJkc8wNL/view?usp=sharing. I posted this issue on root forum and it was suggested that I create a github issue. One can follow the discussion [here](https://root-forum.cern.ch/t/asymmetry-plots-with-roofit/57570)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14255:506,Extend,ExtendPdf,506,https://root.cern,https://github.com/root-project/root/issues/14255,5,"['Extend', 'variab']","['ExtendPdf', 'variable', 'variables']"
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:1476,variab,variable,1476,https://root.cern,https://github.com/root-project/root/issues/15318,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `TTreeFormula` (and thus by extend `TTree::Scan` and `TTree::Draw`) does not handle well (under-statement) cases of schema evolution that involves renaming a class. See the reproducer for more details. We need to verify if whether `TTreeReader` and thus `RDataFrame` suffer from the same issue. ### Reproducer. [conversion.tgz](https://github.com/root-project/root/files/14105386/conversion.tgz); run:; ```; root.exe -b -l -q writedata.C+; # Read with the 'old' schema, the result is accurate.; root.exe -b -l -q oldread.C+; # Read with the complex rule ; TTree::Scan is broken; root.exe -b -l -q readwithrule.C+; # Read with the renaming rule ; TTree::Scan only works for accessing the inner content in the case of a split branch.; root.exe -b -l -q readwithrenaming.C+; ```. The correct output for the full object printing part of the reading script is:; ```; Content of branch seg_split.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; Content of branch seg_unsplit.; Wrapper; CSCSegment::someValue = 1; CSCSegment::theDuplicateSegments size = 2; MatchedCSCSegment::someValue = 2; MatchedCSCSegment::someValue = 3; ```. The expected result of the `TTree::Scan` part of the reading script is:. ```; ******************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments@.size *; ******************************************************************; * 0 * 0 * 2 *; ******************************************************************; **************************************************************************************; * Row * Instance * seg_split.obj.theDuplicateSegments.someValue *; **************************************************************************************; * 0 * 0 * 2 *; * 0 * 1 * 3 *; **********************************************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:103,extend,extend,103,https://root.cern,https://github.com/root-project/root/issues/14493,1,['extend'],['extend']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:286,plugin,plugins,286,https://root.cern,https://github.com/root-project/root/issues/15091,2,['plugin'],['plugins']
Modifiability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. running some tests on 6.32 with the CMS Higgs workspace I am getting a crash with the top of the stack trace pointing to `RooBernstein::fillBuffer()` which was introduced in https://github.com/root-project/root/commit/50a1bddacc1cbd22d7ce0e184db42bc04e9b0088. I can confirm that I don't see the crash when I use a version of ROOT master from just before this commit. . Looking at the commit, it has introduced a new data member, `_buffer` ... but has not done any schema evolution. . I'm wondering if the crash is that the `_buffer` in the auto-evolved instance is empty, and then the `fillBuffer` method is trying to fill into this? The resize of `_buffer` only happens in the non-default-constructor, I note. ### Reproducer. In 6.32:; ```; import ROOT.Experimental.XRooFit as XRF; w = XRF.xRooNode(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root""); w[""model_s""][0].Draw(); ```; or in C++:; ```; using namespace ROOT::Experimental::XRooFit;; xRooNode w(""/afs/cern.ch/work/w/will/public/cms_higgs_ws.root"");; w[""model_s""]->at(0)->Draw();; ```. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15690:620,evolve,evolved,620,https://root.cern,https://github.com/root-project/root/issues/15690,1,['evolve'],['evolved']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865:226,Config,Config,226,https://root.cern,https://github.com/root-project/root/issues/13865,2,['Config'],['Config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579:891,config,configFile,891,https://root.cern,https://github.com/root-project/root/issues/15579,2,['config'],"['config', 'configFile']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188:446,config,configuration,446,https://root.cern,https://github.com/root-project/root/issues/14188,4,"['CONFIG', 'config']","['CONFIG', 'config', 'configuration']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A user has reported a compatibility issue when sourcing thisroot.sh from the ROOT framework in the zsh shell. The error encountered is: /usr/bin/which: invalid option -- 'p'. This problem is traced to the script at:. https://github.com/root-project/root/blob/a1f54ed694b330a3b2591807daa75445a39a76c3/config/thisroot.sh#L182. The script uses the _which_ command with the -p option, a feature specific to zsh's built-in _which_ command. However, in this context, the system's _which_ command is called instead, which does not recognize the -p option. The script should be modified to use zsh's built-in _which_ command. This can be done by using _builtin which_ instead of just _which_. ### Reproducer. ```; ssh lxplus7; zsh; source /cvmfs/sft.cern.ch/lcg/releases/LCG_105/ROOT/6.30.02/x86_64-centos7-gcc11-opt/bin/thisroot.sh ; /usr/bin/which: invalid option -- 'p'; ```. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14324:375,config,config,375,https://root.cern,https://github.com/root-project/root/issues/14324,1,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. As per the title, `TBranch::GetBulkEntries` does not work for variable-sized arrays, while it works for static-sized arrays and scalars. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>. void FillTree(const char *filename, const char *treeName) {; TFile f(filename, ""recreate"");; TTree t(treeName, treeName);; int n = 2;; double *x = new double[2];; x[0] = 42;; x[1] = 84;; t.Branch(""n"", &n);; t.Branch(""x"", x, ""x[n]/D"");; t.Fill();; t.Write();; f.Close();; }. int main() {; auto filename = ""repro_getbulkread.root"";; auto treename = ""t"";; FillTree(filename, treename);. TFile f(filename);; auto *t = f.Get<TTree>(treename);. t->Scan();; ; auto *b = t->GetBranch(""x"");; TBufferFile buf(TBuffer::kWrite, 10000);; const auto n = b->GetBulkRead().GetBulkEntries(0, buf);; assert(n == 1);; }; ```. ### ROOT version. 6.29. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13239:137,variab,variable-sized,137,https://root.cern,https://github.com/root-project/root/issues/13239,1,['variab'],['variable-sized']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14169:124,config,configure,124,https://root.cern,https://github.com/root-project/root/issues/14169,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159:252,Config,Configuring,252,https://root.cern,https://github.com/root-project/root/issues/14159,1,['Config'],['Configuring']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068:571,config,config,571,https://root.cern,https://github.com/root-project/root/issues/14068,2,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Ever since integrating with ROOT, my cmake project cannot find a dependency using `find_package()`. It seems that `ROOTConfig.cmake` [reconfigures](https://github.com/root-project/root/blob/v6-32-00/cmake/scripts/ROOTConfig.cmake.in#L148) the value of `CMAKE_FIND_LIBRARY_PREFIXES` in order to find ROOT libraries with the `lib` prefix. However, the original value is never put back. Later on, this breaks e.g. `find_library(ZLIB)`, which relies on the existence of a file called `zlib.lib` (not `libzlib.lib`). This was discussed in [another issue](https://github.com/microsoft/vcpkg/issues/39099). ### Reproducer. 1. Create a hello world C++ project with cmake build system.; 2. Add dependency on ROOT using `find_package(ROOT CONFIG REQUIRED)`.; 3. Add dependency on ZLIB using `find_package(ZLIB REQUIRED)`.; 4. Attempt to configure the project with cmake. Expected result: the project configures successfully and can be built.; Actual result: the configuration fails, see [the issue referenced earlier](https://github.com/microsoft/vcpkg/issues/39099) for detailed logs. ### ROOT version. My build environment uses ROOT v6.26.10, but I confirmed that the bug is present in v6.32.00 as well. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15727:804,CONFIG,CONFIG,804,https://root.cern,https://github.com/root-project/root/issues/15727,4,"['CONFIG', 'config']","['CONFIG', 'configuration', 'configure', 'configures']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Expected: valid XML. To summarize:; - `ShapeFactor` can have init values for its nuisance parameters; - The documentation for `ShapeFactor` indicates settings both for reading/writing the initial shape (see `fhHigh` in the [source code](https://github.com/root-project/root/blob/28c5ade5377bfb6b9025b79aa404d5270516af3c/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h#L251)); - `ShapeFactor` inherits from `HistogramUncertaintyBase` which allows setting of some common attributes such as `HistoName` and `HistoPath` and `InputFile`. I can write valid code (in python, but assumed to be about the same as in C++) to create a valid `Measurement` that ROOT is happy with, however it is not serializable. ### Reproducer. Using the attached `data/data.root` which contains the histogram already with init values, you can run the following python code mainly inspired from the [hf001_example.C](https://root.cern.ch/doc/master/hf001__example_8C.html) example:. ```python; import ROOT; from ROOT.RooStats import HistFactory as HiFa; Measurement = HiFa.Measurement; Sample = HiFa.Sample; Channel = HiFa.Channel. InputFile = ""data/data.root"". # Create the measurement; meas = Measurement(""meas"", ""meas""); meas.SetOutputFilePrefix( ""./results/example_UsingPython"" ); meas.SetPOI( ""poi"" ); meas.AddConstantParam(""alpha_syst1""); meas.AddConstantParam(""Lumi""); meas.SetLumi( 1.0 ); meas.SetLumiRelErr( 0.10 ); meas.SetExportOnly( False ); meas.SetBinHigh( 2 ). chan0 = Channel(""channel_0""); chan0.SetData(""histchannel_0_data"", InputFile); chan0.SetStatErrorConfig( 0.05, ""Poisson"" ). sample_0 = Sample(""sample_0"", ""histchannel_0_sample_0"", InputFile); sample_0.AddShapeFactor(""shape_factor_0""); sample_0.GetShapeFactorList()[0].SetInputFile(InputFile); sample_0.GetShapeFactorList()[0].SetHistoName(""inits_shape_factor_0""); chan0.AddSample( sample_0 ). sample_1 = Sample(""sample_1"", ""histchannel_0_sample_1"", InputFile); sample_1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:477,inherit,inherits,477,https://root.cern,https://github.com/root-project/root/issues/13287,1,['inherit'],['inherits']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195:166,variab,variables,166,https://root.cern,https://github.com/root-project/root/issues/14195,2,"['Config', 'variab']","['Configuring', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14528:152,variab,variable,152,https://root.cern,https://github.com/root-project/root/issues/14528,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, build craps out as seen below. Reasonably standard build, the only difference from (my) usual is that I have no preinstalled xrootd, no idea if that is related. I've seen similar issues on 13.2-RELEASE. Something makes it think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:403,config,configure,403,https://root.cern,https://github.com/root-project/root/issues/14492,3,"['config', 'plugin']","['configure', 'configure-Release', 'plugins']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi:; I build ROOT on Windows with msvc and with option /permissive-, it issues error like below, could you take a look at this issue, thanks.; `F:\gitP\root-project\root\tmva\tmva\inc\TMVA/RBatchGenerator.hxx(100,89): error C4576: a parenthesized type followed by an initializer list is a non-standard explicit type conversion syntax [F:\gitP\root-project\root\build_amd64\tmva\tmva\G__TMVA.vcxproj]`. **Workaround:**; If I remove the brackets around the `std::vector<std::size_t>` in the line: https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RBatchGenerator.hxx#L100, error will disappear. ### Reproducer. Open a VS2022 x64 Native Tools command.; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. git -C ""F:\gitP\root-project\root"" reset --hard 0d1f204109a31cc4884e9fd49519edf0fa2e4505; 3. mkdir F:\gitP\root-project\root\build_amd64 and cd F:\gitP\root-project\root\build_amd64; 4. python.exe -m pip install pytest ; 5. set _CL_=/permissive-; 6. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=ON -Droottest=ON ..; 7. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### ROOT version. commit: 0d1f204109a31cc4884e9fd49519edf0fa2e4505. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. [build.log](https://github.com/root-project/root/files/12300237/build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13421:1253,Config,Configuration,1253,https://root.cern,https://github.com/root-project/root/issues/13421,1,['Config'],['Configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I have tried to build ROOT (v6.30.04, v6.30.06, master seems to be the same) with RapidYAML by setting variables ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` during the configuration step. Build of ROOT fails (jsoninterface step), first complaining that it can't find ```ryml.hpp``` and if fixed it can't link the libraries ```c4core``` and ```ryml```. Problem seems to be, that when searching for RapidYAML, ```cmake/modules/Findryml.cmake``` sets variables ```RYML_INCLUDE_DIR``` and ```RYML_LIBRARY_PATH```, but in ```roofit/jsoninterface/CMakeLists.txt``` different variables are used (```RYML_INCLUDE_DIRS``` and ```RYML_LIB_DIR```, respectively). ### Reproducer. Try to build ROOT, during configuration step set ```RYML_LIBRARY``` and ```RYML_INCLUDE_DIR``` variables to point to local RapidYAML installation. ### ROOT version. v6.30.04, v6.30.06, CMake v3.29.0, RapidYAML v0.5.0. ### Installation method. build from source. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15118:178,variab,variables,178,https://root.cern,https://github.com/root-project/root/issues/15118,6,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If TF1::DrawCopy() is used to draw the function, all axis settings (which are stored in histogram) are lost. ### Reproducer. This happens for instance in `tutorials/math/Bessel.C` macro where configured axis titles are not displayed. ### ROOT version. master and all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13122:267,config,configured,267,https://root.cern,https://github.com/root-project/root/issues/13122,1,['config'],['configured']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If configuring any web display, gPad is not properly set.; As a result, `h.Draw` creates new canvas.; Code works properly when gROOT.SetWebDisplay(""off"") invoked. ### Reproducer. Here is reproducer:; ```; import ROOT. ROOT.gROOT.SetWebDisplay(""""). c = ROOT.TCanvas(). if ROOT.gPad:; print(""gPad name"", ROOT.gPad.GetName(), ""editable"", ROOT.gPad.IsEditable()); else:; print(""gPad is not there - why?""). h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""). # this is a problem - histogram do not ""see"" gPad and creates new canvas; h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. master branch. Python 3.11.9. ### Installation method. build from source. ### Operating system. OpenSUSE linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15498:78,config,configuring,78,https://root.cern,https://github.com/root-project/root/issues/15498,1,['config'],['configuring']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:687,variab,variable,687,https://root.cern,https://github.com/root-project/root/issues/15970,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In TFormula the polynomial functions do not accept a variable name (such as x) as argument. . ### Reproducer. Example of code producing an error in parsing the formula expression; ```; TF1 f1(""f1"",""pol1(x,0)"");; TF1 f2(""f2"",""pol1(x,[A],[B])"");; ```; In the case of other predefined functions, for example, gaus, works as expected:; ```; TF1 f1(""f1"",""gaus(x,0)"");; f1.Print(""V"");; TF1 f2(""f2"",""gaus(x,[A],[mean],[sigma])"");; f2.Print(""V"");; ```. ### ROOT version. All ROOT 6 versions with new TFormula. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16794:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/16794,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:102,inherit,inheriting,102,https://root.cern,https://github.com/root-project/root/issues/15221,1,['inherit'],['inheriting']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:636,config,config,636,https://root.cern,https://github.com/root-project/root/issues/13734,3,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:; ```; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h; ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14593:116,variab,variable,116,https://root.cern,https://github.com/root-project/root/issues/14593,1,['variab'],['variable']
Modifiability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT_HEAD failed in the nightlies in centos7 platfom; The reported error estracted from the[ log file ](http://cdash.cern.ch/upload/43670d452f7f3ef813ce655ef9357e62800d1e7a/ROOT-HEAD-configure.log)is:; gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test found_arc4; -- Performing Test found_arc4 - Failed; -- Performing Test found_arc4_bsd; -- Performing Test found_arc4_bsd - Failed; -- Performing Test found_getrandom; -- Performing Test found_getrandom - Failed; CMake Error at core/unix/CMakeLists.txt:42 (message):; Fail to detect cryptographic random generator. ### Reproducer. [lcg_nightly_pipeline](https://lcgapp-services.cern.ch/spi-jenkins/view/LCG%20Nightlies/job/lcg_nightly_pipeline/). ### ROOT version. master. ### Installation method. build from source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:258,config,configure,258,https://root.cern,https://github.com/root-project/root/issues/14958,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Running `rootn.exe` from ROOT 6.30.04 should bring up the ROOT prompt, but instead crashes instantly on startup. . It works fine with older versions of ROOT (6.28, 6.26). ### Reproducer. - Install precompiled ROOT 6.30.04, downloaded from root.cern, on RHEL8 or 9.; - Run `thisroot.sh` to set up the runtime environment; - Type rootn.exe; - Hard crash. Transcript of session on RHEL8:; ```; % source /apps/ROOT/6.30.04/bin/thisroot.sh; % root-config --version; 6.30.04; % root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_davix builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xrootd builtin_xxhash builtin_zeromq builtin_zlib builtin_zstd clad dataframe davix fftw3 fitsio fortran gdml http imt mathmore mlp minuit2 mysql opengl pgsql proof pyroot roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore x11 xml xrootd; % which rootn.exe; /apps/ROOT/6.30.04/bin/rootn.exe; % rootn.exe; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; ... longish stack trace ...; ```; This works without error with ROOT 6.26.14 and 6.28.12 on the exact same machine. Running plain `root` 6.30.04 also works, of course. Only `rootn.exe` seems affected. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 31 2024, 09:46:18 |; | From heads/master@tags/v6-30-04 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-21) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14767:518,config,config,518,https://root.cern,https://github.com/root-project/root/issues/14767,2,['config'],['config']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15927:1166,evolve,evolved,1166,https://root.cern,https://github.com/root-project/root/issues/15927,1,['evolve'],['evolved']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612:192,config,config,192,https://root.cern,https://github.com/root-project/root/issues/16612,2,['config'],"['config', 'configure']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There are many places where value of global buffer from `Form` stored in variable and used in several consequent calls.; Such behavior is undefined while global buffer may be changed by other calls. Moreover, there are places (at least one) where two `Form` used in single call - definitely is not working.; See here:. https://github.com/root-project/root/blob/master/tmva/tmva/src/MethodTMlpANN.cxx#L456. ```; dummyTree->Branch(Form(""%s"",vn.Data()), d+ivar, Form(""%s/D"",vn.Data()));; ```. One should use `TString::Format()` instead. ### Reproducer. -. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13136:148,variab,variable,148,https://root.cern,https://github.com/root-project/root/issues/13136,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a HistFactory setup where one of the NormFactors is constant and set to -1. During the Workspace creation (HistoToWorkspaceFactoryFast) the code crashes:. ```; --------; RooFormulaVar::b2[ actualVars=(b) formula=""b*b"" ] = 0.294849. [#2] INFO:HistFactory -- making normFactor: mu_ttbar; [#2] INFO:HistFactory -- processing hist emu_OS_2b_Mc_regBin; [#2] INFO:HistFactory -- Mc_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:1298,variab,variable,1298,https://root.cern,https://github.com/root-project/root/issues/14225,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14157:611,config,configuration,611,https://root.cern,https://github.com/root-project/root/issues/14157,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When drawing `TGraph2D` with ""tri1"" draw option and configure min/max Z values which do not fully covers existing range,; wrong drawing appears.; ![c1](https://github.com/root-project/root/assets/4936580/fc74b088-f09b-499d-8181-07f8b436f5a7). ### Reproducer. Reproducer macro:; [gr2d.C.txt](https://github.com/root-project/root/files/12302619/gr2d.C.txt). ### ROOT version. master branch, most probably all previous branches as well. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13424:127,config,configure,127,https://root.cern,https://github.com/root-project/root/issues/13424,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When looping over a polymorphic collection, type() always reports the base class type, not the actual object type. ### Reproducer. ```python; import cppyy; cppyy.cppdef(""""""; class vertex { public:; virtual std::string idself() { return ""I am vertex""; }; };; class Mvertex : public vertex { public:; virtual std::string idself() { return ""I am Mvertex""; }; };; class vCont { public:; std::vector< vertex* > verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; };; """"""); cont = cppyy.gbl.vCont(); verts = cont.vertices(); for v in verts:; print( v.idself(), v.__class__, type(v), ""Am I Mvertex?"", isinstance(v, cppyy.gbl.Mvertex) ); ```. ### ROOT version. 6.32-patches. ### Installation method. lcg dev3/dev4. ### Operating system. alma9. ### Additional context. The output of the reproducer looks like this:; `I am vertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False ; I am Mvertex <class cppyy.gbl.vertex at 0x8d58190> <class cppyy.gbl.vertex at 0x8d58190> Am I Mvertex? False`; which means the virtual methods resolution works fine, but the __class__ of the iteration variable is not set correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15234:95,polymorphi,polymorphic,95,https://root.cern,https://github.com/root-project/root/issues/15234,2,"['polymorphi', 'variab']","['polymorphic', 'variable']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13569:221,variab,variable,221,https://root.cern,https://github.com/root-project/root/issues/13569,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When setting `TFile.v630forwardCompatibility` to true in `/etc/root/system.rootrc`, there is still confusing behavior and new files can be written without compability. In particular, *new* files are not opened in compatibility mode (largely limiting the usefulness of the configuration flag). ### Reproducer. ```; gEnv->GetValue(""TFile.v630forwardCompatibility"", 0). TFile file1 = TFile(""file1.root"",""CREATE""); file1.TestBit(TFile::k630forwardCompatibility); file1.Close(). TFile file2 = TFile(""file1.root"",""READ""); file2.TestBit(TFile::k630forwardCompatibility); file2.Close(). TFile* file3 = TFile::Open(""file3.root"",""CREATE""); file3->TestBit(TFile::k630forwardCompatibility); file3->Close(). TFile* file4 = TFile::Open(""file3.root"",""READ""); file4->TestBit(TFile::k630forwardCompatibility); file4->Close(); ```; produces; ```; $ root -l ; root [0] gEnv->GetValue(""TFile.v630forwardCompatibility"", 0); (int) 1; root [1] ; root [1] TFile file1 = TFile(""file1.root"",""CREATE""); (TFile &) Name: file1.root Title: ; root [2] file1.TestBit(TFile::k630forwardCompatibility); (bool) false; root [3] file1.Close(); root [4] ; root [4] TFile file2 = TFile(""file1.root"",""READ""); (TFile &) Name: file1.root Title: ; root [5] file2.TestBit(TFile::k630forwardCompatibility); (bool) true; root [6] file2.Close(); root [7] ; root [7] TFile* file3 = TFile::Open(""file3.root"",""CREATE""); (TFile *) 0x5650bd7edba0; root [8] file3->TestBit(TFile::k630forwardCompatibility); (bool) false; root [9] file3->Close(); root [10] ; root [10] TFile* file4 = TFile::Open(""file3.root"",""READ""); (TFile *) 0x5650bd584570; root [11] file4->TestBit(TFile::k630forwardCompatibility); (bool) true; root [12] file4->Close(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16189:347,config,configuration,347,https://root.cern,https://github.com/root-project/root/issues/16189,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:932,config,configuration,932,https://root.cern,https://github.com/root-project/root/issues/16038,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the webgui in Qt5 there is a red frame around the currectly selected pad:; <img width=""337"" alt=""RedFrame"" src=""https://github.com/root-project/root/assets/62039342/c98e6a71-b86e-43e8-9b82-0bc7e19f7072"">. Is there any way to disable this frame or possible to configure the color of the frame from within the C++ part?. It seems this color _red_ is hardcoded in `/js/modules/gpad/TPadPainter.mjs`; ```js; let lineatt = this.is_active_pad && (cp?.highlight_gpad !== false) ? new TAttLineHandler({ style: 1, width: 1, color: 'red' }) : this.lineatt;; ```; And I could not find a way to set _highlight_gpad_ from C++. Maybe I missed something?. ### Reproducer. Launch the qtweb tutorial; Select the TCanvas tab; Divide the main canvas in multiple pads; Select one of the pads; You will see the red frame around the selected pad. ### ROOT version. 6.31.01 linuxx8664gcc. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14401:345,config,configure,345,https://root.cern,https://github.com/root-project/root/issues/14401,1,['config'],['configure']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15938:243,variab,variables,243,https://root.cern,https://github.com/root-project/root/issues/15938,2,['variab'],"['variable', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```; cmake3 /opt/src/root \; -DCMAKE_INSTALL_PREFIX=/opt/root \; -DPYTHON_EXECUTABLE=${python_executable} \; -DPYTHON_INCLUDE_DIR=${python_include_dir} \; -DPYTHON_LIBRARY=${python_include_dir} \; -Dpython3:BOOL=ON \; -Dsoversion:BOOL=ON \; -Dtmva:BOOL=OFF \; -Dgnuinstall:BOOL=ON \; -Wno-de; cmake3 --build . --clean-first --target install; ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 19 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16024:193,variab,variables,193,https://root.cern,https://github.com/root-project/root/issues/16024,6,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter.; Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):; ````; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:848,plugin,plugins,848,https://root.cern,https://github.com/root-project/root/issues/14075,1,['plugin'],['plugins']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:556,inherit,inheritance,556,https://root.cern,https://github.com/root-project/root/issues/14186,1,['inherit'],['inheritance']
Modifiability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14259:142,variab,variable,142,https://root.cern,https://github.com/root-project/root/issues/14259,1,['variab'],['variable']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello, I have a compiled program that is crashing because of DrawIntegral in a specific context.; This issue is not happening when using interactive c++. This program is crashing in my case with the following issue:. ```; Install the project...; -- Install configuration: ""Debug""; -- Installing: /Users/marcomeyer/Software/escalade/bin/pcp; -- Installing: /Users/marcomeyer/Software/escalade/bin/SignalTest. *** Break *** segmentation violation; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:0; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] SigHandler(ESignals) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:403; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] sighandler(int) /Users/marcomeyer/Software/root/src/core/unix/src/TUnixSystem.cxx:3604; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libCore.so] TVirtualPad::TContext::~TContext() /Users/marcomeyer/Software/root/src/core/base/src/TVirtualPad.cxx:62; [/Users/marcomeyer/Software/root/20230831/lib/libHist.so] TF1::DrawIntegral(char const*) /Users/marcomeyer/Software/root/src/hist/hist/src/TF1.cxx:1415; [/Users/marcomeyer/Software/escalade/bin/SignalTest] main /Users/marcomeyer/Software/escalade/src/lib/OMU/tests/src/SignalTest.C:17; [/usr/lib/dyld] start (no debug info); ```. ### Reproducer. ```; [...]. int main() {. TApplication *app = new TApplication(""root"", NULL, NULL);. TCanvas *c = new TCanvas(""c4"", """", 720, 1024);; // c->Divide(1, 2);; ; TF1 *f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();. c->cd(2);; f->DrawIntegral();; ; while(1); gSystem->Proce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708:332,config,configuration,332,https://root.cern,https://github.com/root-project/root/issues/13708,1,['config'],['configuration']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,; I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```; <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>; <variable name=""testVariable"" value=""someNumbers[1]""/>; ```. ROOT complains when parsing the GDML, with the following error:. ```; input_line_155:2:81: error: subscripted value is not an array, pointer, or vector; Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }; ~~~~^~; Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'; aborting; ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,; Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```; root -l; TGeoManager::Import(""geometry_test.gdml""); ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:132,variab,variables,132,https://root.cern,https://github.com/root-project/root/issues/13074,2,['variab'],"['variable', 'variables']"
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:932,Config,Configuration,932,https://root.cern,https://github.com/root-project/root/issues/15336,3,"['Config', 'Plug-in']","['Configuration', 'Plug-in']"
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. If you build ROOT from a tarball, you'll see the message below during configuration:; ```; -- Found Git: /usr/bin/git (found version ""2.44.0""); CMake Warning at cmake/modules/SetROOTVersion.cmake:85 (message):; GIT_DESCRIBE_ALL is ``·with a format unexpected for tags. Not setting the; commit.; Call Stack (most recent call first):; cmake/modules/SetROOTVersion.cmake:99 (SET_ROOT_VERSION); CMakeLists.txt:77 (include). -- Building ROOT version 6.30.06; ```; Not a big deal, but might be worth fixing. ### Reproducer. Build ROOT from a tarball instead of a git clone. ### ROOT version. ROOT 6.30.06. ### Installation method. Portage. ### Operating system. Gentoo Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15178:145,config,configuration,145,https://root.cern,https://github.com/root-project/root/issues/15178,1,['config'],['configuration']
Modifiability,### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading back objects with virtual diamond inheritance does not work correctly. RNTuple should forbid virtual inheritance. Diamond inheritance without virtual inheritance works as expected. Follow-up of https://github.com/root-project/root/pull/14822#discussion_r1522390235. ### Reproducer. tbd. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15048:117,inherit,inheritance,117,https://root.cern,https://github.com/root-project/root/issues/15048,4,['inherit'],['inheritance']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:922,variab,variables,922,https://root.cern,https://github.com/root-project/root/issues/13155,1,['variab'],['variables']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. ; When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```; cmake_minimum_required(VERSION 3.10); project(ROOTHistMapExample); find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}); set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp); set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h); ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h); add_library(mwe SHARED ${SOURCES} G__mwe.cxx); target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}); target_link_libraries(mwe ${ROOT_LIBRARIES}); ```. myscript.py:. ```; import cppyy; import ROOT; cppyy.load_library('libmwe.so'); createHistMap = cppyy.gbl.createHistMap; hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:; hist.ProjectionY() # This should fail if the type is not correctly handled; print(""something is wrong""); except AttributeError as e:; print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed; print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""); ```. mwe.cpp:. ```; #include <mwe.h>; #include <TH1.h>; #include <TH2.h>. std::map<std::string, TH1*> createHistMap() ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16062:643,polymorphi,polymorphic,643,https://root.cern,https://github.com/root-project/root/issues/16062,1,['polymorphi'],['polymorphic']
Modifiability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321:961,Config,Configuration,961,https://root.cern,https://github.com/root-project/root/issues/15321,1,['Config'],['Configuration']
Modifiability,"### Describe the bug. Following up on #11396, I noticed that a NLL created from a RooSimultaneous in a multi-ranged configuration doesn't give the expected value. In https://github.com/root-project/root/pull/11445, I tried to implement a unit test that was checking exactly that, but the NLL from RooSimultaneous was not consistent with a mathematically equivalent sum of NLLs per category. It is still not clear whether the difference is only a constant factor that doesn't influence the fit result, but this is potentially a but that even has an influence on the results. I suspect that it is actually biasing the fit result, because in multi-ranged fits the NLL is computed using an integral of the top-level PDF that is created with `createIntegral`, and I'm not sure if the integral of a RooSimultaneous is well defined in that context. Please @AlkaidCheng, take note of this, because this is a potential problem for your workflow. ### Expected behavior. The NLL value from a RooSimultaneous in a multi-range configuration should be the same value as the normalized combination of individual NLLs created in the individual categories. ### To Reproduce. Comment out the final part of the `MultiRangeFitWithSplitRange` unit test in `testRooSimultaneous`. ### Setup. Arch Linux with ROOT master. ### Additional context. - The priority level of this issue can be reduced if it turns out that the difference in the NLL value is a constant that doesn't affect the fit result",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447:116,config,configuration,116,https://root.cern,https://github.com/root-project/root/issues/11447,2,['config'],['configuration']
Modifiability,"### Describe the bug. If one combines two weighted datasets to a new dataset meant for simultaneous fits, the weight information is unexpectedly lost. This can be circumvented by creating a new weight variable and using the `RooFit::WeightVar()` command argument, but users expect that this gets dealt with automatically. ### Expected behavior. The new RooDataSet should also be weighted. ### To Reproduce. Run the code I wrote as an answer to a question on the forum:; https://root-forum.cern.ch/t/roofit-simultaneous-template-fit-on-two-different-variables/51774/3. Replace this part:; ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooRealVar w(""weight"", ""weight"", 1.0);; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}}),; WeightVar(""weight"")};; ```. with this:. ```c++; // A bit annoying, but we have to create a weight variable ourselves to; // transfer the weights from the component datsets; RooDataSet data{; ""data"",; ""data"",; {x, w},; Index(category),; Import({{""cat1"", data1.get()}, {""cat2"", data2.get()}})};; ```; When the `WeightVar` argument is removed, the combined dataset is not weighted anymore, which is completely unexpected as the input datasets have the same layout and are both weighted. ### Setup. ROOT `master` on Arch Linux. ### Additional context; -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11487:201,variab,variable,201,https://root.cern,https://github.com/root-project/root/issues/11487,4,['variab'],"['variable', 'variables']"
Modifiability,"### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python; import ROOT. class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); ```. This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:46,inherit,inherits,46,https://root.cern,https://github.com/root-project/root/issues/6578,1,['inherit'],['inherits']
Modifiability,"### Describe the bug. The `RooFFTConvPdf` gives wrong results if one of the input PDFs is a `RooProdPdf`. ### To Reproduce. The issue can be reproduced by computing the convolution of two Gaussians, where one of the Gaussians is turned into a `RooFFTConvPdf` by multiplication with unity (`RooUniform`). ```C++; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealSumPdf.h""; #include ""RooRealVar.h""; #include ""RooRealSumPdf.h""; #include ""RooUniform.h""; #include ""RooProdPdf.h""; #include ""RooFFTConvPdf.h""; #include ""TCanvas.h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:560,variab,variable,560,https://root.cern,https://github.com/root-project/root/issues/7157,1,['variab'],['variable']
Modifiability,"### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:; ```C++; model.createChi2(data);; RooChi2Var{""chi2"", ""chi2"", model, data};; ```. ### To Reproduce. ```C++; void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;; RooRealVar mean(""mean"",""mean"",5, 0, 10) ;; RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);; RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2; std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};; // Create chi2 variable directoy via constructor; RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results!; chi21->Print();; chi22.Print();. auto minimize = [](RooAbsReal& real){; RooMinimizer m(real);; m.setPrintLevel(-1);; m.migrad();; m.hesse();; std::unique_ptr<RooFitResult> r{m.save()};; r->Print();; };. // Even the minimization results are different, also when correctly; // resetting the fit parameters in between fits.; minimize(*chi21);; mean.setVal(5);; sigma.setVal(0.5);; mean.setError(0.0);; sigma.setError(0.0);; minimize(chi22);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10557:955,variab,variable,955,https://root.cern,https://github.com/root-project/root/issues/10557,2,['variab'],['variable']
Modifiability,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:751,config,config,751,https://root.cern,https://github.com/root-project/root/issues/8027,1,['config'],['config']
Modifiability,"### Describe the bug. When adding two histograms, the weights associated with the bin contents of those histograms should also be added appropriately. `THnSparse` does not do this. It still reports the weights of the first histogram, ignoring the second. ### Expected behavior. The sum of weights should include the weights of both histograms that were added together. ### To Reproduce. The script is here: https://www.dropbox.com/s/j5wvixrmdtdx3b5/testTHNadd.C?dl=0; (GitHub apparently does not allow attaching .C files). ```bash; root -b -l -q testTHNadd.C; ```. This script shows the bug by comparing two cases:; 1. Filling one histogram twice; 2. Filling two histograms once and adding them. The output is:; ```; THnSparseT<TArrayD> (*0x6c127c0): ""hs"" ""CASE 1""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:837,variab,variable,837,https://root.cern,https://github.com/root-project/root/issues/11333,3,['variab'],['variable']
Modifiability,"### Describe the bug. ``` 1018 - tutorial-roofit-rf208_convolution-py (Failed); 1020 - tutorial-roofit-rf210_angularconv-py (Failed); 1021 - tutorial-roofit-rf211_paramconv-py (Failed); 1052 - tutorial-roofit-rf512_wsfactory_oper-py (Failed); ```; if ROOT is not built with fft3. ### Expected behavior. The tutorials are skipped. ### To Reproduce. Configure with testing, without fft, run tests. ### Additional context; Add to `fftw3_veto` in `tutorials/CMakeLists.txt`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8261:348,Config,Configure,348,https://root.cern,https://github.com/root-project/root/issues/8261,1,['Config'],['Configure']
Modifiability,"### Describe the bug. building root v6-26-00 with clang 13.0.1 fails with many errors. I have tried with both gcc8.4 and gcc11.2 toolchains for clang. This is on a centos7 system. The cmake (3.22.2) configuration step was:; ```; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -GNinja ../src; ```; Is this expected behavior? If so, what version of clang is supported for building root?. If desired, I will attach the build errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046:199,config,configuration,199,https://root.cern,https://github.com/root-project/root/issues/10046,1,['config'],['configuration']
Modifiability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:379,config,config,379,https://root.cern,https://github.com/root-project/root/issues/7971,1,['config'],['config']
Modifiability,"### Describe the bug; A crash is produced if you type `.Class` in the ROOT prompt. ```; ===========================================================================; struct std::atomic<_Tp *>; SIZE: (NA) FILE: atomic LINE: -1; List of member variables --------------------------------------------------; root.exe: /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/TypeNodes.def:100: clang::TypeInfo clang::ASTContext::getTypeInfoImpl(const clang::Type*) const: Assertion `!T->isDependentType() && ""should not see dependent types here""' failed.; ```. ### Expected behavior; No crash. Also, if you type `.Class TTree` it should only print TTree's class info, not all the list of classes. In analogy to .class TTree vs .class. ### To Reproduce; `.Class; `; or `.Class TTree`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/pull/10121",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140:241,variab,variables,241,https://root.cern,https://github.com/root-project/root/issues/10140,1,['variab'],['variables']
Modifiability,"### Describe the bug; Cmake is not able to configure a project with ROOT.; Usage of ROOT from master requires ""nlohmann_json"".; cmake fails if ""nlohmann_json"" is not found. Even if this package is not used in any way.; . ### Expected behavior; Cmake is able to configure a project with ROOT. ### To Reproduce. Call `find_package(ROOT)`, e.g. `find_package(ROOT REQUIRED COMPONENTS Core RIO Tree TreePlayer Net Hist Gui Gpad Graf EG Thread Imt Html)`. in cmake. ### Setup; ROOT from ; /cvmfs/sft.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc8-opt/bin/thisroot.sh; CentOS7 x86_64 . ### Additional context; The configuration worked well in the past.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7202:43,config,configure,43,https://root.cern,https://github.com/root-project/root/issues/7202,3,['config'],"['configuration', 'configure']"
Modifiability,### Describe the bug; Configuring a build with a different ROOT build already in the environment causes CTest to test the wrong build. I wonder how many devs are not testing their changes but that of some completely unrelated build :-(. ### Expected behavior; `cmake -Droottest=On` should have `ctest` test *that* build. ### To Reproduce; ```; $ which root; $ mkdir ../1; $ cd ../1; $ . /home/axel/build/root/master/deb/bin/thisroot.sh; $ cmake -Droottest=On ../src; $ grep ROOTSYS CMakeCache.txt ; ROOTSYS:INTERNAL=/home/axel/build/root/master/deb; ```. ### Setup; 1. ROOT version: master; 2. Operating system: Ubuntu 20.04; 3. How you obtained ROOT: I built it myself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7081:22,Config,Configuring,22,https://root.cern,https://github.com/root-project/root/issues/7081,1,['Config'],['Configuring']
Modifiability,"### Describe the bug; Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log.; [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log); Could you please help have a look? Thanks a lot!. Error:; CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):; Command failed: 1; ; 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'; ; See also; ; F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log; ; ### Expected behavior; Successfully build root project without errors. ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src; 3. mkdir root_build root_install && cd root_build; 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src; 5. cmake --build . --config Release --target install. ### Setup; 1. Operating system: Windows 10; 2. Visual studio version: 16.11.6; 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:243,config,configure-out,243,https://root.cern,https://github.com/root-project/root/issues/9347,6,['config'],"['config', 'configure', 'configure-Release', 'configure-out']"
Modifiability,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11067:77,config,configuration,77,https://root.cern,https://github.com/root-project/root/issues/11067,2,['config'],['configuration']
Modifiability,"### Describe the bug; It seems `hadd` is confused by the zero length TTree as a first file. Pls find dummy root files in the attached ZIP to reproduce the issue. In `dummyFile0.root`, there're 1000 events in the `dummyTree`; While in `dummyFile1.root`, the tree is empty. So when `hadd` 2 files, like; ```; hadd dummyFile01.root dummyFile0.root dummyFile1.root; ``` ; Everything is okay. While if you do like; ```; hadd dummyFile10.root dummyFile1.root dummyFile0.root; ```; And you open the merged `dummyFile10.root` to get entries like; ```; root [1] dummyTree->GetEntries(); (long long) 1000; ```; It looks okay. But if you show the first event, like; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 2.13654e-306; ```; The `dummyVariable` is definitely non-sense. It should be `0.261287` as it is in the `dummyFile0.root`. I guess if put the empty tree at the first in merging, ROOT is trying get a variable from an empty pointer? . ### Expected behavior; ```; root [1] dummyTree->Show(0); ======> EVENT:0; index = 0; dummyVariable = 0.261287; ```. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: macosx64. [dummyFiles.zip](https://github.com/root-project/root/files/11020163/dummyFiles.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12510:932,variab,variable,932,https://root.cern,https://github.com/root-project/root/issues/12510,1,['variab'],['variable']
Modifiability,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196:788,variab,variable,788,https://root.cern,https://github.com/root-project/root/issues/7196,1,['variab'],['variable']
Modifiability,"### Describe the bug; ROOT v6.24.06 is currently failing to build in Ubuntu 22.04. This appears to be due to an upgrade to [OpenSSL 3.0](https://www.openssl.org/blog/blog/2021/09/07/OpenSSL3.Final/) with this new LTS release; you can see for example a similar issue [here](https://github.com/chris2511/xca/issues/320). The specific build error happens while building XROOTD. (I apologize in advance if this is not the correct place to report the issue.). ### Expected behavior; ROOT builds without error using latest OpenSSL. ### To Reproduce; 1) Clean install of Ubuntu 22.04; 2) `sudo apt update`, followed by `sudo apt upgrade` and `sudo apt install` the required libraries for building ROOT; 3) Download ROOT source code and unzip; 4) Configure & build (using system Python 3.10). ### Setup; ROOT version: v6-24-06; Operating system: Ubuntu 22.04 LTS (on Windows Subsystem for Linux / WSL2); How you obtained ROOT: building from source. ### Additional context; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log` files are attached:; [XROOTD-build-out.log](https://github.com/root-project/root/files/8613858/XROOTD-build-out.log); [XROOTD-build-err.log](https://github.com/root-project/root/files/8613857/XROOTD-build-err.log). The specific error from `XROOTD-build-err.log`:; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD/src/XrdCrypto/XrdCryptosslgsiAux.cc:901:32: error: invalid conversion from ‘const rsa_st*’ to ‘RSA*’ {aka ‘rsa_st*’} [-fpermissive]`. Finally, if it is helpful, the build script being used is [here](https://github.com/ezradlesser/heppy/blob/master/external/root/build.sh), with the only modification to the script being the `root_version` variable: `root_version=6-24-06`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518:739,Config,Configure,739,https://root.cern,https://github.com/root-project/root/issues/10518,2,"['Config', 'variab']","['Configure', 'variable']"
Modifiability,"### Describe the bug; RooFit throws exceptions about an interface change, and links to the release notes, but the release note don't mention anything.; https://github.com/root-project/root/blob/53c89259ed70f4ea5c089d6c90ceb445c3069be9/roofit/roofitcore/inc/RooAbsReal.h#L110-L123. This section needs to appear in the release notes, both in the 6.24 and the master branch. Note:; #7452 already has a section about the new batch interface. This could be extended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7454:452,extend,extended,452,https://root.cern,https://github.com/root-project/root/issues/7454,1,['extend'],['extended']
Modifiability,### Describe the bug; The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance.; ### Expected behavior; root project could build successfully under '/std:c++latest' and '/permissive-' mode.; ### To Reproduce; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_amd64; 2. set CL= /std:c++latest or set CL= /permissive-; 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild; ### Setup; Visual Studio 2019 16.11.8; ### Additional context; Build.log:; /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log); /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607:638,Config,Configuration,638,https://root.cern,https://github.com/root-project/root/issues/9607,1,['Config'],['Configuration']
Modifiability,"### Describe the bug; The following code when run with the interpreter crashes (on the line with std::seed_seq). Names are with underscore to avoid clashes.; ```; constexpr uint32_t seed_bits = 19937;; constexpr uint32_t seed_32_count = 19937 / 32 + bool(19937 % 32);. std::random_device _dev;; uint32_t _seed[seed_32_count];; for (uint32_t i = 0; i < seed_32_count; ++i) {; 	_seed[i] = _dev();; }; std::seed_seq _seq(_seed, _seed + seed_32_count);; ```. This may be related to handling of stack variables. (Calling alloca will also crash the interpreter, but that is a corner case, I suppose.). ### Expected behavior; Initialize a seed sequence for use with `std::mt19937` (`TRandom3` should suffice? But that doesn't give the whole seed vector). ### To Reproduce; Input the above line by line into interpreter. Also note that writing `_seed` to see a pointer or content on the last line will also crash the interpreter. . ### Setup; ROOT 32 bit 6.26; Windows (Not yet tested on linux).; Binary install. ### Additional context; Should be sufficient here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10386:496,variab,variables,496,https://root.cern,https://github.com/root-project/root/issues/10386,1,['variab'],['variables']
Modifiability,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631:904,variab,variable,904,https://root.cern,https://github.com/root-project/root/issues/12631,1,['variab'],['variable']
Modifiability,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:324,config,config,324,https://root.cern,https://github.com/root-project/root/issues/8890,1,['config'],['config']
Modifiability,"### Describe the bug; `cmake -Dasan=ON` uses `add_compile_options` to add `-fsanitize=address` for all C++ files. This does not affect externally pulled in dependencies, in particular Clad. ### Expected behavior; The option should result in a build where *all* components are built with Address Sanitizer. ### To Reproduce; Configure with `-Dasan=ON` and notice that ASan reports a `use-after-poison` when only starting `./bin/root.exe`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968:324,Config,Configure,324,https://root.cern,https://github.com/root-project/root/issues/7968,1,['Config'],['Configure']
Modifiability,### Encountered problem; Snapshoting the RDataFrame with friend trees does not store variables of the friends.; This is very unfortunate for skimming multiple friend trees if the skimming time consuming and running it only once and storing results would help. ### Feature that could help; Automatically store friend trees / variables into the output file. ### Current workaround; Defining all branches explicitly in the Snapshot argument is very clumsy. ### Additional context; This was briefly discussed on the forum [here](https://root-forum.cern.ch/t/snapshot-friend-trees-after-filtering/43507),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7181:85,variab,variables,85,https://root.cern,https://github.com/root-project/root/issues/7181,2,['variab'],['variables']
Modifiability,"### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationAppli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:301,variab,variables,301,https://root.cern,https://github.com/root-project/root/issues/9115,2,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15077:1045,variab,variable,1045,https://root.cern,https://github.com/root-project/root/issues/15077,1,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13886:70,config,configuration,70,https://root.cern,https://github.com/root-project/root/issues/13886,3,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved and how. Taking as an example; ![image](https://github.com/root-project/root/assets/15638895/8fe5f2bc-0fee-4290-9487-7ff78eeee57a). From https://github.com/root-project/root/actions/runs/9201095928/job/25318040512 . The label of the build says the build type should be debug and it should have the LLVM assertions enabled, but the configuration of the nightly job doesn't have either. One of the two should be fixed to reflect the other. ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=Release ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=off"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=off"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=on"" ""-Dgdml=on"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=on"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:379,config,configuration,379,https://root.cern,https://github.com/root-project/root/issues/15615,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved and how. The RNTupleParallelWriter should be extended to allow to fix the logical order of clusters written to disk. This would allow to better align parallel writing with, e.g., lumi blocks. The physical on-disk order of clusters written by the parallel writer will still be arbitrary, but the meta-data can link them to another, logical order. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16326:93,extend,extended,93,https://root.cern,https://github.com/root-project/root/issues/16326,1,['extend'],['extended']
Modifiability,"### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15933:259,variab,variable,259,https://root.cern,https://github.com/root-project/root/issues/15933,1,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. The function `TMetaUtils::GetCppName` returns a mangled version of the C++ symbol that can be used in C++ as a variable name. It replaces in a string all the characters that are invalid in a C++ variable name by some mangled version.; The core of the code is this switch:; ```; switch(c) {; case '+': repl = ""pL""; break;; case '-': repl = ""mI""; break;; case '*': repl = ""mU""; break;; case '/': repl = ""dI""; break;; case '&': repl = ""aN""; break;; case '%': repl = ""pE""; break;; case '|': repl = ""oR""; break;; case '^': repl = ""hA""; break;; case '>': repl = ""gR""; break;; case '<': repl = ""lE""; break;; case '=': repl = ""eQ""; break;; case '~': repl = ""wA""; break;; case '.': repl = ""dO""; break;; case '(': repl = ""oP""; break;; case ')': repl = ""cP""; break;; case '[': repl = ""oB""; break;; case ']': repl = ""cB""; break;; case '!': repl = ""nO""; break;; case ',': repl = ""cO""; break;; case '$': repl = ""dA""; break;; case ' ': repl = ""sP""; break;; case ':': repl = ""cL""; break;; case '""': repl = ""dQ""; break;; case '@': repl = ""aT""; break;; case '\'': repl = ""sQ""; break;; case '\\': repl = ""fI""; break;; }; ```. Seems to me a few characters are missing in that switch ie: # ? {} ` ;; I found this while working on this PR: https://github.com/root-project/root/pull/15377#pullrequestreview-2029558913. Sorry if I am wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15384:168,variab,variable,168,https://root.cern,https://github.com/root-project/root/issues/15384,2,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15285:854,layers,layers,854,https://root.cern,https://github.com/root-project/root/issues/15285,1,['layers'],['layers']
Modifiability,"### Explain what you would like to see improved. Documentation. . I am having to spend way too much time trying to figure out what basic stuff is. Eg. a TTree is apparently a list of ""independent columns"" but so far looks to me very much like it is the equivalent of a table used to back a higher level representation of table in which case the columns are not independent - they would be related (unless ""independent columns"" is being used to mean statistically independent variables). And I came across ""event"" in code comments which sounds very like ""event"" is a ""row"" of data which'd make sense from a Cern perspective but is ambiguous/meaningless/confusing to a newbie. ### share how it could be improved. A Glossary with ROOT term equivalents in other frames of reference. Eg. Event ~ row ~ tuple ~ observation (assuming I guessed correctly). TTRee ~ RDataFrame/TDataFrame ~ dataset ~ Table ~ 1 or 2 dimensional Array or Tensor ~ a grid of data with one row per event/observation/record.; TBranch ~ column of data in a grid or table of data; TLeaf ~ element ~ cell - a single observation of single variable. And where these are not correct list the differences between them to clarify what they actually are. Without a clear and precise understanding of what the terms mean you are never sure about what you are doing. ----------------------------------------------------------; Some (more) high level notes on how the framework works would be very useful at the start of the primer or comments in the code to explain ""magic"" when it happens - I was scratching my head as to how one particular object knew to use another when no relationship appeared in the code anywhere;; ```. // The canvas on which we'll draw the graph; auto mycanvas = new TCanvas();. // lots of code like... // Draw the graph !; graph.DrawClone(""APE"");. // but no mention of mycanvas again until... . mycanvas->Print(""graph_with_law.pdf"");; ```. which raises all sorts of questions ( as it is not obvious what is going on )",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11967:475,variab,variables,475,https://root.cern,https://github.com/root-project/root/issues/11967,1,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved. I have a `c++` class with several constructors:. MyClass(const std::string& configfilename);; MyClass(const MyClass& other);. I have python bindings for this class that were generated with `cppyy`. Now, I have a piece of python code that instantiates my class, with a nice `try`-`except` block:. try:; obj = MyClass(args.config); except ConfigFileNotFoundError:; print(""config file ""+args.config+"" was not found!""); exit(0). Now, to test, I'm executing this with a wrong config file. But what I get is roughly this:. TypeError: none of the 2 overloaded methods succeeded. Full details:; MyClass(const std::string&) => ConfigFileNotFoundError; MyClass::MyClass(const MyClass&) => TypeError. So I'm wondering:; Since `cppyy` seems to handle function overloading with a `try`/`except` block, is there any reasonable way to do error handling for such applications? . I'd love to actually get the `ConfigFileNotFoundError` to handle it properly, rather than getting this `TypeError`. . I've started to look into using `__overload__`, but this seems less than elegant. Also, I was unable to figure out how to ask `__overload__` for the accepted signatures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9909:125,config,configfilename,125,https://root.cern,https://github.com/root-project/root/issues/9909,8,"['Config', 'config']","['ConfigFileNotFoundError', 'config', 'configfilename']"
Modifiability,"### Explain what you would like to see improved. Right now, the HS3 implementation of importing a HistFactory model contains somewhat of a re-implementation of HistFactory itself in so far as the creation of the RooFit objects (constraint terms, ProdPdfs, ...) is manual.; This constitutes somewhat of a code duplication with the actual implementation of HistFactory.; It might be worthwhile to rewrite this function completely to instead of building the RooFit objects directly, instead build a HistFactory model and then invoke HistToWorkspaceFactory(Fast) on it. However, this would probably need some major refactoring of HistFactory itself, since one would need to circumvent the need of HistFactory to store everything in a temporary file, and also probably require adding a method that works like HistToWorkspaceFactory, but only on a single channel. Hence, this improvement constitutes a significant chunk of work, the only possible payoff being reduced maintenance in the future. ; I leave it to the RooFit dev's to decide if this makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12368:395,rewrite,rewrite,395,https://root.cern,https://github.com/root-project/root/issues/12368,2,"['refactor', 'rewrite']","['refactoring', 'rewrite']"
Modifiability,"### Explain what you would like to see improved. `RBrowser` looks nice, but I can't find various configuration options:; - The server mode I requested and was implemented.; - How to choose the browser?; - How to choose default browser (e.g. in .rootrc)?; - Safari is not listed as supported but seems to work mostly fine (will open a separate ticket on that). . ### To Reproduce; 1. Go to https://root.cern/doc/master/classROOT_1_1Experimental_1_1RBrowser.html; 2. There is basically no documentation besides reference.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10259:97,config,configuration,97,https://root.cern,https://github.com/root-project/root/issues/10259,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Consider the following source directory:. ```cpp; // TwoInts.hpp; #pragma once. class TwoInts {; int _a;; int _b;. public:; TwoInts() {}; TwoInts(int a, int b) : _a(a), _b(b) {}; int GetA() const;; int GetB() const;; TwoInts& SetA(int a);; TwoInts& SetB(int b);; };; ```. ```cpp; // TwoInts.cpp; #include ""twoints.hpp"". int TwoInts::GetA() const { return _a; }; int TwoInts::GetB() const { return _b; }; TwoInts& TwoInts::SetA(int a) { _a = a; return *this; }; TwoInts& TwoInts::SetB(int b) { _b = b; return *this; }; ```. ```cpp; // readwrite_twoints.cpp; // compile with e.g.:; // g++ -o readwrite_twoints readwrite_twoints.cpp $(root-config --libs --cflags) twoints.cpp twoints_dict.cpp. #include ""TFile.h""; #include ""twoints.hpp""; #include <iostream>. int main() {; {; // write the `ti` object to an output file; TwoInts ti(1, 2);; TFile out_f(""f.root"", ""recreate"");; out_f.WriteObjectAny(&ti, ""TwoInts"", ""ti"");; std::cout << ""Written TwoInts("" << ti.GetA() << "", "" << ti.GetB() << "")\n"";; }. // read back the `ti` object from the file; TFile in_f(""f.root"");; auto *tiptr = in_f.Get<TwoInts>(""ti"");; std::cout << ""Read TwoInts("" << tiptr->GetA() << "", "" << tiptr->GetB() << "")\n"";. return 0;; }; ```. ```cpp; #ifdef __CLING__; #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ nestedclasses;; #pragma link C++ class TwoInts;. #endif // __CLING__; ```. ```cmake; # CMakeLists.txt; cmake_minimum_required(VERSION 3.9); project (readwrite_twoints CXX). find_package(ROOT REQUIRED COMPONENTS RIO). ROOT_GENERATE_DICTIONARY(twoints_dict twoints.hpp LINKDEF LinkDef.h). add_executable(readwrite_twoints readwrite_twoints.cpp twoints.cpp twoints_dict.cxx); target_link_libraries(readwrite_twoints ROOT::RIO). # These lines should not be necessary:; configure_file(twoints.hpp twoints.hpp COPYONLY) # This is necessary for out-of-so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308:748,config,config,748,https://root.cern,https://github.com/root-project/root/issues/8308,1,['config'],['config']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709:216,variab,variable,216,https://root.cern,https://github.com/root-project/root/issues/7709,2,['variab'],['variable']
Modifiability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. From Andrea Rizzi: currently `df.Display()` only shows the first and last elements of collection columns. It would be more helpful/intuitive if all elements were listed, at least up to a reasonable collection length. Example of the current output:. ```; y | x | w | z | ; 100 | 1 | 1.8000000 | { 1.1000000, 2.1000000 } | ; | ... | | ... | ; | 4 | | { 3.1000000, 4.1000000 } | ; 10000 | 5 | 3.2400000 | { 4.5100000, 5.5100000 } | ; | ... | | ... | ; | 8 | | { 6.5100000, 7.5100000 } | ; 1000000 | 9 | 5.8320000 | { 8.2610000, 9.2610000 } | ; | ... | | ... | ; | 12 | | { 10.261000, 11.261000 } | ; 100000000 | 13 | 10.497600 | { 12.387100, 13.387100 } | ; | ... | | ... | ; | 16 | | { 14.387100, 15.387100 } | ; 10000000000 | 17 | 18.895680 | { 16.925810, 17.925810 } | ; | ... | | ... | ; | 20 | | { 18.925810, 19.925810 } | ; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ```python; $ python $(root-config --tutdir)/dataframe/df024_Display.py; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6981:1242,config,config,1242,https://root.cern,https://github.com/root-project/root/issues/6981,1,['config'],['config']
Modifiability,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:766,config,configurable,766,https://root.cern,https://github.com/root-project/root/issues/8950,2,"['config', 'variab']","['configurable', 'variables']"
Modifiability,"### Explain what you would like to see improved; I daily use QtCreator in my ROOT-based projects, and it would be great if there would be a config-flag to build ROOT with the `GENERATE_QHP` enabled in the doxygen file. https://github.com/root-project/root/blob/master/documentation/doxygen/Doxyfile#L1514. This way, one can consult the Doxygen documentation directly within QtCreator, no need to use a web browser, which is also great if you don't have internet connection.; See e.g. https://bugreports.qt.io/secure/attachment/48119/Added_doxygen_doc_2.PNG. ### Optional: share how it could be improved; cmake config flag, or automatically detect if qhelpgenerator is found as done in llvm; https://github.com/root-project/root/search?q=qhelpgenerator. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781:140,config,config-flag,140,https://root.cern,https://github.com/root-project/root/issues/8781,2,['config'],"['config', 'config-flag']"
Modifiability,"### Explain what you would like to see improved; I've been working (with couet and others) on reducing errors in the Doxygen documentation of the code, from 10k+ to a manageable level of under 1k (and going down). However, currently, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:717,config,configured,717,https://root.cern,https://github.com/root-project/root/issues/9953,1,['config'],['configured']
Modifiability,"### Explain what you would like to see improved; In TGCommandLinePlugin, pressing tab shows a list of options. It would be nice that, if there is only one option, it gets automatically 'pasted' into the text entry. ### Optional: share how it could be improved; Parse and copy the content of the suggested code to the current text entry. (Removing the #Double_t stuff). ### To Reproduce; 1. On the plugin, type TMath::QuietN and press tab.; 2. [#Double_t#]QuietNaN() is suggested as single option.; 3. Ideally, the text entry would be now: TMath::QuietNaN() as it happens in a normal ROOT Terminal for the analogous case. ### Setup; ROOT 6.25/01",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8127:397,plugin,plugin,397,https://root.cern,https://github.com/root-project/root/issues/8127,1,['plugin'],['plugin']
Modifiability,### Explain what you would like to see improved; In `builtins/xrootd/CMakeLists.txt` we don't pass any openssl configuration over to Xrootd. This causes inconsistent builds for ROOT and xrootd. ### Optional: share how it could be improved; Maybe use; ```; OPENSSL_CRYPTO_LIBRARY; OPENSSL_SSL_LIBRARY; OPENSSL_INCLUDE_DIR; ```; as made available with Xrootd's `CMakeLists.txt`. . ### To Reproduce; See https://root-forum.cern.ch/t/building-from-source-root-v6-26-00-failing-with-openssl-on-macos-monterey/49078,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10075:111,config,configuration,111,https://root.cern,https://github.com/root-project/root/issues/10075,1,['config'],['configuration']
Modifiability,"### Explain what you would like to see improved; Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved; PR #7899 should be enough to fix this. ### To Reproduce; ```python; import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; Typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7900:140,variab,variables,140,https://root.cern,https://github.com/root-project/root/issues/7900,1,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved; ROOT is configured to look for a bunch of configuration files in your ""Home"" directory, e.g. hidden files .rootrc, rootlogon.C, root aliases, etc. This is the traditional way things were programmed, but now many programs (KiCad, Qt, ...) have been moving towards using the more consensus ""configuration"" folders, e.g. .config/root in order not to pollute your HOME directory with tenths of files, one for each program you use. ### Optional: share how it could be improved; For ROOT7, move things gradually to use ""configuration"" folders. I understand that this is though quite low priority :). Some solutions out there that take care of the multiple naming of config folders depending on your OS:; - https://github.com/Malvineous/cfgpath; - https://doc.qt.io/qt-5/qsettings.html#platform-specific-notes; - https://docs.kicad.org/doxygen/classSETTINGS__MANAGER.html#a5e93287a5efd1e9517c1ddcd2f23bb9a. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10148:57,config,configured,57,https://root.cern,https://github.com/root-project/root/issues/10148,6,['config'],"['config', 'configuration', 'configured']"
Modifiability,"### Explain what you would like to see improved; ROOT migrated some time ago from Makefile to CMakeLists, but there are a couple of places where there are still some legacy Makefiles, check https://github.com/root-project/root/find/master:. ```; test/Makefile; etc/Makefile.arch; config/Makefile.in; test/Makefile.win32; test/rhtml/Makefile; test/RootIDE/Makefile; test/periodic/Makefile; config/Makefile-comp.in; tutorials/tmva/makefile; test/RootShower/Makefile; test/histviewer/Makefile; test/rhtml/Makefile.win32; gui/fitpanel/test/Makefile; math/smatrix/test/Makefile; proof/doc/confman/Makefile; test/RootIDE/Makefile.win32; math/genvector/test/Makefile; test/ProofBench/Makefile_event; test/RootShower/Makefile.win32; math/mathcore/test/fit/Makefile; test/dt_Makefile; core/textinput/src/textinput/Makefile; documentation/*/Makefile; graf2d/asimage/src/libAfterImage/Makefile.in; graf2d/asimage/src/libAfterImage/configure.in; ```. ### Optional: share how it could be improved; It could be done all via CMakeLists to be more homogeneous. This allows easier overview from IDEs like QtCreator that show the whole CMake subdirectories and subprojects. Moreover, it also allows to pass correctly or more easily the CMAKE_CXX_STANDARD to subprojects. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; https://github.com/root-project/root/issues/8125#issuecomment-841519742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9090:280,config,config,280,https://root.cern,https://github.com/root-project/root/issues/9090,3,['config'],"['config', 'configure']"
Modifiability,"### Explain what you would like to see improved; Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information; - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved; Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages; - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:230,variab,variables,230,https://root.cern,https://github.com/root-project/root/issues/10191,2,['variab'],['variables']
Modifiability,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:1287,Inherit,InheritsFrom,1287,https://root.cern,https://github.com/root-project/root/issues/7180,1,['Inherit'],['InheritsFrom']
Modifiability,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8269:852,Inherit,InheritsFrom,852,https://root.cern,https://github.com/root-project/root/issues/8269,1,['Inherit'],['InheritsFrom']
Modifiability,"### Explain what you would like to see improved; The TThread HTML documentation speaks about having to compile with special ./configure flags, see. https://github.com/root-project/root/blob/f8efb11a51cbe5b5152ebef19a4f7b78744ca2fa/documentation/users-guide/Threads.md. ### Optional: share how it could be improved; Change it to the corresponding CMake flags, or clarify if it is still needed. ### To Reproduce; Open https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html and check the ""Installation section""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216:126,config,configure,126,https://root.cern,https://github.com/root-project/root/issues/7216,1,['config'],['configure']
Modifiability,"### Explain what you would like to see improved; There is a class for multidimensional integration, [IntegratorMultiDim](https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html).; From that it's very hard to understand how to use that (in particular, what function should be passed to that and how). . ### Optional: share how it could be improved; Please add examples how to use that. ; In its class description and probably to tutorials (they don't contain any code with that class). ### Additional context; There was a [discussion on the ROOT Forum](https://root-forum.cern.ch/t/multi-dimensional-adaptive-integration/7663/3) with a ready good example. It was promised that people are working on the documentation, but it seems to be forgotten since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740:617,adapt,adaptive-integration,617,https://root.cern,https://github.com/root-project/root/issues/7740,1,['adapt'],['adaptive-integration']
Modifiability,"### Explain what you would like to see improved; When running:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h"". using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / bin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:464,Extend,Extended,464,https://root.cern,https://github.com/root-project/root/issues/9489,2,['Extend'],['Extended']
Modifiability,"### Explain what you would like to see improved; grep on the source code still shows many places where CINT is mentioned. ### Optional: share how it could be improved; Change to equivalent variables in Cling, or remove if no longer needed. For example:. `__CINT__` --> `__CLING__`. ### To Reproduce; grep -r CINT root-src. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10058:189,variab,variables,189,https://root.cern,https://github.com/root-project/root/issues/10058,1,['variab'],['variables']
Modifiability,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16741:128,variab,variables,128,https://root.cern,https://github.com/root-project/root/issues/16741,2,['variab'],['variables']
Modifiability,"### Feature description. From https://its.cern.ch/jira/browse/ROOT-11018. It's currently possible to set symmetric axis by calling SetRangeUser with appropriate bounds.; It would be nice to be able to require the axis to be always drawn symmetrically so it gets calculated automatically (so whatever data is drawn/added the automatic axis is symmetric). I think most of the time it would be around 0 (for example when doing a residual plot), but that could be a configurable number.; This could be a canvas (like the Log axis) or an axis (like SetRangeUser) property, not sure what would be easier.; PS: One of the use cases where I do this often is when I have a COLZ TH2D plot with a palette like kTemperatureMap and want to make sure the 0 is at the ""white"" region. [symmetric_v2.patch](https://github.com/root-project/root/files/14157702/symmetric_v2.patch); [symmetric.patch](https://github.com/root-project/root/files/14157703/symmetric.patch). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14543:462,config,configurable,462,https://root.cern,https://github.com/root-project/root/issues/14543,1,['config'],['configurable']
Modifiability,"### Feature description. From https://its.cern.ch/jira/browse/ROOT-5105. Hi,. TTreeViewer has one cut variable (the pair of scissors). I have received a users request by robin.glattauer@oeaw.ac.at about being able to define more cuts, such that they can be compared more easily. Could this be implemented?. Cheers, Axel. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14563:102,variab,variable,102,https://root.cern,https://github.com/root-project/root/issues/14563,1,['variab'],['variable']
Modifiability,"### Feature description. It would be nice to have a command line wrapper around the `RNTupleImporter` interface, to improve usability and prevent having to type the boilerplate every time in the interpreter or a macro. Possible usage could be as follows:. ```sh; ttree2rntuple TTREE_NAME TTREE_PATH RNTUPLE_PATH [options]; ```; Options include setting the RNTuple name, max number of events to convert etc. (basically, every setter in the `RNTupleImporter` class). For the configuration that goes through `RNTupleWriteOptions`, an option could be to provide something along the lines of `--set-X=Y`, where `X` is the name of the option and `Y` the name of the value (e.g. `--set-compression=505`). `TTREE_NAME` could also be made optional, in which case all trees in `TTREE_PATH` are converted (in principle, the `RNTupleImporter` interface allows for this, I'm not sure if this can be nicely translated to a CLI). N.B. `ttree2rntuple` is (to me) an obvious naming candidate, other names are of course also possible. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13924:473,config,configuration,473,https://root.cern,https://github.com/root-project/root/issues/13924,1,['config'],['configuration']
Modifiability,"### Feature description. The legacy backend classes, inheriting from, `RooAbsTestStatistic`, implement the `RooAbsReal::setData` method that allows for datasets to be swapped over in a test statistic function without having to reconstruct the test statistic. To support the new backend, in xRooFit I am having to destroy and recreate the test statistics (NLL function) each time I change the dataset. I dont know if this introduces an unnecessary overhead or not, but I'd be interested to know if implementing the `setData` method with the new classes could be easily implemented or not?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15763:53,inherit,inheriting,53,https://root.cern,https://github.com/root-project/root/issues/15763,1,['inherit'],['inheriting']
Modifiability,"### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: ; ```cpp; //...; .Define(""particle"", [](event_recordT& e){...}, {""event_record""}); .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}); .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}); //...; ```; , but it would be great if I could do something like ; ```cpp; //...; .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ); //...; ```; with an overload of Define that looks like:; `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14147:177,variab,variables,177,https://root.cern,https://github.com/root-project/root/issues/14147,4,['variab'],['variables']
Modifiability,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7614:184,variab,variable,184,https://root.cern,https://github.com/root-project/root/issues/7614,2,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:621,variab,variable,621,https://root.cern,https://github.com/root-project/root/issues/7361,1,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Getting the derivative of a TF1 is not that simple. It's a common thing so it should be simple. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; At the moment it's not that simple to get the derivative of a TF1. There is a method to determine the derivative at a point but it would be nice if you could; - get the derivative of the whole function; - get the derivative with respect to any variable (d/dx, d/dy, d/dz ...) not just x.; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->; I read that there is a Derivator but it doesn't seem that easy to use. If a TF1 derivative method is not added, maybe the Derivator docs could be improved/tutorials made. REASONING:. There are a lot of cool math functions that I would like to add and they rely on partial derivatives with respect to different variables and at the moment they are near impossible to make.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8735:638,variab,variable,638,https://root.cern,https://github.com/root-project/root/issues/8735,2,['variab'],"['variable', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->. Rather often for minimisation in `RooFit`, using `RooAbsPDf::fitTo`, for complicated functions a maximal number of calls is reached. Since there is no direct war to access this parameter of `RooMinimiser` from `RooAbsPDf::fitTo`,; for such cases I need to switch from `RooAbsPdf::fitTo` to a manual creation of `RooMinimiser` object, ; configure it and use it to minimize (manually created) NLL. . ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->. It will be very good to have a dedicated option(`RooCmdArg`) to `RooAbsPdf::fitTo` function that allows to redefine the default number of calls, such that one can use it together with other options, e.g. . ```; dataset = ...; pdf = ...; result = pdf.FitTo ( dataset , ROOT.RooFit.Save() , ROOT.RooFit.MaxCalls( 10000 ) , ... ); ```; ; ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. The standard way that I use , is in case `RooAbsPdf::fitTo` reaches maximal number of calls, switch ; to manual creation and configuration of `RooMinimiser`, manual creation of NLL and edssentially bypass very nice and convinient `RooAbsPdf::fitTo` interface. . ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11875:522,config,configure,522,https://root.cern,https://github.com/root-project/root/issues/11875,2,['config'],"['configuration', 'configure']"
Modifiability,"### Is your feature request related to a problem? Please describe.; Compiled libraries of a ROOT macro often end up in the same folder, taking some extra space, and I remove then later by hand to avoid polluting too much source code directories. It makes also files in a folder with many scripts, harder to found, as two of every three is 'dummy' (.so, .d). ### Describe the solution you'd like; It would be nice to have an option or flag 't' in [TSystem::CompileMacro](https://root.cern/doc/master/classTSystem.html#ac557d8f24d067a9b89d2b8fb261d7e18) that automatically:; - Outputs the compiled macro to the default temp directory using [std::temp_directory_path](https://en.cppreference.com/w/cpp/filesystem/temp_directory_path); - It gives this file a hash-generated filename that is path-specific, to avoid that two macros called the same way overwrite each other.; ; The easiest way for this would be to remove all slashes from the full filename and transforms it to underscores. For example: ; `root -l my/full/path/to/folder/my_macro.C+t`; should give:; `/tmp/my_full_path_to_folder_my_macro.C_so`. Or alternatively, if a new flag is not wanted, that this could be specified via the rootrc. Also, if /tmp/ is not wanted, it could maybe be instead a user-config directory (https://github.com/root-project/root/issues/10148). ### Describe alternatives you've considered; Using; `gSystem->SetBuildDir(""/tmp/"");`; in my `rootlogon.C`.; But this does not solve the overwrite problem. ### Additional context; https://root.cern/doc/master/classTSystem.html#ae8790897e77f60ff37876b944f9f0091",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10147:1261,config,config,1261,https://root.cern,https://github.com/root-project/root/issues/10147,1,['config'],['config']
Modifiability,"### Is your feature request related to a problem? Please describe.; I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example; ```cxx; truth = df.Filter(has_truth, ...).; Define(""truth_computation"", expensive_computation_truth, ...);; reco = df.Filter(has_reco, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; ```; I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like; Ideally, one could then write something like; ```cxx; both = ROOT::RDF::Intersection(truth, reco);; both.Histo2D(..., {""truth_computation"", ""reco_computation""});; ```; Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered; I can calculate both quantities in the beginning; ```cxx; pre = df.Filter(has_truth || has_reco, ...).; Define(""truth_computation"", expensive_computation_truth, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; truth = pre.Filter(has_truth, ...);; reco = pre.Filter(has_reco, ...);; both = reco.Filter(has_truth, ...);; ```; but this will; 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive; 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10620:177,variab,variables,177,https://root.cern,https://github.com/root-project/root/issues/10620,1,['variab'],['variables']
Modifiability,"### Is your feature request related to a problem? Please describe.; I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:344,variab,variable,344,https://root.cern,https://github.com/root-project/root/issues/7880,2,['variab'],"['variable', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517:212,variab,variable-in-root-files,212,https://root.cern,https://github.com/root-project/root/issues/8517,1,['variab'],['variable-in-root-files']
Modifiability,"### Is your feature request related to a problem? Please describe.; If I want to read data from a webDav/http endpoint using an oidc token, I'd need to be able to pass the token somehow in ROOT to the Davix client wrapper. Possibly through env variable and rootrc. ### Describe the solution you'd like; Make the Davix client wrapper able to take the token from env variable and rootrc. ### Additional context; Preparatory for future WLCG (and not only) authN/Z model.; I was thinking to something like this as a required change, but, of course, I'd need more feedback: https://github.com/root-project/root/compare/master...dciangot:davix_bearer_token?expand=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:244,variab,variable,244,https://root.cern,https://github.com/root-project/root/issues/6802,2,['variab'],['variable']
Modifiability,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11295:174,variab,variables,174,https://root.cern,https://github.com/root-project/root/issues/11295,8,['variab'],"['variable', 'variableexplorer', 'variables']"
Modifiability,"### Is your feature request related to a problem? Please describe.; When I code contributions for ROOT within QtCreator, I have to manually edit the format to match the one required by ROOT (braces, indents, etc.). ### Describe the solution you'd like; A config file like this one would be perfect, as it would automatically format those things.; https://github.com/drewnoakes/settings/blob/master/qt-creator-code-style.xml. This file could be posted in this webpage below the clang and astyle config files.; https://root.cern/contribute/coding_conventions/. ### Describe alternatives you've considered; clang, astyle. ### Additional context; https://stackoverflow.com/a/59384396/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8797:255,config,config,255,https://root.cern,https://github.com/root-project/root/issues/8797,2,['config'],['config']
Modifiability,"### Is your feature request related to a problem? Please describe.; When TMVA training is run with k-fold cross validation, the variable importances (both method unspecific and method specific) are not printed out by TMVA. ### Describe the solution you'd like; It would be nice if TMVA could print out the variable importances for each fold, as evaluated on the training set for that fold. ### Additional context; I see this issue with ROOT 6.22.06 on lxplus, run by invoking . ```source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.06/x86_64-centos7-gcc48-opt/bin/thisroot.sh```. I have tried training both with and without ```FoldFileOutput=True``` in the CrossValidation constructor, and don't see the variable importances in either.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092:128,variab,variable,128,https://root.cern,https://github.com/root-project/root/issues/7092,3,['variab'],['variable']
Modifiability,"### This Pull request:. Hi @guitargeek , the class `RooPolyFunc` is introduced with this pull request. This class allow to form multi-variable polynomials of arbitrary number of variables. . The class also allows for RooFit functions to be Taylor expanded as a function of the dependent variables. This is provided by static functions which return the Taylor expanded function as a `RooPolyFunc`. ## Checklist:. - [x] tested changes locally; - [x] added tutorials; - [x] added unit test; - [ ] analytical integral",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184:134,variab,variable,134,https://root.cern,https://github.com/root-project/root/pull/9184,3,['variab'],"['variable', 'variables']"
Modifiability,"### This Pull request:; ; Hi @guitargeek, this PR is just to refactor the simple class in; RooLagrangianMorphFunc::Config as a struct to keep it's usage apparent.; Let me know what you think !; ; #### Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9180:61,refactor,refactor,61,https://root.cern,https://github.com/root-project/root/pull/9180,2,"['Config', 'refactor']","['Config', 'refactor']"
Modifiability,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:736,config,config,736,https://root.cern,https://github.com/root-project/root/issues/7161,4,"['CONFIG', 'config']","['CONFIG', 'config', 'configure']"
Modifiability,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:77,variab,variables,77,https://root.cern,https://github.com/root-project/root/issues/10920,2,['variab'],"['variable', 'variables']"
Modifiability,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10967:405,rewrite,rewrite,405,https://root.cern,https://github.com/root-project/root/issues/10967,1,['rewrite'],['rewrite']
Modifiability,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1994,extend,extend,1994,https://root.cern,https://github.com/root-project/root/issues/11330,1,['extend'],['extend']
Modifiability,"#To do so one needs to pass -Dbuiltin_llvm=Off -Dbuiltin_clang=Off and the; PATH should contain the path to llvm-config. Note this is not enabling ROOT to work with vanilla clang!. This patch allows ROOT to be built against a prebuilt clang and llvm from; https://root.cern.ch/git/{llvm.git,clang.git}. It allows to reduce ROOT's; build times (in cases when cmake decides to rebuild the in-tree llvm for; no good reason). It moves the common denominator of different ROOT builds; in one place to save space. It also allows easy switch between LLVM in; debug and release mode. To build the external clang and llvm exactly in the same way as the; in-tree builds use:. CMAKE_FLAGS=""\; -DLLVM_ENABLE_WARNINGS=OFF \; -DLLVM_INCLUDE_TESTS=OFF \; -DCLANG_INCLUDE_TESTS=OFF \; -DLLVM_INCLUDE_EXAMPLES=OFF \; -DCLANG_BUILD_TOOLS=OFF \; -DCLANG_TOOL_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_CHECK_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_BUILD=OFF \; -DCLANG_TOOL_CLANG_FORMAT_VS_BUILD=OFF \; -DCLANG_TOOL_CLANG_FUZZER_BUILD=OFF \; -DCLANG_TOOL_CLANG_IMPORT_TEST_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DCLANG_TOOL_CLANG_RENAME_BUILD=OFF \; -DCLANG_TOOL_C_ARCMT_TEST_BUILD=OFF \; -DCLANG_TOOL_C_INDEX_TEST_BUILD=OFF \; -DCLANG_TOOL_DIAGTOOL_BUILD=OFF \; -DCLANG_TOOL_LIBCLANG_BUILD=OFF \; -DCLANG_TOOL_SCAN_BUILD_BUILD=OFF \; -DCLANG_TOOL_SCAN_VIEW_BUILD=OFF \; -DLLVM_BUILD_TOOLS=ON \; -DLLVM_TOOL_LLVM_AR_BUILD=OFF \; -DCLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD=OFF \; -DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON \; -DCLANG_ENABLE_STATIC_ANALYZER=OFF \; -DCLANG_ENABLE_ARCMT=OFF \; -DCLANG_ENABLE_FORMAT=OFF \; -DLLVM_TARGETS_TO_BUILD=host \; -DLLVM_ABI_BREAKING_CHECKS=FORCE_OFF \; -DLLVM_ENABLE_ABI_BREAKING_CHECKS=OFF \; -DCMAKE_INSTALL_PREFIX=.. \; -DCMAKE_BUILD_TYPE=Debug"". cmake ""$CMAKE_FLAGS"" ../../../sources/root-llvm/. EDIT: We actially need -DLLVM_BUILD_TOOLS=OFF to be ON to build the llvm-config binary. Fixed in the description of this PR but not in the commit message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1798:113,config,config,113,https://root.cern,https://github.com/root-project/root/pull/1798,2,['config'],['config']
Modifiability,"$[0, firstElementIndex-1]$. This ensures zero-initialized values for fields of any supported C++ type, including `std::variant<Ts...>` and collections such as `std::vector<T>`. ## Changes or fixes:; - Allow for including the index of the first element in a column in the column description. This introduces the column flag `kFlagDeferredColumn` which specifies that the column has no on-disk data for elements preceding the given element index.; - `RPageSink::UpdateSchema()` now takes an additional argument (firstEntry) that specifies the first entry that stores an on-disk value for the fields in the changeset. The entry index is translated to column element index by `EntryToColumnElementIndex()`.; - `RPage::MakePageZero()`: this function returns a page that is comprised of `0x00` bytes only.; - Introduce locator type `kTypePageZero`. This locator type represents unmaterialized (i.e., in-memory only) zero pages for deferred columns.; - Add `RPageRange::ExtendToFitColumnRange()`: this function extends a RPageRange to fit the given RColumnRange, i.e. prepend as many synthetic `RPageInfo`s as needed to cover the entire range. `RPageInfo`s are constructed to contain as many elements given a page size limit in bytes; the locator for the referenced pages is `kPageZero`.; This function is used to make up `RPageRange`s for clusters that contain deferred columns.; - Add `RClusterDescriptorBuilder::AddDeferredColumnRanges()`, which makes up `RColumnRange` and `RPageRange`s that make sense for deferred columns that are otherwise missing in a cluster.; - RPageStorageFile: add ability to populate the zero page from `kTypePageZero` locators.; - RVariantField: allow reading values with dispatch `tag == 0`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] RPageStorageDaos: populate the zero page from `kTypePageZero` locators. (for a follow-up PR?); - [x] Possible optimization: `UnsealPage()` should be a no-op for zero pages; this is to be handle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12676:1681,Extend,ExtendToFitColumnRange,1681,https://root.cern,https://github.com/root-project/root/pull/12676,2,"['Extend', 'extend']","['ExtendToFitColumnRange', 'extends']"
Modifiability,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57923,variab,variable,57923,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,") src/core/base/src/TApplication.cxx:1480:11; #21 0x7ffff771e385 in TApplication::ProcessLine(char const*, bool, int*) src/core/base/src/TApplication.cxx:1453:14; #22 0x7ffff7f8157a in TRint::ProcessLineNr(char const*, char const*, int*) src/core/rint/src/TRint.cxx:766:11; #23 0x7ffff7f802f0 in TRint::Run(bool) src/core/rint/src/TRint.cxx:424:22; #24 0x4ff96d in main src/main/src/rmain.cxx:30:12; #25 0x7ffff6e040b2 in __libc_start_main /build/glibc-YbNSs7/glibc-2.31/csu/../csu/libc-start.c:308:16; #26 0x41f35d in _start (asan/bin/root.exe+0x41f35d). Address 0x7ffff3afd82a is located in stack of thread T0 at offset 42 in frame; #0 0x7fffe99b3d8f in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) src/core/metacling/src/TCling.cxx:2456. This frame has 21 object(s):; [32, 56) 'sLine' (line 2462) <== Memory access at offset 42 is inside this variable; [96, 104) 'R__guard2471' (line 2471); [128, 136) 'R__guard2488' (line 2488); [160, 176) 'interpreterFlagsRAII' (line 2491); [192, 240) 'result' (line 2511); [272, 276) 'compRes' (line 2512); [288, 312) 'mod_line' (line 2517); [352, 376) 'aclicMode' (line 2518); [416, 440) 'arguments' (line 2519); [480, 504) 'io' (line 2520); [544, 568) 'fname' (line 2521); [608, 632) 'ref.tmp' (line 2547); [672, 696) 'ref.tmp145' (line 2547); [736, 768) 'code' (line 2555); [800, 832) 'codeline' (line 2556); [864, 1384) 'in' (line 2559); [1520, 1552) 'ref.tmp176' (line 2562); [1584, 1600) 'agg.tmp'; [1616, 1624) 'ref.tmp198' (line 2568); [1648, 1664) 'agg.tmp207'; [1680, 1696) 'autoParseRaii' (line 2588); HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork; (longjmp and C++ exceptions *are* supported); SUMMARY: AddressSanitizer: stack-use-after-return src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11 in cling::MetaLexer::Lex(cling::Token&); Shadow bytes around the buggy address:; 0x10007e757ab0: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; 0x10007e757ac0: f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:4705,variab,variable,4705,https://root.cern,https://github.com/root-project/root/pull/8041,1,['variab'],['variable']
Modifiability,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:2058,config,configured,2058,https://root.cern,https://github.com/root-project/root/issues/9036,1,['config'],['configured']
Modifiability,")::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':; CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaExprObjC.cpp.o): in function `applyCocoaAPICheck(clang::Sema&, clang::ObjCMessageExpr const*, unsigned int, bool (*)(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)) [clone .constprop.0]':; SemaExprObjC.cpp:(.text._ZL18applyCocoaAPICheckRN5clang4SemaEPKNS_15ObjCMessageExprEjPFbS4_RKNS_5NSAPIERNS_4edit6CommitEE.constprop.0+0x13c): undefined reference to `clang::edit::rewriteObjCRedundantCallWithLiteral(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaType.cpp.o): in function `clang::Sema::hasStructuralCompatLayout(clang::Decl*, clang::Decl*)':; SemaType.cpp:(.text._ZN5clang4Sema25hasStructuralCompatLayoutEPNS_4DeclES2_+0x15b): undefined reference to `clang::StructuralEquivalenceContext::IsEquivalent(clang::Decl*, clang::Decl*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAnalysis.a(AnalysisDeclContext.cpp.o): in function `clang::AnalysisDeclContext::getBody(bool&) const':; AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x117): undefined reference to `clang::BodyFarm::getBody(clang::ObjCMethodDecl const*)'; /usr/bin/ld: AnalysisDeclContext.cpp:(.text._ZNK5clang19AnalysisDeclContext7getBodyERb+0x148): undefined reference to `clang::BodyFarm::getBody(clang::FunctionDecl const*)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangAST.a(ASTImporter.cpp.o): in functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:6428,rewrite,rewriteObjCRedundantCallWithLiteral,6428,https://root.cern,https://github.com/root-project/root/issues/8487,1,['rewrite'],['rewriteObjCRedundantCallWithLiteral']
Modifiability,"); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__currentType = EmptyHeader.group(1). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in __transformOneGroup(self, firstLine); 226 if j != 0:; 227 processed_lines += 1; --> 228 self.iterLines.next(); 229 tmp_str += ""<tr>""; 230 if DatasetName or NumEvents or VariableMeanHeader:. AttributeError: 'range_iterator' object has no attribute 'next'; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version 6.22/02 (via conda); OS: Ubuntu 18.04.5 LTS; (see top of the post for conda environment files). Please let me know if I can provide any more useful information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:3334,Variab,VariableMeanHeader,3334,https://root.cern,https://github.com/root-project/root/issues/6657,1,['Variab'],['VariableMeanHeader']
Modifiability,* A pythonization of `RooAbsCollection::addOwned` is introduced to fix issue #8120. * The unit tests for the pythonization of `RooAbsCollection` were also extended to cover new developments from PR https://github.com/root-project/root/pull/8177. * A pythonization of `RooAbsCollection::operator()` is introduced as discussed in https://github.com/root-project/root/pull/8174.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8179:155,extend,extended,155,https://root.cern,https://github.com/root-project/root/pull/8179,1,['extend'],['extended']
Modifiability,"* Adapted from the physics analysis examples published with the 13 TeV; ATLAS Open Data release in 2020; * See http://opendata.atlas.cern/release/2020/documentation/physics/intro.html. Voila! Most likely the last tutorial I'll factor out of the ATLAS Open Data release. It's a nice one because it's very similar to the [W boson analysis](https://root.cern/doc/master/df105__WBosonAnalysis_8py.html), but in contrary heavily filters and looks for the rare production of a single top. We can run on 60GB (this one runs by default only on 5% of it), which makes it also a nice benchmark or example to test scaling with heavy filtering of the inital datasets. That's the result:. ![Screenshot from 2020-07-31 14-32-56](https://user-images.githubusercontent.com/6951222/89035448-40af8f80-d33b-11ea-976b-f2f03ea00c5c.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107:2,Adapt,Adapted,2,https://root.cern,https://github.com/root-project/root/pull/6107,1,['Adapt'],['Adapted']
Modifiability,"* Add a new `ExternalConstraints()` field to the model config, to be directly passed to `createNLL`. This follows exactly the same pattern as the fields for `GlobalObservables()` and `ProjectedObservables()`. * New `ModelConfig::createNLL()` and `fitTo()` functions, such that the user doesn't need to manually transfer the information from the ModelConfig to `RooAbsPdf::createNLL/fitTo()`. * Use the new `ModelConfig::createNLL()` in RooStats to give it a little bit of test coverage. FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12877:55,config,config,55,https://root.cern,https://github.com/root-project/root/pull/12877,1,['config'],['config']
Modifiability,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11123:23,variab,variable,23,https://root.cern,https://github.com/root-project/root/pull/11123,2,"['extend', 'variab']","['extending', 'variable']"
Modifiability,* Controlled error when step size is 0.; * Small enhancement when TSeq printed in cling (properly show when the; step is smaller than 0),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10407:49,enhance,enhancement,49,https://root.cern,https://github.com/root-project/root/pull/10407,1,['enhance'],['enhancement']
Modifiability,* Correctly configure layout properties for the TreeTable in RBrowser and RGeometryViewer; * Do not use row._bHasChildren field which is private and may be changed/removed in future ui5 versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4628:12,config,configure,12,https://root.cern,https://github.com/root-project/root/pull/4628,1,['config'],['configure']
Modifiability,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10923:26,config,config,26,https://root.cern,https://github.com/root-project/root/pull/10923,3,['config'],['config']
Modifiability,"* Fix unused variable warning in `TMPWorkerExecutor` by moving variable in the only code branch where it's actually used. * Fix some warnings about deprecated enum arithmetics by using `constexpr static int` instead of `enum`. * Fix warnings about the deprecation of `volatile` in C++ by not using it. With these changes, I can compile RooFit again without seeing warnings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12682:13,variab,variable,13,https://root.cern,https://github.com/root-project/root/pull/12682,2,['variab'],['variable']
Modifiability,"* Fixing inheritance of C++ classes in Python and callbacks to C++ with; object created in Python; * See upstream issue https://bitbucket.org/wlav/cppyy/issues/229/issue-with-python-class-that-derives-from; * Ports following commits of cppyy-backend: 4670bcf0d82d2f1650f739115576a884f51340f6; * Ports following commits of CPyCppyy:; 9d0eca19281a0f38c9cd80628279f1c76f5fe71c,; 398347bd01b693d0f4e7d2c6cef5c9d30adba2b5, 96de8a868b214eeb4be0f4be4914224ba7de6805",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5587:9,inherit,inheritance,9,https://root.cern,https://github.com/root-project/root/pull/5587,1,['inherit'],['inheritance']
Modifiability,* I have refactored the existing methodDL tests to support testing various optimizers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379:9,refactor,refactored,9,https://root.cern,https://github.com/root-project/root/pull/2379,1,['refactor'],['refactored']
Modifiability,* Protect the axes with labels from being extended by `FindBin` when filling the histogram projected from TH2 and TH3; * Transfer the axes' attributes and labels when creating a profile from TH2 and TH3. This PR resolves #6658,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14712:42,extend,extended,42,https://root.cern,https://github.com/root-project/root/pull/14712,1,['extend'],['extended']
Modifiability,"* Refactor the original HistFactory code such that pieces can be reused in the HS3 JSON IO implementation; * Fix problems with ""reverse engineering"" the name of the `ShapeSys` systematics from the ParamHistFunc name; * The `testHistFactory` unit test now validates full JSON roundtripping closure of workspaces with `ShapeSys`, both with Gaussian and Poisson constraints. More details in the commit descriptions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13572:2,Refactor,Refactor,2,https://root.cern,https://github.com/root-project/root/pull/13572,1,['Refactor'],['Refactor']
Modifiability,* Remove ROOT.ROOT calls in the Python tutorials; * Use rdfentry_ instead of tdfentry_; * Use df for variables instead of tdf. @etejedor Fine by you? The tutorials will now break with the old PyROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5189:101,variab,variables,101,https://root.cern,https://github.com/root-project/root/pull/5189,1,['variab'],['variables']
Modifiability,* Remove man pages for non-existing binaries; They might have existed in the past: g2rootold genmap proofserva roota. * Install generated man pages in the correct subdirectory (man/man1). * Use the correct library name in the plugin definitions. * Remove obsolete plugin definition; libPeac was removed in version 5.34.01. * Simplify rule; No need to exclude files that no longer exists. * TWebVirtualX was removed - remove plugin definition using it; See commit a07af0afbe2e26237bf8ca059abc34255378a070. * Don't download input file if it already exists; This allows running the tests with pre-fetched file in environments without network - like e.g. the Fedora package build server. * Python 3 compatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4026:226,plugin,plugin,226,https://root.cern,https://github.com/root-project/root/pull/4026,3,['plugin'],['plugin']
Modifiability,* Remove unnecessary alias for `ABC` in Python 2; * Remove spurious `from __future__ import print_function`; * Place creation of `logger` variable after import statements in `Proxy.py`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9938:138,variab,variable,138,https://root.cern,https://github.com/root-project/root/pull/9938,1,['variab'],['variable']
Modifiability,* Rename DeclareCppCallable to Numba.Declare; * Remove generic backend; * Rename and adapt test accordingly; * Add support for RVecs in callables jitted with numba; * Add tutorial. ~We desperately need numba on the PR build nodes!~ Taken care of!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5310:85,adapt,adapt,85,https://root.cern,https://github.com/root-project/root/pull/5310,1,['adapt'],['adapt']
Modifiability,"* Since the `RooAbsMinimizeFcn` implementations don't need to be copied; anymore, we can use `std::unique_ptr` instead of `shared_ptr` for; clear ownership and less overhead. * Name variables to be consistent with RooFit style. * Streamline `public` and `private` scopes. * Avoid code duplication with new private member function that applies a; specific call to both the regular likelihood and the likelihood in the; gradient. * Additional commit fixes memory leaks of toy datasets in `TestStatistics` tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12361:182,variab,variables,182,https://root.cern,https://github.com/root-project/root/pull/12361,1,['variab'],['variables']
Modifiability,* This commit allows the compiler to potentially; inline/optimize construction of TObjects; * This is in particular important for data-objects; which are created billions of times and which inherit from; TObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/482:190,inherit,inherit,190,https://root.cern,https://github.com/root-project/root/pull/482,1,['inherit'],['inherit']
Modifiability,"* Use only **Browsable::Provider** class for all factory methods; * Split ROOT6 and ROOT7 drawing plugins; * Rename RBrowsable -> RBrowserData to avoid confusion; * Fix Windows compiler error, tests on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4785:98,plugin,plugins,98,https://root.cern,https://github.com/root-project/root/pull/4785,1,['plugin'],['plugins']
Modifiability,* Use proper infinity checks in RooFit HS3; * New `domains` section in JSON to store variable ranges; * Some refactoring of RooFit HS3; * Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; * Add likelihoods and analyses fields for HS3 v2; * Complete also the reading of likelihoods and analysis fields; * Rename fields in JSON file to match new standard. More description in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12207:85,variab,variable,85,https://root.cern,https://github.com/root-project/root/pull/12207,2,"['refactor', 'variab']","['refactoring', 'variable']"
Modifiability,* inlining of simple getters; * replace `NULL` with `nullptr`; * change getters in `RooLagrangianMorphFunc::Config`: return `const &`; * remove `Config(const Config &other) = default;` because it caused; warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8001:108,Config,Config,108,https://root.cern,https://github.com/root-project/root/pull/8001,3,['Config'],['Config']
Modifiability,"* introduce new `RooAbsData::sumEntriesW2()` member function to; calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`; overload to conveniently compute the extended term also outside the; the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was; originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended; term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8378:146,extend,extendedTerm,146,https://root.cern,https://github.com/root-project/root/pull/8378,3,['extend'],"['extended', 'extendedTerm']"
Modifiability,"* remove unused variable fTmpBranches from TDataFrameImpl; * inizialize fLastCheckedEntry to -1 for all threads; * total size of collection returned by Take is now a ULong64_t; * {Ret,Arg}Type_t -> {Ret,Args}_t: more readable, no redundancy; * minor text fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/336:16,variab,variable,16,https://root.cern,https://github.com/root-project/root/pull/336,1,['variab'],['variable']
Modifiability,"* remove wrong multiplication of type size in `CastPersistentToShared`. * restructure `InitializeTensor` to only provide read-only accessors, enforcing invariance of the right combination between type, shape and data. * avoid **memory leak** of persistified data when reading back from file. * reset `fSize` member in `CastSharedToPersistent` to avoid wrong size info when persistifying the same model twice (otherwise, the multiplication with the element size in bytes would happen twice, resulting in overruns when copying the transient data). Extends on #15162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15163:546,Extend,Extends,546,https://root.cern,https://github.com/root-project/root/pull/15163,1,['Extend'],['Extends']
Modifiability,"* replace ROOTSYS by $ROOTSYS; * import new options for `root` and `root-config` from the current help messages; * extended the explanation of `root` for macro compilation (`+`, `+O`, ...), combinations of macro and data files, combinations of macros with expressions; * updated a few URLs; * updated root-config explanation for Makefiles (adapting to built-in rules). Please check, especially the third point is based my on my regular usage of root and not on the official documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1487:73,config,config,73,https://root.cern,https://github.com/root-project/root/pull/1487,4,"['adapt', 'config', 'extend']","['adapting', 'config', 'extended']"
Modifiability,* unused variables; * mixing `int` and `bool` in comparison,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9682:9,variab,variables,9,https://root.cern,https://github.com/root-project/root/pull/9682,1,['variab'],['variables']
Modifiability,"**Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**; For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**; 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_x86; 3. cd F:\gitP\root-project\root\build_x86; 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 5. python.exe -m pip install pytest; 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. ; 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild; 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1""; 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**; VS 2019 + Windows Server 2019. **Additional context**; [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742:110,config,configuration,110,https://root.cern,https://github.com/root-project/root/issues/9742,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"**Description of the bug**. In order to use TMapFile I link the application with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:189,config,config,189,https://root.cern,https://github.com/root-project/root/issues/11353,1,['config'],['config']
Modifiability,"*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3404,Config,ConfigurableParam,3404,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Config'],['ConfigurableParam']
Modifiability,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084:485,config,configuration,485,https://root.cern,https://github.com/root-project/root/issues/14084,1,['config'],['configuration']
Modifiability,"*Original request by Marc Escalier in [ROOT-2753](https://sft.its.cern.ch/jira/browse/ROOT-2753), which got quite a few comments. Ported now to GitHub to make the request more visible.*. Hello,; one can create a RooDataSet with a given selection on variables by doing :; ```C++; RooRealVar myvariable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable,""condition on myvariable""); ```; for which ""condition on the variable"" could be for example : ""myvariable < 10""; this works well if myvariable is a float for example; but in the case where myvariable is a vector (i mean a array) of float or anything else :; (myvector_variable[0], myvector_myvariable[1], etc...), how to do to make a selection on the first (or any index) element of the vector, with a condition on the element of the vector ?; it seems this is not implemented in roofit ?; i mean, if i do this :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable,""myvector_variable[0]<10""); ```; it crashes; if i do :; ```C++; RooRealVar myvector_variable(""myvector_variable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvariable[0],""myvector_variable[0] < 10""); ```; it is ""forbidden"" by the root/roofit program; by the way, it crashes also if i do :; ```C++; RooRealVar myvector_variable(""myvariable"",...); RooDataSet mydataset(""mydataset"",""mydataset"",mytree,myvector_variable); ```; (if myvariable is a vector and not a simple variable); thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12610:249,variab,variables,249,https://root.cern,https://github.com/root-project/root/issues/12610,3,['variab'],"['variable', 'variables']"
Modifiability,", __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:18404,plugin,plugins,18404,https://root.cern,https://github.com/root-project/root/issues/8931,1,['plugin'],['plugins']
Modifiability,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:5549,config,config,5549,https://root.cern,https://github.com/root-project/root/issues/16242,3,['config'],['config']
Modifiability,"- A new parameter, the lazyness of the snapshot, has been added to the TSnapshotOptions; - The Snapshot methods return a TResultPtr<TInteface<TLoopManager>> rather than a TInteface<TLoopManager>; - Tests and tutorials adapted; - New test for lazy snapshot added",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1870:218,adapt,adapted,218,https://root.cern,https://github.com/root-project/root/pull/1870,1,['adapt'],['adapted']
Modifiability,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add `lsan` build option to enable leak checking.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Add ASAN_OPTIONS and LSAN_OPTIONS environment variables for; executables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066:295,variab,variables,295,https://root.cern,https://github.com/root-project/root/pull/5066,1,['variab'],['variables']
Modifiability,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5237:311,config,configuring,311,https://root.cern,https://github.com/root-project/root/pull/5237,1,['config'],['configuring']
Modifiability,- Allow to steer the unit switching between Geant4 units and ROOT units with an unlock mechanism. The (un)lock mechanism can be enabled by a static member of the TGeoManager; - Adapt the GDML parser and writer accordingly to output the correct units.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7165:177,Adapt,Adapt,177,https://root.cern,https://github.com/root-project/root/pull/7165,1,['Adapt'],['Adapt']
Modifiability,- Fix segfault if class name has underscore in name; - Fix segfault if no identity variable transformation is booked,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/881:83,variab,variable,83,https://root.cern,https://github.com/root-project/root/pull/881,1,['variab'],['variable']
Modifiability,- Fix the computation in case of imt or blas is not available. . Use still TCpuMatrix class (TCpu architecture) but use TMatrix for matrix multiplication instead of BLAS\; Only dense layers architectures are supported in this case. - Fix tutorials for the no-imt case. - Use Higgs data file from root.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519:183,layers,layers,183,https://root.cern,https://github.com/root-project/root/pull/5519,1,['layers'],['layers']
Modifiability,"- On Windows, attempts to find R in the default installation paths if not found via `find_program`.; - Does the same for the `R_LIBRARY` variable, which may not be reported by the R executable on Windows.; - Adds an `R_SCRIPT` variable to provide the path to RScript. This is useful if the parent CMake script wants to call R non-interactively to run a script. Fixed a typo in the comments. # This Pull request:. ## Changes or fixes:. Adds support for CMake to find R on Windows. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (not necessary, but updated docs in the FindR script)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14201:137,variab,variable,137,https://root.cern,https://github.com/root-project/root/pull/14201,2,['variab'],['variable']
Modifiability,- Refactor AdaBoost; - Add multi-class support; - Add ranking feature; - Remove deprecated file `tmva/pymva/test/Classification.C`. **NOTE:** This PR needs a rebase and is dependent on #303,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/315:2,Refactor,Refactor,2,https://root.cern,https://github.com/root-project/root/pull/315,1,['Refactor'],['Refactor']
Modifiability,- Remove `dynamic_cast` for cross casts in a multiple inheritance setting; - Reduce the size of datasets by removing observables that are not in use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9412:54,inherit,inheritance,54,https://root.cern,https://github.com/root-project/root/pull/9412,1,['inherit'],['inheritance']
Modifiability,"- Replace the duo of `cudnn` and `tmva-cudnn` by just `tmva-cudnn`. Otherwise, ROOT can be configured to an invalid state where everything compiles but doesn't link.; - Modernise the CMake code that links to cuDNN, going from variables to an imported target. Fix #16715",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16759:91,config,configured,91,https://root.cern,https://github.com/root-project/root/pull/16759,2,"['config', 'variab']","['configured', 'variables']"
Modifiability,- Switch object format from ELF (Linux) to COFF (Windows); - Fix mangled symbols lookup on Windows: remove leading '_' and use malloc to simulate __imp_ variables (that are indirection pointers),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1400:153,variab,variables,153,https://root.cern,https://github.com/root-project/root/pull/1400,1,['variab'],['variables']
Modifiability,"- TMVA_Higgs_Classification.C. a tutorial using the public Higgs UCI dataset for a classification problem using a Deep Neural network from TMVA, that is made with fully connected layers. - TMVA_CNN_Classification.C. Tutorial showing the usage of Convolutional neural network in TMVA.; The macro generates on the fly some toys images (size 16x16) of two different classes and then a; convolutional neural network is used for their classification.; This example builds and uses also a CNN built on the fly using Keras through the ROOT PyKeras package; This example shows also how to use a batch normalization layer in TMVA. - TMVA_RNN_Classification.C. Tutorial showing the usage of Recurrent neural network in TMVA.; Toys time dependednt data of two different classes are generated on the fly and then; a recurrent neural network is used for classification.; Both TMVA and PyKeras networks are built and used.; The network uses by default one LSTM layer, but optionally it can be built with; a simple RNN or a GRU layer or also 3 different recurrent networks for each recurrent layer type; can be made",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5441:179,layers,layers,179,https://root.cern,https://github.com/root-project/root/pull/5441,1,['layers'],['layers']
Modifiability,"- TThreadExecutor's task pool initializer is now a unique_ptr.; - Removed useless Reduction resolver.; - Change the way Reduce was inherited + overloaded. It was working due; to a GCC bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78308; (thanks, Axel); - Chunked Map is now protected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/291:131,inherit,inherited,131,https://root.cern,https://github.com/root-project/root/pull/291,1,['inherit'],['inherited']
Modifiability,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16465:39,variab,variable,39,https://root.cern,https://github.com/root-project/root/pull/16465,1,['variab'],['variable']
Modifiability,- Update Vc to version 1.3.0; - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch); - Use same compiler options and installation prefix as ROOT; - Configure and install Vc into CMake binary directory; - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360:178,Config,Configure,178,https://root.cern,https://github.com/root-project/root/pull/360,1,['Config'],['Configure']
Modifiability,- Use `PCRE_PCRE_LIBRARY` and `PCRE_PCREPOSIX_LIBRARY` variables; - Avoid installation of empty `lib/pkgconfig` directory. Fixes: [ROOT-9864](https://sft.its.cern.ch/jira/browse/ROOT-9864),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3266:55,variab,variables,55,https://root.cern,https://github.com/root-project/root/pull/3266,1,['variab'],['variables']
Modifiability,- Use the same flags for `LLVM` than for `ROOT`; - Print out the multi-configuration generator flags; - Fix `root-config.bat` and `compiledata.win32`; - Increase the stack size for `rootcling` and for the `rfield_variant` test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16092:71,config,configuration,71,https://root.cern,https://github.com/root-project/root/pull/16092,2,['config'],"['config', 'configuration']"
Modifiability,- When imt is off one needs to have still the imt dependency for using TExecutor; - Fix correct definition for variable defining location of vdt headers.; It should be VDT_INCLUDE_DIRS and not VDT_INCLUDE_DIR,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9441:111,variab,variable,111,https://root.cern,https://github.com/root-project/root/pull/9441,1,['variab'],['variable']
Modifiability,"- When the LLVM_BUILD_TYPE is Release, but the CXX_FLAGS are empty, a; warning is issued.; - When configuring, fix the order in which compiler flags are printed. This is the issue mentioned on mattermost. Axel proposed to issue a warning in this case. The question is if this warning catches all cases where build types might be set up wrongly or if the `CMAKE_CXX_FLAGS_${LLVM_BUILD_TYPE}` should be tested.; I also fixed the order in which the compiler flags are printed. I didn't get to this before cache-variable PR where I promised to do this got merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4243:98,config,configuring,98,https://root.cern,https://github.com/root-project/root/pull/4243,2,"['config', 'variab']","['configuring', 'variable']"
Modifiability,"- When weight errors are added to a RooDataSet, but the dataset hasn't; been set up to store weights, these are silently ignored. Users will now; see warnings.; - After adding the last event, the weight variable will keep the value; of the weight error until a new error is set. RooDataSet::add(); therefore now resets weight and weight error after adding an entry. [ROOT-10259]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4178:203,variab,variable,203,https://root.cern,https://github.com/root-project/root/pull/4178,1,['variab'],['variable']
Modifiability,"- [ ] Checked for duplicates. When the `auto` keyword is used in the interpreter to substitute pointer types, the value of the pointer is not printed out correctly, even though the pointer points to the correct variable. A few simple interpreter commands to reproduce the problem:; ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto xp = &x; (int *) @0x7ffe114d3bb8 <- WRONG!; root [3] auto yp = &y; (int *) @0x7ffe114d3bb8 <- WRONG!; root [4] &x; (int *) 0x7f3bcb682018; root [5] &y; (int *) 0x7f3bcb68201c; root [6] xp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [7] yp; (int *) @0x7ffe114d3bb8 <- WRONG!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. However, if one uses `auto *` instead of auto, one gets the expected behavior:. ```; root [0] int x = 1; (int) 1; root [1] int y = 2; (int) 2; root [2] auto * xp = &x; (int *) 0x7f8f0a394018 <- CORRECT!; root [3] auto * yp = &y; (int *) 0x7f8f0a39401c <- CORRECT!; root [4] &x; (int *) 0x7f8f0a394018; root [5] &y; (int *) 0x7f8f0a39401c; root [6] xp; (int *) 0x7f8f0a394018 <- CORRECT!; root [7] yp; (int *) 0x7f8f0a39401c <- CORRECT!; root [8] *xp; (int) 1; root [9] *yp; (int) 2; ```. Can we fix the interpreter such that it also prints the correct pointer values when `auto` is used?. This problem was originally spotted on the ROOT forum:; https://root-forum.cern.ch/t/wrong-object-returned-in-root-when-using-auto-keyword",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8806:211,variab,variable,211,https://root.cern,https://github.com/root-project/root/issues/8806,1,['variab'],['variable']
Modifiability,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12786:420,config,config,420,https://root.cern,https://github.com/root-project/root/issues/12786,2,['config'],['config']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Using the `Print(""v"")` option causes a segfault for a few RooFit classes. ### Expected behavior. The printout happens. ### To Reproduce. Take a HistFactory made workspace, select a `FlexibleInterpVar` or a `RooProduct` and call `Print(""v"")`. ### Setup. current master, compiled on archlinux. ### Additional context. The crash always happens in the `Proxies` section, possibly related to the `RooListProxy` rewrite by @hageboeck",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10385:565,Flexible,FlexibleInterpVar,565,https://root.cern,https://github.com/root-project/root/issues/10385,2,"['Flexible', 'rewrite']","['FlexibleInterpVar', 'rewrite']"
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963:693,config,configuration,693,https://root.cern,https://github.com/root-project/root/issues/10963,2,['config'],['configuration']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:496,variab,variables,496,https://root.cern,https://github.com/root-project/root/issues/10572,3,['variab'],"['variable', 'variables']"
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:477,plugin,plugin,477,https://root.cern,https://github.com/root-project/root/issues/12326,1,['plugin'],['plugin']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter De",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:482,CONFIG,CONFIG,482,https://root.cern,https://github.com/root-project/root/issues/8942,1,['CONFIG'],['CONFIG']
Modifiability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. ; The version copied and adapted of the function is somehow linked to an old version. ; The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. ; In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7254:488,adapt,adapted,488,https://root.cern,https://github.com/root-project/root/issues/7254,1,['adapt'],['adapted']
Modifiability,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708:1899,config,configured,1899,https://root.cern,https://github.com/root-project/root/issues/8708,1,['config'],['configured']
Modifiability,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448:197,variab,variables,197,https://root.cern,https://github.com/root-project/root/issues/8448,1,['variab'],['variables']
Modifiability,"- [X] Checked for duplicates. ### Describe the bug; When ROOT is configured with `-Druntime_cxxmodules:BOOL=OFF`, then deprecation warnings (from `[[deprecated]]`) are not shown in the Cling interpreter. ### Expected behavior; * Either warnings should be shown in `-Druntime_cxxmodules:BOOL=OFF` configurations; * Or the behaviour should be documented in a clear and concise way. ### To Reproduce. With `-Druntime_cxxmodules:BOOL=OFF`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root -q -l foo.C. Processing foo.C...; $; ```. With `-Druntime_cxxmodules:BOOL=ON`:; ```console; $ cat foo.C; [[deprecated]] void foo() { }; $ root.exe -q -l foo.C. Processing foo.C...; input_line_9:2:2: warning: 'foo' is deprecated [-Wdeprecated-declarations]; foo() /* '.x' tries to invoke a function with the same name as the macro */; ^; /tmp/foo.C:1:3: note: 'foo' has been explicitly marked deprecated here; [[deprecated]] void foo() { }; ^; ```. ### Setup. 1. ROOT version: 6.22.08 and 6.24.06; 2. Linux (Debian-10 for me, other OS for others); 3. Built from source using private spack rules, built straight from source. ### Additional context; See discussion on the ""Cling"" Channel in Mattermost. cc: @dennisklein",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9815:65,config,configured,65,https://root.cern,https://github.com/root-project/root/issues/9815,2,['config'],"['configurations', 'configured']"
Modifiability,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11743:352,config,configure,352,https://root.cern,https://github.com/root-project/root/issues/11743,2,['config'],['configure']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no memb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:574,config,config,574,https://root.cern,https://github.com/root-project/root/issues/8418,1,['config'],['config']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; * The `GetSize()` result of the `TClonesArray` fed to the (re)defining function are always 1000, not reflecting the correct value.; * Redefining a variable that was the type `TClonesArray` causes `GetColumnNames()` method to return a column name vector with repeated column names, and trying to snapshot against related names causes fatal errors. ### Expected behavior; * The `GetSize()` method of the input `TClonesArray` returns the correct size.; * `GetColumnNames()` produces unique column names.; * The redefined `TClonesArray` can be snapshot correctly. ### To Reproduce; 1. Place two ROOT macros in the same directory:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TClonesArray.h>; #include <TLorentzVector.h>. #include <string>; #include <cstdio>; #include <cstdlib>; #include <iostream>. Float_t gen_rand() {; 	return rand() / static_cast<Double_t>(RAND_MAX);; }. void gen_tree(const std::string pathFile = ""file_tcatlv.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of TClonesArrays of TLorentzVectors"");; 	auto *tcaTest = new TClonesArray(""TLorentzVector"", 8);; 	size_t nVar;; 	ttOut->Branch(""TestVar1"", tcaTest);; 	ttOut->Branch(""nTestVar1"", &nVar);; 	constexpr size_t nEntries = 10;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		tcaTest->Clear();; 		nVar = rand() % 8;; 		tcaTest->Expand(nVar);; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tsize: "" << tcaTest->GetSize() << std::endl;; 		for (size_t iVar = 0; iVar < nVar;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:530,variab,variable,530,https://root.cern,https://github.com/root-project/root/issues/9240,1,['variab'],['variable']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:463,config,configuring,463,https://root.cern,https://github.com/root-project/root/issues/7345,1,['config'],['configuring']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:563,inherit,inherits,563,https://root.cern,https://github.com/root-project/root/issues/10240,1,['inherit'],['inherits']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087:1621,sandbox,sandbox,1621,https://root.cern,https://github.com/root-project/root/issues/9087,1,['sandbox'],['sandbox']
Modifiability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:567,variab,variables,567,https://root.cern,https://github.com/root-project/root/issues/8435,1,['variab'],['variables']
Modifiability,"- [google and issues] Checked for duplicates. ### Describe the bug; When I use RooUniform inside RooProdPdf, this leads to SIGSEGV during execution. This code raises:. UniformExpZ neutrino_target_z(; ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",; z, nt_h_top, nt_h_bot, l; );; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),; RooUniform(""u_nt_y"", ""u_nt_y"", y)); );; RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));; // fit; RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(u_nt_x, u_nt_y); );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce; 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built myself. ### Additional context; Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation; >; > ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6; #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6; #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so; #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so; #4 <signal handler called>; #5 0x0000000000000000 in ?? (); #6 0x00007f21b7bf1322 in RooAbsA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052:857,variab,variables,857,https://root.cern,https://github.com/root-project/root/issues/8052,1,['variab'],['variables']
Modifiability,"- [x ] Checked for duplicates. ### Describe the bug; The build of builtin TBB does not inherit CXXFLAGS from the main ROOT cmake. ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` configures a build of the internal TBB. The ``CXXFLAGS`` setting in this file does not pick up user environment ``CXXFLAGS`` or ``CMAKE_CXX_FLAGS`` from the main build. ### Expected behavior; Any ``CXXFLAGS`` set by the user should be inherited by the TBB build. OR. The ROOT CMake configuration should provide an optional ``TBB_CXX_FLAGS`` variable to set these flags for the TBB build. In either case, if the user specifies certain ``CXXFLAGS`` that are required for the build (e.g., -gcc-name= for an Intel compiler) then those flags should be . ### To Reproduce; 1. Set the ``CXXFLAGS`` environment variable or ``CMAKE_CXX_FLAGS`` to include any innocuous value, e.g. ``-Wextra``; 2. Inspect ``[buildir]/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake`` to get the make command created by this cmake.; 3. Running this make command will list the individual make steps, where you can see that the ``CXXFLAGS`` were not included. ### Setup; 1. ROOT version: Master branch commit 270483321be3ecc443e691d8e07c740d9c75ff87 (Aug 3, 2021); 2. Operating system: linux (custom OS for institutional cluster); 3. How you obtained ROOT: source code from github. ### Additional context; User-specified ``CXXFLAGS`` are often unnecessary in the era of CMake, and many users may use unnecessary or counterproductive ``CXXFLAGS`` out of habit. However, there are some situations were these flags are necessary, e.g. the ``-gcc-name`` flag for some intel compilers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8815:87,inherit,inherit,87,https://root.cern,https://github.com/root-project/root/issues/8815,6,"['config', 'inherit', 'variab']","['configuration', 'configures', 'inherit', 'inherited', 'variable']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console; $ touch foo.h; $ rootcling -v2 -f foo.cxx foo.h; Warning: Unused class rule: foo; ```. ### To Reproduce. ```console; $ touch foo.h; $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ...; $ rootcling -v2 -f foo.cxx foo.h; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; Error: Parsing #pragma failed in memory; Warning: Unused class rule: foo; ```. ### Setup; ```; $ rootcling --version; LLVM (http://llvm.org/):; LLVM version 9.0.1; Optimized build with assertions.; Default target: x86_64-apple-darwin20.6.0; Host CPU: skylake; ```. Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:75,variab,variable,75,https://root.cern,https://github.com/root-project/root/issues/9524,1,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. In the LCG dev3 and dev4 build we see a segfault when testing DD4hep, when reading the XML description of the materials of the Detector.; ```; #0 0x00007ffff4c73a1a in TGeoElement::A (this=0x0) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/inc/TGeoElement.h:76; #1 0x00007ffff4c734ee in TGeoMixture::ComputeDerivedQuantities (this=0x2945cb0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/geom/geom/src/TGeoMaterial.cxx:1262; #2 0x00007fffd42bb732 in dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t>::operator() (this=0x7ffffffe1960, e=...); at /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/DD4hep-01.22/src/DD4hep/01.22/DDCore/src/plugins/Compact2Objects.cpp:489; #3 0x00007fffd42cadc3 in dd4hep::xml::Collection_t::for_each<dd4hep::Converter<dd4hep::Material, dd4hep::xml::Handle_t> > (this=0x7ffffffe1990, oper=...); ```. Debugging the code, I can see that the TGeoMixture is supposed to contain fNelements=4 elements, and the last one is 0x0 hence the segfault when invoking A(). Digging further, I can see that the material is defined in DD4hep compact as:. ```; <!-- ### Pipe Supports Sintimid ### -->; <material name =""Pipe:Sintimid"">; <D type=""density"" value=""1.43"" unit=""g/cm3""/>; <composite ref=""C"" n=""18""/>; <composite ref=""O"" n=""5""/>; <composite ref=""N"" n=""2""/>; </material>. <!--### Pipe Supports Sintimid15G ###-->; <material name =""Pipe:Sintimid15G"">; <D type=""density"" value=""1.42"" unit=""g/cm3""/>; <fraction ref=""Pipe:Sintimid"" n=""0.85""/>; <fraction ref=""C"" n=""0.15""/>; </material>; ```; where the second mixture is a mixture of the first mixture and an element already present. ### Expected behavior; No segfault. ### To Reproduce. I have tried to reproduce the behaviour in a simple root macro:; ```; void test_mixture(); {; TGeoManager *geom = new TGeoManager(""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272:853,plugin,plugins,853,https://root.cern,https://github.com/root-project/root/issues/11272,1,['plugin'],['plugins']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. ROOT overrides CMake's `find_package` in `cmake/modules/SearchInstalledSoftware.cmake`, which is not uncommon, but relies on undocumented behavior of CMake. See e.g.: https://crascit.com/2018/09/14/do-not-redefine-cmake-commands/. This however breaks other tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:684,config,configured,684,https://root.cern,https://github.com/root-project/root/issues/8633,1,['config'],['configured']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manuall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:812,config,configuration,812,https://root.cern,https://github.com/root-project/root/issues/11797,1,['config'],['configuration']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. The following type of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:389,Config,ConfigType,389,https://root.cern,https://github.com/root-project/root/issues/12358,2,['Config'],['ConfigType']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11138:436,Config,Configuring,436,https://root.cern,https://github.com/root-project/root/issues/11138,1,['Config'],['Configuring']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. While updating ATLAS's EDM, we tried to introduce some `std::vector<std::array<float, 3> >` variables into our output files. But was met with the following types of errors:. ```; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:144,variab,variables,144,https://root.cern,https://github.com/root-project/root/issues/12007,1,['variab'],['variables']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug. With 6.24/06 vanilla and v6-24-00-patches e9d29ae8eb, the test `runtime_cxxmodules_addr` in the provided reproducer ; passes regardless of the presence or absence of the feature `runtime_cxxmodules`. With 6.25/02—and master, per @pcanal—it fails with a segmentation violation trying to autoparse `art::detail::are_cv_compatible<const int, const int*>`. ### Expected behavior. * `runtime_cxxmodules_9583_good` should pass in all cases.; * `runtime_cxxmodules_9583_bad` should pass when `runtime_cxxmodules=OFF` or #9583 has been fixed.; * `runtime_cxxmodules_addr` should pass in all cases. ### To Reproduce. - Ensure you are using ROOT 6.25/02 (or see below); - Ensure you are using CMake >= 3.22.0; - Execute the provided runit script to configure, build, and execute the tests. ### Setup. * SLF7; * CMAKE_CXX_STANDARD=17. ### Additional context. Preliminary investigation by @pcanal (to ensure that I hadn't messed up something basic in the configuration or XML) indicates that the problem was introduced by PR #7488 and not fixed by its partial reversion in 2d304cf4888a8cf24aa84b7fae086a91eefa31c4. According to @pcanal, a reversion of both 2d304cf488 and 34590aeef4 resolves this issue. Reproducer: [runtime_cxxmodules-reproducer.tar.gz](https://github.com/root-project/root/files/7918981/runtime_cxxmodules-reproducer.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9664:791,config,configure,791,https://root.cern,https://github.com/root-project/root/issues/9664,2,['config'],"['configuration', 'configure']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12701:1086,config,config,1086,https://root.cern,https://github.com/root-project/root/issues/12701,2,['config'],['config']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Configuring with `-DCUDA=ON` leads to; ```; -- Detecting CUDA compile features; -- Detecting CUDA compile features - done; CMake Warning (dev) at /opt/cmake-3.19/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake:426 (message):; The package name passed to `find_package_handle_standard_args` (CUDNN) does; not match the name of the calling package (CuDNN). This can lead to; problems in calling code that expects `find_package` result variables; (e.g., `_FOUND`) to follow a certain pattern.; Call Stack (most recent call first):; cmake/modules/FindCuDNN.cmake:40 (find_package_handle_standard_args); cmake/modules/SearchInstalledSoftware.cmake:17 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:1669 (find_package); CMakeLists.txt:219 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Found CUDNN: /usr/include ; -- Found cuDNN: v? (include: /usr/include, library: /usr/lib64/libcudnn.so); ```. ### Expected behavior; Don't warn. ### To Reproduce; `cmake -Dcuda=ON <src>`. ### Setup; - centos8; - cuda 11.3 installed via yum.; - Manos' master branch. It branched off from master on 22. Jun @ d026b4918a . ### Additional context; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8537:52,Config,Configuring,52,https://root.cern,https://github.com/root-project/root/issues/8537,2,"['Config', 'variab']","['Configuring', 'variables']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; In commit 63aeb0d65d3817e805b0edee2ab7b8f4aa20a190 (master) and commit c3e69067256263bfd5287794b4444e20da5b0f57 (v6.22) the bindings/pyroot/pythonizations/test/ttree_branch_attr.py was extended to include an additional test. This test fails on Intel 32 bit Fedora Linux: The error is: symbol '__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:237,extend,extended,237,https://root.cern,https://github.com/root-project/root/issues/6813,1,['extend'],['extended']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; It seems that in pyROOT, the NLL variable created from `RooAbsPdf.createNLL` does not get disposed of properly when the variable went out of scope, causing a memory leak. ### To Reproduce; ```Python; import ROOT. ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Minimization). ws = ROOT.RooWorkspace(); ws.factory(""Gaussian::pdf(x[0,10],mu[4,0,10],sigma[1.0,0.1,10.0])""); pdf = ws.pdf(""pdf""); x = ws.var(""x""); x.setRange(""SideBandLo"", 0, 2); x.setRange(""SideBandHi"", 6, 10); ds = pdf.generate(ROOT.RooArgSet(x), 11000). import psutil. def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""); ; def test(pdf, ds):; nll = pdf.createNLL(ds); ; proc = psutil.Process(); mem0 = proc.memory_info(); for i in range(int(1e4)):; test(pdf, ds); if (i%1000 == 0):; mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1; ```. This gives. ```; Memory stat: RSS=4009 MB, VMS=5170 MB. Delta RSS=0.00 MB VMS=0.00 MB; Memory stat: RSS=4116 MB, VMS=5278 MB. Delta RSS=107.25 MB VMS=107.15 MB; Memory stat: RSS=4224 MB, VMS=5386 MB. Delta RSS=108.02 MB VMS=108.10 MB; Memory stat: RSS=4333 MB, VMS=5495 MB. Delta RSS=109.05 MB VMS=109.21 MB; Memory stat: RSS=4439 MB, VMS=5601 MB. Delta RSS=106.48 MB VMS=106.48 MB; Memory stat: RSS=4547 MB, VMS=5709 MB. Delta RSS=108.02 MB VMS=107.85 MB; Memory stat: RSS=4656 MB, VMS=5820 MB. Delta RSS=109.05 MB VMS=110.36 MB; Memory stat: RSS=4764 MB, VMS=5927 MB. Delta RSS=108.02 MB VMS=107.75 MB; Memory stat: RSS=4872 MB, VMS=6035 MB. Delta RSS=108.02 MB VMS=107.95 MB; Memory stat: RSS=4979 MB, VMS=6144 MB. Delta RSS=106.81 MB VMS=108.52 MB; ```. ### Setup; ROOT 6.24, 6.26 (from LCG)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11397:85,variab,variable,85,https://root.cern,https://github.com/root-project/root/issues/11397,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759:62,config,config,62,https://root.cern,https://github.com/root-project/root/issues/10759,13,['config'],['config']
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:200,extend,extended,200,https://root.cern,https://github.com/root-project/root/issues/8976,7,"['Config', 'extend']","['Configuration', 'extended']"
Modifiability,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7986:775,variab,variable,775,https://root.cern,https://github.com/root-project/root/issues/7986,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates; ### Describe the bug; `pyroot` installation with `c++17` does not find `optional` in namespace `std`:; ```python; >>> import ROOT; >>> hasattr(ROOT.std, ""optional""); False; ```; ### Expected behavior; ```python; >>> import ROOT; >>> hasattr(ROOT.std, ""optional""); True; ```; ### To Reproduce; 1. Install `root`; 2. run `python -c 'import ROOT; hasattr(ROOT.std, ""optional"")'`. ### Setup; ROOT version: 6.26.00; OS: Arch Linux x86_64; GCC: 11.2.0; Python: 3.10.2; ### Additional context; ```bash; $ root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_llvm ccache clad cuda cudnn dataframe exceptions fftw3 fitsio fortran gdml gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot pythia8 qt5web roofit webgui root7 shadowpw shared sqlite ssl tmva tmva-gpu tmva-pymva spectrum unuran vc vdt x11 xml xrootd; ```; ```bash; $ root-config --config; CFITSIO_INCLUDE_DIR=/usr/include CFITSIO_LIBRARY=/usr/lib/libcfitsio.so CUDA_CUDART_LIBRARY=/opt/cuda/lib64/libcudart.so CUDA_CUDA_LIBRARY=/usr/lib/libcuda.so CUDA_OpenCL_LIBRARY=/opt/cuda/lib64/libOpenCL.so CUDA_TOOLKIT_INCLUDE=/opt/cuda/include CUDA_VERSION=11.6 CUDA_cublas_LIBRARY=/opt/cuda/lib64/libcublas.so CUDA_cudadevrt_LIBRARY=/opt/cuda/lib64/libcudadevrt.a CUDA_cudart_static_LIBRARY=/opt/cuda/lib64/libcudart_static.a CUDA_cufft_LIBRARY=/opt/cuda/lib64/libcufft.so CUDA_cupti_LIBRARY=/opt/cuda/extras/CUPTI/lib64/libcupti.so CUDA_curand_LIBRARY=/opt/cuda/lib64/libcurand.so CUDA_cusolver_LIBRARY=/opt/cuda/lib64/libcusolver.so CUDA_cusparse_LIBRARY=/opt/cuda/lib64/libcusparse.so CUDA_nppc_LIBRARY=/opt/cuda/lib64/libnppc.so CUDA_nppial_LIBRARY=/opt/cuda/lib64/libnppial.so CUDA_nppicc_LIBRARY=/opt/cuda/lib64/libnppicc.so CUDA_nppidei_LIBRARY=/opt/cuda/lib64/libnppidei.so CUDA_nppif_LIBRARY=/opt/cuda/lib64/libnppif.so CUDA_nppig_LIBRARY=/opt/cuda/lib64/libnppig.so CUDA_nppim_LIBRARY=/opt/cuda/lib64/libnppim.so CUDA_nppist_LIBRARY=/opt/cuda/lib64/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10221:533,config,config,533,https://root.cern,https://github.com/root-project/root/issues/10221,3,['config'],['config']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; 549 if (!fRealDataClass->InheritsFrom(cl)) {; (gdb) bt; #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082; #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866; #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719; #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620; #5 0x00007fffefba86af in TBranchElement::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:826,Inherit,InheritsFrom,826,https://root.cern,https://github.com/root-project/root/issues/9564,1,['Inherit'],['InheritsFrom']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:520,config,configuration,520,https://root.cern,https://github.com/root-project/root/issues/12151,1,['config'],['configuration']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `root-config --has-XXX` simply prints `""no""` and returns 0 if `XXX` is not a ROOT feature. This is an unnecessary source of confusion (see e.g. [this forum thread](https://root-forum.cern.ch/t/root-6-22-no-python-support-enabled/44131)), especially when features change name, as it happened with `--has-python` which is now spelled `--has-pyroot`, or in case of spelling mistakes `root-config --has-builtin-cling` prints `""no""` but `root-config --has-builtin_cling` prints `""yes""`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root-config --has-bugs` should print something like `""unknown feature: 'bugs'""` and `root-config` should return non-zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7662:464,config,config,464,https://root.cern,https://github.com/root-project/root/issues/7662,5,['config'],['config']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:512,sandbox,sandbox,512,https://root.cern,https://github.com/root-project/root/issues/10777,1,['sandbox'],['sandbox']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooLinearVar`s and other `RooAbsRealLValue`s are special inside integrals, as `RooRealIntegral` over the underling `RooRealVar` can transparently integrate over the `RooLinearVar` variable and then use the jacobian to correct the result.; If the integral is inside a plot instead, the integral does not see the `RooLinearVar` as client of the integration variable, and decides to just integrate numerically, which, at least in my case, is slow. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `RooLinearVar` are used in the integration even when doing a plot projection. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT; from ROOT.RooFit import RooConst. x = ROOT.RooRealVar('x', '', 0, 1); y = ROOT.RooRealVar('y', '', 0, 1). x2 = ROOT.RooLinearVar('x2', '', x, RooConst(1), RooConst(0)); y2 = ROOT.RooLinearVar('y2', '', y, RooConst(1), RooConst(0)). # RooGaussian can integrate over x or mu, but not both; # still, the issue is visible regardless; D2 = ROOT.RooGaussian('g', '', x2, y2, RooConst(0.2)). # needed only to set the correct normalization in the frame; dt = D2.generate({x,y}, NumEvents = 10). # works fine, numerical integral only for the 2D normalization integral, and its over y2 (meaning that the RooLinearVar integr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12646:639,variab,variable,639,https://root.cern,https://github.com/root-project/root/issues/12646,2,['variab'],['variable']
Modifiability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10604:799,variab,variable,799,https://root.cern,https://github.com/root-project/root/issues/10604,1,['variab'],['variable']
Modifiability,"- add check if rms is NaN; - output value of rms (zero, negative, or NaN); - set rms to zero if it is NaN (before only done for zero or negative values). → I suspect the training will have problems in that situation anyway but **I think** it makes the message easier to digest:. before:; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : ------------------------------------------------------------------------------------------------------------------; : LifeTime: 0.0011344 -nan [ 8.5046e-05 0.024133 ]. …; : Some more output; : -nan -nan -nan -nan -nan -nan; <FATAL> : <GetSeparation> signal and background histograms have different or invalid dimensions:; ***> abort program execution; terminate called after throwing an instance of 'std::runtime_error'; what(): FATAL error. ```; after; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <WARNING> <WARNING> : Variable ""LifeTime"" has zero, negative, or NaN RMS^2: -nan ==> set to zero. Please check the variable content. ```; I.e. the nan does not appear in the table anymore (where I didn't spot it first) but the abnormal value gets pulled out into a WARNING message. (Where it also comes with variable name, as opposed to the long list of correlation matrix warning, which makes it non-trivial to understand which variables are problematic, if many, and comes w/o human readable names). tbh: I have not yet understood why NaN arrives there (… well a few lines before the √ of a negative number is computed … but I don't yet know why that arrived there. Still investigating, will follow up once I know more).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1669:379,variab,variables,379,https://root.cern,https://github.com/root-project/root/pull/1669,7,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"- better name for a variable, nNotRun -> nToRun; - substitute raw for loop with count_if (for readability); - substitute raw for loop with for_each (for consistency with the multi-thread version, which uses TThreadExecutor::Foreach)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11355:20,variab,variable,20,https://root.cern,https://github.com/root-project/root/pull/11355,1,['variab'],['variable']
Modifiability,"- dependency_versions.py: cannot run the root-config shell script on Windows; - the tutorial-dataframe-df0XX_*.py are failing on Windows, but this should be fixed (hopefully) once llvm and clang get updated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083:46,config,config,46,https://root.cern,https://github.com/root-project/root/pull/6083,1,['config'],['config']
Modifiability,- extend API in Factory to get the ROC curve for the training data; - this required to improve ResultsClassification to fill at the same time both output score; results and classID information. Before the classID info was set only later in; MethodBase::EvaluateAllMethod and done only for the testing data set.; Now it is done when the ResultsClassification object is filled; ( in MethodBase::AddClassifierOutput).; With these changes one can get a complete results for both training and testing data and being able to retrieve ROC curve in ; both cases. - fix also the code formatting for Factory class. Indentation was not correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6724:2,extend,extend,2,https://root.cern,https://github.com/root-project/root/pull/6724,1,['extend'],['extend']
Modifiability,"- fill style in `RAttrFill`; - line style in `RAttrLine`; - font kind in `RAttrFont`; - text align in `RAttrText`. Provide possibility to configure custom line pattern directly in `RAttrLine`. Shown in `rline_style.cxx` macro. Improve positioning of `RPave` and all derived classes. ; One can select any corner (default is `kTopRight`) and specify `offsetX` and `offsetY` relative to that corner.; By default frame corners are used, but if set `onFrame = false`, pad corners are used. Let mark `RFont` instance as default for the pad - in this case font will be used as default for any text output on the pad if font was not configured for that text.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8629:138,config,configure,138,https://root.cern,https://github.com/root-project/root/pull/8629,2,['config'],"['configure', 'configured']"
Modifiability,- initial port of physics-data -> EVE representation infrastructure from Fireworks;; - cleanup of TObject inheritance;; - first steps towards multi client synchronized selection support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3466:106,inherit,inheritance,106,https://root.cern,https://github.com/root-project/root/pull/3466,1,['inherit'],['inheritance']
Modifiability,"- the CUDA sm level can be set via CLING_TEST_CUDA_SM_LEVEL environment variable (e.g. ""35""), before running the tests; - this necessary, because the minimum sm level depends on the use CUDA SDK; - for example, CUDA 8.0 supports sm level 2.0, which is not support from CUDA 10.1 anymore",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190:72,variab,variable,72,https://root.cern,https://github.com/root-project/root/pull/7190,1,['variab'],['variable']
Modifiability,-- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm-apple-darwin23.2.0; -- LLVM default target triple: arm-apple-darwin23.2.0; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.15000100; Compiler flags:; C -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; Linker flags:; Executable -mmacosx-version-min=14.2; Module ; Shared . -- Enabled support for: asimage builtin_afterimage builtin_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:4051,Config,Configuration,4051,https://root.cern,https://github.com/root-project/root/issues/14337,1,['Config'],['Configuration']
Modifiability,"-----; | Welcome to ROOT 6.26/04 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068:1176,config,config,1176,https://root.cern,https://github.com/root-project/root/issues/14068,1,['config'],['config']
Modifiability,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3838,config,configured,3838,https://root.cern,https://github.com/root-project/root/issues/7936,1,['config'],['configured']
Modifiability,"-DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cmake`. The script also tries to detect a version, so, for example, on Alma, one could use `almalinux8.cmake` which would have higher precedence than `almalinux.cmake`. The default `config.cmake` tries to enable as many options as possible without failing if the dependencies are not installed. Sample `ubuntu.cmake` and `macos.cmake` are added in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:1948,config,configuration,1948,https://root.cern,https://github.com/root-project/root/pull/14999,6,['config'],"['config', 'configuration']"
Modifiability,"-Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.27 -o lib/libCling.so.6.27.99 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:3287,Variab,VariableSelectionRule,3287,https://root.cern,https://github.com/root-project/root/issues/12152,2,['Variab'],['VariableSelectionRule']
Modifiability,"-fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2065,plugin,plugins,2065,https://root.cern,https://github.com/root-project/root/issues/14492,2,"['config', 'plugin']","['configure', 'plugins']"
Modifiability,"-reflex was deprecated because the flag was parsed but nothing was done after. Rootcling works in two modes. The first mode is when it is called directly. The second mode is when it was called from genreflex. Genreflex is essentially calling rootcling with the appropriate flag translation and it sets the isGenReflex variable to true. The argument translation mechanism of genreflex has a nice feature which can print the underlying rootcling invocation. This is helpful if we want to move away from reflex to rootcling. This might be reasonable to get access to the finer grained arguments and options rootcling provides. However, we should still call rootcling and set the isGenReflex to true as the variable alters the content of the dictionaries. In cmssw C++ modules IB we use rootcling instead of genreflex to have better control on the module generation provided by the rootcling option set. This patch implements a flag which can turn the rootcling invocation completely to genreflex. Using rootcling -reflex should fix the DataFormats/Provenance dictionary generation for cmssw. cc: @oshadura, @smuzaffar, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4547:318,variab,variable,318,https://root.cern,https://github.com/root-project/root/pull/4547,2,['variab'],['variable']
Modifiability,... to avoid an `unused-but-set-variable` warning on Linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13073:32,variab,variable,32,https://root.cern,https://github.com/root-project/root/pull/13073,1,['variab'],['variable']
Modifiability,...refactoring the old way of obtaining it. Just for convenience.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1018:3,refactor,refactoring,3,https://root.cern,https://github.com/root-project/root/pull/1018,1,['refactor'],['refactoring']
Modifiability,...with fixed namings of variables/types; This PR replaces #2062,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2070:25,variab,variables,25,https://root.cern,https://github.com/root-project/root/pull/2070,1,['variab'],['variables']
Modifiability,"../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. @Axel-Naumann I don't really understand why the const ref does not increase the lifetime of the temporary as usual in this case, but this is the warning: https://godbolt.org/z/ss4zz8v3M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8301:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/8301,1,['variab'],['variable']
Modifiability,../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop; variable ‘col’ of type ‘const string&’ {aka ‘const; std::__cxx11::basic_string<char>&’} binds to a temporary constructed; from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8398:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/8398,1,['variab'],['variable']
Modifiability,".0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; import pandas as pd. df = pd.read_csv(""interp.csv""). df[""diff_abs""] = df[""new""] - df[""ref""]; df[""diff_rel""] = (df[""new""] - df[""ref""]) / df[""ref""]. format_mapping = {""new"": ""{:.10f}"", ""ref"": ""{:.10f}"", ""diff_abs"": ""{:.10f}"", ""diff_rel"": ""{:.2E}""}. for key, value in format_mapping.items():; df[key] = df[key].apply(value.format). print(df); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3624,Flexible,FlexibleInterpVar,3624,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:2852,sandbox,sandbox,2852,https://root.cern,https://github.com/root-project/root/issues/10777,1,['sandbox'],['sandbox']
Modifiability,".b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; };; defaultPackage = pkgs-root.root;; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]);; };; });; }; ```. Generated lock file; `flake.lock`; ```json; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1623875721,; ""narHash"": ""sha256-A8BU7bjS5GirpAUv4QA+QnJ4CceLHkcXdRp4xITDB0s="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""f7e004a55b120c02ecb6219596820fcd32ca8772"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1628696776,; ""narHash"": ""sha256-K8+/IQNZDZltIu/KSf+Tz01OwNzTGgTch0ktMOWcxLg="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""927ce1afc1db40869a463a37ea2738c27d425f80"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""ref"": ""nixos-21.05"",; ""repo"": ""nixpkgs"",; ""type"": ""github",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:11065,inherit,inherit,11065,https://root.cern,https://github.com/root-project/root/issues/8857,2,['inherit'],['inherit']
Modifiability,".cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o; -rw-r--r--. 1 pcanal us_cms 22259030 Oct 12 15:47 ./interpreter/llvm-project/llvm/lib/libclangAST.a; -rwxr-xr-x. 1 pcanal us_cms 127774184 Oct 12 15:49 ./lib/libCling.so; ```. i.e. the issue that `getThisObjectType` recently changed in Clang but the newly updated header files did not lead to a rebuild of clad. ### Reproducer. (Most likely) To reproduce build with 3e03f7891c and then rebuild the same directory commit 7f006742bb (llvm 18). ### ROOT version. master-ish. ### Installation method. local build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668:3017,plugin,plugins,3017,https://root.cern,https://github.com/root-project/root/issues/16668,2,['plugin'],['plugins']
Modifiability,".cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:3447,config,configurable,3447,https://root.cern,https://github.com/root-project/root/issues/8582,1,['config'],['configurable']
Modifiability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:2236,Config,Configuring,2236,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3151,Config,Configuring,3151,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,"/ previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Should also work with mac (not tested). ## Additional context. Hopefully this will be the last one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:4572,config,config,4572,https://root.cern,https://github.com/root-project/root/issues/6428,1,['config'],['config']
Modifiability,"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1661,Config,Configuring,1661,https://root.cern,https://github.com/root-project/root/issues/14113,1,['Config'],['Configuring']
Modifiability,"/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3265,extend,extended,3265,https://root.cern,https://github.com/root-project/root/issues/12427,1,['extend'],['extended']
Modifiability,"/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 7: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 9: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 10: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 11: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 12: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 14: Assuming field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 15: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 16: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 17: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 18: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 19: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 20: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 21: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 22: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Field 'fModelPersistence' is false in /opt/root_src/tmva/tmva/src/Classification.cxx:435; 24: Taking false branch in /opt/root_src/tmva/tmva/src/Classi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:27390,Config,Configurable,27390,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,"/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:18526,plugin,plugins,18526,https://root.cern,https://github.com/root-project/root/issues/8931,1,['plugin'],['plugins']
Modifiability,"/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #11 0x00007f5aceb44017 in TApplication::Terminate(int) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libCore.so; #12 0x00007f5acee3c936 in TRint::Run(bool) () from /home/shamrock/Research_LL/ctau-proper/lxplus_HTcondor/preselect/result/lib/libRint.so; #13 0x000000000040110c in main (); ===========================================================. Error in &lt;TList::Delete&gt;: A list is accessing an object (0x7f5acedf5830) already deleted (list name = ClosedFiles). </pre>. 3. Substituting the line; ```C++; auto dfOut = dfAug.Redefine(...);; ```; with; ```C++; auto dfOut = dfAug;; ```; and it will complete the execution without errors. ### Setup; 1. ROOT version: master (commit eb7c9c44465ad3f8db90d83598e3116a45ca630e), ""6.25/01""; 2. Operating system: NixOS; - system: `""x86_64-linux""`; - host os: `Linux 5.10.48, NixOS, 21.05.20210717.b2f87e0 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210601_5985b8b`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; 3. How you obtained ROOT: Build myself by upgrading the Nixpkgs `root` package. ### Additional context; Nix expressions used to build ROOT:; `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; src = root-source;; });; }); ];; };; in{; legacyPackages = pkgs;; legacyPackages-root = pkgs-root;; packages = {; inherit (pkgs-root) ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:10086,sandbox,sandbox,10086,https://root.cern,https://github.com/root-project/root/issues/8857,1,['sandbox'],['sandbox']
Modifiability,"/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: INTERNALERROR> self.hook.pytest_configure(config=self); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: INTERNALERROR> return self._docall(methods, kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: INTERNALERROR> res = mc.execute(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 13",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:2653,config,config,2653,https://root.cern,https://github.com/root-project/root/issues/6597,1,['config'],['config']
Modifiability,"/builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffc4480180) at /usr/include/c++/8/new:169; #12 llvm::orc::ExecutionSession::lookup (this=0x1656ebc10, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #13 0x00007fff78004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:28470,variab,variable,28470,https://root.cern,https://github.com/root-project/root/issues/12372,1,['variab'],['variable']
Modifiability,"/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TApplication* theApp = new TApplication(""App"", &argc, argv);; auto *G= new TGMainFrame(gClient->GetRoot(), 768, 1024);; theApp->Run();; return 0;; }. ```; compiled with ; ```; c++ $(root-config --cflags --glibs) -g -O1 frame.cxx -o frame.exe; ```; and executed as ; ```; ./frame.exe; ```; ### Setup; ROOT master MacOSX 10.15; and ROOT night build ; root_v6.22.99.macosx64-10.15-clang120 MacOSX 10.15. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6758:4516,config,config,4516,https://root.cern,https://github.com/root-project/root/issues/6758,1,['config'],['config']
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54535,variab,variable,54535,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:51143,variab,variable,51143,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:63006,variab,variable,63006,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:69796,variab,variable,69796,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volume.cxx:140:20: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming V == *this in /opt/root_src/tmva/tmva/src/Volume.cxx:135; 2: Assuming field 'fOwnerShip' is true in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 3: Taking true branch in /opt/root_src/tmva/tmva/src/Volume.cxx:137; 4: Assuming field 'fLower' is null in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Volume.cxx:138; 6: Assuming fi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136983,Variab,VariableImportance,136983,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableImportance']
Modifiability,"/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: INTERNALERROR> res = method(**kwargs); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: INTERNALERROR> warn_about_missing_assertion(mode); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: INTERNALERROR> assert False; 1312: INTERNALERROR> AssertionError; 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py; 1312: Traceback (most recent call last):; 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: config.do_configure(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure; 1312: self.hook.pytest_configure(config=self); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__; 1312: return self._docall(methods, kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall; 1312: res = mc.execute(); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute; 1312: res = method(**kwargs); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure; 1312: warn_about_missing_assertion(mode); 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion; 1312: assert False; 1312: AssertionError; 1312: ; 1312: -- END TEST OUTPUT --; 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):; 1312: got exit code 3 but expected 0; 1312: ; 1312: ; 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:4087,config,config,4087,https://root.cern,https://github.com/root-project/root/issues/6597,1,['config'],['config']
Modifiability,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6368,Plugin,PluginManager,6368,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Plugin'],['PluginManager']
Modifiability,/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variables.cxx:186; /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215:7: warning: Value stored to 'createNewFig' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'createNewFig' is never read in /opt/root_src/tmva/tmvagui/src/variablesMultiClass.cxx:215; /opt/root_src/tmva/pymva/src/MethodPyKeras.cxx; /opt/root_src/tmva/pymva/src/MethodPyTorch.cxx; /opt/root_src/tmva/tmva/inc/TMVA/BinaryTree.h; /opt/root_src/tmva/tmva/inc/TMVA/DNN/Minimizers.h; /opt/root_src/tmva/tmva/src/Classification.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DNN/Architectures/Reference/TensorDataLoader.cxx; /opt/root_src/tmva/tmva/src/DataInputHandler.cxx; /opt/root_src/tmva/tmva/src/DataLoader.cxx; /opt/root_src/tmva/tmva/src/DataSetInfo.cxx; /opt/root_src/tmva/tmva/src/DataSetManager.cxx; /opt/root_src/tmva/tmva/src/DecisionTree.cxx; /opt/root_src/tmva/tmva/src/ExpectedErrorPruneTool.cxx; /opt/root_src/tmva/tmva/src/KDEKernel.cxx; /opt/root_src/tmva/tmva/src/MethodBDT.cxx; /opt/root_src/tmva/tmva/src/MethodBase.cxx; /opt/root_src/tmva/tmva/src/MethodBoost.cxx; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx; /opt/root_src/tmva/tmva/src/Me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:144877,variab,variablesMultiClass,144877,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variablesMultiClass']
Modifiability,"/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Classification.cxx:431; 22: Assuming 'methBoost' is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 23: Assuming pointer value is null in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 24: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:432; 25: Field 'fModelPersistence' is true in /opt/root_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24942,Config,Configurable,24942,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,/tmva/tmva/src/VariableDecorrTransform.cxx:136; 12: 'jvar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 13: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:138; 14: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219:4: warning: Forming reference to null pointer [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 2: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:169; 3: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDeco,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:135541,Variab,VariableDecorrTransform,135541,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,"/usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:; ```; set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root); set(VDT_LIBRARY vdt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1883,CONFIG,CONFIG,1883,https://root.cern,https://github.com/root-project/root/issues/14113,1,['CONFIG'],['CONFIG']
Modifiability,"/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT:; Custom build with Nix package manager against the Nixpkgs revision [60e709069fa2fbcfca943d8f6df8dc6d33c67025](https://github.com/ShamrockLee/nixpkgs/tree/60e709069fa2fbcfca943d8f6df8dc6d33c67025), a custom fork against the master branch of [NixOS/Nixpkgs](https://github.com/NixOS/nixpkgs), with the root source overrided. The gcc version is `10.3.0`. ### Additional context; Nix Flake setup to build ROOT:. `flake.nix`; ```Nix; {; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/nixos-21.05"";; inputs.nixpkgs-root.url = ""github:ShamrockLee/nixpkgs/root-6-25"";; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.root-source.url = ""github:root-project/root/master"";; inputs.root-source.flake = false;; outputs = inputs@{self, nixpkgs, nixpkgs-root, flake-utils, root-source, ...}: flake-utils.lib.eachDefaultSystem (system: let; pkgs = nixpkgs.legacyPackages.${system};; pkgs-root = import nixpkgs-root {; inherit system;; overlays = [; (final: prev: {; root = prev.root.overrideAttrs (oldAttrs: {; version = ""2021-09-01"";; src = root-source;; cmakeFlags = (map (oldFlag:; if oldFlag == ""-Dimt=OFF"" then ""-Dimt=ON""; else if oldFlag == ""-Dssl=OFF"" then ""-Dssl=ON""; # else if oldFlag == ""-Dgfal=OFF"" then ""-Dgfal=ON""; # else if oldFlag == ""-Dxrootd=OFF"" then ""-Dxrootd=ON""; else oldFlag; ) oldAttrs.cmakeFlags) ++ [; ""-DCMAKE_BUILD_TYPE=RelWithDebInfo""; ];; buildInputs = oldAttrs.buildInputs ++ (with pkgs-root; [; tbb # for implicit multithreading; openssl # for ssl support; ]);; });; }); ];; };; devShell = pkgs.mkShell {; buildInputs = (with pkgs-root; [; root; ]);; nativeBuildInputs = (with pkgs-root; [; gcc; gnumake; cmake; ]) ++ (with pkgs;[; gawk; gitAndTools.gitFull; ]);; };; packagesSub = {; inherit (pkgs-root) root gcc gnumake cmake;; inherit (pkgs) gawk;; inherit (pkgs.gitAndTools) git gitFull;; };; run = pkgs.writeShellScriptBin ""run"" ''; export PATH=""${ with packagesSub; pkgs.lib.makeBinPath [",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:11647,inherit,inherit,11647,https://root.cern,https://github.com/root-project/root/issues/9240,1,['inherit'],['inherit']
Modifiability,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. /bin/sh: lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:7767,variab,variable,7767,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:4238,variab,variable,4238,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,"0x00007fffe37e8176 in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /usr/lib/root/6.24/lib/libCling.so; #4 0x00007fffe3738a79 in TCling::TCling(char const*, char const*, char const* const*) () from /usr/lib/root/6.24/lib/libCling.so; #5 0x00007fffe373a9a1 in CreateInterpreter () from /usr/lib/root/6.24/lib/libCling.so; #6 0x00007ffff05eaafd in TROOT::InitInterpreter() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #7 0x00007ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:2990,Config,ConfigurableParamHelper,2990,https://root.cern,https://github.com/root-project/root/issues/8180,2,['Config'],['ConfigurableParamHelper']
Modifiability,"0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2; #7 0x00007f107aeedf3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:30026,variab,variable,30026,https://root.cern,https://github.com/root-project/root/issues/15970,1,['variab'],['variable']
Modifiability,"1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:1972,config,configuring,1972,https://root.cern,https://github.com/root-project/root/issues/9687,1,['config'],['configuring']
Modifiability,"1. Create TWebCanvas from TRootGuiFactory if nothing else is configured; 2. Add warning message when web-based canvas started by default; 3. Add `Canvas.Name` parameter to rootrc to be able change default behaviour back; 4. Set `Canvas.Name` during configure depending if `webgui` compiled or not. Should behaves similar as with `TBrowser`.; If no extra command-line arguments are specified, web canvas will be started and warning message will appear.; Via `.rootrc ` file or with `--web=off` web canvas can be disabled. In batch mode one have to use `root --web -b tutorials/hsimple.C` to use web-based image generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13107:61,config,configured,61,https://root.cern,https://github.com/root-project/root/pull/13107,2,['config'],"['configure', 'configured']"
Modifiability,"1. Create `ui5` folder with all related openui5 code, move code from `etc\eve7`; 2. Create `js` folder with JavaScript ROOT code, move code from `etc/http`; 3. Introduce `webui` build config parameter, enabled when root7 or c++14 are enabled; 4. Folder `js` copied into build directory when `http` is enabled; 5. Folder `ui5` copies into build directory when `webui` is enabled; 6. When ROOT installed, `js` and `ui5` directories copied into `<prefix>` directory (platform-specific), identified as `TROOT::GetDataDir()`; 7. Try to use Component.js and manifest.json in openui5 projects, organize code with ui5-typical subfolders names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3498:184,config,config,184,https://root.cern,https://github.com/root-project/root/pull/3498,1,['config'],['config']
Modifiability,1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget; 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry; 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14054:154,config,configure,154,https://root.cern,https://github.com/root-project/root/pull/14054,1,['config'],['configure']
Modifiability,1. Detect OpenSSL version and activate v1.1 API when required; 2. Do not let load ssl libraries by civetweb - they already linked to libRHTTP.so; 3. Suppress compiler warnings in civetweb.c; 4. Use upper case for OPENSSL_VERSION variable - same as in standard FindOpenSSL.cmake script,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1836:229,variab,variable,229,https://root.cern,https://github.com/root-project/root/pull/1836,1,['variab'],['variable']
Modifiability,1. Do not expose special parameters to URL string - now in default HTML file special attributes can be inserted together with `JSROOT.ConnectWebWindow` call; 2. Correctly handle `#` in WebWindow URL. Such symbol used for routing inside webpage and will be often used with openui5; 3. Unify handling of URL options with RWebDisplayArgs. For now only `key` and `batch_mode` parameters are exposed to web window URL; 4. Update/extend doxygen docu; 5. Fix error in v7 CanvasPainter - v616 already fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3561:424,extend,extend,424,https://root.cern,https://github.com/root-project/root/pull/3561,1,['extend'],['extend']
Modifiability,"1. Do not show hidden files by default (can be changed via settings); 2. Sort items by names by default (can be changed via settings); 3. Let sort by name, by size or kept items unsorted; 4. Items can be shown in reverse order (can be configure via settings); 5. Fix - do not open same file twice; 6. Fix - let draw other object on same RCanvas/TCanvas (was broken due to jsroot v6 migration); 7. Fix - do not close RBrowser when embed RCanvas closed via menu command; 8. Let browse and draw trees with `TBranchElement` branches (like example file from @eguiraud); 9. Show object JSON when double-click object with active code editor; 10. Update JSROOT with correspondent RCanvas/TWebCanvas fixes, close to final 6.0.0 version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7028:235,config,configure,235,https://root.cern,https://github.com/root-project/root/pull/7028,1,['config'],['configure']
Modifiability,"1. Do not use `Form` ; 2. Instead `#include <TFile.h>` use `#include ""TFile.h""`; 3. Use JS module in `httptextlog.C` demo for custom class; 4. Let run `httptextlog.C` macro from any directory - configure custom path to `httptextlog.mjs` macro; 5. Use `https:` for `jsroot.gsi.de` site, refer to latest jsroot version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15251:194,config,configure,194,https://root.cern,https://github.com/root-project/root/pull/15251,1,['config'],['configure']
Modifiability,1. Fix - correctly set visibility level for geo drawing; 2. Fix - use more factor for number of nodes in geo drawing; 3. Fix - add missing Chebyshev0 function; 4. Fix - provide Gaus with normalization; 5. Fix - call 3D rendering after adding TPolyLine3D; 6. Fix - properly add interactive resize elements; 7. Fix - drop handling on tabs layout; 8. Fix - member-wise streaming of std::map #262; 9. Fix - typo in expandItem; 10. Fix - add missing import in RPavePainter; 11. Fix - prevent drawing of empty TGraph; 12. Fix - use semicolon in RH3; 13. Fix - prevent zero division when drawing TGraph exclusion; 14. Fix - draw th2 col bins with configured y bar; 15. Fix - let handle derived classes from TH1/TH2 #269; 16. Fix - add support of #mp symbol; 17. Fix - support TMath::Sq() function; 18. Fix - prevent drawing of empty TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13980:640,config,configured,640,https://root.cern,https://github.com/root-project/root/pull/13980,1,['config'],['configured']
Modifiability,1. Fix - interactive zooming on log color palette; 2. Fix - keyboard handling while input dialog active; 3. Fix - legend entry with not configured fill attributes; 4. Fix - prevent that color palette exceed graphical range; 5. Fix - exponential log axis labels with kMoreLogLabels bit set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15885:136,config,configured,136,https://root.cern,https://github.com/root-project/root/pull/15885,1,['config'],['configured']
Modifiability,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10843:505,variab,variables,505,https://root.cern,https://github.com/root-project/root/pull/10843,1,['variab'],['variables']
Modifiability,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:531,config,configured,531,https://root.cern,https://github.com/root-project/root/pull/2603,2,['config'],"['configure', 'configured']"
Modifiability,"1. Implement `RWebWindow::SetClearOnClose` function. It set handle like `shared_ptr<void>` which is cleared when all client connections are closed. It is typical use case for many web widgets.; 2. Provide `ClearOnClose` method for: RCanvas, RBrowser, RFitPanel, RGeomViewer classes. Clear consistently widgets when browser window is closed; 3. Fix problem in RBrowser during `TROOT` destructor. In such case all files instances are invalid and therefore has to be ""forgotten"". Provide special method in browsables to ""forget"" pointer on such objects.; 4. Implement custom visibility attributes for ""physical"" nodes in geometry viewer - feature is not provided in TGeo classes; 5. Let store geometry viewer settings in root macro, which may include geometry itself.; 6. Fully decouple functionality of geometry hierarchy and geometry GL widgets. All communication done via server; 7. Let configure mutex for RGeomDescription to be able use it from different threads at the same time; 8. Introduce signalling in `RGeomDescription` to get notification when widgets changing something inside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:887,config,configure,887,https://root.cern,https://github.com/root-project/root/pull/12463,1,['config'],['configure']
Modifiability,1. Introduce new `EvalBackend()` command argument that will supersede `BatchMode()`; 2. Improve documentation of `RooAbsPdf::fitTo()` and `createNLL()`; 3. Make it clear what functions need to be overload when one wants to customize the behavior of `RooAbsPdf::fitTo()` and `createNLL()` polymorphically; 4. Add documentation for the new `EvalBackend()` command argument. More detail in the commit descriptions. This is how the new documentation on the evaluation backends will look like in the doxygen (I fixed the word-order-typo in the first sentence after taking the screenshot...):. ![eval_backend](https://github.com/root-project/root/assets/6578603/f23ef6e1-2cd2-4291-b5f5-da731e5883fd),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12716:288,polymorphi,polymorphically,288,https://root.cern,https://github.com/root-project/root/pull/12716,1,['polymorphi'],['polymorphically']
Modifiability,"1. Introduce special timer to send data to clients. If not everything can be send at once, after short timeout will be tried again; 2. Extend functionality of control message, manage it per connection. All special messages like enabling editor, moving web browser, enable/disable tooltip - all belong now to control message; 3. Change message priority, try to send as much as possible. First one sends control message, then specially requests for menu or projection and finally update for canvas drawing.; 4. Implement `Raise() / Iconify()` methods, they fully depend on the web browser",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13285:135,Extend,Extend,135,https://root.cern,https://github.com/root-project/root/pull/13285,1,['Extend'],['Extend']
Modifiability,1. Let access histogram from TF1 on the client; 2. Histogram used as axes attributes storage; 3. Always convert TF1 into histogram on client; 4. Fix several problems in function calculation; 5. Resolve unzooming of Y scale on drawing with fMinimum/fMaximum configured; 6. Support custom axis labels on lego plots,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13138:257,config,configured,257,https://root.cern,https://github.com/root-project/root/pull/13138,1,['config'],['configured']
Modifiability,"1. Let configure `--web` also in batch mode; 2. Support `--web=server:port`; 3. Support `.mjs` extension, will be required for latest JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10089:7,config,configure,7,https://root.cern,https://github.com/root-project/root/pull/10089,1,['config'],['configure']
Modifiability,"1. Let interactively change configuration for draw object selection - like visibility level or maximal number of nodes. All these parameters combined together in configuration object, which can be send to server as JSON.; 2. Show actual statistic about number of meshes and faces in produced three.js geometry; 3. Let configure different light source (like in normal geometry viewer); 4. Provide JSROOT with correspondent changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4249:28,config,configuration,28,https://root.cern,https://github.com/root-project/root/pull/4249,3,['config'],"['configuration', 'configure']"
Modifiability,"1. List all windows volumes like C:, Q:,...; 2. Resolve windows links when appears; 3. Let configure file types in FileDialog (also when starts from client)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4744:91,config,configure,91,https://root.cern,https://github.com/root-project/root/pull/4744,1,['config'],['configure']
Modifiability,"1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled; 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve); 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14119:59,config,configured,59,https://root.cern,https://github.com/root-project/root/pull/14119,1,['config'],['configured']
Modifiability,1. Make CEF display working with latest CEF code; 2. Copy all necessary CEF files into ROOT binary directory - no need to have extra shell variables when ROOT is running; 3. Adjust Qt5WebEngine code - latest Qt 5.12 more strict with custom scheme definitions; 4. Let use CEF and Qt5 displays for any http address - not only RWebWindow.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3548:139,variab,variables,139,https://root.cern,https://github.com/root-project/root/pull/3548,1,['variab'],['variables']
Modifiability,"1. Memory leak - when ""pie"" draw option is used, created TPie object is not destroyed; 2. When tf3 draw option provided to histogram, it crashes `h3->Draw(""tf3"")` ; 3. ""TF3"" and ""ISO"" strings does not correctly suppressed from options when decoded; 4. TF3 pointer remains in global variable and not cleared when TF3 is deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4943:282,variab,variable,282,https://root.cern,https://github.com/root-project/root/pull/4943,1,['variab'],['variable']
Modifiability,1. Move openui5 package to `builtins/openui5` subdirectory; 2. Let install full openui5 library version from web when builtin_openui5=OFF; Can be required when users want to used other openui5 components which are not included in provided package.; 3. For developers let configure `$ENV{OPENUI5DIR}` when just via symbolic link existing version can be used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6710:271,config,configure,271,https://root.cern,https://github.com/root-project/root/pull/6710,1,['config'],['configure']
Modifiability,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11727:129,config,configured,129,https://root.cern,https://github.com/root-project/root/pull/11727,1,['config'],['configured']
Modifiability,"1. Rename `rootssh.sh` -> `rootssh`; 2. Let run commands on remote node with `rootssh` like; ```; [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 3. Let specify local port and browser kind for `rootssh`:; ```; [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'""; ``` ; 4. Provide usage printout when `rootssh` called without arguments; ; 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created.; 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used.; 7. Provide plugin to be able caret `TWebCanvas` via plugin manager.; 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures.; 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11822:568,plugin,plugin,568,https://root.cern,https://github.com/root-project/root/pull/11822,5,"['config', 'plugin']","['configured', 'plugin', 'plugins']"
Modifiability,"1. String always used as storage for `RColor`. Following values are supported:; * `#00FF00` - which is standard RGB ; * `#00FF0088` - standard RGBA; * `grey` - color name; * `[0.5]` - ordinal value to select color from current palette ; * `auto` - automatic color, calculated on client side using current palette and drawable index; 2. By this change simplify CSS syntax - now any color value can be assigned as; ```; line_color: blue; fill_color: auto; marker_color: [0.3]; ``` ; 3. Introduce `RAttrOnFrame`. It has extra `onframe` attribute which indicates where drawable drawn. ; Implement first for `RLine` class, which can be now inside or outside frame; 4. Support user coordinates for drawable inside frame, provide testing with `RLine` in draw_frame.cxx tutorial; 5. Let configure all margins with single parameter, called `margin_all` in CSS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8109:779,config,configure,779,https://root.cern,https://github.com/root-project/root/pull/8109,1,['config'],['configure']
Modifiability,"1. Support linear and radial gradients in JSROOT; 2. Extend `TColor::GetColor()` methods to use optional alpha parameter; 3. Provide static `TColor::GetLinearGradient()` and `TColor::GetRadialGradient()` to simplify creation of such objects; 4. Set r/g/b values of `TColor` in gradient classes, let use such gradient object in normal graphics - one gets mean color value in such case; 5. Simplify a lot Timur GL tutorials to handle custom colors / custom gradients. But also show in example how such gradients can be customized if necessary.; 6. Make gradient classes persistent to be able save them with other colors in ROOT files - to use in JSROOT.; 7. Use inherited constructors for gradient classes; 8. Provide JSROOT with gradients support. Also preliminary `TF3` support is included",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14002:53,Extend,Extend,53,https://root.cern,https://github.com/root-project/root/pull/14002,2,"['Extend', 'inherit']","['Extend', 'inherited']"
Modifiability,"1. Support unix sockets in `THttpServer`, fix civetweb warning; 2. Let configure unix socket for webgui widgets; 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket.; In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable.; This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes!. `rootssh.sh` also creates listener which get informed when new window is started on remote session; and automatically popup web browser using `xdg-open $url` command. Typical session should look like:; ```; [localhost] rootssh.sh user@remotehost; [remotehost] root --web=server -e ""new Browser""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11810:71,config,configure,71,https://root.cern,https://github.com/root-project/root/pull/11810,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"1. Support web-based geometry viewer. When clicking TGeoManager from the file, new tab with geometry viewer will be shown; 2. Make RBrowserWidget class - entity to handle different views in modular way; - RCanvas; - TCanvas; - Geometry viewer; - Code editor; - Image viewer; 3. Functionality of each RBrowserWidget loaded only when required. When RBrowser started neither TCanvas nor RCanvas is loaded. Only when any object is clicked, small internal plugin is loaded and canvas is instantiated. Same with geometry viewer.; 4. Small JSROOT optimization for generic embeding of web widgets; 5. Always handle mouse double-click on server side. Only `RBrowsable` class can provide necessary information that is the best way to handle double-click. It either display object in current editor/viewer/canvas or will start new widget.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7088:451,plugin,plugin,451,https://root.cern,https://github.com/root-project/root/pull/7088,1,['plugin'],['plugin']
Modifiability,"1. This automatically provides setter/getter methods and simplifies; access to fields. Now `RLine` inherit from `RAttrLine` and API changes are:; before: `line->AttrLine().SetWidth(10)`; now: `line->SetLineWidth(10)`; One still can do: `line1->AttrLine() = line2->AttrLine()` while RAttrLine class still provides method like; `RAttrLine& AttrLine() { return *this; }` . 2. Same done for RAttrFill, RAttrText, RAttrMarker and with used classes.; 3. Adjust tutorials and JSROOT code.; 4. Change RLegend class - split RLegend::REntry on two subclasses",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8274:99,inherit,inherit,99,https://root.cern,https://github.com/root-project/root/pull/8274,1,['inherit'],['inherit']
Modifiability,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13867:32,plugin,plugin,32,https://root.cern,https://github.com/root-project/root/pull/13867,2,['plugin'],['plugin']
Modifiability,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10852:404,variab,variable,404,https://root.cern,https://github.com/root-project/root/pull/10852,1,['variab'],['variable']
Modifiability,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14045:125,config,configured,125,https://root.cern,https://github.com/root-project/root/pull/14045,1,['config'],['configured']
Modifiability,1. Use std::vector instead of plain arrays; 2. More use of `nullptr`; 3. Avoid usage of global variables for local data in `TGraphPainter` class; 4. Test gPad before call gPad->GetView(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10831:95,variab,variables,95,https://root.cern,https://github.com/root-project/root/pull/10831,1,['variab'],['variables']
Modifiability,1. Using latest libpng; 2. Redefine Hash in image plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12797:50,plugin,plugin,50,https://root.cern,https://github.com/root-project/root/pull/12797,1,['plugin'],['plugin']
Modifiability,1. webgui batch only configured when no any extra args specified with `--web` call; 2. Let configure server port with argument like `--web=server:9200`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10080:21,config,configured,21,https://root.cern,https://github.com/root-project/root/pull/10080,2,['config'],"['configure', 'configured']"
Modifiability,"1.Let start fit panel from web-based canvas; 2. Let start TBrowser from web-based canvas; 3. Remove ""Experimental"" from TBrowser plugin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13527:129,plugin,plugin,129,https://root.cern,https://github.com/root-project/root/pull/13527,1,['plugin'],['plugin']
Modifiability,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:95580,variab,variable,95580,https://root.cern,https://github.com/root-project/root/issues/7432,1,['variab'],['variable']
Modifiability,"17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 0x0000152ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:6044,variab,variable,6044,https://root.cern,https://github.com/root-project/root/issues/12957,1,['variab'],['variable']
Modifiability,"1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")...; 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping; 1874: sh: Syntax error: Unterminated quoted string; 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed!; 1874: __cxa_thread_cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:1996,plugin,plugins,1996,https://root.cern,https://github.com/root-project/root/issues/13080,1,['plugin'],['plugins']
Modifiability,"19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(Form(""/afs/cern.ch/work/j/jfeng/private/quantum_computing/analysis/tmva/regression/t_%d.root"",t_i));; TF1 * tf = (TF1*) tf_fi.Get(""tf"");; double var_mean[8] = {-700, 250, 0.1, 100, 400, 6000, 0.1, 0.8};; mu = -700;; Delta = 250;; Ng = 0.1;; Ec = 100;; h = 400;; epsilon_c = 6000;; ng = 0.1;; Gamma = 0.8;. double MLP = reader->EvaluateMVA( ""MLP method"" );; double PI = tf->Eval(MLP);; cout << ""MLP = "" << MLP << endl;; cout << ""PI = "" << PI << endl;; //TFile fo(Form(""%10d.root"",irun), ""recreate"");; //fo.Close();; return 0;; }. In the MakeFile:. CXX=$(shell root-config --cxx); ROOTLIB=$(shell root-config --libs --glibs); ROOTLIB += -lRFIO -lMinuit -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT; FLIBS := -lifcore -static-libgcc -static-libstdc++ -std=c++11. all: generate; generate: ; $(CXX) generate.C -D__ROOTSHAREDLIBRARY__ -I$(ROOTSYS)/include -I./ $^ -o $@.exe $(ROOTLIB) $(FLIBS) -lMathMore -lCling; dump:; @echo $(ROOTSYS); clean: rm *.exe. I run it like:; make;; ./generate.exe. ### Setup; <!--; 1. ROOT version; 2. Operating system ; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: root6-14-04-icc19; Operating system: cc7 in lxplus7.cern.ch machines; ROOT is at /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:2565,config,config,2565,https://root.cern,https://github.com/root-project/root/issues/6904,2,['config'],['config']
Modifiability,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:36339,config,config,36339,https://root.cern,https://github.com/root-project/root/issues/10676,1,['config'],['config']
Modifiability,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428:6351,variab,variable,6351,https://root.cern,https://github.com/root-project/root/issues/16428,1,['variab'],['variable']
Modifiability,"2607947ee3 [RF][HF] Add missing LinkDefs for systematics classes in HistFactory; f8aa65e0cc [RF] Correctly reset y-axis limits after `RooCurve::shiftCurveToZero()`; 1b886c3e77 [RF] Improve Copy Constructor of HypoTestResult; 2e4b30b8c2 [RF] Better server redirection in compileForNormSet without attributes; d5ca98077e [RF] New function for server changing without setting attributes; 1f8a1666d1 [RF] Factor out marking compiled args in `NormalizationHelpers`; 7db5be20e9 [RF] Support multiple NLL with BatchMode existing at the same time; 24f1ca4fc1 [RF] Add exception if `RooAbsArg::_dataToken` is corrupted; ef69ad7633 [RF] Refactor BatchMode likelihood creation code; 364f67393d [RF] Disable RooFit multiprocess ProcessTimer test; e7d4ec3a69 [RF] Introduce `ROOFIT_MEMORY_SAFE_INTERFACES` macro; 3fd6057316 [RF] Use `RooFit::OwningPtr<>` also for RooAbsReal::createIntegral(); 8ad7711af6 [RF] Fix several memory leaks in `RooProdPdf::rearrangeProduct()`; ab420820bb [RF] Remove unused `binb` variable in RooBinnedGenContext; 81fbc904d4 [RF] Less manual memory management in RooFit; ff32c33446 [RF] Modernize memory management in RooStats; d89d54ce65 [RF] Fix `getPropagatedError()` negative parameter case for zero error; 4542e761eb [RF] Flag `RooAbsArg::getObservables()` as returning owning pointer; c246acb066 [RF] Always use `addOwned()` overload that takes `unique_ptr`; f17180742c [RF] Add `ExternalConstraints`, createNLL() and fitTo() to ModelConfig; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12905:2113,variab,variable,2113,https://root.cern,https://github.com/root-project/root/pull/12905,1,['variab'],['variable']
Modifiability,"2ecd023e41 in free () from /lib64/libc.so.6; #9 0x0000152ece69809f in __gnu_cxx::new_allocator<ROOT::TClassAlt*>::deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __t=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/ext/new_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:3308,variab,variable,3308,https://root.cern,https://github.com/root-project/root/issues/12957,2,['variab'],['variable']
Modifiability,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:1987,variab,variable,1987,https://root.cern,https://github.com/root-project/root/issues/11333,6,['variab'],['variable']
Modifiability,"33 in TFile::GetType (; name=0x7fffb0d42060 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", option=0x7fffffff15b9 """", prefix=0x7fffffff1460); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4685; #8 0x00007ffff6e1db61 in TFile::Open (; url=0x7fffb0d418e0 ""root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root"", options=0x7fffac8d86f9 """", ftitle=0x7fffac8d86f9 """", compress=101, netopt=0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/io/io/src/TFile.cxx:4065; #9 0x00007fffac890f2d in edm::InputFile::InputFile(char const*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #10 0x00007fffac8cd35d in edm::RootInputFileSequence::initTheFile(bool, bool, edm::InputSource*, char const*, edm::InputType) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #11 0x00007fffac8d037c in edm::RootPrimaryFileSequence::RootPrimaryFileSequence(edm::ParameterSet const&, edm::PoolSource&, edm::InputFileCatalog const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; --Type <RET> for more, q to quit, c to continue without paging--; #12 0x00007fffac895320 in edm::PoolSource::PoolSource(edm::ParameterSet const&, edm::InputSourceDescription const&) (); from /build/mrodozov/xrootd/local_install/CMSSW_12_0_X_2021-04-26-1100/lib/slc7_amd64_gcc900/pluginIOPoolInput.so; #13 0x00007fffac892ebf in edmplugin::PluginFactory<edm::InputSource*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:4303,plugin,pluginIOPoolInput,4303,https://root.cern,https://github.com/root-project/root/issues/8008,1,['plugin'],['pluginIOPoolInput']
Modifiability,"351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 5: Returned allocated memory in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 6: Potential memory leak in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:235:12: warning: Although the value stored to 'result' is used in the enclosing expression, the value is never actually read from 'result' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 're",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:19309,Adapt,AdaptiveIntegratorMultiDim,19309,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"3f5dc in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.22; #3 0x00007f731534206a in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.22; #4 <signal handler called>; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f7313841eee in TPad::ResizePad(char const*) () from /usr/lib64/root/libGpad.so.6.22; #6 0x00007f731384743a in TPad::TPad(char const*, char const*, double, double, double, double, short, short, short) () from /usr/lib64/root/libGpad.so.6.22; #7 0x0000000000400c6d in main (argc=1, argv=0x7ffd71ee3b98) at pad.cxx:9; ===========================================================. [user@lxplus733 ~]$ ; ```. ## Expected behavior; No FPE. ## To Reproduce; Code; ```; #include <TCanvas.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad(""my"",""my"",0,1,0,1);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad.cxx $(root-config --glibs --cflags --libs) -o pad -g; ```; run. ```; ./pad; ```. ## Setup; ROOT 6.22.02 and gcc as installed on lxplus machines. ## Additional context; A piece of #6344",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6374:2555,config,config,2555,https://root.cern,https://github.com/root-project/root/issues/6374,1,['config'],['config']
Modifiability,"44 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2378; 17: Calling 'KOrdStat<double, int>' in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2444; 18: Assuming 'work' is null in /opt/root_src/math/mathcore/inc/TMath.h:1347; 19: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1347; 20: 'n' is <= 'kWorkMax' in /opt/root_src/math/mathcore/inc/TMath.h:1351; 21: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1351; 22: 'ii' is >= 'n' in /opt/root_src/math/mathcore/inc/TMath.h:1357; 23: Loop condition is false. Execution continues on line 1360 in /opt/root_src/math/mathcore/inc/TMath.h:1357; 24: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/TMath.h:1363; 25: Assuming the condition is false in /opt/root_src/math/mathcore/inc/TMath.h:1364; 26: Taking false branch in /opt/root_src/math/mathcore/inc/TMath.h:1364; 27: Assigned value is garbage or undefined in /opt/root_src/math/mathcore/inc/TMath.h:1373; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142:4: warning: Value stored to 'nfnevl' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nfnevl' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:142; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143:4: warning: Value stored to 'relerr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'relerr' is never read in /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:143; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68:4: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'IntegrandTransform::Clone' in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:68; 2: Field 'fInfiniteInterval' is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 3: '?' condition is false in /opt/root_src/math/mathcore/src/GaussIntegrator.cxx:248; 4: Memory is allocated in /opt/root_src/math/mathcore/src/GaussIntegrator.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:18839,Adapt,AdaptiveIntegratorMultiDim,18839,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"4d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue?. **Versions and configuration**; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.19). **Steps to reproduce**; 1. open x64 native tools command prompt for VS 2019; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone https://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec & cd build_arm64ec; 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. ; 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**; ```; Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:1222,Config,Configuration,1222,https://root.cern,https://github.com/root-project/root/issues/11787,1,['Config'],['Configuration']
Modifiability,"539443 0.9586769214 0.0004229771 4.41E-04; 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04; 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.0005626696 -5.20E-04; 16 0.55 1.1022639865 1.1017900409 -0.0004739457 -4.30E-04; 17 0.65 1.1238640449 1.1235378523 -0.0003261926 -2.90E-04; 18 0.75 1.1456367871 1.1454695261 -0.0001672610 -1.46E-04; 19 0.85 1.1673890440 1.1673397731 -0.0000492709 -4.22E-05; 20 0.95 1.1890997634 1.1890973372 -0.0000024261 -2.04E-06; 21 1.00 1.2000000000 1.2000000000 0.0000000000 0.00E+00; ```. In case this is useful later, here is how I produced this validation; table. Print `FlexibleInterpVar` values for differnt parameters both with and; without this PR using the following code:. ```C++; using namespace RooFit;; using RooStats::HistFactory::FlexibleInterpVar;. RooRealVar param{""param"", ""param"", -1, 1};; param.setBins(20);. double nominal = 1.;; std::vector<double> low{0.90};; std::vector<double> high{1.20};. std::vector<std::unique_ptr<RooAbsReal>> interps;. for (int code = 0; code < 5; ++code) {; std::vector<int> codes{code};; interps.emplace_back(std::make_unique<FlexibleInterpVar>(""interp"", ""interp"", param, nominal, low, high, codes));; }. cout.precision(12);. param.setVal(-1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; for (int i = 0; i < param.numBins(); ++i) {; param.setBin(i);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; }; param.setVal(1);; std::cout << param.getVal() << "","" << interps[4]->getVal() << std::endl;; ```. Then I concatenated the output with and without this PR to a `.csv` file; that was analyzed with pandas:. ```Python; im",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:3123,Flexible,FlexibleInterpVar,3123,https://root.cern,https://github.com/root-project/root/pull/13067,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"6.22.02 build error on mac OS 10.15. Building 6.22.02 from source on macOS fails. Note I maintain the ROOT6 port in MacPorts, and my ultimate aim here is to update that build to 6.22.02 (currently 6.22.00). We use a number additional options and dependencies, hence the cmake configure command is a bit long (apologies). 6.22.00 builds just fine using the exact same configuration, so the issue is new to 6.22.02. I have attached the output from the configure and build steps (as outlined below). [configure.log](https://github.com/root-project/root/files/5231518/configure.log). [build.log](https://github.com/root-project/root/files/5231520/build.log). Unfortunately the build log error messages aren't hugely helpful (at least to me) in pointing to the issue, so I am hoping someone can offer suggestions as to where to look. First indication of a problem is; ```; [ 74%] Linking CXX shared library ../lib/libCore.so; <snip>; make[1]: *** read jobs pipe: Resource temporarily unavailable. Stop.; make[1]: *** Waiting for unfinished jobs....[ 74%] Linking CXX shared library ../lib/libCore.so; ```. ## Expected behavior; Builds OK. ## To Reproduce; ```; git clone git@github.com:root-project/root.git; cd root; git checkout v6-22-02; cd ..; mkdir install build; cd build; cmake -G ""CodeBlocks - Unix Makefiles"" -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=""/opt/local"" -DCMAKE_INSTALL_NAME_DIR=""/opt/local/lib"" -DCMAKE_SYSTEM_PREFIX_PATH=""/opt/local;/usr"" -DCMAKE_C_COMPILER=""$CC"" -DCMAKE_CXX_COMPILER=""$CXX"" -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_POLICY_DEFAULT_CMP0060=NEW -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_COLOR_MAKEFILE=ON -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_MODULE_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_PREFIX_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON -DCMAKE_INSTALL_RPATH=""/opt/local/lib"" -Wno-dev -Dgnuinstall=ON -Drpath=ON -DCMAKE_INSTALL_PREFIX=""/opt/local/libex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366:276,config,configure,276,https://root.cern,https://github.com/root-project/root/issues/6366,5,['config'],"['configuration', 'configure']"
Modifiability,"6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:1134,variab,variable,1134,https://root.cern,https://github.com/root-project/root/issues/10920,1,['variab'],['variable']
Modifiability,"64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMakeFiles/obj.clangAST.dir/DeclCXX.cpp.o:0000000000000000 t getThisObjectType(clang::ASTContext&, clang::FunctionProtoType const*, clang::CXXRecordDecl const*); ```; and; ```; rw-r--r--. 1 pcanal us_cms 68864 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/HessianModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 205896 Oct 4 22:51 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/Differentiator/CMakeFiles/cladDifferentiator.dir/BaseForwardModeVisitor.cpp.o; -rw-r--r--. 1 pcanal us_cms 3673354 Oct 4 22:52 ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a; -rw-r--r--. 1 pcanal us_cms 340264 Oct 12 15:46 ./interpreter/llvm-project/llvm/tools/clang/lib/AST/CMak",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668:2355,plugin,plugins,2355,https://root.cern,https://github.com/root-project/root/issues/16668,1,['plugin'],['plugins']
Modifiability,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52624,variab,variable,52624,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:652; 27: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 28: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:656; 29: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 30: Loop condition is false. Execution continues on line 668 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:640; 31: 'fitter' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:668; 32: Control jumps to the 'default' case at line 683 in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:670; 33: Assuming field 'fInteractive' is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 34: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:687; 35: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:689; /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818:4: warning: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'eff' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/tmva/tmva/src/MethodCuts.cxx:818; /opt/root_src/tmva/tmva/src/MethodDL.cxx:1348:52: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1174; 2: Assuming 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 3: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1219; 4: Assuming 'batchDepth' is not equal to 1 in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 5: Left side of '&&' is false in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1223; 6: 'batchDepth' is equal to 'batchSize' in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 7: Taking true branch in /opt/root_src/tmva/tmva/src/MethodDL.cxx:1232; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:84616,Variab,Variable,84616,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['Variable']
Modifiability,6; 4: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136317,Variab,VariableDecorrTransform,136317,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,6; 5: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never re,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136405,Variab,VariableDecorrTransform,136405,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,"6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:1990,variab,variable,1990,https://root.cern,https://github.com/root-project/root/issues/11954,1,['variab'],['variable']
Modifiability,"6dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:1212,extend,extended,1212,https://root.cern,https://github.com/root-project/root/pull/13842,1,['extend'],['extended']
Modifiability,"76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x00000001044d4a60 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TB",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:5246,config,config,5246,https://root.cern,https://github.com/root-project/root/pull/16501,1,['config'],['config']
Modifiability,"7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMult",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10732:1087,plugin,pluginFWCoreServicesPlugins,1087,https://root.cern,https://github.com/root-project/root/issues/10732,1,['plugin'],['pluginFWCoreServicesPlugins']
Modifiability,"8 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Set",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:4066,Config,Configuring,4066,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Config'],['Configuring']
Modifiability,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:18773,variab,variable,18773,https://root.cern,https://github.com/root-project/root/issues/7533,1,['variab'],['variable']
Modifiability,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:1530,variab,variable,1530,https://root.cern,https://github.com/root-project/root/pull/891,3,['variab'],['variable']
Modifiability,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:39277,variab,variable,39277,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,952:10: warning: Value stored to 'rg1' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg1' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:952; /opt/root_src/math/mathcore/src/TMath.cxx:961:10: warning: Value stored to 'rg2' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg2' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:961; /opt/root_src/math/mathcore/src/TMath.cxx:975:10: warning: Value stored to 'rg3' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'rg3' is never read in /opt/root_src/math/mathcore/src/TMath.cxx:975; /opt/root_src/math/mathcore/src/TMath.cxx:1782:13: warning: Value stored to 'v' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'v' during its initialization is never read in /opt/root_src/math/mathcore/src/TMath.cxx:1782; /opt/root_src/math/mathcore/src/TMath.cxx:2091:4: warning: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Double_t' should not be used as a loop counter in /opt/root_src/math/mathcore/src/TMath.cxx:2091; /opt/root_src/math/mathcore/src/triangle.c:4961:10: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming field 'verbose' is <= 2 in /opt/root_src/math/mathcore/src/triangle.c:8862; 2: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8862; 3: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 4: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:8872; 5: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:8876; 6: Taking false branch in /opt/root_src/math/mathcore/src/triangle.c:8876; 7: Assuming the condition is true in /opt/root_src/math/mathcore/src/triangle.c:8872; 8: Loop condition is true. Entering ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:29297,Variab,Variable,29297,https://root.cern,https://github.com/root-project/root/issues/7458,1,['Variab'],['Variable']
Modifiability,9f73 (/lib64/libpython3.6m.so.1.0+0xdff73) (BuildId: 465cb4e335b590c1226116d08bd8586548d89519); 1148: #94 0x562b1934eb95 in main (/usr/libexec/platform-python3.6+0xb95) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148: #95 0x7f7b13594d84 in __libc_start_main (/lib64/libc.so.6+0x3ad84) (BuildId: f65c85bfdb904b623d4fe2139b4d7c25cf8c0b58); 1148: #96 0x562b1934ed1d in _start (/usr/libexec/platform-python3.6+0xd1d) (BuildId: f236d8f7fc650f4e7be110015de1de715f85b20c); 1148:; 1148: 0x7f7b0e15ea65 is located 59 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1353:110' (0x7f7b0e15eaa0) of size 12; 1148: '<string literal>' is ascii string 'JSON_object'; 1148: 0x7f7b0e15ea65 is located 27 bytes to the left of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:33' (0x7f7b0e15ea80) of size 6; 1148: '<string literal>' is ascii string 'false'; 1148: 0x7f7b0e15ea65 is located 0 bytes to the right of global variable '<string literal>' defined in '/home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:1330:24' (0x7f7b0e15ea60) of size 5; 1148: '<string literal>' is ascii string 'true'; 1148: SUMMARY: AddressSanitizer: global-buffer-overflow (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db) in __asan_memcpy; 1148: Shadow bytes around the buggy address:; 1148: 0x0fefe1c23cf0: 00 00 03 f9 f9 f9 f9 f9 00 06 f9 f9 00 00 03 f9; 1148: 0x0fefe1c23d00: f9 f9 f9 f9 00 f9 f9 f9 07 f9 f9 f9 00 f9 f9 f9; 1148: 0x0fefe1c23d10: 00 00 01 f9 f9 f9 f9 f9 00 00 00 00 06 f9 f9 f9; 1148: 0x0fefe1c23d20: f9 f9 f9 f9 00 00 00 00 00 00 07 f9 f9 f9 f9 f9; 1148: 0x0fefe1c23d30: 00 00 00 00 05 f9 f9 f9 f9 f9 f9 f9 07 f9 f9 f9; 1148: =>0x0fefe1c23d40: 00 00 f9 f9 00 00 00 00 f9 f9 f9 f9[05]f9 f9 f9; 1148: 0x0fefe1c23d50: 06 f9 f9 f9 00 04 f9 f9 00 04 f9 f9 00 04 f9 f9; 1148: 0x0fefe1c23d60: 00 00 00 00 07 f9 f9 f9 f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629:16123,variab,variable,16123,https://root.cern,https://github.com/root-project/root/issues/11629,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49234,variab,variable,49234,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57714,variab,variable,57714,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54319,variab,variable,54319,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:66185,variab,variable,66185,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:5855; /opt/root_src/math/mathcore/src/triangle.c:6363:42: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:6363; /opt/root_src/math/mathcore/src/triangle.c:9471:7: warning: Value stored to 'farrightapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farrightapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9471; /opt/root_src/math/mathcore/src/triangle.c:9570:11: warning: Value stored to 'farleftapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farleftapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9570; /opt/root_src/math/mathcore/src/triangle.c:14976:7: warning: Dereference of null pointer (loaded from variable 'vpointlist') [clang-analyzer-core.NullDereference]; 1: Calling 'parsecommandline' in /opt/root_src/math/mathcore/src/triangle.c:15695; 2: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:3300; 3: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:3304; 4: Loop condition is false. Execution continues on line 3300 in /opt/root_src/math/mathcore/src/triangle.c:3304; 5: Loop condition is false. Execution continues on line 3496 in /opt/root_src/math/mathcore/src/triangle.c:3300; 6: Field 'poly' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 7: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 8: Field 'refine' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 9: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 10: Field 'quality' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 11: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:109201,variab,variable,109201,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability,":16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ROOT_prompt_0:1:1: error: must use 'class' tag to refer to type 'MyClass' in this scope; MyClass c;; ^; class ; ROOT_prompt_0:1:1: note: class 'MyClass' is hidden by a non-type declaration of 'MyClass' here; ROOT_prompt_0:1:9: error: variable has incomplete type 'MyClass'; MyClass c;; ^; libMyLibrary dictionary forward declarations' payload:5:62: note: forward declaration of 'MyClass'; class __attribute__((annotate(""$clingAutoload$MyClass.h""))) MyClass;; ^; root [1]; ```. ## Expected behavior. When using the same demonstrator code on Linux, everything goes as expected. ```; [bash][Legolas]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; root [1]; ```. ## To Reproduce. Just take the demonstrator code from https://github.com/krasznaa/root-boost-dictionary-error, tweak its [Makefile](https://github.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:10039,variab,variable,10039,https://root.cern,https://github.com/root-project/root/issues/6454,1,['variab'],['variable']
Modifiability,:176; 6: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:176; 7: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:183; 8: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:184; 10: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 11: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:185; 12: Assuming field 'fTransformedEvent' is not equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 13: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 14: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 15: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:193; 16: Assuming 'hasMaskedEntries' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 17: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:205; 18: Assuming 'ivar' is >= 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 19: Loop condition is false. Execution continues on line 219 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:216; 20: Forming reference to null pointer in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:219; /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/tmva/tmva/src/VariableImportance.cxx:321; /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216:10: warning: Value stored to 'numIndices' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'numIndices' is never read in /opt/root_src/tmva/tmva/src/VariableTransformBase.cxx:216; /opt/root_src/tmva/tmva/src/Volu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:136510,Variab,VariableDecorrTransform,136510,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,":355; #10 0x00007ffff30f8681 in TCling::CreateListOfBaseClasses (this=0x4b6670, ; cl=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/metacling/src/TCling.cxx:4292; #11 0x00007ffff260dc29 in TClass::GetListOfBases (this=0x32e8cc0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3649; #12 0x00007ffff260a96e in TClass::GetBaseClass (this=0x32e8cc0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:3890,Inherit,InheritsFrom,3890,https://root.cern,https://github.com/root-project/root/issues/11259,1,['Inherit'],['InheritsFrom']
Modifiability,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:111839,variab,variable,111839,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variable']
Modifiability,"::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`; and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:3765,config,configuration,3765,https://root.cern,https://github.com/root-project/root/issues/10107,1,['config'],['configuration']
Modifiability,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:108305,variab,variable,108305,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variable']
Modifiability,"; 1: Calling 'Classification::TrainMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:374; 2: Calling 'Classification::GetMethod' in /opt/root_src/tmva/tmva/src/Classification.cxx:338; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:388; 5: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:394; 6: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:398; 8: Calling 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 9: Value assigned to field 'fModelPersistence', which participates in a condition later in /opt/root_src/tmva/tmva/src/Classification.cxx:236; 10: Returning from 'Classification::GetMethodOptions' in /opt/root_src/tmva/tmva/src/Classification.cxx:405; 11: Calling 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 12: Calling constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 13: Value assigned to 'boostNum', which participates in a condition later in /opt/root_src/tmva/tmva/inc/TMVA/Option.h:101; 14: Returning from constructor for 'Option<int>' in /opt/root_src/tmva/tmva/inc/TMVA/Configurable.h:150; 15: Returning from 'Configurable::DeclareOptionRef' in /opt/root_src/tmva/tmva/src/Classification.cxx:410; 16: Assuming field 'fModelPersistence' is true in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Classification.cxx:415; 18: Assuming 'boostNum' is not equal to 0 in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 19: Taking false branch in /opt/root_src/tmva/tmva/src/Classification.cxx:423; 20: Value assigned to 'im' in /opt/root_src/tmva/tmva/src/Classification.cxx:429; 21: 'methBoost' initialized here in /opt/root_src/tmva/tmva/src/Class",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:24548,Config,Configurable,24548,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Config'],['Configurable']
Modifiability,; 8: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:897; 9: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 10: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:900; 11: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 12: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:903; 13: Assuming the condition is false in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 14: Taking false branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:906; 15: Taking true branch in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:909; 16: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/TransformationHandler.cxx:915; /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:139:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'cls' is >= 0 in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 2: Left side of '||' is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 4: Taking false branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:120; 5: 'm' initialized here in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:122; 6: Assuming 'm' is equal to null in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 7: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:123; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 9: Taking true branch in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:124; 10: Assuming 'ivar' is < 'nvar' in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; 11: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/VariableDecorrTransform.cxx:136; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:133594,Variab,VariableDecorrTransform,133594,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Variab'],['VariableDecorrTransform']
Modifiability,"; File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>; main(); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main; IPKernelApp.launch_instance(kernel_class=ROOTKernel); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance; app.initialize(argv); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner; return method(app, *args, **kwargs); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize; self.init_kernel(); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel; kernel = kernel_factory(parent=self, session=self.session,; File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance; inst = cls(*args, **kwargs); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__; self.magicloader = MagicLoader(self); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__; raise Exception(""Error importing Magic: %s""%module_path); Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic; ```; And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:; ```; input_line_37:1:10: fatal error: 'dlfcn.h' file not found; ^~~~~~~~~; input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'; (dlopen(""libRint.so"", RTLD_NOW)); ^; ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12951:1927,config,config,1927,https://root.cern,https://github.com/root-project/root/pull/12951,2,['config'],"['config', 'configurable']"
Modifiability,"; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous event boundary. This would result in a 'slightly' over-read; (some baskets might be read twice) rather than the wild useless over-read we had.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1967,enhance,enhancement,1967,https://root.cern,https://github.com/root-project/root/pull/1778,1,['enhance'],['enhancement']
Modifiability,";; // this should triggr the snapshot; *act;; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TRandom.h>. void toy() {; // comment this line out (i.e. single thread) won't reproduce the problem.; ROOT::EnableImplicitMT();; ROOT::RDataFrame emptydf{10000};; auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);; // create a histogram and trigger the event loop; df.Histo1D(""x"")->SaveAs(""hist.root"");; return;; }. int main() {; toy();; return 0;; }; ```; Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if ; https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690; is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on ; ```; ROOT Version: 6.28/08; Built for linuxx8664gcc on Oct 13 2023, 09:48:14; From tags/v6-28-08@v6-28-08; ```; and; ```; ROOT Version: 6.30/00; Built for linuxx8664gcc on Nov 26 2023, 23:25:40; From heads/v6-30-patches@tags/v6-30-00; ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora releas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14132:1896,config,config,1896,https://root.cern,https://github.com/root-project/root/issues/14132,1,['config'],['config']
Modifiability,"<TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of the diagnostics;. I figured this is worth an issue. Originally discovered in: https://github.com/key4hep/EDM4hep/issues/42#issuecomment-721167821",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:2582,plugin,plugin,2582,https://root.cern,https://github.com/root-project/root/issues/6791,1,['plugin'],['plugin']
Modifiability,"=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================; ```. ## Expected behavior; No crash. ## To Reproduce; Code. ```; #include <TCanvas.h>; #include <TLine.h>; #include <TPad.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; TLine* l= new TLine(0,1,0,1);; l->Paint();; delete l;; delete c;; delete C;; return 0;; }; ```. compile; ```; g++ pad3.cxx $(root-config --glibs --cflags --libs) -o pad3 -g; ```; run. ```; ./pad3; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7; and. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; on lxplus. ## Possible fix; Replace. ```; if (!gPad->IsBatch()); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);. ```; with. ```; if (!gPad->IsBatch() && GetPainter() ); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);; ```. in ``void TPad::PaintLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)``",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:2457,config,config,2457,https://root.cern,https://github.com/root-project/root/issues/6446,1,['config'],['config']
Modifiability,"=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch.; After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:1039,variab,variables,1039,https://root.cern,https://github.com/root-project/root/issues/8435,1,['variab'],['variables']
Modifiability,">covert</code>, <code>tape</code>; remove unnecessary <code>tap</code> <a href=""https://github.com/minimistjs/minimist/commit/49c5f9fb7e6a92db9eb340cc679de92fb3aacded""><code>49c5f9f</code></a></li>; <li>[Tests] add <code>aud</code> in <code>posttest</code> <a href=""https://github.com/minimistjs/minimist/commit/228ae938f3cd9db9dfd8bd7458b076a7b2aef280""><code>228ae93</code></a></li>; <li>[meta] add <code>safe-publish-latest</code> <a href=""https://github.com/minimistjs/minimist/commit/01fc23f5104f85c75059972e01dd33796ab529ff""><code>01fc23f</code></a></li>; <li>[meta] update repo URLs <a href=""https://github.com/minimistjs/minimist/commit/6b164c7d68e0b6bf32f894699effdfb7c63041dd""><code>6b164c7</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.5...v1.2.6"">v1.2.6</a> - 2022-03-21</h2>; <h3>Commits</h3>; <ul>; <li>test from prototype pollution PR <a href=""https://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb""><code>bc8ecee</code></a></li>; <li>isConstructorOrProto adapted from PR <a href=""https://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d""><code>c2b9819</code></a></li>; <li>security notice for additional prototype pollution issue <a href=""https://github.com/minimistjs/minimist/commit/ef88b9325f77b5ee643ccfc97e2ebda577e4c4e2""><code>ef88b93</code></a></li>; </ul>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.4...v1.2.5"">v1.2.5</a> - 2020-03-12</h2>; <h2><a href=""https://github.com/minimistjs/minimist/compare/v1.2.3...v1.2.4"">v1.2.4</a> - 2020-03-11</h2>; <h3>Commits</h3>; <ul>; <li>security notice <a href=""https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f""><code>4cf1354</code></a></li>; <li>additional test for constructor prototype pollution <a href=""https://github.com/minimistjs/minimist/commit/1043d212c3caaf871966e710f52cfdf02f9eea4b""><code>1043d21</code></a></li>; </ul>; <h2><a href=""https://github.com/minimis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11865:3033,adapt,adapted,3033,https://root.cern,https://github.com/root-project/root/pull/11865,1,['adapt'],['adapted']
Modifiability,"@bellenot I'm not sure what to do about windows, the configure command is empty there?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144:53,config,configure,53,https://root.cern,https://github.com/root-project/root/pull/6144,1,['config'],['configure']
Modifiability,"@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1923,extend,extended,1923,https://root.cern,https://github.com/root-project/root/issues/10478,1,['extend'],['extended']
Modifiability,"@mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115:96,config,configuration,96,https://root.cern,https://github.com/root-project/root/pull/14115,1,['config'],['configuration']
Modifiability,"@pcanal - this is the refactoring you requested in #240 . Since it's now more visible, I also added a few small comments in `RConfig.h` about when these macros should be utilized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/242:22,refactor,refactoring,22,https://root.cern,https://github.com/root-project/root/pull/242,1,['refactor'],['refactoring']
Modifiability,"A `CMAKE_INSTALL_PYTHONDIR` build option has been added so that it is now possible to customize the installation; directory of PyROOT & friends rather than forcing users/packagers to install PyROOT along the C++ libraries (which in turn makes it necessary to have a non-standard PYTHONPATH set otherwise ROOT.py is not found). At least as a first step, we limit the new feature to the case of new PyROOT,; non-Windows platforms and single-python builds. Python modules are now installed in `CMAKE_INSTALL_PYTHONDIR`, which for backward-compatibility defaults to the same value as `CMAKE_INSTALL_LIBDIR` when not set explicitly at cmake configuration time. Note that treatment of `libcppyy.so` and `libcppyy_backend.so` is special: these libraries are needed by both python modules (namely, by cppyy) and C++ libraries (e.g. by `TPython`), so if `CMAKE_INSTALL_PYTHONDIR` is different from `CMAKE_INSTALL_LIBDIR` we install these files in `CMAKE_INSTALL_LIBDIR` but also add symlinks to them in `CMAKE_INSTALL_PYTHONDIR`. The cmake code that adds the symlinks is ugly but I could not make it work in any other way. Many thanks to @amadio for all the help getting this working. Note that this feature is necessary to properly package ROOT with new PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6054:636,config,configuration,636,https://root.cern,https://github.com/root-project/root/pull/6054,1,['config'],['configuration']
Modifiability,A bunch of improvements to distributed module:; 1. Add all sources to the `py_compile` command in cmake; 2. Use postponed evaluation for type hints and avoid implicit import ROOT; 3. Test that `import DistRDF` has no side-effects: no implicit importing of ROOT and no implicit change of environment variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11241:299,variab,variables,299,https://root.cern,https://github.com/root-project/root/pull/11241,1,['variab'],['variables']
Modifiability,"A couple broken tutorials were fixed. Several variable names were changed for improved clarity as a well as compatibility with the older version of the interpreter. The syntax `~~~` was replaced with the more universal Markdown syntax ``` ``` ```. Several bug fixes and improvements were made to the convertonotebook script. this includes capitalizing the first letter in every Markdown cell, and ensuring the link in the header is reproduced appropriately. Lastly, many aesthetic improvements were made to the tutorials, including ensuring tabs are three spaces, and styling important comments with Markdown.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/217:46,variab,variable,46,https://root.cern,https://github.com/root-project/root/pull/217,1,['variab'],['variable']
Modifiability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7343:70,extend,extended,70,https://root.cern,https://github.com/root-project/root/pull/7343,1,['extend'],['extended']
Modifiability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7349:70,extend,extended,70,https://root.cern,https://github.com/root-project/root/pull/7349,1,['extend'],['extended']
Modifiability,"A new `xRooFit/Config.h` header is introduced to configure the xRooFit; namespace without using compiler flags. Also, a symlink to `inc/RooFit` is replaced with an; `add_include_directories` entry in the CMakeFiles, because the symlink; doesn't work on Windows. In a separate commit: the right type to use `std::vector::at()` is `size_t`, and like this we; avoid the problem that `ssize_t` is not defined on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11932:15,Config,Config,15,https://root.cern,https://github.com/root-project/root/pull/11932,2,"['Config', 'config']","['Config', 'configure']"
Modifiability,"A new class DFDescription is introduced.; It has 2 member strings, corresponding to the brief and the full description.; It allows more interactive output of these strings. RInterface::Describe now returns a DFDescription object.; As brief description is the output from RInterface::DescribeDataset.; As full description is the remaining code from RInterface::Describe.; Moreover, RInterface::DescribeDataset is now a private method. RDFDescription has the following methods:; * AsString(bool) -> returning brief/full description as a string; * Print(bool) -> printing the content of AsString(bool); * overloaded<< -> returns ostream corresponding to AsString(shortFormat=false); * printValue -> returns string corresponding to AsString(shortFomat=false); * __repr__ pythonization -> assigning __repr__ to AsString(shortFormat=false). Tests and Tutorials were adapted correspondingly. This PR fixes #8893",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9597:860,adapt,adapted,860,https://root.cern,https://github.com/root-project/root/pull/9597,2,['adapt'],['adapted']
Modifiability,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6231:9,refactor,refactoring,9,https://root.cern,https://github.com/root-project/root/pull/6231,1,['refactor'],['refactoring']
Modifiability,A variable transformation method Variance Threshold (VT) has been added in DataLoader class which computes the variance of all variables and return a new DataLoader with the selected variables which lie above a specific threshold. I have also created a Jupyter [notebook](https://github.com/abhinavmoudgil95/tmva-notebooks/blob/master/VarianceThreshold.ipynb) to demonstrate it. . Kindly review. ; cc: @omazapa @lmoneta,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/179:2,variab,variable,2,https://root.cern,https://github.com/root-project/root/pull/179,3,['variab'],"['variable', 'variables']"
Modifiability,Actually 'inherit' compression setting even if TTree is no attached.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6351:10,inherit,inherit,10,https://root.cern,https://github.com/root-project/root/pull/6351,1,['inherit'],['inherit']
Modifiability,Adapt ROOT fitting to the new generalized Executor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7002:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/7002,1,['Adapt'],['Adapt']
Modifiability,Adapt TMVA::RandomGenerator for use with std::shuffle(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1449:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/1449,1,['Adapt'],['Adapt']
Modifiability,Adapt TTree::GetEntry to use TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/390:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/390,1,['Adapt'],['Adapt']
Modifiability,Adapt TTreeProcessorMT to use TThreadExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/388:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/388,1,['Adapt'],['Adapt']
Modifiability,Adapt tests to work with zlib-ng,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14295:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/14295,1,['Adapt'],['Adapt']
Modifiability,Adapt the code to RBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11729:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/11729,1,['Adapt'],['Adapt']
Modifiability,Adapt to gfal2 2.10 - uses a different #define,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/106:0,Adapt,Adapt,0,https://root.cern,https://github.com/root-project/root/pull/106,1,['Adapt'],['Adapt']
Modifiability,Adapting to a new field in Python 3.12:; https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_watched. Corresponding CPyCppyy PR: https://github.com/wlav/CPyCppyy/pull/24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15072:0,Adapt,Adapting,0,https://root.cern,https://github.com/root-project/root/pull/15072,1,['Adapt'],['Adapting']
Modifiability,Add HTTP Bearer token to Davix wrapper from config or env,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6818:44,config,config,44,https://root.cern,https://github.com/root-project/root/pull/6818,1,['config'],['config']
Modifiability,Add N-dimensional and more flexible histogram filling to RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499:27,flexible,flexible,27,https://root.cern,https://github.com/root-project/root/pull/7499,1,['flexible'],['flexible']
Modifiability,"Add a new method TClass::GetListOfAllBases to retrieve all the base classes in the full inheritance chain of a class. Use the new function to correctly retrieve information about the hierarchy of a class type in cppyy. Related to #8817 , not a final solution but I'd like to see if it brings hell in the CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8834:88,inherit,inheritance,88,https://root.cern,https://github.com/root-project/root/pull/8834,1,['inherit'],['inheritance']
Modifiability,"Add an (almost) `root-config` equivalent script for Windows, but unfortunately not usable to compile code in a terminal, since command substitution doesn't work in the Windows command prompt...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:22,config,config,22,https://root.cern,https://github.com/root-project/root/pull/6733,1,['config'],['config']
Modifiability,Add commented code to httpsccess.C macro which configures authentication. And server can be used with external JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12889:47,config,configures,47,https://root.cern,https://github.com/root-project/root/pull/12889,1,['config'],['configures']
Modifiability,Add config switch to disable (x)proofd. Default OFF.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5432:4,config,config,4,https://root.cern,https://github.com/root-project/root/pull/5432,1,['config'],['config']
Modifiability,Add env variable to limit number of threads used by ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805:8,variab,variable,8,https://root.cern,https://github.com/root-project/root/issues/9805,1,['variab'],['variable']
Modifiability,Add missed $ sign before env var in thisroot.fish config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7953:50,config,config,50,https://root.cern,https://github.com/root-project/root/pull/7953,1,['config'],['config']
Modifiability,Add possibility to extend XML Buffer size for XMNL I/O in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2224:19,extend,extend,19,https://root.cern,https://github.com/root-project/root/pull/2224,1,['extend'],['extend']
Modifiability,Add possibility to specify number of threads in PyKeras and set specific Tensorflow session config options,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2566:92,config,config,92,https://root.cern,https://github.com/root-project/root/pull/2566,1,['config'],['config']
Modifiability,Add root-config.bat for Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6733:9,config,config,9,https://root.cern,https://github.com/root-project/root/pull/6733,1,['config'],['config']
Modifiability,"Add scaling VarTransform functionality to TMVA preproccessing (like normalisation it linearly scales the data but the sign of the input and output data is retained). I have added to the functionality of the VariableNormalizeTransform class in the style of the VariableGaussTransform class to transform data such that it remains in the range of [-1,1], there is no offset, so the sign of the input data is unchanged by the transformation. . This is proving essential for my neural network analyses that treat a detector hit data like an image classification problem and use ReLU activation functions at the beginning of my network. I have also added a description to the TMVA documentation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141:207,Variab,VariableNormalizeTransform,207,https://root.cern,https://github.com/root-project/root/pull/4141,2,['Variab'],"['VariableGaussTransform', 'VariableNormalizeTransform']"
Modifiability,"Add speedup printing, improve legibility, refactorization. Speedup printing can still be improved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1068:42,refactor,refactorization,42,https://root.cern,https://github.com/root-project/root/pull/1068,1,['refactor'],['refactorization']
Modifiability,Add support for LSTM and GRU Layers and add implemention all RNN layers using cuDNN,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:29,Layers,Layers,29,https://root.cern,https://github.com/root-project/root/pull/4911,2,"['Layers', 'layers']","['Layers', 'layers']"
Modifiability,Add support for abi-tags (adapted from Fedora's patch),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/124:26,adapt,adapted,26,https://root.cern,https://github.com/root-project/root/pull/124,1,['adapt'],['adapted']
Modifiability,"Add the missing `--prefix` flag, properly set `%ROOTSYS%` when called from the build directory, and therefore fix the variables relative to `%ROOTSYS%`, like for example `--tutdir` I will fix the `CMakeLists.txt` of `roottest` once this PR is merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13347:118,variab,variables,118,https://root.cern,https://github.com/root-project/root/pull/13347,1,['variab'],['variables']
Modifiability,Add the new operator developed by Aaradhya Saxena. This PR extends #8882 and updates to the new Session class of Sofie. ; It includes also the test for Batch normalization operator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9307:59,extend,extends,59,https://root.cern,https://github.com/root-project/root/pull/9307,1,['extend'],['extends']
Modifiability,Added RNTupleTTreeCheckerFiles + adapted main/CMakeLists & tree/ntupl…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15904:33,adapt,adapted,33,https://root.cern,https://github.com/root-project/root/pull/15904,1,['adapt'],['adapted']
Modifiability,Added a search range to TH1::FindFirst(Last)Bin and refactor TH1::FindFirst(Last)Bin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3399:52,refactor,refactor,52,https://root.cern,https://github.com/root-project/root/pull/3399,1,['refactor'],['refactor']
Modifiability,"Added notebooks to tutorials, fixed other notebooks, changed variable name",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/210:61,variab,variable,61,https://root.cern,https://github.com/root-project/root/pull/210,1,['variab'],['variable']
Modifiability,"Added support for the VecGeom library as external package (-Dvecgeom). Creating new library libConverterVG within geom module. This contains the conversion interface for ROOT shapes into vecgeom ones, activated using the plugin mechanism from ROOT. Included also the class TGeoVGShape bridging TGeoShape methods to either VecGeom solid (navigation) or existing ROOT shape (visualisation and the rest). The conversion can be done once a ROOT geometry is in memory using:; TVirtualGeoConverter::Instance()->ConvertGeometry(); Once this is done, all TGeo functionality and tests can be accessed as for a standard TGeo geometry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/156:221,plugin,plugin,221,https://root.cern,https://github.com/root-project/root/pull/156,2,['plugin'],['plugin']
Modifiability,Added the new ThreadPool class sharing TProcPool's MapReduce methods signature. Refactored the code so ThreadPool and TProcPool inherit from the new parent TPool.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/148:80,Refactor,Refactored,80,https://root.cern,https://github.com/root-project/root/pull/148,2,"['Refactor', 'inherit']","['Refactored', 'inherit']"
Modifiability,Adding code generation and AD support for the final class in upstream RooFit that is used in the CMS Higgs discovery workspace: the RooBernstein. Also:. * fix missing variable warning in `RooCBShape.cxx`. * fix AD support for RooLandau by using code that clad can digest. * implement test for RooLandau fits with AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15491:167,variab,variable,167,https://root.cern,https://github.com/root-project/root/pull/15491,1,['variab'],['variable']
Modifiability,Adding corrected C++ std flags for current compiler for root-config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3411:61,config,config,61,https://root.cern,https://github.com/root-project/root/pull/3411,1,['config'],['config']
Modifiability,"Adding the bin width in the TH1::ComputeIntegral method, to handle histograms with non-uniform binning. # This Pull request:. ## Changes or fixes:. Modified the TH1::ComputeIntegral method, used in the TH1::GetRandom method, by multiplying the ""y"" variable (bin content) by the bin width. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). Not yet, since this has to be discussed with the ROOT developers. It has to be understood what a ""random extraction from a histogram"" should represent. This PR fixes 9530",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9538:248,variab,variable,248,https://root.cern,https://github.com/root-project/root/pull/9538,1,['variab'],['variable']
Modifiability,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:124,config,configuration,124,https://root.cern,https://github.com/root-project/root/pull/11621,1,['config'],['configuration']
Modifiability,"Addresses ROOT-9311. The verbosity level can also be changed with the environment variable; XRD_LOGLEVEL. The possible levels are: ""Info"", ""Debug"", ""Dump"" .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2243:82,variab,variable,82,https://root.cern,https://github.com/root-project/root/pull/2243,1,['variab'],['variable']
Modifiability,Addressing issue #7662 for bash root-config. Pretty much mirrored what was done for root-config.bat in #7663. Handle unknown feature. Unknown option is already handled. Preview:. spectre@localhost ~/root/compiled/bin; (improve-root-config-bash)> ./root-config --has-xml --has-cxx14 --has-improved; yes yes --has-improved: unknown feature!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8106:37,config,config,37,https://root.cern,https://github.com/root-project/root/pull/8106,4,['config'],"['config', 'config-bash']"
Modifiability,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:782,plugin,plugin,782,https://root.cern,https://github.com/root-project/root/pull/3030,1,['plugin'],['plugin']
Modifiability,Adds pythonizations for the `RooStats::SPlot` class. The constructor(which automatically calls `AddSWeight()`) and the `AddSWeight` method follows command argument pythonization ( `**kwargs` -> `RooCmdArgs`) which makes configuring options more pythonic. Also adds a translated RooStats tutorial which uses the added pythonisations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16333:220,config,configuring,220,https://root.cern,https://github.com/root-project/root/pull/16333,1,['config'],['configuring']
Modifiability,"Adds refactored BDT inference engine (WIP PR #4351) and frontend classes. The current workflow looks like this:. **External training:**; ```python; x, y = ... some dataset ...; xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=3); xgb.fit(x, y); # Convert to model understood by the inference engine; ROOT.TMVA.Experimental.SaveXGBoost(xgb, ""myBDT"", ""bdts.root""); ```. **Application (Python):**; ```python; bdt = ROOT.TMVA.Experimental.RBDT[](""myBDT"", ""bdts.root""); # Native numpy support; x = np.array(... some data ...); y = bdt.Compute(x); ```. **Application (C++):**; ```cpp; TMVA::Experimental::RBDT bdt(""myBDT"", ""bdts.root"");; // Single event inference; auto y = bdt.Compute({... some intializer list resolving to a std::vector ... });; // Batch inference; RTensor<float> x({ ... shape ...});; auto y2 = bdt.Compute(x);; ```. **Application (RDataFrame):**; ```cpp; TMVA::Experimental::RBDT bdt(""myBDT"", ""bdts.root"");; ROOT::RDataFrame df(...);; auto df2 = df.Define(""y"", TMVA::Experimental::Compute<N, float>(bdt), { ... N inputs ...});; ```. Comparing against XGBoost in the Python application, we outperform them currently by a factor of 4 (without jitted backend). To be improved!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4401:5,refactor,refactored,5,https://root.cern,https://github.com/root-project/root/pull/4401,1,['refactor'],['refactored']
Modifiability,"Aesthetics fixes, variable names changes, markdown update",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/217:18,variab,variable,18,https://root.cern,https://github.com/root-project/root/pull/217,1,['variab'],['variable']
Modifiability,After #3961 one should inform users that method not yet implemented for all plugins; Also fix introduced compiler warnings,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4017:76,plugin,plugins,76,https://root.cern,https://github.com/root-project/root/pull/4017,1,['plugin'],['plugins']
Modifiability,"After commit a27e60a6d4f, it is not important anymore that only the variables used by the expression are passed to RooFormula. Removing the corresponding warnings helps to get rid of useless warnings in the case where you want to try out variations of the formula that omit certain terms, and in particular it helps in; `RooAbsData::reduce()`, where the formula is always passed all the varaiables in the dataset, whether the reduction uses them or not. To be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15266:68,variab,variables,68,https://root.cern,https://github.com/root-project/root/pull/15266,1,['variab'],['variables']
Modifiability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:41,config,configuration,41,https://root.cern,https://github.com/root-project/root/pull/15401,1,['config'],['configuration']
Modifiability,After introducing cling it is not allowed to redefine already existing variables in the macro.; Therefore one always should use unique names.; Also type of created variable always should be specified - at least `auto`.; Now one can store geometry which is defined in `tutorials/geom/mp3player.C` macro together with all other components. Adjust `tutorials/geom/mp3player.C` macro to avoid many duplicated transformation objects - it is enough to have few of them. Do not use canvas with spaces in names in `tutorials/geom/geodemo.C`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11900:71,variab,variables,71,https://root.cern,https://github.com/root-project/root/pull/11900,2,['variab'],"['variable', 'variables']"
Modifiability,After investigating the bug reported here. https://sft.its.cern.ch/jira/browse/ROOT-10626. we noticed that the deprecated variables; PYTHON_EXECUTABLE; PYTHON_INCLUDE_DIRS; PYTHON_LIBRARIES; PYTHON_VERSION_MAJOR; PYTHON_VERSION_MINOR; PYTHON_VERSION_STRING; NUMPY_FOUND; NUMPY_INCLUDE_DIRS; are not set correctly in the CMakeCache. This should fix the problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5184:122,variab,variables,122,https://root.cern,https://github.com/root-project/root/pull/5184,2,['variab'],['variables']
Modifiability,"After my previous work on the RooFit minimizer interfaces, it is relatively easy to allow passing a custom gradient function to the RooMinimizer constructor. The interface might still evolve in the future, but this commit is still a milestone because now we can get actual `RooFitResult` objects that were obtained minimizing a RooFuncWrapper that wraps both the likelihood and the gradient code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12521:184,evolve,evolve,184,https://root.cern,https://github.com/root-project/root/pull/12521,1,['evolve'],['evolve']
Modifiability,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:50,rewrite,rewrite,50,https://root.cern,https://github.com/root-project/root/pull/6632,1,['rewrite'],['rewrite']
Modifiability,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:859,inherit,inherit,859,https://root.cern,https://github.com/root-project/root/issues/11867,1,['inherit'],['inherit']
Modifiability,"After updating to `clang-14.0.6-1.module_el8.7.0+1198+0c3eb6e2.x86_64`, many tests started failing when compiling ROOT with Clang (134 tests in my configuration). The reason seems to be that Clang is now built with [`GCC_INSTALL_PREFIX=/opt/rh/gcc-toolset-12/root/usr`](https://git.centos.org/rpms/clang/c/4e0495208f843a286dc0d06d9abdc3433a66983a) to detect and use `libstdc++` from GCC 12. Even if that was not the case, https://github.com/llvm/llvm-project/commit/35aaf548237a4f213ba9d95de53b33c5ce1eadce in Clang 15 will have a similar effect for people building the compiler from source. According to our own documentation, ROOT does not guarantee [""compatibility with compilers shipped with `devtoolsets` on CentOS or Red Hat""](https://root.cern/install/build_from_source/#caveats) which right now only leaves building with the system-default GCC 8.5 to get a fully working installation of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11601:147,config,configuration,147,https://root.cern,https://github.com/root-project/root/issues/11601,1,['config'],['configuration']
Modifiability,"All CMake files should have a call to the `project()` command. In particular,; not having the `project()` call here makes it impossible to configure standalone; Minuit2 with Clang for macOS, see; https://gitlab.kitware.com/cmake/cmake/issues/17712#note_371862",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5016:139,config,configure,139,https://root.cern,https://github.com/root-project/root/pull/5016,1,['config'],['configure']
Modifiability,Allow CMake to configure with nvc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14370:15,config,configure,15,https://root.cern,https://github.com/root-project/root/pull/14370,1,['config'],['configure']
Modifiability,Allow plugins to handle custom pragmas.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2769:6,plugin,plugins,6,https://root.cern,https://github.com/root-project/root/pull/2769,1,['plugin'],['plugins']
Modifiability,Allow setting up extra cling flags via EXTRA_CLING_ARGS env variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524:60,variab,variable,60,https://root.cern,https://github.com/root-project/root/pull/1524,1,['variab'],['variable']
Modifiability,Allow the training to be done multiple times for the BDT by setting a flag to false.; Clear the methods map in VariableImportance to allow for the next training to be made.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/286:111,Variab,VariableImportance,111,https://root.cern,https://github.com/root-project/root/pull/286,1,['Variab'],['VariableImportance']
Modifiability,Allow to populate ROOT at configure time using FetchContent (part1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9516:26,config,configure,26,https://root.cern,https://github.com/root-project/root/pull/9516,1,['config'],['configure']
Modifiability,Allows -Dfail-on-missing -Dpyroot3 to fail configuration if only pyroot2 can be built.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5500:43,config,configuration,43,https://root.cern,https://github.com/root-project/root/pull/5500,1,['config'],['configuration']
Modifiability,Allows for extending not only entire fields and their columns but also only columns for existing fields.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16111:11,extend,extending,11,https://root.cern,https://github.com/root-project/root/pull/16111,1,['extend'],['extending']
Modifiability,Allows to configure CUDA sm level for Cling CUDA tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7190:10,config,configure,10,https://root.cern,https://github.com/root-project/root/pull/7190,1,['config'],['configure']
Modifiability,"Allows to create images for vector of pads at once.; Using ""%d"" or ""%03d"" or any similar printf qualifier one can put image; number into the file name. Like ""image%d.png"". Special handling for PDF. If qualifier in PDF file name not specified,; all provided pads will be placed into single PDF document. Can use normal (default) and web-based image production.; Only if web display is explicitly specified with `root --web`, will run chrome browser. . For web following formats are supported: ""png"", ""svg"", ""pdf"", ""jpg"", ""jpeg"", ""webp"". Also extend export into ROOT file - now it is possible to append object to existing ROOT file using ""a"" option.; Means if ""file.root"" is specified, all pads will be saved into that single ROOT file.; But if file name includes printf qualifier like ""file%d.root"", N root files will be created. ; Same is for XML files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13505:541,extend,extend,541,https://root.cern,https://github.com/root-project/root/pull/13505,1,['extend'],['extend']
Modifiability,Also let configure some attributes via environment variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2927:9,config,configure,9,https://root.cern,https://github.com/root-project/root/pull/2927,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,Also make isBinnedDistribution depend on the vars rather than always return true. ## Changes or fixes:. Makes ParamHistFunc more flexible/powerful. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10516:129,flexible,flexible,129,https://root.cern,https://github.com/root-project/root/pull/10516,1,['flexible'],['flexible']
Modifiability,"Also, update the doxygen configuration file such that CUDA sources and headers are scanned as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13419:25,config,configuration,25,https://root.cern,https://github.com/root-project/root/pull/13419,1,['config'],['configuration']
Modifiability,And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16076:15,config,configuration,15,https://root.cern,https://github.com/root-project/root/pull/16076,1,['config'],['configuration']
Modifiability,And refactor the code to make it clearer and ready to accommodate cheaply new cases if needed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2753:4,refactor,refactor,4,https://root.cern,https://github.com/root-project/root/pull/2753,1,['refactor'],['refactor']
Modifiability,Apache 2.4 has now own FastCGI implementation and uses different name for parameter.; Also update docu with example FastCGI configuration for Apache 2.4 - older version no longer relevant,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6334:124,config,configuration,124,https://root.cern,https://github.com/root-project/root/pull/6334,1,['config'],['configuration']
Modifiability,"Apologies for making this an annoying bug report :cry:, ; but I unfortunately, so far, wasn't able to create a small self-contained reproducer that triggers the bug. . But with LCG_99 and the following snippet I can at least show the problem. ; ```py; import cppyy; cppyy.cppdef(r""""""; using vec = SmartRefVector<DataObject>;; using ref = SmartRef<DataObject>;; """"""). vec = cppyy.gbl.vec(); ref = cppyy.gbl.ref(); vec.push_back(ref); vec.size(); print(vec[0]); print(vec.at(0)); ```. Running:; ```shell; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; python test.py; ```; will print: ; ```; <cppyy.gbl.SmartRefVector<DataObject> object at 0x83e0f00>; <cppyy.gbl.SmartRef<DataObject> object at 0xcf6b7c0>; ```. If you try the same on an older ROOT version e.g. with LCG_97a (`source /cvmfs/sft.cern.ch/lcg/views/LCG_97a/x86_64-centos7-gcc9-opt/setup.sh`), this will print:; ```; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; <ROOT.SmartRef<DataObject> object at 0xaac7ac0>; ```. So in ROOT 6.22 the `operator[]` in python somehow doesn't work correctly for this class.; Now as I said, I wish I could have provided an easier reproducer, and I'll have another go at it tomorrow, but for now this is the best I could come up with. ; The `SmartRefVector` is part of the `Gaudi` project and can be found [here](https://gitlab.cern.ch/gaudi/Gaudi/-/blob/master/GaudiKernel/include/GaudiKernel/SmartRefVector.h). ; I've tried creating a simplified version of the `SmartRefVector`, but that didn't exhibit the same problem so it's apparently not as simple as blaming it on the inheritance on `std::vector` which of course isn't ideal... :see_no_evil:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179:1601,inherit,inheritance,1601,https://root.cern,https://github.com/root-project/root/issues/7179,1,['inherit'],['inheritance']
Modifiability,"Apparently, this test continues to be broken for some CI configs, which needs to be investigated carefully; thus disable temporarily. Related PRs fixing issues found while investigating this test: #13021, #13022.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13023:57,config,configs,57,https://root.cern,https://github.com/root-project/root/pull/13023,1,['config'],['configs']
Modifiability,Apply some bug fixes in the TKDE class.; - Fix initialization for the automatic binning case; - Fix setting the bins using the setter functions.; - Fix mirroring for binned case (fix ROOT-8488); - Fix MirrorAsym case ; - Fix computation of non-adaptive bandwidth for binned case; ; Add also some improvements in the class avoid some unneeded re-initialization and some small speedup in the kernel calculations.; Improve also the documentations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7096:244,adapt,adaptive,244,https://root.cern,https://github.com/root-project/root/pull/7096,1,['adapt'],['adaptive']
Modifiability,"Apply some small improvements in Minuit2. ; When using strategy 0 (i.e. when Hesse is not computed at the end of the minimization), the same state is added 2 times in the FunctionMinimum class. This is now fixed by adding a flag runHessian in the VariableMetric code. Add another improvement: do not compute Hessian during the iteration.When not using debug mode the Hessian, which requires a matrix inversion, was computed for each iteration. This is now fixed by avoid its computation, that is not needed by the algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7109:247,Variab,VariableMetric,247,https://root.cern,https://github.com/root-project/root/pull/7109,1,['Variab'],['VariableMetric']
Modifiability,Apply the same CMAKE_ARCHIVE_OUTPUT_DIRECTORY for all configurations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4396:54,config,configurations,54,https://root.cern,https://github.com/root-project/root/pull/4396,1,['config'],['configurations']
Modifiability,"As a follow-up from PR #12975, this pull request enables fetching up-to-date content for the given branch of a related repository. Before this patch, a related repository (roottest, etc.), was cloned if not found. It is, however, useful to be able to also checkout an up-to-date branch in an existing repository, e.g. for the new CI. This behavior is controlled by defining the `xxx_force_checkout=ON` CMake variable. Therefore, this PR also adds `roottest_force_checkout=ON` for the new CI. For rootbench, the upstream `master` branch is fetched in any case, but for the sake of code reuse this PR also allows the local clone to be _optionally_ updated. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13003:408,variab,variable,408,https://root.cern,https://github.com/root-project/root/pull/13003,1,['variab'],['variable']
Modifiability,"As all PDFs, RooAddPdf inherits the protected evaluate(). It is, however, mistakenly listed as public.; Calling it will yield a useless value, because it bypasses the usual normalisation steps applied; for other PDFs. Reducing the visibility will prevent this, and also remove it from doxygen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3511:23,inherit,inherits,23,https://root.cern,https://github.com/root-project/root/pull/3511,1,['inherit'],['inherits']
Modifiability,"As discussed in ROOT-8011, TPython can't work with the ROOT C++; kernel for Jupyter because the current implementation relies; on a plain shared library to run the cell code and capture; its output and error. In particular, a crash happens when; the library, libJupyROOT, tries to get the __main__ module; in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's; initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5334:524,variab,variable,524,https://root.cern,https://github.com/root-project/root/pull/5334,1,['variab'],['variable']
Modifiability,"As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8935:72,variab,variable-bin-sizes,72,https://root.cern,https://github.com/root-project/root/issues/8935,1,['variab'],['variable-bin-sizes']
Modifiability,"As discussed with @bluehood and @dpiparo, having ""passive"" function names is not desirable. Therefore, we adapt the interface accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2626:106,adapt,adapt,106,https://root.cern,https://github.com/root-project/root/pull/2626,1,['adapt'],['adapt']
Modifiability,"As far as I can tell, it is currently not possible to use the REFLEX_GENERATE_DICTIONARY without variables that define include directories (or compile definitions). I would like to be able to let those be extract from target properties. I would also like to be not forced to set directory properties to have a more fine grained handle on dependencies. Even with directory properties extracting, e.g., include directories doesn't work when the generator expression comes out to be a list of directories.; E.g.; ```cmake; include_directories( $<TARGET_PROPERTY:podio::podio,INCLUDE_DIRECTORIES> ); ```; would lead to `... -I dir1;dir2`. Joining by hand (`$<JOIN....>`) also doesn't work because either the whitespace is not treated correctly, or COMMAND_EXPAND_LISTS is not part of ADD_CUSTOM_COMMAND, but that wouldn't solve my problem with using directory properties in the first place. So I propose the contained changes, which then lets one do; E.g.; ```cmake; add_library(edm4hep SHARED ${sources} ${headers}); target_link_libraries(edm4hep; PUBLIC; podio::podio; ); target_include_directories(edm4hep; PUBLIC; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>; $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/edm4hep>; $<INSTALL_INTERFACE:edm4hep>; ); REFLEX_GENERATE_DICTIONARY(edm4hep ${headers} SELECTION src/selection.xml; USES edm4hep; ); ```; And all the required include directories are derived automatically from the edm4hep target given to `USES`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019:97,variab,variables,97,https://root.cern,https://github.com/root-project/root/pull/5019,1,['variab'],['variables']
Modifiability,"As first reported in https://github.com/root-project/root/issues/12685:. The problem of not resolving typdefs extends to the specification of the underlying integer type, e.g.; ```; enum A : int {};; TEnum::GetEnum(""A"")->GetUnderlyingType() // --> (EDataType) (kInt_t) : (int) 3; ```; but; ```; enum B : std::int32_t {};; TEnum::GetEnum(""B"")->GetUnderlyingType() // --> (EDataType) (kNumDataTypes) : (int) 23; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15460:110,extend,extends,110,https://root.cern,https://github.com/root-project/root/issues/15460,1,['extend'],['extends']
Modifiability,"As noted in GitHub issue #7103, the interpolation code 3 is the same as code 2 in the `FlexibleInterpVar` and the `PiecewiseInterpolation` classes. According to some comments in the source code, interpolation code 3 was meant to be ""a parabolic version of log-normal"". There were two options to fix this:. 1) Actually implement this parabolic interpolation with linear; extrapolation, analogous to code 2 but in log space. 2) Clearly mark interpolation code 3 as non-existing. This commit implements solution 2, because the interpolation code 3 is not mentioned anywhere outside the ROOT source code. Especially not is the HistFactory paper:; https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf. Implementing a new interpolation scheme that apparently was not needed in the last 10 years anyway would increase the burden on the user to understand all these different settings unnecessarily. Closes #7103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:87,Flexible,FlexibleInterpVar,87,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"As noted in commit 538396a869 some weeks ago, Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12588:70,variab,variable,70,https://root.cern,https://github.com/root-project/root/pull/12588,1,['variab'],['variable']
Modifiability,"As reported by @behrenhoff MethodDL did not have so far an implementation for the dropout. ; (see https://root-forum.cern.ch/t/method-kdl-in-tmva/32863); This PR fixes the dropout for dense layers, implementing what has been done for the previous MethodDNN. . The implementation removes (by setting to zero) randomly input nodes and re-scale the surviving ones by a factor 1/(1.- dropout_probability). In this way no changes are needed for testing and evaluating a trained network with dropout. . The PR applies also some other small improvements such as print out of optimizer names and some fixes in the cross-evaluation function to avoid NaN outputs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3516:190,layers,layers,190,https://root.cern,https://github.com/root-project/root/pull/3516,1,['layers'],['layers']
Modifiability,As reported in #7412. Most of them use of `strcpy` and nullptr in `strchr`; Also several unused variables removed; Simplify TFolder::FindObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7420:96,variab,variables,96,https://root.cern,https://github.com/root-project/root/pull/7420,1,['variab'],['variables']
Modifiability,"As reported in [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490), the way we currently merge histogram statistics in `Add(RHist, RHist)` yields incorrect results. Following discussion with @Axel-Naumann, this PR proposes to resolve this problem by reducing the scope of histogram merging, only accepting the merging of histograms with the same axis configuration (more precisely with identical axis binning), which allows use of a much simpler statistics summation rule. Once accepted, it will resolve [ROOT-10490](https://sft.its.cern.ch/jira/browse/ROOT-10490). cc @rete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4974:360,config,configuration,360,https://root.cern,https://github.com/root-project/root/pull/4974,1,['config'],['configuration']
Modifiability,"As reported in https://root-forum.cern.ch/t/roosimultaneous-fit-on-categories-with-different-x-variables-bad-combined-data/44578; there is a bug in building a combined RooDataHist from single RooDataHist objects.; When importing diorectly from TH1 object works fine, as shown in the tutorial ; https://root.cern.ch/doc/master/rf401__importttreethx_8C.html. When using bins different than 100 bins and importing using RooDataHist, the default number of bins of the ROoRealVar (100) is used.; Code example:; ```; {; using namespace RooFit;; TH1 *hh_1 = new TH1D(""h1"",""h1"",40,-3,3); hh_1->FillRandom(""gaus"");; TH1 *hh_2 = new TH1D(""h2"",""h2"",40,-3,3); hh_2->FillRandom(""gaus"");; ; // Declare observable x; RooRealVar x(""x"", ""x"", -10, 10);. // Create category observable c that serves as index for the ROOT histograms; RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}});. // Create a binned dataset that imports contents of all TH1 mapped by index category c; /// RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2), Import(""SampleC"", *hh_3));; RooDataHist dh_1(""dh1"",""dh1"",x,hh_1);; RooDataHist dh_2(""dh2"",""dh1"",x,hh_2);. ; RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", dh_1), Import(""SampleB"", dh_2));. dh->Print(); // wil print wrong number of entries (200 instead of 80). // this will work fine; RooDataHist * dh2 = new RooDataHist(""dh2"", ""dh2"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2));; dh2->Print();. }. }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8015:95,variab,variables-bad-combined-data,95,https://root.cern,https://github.com/root-project/root/issues/8015,1,['variab'],['variables-bad-combined-data']
Modifiability,"As reported in https://root-forum.cern.ch/t/unexpected-additional-bins-appear-in-histogram-projection-when-using-bin-labels/41828/. projection of histogram with labels created additional bins.; This is due to scaling TH1::FindBin instead of TH1::FindFixBin and TH1::SetBinContent that internally extends also the axis if extendable. . Also as shown in test below, projection of TH2 and TH3 to Profille's do not preserve labels. . ```; void dinko() {; gStyle->SetLabelSize(0.1);; ; auto hist = new TH2F(""hist"", """", 2, 0, 2, 2, 0, 2);; printf( ""2D x-axis N bins: %d \n"", hist->GetXaxis()->GetNbins());; TH1D* hist_px = hist->ProjectionX();. printf( ""1D N bins: %d \n"",hist_px->GetXaxis()->GetNbins());. hist->GetXaxis()->SetBinLabel(1, ""A"");; hist->GetXaxis()->SetBinLabel(2, ""B"");; printf( ""2D x-axis N bins: %d \n"", hist->GetXaxis()->GetNbins());. hist_px = hist->ProjectionX();; auto c1 = new TCanvas();; c1->Divide(1,4);; c1->cd(1);; hist_px->DrawCopy();. printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );; hist_px->LabelsDeflate();; printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );. // test profile projection. auto prof_px = hist->ProfileX();; c1->cd(2);; prof_px->Draw();; printf( ""PROFILE N bins: %d \n"", prof_px->GetXaxis()->GetNbins() );; ; ; //// Test 3D; printf(""\nTEST 3D case \n"");; auto hist3 = new TH3F(""hist3"", """", 2, 0, 2, 2, 0, 3, 2, 0, 4);; hist3->GetXaxis()->SetBinLabel(1, ""A"");; hist3->GetXaxis()->SetBinLabel(2, ""B"");; hist_px = hist3->ProjectionX(""x"");; printf( ""1D N bins: %d \n"", hist_px->GetXaxis()->GetNbins() );; c1->cd(3);; hist_px->DrawCopy();. auto prof2_px = hist3->Project3DProfile(""yx"");; printf( ""PROFILE N bins: %d \n"", prof2_px->GetXaxis()->GetNbins() );; c1->cd(4);; prof2_px->Draw();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6658:296,extend,extends,296,https://root.cern,https://github.com/root-project/root/issues/6658,2,['extend'],"['extendable', 'extends']"
Modifiability,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11660:216,extend,extended,216,https://root.cern,https://github.com/root-project/root/issues/11660,3,['extend'],['extended']
Modifiability,"As reported in:. https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-10501?filter=allopenissues. commit 1d2e76 deletes the host's Python installation. Here two conditions are introduced to run the command:. - the flag pyroot_experimental was specified during the configuration;; - the variable CMAKE_INSTALL_PREFIX doesn't start with ""/usr"", making; the command run only if the above mentioned variable was customized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4748:266,config,configuration,266,https://root.cern,https://github.com/root-project/root/pull/4748,3,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"As stated in the team meeting a month ago, we need dependencies between rootcling invocations when running with C++ modules because each built module needs to reference any depending C++ modules. This patch also adds a build option for C++ modules that needs to be set for this setting to get active. This build option should replace the environment variable that we had before in areas where it is more practical to have a fixed CMake setting such as running PRs on Jenkins or when having CMake specific code for C++ modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/877:350,variab,variable,350,https://root.cern,https://github.com/root-project/root/pull/877,1,['variab'],['variable']
Modifiability,"As stated in. https://bitbucket.org/wlav/cppyy/issues/176/issue-with-python-list-created-from-vector. in Cppyy-1.5.6 when we do the following:. l = [e for e in cppyy.gbl.get_vec()]. where get_vec() is a C++ injected function that returns a C++; std::vector<std::string>, the variable 'e' that goes through the vector is; not a Python string, but a temporary object of type std::string. Being 'e' a reference to a temporary, the vector goes out of scope. The second of the two solutions suggested in the discussion is applied; where necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4648:275,variab,variable,275,https://root.cern,https://github.com/root-project/root/pull/4648,1,['variab'],['variable']
Modifiability,"As suggested by @lmoneta, this is now the equivalent PR to; https://github.com/root-project/root/pull/9808, but for `math` instead; of `roofit` because inheritance is also used a lot in Math. For developers, it is unconvenient that the `override` specifier; that flags member functions as overriding on first sight is not used so; much in `hist`. Now that the v6.28 development cycle has just started and there are no; major developments in the pipeline yet, I think it is a good time to add; the missing `override` specifiers everywhere in `hist`, as done already; for RooFit. This commit was generated more or less automatically with this Python; script that uses `clang-tidy`:. ```Python; import os; import glob; import subprocess; import tqdm. """"""; For clang-tidy to work, you have to copy the compile_commands.json from the; build directory back into the repo directory (just like in; .ci/copy_headers.sh).; """""". def get_sources(directory, extensions):. files = []. for ext in extensions:; files += glob.glob(; os.path.join(directory, ""**/*"" + ext), recursive=True; ). return files. """"""; Recursively find extensions in directory, to figure out whic hextensions; should be globbed for.; find . -type f -name '*.*' | sed 's|.*\.||' | sort -u; """"""; extensions = ["".h"", "".hpp"", "".hxx"", "".cpp"", "".cc"", "".cxx""]. """"""; Some extensions are recognized as C and not as C++ files by clang-tidy. We; need to rename them, and this dict specifies how file extensions should be; replaced.; """"""; rename_dict = {"".h"": "".hpp""}. files = get_sources(""math"", extensions). cflags = (; subprocess.check_output([""root-config"", ""--cflags""]).strip().decode(""utf-8""); ). for file in tqdm.tqdm(files):. file_renamed = file; for ext, ext_renamed in rename_dict.items():; if file.endswith(ext):; file_renamed = file.replace(ext, ext_renamed). if file_renamed != file:; os.rename(file, file_renamed). cmd = [; ""clang-tidy"",; ""-checks=modernize-use-override"",; ""--fix"",; file_renamed,; ""--"",; ] + cflags.split("" ""); subprocess.ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10083:152,inherit,inheritance,152,https://root.cern,https://github.com/root-project/root/pull/10083,1,['inherit'],['inheritance']
Modifiability,"As suggested by Axel:; TGDimension.h: Remove the copy constructors (rely on the compiler generated ones), add default (non virtual) destructors, and remove useless ClassDefs; TGCanvas.cxx, TGListTree.cxx: Remove unused variables (fixes [-Wunused-but-set-variable] warnings)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3860:219,variab,variables,219,https://root.cern,https://github.com/root-project/root/pull/3860,2,['variab'],"['variable', 'variables']"
Modifiability,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"". In particular, in this commit:; - move alias management from RLoopManager to RBookedColumns; - remove alias-managing logic from RLoopManager; - refactor several functions so they only take RBookedColumns as input; rather than a list of defined names plus a map of aliases; (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,; GetValidatedColumnNames, BookFilterJit, FindUsedColumns,; ParseRDFExpression); - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function; - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that; relied on this global definition of Aliases. We expect this to be an; exceedingly rare usecase, and if such code exists it will produce a; clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9496:634,refactor,refactor,634,https://root.cern,https://github.com/root-project/root/pull/9496,2,"['adapt', 'refactor']","['adapt', 'refactor']"
Modifiability,Assign directly to static variable to avoid race condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/48:26,variab,variable,26,https://root.cern,https://github.com/root-project/root/pull/48,1,['variab'],['variable']
Modifiability,"At O0, all variables of all local scopes get separately allocated on the stack.; This sums up to 6k; streaming e.g. a RooWorkspace has 100s of recursions of this; function. Force O3, where the stack size shrinks to just above 200 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3234:11,variab,variables,11,https://root.cern,https://github.com/root-project/root/pull/3234,1,['variab'],['variables']
Modifiability,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061:267,config,configuration,267,https://root.cern,https://github.com/root-project/root/issues/14061,1,['config'],['configuration']
Modifiability,Avoid double increment to loop variable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/499:31,variab,variable,31,https://root.cern,https://github.com/root-project/root/pull/499,1,['variab'],['variable']
Modifiability,Avoid failure of v7/line.cxx tutorial in such case. Disable headless in CEF and QWebEngine plugins.; Both do not provide any functionality without X-server running,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4880:91,plugin,plugins,91,https://root.cern,https://github.com/root-project/root/pull/4880,1,['plugin'],['plugins']
Modifiability,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301:341,Extend,Extend,341,https://root.cern,https://github.com/root-project/root/pull/6301,1,['Extend'],['Extend']
Modifiability,Avoid searching in the standard system environment variables (i.e. PATH),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1172:51,variab,variables,51,https://root.cern,https://github.com/root-project/root/pull/1172,1,['variab'],['variables']
Modifiability,Backport (and adapt) llvm-svn 331428 plus required prerequisites.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6295:14,adapt,adapt,14,https://root.cern,https://github.com/root-project/root/pull/6295,1,['adapt'],['adapt']
Modifiability,Backport Fix OpenMP shadowing declaration of MnPrint print thread-local variable to 6-24-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9326:72,variab,variable,72,https://root.cern,https://github.com/root-project/root/pull/9326,1,['variab'],['variable']
Modifiability,Backport in 6.20 of #5598 ; Fix compilation of cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Fix it by modifying the pre-processor macros defined in RCOnfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5604:349,layers,layers,349,https://root.cern,https://github.com/root-project/root/pull/5604,1,['layers'],['layers']
Modifiability,"Backport of #15867 . For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15868:195,config,configured,195,https://root.cern,https://github.com/root-project/root/pull/15868,1,['config'],['configured']
Modifiability,"Backport of #8429. Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to; the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9771:19,Extend,Extend,19,https://root.cern,https://github.com/root-project/root/pull/9771,1,['Extend'],['Extend']
Modifiability,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7563:268,config,configuration,268,https://root.cern,https://github.com/root-project/root/pull/7563,1,['config'],['configuration']
Modifiability,"Backport of D27629, commit 18805ea951. Original commit message:; ```; Makes sure that the unwind info uses 64bits pcrel relocation if a large; code model is specified and handle the corresponding relocation in the; ExecutionEngine. This can happen with certain kernel configuration (the; same as the one in https://reviews.llvm.org/D27609, found at least on; the ArchLinux stock kernel and the one used on https://www.packet.net/); using the builtin JIT memory manager. Co-authored-by: Yichao Yu <yyc1992@gmail.com>; Co-authored-by: Valentin Churavy <v.churavy@gmail.com>; ```. Note: The handling in ExecutionEngine was committed in a different; revision and is already part of LLVM 9. We need the part about emitting; relocations because eh_frame (allocated in a data section) may be more; than 4Gb away from the code section it references. See the discussion; in https://github.com/cms-sw/cmssw/issues/31123 for context. (cherry picked from commit f481e8fe6df177ec1a50a10b7d76df5fb0b5c2a2). v6.24 version of #7563",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7606:268,config,configuration,268,https://root.cern,https://github.com/root-project/root/pull/7606,1,['config'],['configuration']
Modifiability,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11359:224,inherit,inherited,224,https://root.cern,https://github.com/root-project/root/pull/11359,1,['inherit'],['inherited']
Modifiability,"Backport of commit 1b5404aff3. Original commit message:; ```; We would previously pick between calling an initializer list constructor; and calling a default constructor unstably in this situation, depending; on whether the inherited default constructor had already been used; elsewhere in the program.; ```. This commit first appeared in LLVM 10 and fixes some problems with modules when building with GCC 12, for example ODRHash asserts in `roottest-root-io-uniquePointer`. (cherry picked from commit cf32d2bc738367fe0d5c8ccbc0856d345f824228). Backport of PR https://github.com/root-project/root/pull/11359",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11362:224,inherit,inherited,224,https://root.cern,https://github.com/root-project/root/pull/11362,1,['inherit'],['inherited']
Modifiability,Backporting some commits that avoid unused variable warnings on mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10377:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/pull/10377,1,['variab'],['variable']
Modifiability,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15531:88,variab,variable,88,https://root.cern,https://github.com/root-project/root/pull/15531,1,['variab'],['variable']
Modifiability,"Basic functionality remains in TRootSniffer class, ; extra methods for scanning TH1, TPad, TGraph, TTree classes moved to TRootSnifferFull. Default behavior of THttpServer will remain - it will create TRootSnifferFull.; But in webgui only basic functionality is required, therefore all ROOT6 libraries will not be loaded. Also add few parameters in rootrc file to configure THttpServer, used in webgui.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1695:364,config,configure,364,https://root.cern,https://github.com/root-project/root/pull/1695,1,['config'],['configure']
Modifiability,"Basic refactoring of test/stressMathCore.cxx to be smaller, more manageable files, and to use Google Test. The functionality is the same, but is now using Google Test for assertions instead of doing logical operations on an integer as the test result. Ping @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/594:6,refactor,refactoring,6,https://root.cern,https://github.com/root-project/root/pull/594,1,['refactor'],['refactoring']
Modifiability,"Because in FindMySQL, the system path are listed before the environment variable provide path, it always favored a system installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1993:72,variab,variable,72,https://root.cern,https://github.com/root-project/root/pull/1993,1,['variab'],['variable']
Modifiability,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5946:65,Plugin,Plugin,65,https://root.cern,https://github.com/root-project/root/pull/5946,2,['Plugin'],['Plugin']
Modifiability,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5943:65,Plugin,Plugin,65,https://root.cern,https://github.com/root-project/root/pull/5943,1,['Plugin'],['Plugin']
Modifiability,"Because the TImage Title has a special use (not used to store a title), the ls() method inherited from TObject crashed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3920:88,inherit,inherited,88,https://root.cern,https://github.com/root-project/root/pull/3920,1,['inherit'],['inherited']
Modifiability,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6155:518,config,config,518,https://root.cern,https://github.com/root-project/root/pull/6155,2,"['config', 'refactor']","['config', 'refactor']"
Modifiability,"Before I code too far away . This is first showcase, how new attributes will be introduced to `RFrame`. First important change. `RFrame` is normal drawable and will be inserted into list of primitives. ; In the future we could enforce `RFrame` have to be always on the first place (to be discuss). `RFrame` is not required to draw histogram. All defaults can be obtained via `RStyle`, therefore object can be created on the client side and all necessary attributes can be obtained. As first members of `RFrame` I introduce `RAttrMargin` and `RAttrAxis` attributes.; `RAttrMargin` contains margins from pad borders and can be defined as `RPadLength` without user components. In the CSS one could use syntax like: `frame { margin_left: 0.1 + 10px; }` ; As Idea: one also can allow something like: `frame { margin: 0; }` to set all sides at same time. `RAttrAxis` are graphical axis attributes plus min/max range, lin/log scale, invert flag, ...; For now only line attributes are really used. . Idea for next steps with `RAttrAxis`.; When min/max values not specified, axis ranges defined by first drawable like histogram or graph.; One should be able to set only min or only max value. Also visible range should be able to specify same way. . You can see how code will look like in new macro: `draw_frame.cxx`. It drawing in two sub-pads. On first sub-pad RFrame configured programatically, on second sub-pad - via CSS file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5044:1361,config,configured,1361,https://root.cern,https://github.com/root-project/root/pull/5044,1,['config'],['configured']
Modifiability,"Before this commit, RVec<T> objects were written to file as a normal; object with a single data member of type `std::vector<T, RAdoptAllocator<T>>`.; However, we want to:; - make use of the more generic ""collection proxy"" I/O mechanism that; reads/writes STL-like collections in a generic way making use of their; begin()/end()/size() API. This makes it possible to implicitly convert; RVec to any other collection at the I/O level, and it also makes it possible to...; - evolve RVec internals to implement a small-buffer optimization and; remove the `std::vector<T, RAdoptAllocator<T>>` data member without; breaking I/O. The most important changes performed:; - added ROOT::ESSTLType::kROOTRVec; - added special case for RVec in dictionary generation:; - RVecs are setup to use CollectionProxy; - RVecs are treated as an STL container (even if not in namespace std); - added special treatment of RVec<bool> (reusing the VectorLooper; specialized for std::vector<bool>). Philippe, Axel: what tests would you like to see?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6960:472,evolve,evolve,472,https://root.cern,https://github.com/root-project/root/pull/6960,1,['evolve'],['evolve']
Modifiability,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5487:191,variab,variable,191,https://root.cern,https://github.com/root-project/root/pull/5487,1,['variab'],['variable']
Modifiability,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8529:1605,refactor,refactoring,1605,https://root.cern,https://github.com/root-project/root/pull/8529,1,['refactor'],['refactoring']
Modifiability,"Beside the general aversion against using an environment variable; for this setting, it also turns out that we can't easily set an; environment variable for a rootcling invocation in roottest. This patch adds the -cxxmodule flag to rootcling to allow activating; this feature without the old environment variable. For backwards; compability, we keep the ROOT_MODULES support around (for now).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1463:57,variab,variable,57,https://root.cern,https://github.com/root-project/root/pull/1463,3,['variab'],['variable']
Modifiability,Better way to silent 'unused' variable warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3732:30,variab,variable,30,https://root.cern,https://github.com/root-project/root/pull/3732,1,['variab'],['variable']
Modifiability,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:644,config,config,644,https://root.cern,https://github.com/root-project/root/pull/5660,2,['config'],"['config', 'configs']"
Modifiability,"Building ROOT with gcc 11.2.0 on a centos7 system with the following configuration:. cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-02_gc112_c17 -GNinja ../src. fails with the following error:; ```; [2542/9705] Performing download step (download, verify and extract) for 'XROOTD'; FAILED: builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; cd /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src && /bld4/opt/cmake/3.22.2/bin/cmake -P /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /bld4/opt/cmake/3.22.2/bin/cmake -E touch /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download; CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message):; Command failed: 1. '/bld4/opt/cmake/3.22.2/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release-impl.cmake'. ```. attached are the XROOTD-download-err.log and XROOTD-download-out.log; [XROOTD-download-err.log](https://github.com/root-project/root/files/8624870/XROOTD-download-err.log); [XROOTD-download-out.log](https://github.com/root-project/root/files/8624872/XROOTD-download-out.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10527:69,config,configuration,69,https://root.cern,https://github.com/root-project/root/issues/10527,1,['config'],['configuration']
Modifiability,"Building external applications that use ROOT oftentimes fail if there is a mismatch in the C++ standard between ROOT and the application. To make this visible, diagnose if there is a mismatch in the value of the `__cplusplus` macro w.r.t. when ROOT was configured.; The check is performed in `RConfigure.h`, a common header also included in backports, e.g. RStringView.hxx. ## Changes or fixes:; - Generated `RConfigure.h` during build defines `ROOT__cplusplus`, which contains the value of the `__cplusplus` macro at the time ROOT was configured.; - Because `RConfigure.h` is included from many ROOT headers (e.g., backports), it seems a viable candidate to also add the mismatch check.; On mismatch, emit a warning (should it be an `#error` instead?). ## Checklist:; - [X] tested changes locally. This PR fixes #8063.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10517:253,config,configured,253,https://root.cern,https://github.com/root-project/root/pull/10517,2,['config'],['configured']
Modifiability,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261:1221,variab,variable,1221,https://root.cern,https://github.com/root-project/root/pull/14261,1,['variab'],['variable']
Modifiability,"By introducing a virtual `FCNBase::HasGradient()` method and moving the; former `FCNGradientBase` interface to the base class, we don't need to; repeat lots of code just for dealing with both the `FCNBase` and; `FCNGradientBase` types. This is a completely backwards compatible change that makes the Minuit 2; code more maintainable. Another commit in this PR removed the unused `FCNGradientBase::CheckGradient()` member function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16393:320,maintainab,maintainable,320,https://root.cern,https://github.com/root-project/root/pull/16393,1,['maintainab'],['maintainable']
Modifiability,"C++ modules have two concepts -- a modulemap and a module file. The modulemap gives the mapping between a set of header files present in the module file. Clang has two ways to discover these artifacts -- modulemaps must be either explicitly specified or they have to be on the include paths (-I). Module files must be in the module cache path or the prebuilt module path. ROOT enforces the module files to be next to the library files. In some cases it the LD_LIBRARY_PATH is considered to extend the set of discoverables ROOT libraries. Over the years we have considered the LD_LIBRARY_PATH as the prebuilt module file locations. Relying on it leads to a number of issues. First, the osx system integrity protection filters its contents. Second, the LCG distribution mechanism can set the LD_LIBRARY_PATH to point to a complementary location of ROOT. In this case we will start loading irrelevant module files. This patch disables the LD_LIBRARY_PATH module discovery and relies on ROOT to provide its set of locations where modules should be present. Nowadays the current state of the implementation allows us to enforce this finer granularity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4540:490,extend,extend,490,https://root.cern,https://github.com/root-project/root/pull/4540,1,['extend'],['extend']
Modifiability,"CH_ERR',; 'PRELAUNCH_OUT',; 'PWD',; 'PYTHONHASHSEED',; 'PYTHONPATH',; 'PYTHONUNBUFFERED',; 'PYTHON_WORKER_FACTORY_SECRET',; 'SHLVL',; 'SPARK_AUTH_SOCKET_TIMEOUT',; 'SPARK_BUFFER_SIZE',; 'SPARK_DIST_CLASSPATH',; 'SPARK_JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2444,variab,variable,2444,https://root.cern,https://github.com/root-project/root/issues/13811,1,['variab'],['variable']
Modifiability,CI: config specification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12297:4,config,config,4,https://root.cern,https://github.com/root-project/root/issues/12297,1,['config'],['config']
Modifiability,CI: trigger custom config build for PRs through comments,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12465:19,config,config,19,https://root.cern,https://github.com/root-project/root/issues/12465,1,['config'],['config']
Modifiability,CMake: fix incorrect version for finding llvm-config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12150:46,config,config,46,https://root.cern,https://github.com/root-project/root/pull/12150,1,['config'],['config']
Modifiability,CMake: use CLING_BINARY_DIR instead of LLVM_BINARY_DIR to configure ClingConfig.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12153:58,config,configure,58,https://root.cern,https://github.com/root-project/root/pull/12153,1,['config'],['configure']
Modifiability,"CUDA 11 now supports C++17, which has `std::string_view`. Make sure the configuration when using CUDA allows it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6079:72,config,configuration,72,https://root.cern,https://github.com/root-project/root/pull/6079,1,['config'],['configuration']
Modifiability,CUDNN was spelled CuDNN in ROOT's cmake config. This lead to warnings.; Fix #8537.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8548:40,config,config,40,https://root.cern,https://github.com/root-project/root/pull/8548,1,['config'],['config']
Modifiability,"Call `TCanvas::HighlightConnect` before canvas draw for the first time.; This let in case of `TWebCanvas` immediately detect such state and configure canvas. Also avoid forward declaration of functions just by resorting their order.; Use more c++11 syntax. Important - adjust `TH1::SetHighlight()` to use it without histogram painting, as with `TWebCanvas`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9714:140,config,configure,140,https://root.cern,https://github.com/root-project/root/pull/9714,1,['config'],['configure']
Modifiability,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:59406,variab,variable,59406,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:50932,variab,variable,50932,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,Cc tgraph refactor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610:10,refactor,refactor,10,https://root.cern,https://github.com/root-project/root/pull/9610,1,['refactor'],['refactor']
Modifiability,Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/429:32,config,config,32,https://root.cern,https://github.com/root-project/root/pull/429,2,['config'],['config']
Modifiability,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:310,extend,extended,310,https://root.cern,https://github.com/root-project/root/pull/10736,1,['extend'],['extended']
Modifiability,"Change the logic in `RClusterPool` such that it will prefetch the next _bunch_ of clusters while the current bunch of clusters is being processed. The bunch size is configurable on construction of `RClusterPool`. At the moment, it needs to be explicitly set (if different from 1) via `RNTupleReadOptions`. Eventually, there should be some mechanism to figure out a sensible default, given the source of data (e.g., remote or local) and the set of active columns. Compared to the current cluster prefetching, the combined set of pages of a bunch of clusters can now be given to a single vector read requests. That increases the size of vector reads and leads to significant throughput increases in certain cases. In particular for remote I/O but also, within limits, for SSDs. This PR is based on the fixes of #9096",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9100:165,config,configurable,165,https://root.cern,https://github.com/root-project/root/pull/9100,1,['config'],['configurable']
Modifiability,Changed all static variables which were only being used as local variables to be local variables. This avoids threading problems.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/20:19,variab,variables,19,https://root.cern,https://github.com/root-project/root/pull/20,3,['variab'],['variables']
Modifiability,Changes are done to thisroot.sh in order to set the correct environment variables also when CMAKE_INSTALL_PYROOTDIR is specified.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4700:72,variab,variables,72,https://root.cern,https://github.com/root-project/root/pull/4700,1,['variab'],['variables']
Modifiability,Clang 15 warns that the variable v may be used uninitialized because it does not understand the pointer hackery to read individual bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12440:24,variab,variable,24,https://root.cern,https://github.com/root-project/root/pull/12440,1,['variab'],['variable']
Modifiability,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176:1468,config,configuration,1468,https://root.cern,https://github.com/root-project/root/pull/16176,1,['config'],['configuration']
Modifiability,"Clang allows third party shared libraries to provide user-defined; extensions. For example, a custom libTemplateInstantiation.so can; visualize all template instantiation chains in clang. To enable it; one needs to pass a set of options such as -fplugin. Cling should be able to inherently work with clang plugins. However,; cling still does not make full use of the clang driver where the plugin; setup is handled. This patch enables plugins in cling and extends them in some aspects.; In particular, cling allows loading of plugins from shared libraries; but also if they are linked to the same library where cling is. This is; very useful in cases where cling runs itself in a shared library (eg; libCling). Users of libCling (such as ROOT) prefer to keep all llvm and; clang related symbols local to avoid symbol clashes if there is another; version of clang and llvm linked against a package. This can be done by; dlopen-ing libCling with RTLD_LOCAL visibility mode. Then the only way; for clang plugins to work in this scenario is to be linked to libCling. Patch by Aleksandr Efremov (@efremale) and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371:306,plugin,plugins,306,https://root.cern,https://github.com/root-project/root/pull/2371,6,"['extend', 'plugin']","['extends', 'plugin', 'plugins']"
Modifiability,"Clang warns that ""variable 'px' may be uninitialized when used here"" because it does not understand the interplay with `RNTupleView`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16677:18,variab,variable,18,https://root.cern,https://github.com/root-project/root/pull/16677,1,['variab'],['variable']
Modifiability,"Clang's search for the standard C++ headers is complex, up to messy. It is a combination of build-time decisions in `interpreter/cling/lib/Interpreter/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11612:623,variab,variables,623,https://root.cern,https://github.com/root-project/root/issues/11612,2,['variab'],"['variable', 'variables']"
Modifiability,"Clang, and therefore cling, doesn't deal well with large amounts of; variable instantiations of types with non-trivial destructors in the; same function body. In this scenario the list of exception-handling; ""landing pads"" grows to sizes that make compilation times blow up.; What takes time specifically is the generation of code that deals; with calling the destructors of these variables in case an exception is; thrown in the function body. This patch avoids allocating many temporary std::strings and; std::vector<std::string>s in jitted code by generating code of the form; Jit{Filter,Define}Helper(..., const char*[]{""col1"", ""col2""}, ...) rather; than Jit{Filter,Define}Helper(..., std::vector<std::string>{""col1"", ""col2""}, ...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7651:69,variab,variable,69,https://root.cern,https://github.com/root-project/root/pull/7651,4,['variab'],"['variable', 'variables']"
Modifiability,Cling crash on valid c++ code (stack variable pointer).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10386:37,variab,variable,37,https://root.cern,https://github.com/root-project/root/issues/10386,1,['variab'],['variable']
Modifiability,Clone roottest from release tag when configuring with release tarball,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4101:37,config,configuring,37,https://root.cern,https://github.com/root-project/root/pull/4101,1,['config'],['configuring']
Modifiability,"Code here: https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooSimPdfBuilder.cxx#L850-L854 has logical problem.; ```; std::string remainderState;; if (const auto pos = paramName.find('[') != std::string::npos) {; const auto posEnd = paramName.find(']');; remainderState = paramName.substr(pos+1, posEnd - pos - 1);; }; ```; Here variable `pos` will be boolean and not position of `[` symbol. ; Should be fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7481:351,variab,variable,351,https://root.cern,https://github.com/root-project/root/issues/7481,1,['variab'],['variable']
Modifiability,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5585:12,variab,variable,12,https://root.cern,https://github.com/root-project/root/pull/5585,3,['variab'],['variable']
Modifiability,Comments and refactorings (hidden -> masked) in the TextInput.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/82:13,refactor,refactorings,13,https://root.cern,https://github.com/root-project/root/pull/82,1,['refactor'],['refactorings']
Modifiability,"Commit ff86c30992 (""[RF] Implement SumW2 correction in new BatchMode with RooFitDriver"") introduced some `static constexpr`. When building with C++14, at least `weightVarName` requires a declaration because it is odr-used. Provide them for all three variables to avoid undefined references seen in debug builds without compiler optimizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263:250,variab,variables,250,https://root.cern,https://github.com/root-project/root/pull/10263,1,['variab'],['variables']
Modifiability,Compilers (at least clang) configure this internally; at least with the current efforts on compiler and CMake sides to put this into action our build system should keep away from interfering with this configuration. Oh and it also does not work with macOS and builtin_glew. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12746:27,config,configure,27,https://root.cern,https://github.com/root-project/root/pull/12746,2,['config'],"['configuration', 'configure']"
Modifiability,Configuration fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/153:0,Config,Configuration,0,https://root.cern,https://github.com/root-project/root/pull/153,1,['Config'],['Configuration']
Modifiability,"Configure with `cmake -DBUILD_SHARED_LIBS=OFF -Dminimal=ON -Dshared=OFF ...`. Note that the changes here are not meant to be merged, this is only for testing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5921:0,Config,Configure,0,https://root.cern,https://github.com/root-project/root/pull/5921,1,['Config'],['Configure']
Modifiability,Configuring with builtin xrootd can fail because of seemingly not found OpenSSL library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16374:0,Config,Configuring,0,https://root.cern,https://github.com/root-project/root/issues/16374,1,['Config'],['Configuring']
Modifiability,"Consolidate RBDT as specified in the ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173:771,variab,variables,771,https://root.cern,https://github.com/root-project/root/pull/15173,1,['variab'],['variables']
Modifiability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15854:142,variab,variables,142,https://root.cern,https://github.com/root-project/root/pull/15854,2,['variab'],['variables']
Modifiability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (cherry picked from commit a60f3538220e298f14c0ea5824d2fda91b71f39e, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15857:142,variab,variables,142,https://root.cern,https://github.com/root-project/root/pull/15857,2,['variab'],['variables']
Modifiability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-28-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15859:142,variab,variables,142,https://root.cern,https://github.com/root-project/root/pull/15859,2,['variab'],['variables']
Modifiability,"Constructors with the same priority should keep their relative order that was specified. This is important for `clang-repl` with many `const` variables after commit https://github.com/llvm/llvm-project/commit/05137ecfca0bd2f7fa6cd30c771dfacbb8188785 (""[clang-repl] Emit const variables only once""). ---. Fixes #15511. (version of commit a60f3538220e298f14c0ea5824d2fda91b71f39e for LLVM 13 in `v6-30-00-patches`, backport of https://github.com/root-project/root/pull/15854)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15858:142,variab,variables,142,https://root.cern,https://github.com/root-project/root/pull/15858,2,['variab'],['variables']
Modifiability,"Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way.; The matplotlib script is:. ```; import matplotlib.pyplot as plt; import numpy as np. x = np.random.randint(100, size=(100)); y = np.random.randint(100, size=(100)); colors = np.random.randint(100, size=(100)); sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(); ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```; void scatter(); {; const int n = 100;; double x[n];; double y[n];; double c[n];; double s[n];. // Define four random data set; auto r = new TRandom();; for (int i=0; i<n; i++) {; x[i] = 100*r->Rndm(i);; y[i] = 100*r->Rndm(i);; c[i] = 900*r->Rndm(i);; s[i] = 1000*r->Rndm(i);; }. auto scat = new TScatter(n, x, y, c, s);; scat->Draw();; }; ```; And it gives:; <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10608:806,inherit,inheriting,806,https://root.cern,https://github.com/root-project/root/issues/10608,1,['inherit'],['inheriting']
Modifiability,Copy the stl.cppmap modulemap now during configuration time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/425:41,config,configuration,41,https://root.cern,https://github.com/root-project/root/pull/425,1,['config'],['configuration']
Modifiability,Correctly call TF1::Save with full range to be sure storing is correct; Support functions in TMultiGraph; Create real histogram for TGraph2D when `tri` option is configured; Update JSROOT with several fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13978:162,config,configured,162,https://root.cern,https://github.com/root-project/root/pull/13978,1,['config'],['configured']
Modifiability,Create TView3D only when not exists in the pad; Scan and create custom colors list after objects painting done; Configure webwindow geometry before showing canvas; Few small fixes on JSROOT side,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2922:112,Config,Configure,112,https://root.cern,https://github.com/root-project/root/pull/2922,1,['Config'],['Configure']
Modifiability,"Current JSROOT dev version with lot of changes, potential v7.0 release. Really a lot of changes in dev version.; Fully avoids jQuery in the GUI, replace it by HTML5 code; Reduce significantly used code from d3.js (factor 3); Improve flexible layout in the GUI. Add support of many new classes/draw options; Like CANDLE/VIOLIN plots, TEfficiency,; Add many standard math functions to support majority of TF1/TF2 from tutorials. Upgrade three.js to r136. Adjust Eve7 code, fix few problems",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9638:233,flexible,flexible,233,https://root.cern,https://github.com/root-project/root/pull/9638,1,['flexible'],['flexible']
Modifiability,"Currently TMVA considers all internal variables floats, if large event numbers are then input as part of ""cv-in-app"" these can overflow the float resulting in erroneous fold assignments. A workaround is to reduce the input range when reading the input from the TTree as TTreeFormula retains awareness of the input type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2971:38,variab,variables,38,https://root.cern,https://github.com/root-project/root/pull/2971,1,['variab'],['variables']
Modifiability,"Currently http/webgui/eve7 tutorials are vetoed because of many reasons; But main reason - such tutorials designed so that `THttpServer` should runs forever ; that user can test them in the web browsers. This can be changed.; All tutorials used in ROOT testing started with arguments `root -b -l -q tutorial_name.C`; In tutorials itself one could detect that using something like:; ```; bool test_mode = gApplication->Argn() > 3 &&; !strcmp(gApplication->Argv(1),""-b"") && ; !strcmp(gApplication->Argv(2),""-l"") && ; !strcmp(gApplication->Argv(3),""-q"");; ```; Especially `-q` argument is clear sign that macro should not be running forever. Alternatively, one can set special environment variable and test it inside tutorials with:; ```; bool test_mode = gSystem->Getenv(""ROOT_TESTING"") != nullptr;; ```; But this requires that ROOT_TESTING environment variable should be set before. In any case - if such `test_mode` detected, macro should behaves differently:; 1. Do not start real http server while it most probably will conflict with other tutorials running in parallel.; 2. Run macro for only limited number of loops for ~3 seconds.; 3. Check production of png images - for most of these tutorials `THttpServer` or `RCanvas` or `REve` can generate image",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651:686,variab,variable,686,https://root.cern,https://github.com/root-project/root/issues/6651,2,['variab'],['variable']
Modifiability,Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4013:103,config,config,103,https://root.cern,https://github.com/root-project/root/pull/4013,1,['config'],['config']
Modifiability,"Currently we rebuilt LTO everytime you rerun cmake, as CMake; touches the vcsrevision file that LTO depends on. Make isn't; smart enough to realise it's still just an empty file, so it; retriggers the LTO compilations whenever you run CMake. Again, this patch will be obsolete on the next LLVM upgrade; as this CMake code is refactored upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/842:325,refactor,refactored,325,https://root.cern,https://github.com/root-project/root/pull/842,1,['refactor'],['refactored']
Modifiability,Currently we write into the overlay file all libc++ header paths (e.g. /usr/include/libc++:/another/path). This patch selects the first path from this list to produce a valid overlay.yaml when configuring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/332:193,config,configuring,193,https://root.cern,https://github.com/root-project/root/pull/332,1,['config'],['configuring']
Modifiability,"Currently when installed with `-Dgnuinstall=ON` ROOT ends up exporting relative paths from the `${CMAKE_INSTALL_CMAKEDIR}` to the relevant binary, include and library directories. This can be a problem, especially when these paths may be evaluated from a different system folder assumed by CMake (e.g. when `CMAKE_INTSTALL_CMAKEDIR` is not the same for ROOT and CMake) as well as in other cases, when relative paths are not appropriate. Thus, it is safer in the general case to have these relative paths resolved to absolute system paths immediately before being passed to a caller. This merge request tries to accomplish just that with complete transparency and zero side-effects. It has been tested and deployed in Arch Linux x86_64, CMake 3.16.4, GCC 9.2.1:; - resulting relevant CMake config:; ```cmake; #----------------------------------------------------------------------------; # Configure the path to the ROOT headers, using a relative path if possible.; # This is only known at CMake time, so we expand a CMake supplied variable.; #. # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_INCLUDE_DIRS ""${_thisdir}/../../../include"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_INCLUDE_DIRS ""${_ROOT_INCLUDE_DIRS}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_LIBRARY_DIR ""${_thisdir}/../../root"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_LIBRARY_DIR ""${_ROOT_LIBRARY_DIR}"" REALPATH). # ROOT configured for the install with relative paths, so use these; get_filename_component(_ROOT_BINDIR ""${_thisdir}/../../../bin"" REALPATH). # resolve relative paths to absolute system paths; get_filename_component(ROOT_BINDIR ""${_ROOT_BINDIR}"" REALPATH). # Deprecated value, please don't use it and use ROOT_BINDIR instead.; get_filename_component(ROOT_BINARY_DIR ""${ROOT_BINDIR}"" REALPATH); ```; - CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5084:789,config,config,789,https://root.cern,https://github.com/root-project/root/pull/5084,2,"['Config', 'config']","['Configure', 'config']"
Modifiability,"Currently, `gSystem->GetHomeDirectory()` will prefer to use the value from `etc/passwd` on Linux systems. In the Snap packaging, this causes issues due to the sandboxing permissions and is currently worked around by using LD_PRELOAD to hijack `getpwuid()` and force it to respect $HOME. From what I see, every other instance in the ROOT repository already prefers the $HOME variable, apart from this one instance here. I wouldn't expect most users to notice this patch, but I would expect users who might have a need to change this value to assume simply changing $HOME is sufficient and expect this behaviour, which can be done without any real complexities; rather than changing /etc/passwd which is a much more involved task and relies upon legacy knowledge of Unix systems.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7083:159,sandbox,sandboxing,159,https://root.cern,https://github.com/root-project/root/pull/7083,2,"['sandbox', 'variab']","['sandboxing', 'variable']"
Modifiability,"Currently, all user-provided build flags are overwritten without notice.; By making the build flags cache variables, they are only set if the user; didn't set them explicitly.; Further, the printing of the build flags now also correctly prints the; flags being set by the build type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4196:106,variab,variables,106,https://root.cern,https://github.com/root-project/root/pull/4196,1,['variab'],['variables']
Modifiability,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooFormula code for gcc <= 4.8; a89130ac51 [RF] Remove `RooGenFunction` and `RooMultiGenF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:8857,inherit,inheritance,8857,https://root.cern,https://github.com/root-project/root/pull/13295,1,['inherit'],['inheritance']
Modifiability,"D. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; 7d39c0769c [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; fce73f0565 [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; 7e9c10b714 [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; bf4990c5d4 [RF] Exclude RooHistError from IO; 79edfbafa6 [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; f355c3ced4 [RF] Code-format `testRooDataHist.cxx`; 3fd99f7679 [RF] Enable AD code-gen test for RooFit.; a654d915e5 [RF] Less manual memory management in RooAbsArg and RooProdGenContext; 1367091202 [RF] Code modernization of RooAbsReal; 5c20fdc652 [RF] Add intiial minimizer interface for RooFuncWrapper.; cf88615b6e [RF] Improve code in `MinuitFcnGrad`; 17bac5528b [RF] Code improvements in tests for new TestStatistics; afcb2d3931 [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; 3a52e89a99 [RF] No need for `RooAbsMinimizerFcn::fit()` method; 3869282efb Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); 55bc2c0484 [RF] Define infinity as `std::numeric_limits<double>::infinity()`; 026a1a701b [RF] Split RooFuncWrapper into '.h' and '.cxx'.; 5964158260 [RF] Add observables as another parameter in RooFuncWrapper.; cca7c59a08 [RF] Test rough prototype of code generation in `testRooFuncWrapper`; 333e857cc6 Add AD based derivatives for RooFuncWrapper.; 46ba2eefd0 [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; fe8738ab41 [RF] Make it possible to switch to `ryml` backend after building ROOT; 1ca66d2949 [RF] Add a C/C++ function wrapper class in roofit.; f457ca57c1 [RF] Fix implementation error from typo in `RooGenProdProj`; cc9d4e8025 [RF] New mechanism to implicitly convert numbers to RooRealVar&; 8798fca2a3 [RF] Remove RooForm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:3567,inherit,inheritance,3567,https://root.cern,https://github.com/root-project/root/pull/12681,8,['inherit'],['inheritance']
Modifiability,"D/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:10469,variab,variable,10469,https://root.cern,https://github.com/root-project/root/issues/15738,1,['variab'],['variable']
Modifiability,"DE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:166: all] Error 2; ```. ### Reproducer. cmake ../../src/root -Droottest=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo; cmake --build . ### ROOT version. master@0afffc6fc9. ### Installation method. source. ### Operating system. FreeBSD 14.0-RELEASE. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2732,plugin,plugins,2732,https://root.cern,https://github.com/root-project/root/issues/14492,6,"['config', 'plugin']","['configure', 'configure-Release', 'plugins']"
Modifiability,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354:146,variab,variable,146,https://root.cern,https://github.com/root-project/root/pull/7354,1,['variab'],['variable']
Modifiability,"Data {; std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; };. // RBrowserData.cxx; class RBrowserDataCleanup : public TObject {};; ```. Which leads to failures in `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`:. ```; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. As per the discussion in the linked PR, it seems that `TClass` is always generating dictionaries for the `std::unique_ptr` data member, even if it's transient. As things stand, the only ""fix"" is to move the `RBrowserDataCleanup` class from the implementation file to the header, and adding `ClassDef` macro since it inherits from `TObject`. An alternative workaround was changing `std::unique_ptr<RBrowserDataCleanup>` to `RBrowserDataCleanup *`, which is treated transparently in case of a transient member. ### Reproducer. 1. Revert the changes in #13134 ; 2. Run the following macro; ```cpp; void rbrowserdatacleanup(){; gSystem->LoadAllLibraries();; ROOT::Detail::TStatusBitsChecker::CheckAllClasses();; }; ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13361:1825,inherit,inherits,1825,https://root.cern,https://github.com/root-project/root/issues/13361,1,['inherit'],['inherits']
Modifiability,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099:313,variab,variable-length,313,https://root.cern,https://github.com/root-project/root/pull/5099,4,['variab'],['variable-length']
Modifiability,"Dear ROOT devs,. These lines in the FindXROOTD. https://github.com/root-project/root/blob/323c21416cea9a64080698c23a7e2f6f6d1808bf/cmake/modules/FindXROOTD.cmake#L137-L149. make some root libraries, e.g., libNetxNG.so, link against old versions of xrootd if they are found on the system, even though one wants to build against the new version of xrootd.; We for SPI run into this problem when building on a machine which just happens to have this installed, and we cannot control the packages. e.g. this is printed during configure:; ```; -- Found Xrootd version num: 5.3.1 (setting -DROOTXRDVERS=500030001); --; -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- include_dirs: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/include/xrootd/private; -- libraries: /data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdUtils.so;/usr/lib64/libXrdClient.so;/data/sftnight/build/workspace/lcg_release_pipeline/install/xrootd/5.3.1/aarch64-centos7-gcc8-opt/lib64/libXrdCl.so. ```; This then causes problem when our ROOT is used on some other machine.; So at the moment we just patch these lines out. If you could consider dropping them, or some check based on xrootd version?. Thanks,; Andre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11750:522,config,configure,522,https://root.cern,https://github.com/root-project/root/issues/11750,1,['config'],['configure']
Modifiability,"Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. ; - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. ; - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:; -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly; -Variable length strings are properly supported (using TString); -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3707:1101,Variab,Variable,1101,https://root.cern,https://github.com/root-project/root/pull/3707,1,['Variab'],['Variable']
Modifiability,"Dear ROOT team,. while integrating some CMake functionality provided by ROOT through the `ROOT_USE_FILE` include into our project, some small issues came up. If we are mistaken and there are better solutions than the one I provided, your advice is very welcome. Our `FindROOT.cmake` implementation looks like this:; ```cmake; find_package(ROOT QUIET CONFIG; HINTS; ${ROOT_ROOT} # aliBuild; ${ROOTSYS} # upstream; $ENV{ROOTSYS} # upstream; ${SIMPATH} # FairSoft; ); include(FindPackageHandleStandardArgs); find_package_handle_standard_args(ROOT CONFIG_MODE); include(${ROOT_USE_FILE}); ```; which is called in a `CMakeLists.txt` like this; ```cmake; find_package(ROOT 6.10.04 REQUIRED); ```. Please see the commit messages for more details about the issues we had. Best regards,; Dennis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/916:350,CONFIG,CONFIG,350,https://root.cern,https://github.com/root-project/root/pull/916,1,['CONFIG'],['CONFIG']
Modifiability,Dependencies using ${GENERATE_REFLEX_TEST} variable do not work in roottest,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7978:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/issues/7978,1,['variab'],['variable']
Modifiability,Deprecate then remove exceptions config flag,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9114:33,config,config,33,https://root.cern,https://github.com/root-project/root/issues/9114,1,['config'],['config']
Modifiability,Difficult to configure Xrootd to use non-builtin openssl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10075:13,config,configure,13,https://root.cern,https://github.com/root-project/root/issues/10075,1,['config'],['configure']
Modifiability,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8420:22,sandbox,sandbox,22,https://root.cern,https://github.com/root-project/root/pull/8420,1,['sandbox'],['sandbox']
Modifiability,Do not require pkg-config in FindDavix.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1994:19,config,config,19,https://root.cern,https://github.com/root-project/root/pull/1994,1,['config'],['config']
Modifiability,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7178:250,variab,variables,250,https://root.cern,https://github.com/root-project/root/pull/7178,1,['variab'],['variables']
Modifiability,"Documentation of the method reported here for ease of review:. This method books a custom action for execution. The behavior of the action is completely dependent on the; Helper object provided by the caller. The minimum required interface for the helper is the following (more; methods can be present, e.g. a constructor that takes the number of worker threads is usually useful):. * Helper must publicly inherit from ROOT::Detail::TDF::TActionImpl<Helper>; * Helper(Helper &&): a move-constructor is required. Copy-constructors are discouraged.; * ColumnTypes_t: alias for a ROOT::TypeTraits::TypeList instantiation that specifies the types of the; columns to be passed to this action helper.; * Result_t: alias for the type of the result of this action helper. Must be default-constructible.; * ROOT::Detail::TDF::ColumnNames_t GetColumnNames() const: return the names of the columns processed by this; action. The number of names must be equal to the size of ColumnTypes_t.; * void Exec(unsigned int slot, ColumnTypes...columnValues): each working thread shall call this method; during the event-loop, possibly concurrently. No two threads will ever call Exec with the same 'slot' value:; this parameter is there to facilitate writing thread-safe helpers. The other arguments will be the values of; the requested columns for the particular entry being processed.; * void InitTask(TTreeReader *, unsigned int slot): each working thread shall call this method during the event; loop, before processing a batch of entries (possibly read from the TTreeReader passed as argument, if not null).; This method can be used e.g. to prepare the helper to process a batch of entries in a given thread. Can be no-op.; * void Initialize(): this method is called once before starting the event-loop. Useful for setup operations.; Can be no-op.; * void Finalize(): this method is called at the end of the event loop. Commonly used to finalize the contents; of the result.; * Result_t &PartialUpdate(unsigned int s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1905:406,inherit,inherit,406,https://root.cern,https://github.com/root-project/root/pull/1905,1,['inherit'],['inherit']
Modifiability,"Doing in a empty build directory; ```; cmake -Dminimal=ON $ROOT_SRC_DIR; cmake -Dbuiltin_xrootd=ON .; ```; fails with:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16374:697,variab,variable,697,https://root.cern,https://github.com/root-project/root/issues/16374,1,['variab'],['variable']
Modifiability,"Due to a pythonization not yet carried from old to experimental PyROOT, multiple calls of the same object from a TFile done e.g in the usual way `file.object` used to retrieve copies of the same object, leading to the failure of a test.; The pythonization of the TDirectoryFile:Get() method was thus added; in this way, also the TFile class inherits it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4148:341,inherit,inherits,341,https://root.cern,https://github.com/root-project/root/pull/4148,1,['inherit'],['inherits']
Modifiability,Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:; ```; -- Looking for python; -- Looking for numpy (python package); -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option; ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:; ```; -- Looking for python; -- Looking for numpy (python package); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):; TMVA: numpy python package not found and tmva-pymva component required; (python executable:; /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python); ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:; ```; ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972:91,config,configuration,91,https://root.cern,https://github.com/root-project/root/pull/2972,3,['config'],"['configuration', 'configures']"
Modifiability,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6212:182,variab,variable,182,https://root.cern,https://github.com/root-project/root/pull/6212,1,['variab'],['variable']
Modifiability,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:25263,variab,variable,25263,https://root.cern,https://github.com/root-project/root/issues/7431,1,['variab'],['variable']
Modifiability,"Enable ROOT's builtin_llvm=Off. This patch allows ROOT to be built against compatible external llvm (5.0 or 5.0.1). Note that we still need to build clang (eg. we require builtin_clang=On) due to the ROOT-specific patches which are not yet upstream. Since we have externally installed llvm, we configure and build clang as a standalone project. The configuration relies on finding llvm-config-5.0 and uses an adapted version of the standard clang standalone build procedure. Clang provides dependencies such as FileCheck and not which are used by cling's testsuite and are not being installed with the standard llvm package. Cling (which depends on llvm and clang) is built as a clang tool to avoid unresolved dependencies to clang and complicating further the already complicated cmake setup.; ; This patch intends a minimal change and follows the initial (suboptimal) design to configure and build llvm, clang and cling as part of ROOT. An ultimate solution would be to have llvm, clang and cling built as separate standalone projects (following the recommended way by the LLVM cmake developers). This should reduce the compile times by approx 20% (if we have llvm-5.0-dev installed) and make cross compilation of ROOT a little easier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1632:294,config,configure,294,https://root.cern,https://github.com/root-project/root/pull/1632,5,"['adapt', 'config']","['adapted', 'config-', 'configuration', 'configure']"
Modifiability,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15313:13,config,configured,13,https://root.cern,https://github.com/root-project/root/pull/15313,2,"['Extend', 'config']","['Extend', 'configured']"
Modifiability,Enhance CMake FindR module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14201:0,Enhance,Enhance,0,https://root.cern,https://github.com/root-project/root/pull/14201,1,['Enhance'],['Enhance']
Modifiability,Enhanced functionality for RDF Define,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:0,Enhance,Enhanced,0,https://root.cern,https://github.com/root-project/root/pull/9174,1,['Enhance'],['Enhanced']
Modifiability,"Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result; * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:; https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11768:34,variab,variable,34,https://root.cern,https://github.com/root-project/root/issues/11768,2,['variab'],['variable']
Modifiability,Eve7: refactor source code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3477:6,refactor,refactor,6,https://root.cern,https://github.com/root-project/root/pull/3477,1,['refactor'],['refactor']
Modifiability,"Even though the `RooResolutionModel` inherits from RooAbsPdf, it is; special because it has it's own overload of `getValV`. This is; problematic for the new RooFit batch mode, because it doesn't use; `getValV` but instead `RooAbsReal::evaluate()` directly. Then for pdfs; it does the normalization, and for non-pdfs it doesn't. The `RooResolutionModel::getValV` is implemented such that the; resolution model behaves like a pdf when used on it's own (i.e., it will; be normalized), but when used for an analytical convolution via; `RooAbsAnaConvPdf`, it is not normalized. In this commit, the function `RooResolutionMode::selfNormalized` is; implemented to return `true` if the resolution model is used in a; convolution. Like this, it's behavior as a pdf is consistent with the; `getValV` implementation and the batch mode had no problems using that; class anymore. One complication after this change was the integral code in; `RooAbsAnaConvPdf`. In that code, the RooResolutionModel's integral; value is retrieved by getting it's normalization integral, but now that; the resolution model is proclaiming to be self-normalized the integral; is always trivially one. This problem is solved by getting the; normalization integral directly via `getNormObj` from the normalization; integral cache manager, in which case the check for self-normalization; is not done. In fact, this has already been done before in the case of; ranged fits, so the change in this commit is actually a simplification; of the code because it removes a code branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9212:37,inherit,inherits,37,https://root.cern,https://github.com/root-project/root/pull/9212,1,['inherit'],['inherits']
Modifiability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. Initially, the check where the copied normalization set needs to be updated was done based on the address of the normalization set. However, comparisons by address should be avoided because they can lead to false positives if memory is recycled. That's why this PR also contains the UniqueId mechanism already proposed and reviewed in https://github.com/root-project/root/pull/8324. The backport of this PR to v624 is the PR https://github.com/root-project/root/pull/8579, which doesn't use the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8580:44,variab,variables,44,https://root.cern,https://github.com/root-project/root/pull/8580,1,['variab'],['variables']
Modifiability,"Every RooFit pdf is evaluated with a set of variables to normalize over; (normalization set). A pointer to the last used normalization set is; stored in the pdf class. sometimes, pdfs are evaluated without a; normalization set in RooFit if the normalization doesn't matter. But for; a specific class the normalization always matters: the RooAddPdf Because; if the components are unnormalized, you get the wrong shape of the sum. That's why commit f6d1543 added some lines to use the last-used; normalization set if you evaluate a RooAddPdf without a normalization; set. But since the pdf only has a *pointer* to the last-used; normalization set, it will have an invalid pointer if the actual; previous normalization set gets destroyed. Because of RooFits memory pool for the RooArgSets that only recycles; memory every 6000 RooArgSets, the invalid `_normSet` problem only gets; visible in large models, but if the model is large enough it causes; reproducible crashes, as reported by the ATLAS Higgs combination group. This commit fixes the issue by copying the last-used normalization set; into the RooAddPdf, instead of only storing a pointer. Furthermore, the; logic to override the empty normalization set with the last-stored; normalization set is moved to `RooAbsPdf::getNormAndCache()`, avoiding; the overload of `RooAbsPdf::getValV()`. This is a backport of https://github.com/root-project/root/pull/8580, minus the safer uniqueId mechanism, which is probably too big of a change for a patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8579:44,variab,variables,44,https://root.cern,https://github.com/root-project/root/pull/8579,1,['variab'],['variables']
Modifiability,"Example with TH1F, for reproducibility, but happens for any class accessed via ROOT. >>> class MyClass(ROOT.TH1F):; ... ""My Class""; ... ; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; KeyError: 'UpdateBinContent'. The variable with the KeyError is always the variable last in the list of private data members. ; This error appears on lxplus, CentOS Linux 7 (Core), gcc version 7.3.0, CXXFLAGS=-fPIC -g -O2 -std=c++17. This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:245,variab,variable,245,https://root.cern,https://github.com/root-project/root/issues/6856,2,['variab'],['variable']
Modifiability,Exclude usage of local displays like `cef` or `qt6` on remote nodes ; By default such displays are used before real http server is started ; Therefore set explicitly such variable. Checked that rootssh from Linux to Mac is working.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16812:171,variab,variable,171,https://root.cern,https://github.com/root-project/root/pull/16812,1,['variab'],['variable']
Modifiability,"Export RooSimultaneous channels as dictionary of names instead of having; the full pdf specification as the value. This change is done because all pdfs should be specified in the; top-level `pdf` structure. The code of the `RooJSONFactoryWSTool` is also refactored such that; `exportObject` doesn't need to take the node where is should put the; object. It's better if it figures out itself to avoid errors when; calling it. Also, I suggest to not strip the `model_` prefix of the name from the; pdf that specifies a HistFactory channel. Otherwise, the name values in; the RooSimultaneous don't match anymore, which is a problem now that we; use names as values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10791:254,refactor,refactored,254,https://root.cern,https://github.com/root-project/root/pull/10791,1,['refactor'],['refactored']
Modifiability,Extend -ast-dump for CXXRecordDecl to dump the flags from the Definit…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4539:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/4539,1,['Extend'],['Extend']
Modifiability,Extend CODEOWNERS for all webgui components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15836:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/15836,1,['Extend'],['Extend']
Modifiability,Extend GenerateInfoForPair integrity check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6893:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/6893,1,['Extend'],['Extend']
Modifiability,Extend Pythonization of TGraph* getters,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13601:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/13601,1,['Extend'],['Extend']
Modifiability,Extend TCanvasImp interface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/622:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/622,1,['Extend'],['Extend']
Modifiability,Extend `TColor::DefinedColors()` functionality,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14010:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/14010,1,['Extend'],['Extend']
Modifiability,Extend `THStack::BuildPrimitives()` method and let rebuild list of stacked histograms. Fixes problem when `THStack::GetXaxis()` called in web mode - internal redrawing of the current pad lead to creation but then deletion of `fHistogram`. . Behavior of normal graphics not changed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16623:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/16623,1,['Extend'],['Extend']
Modifiability,Extend io customization support: whole obj rule in split obj.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/8429,1,['Extend'],['Extend']
Modifiability,Extend templation in GenVector to better support vectorised Vc types.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/394,1,['Extend'],['Extend']
Modifiability,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/8090,1,['Extend'],['Extend']
Modifiability,Extend the [TGaxis](https://root.cern/doc/master/classTGaxis.html) so that nice “arrows” could be added on its ends.; As requested [here](https://root-forum.cern.ch/t/how-to-change-the-position-of-axes-of-a-graph/51970/16):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11634:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/issues/11634,1,['Extend'],['Extend']
Modifiability,Extend the message ID type to Long_t to fix overflow described in #6715,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6740:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/6740,1,['Extend'],['Extend']
Modifiability,"Extend the regex passed to 'compose_method' to include 'E*(low,high)[d]' getters. Fixes #13600",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13601:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/13601,1,['Extend'],['Extend']
Modifiability,"Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to; the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/8429,1,['Extend'],['Extend']
Modifiability,Extend the use of TThreadExecutor in ROOT and fix documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/395:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/395,1,['Extend'],['Extend']
Modifiability,Extend the verbose mode of cling and rootcling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4606:0,Extend,Extend,0,https://root.cern,https://github.com/root-project/root/pull/4606,1,['Extend'],['Extend']
Modifiability,Extended fitting interfaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567:0,Extend,Extended,0,https://root.cern,https://github.com/root-project/root/pull/567,1,['Extend'],['Extended']
Modifiability,Extended return value of operator* to TGeoHMatrix.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2403:0,Extend,Extended,0,https://root.cern,https://github.com/root-project/root/pull/2403,1,['Extend'],['Extended']
Modifiability,Extended return value of operator* to TGeoHMatrix. Added Multiply tak…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2413:0,Extend,Extended,0,https://root.cern,https://github.com/root-project/root/pull/2413,3,['Extend'],['Extended']
Modifiability,"Extending FindLZ4 with a xxhash needed for LZ4 checksum func. and adding ""pure"" xxhash API in case standalone lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/935:0,Extend,Extending,0,https://root.cern,https://github.com/root-project/root/pull/935,1,['Extend'],['Extending']
Modifiability,Extending FindLZ4.cmake with xxhash includes/library needed for LZ4 checksum functionality,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1059:0,Extend,Extending,0,https://root.cern,https://github.com/root-project/root/pull/1059,1,['Extend'],['Extending']
Modifiability,Extending TH2Poly such as to make it behave like TProfile2D with the addition of being able to deal with polygonal bins. TH2; |; |; +-------+------+------+-----+-----+-------------+; | | | | | |; TH2C TH2S TH2I TH2F TH2D TH2Poly; | |; | |; TProfile2D TProfile2Poly. The main goal of TProfile2Poly: Showing averages / standard deviation of measured values per polygonal bins. **[EDIT]**; Proposed tutorial:; https://gist.github.com/imKuehlschrank/1efbbd4426d9bdfa9ceb27e09ae7e958; Similar style as https://root.cern/doc/master/th2polyEurope_8C.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/515:0,Extend,Extending,0,https://root.cern,https://github.com/root-project/root/pull/515,1,['Extend'],['Extending']
Modifiability,"Extension of the DNN implementation with weighting of training samples according to event weights for all backends (Reference, CPU, Cuda). Adapted and extended tests to cover new functionality. . Also removes one previously unused file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/738:139,Adapt,Adapted,139,https://root.cern,https://github.com/root-project/root/pull/738,2,"['Adapt', 'extend']","['Adapted', 'extended']"
Modifiability,"Extra checks for nullptr, exclude unused variables.; Last commit - bugfix in error code handling; Closing #7425",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7442:41,variab,variables,41,https://root.cern,https://github.com/root-project/root/pull/7442,1,['variab'],['variables']
Modifiability,"FE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.; > ; > The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. Will un-draft the PR once the following is done (based on previous review comments by @guitargeek @hageboeck @amadio @lmoneta and also some other things from myself):; - [x] includes: correct order (matching header, RooFit, ROOT, std) and ROOT includes in quotation marks; - [x] fix ZMQ deprecation warnings; - [x] refactor member names: underscore suffix; - [x] document important things with doxygen; - [x] remove commented out code and TODOs and other junk; - [x] fix copyright headers + author lists (RooFitZMQ: me, Roel; MP: me, Inti, Vince); - [ ] rebase in 2-3 neat commits that all compile and pass tests; - [x] clang-tidy up; - [x] change libzmq builtin back to master after PR is merged: https://github.com/zeromq/libzmq/pull/4266; - [ ] ~use `enum class` instead of template parameters for minimizer function implementation choice~ -> next PR. _Edit 18 Nov 2021:_ the following list is to keep track of unaddressed (at time of writing) comments made in this thread (because the thread is so long that it is very inconvenient to navigate on GitHub which doesn't load it all at once):; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-773656413: only need to rebase, but that is already listed above. ; - [x] https://github.com/root-project/root/pull/9078#pullrequestreview-790026907: we have to double check whether the buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078:2096,refactor,refactor,2096,https://root.cern,https://github.com/root-project/root/pull/9078,1,['refactor'],['refactor']
Modifiability,FYI - I have created a standalone implementation of ranluxpp written in C based on your code. You can check it here:. https://github.com/jirka-h/ranluxpp-portable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8504:154,portab,portable,154,https://root.cern,https://github.com/root-project/root/issues/8504,1,['portab'],['portable']
Modifiability,Fail to configure when packages are not found and fail-on-missing=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1975:8,config,configure,8,https://root.cern,https://github.com/root-project/root/pull/1975,1,['config'],['configure']
Modifiability,Fail to configure with mismatched versions of Python and its libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3044:8,config,configure,8,https://root.cern,https://github.com/root-project/root/pull/3044,1,['config'],['configure']
Modifiability,Finish up with changing naming of `friend_info` to `friendinfo` which is more consistent with other variable naming in various classes and functions in DistRDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8862:100,variab,variable,100,https://root.cern,https://github.com/root-project/root/pull/8862,1,['variab'],['variable']
Modifiability,"First delete nop method `TMVA::SVWorkingSet::PrintStat()`, then remove many more unused variables in various areas. **Note**: If you absolutely require your part of this PR be split out, we can discuss but it's going to be work that I'd like to avoid if possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11157:88,variab,variables,88,https://root.cern,https://github.com/root-project/root/pull/11157,1,['variab'],['variables']
Modifiability,"First introduced by #5083, a mechanism was put in place to build PyROOT for both Python 2 and Python 3. As Python 2 is not supported anymore by ROOT, this patch can be reverted. This helps to get again closer with upstream cppyy and CPyCppyy, avoids setting environment variables when importing ROOT, and reduces overhead in importing the ROOT module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14703:270,variab,variables,270,https://root.cern,https://github.com/root-project/root/pull/14703,1,['variab'],['variables']
Modifiability,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11207:1551,variab,variable,1551,https://root.cern,https://github.com/root-project/root/issues/11207,1,['variab'],['variable']
Modifiability,"First reported here: https://bugs.gentoo.org/793002. To reproduce, it should be enough to configure with; ```; $ cmake .. -DCMAKE_C_COMPILER=gcc-11.1.0 -DCMAKE_CXX_COMPILER=g++-11.1.0 -DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:90,config,configure,90,https://root.cern,https://github.com/root-project/root/issues/8281,1,['config'],['configure']
Modifiability,"First reported on the forum at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639 . Minimal reproducer:. ```cpp; #include <Math/Vector4D.h>; #include <ROOT/RDataFrame.hxx>. float TakeMVector(ROOT::Math::PtEtaPhiMVector &) { return 4.2; }. int main() {; ROOT::RDataFrame df(""Tree"", ""example_file.root"");. df.Define(""unused"", ""L""); // the failure disappears if this is commented out, even if ""unused"" is never used. auto dff4 = df.Define(""x"", TakeMVector, {""L""});; dff4.Max<float>(""x"").GetValue();; }; ```. with the input file at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639/3?u=eguiraud . The program errors out with:. ```; The branch L contains data of type ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >. It cannot be accessed by a TTreeReaderValue<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >>; ```. (so TTreeReaderValue cannot read a `LorentzVector<PtEtaPhiM4D<Double32_t>>` as a `LorentzVector<PtEtaPhiM4D<double>>`). The following patch by @Axel-Naumann seems to fix the problem:. ```diff; diff --git a/tree/treeplayer/src/TTreeReaderValue.cxx b/tree/treeplayer/src/TTreeReaderValue.cxx; index 2323cffee4..6d938f1b14 100644; --- a/tree/treeplayer/src/TTreeReaderValue.cxx; +++ b/tree/treeplayer/src/TTreeReaderValue.cxx; @@ -554,7 +554,8 @@ void ROOT::Internal::TTreeReaderValueBase::CreateProxy() {; auto branchActualTypeAsClass = dynamic_cast<TClass*>(branchActualType);; auto inheritance = dictAsClass && branchActualTypeAsClass && branchActualTypeAsClass->InheritsFrom(dictAsClass);. - if (fDict != branchActualType && !inheritance) {; + if (fDict != branchActualType && !inheritance; + && dictAsClass->GetTypeInfo() != branchActualTypeAsClass->GetTypeInfo()) {; TDataType *dictdt = dynamic_cast<TDataType*>(fDict);; TDataType *actualdt = dynamic_cast<TDataType*>(branchActualType);; bool complainAboutMismatch = true;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12334:1486,inherit,inheritance,1486,https://root.cern,https://github.com/root-project/root/issues/12334,4,"['Inherit', 'inherit']","['InheritsFrom', 'inheritance']"
Modifiability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:129,extend,extended,129,https://root.cern,https://github.com/root-project/root/pull/12846,2,['extend'],['extended']
Modifiability,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:129,extend,extended,129,https://root.cern,https://github.com/root-project/root/pull/13842,1,['extend'],['extended']
Modifiability,Fix CMake configuration and build with oneTBB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8239:10,config,configuration,10,https://root.cern,https://github.com/root-project/root/pull/8239,1,['config'],['configuration']
Modifiability,Fix CMake configuration without Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13292:10,config,configuration,10,https://root.cern,https://github.com/root-project/root/pull/13292,1,['config'],['configuration']
Modifiability,Fix Dropout for Dense layers in MethodDL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3516:22,layers,layers,22,https://root.cern,https://github.com/root-project/root/pull/3516,1,['layers'],['layers']
Modifiability,Fix Imt configure in the classic build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/950:8,config,configure,8,https://root.cern,https://github.com/root-project/root/pull/950,1,['config'],['configure']
Modifiability,Fix JITted variables on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3590:11,variab,variables,11,https://root.cern,https://github.com/root-project/root/pull/3590,1,['variab'],['variables']
Modifiability,Fix OpenMP shadowing declaration of MnPrint print thread-local variable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9327:63,variab,variable,63,https://root.cern,https://github.com/root-project/root/pull/9327,1,['variab'],['variable']
Modifiability,Fix Python related variables for tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5625:19,variab,variables,19,https://root.cern,https://github.com/root-project/root/pull/5625,1,['variab'],['variables']
Modifiability,Fix Python variables in root-config output,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5738:11,variab,variables,11,https://root.cern,https://github.com/root-project/root/pull/5738,2,"['config', 'variab']","['config', 'variables']"
Modifiability,Fix RLogger interface in CEF and Qt5 adapters,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6959:37,adapt,adapters,37,https://root.cern,https://github.com/root-project/root/pull/6959,1,['adapt'],['adapters']
Modifiability,Fix ROOT nighly builds failing to configure with CMake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/383:34,config,configure,34,https://root.cern,https://github.com/root-project/root/pull/383,1,['config'],['configure']
Modifiability,"Fix ROOT-10837 (and technically it is a completion of the fix for ROOT-9393).; See allow commit f8897bb49c2fc81e875a7fd70dec9f1f714e6398 and 6ad1a98455bec01ccfce6ea9ddde62154bedf1a4. Seen with CMS NanoAOD files: https://root-forum.cern.ch/t/merge-nanoaod-root-files/39707/13; When the files have several array branches using the same ""leaf count"" branch and the maximum array size increase from file to file, only the memory allocated for the ""first"" array is extended. This results in memory error for the other arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5844:460,extend,extended,460,https://root.cern,https://github.com/root-project/root/pull/5844,1,['extend'],['extended']
Modifiability,Fix RooAbsPdf::extendedTerm when expected events is negative,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8012:15,extend,extendedTerm,15,https://root.cern,https://github.com/root-project/root/pull/8012,1,['extend'],['extendedTerm']
Modifiability,Fix TMVARegression and Application not using the same default config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/604:62,config,config,62,https://root.cern,https://github.com/root-project/root/pull/604,1,['config'],['config']
Modifiability,"Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction; can safely assume that the previous node in the chain still exists when it is; being constructed; * fPrevData is now a reference instead of a raw pointer in all classes:; a reference better indicates that we always expect fPrevData to be a valid; node of the chain. In fact, the only case when this condition might not be; met is when the TDataFrameImpl object goes out-of-scope before other nodes; of the chain; we detect this case and throw before trying to access; invalid fPrevData pointers/references.; * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/333:713,variab,variables,713,https://root.cern,https://github.com/root-project/root/pull/333,1,['variab'],['variables']
Modifiability,Fix a long standing issue with popup (and context) menus popping up on wrong display on Windows with multiple display configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4062:118,config,configuration,118,https://root.cern,https://github.com/root-project/root/pull/4062,1,['config'],['configuration']
Modifiability,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10922:24,config,config,24,https://root.cern,https://github.com/root-project/root/pull/10922,2,['config'],['config']
Modifiability,Fix bug in TH1 drawing when minimum or/and maximum was configured for histogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9433:55,config,configured,55,https://root.cern,https://github.com/root-project/root/pull/9433,1,['config'],['configured']
Modifiability,Fix build of llvm in Release mode for multi-configuration generators …,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4391:44,config,configuration,44,https://root.cern,https://github.com/root-project/root/pull/4391,1,['config'],['configuration']
Modifiability,Fix configuration when builtin_glew is enabled on demand,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3983:4,config,configuration,4,https://root.cern,https://github.com/root-project/root/pull/3983,1,['config'],['configuration']
Modifiability,Fix doxygen problems / extend docstrings in; - RooPolynomial; - HistFactory; - RooAbsReal; - RooRealSumPdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3331:23,extend,extend,23,https://root.cern,https://github.com/root-project/root/pull/3331,1,['extend'],['extend']
Modifiability,Fix gcc11 warning in TF2 - use of uninitialized variable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8315:48,variab,variable,48,https://root.cern,https://github.com/root-project/root/pull/8315,1,['variab'],['variable']
Modifiability,Fix handling of global vs local print level in VariableMetricBuilder.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5128:47,Variab,VariableMetricBuilder,47,https://root.cern,https://github.com/root-project/root/pull/5128,1,['Variab'],['VariableMetricBuilder']
Modifiability,Fix histogram stat box update; Do not use variables before define them; Remove unused variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6420:42,variab,variables,42,https://root.cern,https://github.com/root-project/root/pull/6420,2,['variab'],['variables']
Modifiability,Fix implementation of RooSimultaneous::extendMode(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6898:39,extend,extendMode,39,https://root.cern,https://github.com/root-project/root/pull/6898,1,['extend'],['extendMode']
Modifiability,Fix input variable parsing for TMVAGUI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/462:10,variab,variable,10,https://root.cern,https://github.com/root-project/root/pull/462,1,['variab'],['variable']
Modifiability,Fix issue #13569 `[RHist] variable bins_per_hyperplane is being used without being initialized`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13570:26,variab,variable,26,https://root.cern,https://github.com/root-project/root/pull/13570,1,['variab'],['variable']
Modifiability,Fix issue #6670. Avoid infinite recursion from TClass::InheritsFrom.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6680:55,Inherit,InheritsFrom,55,https://root.cern,https://github.com/root-project/root/pull/6680,1,['Inherit'],['InheritsFrom']
Modifiability,Fix misnamed variable in RooRandomizeParamMCSModule,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1379:13,variab,variable,13,https://root.cern,https://github.com/root-project/root/pull/1379,1,['variab'],['variable']
Modifiability,"Fix mostly warning C4138: '*/' found outside of comment, but also:; warning C4101: 'hProcess': unreferenced local variable; warning C4005: 'open': macro redefinition; warning C4002: too many actual parameters for macro 'open'; warning C4091: 'static ': ignored on left of '' when no variable is declared",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1201:114,variab,variable,114,https://root.cern,https://github.com/root-project/root/pull/1201,2,['variab'],['variable']
Modifiability,Fix root-config now that 'thread' option is always enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4342:9,config,config,9,https://root.cern,https://github.com/root-project/root/pull/4342,1,['config'],['config']
Modifiability,Fix stats update in historgam when running in THttpServer; Many small fixes with usage of undefined variables -; discovered when developing jsroot v6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6419:100,variab,variables,100,https://root.cern,https://github.com/root-project/root/pull/6419,1,['variab'],['variables']
Modifiability,Fix the compilation of Cuda with C++14 when normal ROOT is compile with C++17 which has std::string_view. Support compilation when configuting with: ; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CUDA_STANDARD=14. The fix is done by modifying the pre-processor macros defined in RConfigure.h when compiling Cuda.; A better fix would be to remove the TString dependency in the Cuda compiled code. TString is used only when doing I/O of the DeepNet layers to XML. In principle this code could be moved out of Cuda.; Something to be done in a future code re-factoring,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598:131,config,configuting,131,https://root.cern,https://github.com/root-project/root/pull/5598,2,"['config', 'layers']","['configuting', 'layers']"
Modifiability,Fix the output of `root-config.bat` that makes several TMVA tests failing due to extra spaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11488:24,config,config,24,https://root.cern,https://github.com/root-project/root/pull/11488,1,['config'],['config']
Modifiability,"Fix the replacement of S,B with x,y in formula used for performance metrics when S and B appear in function name and not as variables. ; Example: RooStats::AsimovSignificance(S,B) which has a S in its function name",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3626:124,variab,variables,124,https://root.cern,https://github.com/root-project/root/pull/3626,1,['variab'],['variables']
Modifiability,Fix unused variable warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/815:11,variab,variable,11,https://root.cern,https://github.com/root-project/root/pull/815,1,['variab'],['variable']
Modifiability,Fix unused variable warning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/71:11,variab,variable,11,https://root.cern,https://github.com/root-project/root/pull/71,2,['variab'],['variable']
Modifiability,Fix use of RooFit::Extended in createNLL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10647:19,Extend,Extended,19,https://root.cern,https://github.com/root-project/root/pull/10647,1,['Extend'],['Extended']
Modifiability,Fix variable name in tutorials/graphs/scatter.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15923:4,variab,variable,4,https://root.cern,https://github.com/root-project/root/pull/15923,1,['variab'],['variable']
Modifiability,Fix warning of unused variable in roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9368:22,variab,variable,22,https://root.cern,https://github.com/root-project/root/pull/9368,1,['variab'],['variable']
Modifiability,"Fixes #11344 . Mostly quoting @eguiraud in #11344 :. import ROOT (via cppyy) causes the setting of the environment variable EXTRA_CLING_ARGS to -O2 -- but too late (after interpreter initialization), so that the setting actually has no effect: cling will still use its default of -O1, but checking EXTRA_CLING_ARGS will give users the wrong impression. Since there is no reason to set the environment variable in the first place, it has no effect anyway, and it can be confusing for users trying to figure out what options cling is running with, this PR removes the behavior from PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11524:115,variab,variable,115,https://root.cern,https://github.com/root-project/root/pull/11524,2,['variab'],['variable']
Modifiability,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14160:287,variab,variable,287,https://root.cern,https://github.com/root-project/root/pull/14160,1,['variab'],['variable']
Modifiability,"Fixes #6345 . This PR changes the way base-class protected methods are handled in the; Dispatcher class in cross inheritance. Instead of exposing them with a ""using""; declaration in the Dispatcher class, they are redeclared and the call is forwarded; to the base class. This prevents the issues described in #6345 , when:; - There is more than one protected overload of a method; - There is a protected and a private overload of a method. Adapted from cppyy's:; https://bitbucket.org/wlav/cpycppyy/commits/1f158f4ad7cbe9951f43d24a217e60c009dd046c. for the case of just one base class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6994:113,inherit,inheritance,113,https://root.cern,https://github.com/root-project/root/pull/6994,2,"['Adapt', 'inherit']","['Adapted', 'inheritance']"
Modifiability,Fixes #6376. The previous way of calculating the offset was causing a corruption in a multi-inheritance case (described in #6376). Adapted from:; https://bitbucket.org/wlav/cpycppyy/commits/7d9eb4a170ff9e3da9569232ba76ef59c9ee72fd; since CPPConstructor.cxx has changed since last update.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6434:92,inherit,inheritance,92,https://root.cern,https://github.com/root-project/root/pull/6434,2,"['Adapt', 'inherit']","['Adapted', 'inheritance']"
Modifiability,"Fixes #6470 . Fix how the inheritance hierarchy is constructed when there's more; than one level of cross-inheritance, for example C++ class ->; Py class 1 -> Py class 2. In the example, the C++ Dispatcher class; of Py class 2 should inherit from the Dispatcher class of Py class 1,; and not directly from the base C++ class. This was causing an; undesired behaviour in the resolution of some virtual calls, as; shown in the reproducer of 6470. This PR is an adaptation of the code that is in upstream; cppyy, but it does not incorporate yet all the changes for; multiple cross-inheritance (i.e. a Python class that inherits; from more than one C++ class). Multiple cross-inheritance was; anyway not supported in old PyROOT, and its current implementation; in cppyy does not seem to support the inheritance from both a pure; Python class and a C++ class at the same time (even via the use; of cppyy.multi), and that case was supported in the old PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7022:26,inherit,inheritance,26,https://root.cern,https://github.com/root-project/root/pull/7022,8,"['adapt', 'inherit']","['adaptation', 'inherit', 'inheritance', 'inherits']"
Modifiability,Fixes 1vs1 roc curve drawing and minor refactoring.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/897:39,refactor,refactoring,39,https://root.cern,https://github.com/root-project/root/pull/897,1,['refactor'],['refactoring']
Modifiability,Fixes a problem with using genreflex to create a dictionary for a class that inherits from TObject. The problem was triggered by the thread-safety changes.; Depends on previous pull request (#12).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13:77,inherit,inherits,77,https://root.cern,https://github.com/root-project/root/pull/13,1,['inherit'],['inherits']
Modifiability,"Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. ; We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: ; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/. *** Break *** segmentation violation; ```. After:; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/; Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead; Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016:101,inherit,inherit,101,https://root.cern,https://github.com/root-project/root/pull/6016,2,['inherit'],['inherit']
Modifiability,"Fixes and improvements for the recurrent layers (RNN, LSTM and GRU) and their tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5367:41,layers,layers,41,https://root.cern,https://github.com/root-project/root/pull/5367,1,['layers'],['layers']
Modifiability,"Fixes https://github.com/root-project/root/issues/11971. leftover from https://github.com/root-project/root/commit/b1257ba27a7139e0c927693fded3b243b3f94b33. # This Pull request:. ## Changes or fixes:. Unused variable, found by HenryDayHall. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11972:208,variab,variable,208,https://root.cern,https://github.com/root-project/root/pull/11972,1,['variab'],['variable']
Modifiability,"Fixes https://github.com/root-project/root/issues/6616. While looking into this, I noticed that the `newcomp` variable is passed down the line to `TFileMerger::OutputFile`, which is declared at https://github.com/root-project/root/blob/master/io/io/inc/TFileMerger.h#L115 with a wrongly named parameter `compressionLevel`. That is in fact the full compression setting integer. Maybe the logic in `hadd` was misguided by the parameter name, I can take care of that in a separate PR. Sibling roottest PR at https://github.com/root-project/roottest/pull/1074",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14873:110,variab,variable,110,https://root.cern,https://github.com/root-project/root/pull/14873,1,['variab'],['variable']
Modifiability,Fixes issue #7115. Some characters need to be escaped before using variable names in std::regex; expressions formed in RooFormula::processForumla. Both [ and ] were already considered; this commit adds { and } to the list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7183:67,variab,variable,67,https://root.cern,https://github.com/root-project/root/pull/7183,1,['variab'],['variable']
Modifiability,Fixes issue #7115. Some characters need to be escaped before using variable names in std::regex; expressions formed in RooFormula::processForumla. Both [ and ] were already considered; this commit adds { and } to the list. Backport of https://github.com/root-project/root/pull/7183.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7188:67,variab,variable,67,https://root.cern,https://github.com/root-project/root/pull/7188,2,['variab'],['variable']
Modifiability,"Fixes the errors currently seen when building for conda. After the build `pyc` files are generated and this step fails for some of the tutorials with the following errors:; ```; compiling .pyc files...; File ""tutorials/pyroot/gui_ex.py"", line 20; print 'returning 0'; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print('returning 0')?. File ""tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py"", line 92; print ""Outputting %s -> %s"" % (afile, output_ROOT_file_name); ^; SyntaxError: invalid syntax. Sorry: TabError: inconsistent use of tabs and spaces in indentation (ROOTwriter.py, line 63); File ""tutorials/histfactory/makeQuickModel.py"", line 114; print ""It seems that pyROOT isn't properly configured""; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""It seems that pyROOT isn't properly configured"")?. Sorry: TabError: inconsistent use of tabs and spaces in indentation (writer.py, line 123); number of files: 6175; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4752:723,config,configured,723,https://root.cern,https://github.com/root-project/root/pull/4752,2,['config'],['configured']
Modifiability,Fixes the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16247:119,config,config,119,https://root.cern,https://github.com/root-project/root/pull/16247,1,['config'],['config']
Modifiability,Fixes the following warning:; ```; CMake Warning (dev) in interpreter/cling/tools/plugins/clad/CMakeLists.txt:; A logical block opening on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:17 (if). closes on the line. /root/root_src/interpreter/cling/tools/plugins/clad/CMakeLists.txt:27 (endif). with mis-matching arguments.; This warning is for project developers. Use -Wno-dev to suppress it.; ```. @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16701:82,plugin,plugins,82,https://root.cern,https://github.com/root-project/root/pull/16701,3,['plugin'],['plugins']
Modifiability,"Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:; https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15058:218,config,configuration,218,https://root.cern,https://github.com/root-project/root/pull/15058,1,['config'],['configuration']
Modifiability,Fixes the situation where the regular header uses projections and is then extended.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16621:74,extend,extended,74,https://root.cern,https://github.com/root-project/root/pull/16621,1,['extend'],['extended']
Modifiability,Fixes wrong variable being used to specify branch for windows nightlies; ```diff; --platform windows10; --incremental false; - --base_ref ${{ github.base_ref }}; + --base_ref ${{ github.ref_name }}; --repository ${{ github.server_url }}/${{ github.repository }}; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12607:12,variab,variable,12,https://root.cern,https://github.com/root-project/root/pull/12607,1,['variab'],['variable']
Modifiability,"Fixing most of the topics from #7427 . * Remove unused variable/values, ; * replace strcpy by strlcpy/strlcat. Keep `C` code warnings as is - maybe one can just disable them",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7445:55,variab,variable,55,https://root.cern,https://github.com/root-project/root/pull/7445,1,['variab'],['variable']
Modifiability,FlexibleInterpVar - protect against 0 or negative variations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13294:0,Flexible,FlexibleInterpVar,0,https://root.cern,https://github.com/root-project/root/pull/13294,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8411:33,adapt,adapt,33,https://root.cern,https://github.com/root-project/root/pull/8411,1,['adapt'],['adapt']
Modifiability,"Following up on github issue #12870, fixing RDataFrame::Graph SetTitle to y-axis-variable vs. x-axis-variable (was the opposite before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12875:81,variab,variable,81,https://root.cern,https://github.com/root-project/root/pull/12875,2,['variab'],['variable']
Modifiability,"Following widgets will be web-based by default:; 1. `TCanvas`; 2. `TBrowser`; 3. `TTreeViewer`; 4. `TGeomPainter`. Type of all these widgets can be configured via rootrc file:. ```; # As options for Canvas.Name, ROOT provides TWebCanvas and the legacy TRootCanvas.; Canvas.Name: TWebCanvas. # Type of Browser: TRootBrowser or TRootBrowserLite or ROOT::RWebBrowserImp; Browser.Name: ROOT::RWebBrowserImp. # Type of geometry painter: root or web; GeomPainter.Name: web. # Type of tree viewer: TTreeViewer or RTreeViewer; TreeViewer.Name: RTreeViewer; ```. Any of these settings can be adjusted in local `.rootrc` file. One can provide special config for web-based fit panel.; For the moment `TH1::FitPanel()` always starts classical GUI and there is no configurable plugin for that. ; The only problem - web-based fit panel was not tested for long time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15913:148,config,configured,148,https://root.cern,https://github.com/root-project/root/pull/15913,4,"['config', 'plugin']","['config', 'configurable', 'configured', 'plugin']"
Modifiability,"Follows up on c58e551, updating the minor version number that is expected. Since LLVM 17, the minor version number is hardcoded to ""1"" instead of ""0"": https://releases.llvm.org/. This will also be the case for the upcoming LLVM 19 release. This PR is needed to make ROOT configure with `builtin_llvm=OFF`. I was just trying this out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16432:271,config,configure,271,https://root.cern,https://github.com/root-project/root/pull/16432,1,['config'],['configure']
Modifiability,"For GDML files without arithmetic expressions in them this should be just as fast and give the same behaviour as before. Parsing is implemented by TFormula, including a pre-processing step to mark constant names with ""[]"" so that TFormula recognizes them as variables. Tested by importing and re-exporting a GDML file used by the NOvA experiment in root5 and root6 and checking that the results were identical, except for the naming of the volumes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/239:258,variab,variables,258,https://root.cern,https://github.com/root-project/root/pull/239,1,['variab'],['variables']
Modifiability,"For RH1 objects one can enable `SecondX()` or/and `SecondY()` draw option. ; In this case histogram painter will draw extra axes on the frame - fully interactive with zooming, independent log scale, ...; Provide extra attributes for secondary axes in RFrame; Provide example in tutorials: https://jsroot.gsi.de/dev/examples.htm?more#v7_rh1_twoaxes. Now works only with RH1, can be extend for basic objects like RLine, RText, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8184:381,extend,extend,381,https://root.cern,https://github.com/root-project/root/pull/8184,1,['extend'],['extend']
Modifiability,"For a long time, users had to increase their maximum stack size in order; to read RooFit workspaces. Otherwise, the process would simply end; without any message.; The problem is an 8kB stack buffer for the I/O of stl sets, which is; always declared but rarely used. Here, the buffer is replaced with a; heap buffer. This is an analysis of stack frames at -O2 in the moment of a crash:; ```; tot. size call count frame size; 5468960 665 8224 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b; 566576 2083 272 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char**; 307664 2747 112 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer; 133248 2082 64 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config; 131856 2747 48 libRIO.so`TBufferFile::ApplySequence(this sequence obj; 74480 665 112 libRIO.so`TBufferFile::ReadObjectAny(this clCast at; 68064 1418 48 libCore.so`TStreamerBase::ReadBuffer(this b pointer; 42560 665 64 libRIO.so`TGenCollectionStreamer::ReadBufferGeneric(this b obj; 42560 665 64 libRIO.so`TBufferFile::ReadFastArray(this start cl; 31920 665 48 libRIO.so`int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*,; 21280 665 32 libRooFitCore.so`RooAbsArg::Streamer(this R__b at; 14592 152 96 libRooFitCore.so`RooRealVar::Streamer(this R__b at; 1056 22 48 libRooFitCore.so`RooHistFunc::Streamer(this R__b at; 720 15 48 libHistFactory.so`PiecewiseInterpolation::Streamer(this R__b at; ```. and after this fix:; ```; 54400	200	272	 200 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this b 	272; 29792	266	112	 266 libRIO.so`TBufferFile::ReadClassBuffer(this cl pointer 	112; 12864	201	64	 201 libRIO.so`TStreamerInfoActions::GenericReadAction(buf addr config 	64; 12768	266	48	 266 libRIO.so`TBufferFile::ApplySequence(this sequence obj 	48; 8320	65	128	 65 libRIO.so`TGenCollectionStreamer::ReadObjects(this nElements b 	128; 7280	65	112	 65 libRIO.so`TBufferFile::ReadObjectAny(this clCast at 	112; 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9470:734,config,config,734,https://root.cern,https://github.com/root-project/root/pull/9470,1,['config'],['config']
Modifiability,"For example, imagine you define a variable int x = 3;. Then, you could type 'x' and press ENTER so that the command line shows its value.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7163:34,variab,variable,34,https://root.cern,https://github.com/root-project/root/pull/7163,1,['variab'],['variable']
Modifiability,For interactive session default web browser is used. But when producing image exact kind of browser is important. ; If exact browser kind not configured -; check if supported browsers are there. Add also support of Edge browser on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13097:142,config,configured,142,https://root.cern,https://github.com/root-project/root/pull/13097,1,['config'],['configured']
Modifiability,For returning the extend mode examine all the pdf in the list and; flag as CanExtend or MustExtend if just one of the pdf can be extended. Fix also passing the extended flags when creating the sub-NLL in RooNLLVar::create().; If one of the sim component cannot be extended then switch off the extended flag for that component. Before it was passed for all components. This fixes issue #6894,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6898:18,extend,extend,18,https://root.cern,https://github.com/root-project/root/pull/6898,5,['extend'],"['extend', 'extended']"
Modifiability,"For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window. Required for `tutorials/webgui/panel` example.; Will be required for local fonts or special apps in eve7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15867:174,config,configured,174,https://root.cern,https://github.com/root-project/root/pull/15867,1,['config'],['configured']
Modifiability,"For simplicity and code reusability, this PR suggests to merge the `EvaluateFuncs.h` header and the `AnalyticalIntegrals.h` header into a single header. Also, use `ROOT::Math::inc_gamma_(c)` directly in RooPoisson implementation. This saves us a few function calls and will also make it easier to implement custom pullbacks for the gradient, since the callstack is not as deep. Also, slightly refactor the code for evaluating the interpolations and improve the AD tests for the RooLandau to get more coverage. This is a part of #15502, factored out because these are already meaningful changes without the update to Clad 1.5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15557:393,refactor,refactor,393,https://root.cern,https://github.com/root-project/root/pull/15557,1,['refactor'],['refactor']
Modifiability,For some applications large binary buffer need to be transferred ; with JSON. Standard solution is base64 coding. It can be enabled by; JSON_base64 string in class comments or with kBase64 = 30 value in; compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`; to be able configure different TBufferJSON properties before streaming objects.; Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3928:303,config,configure,303,https://root.cern,https://github.com/root-project/root/pull/3928,1,['config'],['configure']
Modifiability,"For some reason root-config calls on macOS 10.13.2 are extremely slow (not sure if this is related to the meltdown / spectre mitigations). ```bash; [O2/latest] ~/work/active/sw/BUILD/ROOT-latest/ROOT %> time root-config --version; 6.13/01; root-config --version 0.24s user 1.06s system 131% cpu 0.989 total; ```. which than means that whatever dependent project using `FindROOT.cmake` is slowed down quite a lot when trying to do incremental builds. This is because of the multiple `root-config` invocations in such a macro, which are also not cached so they get done on any `make` invocation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1569:21,config,config,21,https://root.cern,https://github.com/root-project/root/pull/1569,4,['config'],['config']
Modifiability,From John Charles Hakala:. > I noticed that the `RDataFrame::Graph` method automatically gives a title on the `TGraphs` that it makes. that’s very nice! however it gives a title that is basically “(x-axis variable) vs. (y-axis variable)”. i think this is the opposite of what is conventional terminology; typically the variable of the x-axis is what comes after the “vs.”,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12870:205,variab,variable,205,https://root.cern,https://github.com/root-project/root/issues/12870,3,['variab'],['variable']
Modifiability,"Fully implement and test the new `Offset(""bin"")` feature over the test matrix that is the tensor product of `BatchMode()`, doing and extended fit, RooDataSet vs. RooDataHist, and SumW2 correction. The test should compute the likelihood for a template PDF created from the data, and it should be numerically compatible with zero. ```C++; void testOffsetBin(); {; using namespace RooFit;; using RealPtr = std::unique_ptr<RooAbsReal>;. // Create extended PDF model; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""width"", 4, 0.1, 10);; RooRealVar nEvents{""n_events"", ""n_events"", 10000, 100, 100000};. RooGaussian gauss(""gauss"", ""gauss"", x, mean, sigma);; RooAddPdf extGauss(""extGauss"", ""extGauss"", gauss, nEvents);. std::unique_ptr<RooDataSet> data{extGauss.generate(x)};. {; // Create weighted dataset and hist to test SumW2 feature; RooRealVar weight(""weight"", ""weight"", 0.5, 0.0, 1.0);; auto dataW = std::make_unique<RooDataSet>(""dataW"", ""dataW"", RooArgSet{x, weight}, ""weight"");; for (std::size_t i = 0; i < data->numEntries(); ++i) {; dataW->add(*data->get(i), 0.5); // try weights that are different from unity; }; std::swap(dataW, data); // try to replace the original dataset with weighted dataset; }. std::unique_ptr<RooDataHist> hist{data->binnedClone()};. data->Print();; hist->Print();. // Create template PDF based on data; RooHistPdf histPdf{""histPdf"", ""histPdf"", x, *hist};; RooAddPdf extHistPdf(""extHistPdf"", ""extHistPdf"", histPdf, nEvents);. auto& pdf = extHistPdf;. auto const bm = ""off""; // it should also work work BatchMode(""cpu""). double nllVal01 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Extended(false))}->getVal();; double nllVal02 = RealPtr{pdf.createNLL(*data, BatchMode(bm), Extended(true)) }->getVal();; double nllVal03 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Extended(false))}->getVal();; double nllVal04 = RealPtr{pdf.createNLL(*hist, BatchMode(bm), Extended(true)) }->getVal();. double nllVal1 = RealPtr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11965:133,extend,extended,133,https://root.cern,https://github.com/root-project/root/issues/11965,2,['extend'],['extended']
Modifiability,"Further reduction in lock contention when using RDataFrame with a large number of threads and/or files, by migrating one hot spot in TBufferFile to use read-write locks instead of only write locks. On a small test with 256 threads the reduced lock contention reduces wall time from 25 minutes to 19 seconds, and increases CPU usage from 400% to 4000%. This PR also fixes an uninitialised variable potentially affecting the global read-write lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7105:388,variab,variable,388,https://root.cern,https://github.com/root-project/root/pull/7105,1,['variab'],['variable']
Modifiability,"Had to make sure that the GSL_CBLAS_LIBRARY variable is set in the; same way in which FindGSL.cmake would set it, and that TMVA would; explicitly wait for the completion of the GSL build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5912:44,variab,variable,44,https://root.cern,https://github.com/root-project/root/pull/5912,1,['variab'],['variable']
Modifiability,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:128,config,config,128,https://root.cern,https://github.com/root-project/root/pull/7663,7,['config'],"['config', 'configuration']"
Modifiability,"Happens when try to find and execute static class method without arguments and which returns `void`. First detected with `TPluginHandler`. This is only plugin handler which defined with 0 arguments:; ```; gPluginMgr->AddHandler(""TGeoManagerEditor"", ""*"", ""TGeoManagerEditor"", ""GeomBuilder"", ""LoadLib()"");; ```; ROOT crashes when executed this plugin.; Problem can be cooked down to the reproducer - code which is executed by plugin handler:; ```; {; TClass *cl = TClass::GetClass(""TGeoManagerEditor"");. TString fCtor = ""LoadLib()"";. TString method = fCtor(0, fCtor.Index(""(""));; TString proto = fCtor(fCtor.Index(""("")+1, fCtor.Index("")"")-fCtor.Index(""("")-1);. auto fMethod = cl->GetMethodWithPrototype(method, proto);. auto fCallEnv = new TMethodCall;; fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;; fCallEnv->Execute(ret);; }. ```; It crashed when `fCallEnv->Execute` is called. . There is simple workaround:; ```; if (proto.Length() == 0) proto = ""()"";; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:152,plugin,plugin,152,https://root.cern,https://github.com/root-project/root/issues/11930,3,['plugin'],['plugin']
Modifiability,"Having tests in the `test/` directory is quite fragile for configuration reasons, because this is separate CMake project. Therefore, it doesn't share the same configuration variables, which is easy to forget. The RooFit stress tests have been moved already, and this commit moves the remaining RooFit tests. The code is reformatted with the ROOT `clang-format` style on this occasion. Also, the `longtest` label is removed form one of the tests because it doesn't actually take a long time to run (only a few seconds).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15490:59,config,configuration,59,https://root.cern,https://github.com/root-project/root/pull/15490,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"Hello everyone!; This is Akshay Vashistha, a GSOC student working on AutoEncoders. Currently I have implemented the Denoise Layer and working on stacking up the layers. After this, I will write some tests for same.; My next patch will have a properly implemented stacked layer architecture and some tests for verifying the correctness.; Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/686:161,layers,layers,161,https://root.cern,https://github.com/root-project/root/pull/686,1,['layers'],['layers']
Modifiability,"Hello everyone,. The [`AsimovSignificance`](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/roofit/roostats/src/RooStatsUtils.cxx#L61-L81) was a great addition to the arsenal of functions that ""just work"". I have recently noticed that there have been some neat generalisations posted to the [arXiv](https://arxiv.org/abs/2102.04275) and was wondering if it would be a good enhancement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7998:408,enhance,enhancement,408,https://root.cern,https://github.com/root-project/root/issues/7998,1,['enhance'],['enhancement']
Modifiability,"Hello, . When displaying several 3D objects the same canvas there is a problem, ; it was reported in old versions of ROOT ; https://root-forum.cern.ch/t/multiple-tgraph2d-in-a-single-plot/7409; and seems to be still there in the most recent versions. From my understanding, when two 3D objects do not have the same range hence axis when displaying them on the same canvas ROOT does not adapt them. ; Below is an example of something going wrong, I plot the parabola `x^2 + y^2` and as you can see on the plot the parabola takes negative values which is not possible. . <img width=""400"" alt=""frame_parabola"" src=""https://user-images.githubusercontent.com/29270790/99190276-e9a4bd80-2765-11eb-97e5-016d018dd6c6.png"">. This wrong display is because I plotted the TGraph2D on top of a frame with `z` values going from -10 to 10. ; But same would happen displaying two TGraph2D with different range I think as reported in the root forum. . Below is the code to reproduce the error, I execute it doing `root -l test_tgraph2d.cpp+`; ```C++; #include ""TStyle.h"" ; #include ""TH1.h""; #include ""TH2.h""; #include ""TH3F.h"" . #include ""TGraph.h"" ; #include ""TGraph2D.h"" ; #include ""TCanvas.h"" ; #include ""TView3D.h""; #include ""TAxis3D.h"" . #include<iostream> ; #include<vector> . double f( const double & x, const double & y); {; //return 1/(1+std::exp(-x)) * 1/(1+std::exp(-y)) ; . return x*x + y*y ; ; }. std::vector<double> linspace(; const double & vmin , ; const double & vmax , ; const unsigned int & npoints); {; // regular linspace ; double dx = (vmax - vmin)/double(npoints-1.) ; ; std::vector<double> vlinspace = {} ; ; for (unsigned int i = 0 ; i < npoints ; i++); {; vlinspace.push_back( vmin + double(i) * dx ) ; ; }. return vlinspace ;; }. void test_tgraph2d(); {; std::vector<double> ; vect_x , ; vect_y ;. vect_x = linspace(0.,10,100) ; ; vect_y = linspace(0.,10,100) ; . // nominal ; TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ; ; gr->SetDirectory(0) ; . unsigned int iPoints= 0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6811:386,adapt,adapt,386,https://root.cern,https://github.com/root-project/root/issues/6811,1,['adapt'],['adapt']
Modifiability,"Hello, Everyone!. My name is Sergey and I am a GSOC student this year. The aim of my project is to implement Multi-Target Regression algorithms to TMVA and to extend the capability of existing ones to handle multiple targets. In this commit I have modified the DecisionTree, allowing it to solve regression problems for multiple targets. The idea was inspired by how it is done in Clus package. (The variance of each subset resulting from a split is simply summed up from variances for each target). I have also extended the capability of BDT method to handle multiple targets (The only boosting method available for it right now is Bagging, but I am planning to implement Multi-target gradient descent based on the paper Boosted multi-task learning (2010) by Olivier Chapelle; Pannagadatta Shivaswamy.; ·",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/681:159,extend,extend,159,https://root.cern,https://github.com/root-project/root/pull/681,2,['extend'],"['extend', 'extended']"
Modifiability,"Hello,. *Two histograms of m_yy are filled with pseudo-data :; -one for signal, filled mainly in the region of 125 GeV (no long tails on purpose, in order to show clearly the problem) (total in the 55 bins=1.58019); -one for the continuum, flat with a value of 40 (total in the 55 bins=2160). *For each of these histograms, a RooDataHist are filled. They will serve to construct the binned pdf. *A RooDataHist is constructed for the total : this is the pseudo-data. *The number or signal and bkg are counted and represent two variables (no fit, just counting what was filled). *From the two RooDataHist, an ""option"" (flag) renormalizes or does not renormalize the RooDataHist. *From these two RooDataHist, [two](url) HistPdf are filled. *Then, three models of pdf are constructed :; a pdf total : n_s * pdf_signal + n_b * pdf_continuum. a pdf signal only : pdf_signal; a pdf continuum only : pdf_continuum. a pdf n_s * pdf_signal : n_s * pdf_signal; a pdf n_continuum * pdf_continuum. Then, the first bin of the pseudo-data is printed : 40 (indeed, there is no signal in this bin). *Then, we compare this to the value of the pdf; -->The two variantes of option (normalize or not renormalize the RooDataHist) give a wrong value for the pdf. Indeed :; *In the case where we don't normalize the RooDataHist,; then the pdf total in this (example of) bin is wrong (by a factor 2160 / (2160+1.58019). *In the case where we do not normalize the RooDataHist,; -then the pdf n_continuum * pdf_continuum is wrong (by a factor 2160). -then the pdf pdf_continuum is wrong : by a factor (2160+1.58019) / 2160. I add a pdf illustrating the problem. I put here a minimum program that reproduces the problem :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemRooHistPdf%. Thank you. (Remark : the reason of the apparently strange list of steps is in order to do a much more complex study, which is not the purpose of the problem reported here.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991:526,variab,variables,526,https://root.cern,https://github.com/root-project/root/issues/7991,1,['variab'],['variables']
Modifiability,"Hello,. First of all sorry for all the mess I made with these pull requests. This is my first try and I did not really understood how GitHub works therefore my previous pull request was this messy and I decided to withdraw it and clean everything up before I request it again. And here we are, I ran some additional bugfixing and the ROOT tests which succeeded. Furthermore I tested my new class and everything I tried worked so I think now it's time to request the pull again. **Explanation**; My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:883,inherit,inherits,883,https://root.cern,https://github.com/root-project/root/pull/3452,1,['inherit'],['inherits']
Modifiability,"Hello,. I implemented the classes TLeafF16 and TLeafD32 which allow to store floating point values using the truncation methods from TBuffer. As the names imply one is meant for the Float16_t type and the other one for the Double32_t type. The letters to be used in the leaflist are the small letters f and d which sounds reasonable to me since the capital letters F and D are being used for the regular Float_t and Double_t datatypes. Furthermore a range for the datatypes can be specified using the syntax from the TStreamerElement::GetRange() function. To avaid conflicts with the declaration of array branches the range specifier has to be attached to the data type letter instead of the variable name. I tested the implementation locally and it is working very well. The file size is being significantly reduced using the Float16_t or Double32_t implementation instead of the usual ones. I think this is quite useful since even the precision of Float_t sometimes overshoots the requirements and occupies an unnecessarily large amount of memory. All the best,; Simon Spies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3463:692,variab,variable,692,https://root.cern,https://github.com/root-project/root/pull/3463,1,['variab'],['variable']
Modifiability,"Hello,. I'm sorry my new classed crashed root.; It seems to me that the error was due to the usauge of C-style variable length arrays that are only supported under g++ and not c++.; The changes I implemented should fix the bug. All the best,; Simon Spies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698:111,variab,variable,111,https://root.cern,https://github.com/root-project/root/pull/4698,1,['variab'],['variable']
Modifiability,"Hello,. My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. Unfortunatly I cannot upload the C macro here, but if you are interested you can find it on the forum: [https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784](https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784). Since the class reimplements all functionalities of TGraphAsymmErrors, you can refer to it’s documentation for most functionalities: https://root.cern.ch/doc/master/classTGraphAsymmErrors.html. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:396,inherit,inherits,396,https://root.cern,https://github.com/root-project/root/pull/3449,1,['inherit'],['inherits']
Modifiability,"Hello,; This is the Implementation of DataLoader for TMVA according to new design.; - Tutorials updated; - Variable Importance implemented and tested.; - New ROC algorithm implemented; - PyMVA now support python 3. Cheers,; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/119:107,Variab,Variable,107,https://root.cern,https://github.com/root-project/root/pull/119,1,['Variab'],['Variable']
Modifiability,"Hi @guitargeek , this pull request add the tutorials for the lagrangian morphing class and also; add an example for the factory interface. The are some accompanying fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [ ] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9665:659,coupling,couplings,659,https://root.cern,https://github.com/root-project/root/pull/9665,1,['coupling'],['couplings']
Modifiability,"Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot!. 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 3. mkdir build_amd64 && cd build_amd64; 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..; 5. cmake --build . --config Release. Hit below error when build:; F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9389:689,config,config,689,https://root.cern,https://github.com/root-project/root/issues/9389,1,['config'],['config']
Modifiability,"Hi Enric,. The next 3 items was applied.; - DefaultDataSetInfo: Omar will add a public method to DataLoader for getting a const reference to the DataSetInfo. This is needed by both Attila and Georgios.; - Configurable::Log: Omar will make it public. Attila needs this.; - MethodBase::CreateVariableTransforms: make it public. Attila needs this. The last one is an static method in the class MethodBase, then may you can call it in python; from ROOT import TMVA; TMVA.MethodBase.CreateVariableTransforms. Best ; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/180:205,Config,Configurable,205,https://root.cern,https://github.com/root-project/root/pull/180,1,['Config'],['Configurable']
Modifiability,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766:268,config,config,268,https://root.cern,https://github.com/root-project/root/pull/7766,3,['config'],"['config', 'configure']"
Modifiability,"Hi all,. It makes sense to compile software with ROOT using exactly the same C++ standard.; However, there is no nice way to obtain this information from ROOT cmake config.; Everything that is provided is a list of C++ flags. ### Describe the solution you'd like; Have a CMake variable ROOT_CXX_STANDARD in ROOT cmake config. ### Describe alternatives you've considered; Parsing the ROOT_CXX_FLAGS and hoping for the best. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7644:165,config,config,165,https://root.cern,https://github.com/root-project/root/issues/7644,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"Hi everybody,. I am using root on Win64:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for win64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With MSVC 19.32.31332.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; and I have the following function:; ```; void test() {; FILE *fid = fopen(""testfile.txt"", ""wt"");; if (fid != NULL) {; fprintf(fid, ""text\n"");; //fprintf(fid, "" %d \n"", 1);; fclose(fid);; } else {; printf(""File is not created.\n"");; }; }; ```; This function is working correctly. But if I remove the comment mark // with the intention to write a decimal number in the file (in this case, the decimal number is just 1), root terminates and the file is empty. This happens in all cases when I am trying to write any variable to the file. Do you have some idea where the problem is?; ([See also the forum](https://root-forum.cern.ch/t/problem-with-fprintf-in-root/51924)); Vladimir",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11533:972,variab,variable,972,https://root.cern,https://github.com/root-project/root/issues/11533,1,['variab'],['variable']
Modifiability,"Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:; ```c++; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooArgSet.h""; #include ""RooLinkedList.h""; #include ""RooDataSet.h""; #include ""RooFitResult.h"". void rf204_extrangefit(); {; RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);; RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);; RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);; RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);; RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});; RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);; RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});; x.setRange(""signalRange"", 4, 6);; RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);; RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);; RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");; RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");; RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});; RooDataSet* data = model.generate(RooArgSet(x), 1000);; //auto r = model.fitTo(*data,RooLinkedList());; RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});; //some reason this isn't working...; //r->Print();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8927:1421,extend,extended,1421,https://root.cern,https://github.com/root-project/root/pull/8927,3,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"Hi, ; I was trying to evaluate a N-dimensional function but found that the `TFormula::Eval()` method only accept `Double_t x, y, z, t` as arguments, and later passes them to a private method `DoEval()` as an array. I was wondering why there is not a `Eval()` methods which require a variable dimension array. . Its implementation would be quite easy, for example could be:; ```; Double_t TFormula::Eval(Double_t *x) const; {; return EvalPar(x, nullptr);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9395:283,variab,variable,283,https://root.cern,https://github.com/root-project/root/issues/9395,1,['variab'],['variable']
Modifiability,"Hi,. ATLAS would like to request the addition of a mechanism to control the number of threads used by ROOT with implicit multi-threading enabled, ideally via an environment variable (e.g. `ROOT_MAX_THREADS`). The primary motivation for this is to give GRID sites an easier way to limit the number of threads to match that of a queue. Thanks!. Ed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805:173,variab,variable,173,https://root.cern,https://github.com/root-project/root/issues/9805,1,['variab'],['variable']
Modifiability,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:193,config,configure,193,https://root.cern,https://github.com/root-project/root/issues/10370,3,['config'],['configure']
Modifiability,"Hi,. This has been bugging me for a while now. 😛. ROOT has been exporting a CMake configuration for downstream projects (using ROOT) for a while now. But the exported/imported library targets at the moment can't be used with code like:. ```cmake; find_package( ROOT 6.10 REQUIRED ); add_executable( MyExecutable test.cxx ); target_link_libraries( MyExecutable ROOT::Core ); ```. In this case the build would complain that it can't find the ROOT headers that `test.cxx` may want to use. Even though the expectation against imported targets **is** that they would carry all information with them to compile any client code correctly. While the latter sentiment can take us quite far, as one could even argue that imported libraries should carry whatever compiler definitions/options the client may need with themselves, unfortunately this is not super easy to do with CMake at the moment. (For instance I don't know of a good way in which the imported library could impose the same C++ standard on the client project that ROOT was built with. While allowing the client project to use an even newer standard if needed.). So for now I'll just be satisfied making sure that at least the include directory needed by the ROOT libraries would be automatically propagated to clients wanting to link against them. This update takes care of that. Cheers,; Attila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466:82,config,configuration,82,https://root.cern,https://github.com/root-project/root/pull/1466,1,['config'],['configuration']
Modifiability,"Hi,; One unit test in CMSSW is failing on `aarch64` ( https://github.com/cms-sw/cmssw/issues/31194 ) . We noticed that root is treating `char` as `unsigned` while root is build with `-fsigned-char` e.g. in root interactive shell we get this; 1. aarch64; ```; root [0] static_cast<int>(static_cast<char>(-1)); (int) 255; ``` . 2. amd64; ```; root [0] static_cast<int>(static_cast<char>(-1)); (int) -1; ```. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_2_X/master/root.spec#L40 is how we configure and build root for both amd64 and aarch64. . Is it a known issue? Any suggestion how to fix/avoid this. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6465:492,config,configure,492,https://root.cern,https://github.com/root-project/root/issues/6465,1,['config'],['configure']
Modifiability,"I add a tutorial to Principal components using as base the existing one in Cint, I rewrite in PyROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1364:83,rewrite,rewrite,83,https://root.cern,https://github.com/root-project/root/pull/1364,1,['rewrite'],['rewrite']
Modifiability,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:605,variab,variable,605,https://root.cern,https://github.com/root-project/root/pull/1585,1,['variab'],['variable']
Modifiability,"I am refactoring the old code of ROOT I/O for compression. Some part of the code are up to 30 years old and from my experience that the C style code that is used is prone to errors for developers that are not familiar with the code. Since one of the goals of ROOT is to be maintainable, I think that this can be very helpful.; Nonetheless, even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes that have been done so far are the following:. ### Removed pointers https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer. Also, the irep now is a reference rather than a pointer. However, I think that it would be better to make the function not void and instead of using irep just return a value. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be const unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060:5,refactor,refactoring,5,https://root.cern,https://github.com/root-project/root/pull/4060,3,"['extend', 'maintainab', 'refactor']","['extended', 'maintainable', 'refactoring']"
Modifiability,"I am trying to refactor the old code of ROOT I/O for compression but the even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes of this PR are based on top of another PR https://github.com/root-project/root/pull/3947 for adding support for ZSTD so for our goal just focus on the following commits. ### Removed pointers and unsigned chars https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer.; Also there is a mess in the compression algorithms since consider the buffers as unsigned chars, and other as chars. The type does not matter since we are only working with bytes but we should use only one to avoid all the casting that we find across the code base. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? If it is maintained it would be nice to make it more readable and follow the same structure and naming as the rest of compression algorithm.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037:15,refactor,refactor,15,https://root.cern,https://github.com/root-project/root/pull/4037,2,"['extend', 'refactor']","['extended', 'refactor']"
Modifiability,"I checked that the following chain of configurations works now, and; failed before:; ```; cmake -Dminimial=ON -Dssl=OFF ..; cmake -Dbuiltin_xrootd=ON .; ```. Closes https://github.com/root-project/root/issues/16374.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16604:38,config,configurations,38,https://root.cern,https://github.com/root-project/root/pull/16604,1,['config'],['configurations']
Modifiability,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16169:132,Flexible,FlexibleInterpVar,132,https://root.cern,https://github.com/root-project/root/pull/16169,2,['Flexible'],['FlexibleInterpVar']
Modifiability,"I don't know if this is desirable or not, but I figured I would raise the issue. `TStreamerElement::ESTLtype` duplicates `ROOT::ESTLType` exactly, but with a lower-case `t` in `type`. It confused me when I found this out (and it turns out that I forgot to update `TStreamerElement::ESTLtype` when I updated `ROOT::ESTLType`). I could not find any usage of `TStreamerElement::ESTLType` in ROOT, and ROOT compiles just fine without the enum, but just in case someone out there is using it, I'm proposing to deprecate it in 6.24 and remove it in 6.26. Feel free to close this PR if you don't think this makes sense. UPDATE:. after discussion with @pcanal we decided that deprecation/removal is the right thing to do, and I extended the patch to `TDictionary` and `TClassEdit`. `TBufferJSON` had some usage of `TClassEdit::ESTLType` which has now been substituted with `ROOT::ESTLType`. UPDATE 2:. Since gcc 5 (the system compiler on Ubuntu 16) [does not support deprecation of enumerators](https://godbolt.org/z/1TEo5M), I'm proposing to disable `R__DEPRECATED` for that gcc version (it was already disabled for gcc 5.1 and 5.2 due to a different issue).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7234:720,extend,extended,720,https://root.cern,https://github.com/root-project/root/pull/7234,1,['extend'],['extended']
Modifiability,"I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:182,config,configuration,182,https://root.cern,https://github.com/root-project/root/issues/9436,2,['config'],['configuration']
Modifiability,"I noticed that `roofit_legacy_eval_backend` variable in CMake was not; cached, and therefore it didn't propagate to the RooFit test; subdirectories. This meant several unit tests were not executed. This commit is fixing that. Furthermore, another commit in this PR reduces the time of the tutorial tests by reducing the number of toys in the RooStats tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14919:44,variab,variable,44,https://root.cern,https://github.com/root-project/root/pull/14919,1,['variab'],['variable']
Modifiability,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14146:512,config,config,512,https://root.cern,https://github.com/root-project/root/pull/14146,1,['config'],['config']
Modifiability,"I think it would be really nice to be compliant with other Python packages and provide a `__version__` magic for the ROOT module. ~~But be careful: This comes at the cost of a direct use of ROOT at startup time (non-lazy! Am I right?). I don't see how we could do this besides doing some template/macro magic and copying the version number to the sources at configure time.~~. Since the ROOT module is actually a class instance, we can add a `property`, which is evaluated lazily. Nice! :). And added tests for the ROOT module!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4048:358,config,configure,358,https://root.cern,https://github.com/root-project/root/pull/4048,1,['config'],['configure']
Modifiability,I took some inspiration from the CMSSW `.clang-tidy` configuration file to run some more `clang-tidy` checks and automatically apply its suggestions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13320:53,config,configuration,53,https://root.cern,https://github.com/root-project/root/pull/13320,1,['config'],['configuration']
Modifiability,"I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:; ```; #include <TROOT.h>; #include <TFile.h>; #include <TTree.h>; #include <TString.h>. #include <iostream>; #include <iomanip>. void write(ULong64_t x) {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""x"", &x, ""x/l"");; t.Fill();; t.Write();; f.Close();; std::cout<<""Written to tree: ""<<x<<""\n"";; }. void read(const ULong64_t x) {; TFile f(""f.root"");; TTree* t = (TTree*)(f.Get(""t""));; ; ULong64_t x1;; t->SetBranchAddress(""x"", &x1);; t->GetEntry(0);; std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";; ; std::cout<<""\n"";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:52,variab,variables,52,https://root.cern,https://github.com/root-project/root/issues/7844,2,['variab'],['variables']
Modifiability,"I was looking into ways to improve the target-based usage of ROOT in CMake. I found the missing `INTERFACE_INCLUDE_DIRECTORIES` has already been added to master (Yay!), but there are still other additions that could really help a user trying to use targets:. | New target | Usage |; |---|---|; | `ROOT::Libraries` | This is the target equivalent of `ROOT_LIBRARIES`, and links all common and requested components. |; | ~~`ROOT::Flags`~~ | ~~The target equivalent of `ROOT_*_FLAGS`, `ROOT_DEFINITIONS`, and `ROOT_EXE_LINKER_FLAGS`. Adds the flags that ROOT recommends; this is a smart target and will add `C`, `CXX`, and `FORTRAN` flags as needed depending on the target you link to.~~ |. ~~I have added `_LIST` versions of `FLAGS` variables, since CMake expects the flags to be a real list in most cases (really everywhere except in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimple",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:731,variab,variables,731,https://root.cern,https://github.com/root-project/root/pull/1959,2,['variab'],"['variable', 'variables']"
Modifiability,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250:39,inherit,inherits,39,https://root.cern,https://github.com/root-project/root/issues/8250,2,"['Inherit', 'inherit']","['InheritsFrom', 'inherits']"
Modifiability,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5550:254,config,config,254,https://root.cern,https://github.com/root-project/root/pull/5550,1,['config'],['config']
Modifiability,"I've got my hands on a DF workflow, which produces in a pretty large DF graph around 10k histograms in a single event loop. The graph consists of roughly 130k nodes (I can tell from the jitted code) and is assembled in Python. Even though probably the actual solution would be slimming the DF graph, it poses a nice challenge for us to push jitting to its limits. See the file attached in the archive, simply jit it or compile it with `your_compiler compile.cxx $(root-config --cflags --libs)`. The file has 130k lines and around 60 mio characters (60 MB file) and is extracted from the code, which is jitted by DF. Stats I've collected so far:; - Jitting with current master (llvm9): 1.5h and >25GB maxres size; - Compiling with O0 and clang10: 1.5h and 20GB maxres size (fits the jitting); - Compiling with O0 and gcc4.8.5 and gcc10: More than 12h compile time, more than 80GB maxres size at that time (I stopped it); - Compiling with O1 and clang10: More than 10h in, I'll probably stop it soon. Here's the file:; [compile.tar.gz](https://github.com/root-project/root/files/6169676/compile.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604:469,config,config,469,https://root.cern,https://github.com/root-project/root/issues/7604,1,['config'],['config']
Modifiability,"If ""server"" kind of web display is configured,; one still can use ""new TBrowser"". This requires that batch gui factory; allows to create web-based implementation. Update JSROOT, use nullptr in related classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10783:35,config,configured,35,https://root.cern,https://github.com/root-project/root/pull/10783,1,['config'],['configured']
Modifiability,"If ROOT compiled with CEF3 support, new canvas will be created not in the web browser, ; but with CEF methods. ; Also when rootqt5 is compiled, one can run macro and open canvas with Qt windows; See gui/canvaspainter/README for more details. @peremato ; Build procedure should be changed; CEF should be detected/configured when top ROOT cmake is called; Also some resources should be copied or linked from CEF into ROOT installation; ; rootqt5 executable should be compiled when qt5 with required plugins (qt5-webengine) is exists",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/789:312,config,configured,312,https://root.cern,https://github.com/root-project/root/pull/789,2,"['config', 'plugin']","['configured', 'plugins']"
Modifiability,"If `NDEBUG` is defined, the variables are unused and Clang warns about them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9981:28,variab,variables,28,https://root.cern,https://github.com/root-project/root/pull/9981,1,['variab'],['variables']
Modifiability,"If a RooProdPdf is created with the `Conditional` command argument to do; a conditional fit, there is a flag `depsAreCond` to the command argument; that specifies if the passed variable set corresponds to the; normalization set of the conditional PDF (default), or the conditional; observables. In the new BatchMode, this flag was not considered, which; is fixed by this PR. A new unit test that checks that the `depsAreCond` parameter is; correctly considered in both the BatchMode and the old RooFit is also; implemented, based on the issue reproducer code that was kindly provided; by @elusian in https://github.com/root-project/root/issues/11332. This PR also merges the `testRooProductPdf` and `testRooProdPdf`; files, because they are both testing the RooProdPdf. Closes https://github.com/root-project/root/issues/11332. A secondary commit with some code improvements to the RooProdPdf class is also included in this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11343:177,variab,variable,177,https://root.cern,https://github.com/root-project/root/pull/11343,1,['variab'],['variable']
Modifiability,"If development part of python3/python2 not found, try to find only executable to make ROOT compilation. Also set policy CMP0144 to 'OLD'. With new cmake 3.27 shell variable `JAVA_ROOT` will be used for `find_package(Java...`; To keep ignoring such variables, one should set policy to `OLD`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13485:164,variab,variable,164,https://root.cern,https://github.com/root-project/root/pull/13485,2,['variab'],"['variable', 'variables']"
Modifiability,"If libbsd installed in custom location,; custom include path can be provided in LIBBSDINCPATH variable. This PR may fix #14958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15242:94,variab,variable,94,https://root.cern,https://github.com/root-project/root/pull/15242,1,['variab'],['variable']
Modifiability,"If local web display configured,; only build variants will be tested. Fixes issue #15340",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15345:21,config,configured,21,https://root.cern,https://github.com/root-project/root/pull/15345,1,['config'],['configured']
Modifiability,"If local web display configured,; only build variants will be tested. Fixes issue #15340. Backport of #15345",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15347:21,config,configured,21,https://root.cern,https://github.com/root-project/root/pull/15347,1,['config'],['configured']
Modifiability,"If one builds a model where two variables have the same name, everything go un-noticed and result can be not correct. ; An example is in the test program attached to ROOT-3555, where a simultaneous pdf is built with two Gaussian, defined with different mean and sigma parameters, having the same name.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7417:32,variab,variables,32,https://root.cern,https://github.com/root-project/root/issues/7417,1,['variab'],['variables']
Modifiability,"If one of the pdfs in a RooProdPdf is extended, it should not be; considered to be extracted as a constraint term. Also, fix; `RooProdPdf::getConnectedParameters()` which should not consider the; extended pdf as disconnected, as the expected events of this RooProdPdf; depend on it. Closes this old Jira ticket:; https://sft.its.cern.ch/jira/browse/ROOT-7604. FYI, @will-cern, sorry that it took almost 10 years :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13025:38,extend,extended,38,https://root.cern,https://github.com/root-project/root/pull/13025,2,['extend'],['extended']
Modifiability,If provided pointer type does not match with type read; from JSON check inheritance. It can be that pointer type; is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5330:72,inherit,inheritance,72,https://root.cern,https://github.com/root-project/root/pull/5330,1,['inherit'],['inheritance']
Modifiability,"If specified, enforce unique key every time client connect to; web window. Once key used, it is not possible to use it again for reconnect.; If one wants to connect to window again, one should; call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default.; This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11213:490,variab,variable,490,https://root.cern,https://github.com/root-project/root/pull/11213,1,['variab'],['variable']
Modifiability,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906:62,variab,variables,62,https://root.cern,https://github.com/root-project/root/pull/5906,7,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11074:42,config,config,42,https://root.cern,https://github.com/root-project/root/pull/11074,6,"['Config', 'config']","['Configuration', 'config', 'configuration']"
Modifiability,"Implement special treatment for fBits. Disable RNTuple I/O for referenced objects. Locks I/O support for TObject to class version 1, assuming that TObject won't further evolve. Fixes #14808",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14822:169,evolve,evolve,169,https://root.cern,https://github.com/root-project/root/pull/14822,1,['evolve'],['evolve']
Modifiability,Implement the function MethodCategory::GetMulticlassValues() that was missing.; ; This fixes problem reported in https://root-forum.cern.ch/t/addspectator-variable-crashes-with-segmentation-violation-in-multi-class-kpykeras-tmva/42210. fixes #6872,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6886:155,variab,variable-crashes-with-segmentation-violation-in-multi-class-kpykeras-tmva,155,https://root.cern,https://github.com/root-project/root/pull/6886,1,['variab'],['variable-crashes-with-segmentation-violation-in-multi-class-kpykeras-tmva']
Modifiability,Implement variable rebinning 2-D histogram classes (ROOT-5224),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5280:10,variab,variable,10,https://root.cern,https://github.com/root-project/root/pull/5280,1,['variab'],['variable']
Modifiability,Implement variable rebinning 2-D histogram classes ([ROOT-5224](https://sft.its.cern.ch/jira/browse/ROOT-5224)); Implemented for TProfile2D as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5280:10,variab,variable,10,https://root.cern,https://github.com/root-project/root/pull/5280,1,['variab'],['variable']
Modifiability,Implementation of LSTM and GRU Layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3923:31,Layers,Layers,31,https://root.cern,https://github.com/root-project/root/pull/3923,1,['Layers'],['Layers']
Modifiability,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:. Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created six tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva006_RVariablePlotter_RTensor.C ; * /tutorials/tmva/tmva007_RVariablePlotter_Higgs_Output.C; * /tutorials/tmva/tmva008_RVariablePlotter_RTensor_Output.C; * /tutorials/tmva/tmva009_RVariablePlotter_Higgs_ROC.C; * /tutorials/tmva/tmva010_RVariablePlotter_Higgs_MultiROC.C. ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8723:20,Variab,Variable,20,https://root.cern,https://github.com/root-project/root/pull/8723,1,['Variab'],['Variable']
Modifiability,Implementation of a Variable Plotter for RNode and RTensor inputs.; See [PR 4211](https://github.com/root-project/root/pull/4211) for a first attempt / inspiration. . ## Changes or fixes:; Created main class: ; * /tmva/tmvagui/src/RVariablePlotter.cxx; * /tmva/tmvagui/inc/RVariablePlotter.hxx. Created two tutorials: ; * /tutorials/tmva/tmva005_RVariablePlotter.C ; * /tutorials/tmva/tmva005_RVariablePlotter_RTensor.C . ## Checklist:. - [ ✅] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8690:20,Variab,Variable,20,https://root.cern,https://github.com/root-project/root/pull/8690,3,['Variab'],['Variable']
Modifiability,"Implements `RooLinkedList::begin()`, `end()`, `rbegin()`, `rend()` and; extends the `RooLinkedListIterImpl` interface to support range-based; loops for the `RooLinkedList`. Range-based loops on `RooLinkedList` are also used in some places in; RooFit to test this new feature. In particular the function; `RooCmdConfig::process` is used in basically every RooFit script. This commit also adds `RooLinkedList::size()` and `empty()` for better compatibility with STL containers and automatic pythonizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8842:72,extend,extends,72,https://root.cern,https://github.com/root-project/root/pull/8842,1,['extend'],['extends']
Modifiability,Improve configuration of clang-tidy.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/603:8,config,configuration,8,https://root.cern,https://github.com/root-project/root/pull/603,1,['config'],['configuration']
Modifiability,Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. ; - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3966:51,layers,layers,51,https://root.cern,https://github.com/root-project/root/pull/3966,1,['layers'],['layers']
Modifiability,Improve usability of root-config.bat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:26,config,config,26,https://root.cern,https://github.com/root-project/root/pull/7663,2,['config'],['config']
Modifiability,Improvements in MethodDL to enhance model definition for dense layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3966:28,enhance,enhance,28,https://root.cern,https://github.com/root-project/root/pull/3966,2,"['enhance', 'layers']","['enhance', 'layers']"
Modifiability,"In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. ; Therefore change gEnv values for the time when canvas is created. Address issue from forum:. https://root-forum.cern.ch/t/web-browser-off-not-working/56859/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13942:72,config,configured,72,https://root.cern,https://github.com/root-project/root/pull/13942,1,['config'],['configured']
Modifiability,"In ""classical"" TBrowser one want to use normal TCanvas - even if rootrc configured differently. Therefore change gEnv values for the time when canvas is created",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13943:72,config,configured,72,https://root.cern,https://github.com/root-project/root/pull/13943,2,['config'],['configured']
Modifiability,In CEF and Qt5WebEngine set window size. Use for FitPanel 300x500 as initial size for demonstration. Also chrome browser allows to set window size and show HTML page without typical browser decoration; One can set shell variable WEBGUI_WHERE which allows to change default behavior,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1243:220,variab,variable,220,https://root.cern,https://github.com/root-project/root/pull/1243,1,['variab'],['variable']
Modifiability,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932:10,variab,variables,10,https://root.cern,https://github.com/root-project/root/pull/7932,4,['variab'],['variables']
Modifiability,"In Chrome browser one can change window size from JavaScript using `window.resizeTo` method; This solves problem when different `RWebWindow` instances with different sizes need to be used - ; like in `tutorials/geom/geodemo.C`. Introduce also X and Y coordinate for `RWebWindow`, use `window.moveTo` to move browser to specified position. Use this features for `TWebCanvas` to preserve/enforce configured canvas size. Let change canvas size via context menu.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12320:394,config,configured,394,https://root.cern,https://github.com/root-project/root/pull/12320,1,['config'],['configured']
Modifiability,"In Fedora 29, with gcc, there is a problem with __builtin_cpu_supports() function. It causes an undefined symbol error during linking, unless you link against -lgcc explicitly. There was already code in the file to protect against this bug in some versions of gcc, but as the problems seems to exist under various gcc build configurations, I change the code to include the fix for every gcc version. See also: https://github.com/root-project/root/issues/6855",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6867:324,config,configurations,324,https://root.cern,https://github.com/root-project/root/pull/6867,1,['config'],['configurations']
Modifiability,"In HistFactory, normalization uncertainties and shape uncertainties were; treated differently when setting the constraint type to uniform, e.g.:. ```xml; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_shape</ConstraintTerm>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; ```. See #9070 for a very good explanation of the problem. For non-shape uncertainties, the uniform constraint was treated as a; special case of the Gaussian constraint with ""infinite"" sigma. For shape; uncertainties, the `Uniform` type was ignored. This commit suggests to refactor the creation of Gaussian constraints; such that the logic that considers the ""Uniform"" tag is also used for; shape uncertainties. Closes #9070.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10525:591,refactor,refactor,591,https://root.cern,https://github.com/root-project/root/pull/10525,1,['refactor'],['refactor']
Modifiability,"In ROOT 6.24/06 we see that merging produces unexpected results for the following situation:. - 2D histogram, Y axis has labels, X axis does not, SetCanExtend is set for the X axis; - h2 has more bins in X; - h1.Merge is called with a TList containing h2. The result has only the bins from h1 and is not extended to match h2. If the Y axis does not have labels, the X axis is correctly extended by the merge. A Python test case follows:. ```; from ROOT import TH2F, TList. NBINSX = 5; NBINSY = 1. horig = TH2F('horig', 'histogram', NBINSX, 0, NBINSX, NBINSY, 0, NBINSY); yax = horig.GetYaxis(); # if labels are not set for the y axis, the output is what is expected; for i in range(NBINSY):; yax.SetBinLabel(i+1, f'{i+1}'); horig.GetXaxis().SetCanExtend(True). hclone = horig.Clone(); hclone.LabelsInflate('X'); hclone.Fill(NBINSX-1, 0). l = TList(); l.Add(hclone); horig.Merge(l). print(f'Number of X bins in merged histogram: {horig.GetNbinsX()} (expected {hclone.GetNbinsX()})'); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10828:304,extend,extended,304,https://root.cern,https://github.com/root-project/root/issues/10828,2,['extend'],['extended']
Modifiability,"In ROOT, we should be able to lookup global variables, macros, and functions defined in external AST source. (For example gROOT, std::vector..). When R binding is On, we import R related header files such as TRInterface.h and RExports.h. These header files include Constants.h, which defines `PI` like this:. ```; # define M_PI 3.14159265358979323846 /* pi */; # define PI M_PI; ```. In theory, we should be able to lookup this as well, but rootmap files are; broken and it doesn't have information about macros. So what happened; were tutorials define PI by themselves (which is conflicting with above; definition) but ROOT didn't emit errors. In modules, we're trying to preload modules so that we don't miss these namespaces and macros. PI is also visible from ROOT and; treated as a macro, so users don't have to define it themselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1824:44,variab,variables,44,https://root.cern,https://github.com/root-project/root/pull/1824,1,['variab'],['variables']
Modifiability,"In RooDataSet, there are constructors to create a dataset as a subset of; another RooDataSet or a TTree, passing either a cut string or a; RooFormulaVar as the cut variable. There were two implementations for the cut string and the RooFormulaVar; case, but it's better to implement one in terms of the other to avoid; code duplication and divergence. The RooFormulaVar version has to be implemented in terms of the cut; string version, because the cut string version is more general: it can; also take an empty string, signifying no cut. Removing functions from the public interface of the data store classes is; okay, because as implementation details of the RooFit dataset classes; they are not supposed to be public anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10506:164,variab,variable,164,https://root.cern,https://github.com/root-project/root/pull/10506,1,['variab'],['variable']
Modifiability,"In RooFit, there are many functions that return pointers that are owned; by the caller. We can't change this interface anymore, but we can wrap; the return values transparently in a raw pointer wrapper that is called; a `RooFit::Owner`. On the C++ side, this helps to analyze your code and detect potential; memory leaks. On the Python side, we can tell cppyy to take ownership; of the object if the pointer is wrapped in a owning pointer such as the; `RooFit::Owner`. This is more flexible and convenient than the existing; cppyy way of flagging the CPPOverloads on the Python side with the; `__creates__ = True` attribute for at least two reasons:. 1. This flag can't be applied at the granularity of indivirual C++; overloads; 2. It's only on the Python side, so if you want to flag these functions; in C++ as well as in Python you have to do some bookkeeping. A unit test was implemented to check that the `RooFit::Owner` behaves in; Python as expected, and that there is no memory leaking when using; functions that return them. As a first example, the `RooFit::Owner` is used in the highly used; function `RooAbsPdf::generate`, so we also get quite some test coverage; from the tutorials. In the future after this initial effort, the remaining RooFit functions; should be migrated to fix many memory leaks in PyROOT user code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9392:482,flexible,flexible,482,https://root.cern,https://github.com/root-project/root/pull/9392,1,['flexible'],['flexible']
Modifiability,"In SPlots, `RooAbsArg::attachDataSet()` is called on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10811:524,variab,variables,524,https://root.cern,https://github.com/root-project/root/pull/10811,2,['variab'],['variables']
Modifiability,"In TMVA code the `fLogger` data member appears in several classes. Sometimes it is persistant ( a `! ` in the online comment) and sometimes it is not. Making a ""log message"" persistant sounds a bit weird ... But may be it should be ? ... at least the current code is not consistent: ; ```; tmva/inc/TMVA/ClassInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Config.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:379,Config,Config,379,https://root.cern,https://github.com/root-project/root/issues/9792,2,['Config'],"['Config', 'Configurable']"
Modifiability,"In TUnixSystem.cxx's dynpath, the full result is know only when the TCling object is created but; it is called several before that. Part of the work is to get information from the dynamic; linker via a call to popen(""LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls 2>&1""). Enhanced the code so this call (and also to call to getenv) are only done once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10354:266,Enhance,Enhanced,266,https://root.cern,https://github.com/root-project/root/pull/10354,1,['Enhance'],['Enhanced']
Modifiability,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11015:475,variab,variables,475,https://root.cern,https://github.com/root-project/root/pull/11015,1,['variab'],['variables']
Modifiability,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747:996,config,configuration,996,https://root.cern,https://github.com/root-project/root/issues/12747,4,['config'],['configuration']
Modifiability,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562:630,config,configuration,630,https://root.cern,https://github.com/root-project/root/pull/10562,3,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"In bab22d74786052ce346302f3dac967a60997283d, #8198, the extended plotting; option of RooCurve was broken in an attempt to fix polygons created; using the VLines() plotting option. While the `VLines()` (`wmode==Straight`) indeed needed fixing, `wmode==Extended`; worked as intended, see [ROOT-10931](https://sft.its.cern.ch/jira/browse/ROOT-10931) + its forum link. The comment for `wmode==Extended` was clarified a bit to prevent future; confusion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8201:56,extend,extended,56,https://root.cern,https://github.com/root-project/root/pull/8201,3,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"In case of named arguments, the RooFormula will replace the argument; names with `x[0]` to `x[n]`. There are two things that can go wrong if; RooFormula is not implemented right. First, if there is a variable named; ""x"" it should only be substituted if the matching substring is not; followed by ""["", to not replace existing x[i]. Second, variables with; integer names like ""0"" should only be substituted if the match is not; followed by a ""]"", again to avoid replacing x[i]. This test checks that; these cases are handled correctly. The second case was so far not dealt with correctly, but with this; commit it is. A corresponding unit test was also implemented. The preprocessor commands in `RooFormula` were also reorganized; slightly, such that one can test the `TPRegexp` backend simply by; commenting out the `define ROOFORMULA_HAVE_STD_REGEX`. This pull request fixes an issue reported in the forum:; https://root-forum.cern.ch/t/a-strange-bug-in-rf708-bphysics-c/49152/2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10105:200,variab,variable,200,https://root.cern,https://github.com/root-project/root/pull/10105,2,['variab'],"['variable', 'variables']"
Modifiability,"In clang a transient file is a header file which is stored in the pch/pcm file. If this file does not exist, clang creates a virtual file of the unzipped stored file. However, if the file exists it compares the size of the file on disk and the size of the transent file. If the two sizes are different it does not complain (as validation is off) but it triggers an assert in when constructing and outdated clang::InputFile. The implementation disallows a overridden or transient file to be out of date. This patch extends the DisableValidation abilities to span not only for timestamps but we avoid checking the file sizes if the file is on the disk. And, instead we just create a virtual file of the file that we already have. This patch should fix a relocation issue for cmssw and some of the reported LCG issues. cc: @oshadura, @davidlange6, @smuzaffar, @emanca, @zygoloid",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4480:514,extend,extends,514,https://root.cern,https://github.com/root-project/root/pull/4480,1,['extend'],['extends']
Modifiability,"In cmssw we see that depending on the invoking code the trigger function is; resolved sometimes with the symlink-ed path and sometimes without. This can be observed in the cmssw biglib setup where all plugin libraries; are assembled into a single library to yield performance improvement of (10%). This is seen in cms-sw/cmsdist#5172 where libHistPainter_rdict.pcm is not; found in the fPendingRdicts because it was registered with the 'other'; path. cc: @davidlange6, @smuzaffar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4288:201,plugin,plugin,201,https://root.cern,https://github.com/root-project/root/pull/4288,1,['plugin'],['plugin']
Modifiability,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:471,Config,Config,471,https://root.cern,https://github.com/root-project/root/pull/11695,3,"['Config', 'config']","['Config', 'configuration']"
Modifiability,In order to fix ROOT-10034 a new Executor class has been created.; The class wraps the TExecutor types of ROOT and create in MT running a TThreadExecutor or a TSequentialExecutor. ; This allows to use exactly same code in all TMVA depending on sequential or MT running. ; In addition now the TMVA::Config can control the MT running. The behaviour is the following: ; - ROOT::IsImplicitMTEnabled() = false TMVA uses TSequentialExecutor (no MT); - ROOT::IsImplicitMTEnabled() = true TMVA uses TThreadExecutor with the number of threads provided in ROOT::EnableImplicitMT; - TMVA::gConfig.EnableMT(nthreads) : run MT using TThreadExecutor with nthreads (if the ROOT thread pool has not been created before) otherwise use existing pool; - TMVA::gConfig.DisableMT() - delete TThreadExecutor if it has been created (i.e. release the thread pool) and use TSequentialExecutor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3585:298,Config,Config,298,https://root.cern,https://github.com/root-project/root/pull/3585,1,['Config'],['Config']
Modifiability,"In order to mark the file as zombie when this happens, I had to change a `goto zombie` into calls to a dedicated helper lambda (done in a separate commit). Otherwise I would have had to move around a few lines just so that the compiler would let me jump from the sanity check to the zombie label (compilers don't allow jumps across variable initializations). This fixes https://github.com/root-project/root/issues/10039.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11719:332,variab,variable,332,https://root.cern,https://github.com/root-project/root/pull/11719,1,['variab'],['variable']
Modifiability,"In order to:; - make the build system less entangled and more maintainable ; - give a solution to the bug mentioned in https://github.com/root-project/root/pull/4939; we move the search for Python installation in a new script called SearchRootCoreDeps, where also the search for main Root dependencies will happen at some point. The misleading 'python' option, which was basically enabling pyroot, is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4945:62,maintainab,maintainable,62,https://root.cern,https://github.com/root-project/root/pull/4945,1,['maintainab'],['maintainable']
Modifiability,"In our analysis package we obtain a segfault without traceback when calling InheritsFrom() on an object derived from a TObject. The awkward issue is dependent on the ordering of the objects and dictionaries in the shared library. ; Note: important is the fact, that another class has a static member of that TClass(). The compiled object of the other class can then not be linked before the Dictionary-object of the first class. Maybe it's just my ignorance of a deeper understanding of the whole concept, or maybe it is a bug somewhere. A rather minimum example is attached would look like:; int main() { ; TMyDerivedClass::Class()->InheritsFrom(TObject::Class());; }. Please run `make all`, then `test1` (works) and `test2` does not work, while the difference is only in the order of the objects in the shared library.; I have included into that example another class that works well (as it is not a static member elsewhere.); I have included a Dump() call, and one recognizes the differences for identical objects in the two shared libraries (e.g. fTitle="""", *fData=0, ...). [root_issue.tar.gz](https://github.com/root-project/root/files/5405256/root_issue.tar.gz). We tested with root 6.20 and gcc9.2 (from lcg) and 6.22 and gcc4.8, both on EL7.; The code previously worked well with ROOT 5.34.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6670:76,Inherit,InheritsFrom,76,https://root.cern,https://github.com/root-project/root/issues/6670,2,['Inherit'],['InheritsFrom']
Modifiability,"In preparation for fixing ROOT-10520, this PR moves the `RRawFile` classes out of the `Experimental` namespace into `Internal`. A follow-up pull request will modify the RDF SQLite data source such that it uses RRawFile, which in turn uses the plugin infrastructure to load the Davix libraries when necessary. Should be merged before #4878.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4877:243,plugin,plugin,243,https://root.cern,https://github.com/root-project/root/pull/4877,1,['plugin'],['plugin']
Modifiability,In preparation of anticipated column types with configurable bit width. Removes the assumption in the code that the column bit width is determined by the column type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16120:48,config,configurable,48,https://root.cern,https://github.com/root-project/root/pull/16120,1,['config'],['configurable']
Modifiability,"In previous ROOT versions, if you set the value of a variable with; `RooRealVar::setVal()`, the value was silently clippend when it was; outside the variable range. This silent mutation of data can be; dangerous. With ROOT 6.28, an exception will be thrown instead. If you; know what you are doing and want to restore the old clipping behavior,; you can do so with `RooRealVar::enableSilentClipping()`, but this is not; recommended. This change caught a logic error in `stressRooFit` where a background; fraction was randomized to be outside the `[0,1]` interval. That part of; the test was therefore removed (it was already removed from the; corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10470:53,variab,variable,53,https://root.cern,https://github.com/root-project/root/pull/10470,2,['variab'],['variable']
Modifiability,"In ranluxpp code, there is a left shift of negative value (c == -1); https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:; https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:; ```; int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);; ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:; https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8503:357,rewrite,rewrite,357,https://root.cern,https://github.com/root-project/root/issues/8503,2,"['portab', 'rewrite']","['portable', 'rewrite']"
Modifiability,"In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13986:57,variab,variable,57,https://root.cern,https://github.com/root-project/root/pull/13986,1,['variab'],['variable']
Modifiability,"In simultaneous fits with more than one channel, the NLL variable adds by default a normalization term so that the probability is normalized over the full measurement including all channels. In case of bin-by-bin offsetting, this should not be done because the same term appears in the likelihood in the denominator and cancels out. Also, fixes a problem where the name of the `_offsetPdf` was not correctly reset (previously, only the name of the proxy was changed, not the name of the pdf). Backport of https://github.com/root-project/root/pull/13986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13987:57,variab,variable,57,https://root.cern,https://github.com/root-project/root/pull/13987,1,['variab'],['variable']
Modifiability,"In standalone builds, it could otherwise happen that the variable is not set during the first CMake invocation and tests fail because they are unable to locate the LLVM headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14182:57,variab,variable,57,https://root.cern,https://github.com/root-project/root/pull/14182,1,['variab'],['variable']
Modifiability,"In such mode only requests for websocket-handlers are allowed.; And if connection token is configured, such connection only; can be established by providing the token. Increases security of THttpServer used for webgui widgets in public networks. Provide default THttpServer page for WS-only mode that one sees list of active widgets",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7122:91,config,configured,91,https://root.cern,https://github.com/root-project/root/pull/7122,1,['config'],['configured']
Modifiability,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14185:45,refactor,refactoring,45,https://root.cern,https://github.com/root-project/root/pull/14185,1,['refactor'],['refactoring']
Modifiability,In the REveDataTable list of suggestion was limited to 100. The limit was inherited with openui5 input widget. In REveDataCollection::StreamPublicMethods suggestion list is created with TClass::GetListOfAllPublicMethods() where void functions are omitted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13396:74,inherit,inherited,74,https://root.cern,https://github.com/root-project/root/pull/13396,1,['inherit'],['inherited']
Modifiability,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:247,variab,variable,247,https://root.cern,https://github.com/root-project/root/pull/14877,1,['variab'],['variable']
Modifiability,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566:1009,config,configuration,1009,https://root.cern,https://github.com/root-project/root/pull/10566,1,['config'],['configuration']
Modifiability,"In the RooRealIntegral constructor, there is a code section to figure out if the list of integration variables can be re-expressed in lvalues that are higher in the expression tree. To check this, the clients of the integration variables are followed recursively. This doesn't work if *copies* of the integration variables are passes to the integral, because they have no clients. Therefore, when filling the initial list of leaf servers, they need to be filled with the instances of the integration variables that are in the actual computation graph of the function. Closes #12646.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12699:101,variab,variables,101,https://root.cern,https://github.com/root-project/root/pull/12699,4,['variab'],['variables']
Modifiability,"In the `rootcint` command defined in `RootMacros.cmake`, the; `COMPILE_DEFINITIONS` from the target are forwarded as compiler flags. The `COMPILE_DEFINITIONS` are stored in the `module_defs` variable with; a generator expression:. ```; set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>); ```. Then, the definitions are added to the rootcint command with this; expression:. ```; ""$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ```. This code was almost copied exactly from the CMake documentation; example:. https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html. In particular, the `BOOL` check makes sure that the if the target; property is empty, we will not get a bare `-D` with nothing after it,; corrupting the rootcint command. However, there is no protection against the case where the; `COMPILE_DEFINITIONS` target property is not empty, but its elements are; empty strings! This happened to me in my recent build. Instead of trying to figure out where the empty strings are added to the; `COMPILE_DEFINITIONS`, it is better to also protect against empty target; property elements in the CMake generator expressions, which is; implemented in this commit. This PR is backported in https://github.com/root-project/root/pull/11132.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11111:191,variab,variable,191,https://root.cern,https://github.com/root-project/root/pull/11111,1,['variab'],['variable']
Modifiability,"In the `rootcint` command defined in `RootMacros.cmake`, the; `COMPILE_DEFINITIONS` from the target are forwarded as compiler flags. The `COMPILE_DEFINITIONS` are stored in the `module_defs` variable with; a generator expression:. ```; set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>); ```. Then, the definitions are added to the rootcint command with this; expression:. ```; ""$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ```. This code was almost copied exactly from the CMake documentation; example:. https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html. In particular, the `BOOL` check makes sure that the if the target; property is empty, we will not get a bare `-D` with nothing after it,; corrupting the rootcint command. However, there is no protextion against the case where the; `COMPILE_DEFINITIONS` target property is not empty, but its elements are; empty strings! This happened to me in my recent build. Instead of trying to figure out where the empty strings are added to the; `COMPILE_DEFINITIONS`, it is better to also protect against empty target; property elements in the CMake generator expressions, which is; implemented in this commit. This is a backport of https://github.com/root-project/root/pull/11111.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11132:191,variab,variable,191,https://root.cern,https://github.com/root-project/root/pull/11132,1,['variab'],['variable']
Modifiability,"In the current implementation of `RooDataSet::reduceEng`, the dataset; itself was queried to get the weight variable used in the reduced; dataset. This didn't work with the `RooCompositeDataStore`, because a; dataset with this data store doesn't have a weight variable, as these; are encapsulated in the components of the composite store. Hence,; reducing a weighted dataset with a RooCompositeDataStore yields an; unweighted dataset, which is a bug. To fix this problem, this commit implements a separate reduction logic; for the RooCompositeDataStore: the components are now reduced; individually, instead of naively creating a RooCompositeDataStore from a; RooVectorDataStore/RooTreeDataStore. To avoid further code branches in; RooDataSet, a new virtual function `RooAbsDataStore::reduce` is; introduced. The first two commits update the data reduction implementation details such the bugfix is easier to implement (see commit messages for more details). This closes https://github.com/root-project/root/issues/6951.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10397:108,variab,variable,108,https://root.cern,https://github.com/root-project/root/pull/10397,2,['variab'],['variable']
Modifiability,"In the documentation of the [RooAbsPdf ](https://root.cern.ch/doc/master/classRooAbsPdf.html) class, methods related to dataset generation have a CmdArg variable named ""NumEvent"" which specifies the number of events to generate. However, the correct variable name should be ""NumEvents"" instead (i.e. `RooFit::NumEvent` does not exist but `RooFit::NumEvents` does).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11418:153,variab,variable,153,https://root.cern,https://github.com/root-project/root/issues/11418,2,['variab'],['variable']
Modifiability,"In the implementation of `RooAbsArg::recursiveRedirectServers` a static variable was used to check for cyclic recursion. This is not thread safe an should be avoided. The problem is solved by creating a new `recursiveRedirectServersImpl` function that takes the `callStack` variable also as an argument, and this variable is instantiated separately in each `recursiveRedirectServers` call. Since the code was touched and moved anyway, the implementation of `recursiveRedirectServers` was formatted with clang-format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11970:72,variab,variable,72,https://root.cern,https://github.com/root-project/root/pull/11970,3,['variab'],['variable']
Modifiability,"In the implementation of `RooHistPdf::plotSamplingHint`, some of the; returned values can be outside the variable definition range. This might; lead to invalid evaluations when the sampling hints are also used to; evaluate other PDF components of a composite PDF, as reported in https://github.com/root-project/root/issues/11482. This commit suggests an improved algorithm for the sampling hint:; consider only bin boundaries that are strictly between the plot limits; within some epsilon, and for the limits just sample two additional; points left and light that are some epsilon aways from the plot limits. The `stressRooFit_ref.root` reference file needs to be updated with this; change, because the sampling changes the RooPlots that are used as; reference objects. The final commit in this PR avoids code redundancy by calling the implementation of `RooHistPdf::plotSamplingHint` also in the `RooHistFunc`. Closes https://github.com/root-project/root/issues/11482.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11701:105,variab,variable,105,https://root.cern,https://github.com/root-project/root/pull/11701,1,['variab'],['variable']
Modifiability,"In the old PyROOT, it might have made sense to re-implement `__setattr__` for ROOT in a way that it sets an attribute of the `gbl_namespace` (`cppyy.gbl` in new PyROOT), because back at that time setting an attribute to the global namespace also meant forwarding the definition to the interpreter and the variable was then also available in C++. However, this is not supported anymore by the new PyROOT, so the custom `__setattr__` appears unneeded and this commits suggests to remove it. See also the discussion here:; https://its.cern.ch/jira/browse/ROOT-10451",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14486:305,variab,variable,305,https://root.cern,https://github.com/root-project/root/pull/14486,2,['variab'],['variable']
Modifiability,"In the past, the `getNDim` function was called just `NDim`. The funciton; was renamed to match the code convention (lower case for funciton; names), but we have to keep an overload with the old name to not break; existing user code. Here you can see where the old `RooAbsMinimizerFcn::NDim()` function was defined:; https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/inc/RooMinimizerFcn.h#L43; (it was in `RooMinimizerFcn` before, but after @egpbos refactoring it can be in `RooAbsMinimizerFcn`). FYI @cburgard",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9332:475,refactor,refactoring,475,https://root.cern,https://github.com/root-project/root/pull/9332,1,['refactor'],['refactoring']
Modifiability,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:885,config,configuration,885,https://root.cern,https://github.com/root-project/root/pull/7616,3,"['config', 'refactor']","['configuration', 'refactor']"
Modifiability,"In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:115,extend,extend,115,https://root.cern,https://github.com/root-project/root/issues/7258,1,['extend'],['extend']
Modifiability,Including that header from cling breaks building ROOT with; external llvm and clang (which is needed e.g. for the conda; package): `config.h` is not avaiable in that scenario. cc: @chrisburr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10709:132,config,config,132,https://root.cern,https://github.com/root-project/root/pull/10709,1,['config'],['config']
Modifiability,"Initial Commit for TMVA SOFIE under TMVA::Experimental::SOFIE. including support for transpose, relu and gemm operators. including cmake configurations for building sofie when protobuf is found. this PR is experimental only and made to accommodate timeline for GSoC selection tests related to TMVA SOFIE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7544:137,config,configurations,137,https://root.cern,https://github.com/root-project/root/pull/7544,1,['config'],['configurations']
Modifiability,"Initialization of a function static variable is guaranteed to be; done in a thread safe manner by the C++11 standard. Previously, the; static was initialized to 0 and then reset which lead to a data race.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/48:36,variab,variable,36,https://root.cern,https://github.com/root-project/root/pull/48,1,['variab'],['variable']
Modifiability,Initialize bits local variable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1202:22,variab,variable,22,https://root.cern,https://github.com/root-project/root/pull/1202,1,['variab'],['variable']
Modifiability,Installing with CMAKE_INSTALL_PYTHONDIR different from CMAKE_INSTALL_LIBDIR leads to incorrect runpath configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11431:103,config,configuration,103,https://root.cern,https://github.com/root-project/root/issues/11431,1,['config'],['configuration']
Modifiability,"Instead of hard-coding 'lib' as the path to which minuit2 is installed as a standalone library, use the user configurable CMAKE_INSTALL_LIBDIR. As a particularly common example, this allows a user to specify the library installation path to '${_prefix}/lib64' for 64-bit machines from the cmake command line. This is part of upstreaming patches that I use to build packages for root on openSUSE [1]. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [1] https://build.opensuse.org/package/show/science/root6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14176:109,config,configurable,109,https://root.cern,https://github.com/root-project/root/pull/14176,1,['config'],['configurable']
Modifiability,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11162:347,variab,variable,347,https://root.cern,https://github.com/root-project/root/pull/11162,1,['variab'],['variable']
Modifiability,Integration of all different layers in one Deep Learning module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:29,layers,layers,29,https://root.cern,https://github.com/root-project/root/pull/817,1,['layers'],['layers']
Modifiability,"Internal logic has been adapted to support the case in which TTreeProcessorMT; is acting on a TChain and the trees in the TChain do not all have the same name.; Importantly, the fTreeName data-member changed name to fTreeNames and is now a; vector of strings rather than a single string. This fixes ROOT-10178.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5270:24,adapt,adapted,24,https://root.cern,https://github.com/root-project/root/pull/5270,1,['adapt'],['adapted']
Modifiability,"Introduce `LIBBSDROOT` cmake variable with path to main directory, where include and library can be found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15248:29,variab,variable,29,https://root.cern,https://github.com/root-project/root/pull/15248,1,['variab'],['variable']
Modifiability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:488,config,configuration,488,https://root.cern,https://github.com/root-project/root/pull/16594,1,['config'],['configuration']
Modifiability,"Introduce the new `RooAbsPdf::createExpectedEvents()` method to; explicitly create an object that represents the expected number of; events. Like this, the expected number of events is fully exposed in the; computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits; trivial, and also optimizes the BatchMode because the RooFitDriver can; de-duplicate integrals that appear both in the regular evaluation path; and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is; part of the computation graph, using it in the RooFit code generation; for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12998:302,extend,extended,302,https://root.cern,https://github.com/root-project/root/pull/12998,1,['extend'],['extended']
Modifiability,"Introduce yet another layer of abstraction in ROpaqueTaskArena,; a class inheriting from tbb::task_arena that will allow us to keep; tbb hidden from ROOT interfaces while solving the issue of having to; forward-declare tbb::task_arena in an interface-dependent way. Thanks @Axel-Naumann !",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7062:73,inherit,inheriting,73,https://root.cern,https://github.com/root-project/root/pull/7062,1,['inherit'],['inheriting']
Modifiability,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15620:116,variab,variable,116,https://root.cern,https://github.com/root-project/root/pull/15620,1,['variab'],['variable']
Modifiability,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Related to https://github.com/root-project/root/issues/15621,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15626:116,variab,variable,116,https://root.cern,https://github.com/root-project/root/pull/15626,1,['variab'],['variable']
Modifiability,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16546:58,inherit,inherited,58,https://root.cern,https://github.com/root-project/root/pull/16546,1,['inherit'],['inherited']
Modifiability,"It can easily happen that the fit parameter labels in the `plotPull()`; produced by the RooMCStudy don't fit on the canvas, for example in the; `rf801` tutorial:. https://root.cern.ch/doc/v626/rf801__mcstudy_8C.html. This commit suggests to improve the likelihood that the labels overshoot; the canvas in two ways:. * custom parameter label text with greek letters instead of; written-out variable letters to save space. * move the labels a bit to the left. If the legend is still not looking good in a given usecase, the Gaussian; should be fit to the pull distribution by the user outside of; `plotPull()`, which only takes a handful lines and then they have full; control over the plot. The built-in Gaussian fit to `plotPull()` is only; for quick visualizations anyway. It is now explained how to do the; Gaussian fit yourself in the documentation of `plotPull()`. Closes #10931. Here is how the output of the `rs401c_FeldmanCousins.py` tutorial looks with this PR:. ![rf801_mcstudy](https://user-images.githubusercontent.com/6578603/178079738-d5490b09-c0a5-4f7a-b8f9-e820cd650304.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10938:389,variab,variable,389,https://root.cern,https://github.com/root-project/root/pull/10938,1,['variab'],['variable']
Modifiability,"It doesn't make sense to have the weight variable in the set of observables. This causes problems in various places, e.g.:. * this dummy `weightVar` is polluting the JSON file when exporting the workspace. * it is a nuisance for normalization because it will also appear in the normalization sets. This commit suggests to not add some dummy weight variable to the workspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12556:41,variab,variable,41,https://root.cern,https://github.com/root-project/root/pull/12556,2,['variab'],['variable']
Modifiability,It generated expected output:; https://root-forum.cern.ch/t/no-python-cmake-flag-in-root-config-from-6-20/39638/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5738:89,config,config-from-,89,https://root.cern,https://github.com/root-project/root/pull/5738,1,['config'],['config-from-']
Modifiability,"It is axis drawing, which is configured with `RAttrAxis` class; Many different settings for ticks, labels and title; Supported axes kinds:; - regular; - time scale; - labels; - log with arbitrary base log2, log10, ln, ... Fully refactor JS code for axis drawing - both v6 and v7 using Promises to draw text for axes labels and titles. Provide draw_axes.cxx macro to demonstrate different options:; ![Canvas](https://user-images.githubusercontent.com/4936580/98940655-9b848580-24eb-11eb-99ff-8293254f1869.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6801:29,config,configured,29,https://root.cern,https://github.com/root-project/root/pull/6801,2,"['config', 'refactor']","['configured', 'refactor']"
Modifiability,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638:65,extend,extended,65,https://root.cern,https://github.com/root-project/root/pull/13638,4,['extend'],['extended']
Modifiability,"It is fully bound to RFrame and only margin and height can be specified.; In the code one does:. auto title = subpads[1][0]->Draw<RTitle>(""Frame2 title"");; title->SetMargin(0.01_normal).SetHeight(0.05_normal);. Provide preliminary JSROOT code. Also first try to provide context menu - for `RAttrAxis` ; Now only lin/log scale switch there - only prove of principle. Also introduce `kNone` attribute kind in RAttrMap. ; Allows to suppress values which is configured in RStyle or in the parent classes. Introduce `zoommin`/`zoommax` values for `RAttrAxis`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5063:454,config,configured,454,https://root.cern,https://github.com/root-project/root/pull/5063,1,['config'],['configured']
Modifiability,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5897:377,config,configure,377,https://root.cern,https://github.com/root-project/root/pull/5897,1,['config'],['configure']
Modifiability,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:167,config,configuration,167,https://root.cern,https://github.com/root-project/root/issues/11381,3,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context; of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore; might have not exposed Vc... This change improves root-project/root@f2ac9b349f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9572:113,Adapt,Adapt,113,https://root.cern,https://github.com/root-project/root/pull/9572,1,['Adapt'],['Adapt']
Modifiability,"It should be defined if C++14 variable templates are available, but it doesn't seem to work -- it's always undefined in my tests. Help? :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2293:30,variab,variable,30,https://root.cern,https://github.com/root-project/root/pull/2293,1,['variab'],['variable']
Modifiability,"It turned out that my proposal to fix issue [ROOT-8510](https://sft.its.cern.ch/jira/browse/ROOT-8510) had the side-effect of requiring the environment variable FC to be set to find the correct Fortran compiler under some circumstances. This should now be fixed. Finding out whether a compiler is found in Cmake seems to be really; hard. In particular a non-found Fortran compiler caused issues on MacOS; (ROOT-8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:152,variab,variable,152,https://root.cern,https://github.com/root-project/root/pull/891,2,['variab'],['variable']
Modifiability,"It uses RBrowser and RBrowsable functionality to select some files or input new file SaveAs.; Provide sync and async modes. Actual ui5 coding should be implemented by @Falcort . Now RFileDialog starts its own window, later adapter will be provided to use RFileDialog inside other widgets - like RCanvas or RBrowser. Provide simple tutorial macro.; For meaningful async mode I add `RDirectory::Remove(name)` method (@Axel-Naumann)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4607:223,adapt,adapter,223,https://root.cern,https://github.com/root-project/root/pull/4607,1,['adapt'],['adapter']
Modifiability,"It was effectively dead code since commit 4feecb3d63ab81344d66a54b4085a051c7ac35b2 (""Always assume we have xrootd >= 5.0.0"") last year. Users had to manually specify `-Dnetx=ON` during CMake configuration, which would not build with XRootD >= 5.1.0 that removed the `XrdClient` library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15244:191,config,configuration,191,https://root.cern,https://github.com/root-project/root/pull/15244,1,['config'],['configuration']
Modifiability,It was using the wrong signature leading to the configuration to be mis-read. Fixes #7754,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7755:48,config,configuration,48,https://root.cern,https://github.com/root-project/root/pull/7755,2,['config'],['configuration']
Modifiability,"It would be great if the `F.ModuleName` could be printed out when this assert fires. https://github.com/root-project/root/blob/dfbe5ae4f74a197182feb28b2b9052b73e7a3f45/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp#L4018. Would make it much easier to understand that one has to for example `export ROOT_INCLUDE_PATH=${VC_HOME}/include` because the Vc module was not found, instead of guessing about what is happening from this. ```; genconf: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4018: clang::ASTReader::ASTReadResult clang::ASTReader::ReadModuleMapFileBlock(clang::ASTReader::RecordData&, clang::ASTReader::ModuleFile&, const ModuleFile*, unsigned int): Assertion `M && M->Name == F.ModuleName && ""found module with different name""' failed.; --; /bin/sh: line 1: 158369 Aborted                 (core dumped) ../run /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/Gaudi-master/src/Gaudi-master-build/GaudiKernel/genconf --configurable-module=GaudiKernel.Proxy --configurable-default-name=Configurable.DefaultName --configurable-algorithm=ConfigurableAlgorithm --configurable-algtool=ConfigurableAlgTool --configurable-auditor=ConfigurableAuditor --configurable-service=ConfigurableService -o genConfDir/GaudiKernel -p GaudiKernel -i /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/Gaudi-master/src/Gaudi-master-build/GaudiKernel/libtest_CustomFactory.so. ```. Root version: This is ROOT master",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12138:1067,config,configurable-module,1067,https://root.cern,https://github.com/root-project/root/issues/12138,11,"['Config', 'config']","['Configurable', 'ConfigurableAlgTool', 'ConfigurableAlgorithm', 'ConfigurableAuditor', 'ConfigurableService', 'configurable-algorithm', 'configurable-algtool', 'configurable-auditor', 'configurable-default-name', 'configurable-module', 'configurable-service']"
Modifiability,"It's a problem of old gccs. New compilers consider naming a variable the; same as a function not a shadow. This was fixed in gcc5, although the; release notes of gcc 4.8 claim that it was in 4.8. That's not the case,; as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7278:60,variab,variable,60,https://root.cern,https://github.com/root-project/root/pull/7278,2,['variab'],"['variable', 'variables']"
Modifiability,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8374:244,variab,variables,244,https://root.cern,https://github.com/root-project/root/issues/8374,1,['variab'],['variables']
Modifiability,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:15,config,configured,15,https://root.cern,https://github.com/root-project/root/pull/4652,2,['config'],"['configuration', 'configured']"
Modifiability,"Just opening the PR to discuss the problem:; Jitting many `Define` (or `Filter`) calls currently incurs in major runtime and memory consumption penalties. This is because repeated calls to `Calc` or `ProcessLine` have a significant overhead w.r.t. a single call that jits the same code in a single go. Jitting all `Define` calls together (and together with all jitted actions) greatly reduces runtime and memory consumption. **Current issue:**; in code such as. ```c++; d.Define(""x"", ""42"").Min(""x""); ```. the `Min` action has no way to know the type of `x` because the lambda that produces `x` has not been jitted yet. Maybe we could defer even the creation of the strings to jit for the actions to _after_ we have jitted all the `Define`s, but this will require more thinking and more refactoring.; EDIT: the same goes for jitted `Snapshot`s, the formation of the string to jit must be deferred to after we have jitted and executed all `Define`s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1313:786,refactor,refactoring,786,https://root.cern,https://github.com/root-project/root/pull/1313,1,['refactor'],['refactoring']
Modifiability,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:110076,variab,variable,110076,https://root.cern,https://github.com/root-project/root/issues/7526,1,['variab'],['variable']
Modifiability,"LIBRARY); -- Pythia8 not found. Switching off pythia8 option; -- Looking for FFTW3; -- Found fftw3 includes at /usr/include; -- Found fftw3 library at /usr/lib/libfftw3.so; -- Looking for CFITSIO; -- Could NOT find CFITSIO (missing: CFITSIO_LIBRARY CFITSIO_INCLUDE_DIR); -- CFITSIO not found. You can enable the option 'builtin_cfitsio' to build the library internally'; -- For the time being switching off 'fitsio' option; -- Looking for XROOTD; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.4.2; -- Could NOT find GFAL (missing: GFAL_INCLUDE_DIR SRM_IFCE_INCLUDE_DIR GFAL_LIBRARY); -- GFAL library not found. Set variable GFAL_DIR to point to your gfal installation; and the variable SRM_IFCE_DIR to the srm_ifce installation; -- For the time being switching OFF 'gfal' option; -- Could NOT find FTGL (missing: FTGL_INCLUDE_DIR FTGL_LIBRARY); -- ftgl library not found. Set variable FTGL_ROOT_DIR to point to your installation; -- For the time being switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:7119,variab,variable,7119,https://root.cern,https://github.com/root-project/root/issues/10528,1,['variab'],['variable']
Modifiability,"LX_ARB_create_context, ; GLX_ARB_create_context_no_error, GLX_ARB_create_context_profile, ; GLX_ARB_create_context_robustness, GLX_ARB_fbconfig_float, ; GLX_ARB_framebuffer_sRGB, GLX_ARB_get_proc_address, GLX_ARB_multisample, ; GLX_EXT_buffer_age, GLX_EXT_create_context_es2_profile, ; GLX_EXT_create_context_es_profile, GLX_EXT_fbconfig_packed_float, ; GLX_EXT_framebuffer_sRGB, GLX_EXT_import_context, ; GLX_EXT_texture_from_pixmap, GLX_EXT_visual_info, GLX_EXT_visual_rating, ; GLX_INTEL_swap_event, GLX_MESA_copy_sub_buffer, ; GLX_MESA_multithread_makecurrent, GLX_MESA_query_renderer, ; GLX_MESA_swap_control, GLX_OML_swap_method, GLX_OML_sync_control, ; GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, ; GLX_SGIX_visual_select_group, GLX_SGI_make_current_read, ; GLX_SGI_swap_control, GLX_SGI_video_sync; GLX version: 1.2; GLX extensions:; GLX_ARB_get_proc_address, GLX_ARB_multisample, GLX_EXT_import_context, ; GLX_EXT_visual_info, GLX_EXT_visual_rating, GLX_MESA_query_renderer, ; GLX_OML_swap_method, GLX_SGIS_multisample, GLX_SGIX_fbconfig, ; GLX_SGI_make_current_read; Extended renderer info (GLX_MESA_query_renderer):; Vendor: VMware, Inc. (0xffffffff); Device: llvmpipe (LLVM 10.0.0, 256 bits) (0xffffffff); Version: 20.0.8; Accelerated: no; Video memory: 7279MB; Unified memory: no; Preferred profile: core (0x1); Max core profile version: 3.3; Max compat profile version: 3.1; Max GLES1 profile version: 1.1; Max GLES[23] profile version: 3.1; ... Full error:; Error in <TEveViewer::SpawnGLViewer>: Insufficient support from the graphics hardware. Aborting.; *** Break *** segmentation violation; Generating stack trace...; 0x00007fd360487563 in TEveViewer::SpawnGLViewer(TGedEditor*, bool, bool) at /media/disk1/SHiPBuild/sw/SOURCES/ROOT/5479ddb618_FAIRSHIP/0/graf3d/eve/src/TEveViewer.cxx:182 from /media/disk1/SHiPBuild/sw/ubuntu2004_x86-64/ROOT/5479ddb618_FAIRSHIP-1/lib/libEve.so.6.22; 0x00007fd360430693 in TEveManager::SpawnNewViewer(char const*, char const*, bool) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6774:1815,Extend,Extended,1815,https://root.cern,https://github.com/root-project/root/issues/6774,1,['Extend'],['Extended']
Modifiability,Let configure custom font - either as woff/woff2 files or just url to external resource.; Provide demo in `draw_pave.cxx` macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8600:4,config,configure,4,https://root.cern,https://github.com/root-project/root/pull/8600,1,['config'],['configure']
Modifiability,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:4,config,configure,4,https://root.cern,https://github.com/root-project/root/pull/7777,1,['config'],['configure']
Modifiability,Let configure such property; Better handling of double click in file dialog; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9146:4,config,configure,4,https://root.cern,https://github.com/root-project/root/pull/9146,1,['config'],['configure']
Modifiability,Let configure web display kind when running `rootbrowse`. More important - run event loop when web-based browser is started.; In contrary to normal `TBrowser` one needs event loop running. Fix web-display configuration problem when `WebGui.Display: something` configured in rootrc file.; In such case always web-batch-mode kind was selected. Addressing [question on forum](https://root-forum.cern.ch/t/is-there-an-option-to-customize-rootbrowse/62066/),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16807:4,config,configure,4,https://root.cern,https://github.com/root-project/root/pull/16807,3,['config'],"['configuration', 'configure', 'configured']"
Modifiability,Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16030:22,config,configuration,22,https://root.cern,https://github.com/root-project/root/pull/16030,1,['config'],['configuration']
Modifiability,"Like for RooFit previously, this commit applies the `clang-tidy` suggestions from the battle-tested CMSSW config file: https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. I scrolled over the changes, and they look unintrusive. It's mostly replacing `0` and `1` literals with `false` and `true`, replaces the included headers, and uses more `empty()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13892:106,config,config,106,https://root.cern,https://github.com/root-project/root/pull/13892,1,['config'],['config']
Modifiability,LoadCoreModules crashes when one of the core modules wasn't; found as we call `findModule` and then dereference that result; unconditionally. It also calls `findModule` and then passes; the found module name again to `findModule` in the `LoadModule`; function. This commit refactors this code and fixes those bugs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1391:273,refactor,refactors,273,https://root.cern,https://github.com/root-project/root/pull/1391,1,['refactor'],['refactors']
Modifiability,"Looking at the code, it was probably the idea at some point in the `RooAbsData` design that the ownership of the variables in the dataset can be shared, i.e. that the outside world can ""claim"" and ""release"" the variables in a RooAbsData. If anything else is still claiming the variables, they will not be deleted by the RooAbsData destructor. That's quite messy. For example, if the RooAbsData is destructed before the external ""claimers"" releases the variables, the claimers suddenly has the responsability to delete the variables themselves. And who of them should do it then? The ownership model is completely unclear. This and other reasons explain probably why the; `RooAbsData::claimVars()` and `RooAbsData::releaseVars()` are not used at all outside the RooAbsData, and this commit suggests to remove these memory-unsafe functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13179:113,variab,variables,113,https://root.cern,https://github.com/root-project/root/pull/13179,5,['variab'],['variables']
Modifiability,"MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2152,Config,Configuring,2152,https://root.cern,https://github.com/root-project/root/issues/14492,1,['Config'],['Configuring']
Modifiability,"MBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:4381,Config,Configuration,4381,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Config'],['Configuration']
Modifiability,MacOS build fails if configured without cocoa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12527:21,config,configured,21,https://root.cern,https://github.com/root-project/root/issues/12527,1,['config'],['configured']
Modifiability,"Made the TMVA build work correctly when `builtin_gsl` is set to `True`. Had to make sure that the `${GSL_CBLAS_LIBRARY}` variable is set in the same way in which [FindGSL.cmake](https://cmake.org/cmake/help/latest/module/FindGSL.html) would set it, and that TMVA would explicitly wait for the completion of the GSL build. This is to fix the issue described in: https://sft.its.cern.ch/jira/browse/ROOT-10862",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5889:121,variab,variable,121,https://root.cern,https://github.com/root-project/root/pull/5889,1,['variab'],['variable']
Modifiability,"Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609:391,inherit,inherit,391,https://root.cern,https://github.com/root-project/root/pull/6609,3,"['config', 'inherit', 'rewrite']","['configuration', 'inherit', 'rewrite']"
Modifiability,"Main problem that cmake `list(APPEND BASE_HEADERS ...)` command was not exported to parent scope - as original `BASE_HEADERS` variable. Once done, several other dictionary options should be adjusted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3553:126,variab,variable,126,https://root.cern,https://github.com/root-project/root/pull/3553,1,['variab'],['variable']
Modifiability,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11821:35,variab,variables,35,https://root.cern,https://github.com/root-project/root/pull/11821,3,['variab'],['variables']
Modifiability,Make OS variable for dictgen mutual exclusive.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/844:8,variab,variable,8,https://root.cern,https://github.com/root-project/root/pull/844,1,['variab'],['variable']
Modifiability,Make configuration fail when dependencies are not found and fail-on-missing=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3975:5,config,configuration,5,https://root.cern,https://github.com/root-project/root/pull/3975,1,['config'],['configuration']
Modifiability,Make it possible to run tests when configuring with -Dgnuinstall:BOOL=ON,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/130:35,config,configuring,35,https://root.cern,https://github.com/root-project/root/pull/130,1,['config'],['configuring']
Modifiability,Make sure that our matrix types (CPU and GPU) use the same method name so that we can call them in a polymorphic manner from templates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2306:101,polymorphi,polymorphic,101,https://root.cern,https://github.com/root-project/root/pull/2306,1,['polymorphi'],['polymorphic']
Modifiability,Make sure the saved TGraph is a proper C++ variable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15377:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/pull/15377,1,['variab'],['variable']
Modifiability,Make sure the saved TGraph is a proper C++ variable.; As suggested here: https://its.cern.ch/jira/browse/ROOT-8277; it works also for the classes inheriting from TGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15377:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/pull/15377,2,"['inherit', 'variab']","['inheriting', 'variable']"
Modifiability,Make the modulemap more maintainable.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6049:24,maintainab,maintainable,24,https://root.cern,https://github.com/root-project/root/pull/6049,1,['maintainab'],['maintainable']
Modifiability,Makes it easier to understand what's enabled etc when no `cmake` config happens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12522:65,config,config,65,https://root.cern,https://github.com/root-project/root/pull/12522,1,['config'],['config']
Modifiability,"Many analyses and frameworks offer the possibility of using a semi-structured format to represent both the full dataset (in terms of the files that need to be processed) and some metadata attached to it. Most often, the files are split into multiple groupings, which are usually called ""samples"" or ""datasets"". A few examples of this pattern are:. * [AGC](https://github.com/iris-hep/analysis-grand-challenge/blob/main/analyses/cms-open-data-ttbar/ntuples.json); * [PocketCoffea](https://github.com/PocketCoffea/PocketCoffea/blob/main/datasets/DATA_DoubleMuon_local.json); * [WRemnants](https://github.com/WMass/WRemnants/blob/4068b8622fd54867ae779ee3d79a4d4aa270a4a5/wremnants/datasets/datasetDict_v9.py); * [Bamboo](https://gitlab.cern.ch/swertz/bambooexamples/-/blob/master/samples.yml). This helps a lot in keeping the configuration of the analysis dataset tidy and short, so that it can also be more easily shared to others and compared between different executions. But this also calls for a discussion on providing a standard schema that all frameworks could accept and digest into their own execution workflows. For example, it is quite natural to always include a list of files in each ""sample"". This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups""; * Cover TTree but plan for RNTuple support; * Should support friend trees per group; * Should support entry ranges per group; * No indexed friend trees (at least for now). One possible starting point would be (using ""samples""=""groups""=""datasets""):; ```python; {; ""samples"":{; ""sample_a"":{; ""treenames"": [""Events""],; ""files"": [""fa*.root""],; ""friends"":{; ""treenames"": [""Friend""],; ""files"": [""fr*.root""],; },; ""entry_range"": [0, 1000],; ""metadata"": {...}; },; ""sample_b"":{; ""treenames"": [""treeb_1"", ""treeb_2""],; ""files"": [""fileb_1.root"", ""fileb_2.root""],; ""friends"":{; ""treenames"": [""Frie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624:823,config,configuration,823,https://root.cern,https://github.com/root-project/root/issues/11624,1,['config'],['configuration']
Modifiability,"Many improvements in CEF:; - support POST requests, let transfer arbitrary data from client to server; - replace text-based cefQuery messaging by longpoll, required for binary transfer; - assign X11 error handler to avoid application abort in case of minor X11 warnings; - use single-process mode in batch to reduce number of running processes. Provide special handling of batch mode for Chrome and Firefox:; - both support `--headless` mode completely without X ; - very simple workaround to stop browser after 30 s with `timeout 30 chromium ...` command; - let configure custom shell commands via `.rootrc` parameters. Changes in http and webgui libraries:; - ""hide"" TCivetweb, TFastCgi, THttpWSEngine classes from end-user (@Axel-Naumann); - remove some comments from civetweb.c (@amadio); - use std::copy() instead of memcpy() for std::string (@Axel-Naumann); - introduce simple key identification of clients, let recognize which client starts by TWebWindow::Show(); - simplify cmake files, separate v7 code in FitPanel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886:563,config,configure,563,https://root.cern,https://github.com/root-project/root/pull/1886,1,['config'],['configure']
Modifiability,Merging issue with global variables between compiled and interpreted code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15938:26,variab,variables,26,https://root.cern,https://github.com/root-project/root/issues/15938,1,['variab'],['variables']
Modifiability,Messing up with cmake system variables such as CMAKE_CONFIGURATION_TYPES; is considered a bad practice. It becomes overly complicated for multi-; stage cmake generators such as XCode and VisualStudio. This code prevents us to build against vanilla llvm and as per D33444; we were advised to revisit this code. This PR blocks #1632.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1633:29,variab,variables,29,https://root.cern,https://github.com/root-project/root/pull/1633,1,['variab'],['variables']
Modifiability,"Method signature used for `DataLoader::PrepareTrainingAndTestSet` triggered the generation of classes ""Signal"" and ""Background"". Since the task was regression this caused confusion further down the processing pipeline. Code changed to use global selection cut instead of implicit signal/background cuts. Also includes additional improvements to variable names and documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2460:345,variab,variable,345,https://root.cern,https://github.com/root-project/root/pull/2460,1,['variab'],['variable']
Modifiability,Minimal config is broken on root-fedora30-1.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6504:8,config,config,8,https://root.cern,https://github.com/root-project/root/issues/6504,1,['config'],['config']
Modifiability,Minor refactoring of TH1::SmoothArray,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7029:6,refactor,refactoring,6,https://root.cern,https://github.com/root-project/root/issues/7029,1,['refactor'],['refactoring']
Modifiability,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:1501,variab,variable,1501,https://root.cern,https://github.com/root-project/root/pull/10966,1,['variab'],['variable']
Modifiability,Minuit2Minimizer's GetVariableSettings method doesn't correctly report parameter limits.; This PR corrects its logic to report them correctly. In the old code then a variable with lower+upper limits only has the lower limit reported.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/455:166,variab,variable,166,https://root.cern,https://github.com/root-project/root/pull/455,1,['variab'],['variable']
Modifiability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:84,config,configuration,84,https://root.cern,https://github.com/root-project/root/pull/14311,1,['config'],['configuration']
Modifiability,"Most people prefer Minuit2 nowadays, especially RooFit users, as some of; the more complicated fits don't converge with the old Minuit; implementation. Some RooFit tests are adapted to pass also when using Minuit2 as the minimizer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13661:174,adapt,adapted,174,https://root.cern,https://github.com/root-project/root/pull/13661,1,['adapt'],['adapted']
Modifiability,"Motivation: we need to make sure that, if PyROOT is used from another process that will keep on living after the Python interpreter dies, PyROOT does not shut down the ROOT interpreter via `TROOT::EndOfProcessCleanups` when running its atexit handler. In that sense, this PR adds a configuration option to tell PyROOT if the teardown needs to be soft, i.e. we do not want to shut down the ROOT interpreter. Instead, in the soft mode, we only want (and need) to clean the objects that are controlled by PyROOT via its `TMemoryRegulator`. @Axel-Naumann @pcanal just one new thing with respect to what we discussed: in the function that does the cleanup of the objects in `TMemoryRegulator`, called `RecursiveRemoveAll` in my commit, we can only delete a C++ object found in the map if the corresponding Python proxy **owns** the C++ object. Otherwise we will have a double delete (if the proxy does not own is because the deletion will happen somewhere else, so our `RecursiveRemoveAll` can't delete too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687:282,config,configuration,282,https://root.cern,https://github.com/root-project/root/pull/4687,1,['config'],['configuration']
Modifiability,Move ROOT settings files to config/root directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10148:28,config,config,28,https://root.cern,https://github.com/root-project/root/issues/10148,1,['config'],['config']
Modifiability,"Move the fRoofit classes depending on GSL in a new library libRooFitMore. The classes are: . - AdaptiveGauss and GausKronrod 1D integrator from Roofitcore; - Legendre, non-central chi2 and SphArmonic pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536:95,Adapt,AdaptiveGauss,95,https://root.cern,https://github.com/root-project/root/pull/4536,1,['Adapt'],['AdaptiveGauss']
Modifiability,Move the initialization of static constexpr variables from source to …,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6097:44,variab,variables,44,https://root.cern,https://github.com/root-project/root/pull/6097,1,['variab'],['variables']
Modifiability,Moved the TThreadExecutor object to TMVA::Config. O.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1283:42,Config,Config,42,https://root.cern,https://github.com/root-project/root/pull/1283,1,['Config'],['Config']
Modifiability,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16311:40,adapt,adaptive,40,https://root.cern,https://github.com/root-project/root/pull/16311,3,['adapt'],['adaptive']
Modifiability,Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12964:248,inherit,inherit,248,https://root.cern,https://github.com/root-project/root/pull/12964,1,['inherit'],['inherit']
Modifiability,"Mulltiprocessing of Hyper Parameter Optimisation, Cross Validation and Variable Importance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858:71,Variab,Variable,71,https://root.cern,https://github.com/root-project/root/pull/858,1,['Variab'],['Variable']
Modifiability,MultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:8454,variab,variable,8454,https://root.cern,https://github.com/root-project/root/issues/7458,1,['variab'],['variable']
Modifiability,"My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, ; ```; pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")); ```; one could now also do ; ```; pdf.fitTo(data, Range=""sideband""); ```; etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). ; However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:; - Should the `__cast` function be kept although it is not doing anything for the moment?; - Are the test appropriate?; - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314:602,adapt,adapted,602,https://root.cern,https://github.com/root-project/root/pull/7314,1,['adapt'],['adapted']
Modifiability,New CI label for nightly does not correctly report cmake configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15615:57,config,configuration,57,https://root.cern,https://github.com/root-project/root/issues/15615,1,['config'],['configuration']
Modifiability,"New version of mysql_config returns more than one -I option, make configure and cmake pick the right one. New version:; $ mysql_config --cflags; -I/usr/include -I/usr/include/mysql. Old version:; $ mysql_config --cflags; -I/usr/include/mysql",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1067:66,config,configure,66,https://root.cern,https://github.com/root-project/root/pull/1067,1,['config'],['configure']
Modifiability,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date.; This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11752:224,config,configure,224,https://root.cern,https://github.com/root-project/root/pull/11752,5,['config'],['configure']
Modifiability,"Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see; https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. For anything with ""./configure"", force the timestamp as stored in the tar file. Fixes https://github.com/root-project/root/issues/11743",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11742:224,config,configure,224,https://root.cern,https://github.com/root-project/root/pull/11742,5,['config'],['configure']
Modifiability,"No any other dimension kinds are supported, therefore simplify API; Use canvas size in `jupyter` to configure output container",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8686:100,config,configure,100,https://root.cern,https://github.com/root-project/root/pull/8686,1,['config'],['configure']
Modifiability,No longer strip/ignore std in ResolveTypedef. Adapt reference file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4458:46,Adapt,Adapt,46,https://root.cern,https://github.com/root-project/root/pull/4458,1,['Adapt'],['Adapt']
Modifiability,Not necessary since the refactoring done by Gerri.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1847:24,refactor,refactoring,24,https://root.cern,https://github.com/root-project/root/pull/1847,1,['refactor'],['refactoring']
Modifiability,"Now basic openui5 config parameters can be provided via rootrc file:. * WebGui.openui5src: alternative location for openui5 like https://openui5.hana.ondemand.com/; * WebGui.openui5libs: list of pre-loaded ui5 libs like sap.m, sap.ui.layout, sap.ui.unified; * WebGui.openui5theme: openui5 theme like sap_belize (default) or sap_fiori_3. Extend light configuration in webgeom - let configure kind and intensity of the light",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4630:18,config,config,18,https://root.cern,https://github.com/root-project/root/pull/4630,4,"['Extend', 'config']","['Extend', 'config', 'configuration', 'configure']"
Modifiability,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4966:30,config,configured,30,https://root.cern,https://github.com/root-project/root/pull/4966,1,['config'],['configured']
Modifiability,"Now that `builtin_afterimage` is deprecated and always `ON`, it has to build on all platforms. Update `config.guess` to the latest upstream version to auto-detect `riscv64-unknown-linux-gnu` and fix the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16260:103,config,config,103,https://root.cern,https://github.com/root-project/root/pull/16260,1,['config'],['config']
Modifiability,"OT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |; | From tags/v6-26-04@v6-26-04 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.26/04; ```; Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:; ```; $ root ; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; $ root-config --version; 6.30.00; ```; i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14068:1285,config,config,1285,https://root.cern,https://github.com/root-project/root/issues/14068,1,['config'],['config']
Modifiability,Old gcc issues a shadow warning if a local variable and a function have the same name.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4825:43,variab,variable,43,https://root.cern,https://github.com/root-project/root/pull/4825,2,['variab'],['variable']
Modifiability,"On 64-bit latest Tumbleweed release (20210515) there is one roottest failing; 597 - roottest-root-meta-ROOT-7462-make. It seems the issue isn't new; c.f https://github.com/root-project/root/issues/6331 and https://github.com/nicknagi/root/commit/707152a3af656a985ec3a14ad385b534c7f30062. <details>; <summary>Test output</summary>. ```; Name of real 'variable' seen as: 'fContent.'; Info: ClassInfo is not valid; Warning in <TStreamerInfo::Build>: Outer: pair<string,Inner<int> > has no streamer or dictionary, data member ""fContent"" will not be saved; -string=not set; -value=-1; -Info: Decl for instantation is valid; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:392:36: error: no member named 'value' in 'std::__and_<std::is_copy_assignable<std::__cxx11::basic_strin; g<char> >, std::is_copy_assignable<Inner<int> > >'; is_copy_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; ./instGood.cxx:10:33: note: in instantiation of template class 'std::pair<std::__cxx11::basic_string<char>, Inner<int> >' requested here; std::pair<string,Inner<int>> p;; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/bits/stl_pair.h:403:36: error: no member named 'value' in 'std::__and_<std::is_move_assignable<std::__cxx11::basic_strin; g<char> >, std::is_move_assignable<Inner<int> > >'; is_move_assignable<_T2>>::value,; ~~~~~~~~~~~~~~~~~~~~~~~~~~^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class Outer with content:. #line 1 ""instlib dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""instGood.cxx"". #undef _BACKWARD_BACKWARD_WARNING_H. input_line_55:2:34: error: member access into incomplete type 'Outer'; {Outer *o = (Outer*)0x2e6d470; o->Print();}; ^; instlib dictionary forward declarations' payload:5:65: note: forward declaration of 'Outer'; class __attribute__((annotate(""$cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8187:350,variab,variable,350,https://root.cern,https://github.com/root-project/root/issues/8187,1,['variab'],['variable']
Modifiability,"On MacOS passing to cmake:. `-Dcocoa=ON -Dopengl=OFF`. leads to. ```; /Users/pcanal/root_working/code/rootcling/graf2d/cocoa/src/TGCocoa.mm:20:10: fatal error: 'TGLIncludes.h' file not found; #include ""TGLIncludes.h""; ^~~~~~~~~~~~~~~; 1 error generated.; ```; In `graf2d/cocoa/CMakeLists.txt` the code:; ```; if(opengl) # special case when cocoa is enabled but not opengl (i.e. gminimal=ON); target_include_directories(GCocoa PRIVATE ${OPENGL_INCLUDE_DIR}); else(); target_include_directories(GCocoa PRIVATE; ${CMAKE_SOURCE_DIR}/graf3d/gl/inc; ); endif(opengl); ```; acknowledge the challenge but fail to address it. And indeed in `TGCocoa.mm` the file `TGLIncludes.h` is always included. Maybe this should fail at configuration time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160:715,config,configuration,715,https://root.cern,https://github.com/root-project/root/issues/7160,1,['config'],['configuration']
Modifiability,On el9 with the following config (and package from uscms cvmfs for non-builtin dependencies):; ```; cxx17 asimage builtin_clang builtin_cling builtin_gl2ps builtin_gtest builtin_llvm builtin_lz4 ; builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_xxhash builtin_zlib builtin_zstd clad; dataframe davix fitsio gdml http imt mysql opengl pyroot roofit root7 rpath runtime_cxxmodules; shared sqlite ssl tmva tmva-cpu tmva-pymva tpython spectrum vdt x11 xml xrootd; ```; In particular the following for compressions:; ```; builtin_lz4 builtin_lzma builtin_zlib builtin_zstd; ```; ```; cmslpc-el9-heavy01:src (master) pcanal$ uname -a; Linux cmslpc-el9-heavy01.fnal.gov 5.14.0-427.28.1.el9_4.x86_64 #1 SMP; PREEMPT_DYNAMIC Fri Aug 2 03:44:10 EDT 2024 x86_64 x86_64 x86_64; GNU/Linux; ```; The test 18 and 43 produced a PNG file that slight smaller that expected:; ```; Test 18: TGaxis 2.................................................. OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 18 FAILED; Result = 15655; Reference = 16076; Error = 421 (was 350); C file result............................................. OK; ```; ```; Test 43: Divided pads and TLatex................................... OK; PDF output................................................ OK; JPG output................................................ OK; PNG output......................................... 43 FAILED; Result = 24855; Reference = 25421; Error = 566 (was 300); C file result............................................. OK; ```. Visual inspection of the png files showed no differences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16492:26,config,config,26,https://root.cern,https://github.com/root-project/root/pull/16492,1,['config'],['config']
Modifiability,"On linux, the compiler flags are cache variables, i.e. they can be; overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5220:39,variab,variables,39,https://root.cern,https://github.com/root-project/root/pull/5220,1,['variab'],['variables']
Modifiability,"On macOS, we rely on the `textutil` executable to set some packaging metadata. However, we can't assume that it's always present. For example, in the nix packages build, it is not available, and there is a hack that disables setting the package metadata:; https://github.com/nixos/nixpkgs/blob/848699d4c1f669af01918b7cfdb438329667ddc2/pkgs/applications/science/misc/root/default.nix#L145. However, the `CPACK_PACKAGE_DESCRIPTION_FILE` and; `CPACK_RESOURCE_FILE_README` metadata that depends on `textutil` is optional and not crucial. It's used only in rare situations, like creating Windows installers automatically. See also the description here:; https://cmake.org/cmake/help/latest/module/CPack.html. It would be more appropriate to not fail the configuration if `textutil` is not found, but instead just to skip setting this metadata.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433:749,config,configuration,749,https://root.cern,https://github.com/root-project/root/pull/16433,1,['config'],['configuration']
Modifiability,"On some configurations such warning causes compilation errors like:. ```; C:\Soft\root\include\TVirtualStreamerInfo.h(80,77): error C4596: 'kIgnoreTObjectStreamer': illegal qualified name in member declaration; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9686:8,config,configurations,8,https://root.cern,https://github.com/root-project/root/pull/9686,1,['config'],['configurations']
Modifiability,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11334:460,config,configuration,460,https://root.cern,https://github.com/root-project/root/pull/11334,1,['config'],['configuration']
Modifiability,"On some platform operator delete taints the memory, so even right after the deletion the information stored by ~TObject is already erased. On those platform we no longer rely on the kNotDelete bit hack and rely on the system (which has tainted the memory assumingly for a reason) to detect the use-after-delete problems. Introduce 2 new functions. TObject::IsDestructed (used by TClonesArray) that detects that the destructor has been run and is active in all configuration. This should be used if the code knows that the memory has not been freed/deleted. ROOT::Detail::HasBeenDeleted(TObject*) with returns true if the platform does not taint the memory and if the kNotDeleted is not set (in all other case, it returns false). This fixes #11330. Backport of https://github.com/root-project/root/pull/11334",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11405:460,config,configuration,460,https://root.cern,https://github.com/root-project/root/pull/11405,1,['config'],['configuration']
Modifiability,"One also can configure websocket timeout when creating THttpServer. Required for TWebCanvas prototype,; but also can be used in other applications",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/503:13,config,configure,13,https://root.cern,https://github.com/root-project/root/pull/503,1,['config'],['configure']
Modifiability,One cannot simply call `delete this` in base class - ; especially when derived class uses multiple inheritance.; Therefore provide OnZeroRefCount implementation in all derived classes; In REve also mark this method as abstract to ensure that such problem; not appear in the future,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8354:99,inherit,inheritance,99,https://root.cern,https://github.com/root-project/root/pull/8354,1,['inherit'],['inheritance']
Modifiability,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5632:1443,variab,variable,1443,https://root.cern,https://github.com/root-project/root/pull/5632,1,['variab'],['variable']
Modifiability,"Only register actual observables as value servers in the `RooEvaluatorWrapper` this avoids that spurious variables appear in user code, which were only meant to be used internally by the new CPU evaluation backend. To make the management of the parameter easier, impose the new reasonable constraint that when resetting the data via `setData()`, the new dataset needs to have the same structure as the old one. It was confirmed with an ATLAS model provided by Will that this commit is fixing the problem of spurious variables. A unit test is also implemented. FYI @will-cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15061:105,variab,variables,105,https://root.cern,https://github.com/root-project/root/pull/15061,2,['variab'],['variables']
Modifiability,"Only then configuration of ""static"" paths is really used.; Small fix in utility.py, which only important with older JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8538:10,config,configuration,10,https://root.cern,https://github.com/root-project/root/pull/8538,1,['config'],['configuration']
Modifiability,Oracle plugin problem with cling/llvm9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7497:7,plugin,plugin,7,https://root.cern,https://github.com/root-project/root/issues/7497,1,['plugin'],['plugin']
Modifiability,"Original commit message:; ""[cxxmodules] Don't complain about redeclaration of declared annotated enum. Extend c14934e to support the case where the enum is deserialized from a module and the currently parsed enum comes from an annotated forward declaration. This patch should allow enabling the cmssw DataFormats/PatCandidates module which currently complains with:. scripts/edmCheckClassVersion -l libCondFormatsL1TObjects.so -x CondFormats/L1TObjects/src/classes_def.xml; DataFormatsL1GlobalTrigger_xr dictionary forward declarations' payload:9:216: error: enumeration previously declared with nonfixed underlying type; ...__attribute__((annotate(""$clingAutoload$DataFormats/L1GlobalTrigger/interface/L1GlobalTriggerReadoutRecord.h""))) L1GtObject : unsigned int;; ^; DataFormats/L1GlobalTrigger/interface/L1GtObject.h:28:6: note: previous declaration is here; enum L1GtObject {; ^. cc: @oshadura, @davidlange6, @smuzaffar, @mrodozov",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5059:103,Extend,Extend,103,https://root.cern,https://github.com/root-project/root/pull/5059,1,['Extend'],['Extend']
